

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Jan 12 00:06:50 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F15356
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	stringtext8,global,class=STRCODE,delta=2
    15                           	psect	stringtext9,global,class=STRCODE,delta=2
    16                           	psect	stringtext10,global,class=STRCODE,delta=2
    17                           	psect	stringtext11,global,class=STRCODE,delta=2
    18                           	psect	stringtext12,global,class=STRCODE,delta=2
    19                           	psect	stringtext13,global,class=STRCODE,delta=2
    20                           	psect	stringtext14,global,class=STRCODE,delta=2
    21                           	psect	stringtext15,global,class=STRCODE,delta=2
    22                           	psect	stringtext16,global,class=STRCODE,delta=2
    23                           	psect	stringtext17,global,class=STRCODE,delta=2
    24                           	psect	stringtext18,global,class=STRCODE,delta=2
    25                           	psect	stringtext19,global,class=STRCODE,delta=2
    26                           	psect	stringtext20,global,class=STRCODE,delta=2
    27                           	psect	cinit,global,class=CODE,merge=1,delta=2
    28                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    29                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    30                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    31                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    32                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    33                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    34                           	psect	inittext,global,class=CODE,delta=2
    35                           	psect	clrtext,global,class=CODE,delta=2
    36                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    37                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    38                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    39                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    40                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    41                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text5,local,class=CODE,merge=1,delta=2
    46                           	psect	text6,local,class=CODE,merge=1,delta=2
    47                           	psect	text7,local,class=CODE,merge=1,delta=2
    48                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text9,local,class=CODE,merge=1,delta=2
    50                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text11,local,class=CODE,merge=1,delta=2
    52                           	psect	text12,local,class=CODE,merge=1,delta=2
    53                           	psect	text13,local,class=CODE,merge=1,delta=2
    54                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text21,local,class=CODE,merge=1,delta=2
    62                           	psect	text22,local,class=CODE,merge=1,delta=2
    63                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    73                           	psect	text33,local,class=CODE,merge=1,delta=2
    74                           	psect	text34,local,class=CODE,merge=1,delta=2
    75                           	psect	text35,local,class=CODE,merge=1,delta=2
    76                           	psect	text36,local,class=CODE,merge=1,delta=2
    77                           	psect	text37,local,class=CODE,merge=1,delta=2
    78                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    79                           	psect	text39,local,class=CODE,merge=1,delta=2
    80                           	psect	text40,local,class=CODE,merge=1,delta=2
    81                           	psect	text41,local,class=CODE,merge=1,delta=2
    82                           	psect	text42,local,class=CODE,merge=1,delta=2
    83                           	psect	text43,local,class=CODE,merge=1,delta=2
    84                           	psect	text44,local,class=CODE,merge=1,delta=2
    85                           	psect	text45,local,class=CODE,merge=1,delta=2
    86                           	psect	text46,local,class=CODE,merge=1,delta=2
    87                           	psect	text47,local,class=CODE,merge=1,delta=2
    88                           	psect	text48,local,class=CODE,merge=1,delta=2
    89                           	psect	text49,local,class=CODE,merge=1,delta=2
    90                           	psect	text50,local,class=CODE,merge=1,delta=2
    91                           	psect	text51,local,class=CODE,merge=1,delta=2
    92                           	psect	text52,local,class=CODE,merge=1,delta=2
    93                           	psect	text53,local,class=CODE,merge=1,delta=2
    94                           	psect	text54,local,class=CODE,merge=1,delta=2
    95                           	psect	text55,local,class=CODE,merge=1,delta=2
    96                           	psect	text56,local,class=CODE,merge=1,delta=2
    97                           	psect	text57,local,class=CODE,merge=1,delta=2
    98                           	psect	text58,local,class=CODE,merge=1,delta=2
    99                           	psect	text59,local,class=CODE,merge=1,delta=2
   100                           	psect	text60,local,class=CODE,merge=1,delta=2
   101                           	psect	text61,local,class=CODE,merge=1,delta=2
   102                           	psect	intentry,global,class=CODE,delta=2
   103                           	psect	text63,local,class=CODE,merge=1,delta=2
   104                           	psect	text64,local,class=CODE,merge=1,delta=2
   105                           	psect	text65,local,class=CODE,merge=1,delta=2
   106                           	psect	text66,local,class=CODE,merge=1,delta=2
   107                           	psect	text67,local,class=CODE,merge=1,delta=2
   108                           	psect	text68,local,class=CODE,merge=1,delta=2
   109                           	psect	text69,local,class=CODE,merge=1,delta=2
   110                           	psect	text70,local,class=CODE,merge=1,delta=2
   111                           	psect	text71,local,class=CODE,merge=1,delta=2
   112                           	psect	text72,local,class=CODE,merge=1,delta=2
   113                           	psect	text73,local,class=CODE,merge=1,delta=2
   114                           	psect	text74,local,class=CODE,merge=1,delta=2
   115                           	psect	text75,local,class=CODE,merge=1,delta=2
   116                           	psect	text76,local,class=CODE,merge=1,delta=2
   117                           	psect	text77,local,class=CODE,merge=1,delta=2
   118                           	psect	text78,local,class=CODE,merge=1,delta=2
   119                           	psect	text79,local,class=CODE,merge=1,delta=2
   120                           	psect	text80,local,class=CODE,merge=1,delta=2
   121                           	psect	text81,local,class=CODE,merge=1,delta=2
   122                           	psect	text82,local,class=CODE,merge=1,delta=2
   123                           	psect	text83,local,class=CODE,merge=1,delta=2
   124                           	psect	text84,local,class=CODE,merge=1,delta=2
   125                           	psect	text85,local,class=CODE,merge=1,delta=2
   126                           	psect	text86,local,class=CODE,merge=1,delta=2
   127                           	dabs	1,0x7E,2
   128  0000                     
   129                           ; Version 2.05
   130                           ; Generated 20/12/2018 GMT
   131                           ; 
   132                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   133                           ; All rights reserved.
   134                           ; 
   135                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   136                           ; 
   137                           ; Redistribution and use in source and binary forms, with or without modification, are
   138                           ; permitted provided that the following conditions are met:
   139                           ; 
   140                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   141                           ;        conditions and the following disclaimer.
   142                           ; 
   143                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   144                           ;        of conditions and the following disclaimer in the documentation and/or other
   145                           ;        materials provided with the distribution.
   146                           ; 
   147                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   148                           ;        software without specific prior written permission.
   149                           ; 
   150                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   151                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   152                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   153                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   154                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   155                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   156                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   157                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   158                           ; 
   159                           ; 
   160                           ; Code-generator required, PIC16F15356 Definitions
   161                           ; 
   162                           ; SFR Addresses
   163  0000                     	;# 
   164  0001                     	;# 
   165  0002                     	;# 
   166  0003                     	;# 
   167  0004                     	;# 
   168  0005                     	;# 
   169  0006                     	;# 
   170  0007                     	;# 
   171  0008                     	;# 
   172  0009                     	;# 
   173  000A                     	;# 
   174  000B                     	;# 
   175  000C                     	;# 
   176  000D                     	;# 
   177  000E                     	;# 
   178  0010                     	;# 
   179  0012                     	;# 
   180  0013                     	;# 
   181  0014                     	;# 
   182  0016                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  009B                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0119                     	;# 
   193  0119                     	;# 
   194  0119                     	;# 
   195  011A                     	;# 
   196  011A                     	;# 
   197  011A                     	;# 
   198  011B                     	;# 
   199  011B                     	;# 
   200  011B                     	;# 
   201  011B                     	;# 
   202  011B                     	;# 
   203  011C                     	;# 
   204  011C                     	;# 
   205  011C                     	;# 
   206  011D                     	;# 
   207  011D                     	;# 
   208  011D                     	;# 
   209  011E                     	;# 
   210  011E                     	;# 
   211  011E                     	;# 
   212  011F                     	;# 
   213  011F                     	;# 
   214  011F                     	;# 
   215  011F                     	;# 
   216  011F                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  018E                     	;# 
   220  018F                     	;# 
   221  0190                     	;# 
   222  0191                     	;# 
   223  0192                     	;# 
   224  0196                     	;# 
   225  0197                     	;# 
   226  0198                     	;# 
   227  0199                     	;# 
   228  019A                     	;# 
   229  019B                     	;# 
   230  019C                     	;# 
   231  020C                     	;# 
   232  020C                     	;# 
   233  020D                     	;# 
   234  020E                     	;# 
   235  020F                     	;# 
   236  020F                     	;# 
   237  0210                     	;# 
   238  0210                     	;# 
   239  0211                     	;# 
   240  0211                     	;# 
   241  028C                     	;# 
   242  028C                     	;# 
   243  028D                     	;# 
   244  028D                     	;# 
   245  028E                     	;# 
   246  028F                     	;# 
   247  0290                     	;# 
   248  0291                     	;# 
   249  030C                     	;# 
   250  030C                     	;# 
   251  030D                     	;# 
   252  030E                     	;# 
   253  030F                     	;# 
   254  0310                     	;# 
   255  0310                     	;# 
   256  0311                     	;# 
   257  0312                     	;# 
   258  0313                     	;# 
   259  0314                     	;# 
   260  0314                     	;# 
   261  0315                     	;# 
   262  0316                     	;# 
   263  0318                     	;# 
   264  0318                     	;# 
   265  0319                     	;# 
   266  031A                     	;# 
   267  031C                     	;# 
   268  031C                     	;# 
   269  031D                     	;# 
   270  031E                     	;# 
   271  038C                     	;# 
   272  038C                     	;# 
   273  038D                     	;# 
   274  038E                     	;# 
   275  058C                     	;# 
   276  058C                     	;# 
   277  058D                     	;# 
   278  058E                     	;# 
   279  058F                     	;# 
   280  058F                     	;# 
   281  0590                     	;# 
   282  0591                     	;# 
   283  0592                     	;# 
   284  0593                     	;# 
   285  059C                     	;# 
   286  059C                     	;# 
   287  059D                     	;# 
   288  059D                     	;# 
   289  059E                     	;# 
   290  059F                     	;# 
   291  060C                     	;# 
   292  060D                     	;# 
   293  060E                     	;# 
   294  060F                     	;# 
   295  0610                     	;# 
   296  0611                     	;# 
   297  0612                     	;# 
   298  0613                     	;# 
   299  0614                     	;# 
   300  070C                     	;# 
   301  070D                     	;# 
   302  070E                     	;# 
   303  070F                     	;# 
   304  0710                     	;# 
   305  0711                     	;# 
   306  0712                     	;# 
   307  0713                     	;# 
   308  0716                     	;# 
   309  0717                     	;# 
   310  0718                     	;# 
   311  0719                     	;# 
   312  071A                     	;# 
   313  071B                     	;# 
   314  071C                     	;# 
   315  071D                     	;# 
   316  0796                     	;# 
   317  0797                     	;# 
   318  0798                     	;# 
   319  0799                     	;# 
   320  079A                     	;# 
   321  079B                     	;# 
   322  080C                     	;# 
   323  080D                     	;# 
   324  080E                     	;# 
   325  080F                     	;# 
   326  0810                     	;# 
   327  0811                     	;# 
   328  0812                     	;# 
   329  0813                     	;# 
   330  0814                     	;# 
   331  081A                     	;# 
   332  081A                     	;# 
   333  081B                     	;# 
   334  081C                     	;# 
   335  081C                     	;# 
   336  081D                     	;# 
   337  081E                     	;# 
   338  081F                     	;# 
   339  088C                     	;# 
   340  088D                     	;# 
   341  088E                     	;# 
   342  088F                     	;# 
   343  0890                     	;# 
   344  0891                     	;# 
   345  0892                     	;# 
   346  0893                     	;# 
   347  0895                     	;# 
   348  0896                     	;# 
   349  090C                     	;# 
   350  090E                     	;# 
   351  090F                     	;# 
   352  091F                     	;# 
   353  098F                     	;# 
   354  098F                     	;# 
   355  0990                     	;# 
   356  0991                     	;# 
   357  0992                     	;# 
   358  0993                     	;# 
   359  0994                     	;# 
   360  0995                     	;# 
   361  0996                     	;# 
   362  0997                     	;# 
   363  0A19                     	;# 
   364  0A19                     	;# 
   365  0A1A                     	;# 
   366  0A1A                     	;# 
   367  0A1B                     	;# 
   368  0A1B                     	;# 
   369  0A1B                     	;# 
   370  0A1C                     	;# 
   371  0A1C                     	;# 
   372  0A1D                     	;# 
   373  0A1D                     	;# 
   374  0A1E                     	;# 
   375  0A1E                     	;# 
   376  0A1F                     	;# 
   377  0A1F                     	;# 
   378  0A1F                     	;# 
   379  1E0F                     	;# 
   380  1E10                     	;# 
   381  1E11                     	;# 
   382  1E12                     	;# 
   383  1E13                     	;# 
   384  1E14                     	;# 
   385  1E15                     	;# 
   386  1E16                     	;# 
   387  1E17                     	;# 
   388  1E18                     	;# 
   389  1E19                     	;# 
   390  1E1A                     	;# 
   391  1E1B                     	;# 
   392  1E1C                     	;# 
   393  1E1D                     	;# 
   394  1E1E                     	;# 
   395  1E1F                     	;# 
   396  1E20                     	;# 
   397  1E21                     	;# 
   398  1E22                     	;# 
   399  1E23                     	;# 
   400  1E24                     	;# 
   401  1E25                     	;# 
   402  1E26                     	;# 
   403  1E27                     	;# 
   404  1E28                     	;# 
   405  1E29                     	;# 
   406  1E2A                     	;# 
   407  1E2B                     	;# 
   408  1E2C                     	;# 
   409  1E2D                     	;# 
   410  1E2E                     	;# 
   411  1E2F                     	;# 
   412  1E30                     	;# 
   413  1E31                     	;# 
   414  1E32                     	;# 
   415  1E33                     	;# 
   416  1E34                     	;# 
   417  1E35                     	;# 
   418  1E36                     	;# 
   419  1E37                     	;# 
   420  1E8F                     	;# 
   421  1E90                     	;# 
   422  1E91                     	;# 
   423  1E92                     	;# 
   424  1E93                     	;# 
   425  1E9C                     	;# 
   426  1EA1                     	;# 
   427  1EA2                     	;# 
   428  1EB1                     	;# 
   429  1EBB                     	;# 
   430  1EBC                     	;# 
   431  1EBD                     	;# 
   432  1EBE                     	;# 
   433  1EC3                     	;# 
   434  1EC5                     	;# 
   435  1EC6                     	;# 
   436  1EC7                     	;# 
   437  1EC8                     	;# 
   438  1EC9                     	;# 
   439  1ECA                     	;# 
   440  1ECB                     	;# 
   441  1ECC                     	;# 
   442  1ECD                     	;# 
   443  1ECE                     	;# 
   444  1F10                     	;# 
   445  1F11                     	;# 
   446  1F12                     	;# 
   447  1F13                     	;# 
   448  1F14                     	;# 
   449  1F15                     	;# 
   450  1F16                     	;# 
   451  1F17                     	;# 
   452  1F18                     	;# 
   453  1F19                     	;# 
   454  1F1A                     	;# 
   455  1F1B                     	;# 
   456  1F1C                     	;# 
   457  1F1D                     	;# 
   458  1F1E                     	;# 
   459  1F1F                     	;# 
   460  1F20                     	;# 
   461  1F21                     	;# 
   462  1F22                     	;# 
   463  1F23                     	;# 
   464  1F24                     	;# 
   465  1F25                     	;# 
   466  1F26                     	;# 
   467  1F27                     	;# 
   468  1F38                     	;# 
   469  1F39                     	;# 
   470  1F3A                     	;# 
   471  1F3B                     	;# 
   472  1F3C                     	;# 
   473  1F3D                     	;# 
   474  1F3E                     	;# 
   475  1F3F                     	;# 
   476  1F43                     	;# 
   477  1F44                     	;# 
   478  1F45                     	;# 
   479  1F46                     	;# 
   480  1F47                     	;# 
   481  1F48                     	;# 
   482  1F49                     	;# 
   483  1F4A                     	;# 
   484  1F4E                     	;# 
   485  1F4F                     	;# 
   486  1F50                     	;# 
   487  1F51                     	;# 
   488  1F52                     	;# 
   489  1F53                     	;# 
   490  1F54                     	;# 
   491  1F55                     	;# 
   492  1F65                     	;# 
   493  1F68                     	;# 
   494  1F69                     	;# 
   495  1F6A                     	;# 
   496  1F6B                     	;# 
   497  1FE4                     	;# 
   498  1FE5                     	;# 
   499  1FE6                     	;# 
   500  1FE7                     	;# 
   501  1FE8                     	;# 
   502  1FE8                     	;# 
   503  1FE9                     	;# 
   504  1FEA                     	;# 
   505  1FEB                     	;# 
   506  1FED                     	;# 
   507  1FEE                     	;# 
   508  1FEF                     	;# 
   509  0000                     	;# 
   510  0001                     	;# 
   511  0002                     	;# 
   512  0003                     	;# 
   513  0004                     	;# 
   514  0005                     	;# 
   515  0006                     	;# 
   516  0007                     	;# 
   517  0008                     	;# 
   518  0009                     	;# 
   519  000A                     	;# 
   520  000B                     	;# 
   521  000C                     	;# 
   522  000D                     	;# 
   523  000E                     	;# 
   524  0010                     	;# 
   525  0012                     	;# 
   526  0013                     	;# 
   527  0014                     	;# 
   528  0016                     	;# 
   529  0018                     	;# 
   530  0019                     	;# 
   531  001A                     	;# 
   532  009B                     	;# 
   533  009B                     	;# 
   534  009C                     	;# 
   535  009D                     	;# 
   536  009E                     	;# 
   537  009F                     	;# 
   538  0119                     	;# 
   539  0119                     	;# 
   540  0119                     	;# 
   541  011A                     	;# 
   542  011A                     	;# 
   543  011A                     	;# 
   544  011B                     	;# 
   545  011B                     	;# 
   546  011B                     	;# 
   547  011B                     	;# 
   548  011B                     	;# 
   549  011C                     	;# 
   550  011C                     	;# 
   551  011C                     	;# 
   552  011D                     	;# 
   553  011D                     	;# 
   554  011D                     	;# 
   555  011E                     	;# 
   556  011E                     	;# 
   557  011E                     	;# 
   558  011F                     	;# 
   559  011F                     	;# 
   560  011F                     	;# 
   561  011F                     	;# 
   562  011F                     	;# 
   563  018C                     	;# 
   564  018D                     	;# 
   565  018E                     	;# 
   566  018F                     	;# 
   567  0190                     	;# 
   568  0191                     	;# 
   569  0192                     	;# 
   570  0196                     	;# 
   571  0197                     	;# 
   572  0198                     	;# 
   573  0199                     	;# 
   574  019A                     	;# 
   575  019B                     	;# 
   576  019C                     	;# 
   577  020C                     	;# 
   578  020C                     	;# 
   579  020D                     	;# 
   580  020E                     	;# 
   581  020F                     	;# 
   582  020F                     	;# 
   583  0210                     	;# 
   584  0210                     	;# 
   585  0211                     	;# 
   586  0211                     	;# 
   587  028C                     	;# 
   588  028C                     	;# 
   589  028D                     	;# 
   590  028D                     	;# 
   591  028E                     	;# 
   592  028F                     	;# 
   593  0290                     	;# 
   594  0291                     	;# 
   595  030C                     	;# 
   596  030C                     	;# 
   597  030D                     	;# 
   598  030E                     	;# 
   599  030F                     	;# 
   600  0310                     	;# 
   601  0310                     	;# 
   602  0311                     	;# 
   603  0312                     	;# 
   604  0313                     	;# 
   605  0314                     	;# 
   606  0314                     	;# 
   607  0315                     	;# 
   608  0316                     	;# 
   609  0318                     	;# 
   610  0318                     	;# 
   611  0319                     	;# 
   612  031A                     	;# 
   613  031C                     	;# 
   614  031C                     	;# 
   615  031D                     	;# 
   616  031E                     	;# 
   617  038C                     	;# 
   618  038C                     	;# 
   619  038D                     	;# 
   620  038E                     	;# 
   621  058C                     	;# 
   622  058C                     	;# 
   623  058D                     	;# 
   624  058E                     	;# 
   625  058F                     	;# 
   626  058F                     	;# 
   627  0590                     	;# 
   628  0591                     	;# 
   629  0592                     	;# 
   630  0593                     	;# 
   631  059C                     	;# 
   632  059C                     	;# 
   633  059D                     	;# 
   634  059D                     	;# 
   635  059E                     	;# 
   636  059F                     	;# 
   637  060C                     	;# 
   638  060D                     	;# 
   639  060E                     	;# 
   640  060F                     	;# 
   641  0610                     	;# 
   642  0611                     	;# 
   643  0612                     	;# 
   644  0613                     	;# 
   645  0614                     	;# 
   646  070C                     	;# 
   647  070D                     	;# 
   648  070E                     	;# 
   649  070F                     	;# 
   650  0710                     	;# 
   651  0711                     	;# 
   652  0712                     	;# 
   653  0713                     	;# 
   654  0716                     	;# 
   655  0717                     	;# 
   656  0718                     	;# 
   657  0719                     	;# 
   658  071A                     	;# 
   659  071B                     	;# 
   660  071C                     	;# 
   661  071D                     	;# 
   662  0796                     	;# 
   663  0797                     	;# 
   664  0798                     	;# 
   665  0799                     	;# 
   666  079A                     	;# 
   667  079B                     	;# 
   668  080C                     	;# 
   669  080D                     	;# 
   670  080E                     	;# 
   671  080F                     	;# 
   672  0810                     	;# 
   673  0811                     	;# 
   674  0812                     	;# 
   675  0813                     	;# 
   676  0814                     	;# 
   677  081A                     	;# 
   678  081A                     	;# 
   679  081B                     	;# 
   680  081C                     	;# 
   681  081C                     	;# 
   682  081D                     	;# 
   683  081E                     	;# 
   684  081F                     	;# 
   685  088C                     	;# 
   686  088D                     	;# 
   687  088E                     	;# 
   688  088F                     	;# 
   689  0890                     	;# 
   690  0891                     	;# 
   691  0892                     	;# 
   692  0893                     	;# 
   693  0895                     	;# 
   694  0896                     	;# 
   695  090C                     	;# 
   696  090E                     	;# 
   697  090F                     	;# 
   698  091F                     	;# 
   699  098F                     	;# 
   700  098F                     	;# 
   701  0990                     	;# 
   702  0991                     	;# 
   703  0992                     	;# 
   704  0993                     	;# 
   705  0994                     	;# 
   706  0995                     	;# 
   707  0996                     	;# 
   708  0997                     	;# 
   709  0A19                     	;# 
   710  0A19                     	;# 
   711  0A1A                     	;# 
   712  0A1A                     	;# 
   713  0A1B                     	;# 
   714  0A1B                     	;# 
   715  0A1B                     	;# 
   716  0A1C                     	;# 
   717  0A1C                     	;# 
   718  0A1D                     	;# 
   719  0A1D                     	;# 
   720  0A1E                     	;# 
   721  0A1E                     	;# 
   722  0A1F                     	;# 
   723  0A1F                     	;# 
   724  0A1F                     	;# 
   725  1E0F                     	;# 
   726  1E10                     	;# 
   727  1E11                     	;# 
   728  1E12                     	;# 
   729  1E13                     	;# 
   730  1E14                     	;# 
   731  1E15                     	;# 
   732  1E16                     	;# 
   733  1E17                     	;# 
   734  1E18                     	;# 
   735  1E19                     	;# 
   736  1E1A                     	;# 
   737  1E1B                     	;# 
   738  1E1C                     	;# 
   739  1E1D                     	;# 
   740  1E1E                     	;# 
   741  1E1F                     	;# 
   742  1E20                     	;# 
   743  1E21                     	;# 
   744  1E22                     	;# 
   745  1E23                     	;# 
   746  1E24                     	;# 
   747  1E25                     	;# 
   748  1E26                     	;# 
   749  1E27                     	;# 
   750  1E28                     	;# 
   751  1E29                     	;# 
   752  1E2A                     	;# 
   753  1E2B                     	;# 
   754  1E2C                     	;# 
   755  1E2D                     	;# 
   756  1E2E                     	;# 
   757  1E2F                     	;# 
   758  1E30                     	;# 
   759  1E31                     	;# 
   760  1E32                     	;# 
   761  1E33                     	;# 
   762  1E34                     	;# 
   763  1E35                     	;# 
   764  1E36                     	;# 
   765  1E37                     	;# 
   766  1E8F                     	;# 
   767  1E90                     	;# 
   768  1E91                     	;# 
   769  1E92                     	;# 
   770  1E93                     	;# 
   771  1E9C                     	;# 
   772  1EA1                     	;# 
   773  1EA2                     	;# 
   774  1EB1                     	;# 
   775  1EBB                     	;# 
   776  1EBC                     	;# 
   777  1EBD                     	;# 
   778  1EBE                     	;# 
   779  1EC3                     	;# 
   780  1EC5                     	;# 
   781  1EC6                     	;# 
   782  1EC7                     	;# 
   783  1EC8                     	;# 
   784  1EC9                     	;# 
   785  1ECA                     	;# 
   786  1ECB                     	;# 
   787  1ECC                     	;# 
   788  1ECD                     	;# 
   789  1ECE                     	;# 
   790  1F10                     	;# 
   791  1F11                     	;# 
   792  1F12                     	;# 
   793  1F13                     	;# 
   794  1F14                     	;# 
   795  1F15                     	;# 
   796  1F16                     	;# 
   797  1F17                     	;# 
   798  1F18                     	;# 
   799  1F19                     	;# 
   800  1F1A                     	;# 
   801  1F1B                     	;# 
   802  1F1C                     	;# 
   803  1F1D                     	;# 
   804  1F1E                     	;# 
   805  1F1F                     	;# 
   806  1F20                     	;# 
   807  1F21                     	;# 
   808  1F22                     	;# 
   809  1F23                     	;# 
   810  1F24                     	;# 
   811  1F25                     	;# 
   812  1F26                     	;# 
   813  1F27                     	;# 
   814  1F38                     	;# 
   815  1F39                     	;# 
   816  1F3A                     	;# 
   817  1F3B                     	;# 
   818  1F3C                     	;# 
   819  1F3D                     	;# 
   820  1F3E                     	;# 
   821  1F3F                     	;# 
   822  1F43                     	;# 
   823  1F44                     	;# 
   824  1F45                     	;# 
   825  1F46                     	;# 
   826  1F47                     	;# 
   827  1F48                     	;# 
   828  1F49                     	;# 
   829  1F4A                     	;# 
   830  1F4E                     	;# 
   831  1F4F                     	;# 
   832  1F50                     	;# 
   833  1F51                     	;# 
   834  1F52                     	;# 
   835  1F53                     	;# 
   836  1F54                     	;# 
   837  1F55                     	;# 
   838  1F65                     	;# 
   839  1F68                     	;# 
   840  1F69                     	;# 
   841  1F6A                     	;# 
   842  1F6B                     	;# 
   843  1FE4                     	;# 
   844  1FE5                     	;# 
   845  1FE6                     	;# 
   846  1FE7                     	;# 
   847  1FE8                     	;# 
   848  1FE8                     	;# 
   849  1FE9                     	;# 
   850  1FEA                     	;# 
   851  1FEB                     	;# 
   852  1FED                     	;# 
   853  1FEE                     	;# 
   854  1FEF                     	;# 
   855  0000                     	;# 
   856  0001                     	;# 
   857  0002                     	;# 
   858  0003                     	;# 
   859  0004                     	;# 
   860  0005                     	;# 
   861  0006                     	;# 
   862  0007                     	;# 
   863  0008                     	;# 
   864  0009                     	;# 
   865  000A                     	;# 
   866  000B                     	;# 
   867  000C                     	;# 
   868  000D                     	;# 
   869  000E                     	;# 
   870  0010                     	;# 
   871  0012                     	;# 
   872  0013                     	;# 
   873  0014                     	;# 
   874  0016                     	;# 
   875  0018                     	;# 
   876  0019                     	;# 
   877  001A                     	;# 
   878  009B                     	;# 
   879  009B                     	;# 
   880  009C                     	;# 
   881  009D                     	;# 
   882  009E                     	;# 
   883  009F                     	;# 
   884  0119                     	;# 
   885  0119                     	;# 
   886  0119                     	;# 
   887  011A                     	;# 
   888  011A                     	;# 
   889  011A                     	;# 
   890  011B                     	;# 
   891  011B                     	;# 
   892  011B                     	;# 
   893  011B                     	;# 
   894  011B                     	;# 
   895  011C                     	;# 
   896  011C                     	;# 
   897  011C                     	;# 
   898  011D                     	;# 
   899  011D                     	;# 
   900  011D                     	;# 
   901  011E                     	;# 
   902  011E                     	;# 
   903  011E                     	;# 
   904  011F                     	;# 
   905  011F                     	;# 
   906  011F                     	;# 
   907  011F                     	;# 
   908  011F                     	;# 
   909  018C                     	;# 
   910  018D                     	;# 
   911  018E                     	;# 
   912  018F                     	;# 
   913  0190                     	;# 
   914  0191                     	;# 
   915  0192                     	;# 
   916  0196                     	;# 
   917  0197                     	;# 
   918  0198                     	;# 
   919  0199                     	;# 
   920  019A                     	;# 
   921  019B                     	;# 
   922  019C                     	;# 
   923  020C                     	;# 
   924  020C                     	;# 
   925  020D                     	;# 
   926  020E                     	;# 
   927  020F                     	;# 
   928  020F                     	;# 
   929  0210                     	;# 
   930  0210                     	;# 
   931  0211                     	;# 
   932  0211                     	;# 
   933  028C                     	;# 
   934  028C                     	;# 
   935  028D                     	;# 
   936  028D                     	;# 
   937  028E                     	;# 
   938  028F                     	;# 
   939  0290                     	;# 
   940  0291                     	;# 
   941  030C                     	;# 
   942  030C                     	;# 
   943  030D                     	;# 
   944  030E                     	;# 
   945  030F                     	;# 
   946  0310                     	;# 
   947  0310                     	;# 
   948  0311                     	;# 
   949  0312                     	;# 
   950  0313                     	;# 
   951  0314                     	;# 
   952  0314                     	;# 
   953  0315                     	;# 
   954  0316                     	;# 
   955  0318                     	;# 
   956  0318                     	;# 
   957  0319                     	;# 
   958  031A                     	;# 
   959  031C                     	;# 
   960  031C                     	;# 
   961  031D                     	;# 
   962  031E                     	;# 
   963  038C                     	;# 
   964  038C                     	;# 
   965  038D                     	;# 
   966  038E                     	;# 
   967  058C                     	;# 
   968  058C                     	;# 
   969  058D                     	;# 
   970  058E                     	;# 
   971  058F                     	;# 
   972  058F                     	;# 
   973  0590                     	;# 
   974  0591                     	;# 
   975  0592                     	;# 
   976  0593                     	;# 
   977  059C                     	;# 
   978  059C                     	;# 
   979  059D                     	;# 
   980  059D                     	;# 
   981  059E                     	;# 
   982  059F                     	;# 
   983  060C                     	;# 
   984  060D                     	;# 
   985  060E                     	;# 
   986  060F                     	;# 
   987  0610                     	;# 
   988  0611                     	;# 
   989  0612                     	;# 
   990  0613                     	;# 
   991  0614                     	;# 
   992  070C                     	;# 
   993  070D                     	;# 
   994  070E                     	;# 
   995  070F                     	;# 
   996  0710                     	;# 
   997  0711                     	;# 
   998  0712                     	;# 
   999  0713                     	;# 
  1000  0716                     	;# 
  1001  0717                     	;# 
  1002  0718                     	;# 
  1003  0719                     	;# 
  1004  071A                     	;# 
  1005  071B                     	;# 
  1006  071C                     	;# 
  1007  071D                     	;# 
  1008  0796                     	;# 
  1009  0797                     	;# 
  1010  0798                     	;# 
  1011  0799                     	;# 
  1012  079A                     	;# 
  1013  079B                     	;# 
  1014  080C                     	;# 
  1015  080D                     	;# 
  1016  080E                     	;# 
  1017  080F                     	;# 
  1018  0810                     	;# 
  1019  0811                     	;# 
  1020  0812                     	;# 
  1021  0813                     	;# 
  1022  0814                     	;# 
  1023  081A                     	;# 
  1024  081A                     	;# 
  1025  081B                     	;# 
  1026  081C                     	;# 
  1027  081C                     	;# 
  1028  081D                     	;# 
  1029  081E                     	;# 
  1030  081F                     	;# 
  1031  088C                     	;# 
  1032  088D                     	;# 
  1033  088E                     	;# 
  1034  088F                     	;# 
  1035  0890                     	;# 
  1036  0891                     	;# 
  1037  0892                     	;# 
  1038  0893                     	;# 
  1039  0895                     	;# 
  1040  0896                     	;# 
  1041  090C                     	;# 
  1042  090E                     	;# 
  1043  090F                     	;# 
  1044  091F                     	;# 
  1045  098F                     	;# 
  1046  098F                     	;# 
  1047  0990                     	;# 
  1048  0991                     	;# 
  1049  0992                     	;# 
  1050  0993                     	;# 
  1051  0994                     	;# 
  1052  0995                     	;# 
  1053  0996                     	;# 
  1054  0997                     	;# 
  1055  0A19                     	;# 
  1056  0A19                     	;# 
  1057  0A1A                     	;# 
  1058  0A1A                     	;# 
  1059  0A1B                     	;# 
  1060  0A1B                     	;# 
  1061  0A1B                     	;# 
  1062  0A1C                     	;# 
  1063  0A1C                     	;# 
  1064  0A1D                     	;# 
  1065  0A1D                     	;# 
  1066  0A1E                     	;# 
  1067  0A1E                     	;# 
  1068  0A1F                     	;# 
  1069  0A1F                     	;# 
  1070  0A1F                     	;# 
  1071  1E0F                     	;# 
  1072  1E10                     	;# 
  1073  1E11                     	;# 
  1074  1E12                     	;# 
  1075  1E13                     	;# 
  1076  1E14                     	;# 
  1077  1E15                     	;# 
  1078  1E16                     	;# 
  1079  1E17                     	;# 
  1080  1E18                     	;# 
  1081  1E19                     	;# 
  1082  1E1A                     	;# 
  1083  1E1B                     	;# 
  1084  1E1C                     	;# 
  1085  1E1D                     	;# 
  1086  1E1E                     	;# 
  1087  1E1F                     	;# 
  1088  1E20                     	;# 
  1089  1E21                     	;# 
  1090  1E22                     	;# 
  1091  1E23                     	;# 
  1092  1E24                     	;# 
  1093  1E25                     	;# 
  1094  1E26                     	;# 
  1095  1E27                     	;# 
  1096  1E28                     	;# 
  1097  1E29                     	;# 
  1098  1E2A                     	;# 
  1099  1E2B                     	;# 
  1100  1E2C                     	;# 
  1101  1E2D                     	;# 
  1102  1E2E                     	;# 
  1103  1E2F                     	;# 
  1104  1E30                     	;# 
  1105  1E31                     	;# 
  1106  1E32                     	;# 
  1107  1E33                     	;# 
  1108  1E34                     	;# 
  1109  1E35                     	;# 
  1110  1E36                     	;# 
  1111  1E37                     	;# 
  1112  1E8F                     	;# 
  1113  1E90                     	;# 
  1114  1E91                     	;# 
  1115  1E92                     	;# 
  1116  1E93                     	;# 
  1117  1E9C                     	;# 
  1118  1EA1                     	;# 
  1119  1EA2                     	;# 
  1120  1EB1                     	;# 
  1121  1EBB                     	;# 
  1122  1EBC                     	;# 
  1123  1EBD                     	;# 
  1124  1EBE                     	;# 
  1125  1EC3                     	;# 
  1126  1EC5                     	;# 
  1127  1EC6                     	;# 
  1128  1EC7                     	;# 
  1129  1EC8                     	;# 
  1130  1EC9                     	;# 
  1131  1ECA                     	;# 
  1132  1ECB                     	;# 
  1133  1ECC                     	;# 
  1134  1ECD                     	;# 
  1135  1ECE                     	;# 
  1136  1F10                     	;# 
  1137  1F11                     	;# 
  1138  1F12                     	;# 
  1139  1F13                     	;# 
  1140  1F14                     	;# 
  1141  1F15                     	;# 
  1142  1F16                     	;# 
  1143  1F17                     	;# 
  1144  1F18                     	;# 
  1145  1F19                     	;# 
  1146  1F1A                     	;# 
  1147  1F1B                     	;# 
  1148  1F1C                     	;# 
  1149  1F1D                     	;# 
  1150  1F1E                     	;# 
  1151  1F1F                     	;# 
  1152  1F20                     	;# 
  1153  1F21                     	;# 
  1154  1F22                     	;# 
  1155  1F23                     	;# 
  1156  1F24                     	;# 
  1157  1F25                     	;# 
  1158  1F26                     	;# 
  1159  1F27                     	;# 
  1160  1F38                     	;# 
  1161  1F39                     	;# 
  1162  1F3A                     	;# 
  1163  1F3B                     	;# 
  1164  1F3C                     	;# 
  1165  1F3D                     	;# 
  1166  1F3E                     	;# 
  1167  1F3F                     	;# 
  1168  1F43                     	;# 
  1169  1F44                     	;# 
  1170  1F45                     	;# 
  1171  1F46                     	;# 
  1172  1F47                     	;# 
  1173  1F48                     	;# 
  1174  1F49                     	;# 
  1175  1F4A                     	;# 
  1176  1F4E                     	;# 
  1177  1F4F                     	;# 
  1178  1F50                     	;# 
  1179  1F51                     	;# 
  1180  1F52                     	;# 
  1181  1F53                     	;# 
  1182  1F54                     	;# 
  1183  1F55                     	;# 
  1184  1F65                     	;# 
  1185  1F68                     	;# 
  1186  1F69                     	;# 
  1187  1F6A                     	;# 
  1188  1F6B                     	;# 
  1189  1FE4                     	;# 
  1190  1FE5                     	;# 
  1191  1FE6                     	;# 
  1192  1FE7                     	;# 
  1193  1FE8                     	;# 
  1194  1FE8                     	;# 
  1195  1FE9                     	;# 
  1196  1FEA                     	;# 
  1197  1FEB                     	;# 
  1198  1FED                     	;# 
  1199  1FEE                     	;# 
  1200  1FEF                     	;# 
  1201  0000                     	;# 
  1202  0001                     	;# 
  1203  0002                     	;# 
  1204  0003                     	;# 
  1205  0004                     	;# 
  1206  0005                     	;# 
  1207  0006                     	;# 
  1208  0007                     	;# 
  1209  0008                     	;# 
  1210  0009                     	;# 
  1211  000A                     	;# 
  1212  000B                     	;# 
  1213  000C                     	;# 
  1214  000D                     	;# 
  1215  000E                     	;# 
  1216  0010                     	;# 
  1217  0012                     	;# 
  1218  0013                     	;# 
  1219  0014                     	;# 
  1220  0016                     	;# 
  1221  0018                     	;# 
  1222  0019                     	;# 
  1223  001A                     	;# 
  1224  009B                     	;# 
  1225  009B                     	;# 
  1226  009C                     	;# 
  1227  009D                     	;# 
  1228  009E                     	;# 
  1229  009F                     	;# 
  1230  0119                     	;# 
  1231  0119                     	;# 
  1232  0119                     	;# 
  1233  011A                     	;# 
  1234  011A                     	;# 
  1235  011A                     	;# 
  1236  011B                     	;# 
  1237  011B                     	;# 
  1238  011B                     	;# 
  1239  011B                     	;# 
  1240  011B                     	;# 
  1241  011C                     	;# 
  1242  011C                     	;# 
  1243  011C                     	;# 
  1244  011D                     	;# 
  1245  011D                     	;# 
  1246  011D                     	;# 
  1247  011E                     	;# 
  1248  011E                     	;# 
  1249  011E                     	;# 
  1250  011F                     	;# 
  1251  011F                     	;# 
  1252  011F                     	;# 
  1253  011F                     	;# 
  1254  011F                     	;# 
  1255  018C                     	;# 
  1256  018D                     	;# 
  1257  018E                     	;# 
  1258  018F                     	;# 
  1259  0190                     	;# 
  1260  0191                     	;# 
  1261  0192                     	;# 
  1262  0196                     	;# 
  1263  0197                     	;# 
  1264  0198                     	;# 
  1265  0199                     	;# 
  1266  019A                     	;# 
  1267  019B                     	;# 
  1268  019C                     	;# 
  1269  020C                     	;# 
  1270  020C                     	;# 
  1271  020D                     	;# 
  1272  020E                     	;# 
  1273  020F                     	;# 
  1274  020F                     	;# 
  1275  0210                     	;# 
  1276  0210                     	;# 
  1277  0211                     	;# 
  1278  0211                     	;# 
  1279  028C                     	;# 
  1280  028C                     	;# 
  1281  028D                     	;# 
  1282  028D                     	;# 
  1283  028E                     	;# 
  1284  028F                     	;# 
  1285  0290                     	;# 
  1286  0291                     	;# 
  1287  030C                     	;# 
  1288  030C                     	;# 
  1289  030D                     	;# 
  1290  030E                     	;# 
  1291  030F                     	;# 
  1292  0310                     	;# 
  1293  0310                     	;# 
  1294  0311                     	;# 
  1295  0312                     	;# 
  1296  0313                     	;# 
  1297  0314                     	;# 
  1298  0314                     	;# 
  1299  0315                     	;# 
  1300  0316                     	;# 
  1301  0318                     	;# 
  1302  0318                     	;# 
  1303  0319                     	;# 
  1304  031A                     	;# 
  1305  031C                     	;# 
  1306  031C                     	;# 
  1307  031D                     	;# 
  1308  031E                     	;# 
  1309  038C                     	;# 
  1310  038C                     	;# 
  1311  038D                     	;# 
  1312  038E                     	;# 
  1313  058C                     	;# 
  1314  058C                     	;# 
  1315  058D                     	;# 
  1316  058E                     	;# 
  1317  058F                     	;# 
  1318  058F                     	;# 
  1319  0590                     	;# 
  1320  0591                     	;# 
  1321  0592                     	;# 
  1322  0593                     	;# 
  1323  059C                     	;# 
  1324  059C                     	;# 
  1325  059D                     	;# 
  1326  059D                     	;# 
  1327  059E                     	;# 
  1328  059F                     	;# 
  1329  060C                     	;# 
  1330  060D                     	;# 
  1331  060E                     	;# 
  1332  060F                     	;# 
  1333  0610                     	;# 
  1334  0611                     	;# 
  1335  0612                     	;# 
  1336  0613                     	;# 
  1337  0614                     	;# 
  1338  070C                     	;# 
  1339  070D                     	;# 
  1340  070E                     	;# 
  1341  070F                     	;# 
  1342  0710                     	;# 
  1343  0711                     	;# 
  1344  0712                     	;# 
  1345  0713                     	;# 
  1346  0716                     	;# 
  1347  0717                     	;# 
  1348  0718                     	;# 
  1349  0719                     	;# 
  1350  071A                     	;# 
  1351  071B                     	;# 
  1352  071C                     	;# 
  1353  071D                     	;# 
  1354  0796                     	;# 
  1355  0797                     	;# 
  1356  0798                     	;# 
  1357  0799                     	;# 
  1358  079A                     	;# 
  1359  079B                     	;# 
  1360  080C                     	;# 
  1361  080D                     	;# 
  1362  080E                     	;# 
  1363  080F                     	;# 
  1364  0810                     	;# 
  1365  0811                     	;# 
  1366  0812                     	;# 
  1367  0813                     	;# 
  1368  0814                     	;# 
  1369  081A                     	;# 
  1370  081A                     	;# 
  1371  081B                     	;# 
  1372  081C                     	;# 
  1373  081C                     	;# 
  1374  081D                     	;# 
  1375  081E                     	;# 
  1376  081F                     	;# 
  1377  088C                     	;# 
  1378  088D                     	;# 
  1379  088E                     	;# 
  1380  088F                     	;# 
  1381  0890                     	;# 
  1382  0891                     	;# 
  1383  0892                     	;# 
  1384  0893                     	;# 
  1385  0895                     	;# 
  1386  0896                     	;# 
  1387  090C                     	;# 
  1388  090E                     	;# 
  1389  090F                     	;# 
  1390  091F                     	;# 
  1391  098F                     	;# 
  1392  098F                     	;# 
  1393  0990                     	;# 
  1394  0991                     	;# 
  1395  0992                     	;# 
  1396  0993                     	;# 
  1397  0994                     	;# 
  1398  0995                     	;# 
  1399  0996                     	;# 
  1400  0997                     	;# 
  1401  0A19                     	;# 
  1402  0A19                     	;# 
  1403  0A1A                     	;# 
  1404  0A1A                     	;# 
  1405  0A1B                     	;# 
  1406  0A1B                     	;# 
  1407  0A1B                     	;# 
  1408  0A1C                     	;# 
  1409  0A1C                     	;# 
  1410  0A1D                     	;# 
  1411  0A1D                     	;# 
  1412  0A1E                     	;# 
  1413  0A1E                     	;# 
  1414  0A1F                     	;# 
  1415  0A1F                     	;# 
  1416  0A1F                     	;# 
  1417  1E0F                     	;# 
  1418  1E10                     	;# 
  1419  1E11                     	;# 
  1420  1E12                     	;# 
  1421  1E13                     	;# 
  1422  1E14                     	;# 
  1423  1E15                     	;# 
  1424  1E16                     	;# 
  1425  1E17                     	;# 
  1426  1E18                     	;# 
  1427  1E19                     	;# 
  1428  1E1A                     	;# 
  1429  1E1B                     	;# 
  1430  1E1C                     	;# 
  1431  1E1D                     	;# 
  1432  1E1E                     	;# 
  1433  1E1F                     	;# 
  1434  1E20                     	;# 
  1435  1E21                     	;# 
  1436  1E22                     	;# 
  1437  1E23                     	;# 
  1438  1E24                     	;# 
  1439  1E25                     	;# 
  1440  1E26                     	;# 
  1441  1E27                     	;# 
  1442  1E28                     	;# 
  1443  1E29                     	;# 
  1444  1E2A                     	;# 
  1445  1E2B                     	;# 
  1446  1E2C                     	;# 
  1447  1E2D                     	;# 
  1448  1E2E                     	;# 
  1449  1E2F                     	;# 
  1450  1E30                     	;# 
  1451  1E31                     	;# 
  1452  1E32                     	;# 
  1453  1E33                     	;# 
  1454  1E34                     	;# 
  1455  1E35                     	;# 
  1456  1E36                     	;# 
  1457  1E37                     	;# 
  1458  1E8F                     	;# 
  1459  1E90                     	;# 
  1460  1E91                     	;# 
  1461  1E92                     	;# 
  1462  1E93                     	;# 
  1463  1E9C                     	;# 
  1464  1EA1                     	;# 
  1465  1EA2                     	;# 
  1466  1EB1                     	;# 
  1467  1EBB                     	;# 
  1468  1EBC                     	;# 
  1469  1EBD                     	;# 
  1470  1EBE                     	;# 
  1471  1EC3                     	;# 
  1472  1EC5                     	;# 
  1473  1EC6                     	;# 
  1474  1EC7                     	;# 
  1475  1EC8                     	;# 
  1476  1EC9                     	;# 
  1477  1ECA                     	;# 
  1478  1ECB                     	;# 
  1479  1ECC                     	;# 
  1480  1ECD                     	;# 
  1481  1ECE                     	;# 
  1482  1F10                     	;# 
  1483  1F11                     	;# 
  1484  1F12                     	;# 
  1485  1F13                     	;# 
  1486  1F14                     	;# 
  1487  1F15                     	;# 
  1488  1F16                     	;# 
  1489  1F17                     	;# 
  1490  1F18                     	;# 
  1491  1F19                     	;# 
  1492  1F1A                     	;# 
  1493  1F1B                     	;# 
  1494  1F1C                     	;# 
  1495  1F1D                     	;# 
  1496  1F1E                     	;# 
  1497  1F1F                     	;# 
  1498  1F20                     	;# 
  1499  1F21                     	;# 
  1500  1F22                     	;# 
  1501  1F23                     	;# 
  1502  1F24                     	;# 
  1503  1F25                     	;# 
  1504  1F26                     	;# 
  1505  1F27                     	;# 
  1506  1F38                     	;# 
  1507  1F39                     	;# 
  1508  1F3A                     	;# 
  1509  1F3B                     	;# 
  1510  1F3C                     	;# 
  1511  1F3D                     	;# 
  1512  1F3E                     	;# 
  1513  1F3F                     	;# 
  1514  1F43                     	;# 
  1515  1F44                     	;# 
  1516  1F45                     	;# 
  1517  1F46                     	;# 
  1518  1F47                     	;# 
  1519  1F48                     	;# 
  1520  1F49                     	;# 
  1521  1F4A                     	;# 
  1522  1F4E                     	;# 
  1523  1F4F                     	;# 
  1524  1F50                     	;# 
  1525  1F51                     	;# 
  1526  1F52                     	;# 
  1527  1F53                     	;# 
  1528  1F54                     	;# 
  1529  1F55                     	;# 
  1530  1F65                     	;# 
  1531  1F68                     	;# 
  1532  1F69                     	;# 
  1533  1F6A                     	;# 
  1534  1F6B                     	;# 
  1535  1FE4                     	;# 
  1536  1FE5                     	;# 
  1537  1FE6                     	;# 
  1538  1FE7                     	;# 
  1539  1FE8                     	;# 
  1540  1FE8                     	;# 
  1541  1FE9                     	;# 
  1542  1FEA                     	;# 
  1543  1FEB                     	;# 
  1544  1FED                     	;# 
  1545  1FEE                     	;# 
  1546  1FEF                     	;# 
  1547  0000                     	;# 
  1548  0001                     	;# 
  1549  0002                     	;# 
  1550  0003                     	;# 
  1551  0004                     	;# 
  1552  0005                     	;# 
  1553  0006                     	;# 
  1554  0007                     	;# 
  1555  0008                     	;# 
  1556  0009                     	;# 
  1557  000A                     	;# 
  1558  000B                     	;# 
  1559  000C                     	;# 
  1560  000D                     	;# 
  1561  000E                     	;# 
  1562  0010                     	;# 
  1563  0012                     	;# 
  1564  0013                     	;# 
  1565  0014                     	;# 
  1566  0016                     	;# 
  1567  0018                     	;# 
  1568  0019                     	;# 
  1569  001A                     	;# 
  1570  009B                     	;# 
  1571  009B                     	;# 
  1572  009C                     	;# 
  1573  009D                     	;# 
  1574  009E                     	;# 
  1575  009F                     	;# 
  1576  0119                     	;# 
  1577  0119                     	;# 
  1578  0119                     	;# 
  1579  011A                     	;# 
  1580  011A                     	;# 
  1581  011A                     	;# 
  1582  011B                     	;# 
  1583  011B                     	;# 
  1584  011B                     	;# 
  1585  011B                     	;# 
  1586  011B                     	;# 
  1587  011C                     	;# 
  1588  011C                     	;# 
  1589  011C                     	;# 
  1590  011D                     	;# 
  1591  011D                     	;# 
  1592  011D                     	;# 
  1593  011E                     	;# 
  1594  011E                     	;# 
  1595  011E                     	;# 
  1596  011F                     	;# 
  1597  011F                     	;# 
  1598  011F                     	;# 
  1599  011F                     	;# 
  1600  011F                     	;# 
  1601  018C                     	;# 
  1602  018D                     	;# 
  1603  018E                     	;# 
  1604  018F                     	;# 
  1605  0190                     	;# 
  1606  0191                     	;# 
  1607  0192                     	;# 
  1608  0196                     	;# 
  1609  0197                     	;# 
  1610  0198                     	;# 
  1611  0199                     	;# 
  1612  019A                     	;# 
  1613  019B                     	;# 
  1614  019C                     	;# 
  1615  020C                     	;# 
  1616  020C                     	;# 
  1617  020D                     	;# 
  1618  020E                     	;# 
  1619  020F                     	;# 
  1620  020F                     	;# 
  1621  0210                     	;# 
  1622  0210                     	;# 
  1623  0211                     	;# 
  1624  0211                     	;# 
  1625  028C                     	;# 
  1626  028C                     	;# 
  1627  028D                     	;# 
  1628  028D                     	;# 
  1629  028E                     	;# 
  1630  028F                     	;# 
  1631  0290                     	;# 
  1632  0291                     	;# 
  1633  030C                     	;# 
  1634  030C                     	;# 
  1635  030D                     	;# 
  1636  030E                     	;# 
  1637  030F                     	;# 
  1638  0310                     	;# 
  1639  0310                     	;# 
  1640  0311                     	;# 
  1641  0312                     	;# 
  1642  0313                     	;# 
  1643  0314                     	;# 
  1644  0314                     	;# 
  1645  0315                     	;# 
  1646  0316                     	;# 
  1647  0318                     	;# 
  1648  0318                     	;# 
  1649  0319                     	;# 
  1650  031A                     	;# 
  1651  031C                     	;# 
  1652  031C                     	;# 
  1653  031D                     	;# 
  1654  031E                     	;# 
  1655  038C                     	;# 
  1656  038C                     	;# 
  1657  038D                     	;# 
  1658  038E                     	;# 
  1659  058C                     	;# 
  1660  058C                     	;# 
  1661  058D                     	;# 
  1662  058E                     	;# 
  1663  058F                     	;# 
  1664  058F                     	;# 
  1665  0590                     	;# 
  1666  0591                     	;# 
  1667  0592                     	;# 
  1668  0593                     	;# 
  1669  059C                     	;# 
  1670  059C                     	;# 
  1671  059D                     	;# 
  1672  059D                     	;# 
  1673  059E                     	;# 
  1674  059F                     	;# 
  1675  060C                     	;# 
  1676  060D                     	;# 
  1677  060E                     	;# 
  1678  060F                     	;# 
  1679  0610                     	;# 
  1680  0611                     	;# 
  1681  0612                     	;# 
  1682  0613                     	;# 
  1683  0614                     	;# 
  1684  070C                     	;# 
  1685  070D                     	;# 
  1686  070E                     	;# 
  1687  070F                     	;# 
  1688  0710                     	;# 
  1689  0711                     	;# 
  1690  0712                     	;# 
  1691  0713                     	;# 
  1692  0716                     	;# 
  1693  0717                     	;# 
  1694  0718                     	;# 
  1695  0719                     	;# 
  1696  071A                     	;# 
  1697  071B                     	;# 
  1698  071C                     	;# 
  1699  071D                     	;# 
  1700  0796                     	;# 
  1701  0797                     	;# 
  1702  0798                     	;# 
  1703  0799                     	;# 
  1704  079A                     	;# 
  1705  079B                     	;# 
  1706  080C                     	;# 
  1707  080D                     	;# 
  1708  080E                     	;# 
  1709  080F                     	;# 
  1710  0810                     	;# 
  1711  0811                     	;# 
  1712  0812                     	;# 
  1713  0813                     	;# 
  1714  0814                     	;# 
  1715  081A                     	;# 
  1716  081A                     	;# 
  1717  081B                     	;# 
  1718  081C                     	;# 
  1719  081C                     	;# 
  1720  081D                     	;# 
  1721  081E                     	;# 
  1722  081F                     	;# 
  1723  088C                     	;# 
  1724  088D                     	;# 
  1725  088E                     	;# 
  1726  088F                     	;# 
  1727  0890                     	;# 
  1728  0891                     	;# 
  1729  0892                     	;# 
  1730  0893                     	;# 
  1731  0895                     	;# 
  1732  0896                     	;# 
  1733  090C                     	;# 
  1734  090E                     	;# 
  1735  090F                     	;# 
  1736  091F                     	;# 
  1737  098F                     	;# 
  1738  098F                     	;# 
  1739  0990                     	;# 
  1740  0991                     	;# 
  1741  0992                     	;# 
  1742  0993                     	;# 
  1743  0994                     	;# 
  1744  0995                     	;# 
  1745  0996                     	;# 
  1746  0997                     	;# 
  1747  0A19                     	;# 
  1748  0A19                     	;# 
  1749  0A1A                     	;# 
  1750  0A1A                     	;# 
  1751  0A1B                     	;# 
  1752  0A1B                     	;# 
  1753  0A1B                     	;# 
  1754  0A1C                     	;# 
  1755  0A1C                     	;# 
  1756  0A1D                     	;# 
  1757  0A1D                     	;# 
  1758  0A1E                     	;# 
  1759  0A1E                     	;# 
  1760  0A1F                     	;# 
  1761  0A1F                     	;# 
  1762  0A1F                     	;# 
  1763  1E0F                     	;# 
  1764  1E10                     	;# 
  1765  1E11                     	;# 
  1766  1E12                     	;# 
  1767  1E13                     	;# 
  1768  1E14                     	;# 
  1769  1E15                     	;# 
  1770  1E16                     	;# 
  1771  1E17                     	;# 
  1772  1E18                     	;# 
  1773  1E19                     	;# 
  1774  1E1A                     	;# 
  1775  1E1B                     	;# 
  1776  1E1C                     	;# 
  1777  1E1D                     	;# 
  1778  1E1E                     	;# 
  1779  1E1F                     	;# 
  1780  1E20                     	;# 
  1781  1E21                     	;# 
  1782  1E22                     	;# 
  1783  1E23                     	;# 
  1784  1E24                     	;# 
  1785  1E25                     	;# 
  1786  1E26                     	;# 
  1787  1E27                     	;# 
  1788  1E28                     	;# 
  1789  1E29                     	;# 
  1790  1E2A                     	;# 
  1791  1E2B                     	;# 
  1792  1E2C                     	;# 
  1793  1E2D                     	;# 
  1794  1E2E                     	;# 
  1795  1E2F                     	;# 
  1796  1E30                     	;# 
  1797  1E31                     	;# 
  1798  1E32                     	;# 
  1799  1E33                     	;# 
  1800  1E34                     	;# 
  1801  1E35                     	;# 
  1802  1E36                     	;# 
  1803  1E37                     	;# 
  1804  1E8F                     	;# 
  1805  1E90                     	;# 
  1806  1E91                     	;# 
  1807  1E92                     	;# 
  1808  1E93                     	;# 
  1809  1E9C                     	;# 
  1810  1EA1                     	;# 
  1811  1EA2                     	;# 
  1812  1EB1                     	;# 
  1813  1EBB                     	;# 
  1814  1EBC                     	;# 
  1815  1EBD                     	;# 
  1816  1EBE                     	;# 
  1817  1EC3                     	;# 
  1818  1EC5                     	;# 
  1819  1EC6                     	;# 
  1820  1EC7                     	;# 
  1821  1EC8                     	;# 
  1822  1EC9                     	;# 
  1823  1ECA                     	;# 
  1824  1ECB                     	;# 
  1825  1ECC                     	;# 
  1826  1ECD                     	;# 
  1827  1ECE                     	;# 
  1828  1F10                     	;# 
  1829  1F11                     	;# 
  1830  1F12                     	;# 
  1831  1F13                     	;# 
  1832  1F14                     	;# 
  1833  1F15                     	;# 
  1834  1F16                     	;# 
  1835  1F17                     	;# 
  1836  1F18                     	;# 
  1837  1F19                     	;# 
  1838  1F1A                     	;# 
  1839  1F1B                     	;# 
  1840  1F1C                     	;# 
  1841  1F1D                     	;# 
  1842  1F1E                     	;# 
  1843  1F1F                     	;# 
  1844  1F20                     	;# 
  1845  1F21                     	;# 
  1846  1F22                     	;# 
  1847  1F23                     	;# 
  1848  1F24                     	;# 
  1849  1F25                     	;# 
  1850  1F26                     	;# 
  1851  1F27                     	;# 
  1852  1F38                     	;# 
  1853  1F39                     	;# 
  1854  1F3A                     	;# 
  1855  1F3B                     	;# 
  1856  1F3C                     	;# 
  1857  1F3D                     	;# 
  1858  1F3E                     	;# 
  1859  1F3F                     	;# 
  1860  1F43                     	;# 
  1861  1F44                     	;# 
  1862  1F45                     	;# 
  1863  1F46                     	;# 
  1864  1F47                     	;# 
  1865  1F48                     	;# 
  1866  1F49                     	;# 
  1867  1F4A                     	;# 
  1868  1F4E                     	;# 
  1869  1F4F                     	;# 
  1870  1F50                     	;# 
  1871  1F51                     	;# 
  1872  1F52                     	;# 
  1873  1F53                     	;# 
  1874  1F54                     	;# 
  1875  1F55                     	;# 
  1876  1F65                     	;# 
  1877  1F68                     	;# 
  1878  1F69                     	;# 
  1879  1F6A                     	;# 
  1880  1F6B                     	;# 
  1881  1FE4                     	;# 
  1882  1FE5                     	;# 
  1883  1FE6                     	;# 
  1884  1FE7                     	;# 
  1885  1FE8                     	;# 
  1886  1FE8                     	;# 
  1887  1FE9                     	;# 
  1888  1FEA                     	;# 
  1889  1FEB                     	;# 
  1890  1FED                     	;# 
  1891  1FEE                     	;# 
  1892  1FEF                     	;# 
  1893  0000                     	;# 
  1894  0001                     	;# 
  1895  0002                     	;# 
  1896  0003                     	;# 
  1897  0004                     	;# 
  1898  0005                     	;# 
  1899  0006                     	;# 
  1900  0007                     	;# 
  1901  0008                     	;# 
  1902  0009                     	;# 
  1903  000A                     	;# 
  1904  000B                     	;# 
  1905  000C                     	;# 
  1906  000D                     	;# 
  1907  000E                     	;# 
  1908  0010                     	;# 
  1909  0012                     	;# 
  1910  0013                     	;# 
  1911  0014                     	;# 
  1912  0016                     	;# 
  1913  0018                     	;# 
  1914  0019                     	;# 
  1915  001A                     	;# 
  1916  009B                     	;# 
  1917  009B                     	;# 
  1918  009C                     	;# 
  1919  009D                     	;# 
  1920  009E                     	;# 
  1921  009F                     	;# 
  1922  0119                     	;# 
  1923  0119                     	;# 
  1924  0119                     	;# 
  1925  011A                     	;# 
  1926  011A                     	;# 
  1927  011A                     	;# 
  1928  011B                     	;# 
  1929  011B                     	;# 
  1930  011B                     	;# 
  1931  011B                     	;# 
  1932  011B                     	;# 
  1933  011C                     	;# 
  1934  011C                     	;# 
  1935  011C                     	;# 
  1936  011D                     	;# 
  1937  011D                     	;# 
  1938  011D                     	;# 
  1939  011E                     	;# 
  1940  011E                     	;# 
  1941  011E                     	;# 
  1942  011F                     	;# 
  1943  011F                     	;# 
  1944  011F                     	;# 
  1945  011F                     	;# 
  1946  011F                     	;# 
  1947  018C                     	;# 
  1948  018D                     	;# 
  1949  018E                     	;# 
  1950  018F                     	;# 
  1951  0190                     	;# 
  1952  0191                     	;# 
  1953  0192                     	;# 
  1954  0196                     	;# 
  1955  0197                     	;# 
  1956  0198                     	;# 
  1957  0199                     	;# 
  1958  019A                     	;# 
  1959  019B                     	;# 
  1960  019C                     	;# 
  1961  020C                     	;# 
  1962  020C                     	;# 
  1963  020D                     	;# 
  1964  020E                     	;# 
  1965  020F                     	;# 
  1966  020F                     	;# 
  1967  0210                     	;# 
  1968  0210                     	;# 
  1969  0211                     	;# 
  1970  0211                     	;# 
  1971  028C                     	;# 
  1972  028C                     	;# 
  1973  028D                     	;# 
  1974  028D                     	;# 
  1975  028E                     	;# 
  1976  028F                     	;# 
  1977  0290                     	;# 
  1978  0291                     	;# 
  1979  030C                     	;# 
  1980  030C                     	;# 
  1981  030D                     	;# 
  1982  030E                     	;# 
  1983  030F                     	;# 
  1984  0310                     	;# 
  1985  0310                     	;# 
  1986  0311                     	;# 
  1987  0312                     	;# 
  1988  0313                     	;# 
  1989  0314                     	;# 
  1990  0314                     	;# 
  1991  0315                     	;# 
  1992  0316                     	;# 
  1993  0318                     	;# 
  1994  0318                     	;# 
  1995  0319                     	;# 
  1996  031A                     	;# 
  1997  031C                     	;# 
  1998  031C                     	;# 
  1999  031D                     	;# 
  2000  031E                     	;# 
  2001  038C                     	;# 
  2002  038C                     	;# 
  2003  038D                     	;# 
  2004  038E                     	;# 
  2005  058C                     	;# 
  2006  058C                     	;# 
  2007  058D                     	;# 
  2008  058E                     	;# 
  2009  058F                     	;# 
  2010  058F                     	;# 
  2011  0590                     	;# 
  2012  0591                     	;# 
  2013  0592                     	;# 
  2014  0593                     	;# 
  2015  059C                     	;# 
  2016  059C                     	;# 
  2017  059D                     	;# 
  2018  059D                     	;# 
  2019  059E                     	;# 
  2020  059F                     	;# 
  2021  060C                     	;# 
  2022  060D                     	;# 
  2023  060E                     	;# 
  2024  060F                     	;# 
  2025  0610                     	;# 
  2026  0611                     	;# 
  2027  0612                     	;# 
  2028  0613                     	;# 
  2029  0614                     	;# 
  2030  070C                     	;# 
  2031  070D                     	;# 
  2032  070E                     	;# 
  2033  070F                     	;# 
  2034  0710                     	;# 
  2035  0711                     	;# 
  2036  0712                     	;# 
  2037  0713                     	;# 
  2038  0716                     	;# 
  2039  0717                     	;# 
  2040  0718                     	;# 
  2041  0719                     	;# 
  2042  071A                     	;# 
  2043  071B                     	;# 
  2044  071C                     	;# 
  2045  071D                     	;# 
  2046  0796                     	;# 
  2047  0797                     	;# 
  2048  0798                     	;# 
  2049  0799                     	;# 
  2050  079A                     	;# 
  2051  079B                     	;# 
  2052  080C                     	;# 
  2053  080D                     	;# 
  2054  080E                     	;# 
  2055  080F                     	;# 
  2056  0810                     	;# 
  2057  0811                     	;# 
  2058  0812                     	;# 
  2059  0813                     	;# 
  2060  0814                     	;# 
  2061  081A                     	;# 
  2062  081A                     	;# 
  2063  081B                     	;# 
  2064  081C                     	;# 
  2065  081C                     	;# 
  2066  081D                     	;# 
  2067  081E                     	;# 
  2068  081F                     	;# 
  2069  088C                     	;# 
  2070  088D                     	;# 
  2071  088E                     	;# 
  2072  088F                     	;# 
  2073  0890                     	;# 
  2074  0891                     	;# 
  2075  0892                     	;# 
  2076  0893                     	;# 
  2077  0895                     	;# 
  2078  0896                     	;# 
  2079  090C                     	;# 
  2080  090E                     	;# 
  2081  090F                     	;# 
  2082  091F                     	;# 
  2083  098F                     	;# 
  2084  098F                     	;# 
  2085  0990                     	;# 
  2086  0991                     	;# 
  2087  0992                     	;# 
  2088  0993                     	;# 
  2089  0994                     	;# 
  2090  0995                     	;# 
  2091  0996                     	;# 
  2092  0997                     	;# 
  2093  0A19                     	;# 
  2094  0A19                     	;# 
  2095  0A1A                     	;# 
  2096  0A1A                     	;# 
  2097  0A1B                     	;# 
  2098  0A1B                     	;# 
  2099  0A1B                     	;# 
  2100  0A1C                     	;# 
  2101  0A1C                     	;# 
  2102  0A1D                     	;# 
  2103  0A1D                     	;# 
  2104  0A1E                     	;# 
  2105  0A1E                     	;# 
  2106  0A1F                     	;# 
  2107  0A1F                     	;# 
  2108  0A1F                     	;# 
  2109  1E0F                     	;# 
  2110  1E10                     	;# 
  2111  1E11                     	;# 
  2112  1E12                     	;# 
  2113  1E13                     	;# 
  2114  1E14                     	;# 
  2115  1E15                     	;# 
  2116  1E16                     	;# 
  2117  1E17                     	;# 
  2118  1E18                     	;# 
  2119  1E19                     	;# 
  2120  1E1A                     	;# 
  2121  1E1B                     	;# 
  2122  1E1C                     	;# 
  2123  1E1D                     	;# 
  2124  1E1E                     	;# 
  2125  1E1F                     	;# 
  2126  1E20                     	;# 
  2127  1E21                     	;# 
  2128  1E22                     	;# 
  2129  1E23                     	;# 
  2130  1E24                     	;# 
  2131  1E25                     	;# 
  2132  1E26                     	;# 
  2133  1E27                     	;# 
  2134  1E28                     	;# 
  2135  1E29                     	;# 
  2136  1E2A                     	;# 
  2137  1E2B                     	;# 
  2138  1E2C                     	;# 
  2139  1E2D                     	;# 
  2140  1E2E                     	;# 
  2141  1E2F                     	;# 
  2142  1E30                     	;# 
  2143  1E31                     	;# 
  2144  1E32                     	;# 
  2145  1E33                     	;# 
  2146  1E34                     	;# 
  2147  1E35                     	;# 
  2148  1E36                     	;# 
  2149  1E37                     	;# 
  2150  1E8F                     	;# 
  2151  1E90                     	;# 
  2152  1E91                     	;# 
  2153  1E92                     	;# 
  2154  1E93                     	;# 
  2155  1E9C                     	;# 
  2156  1EA1                     	;# 
  2157  1EA2                     	;# 
  2158  1EB1                     	;# 
  2159  1EBB                     	;# 
  2160  1EBC                     	;# 
  2161  1EBD                     	;# 
  2162  1EBE                     	;# 
  2163  1EC3                     	;# 
  2164  1EC5                     	;# 
  2165  1EC6                     	;# 
  2166  1EC7                     	;# 
  2167  1EC8                     	;# 
  2168  1EC9                     	;# 
  2169  1ECA                     	;# 
  2170  1ECB                     	;# 
  2171  1ECC                     	;# 
  2172  1ECD                     	;# 
  2173  1ECE                     	;# 
  2174  1F10                     	;# 
  2175  1F11                     	;# 
  2176  1F12                     	;# 
  2177  1F13                     	;# 
  2178  1F14                     	;# 
  2179  1F15                     	;# 
  2180  1F16                     	;# 
  2181  1F17                     	;# 
  2182  1F18                     	;# 
  2183  1F19                     	;# 
  2184  1F1A                     	;# 
  2185  1F1B                     	;# 
  2186  1F1C                     	;# 
  2187  1F1D                     	;# 
  2188  1F1E                     	;# 
  2189  1F1F                     	;# 
  2190  1F20                     	;# 
  2191  1F21                     	;# 
  2192  1F22                     	;# 
  2193  1F23                     	;# 
  2194  1F24                     	;# 
  2195  1F25                     	;# 
  2196  1F26                     	;# 
  2197  1F27                     	;# 
  2198  1F38                     	;# 
  2199  1F39                     	;# 
  2200  1F3A                     	;# 
  2201  1F3B                     	;# 
  2202  1F3C                     	;# 
  2203  1F3D                     	;# 
  2204  1F3E                     	;# 
  2205  1F3F                     	;# 
  2206  1F43                     	;# 
  2207  1F44                     	;# 
  2208  1F45                     	;# 
  2209  1F46                     	;# 
  2210  1F47                     	;# 
  2211  1F48                     	;# 
  2212  1F49                     	;# 
  2213  1F4A                     	;# 
  2214  1F4E                     	;# 
  2215  1F4F                     	;# 
  2216  1F50                     	;# 
  2217  1F51                     	;# 
  2218  1F52                     	;# 
  2219  1F53                     	;# 
  2220  1F54                     	;# 
  2221  1F55                     	;# 
  2222  1F65                     	;# 
  2223  1F68                     	;# 
  2224  1F69                     	;# 
  2225  1F6A                     	;# 
  2226  1F6B                     	;# 
  2227  1FE4                     	;# 
  2228  1FE5                     	;# 
  2229  1FE6                     	;# 
  2230  1FE7                     	;# 
  2231  1FE8                     	;# 
  2232  1FE8                     	;# 
  2233  1FE9                     	;# 
  2234  1FEA                     	;# 
  2235  1FEB                     	;# 
  2236  1FED                     	;# 
  2237  1FEE                     	;# 
  2238  1FEF                     	;# 
  2239  0000                     	;# 
  2240  0001                     	;# 
  2241  0002                     	;# 
  2242  0003                     	;# 
  2243  0004                     	;# 
  2244  0005                     	;# 
  2245  0006                     	;# 
  2246  0007                     	;# 
  2247  0008                     	;# 
  2248  0009                     	;# 
  2249  000A                     	;# 
  2250  000B                     	;# 
  2251  000C                     	;# 
  2252  000D                     	;# 
  2253  000E                     	;# 
  2254  0010                     	;# 
  2255  0012                     	;# 
  2256  0013                     	;# 
  2257  0014                     	;# 
  2258  0016                     	;# 
  2259  0018                     	;# 
  2260  0019                     	;# 
  2261  001A                     	;# 
  2262  009B                     	;# 
  2263  009B                     	;# 
  2264  009C                     	;# 
  2265  009D                     	;# 
  2266  009E                     	;# 
  2267  009F                     	;# 
  2268  0119                     	;# 
  2269  0119                     	;# 
  2270  0119                     	;# 
  2271  011A                     	;# 
  2272  011A                     	;# 
  2273  011A                     	;# 
  2274  011B                     	;# 
  2275  011B                     	;# 
  2276  011B                     	;# 
  2277  011B                     	;# 
  2278  011B                     	;# 
  2279  011C                     	;# 
  2280  011C                     	;# 
  2281  011C                     	;# 
  2282  011D                     	;# 
  2283  011D                     	;# 
  2284  011D                     	;# 
  2285  011E                     	;# 
  2286  011E                     	;# 
  2287  011E                     	;# 
  2288  011F                     	;# 
  2289  011F                     	;# 
  2290  011F                     	;# 
  2291  011F                     	;# 
  2292  011F                     	;# 
  2293  018C                     	;# 
  2294  018D                     	;# 
  2295  018E                     	;# 
  2296  018F                     	;# 
  2297  0190                     	;# 
  2298  0191                     	;# 
  2299  0192                     	;# 
  2300  0196                     	;# 
  2301  0197                     	;# 
  2302  0198                     	;# 
  2303  0199                     	;# 
  2304  019A                     	;# 
  2305  019B                     	;# 
  2306  019C                     	;# 
  2307  020C                     	;# 
  2308  020C                     	;# 
  2309  020D                     	;# 
  2310  020E                     	;# 
  2311  020F                     	;# 
  2312  020F                     	;# 
  2313  0210                     	;# 
  2314  0210                     	;# 
  2315  0211                     	;# 
  2316  0211                     	;# 
  2317  028C                     	;# 
  2318  028C                     	;# 
  2319  028D                     	;# 
  2320  028D                     	;# 
  2321  028E                     	;# 
  2322  028F                     	;# 
  2323  0290                     	;# 
  2324  0291                     	;# 
  2325  030C                     	;# 
  2326  030C                     	;# 
  2327  030D                     	;# 
  2328  030E                     	;# 
  2329  030F                     	;# 
  2330  0310                     	;# 
  2331  0310                     	;# 
  2332  0311                     	;# 
  2333  0312                     	;# 
  2334  0313                     	;# 
  2335  0314                     	;# 
  2336  0314                     	;# 
  2337  0315                     	;# 
  2338  0316                     	;# 
  2339  0318                     	;# 
  2340  0318                     	;# 
  2341  0319                     	;# 
  2342  031A                     	;# 
  2343  031C                     	;# 
  2344  031C                     	;# 
  2345  031D                     	;# 
  2346  031E                     	;# 
  2347  038C                     	;# 
  2348  038C                     	;# 
  2349  038D                     	;# 
  2350  038E                     	;# 
  2351  058C                     	;# 
  2352  058C                     	;# 
  2353  058D                     	;# 
  2354  058E                     	;# 
  2355  058F                     	;# 
  2356  058F                     	;# 
  2357  0590                     	;# 
  2358  0591                     	;# 
  2359  0592                     	;# 
  2360  0593                     	;# 
  2361  059C                     	;# 
  2362  059C                     	;# 
  2363  059D                     	;# 
  2364  059D                     	;# 
  2365  059E                     	;# 
  2366  059F                     	;# 
  2367  060C                     	;# 
  2368  060D                     	;# 
  2369  060E                     	;# 
  2370  060F                     	;# 
  2371  0610                     	;# 
  2372  0611                     	;# 
  2373  0612                     	;# 
  2374  0613                     	;# 
  2375  0614                     	;# 
  2376  070C                     	;# 
  2377  070D                     	;# 
  2378  070E                     	;# 
  2379  070F                     	;# 
  2380  0710                     	;# 
  2381  0711                     	;# 
  2382  0712                     	;# 
  2383  0713                     	;# 
  2384  0716                     	;# 
  2385  0717                     	;# 
  2386  0718                     	;# 
  2387  0719                     	;# 
  2388  071A                     	;# 
  2389  071B                     	;# 
  2390  071C                     	;# 
  2391  071D                     	;# 
  2392  0796                     	;# 
  2393  0797                     	;# 
  2394  0798                     	;# 
  2395  0799                     	;# 
  2396  079A                     	;# 
  2397  079B                     	;# 
  2398  080C                     	;# 
  2399  080D                     	;# 
  2400  080E                     	;# 
  2401  080F                     	;# 
  2402  0810                     	;# 
  2403  0811                     	;# 
  2404  0812                     	;# 
  2405  0813                     	;# 
  2406  0814                     	;# 
  2407  081A                     	;# 
  2408  081A                     	;# 
  2409  081B                     	;# 
  2410  081C                     	;# 
  2411  081C                     	;# 
  2412  081D                     	;# 
  2413  081E                     	;# 
  2414  081F                     	;# 
  2415  088C                     	;# 
  2416  088D                     	;# 
  2417  088E                     	;# 
  2418  088F                     	;# 
  2419  0890                     	;# 
  2420  0891                     	;# 
  2421  0892                     	;# 
  2422  0893                     	;# 
  2423  0895                     	;# 
  2424  0896                     	;# 
  2425  090C                     	;# 
  2426  090E                     	;# 
  2427  090F                     	;# 
  2428  091F                     	;# 
  2429  098F                     	;# 
  2430  098F                     	;# 
  2431  0990                     	;# 
  2432  0991                     	;# 
  2433  0992                     	;# 
  2434  0993                     	;# 
  2435  0994                     	;# 
  2436  0995                     	;# 
  2437  0996                     	;# 
  2438  0997                     	;# 
  2439  0A19                     	;# 
  2440  0A19                     	;# 
  2441  0A1A                     	;# 
  2442  0A1A                     	;# 
  2443  0A1B                     	;# 
  2444  0A1B                     	;# 
  2445  0A1B                     	;# 
  2446  0A1C                     	;# 
  2447  0A1C                     	;# 
  2448  0A1D                     	;# 
  2449  0A1D                     	;# 
  2450  0A1E                     	;# 
  2451  0A1E                     	;# 
  2452  0A1F                     	;# 
  2453  0A1F                     	;# 
  2454  0A1F                     	;# 
  2455  1E0F                     	;# 
  2456  1E10                     	;# 
  2457  1E11                     	;# 
  2458  1E12                     	;# 
  2459  1E13                     	;# 
  2460  1E14                     	;# 
  2461  1E15                     	;# 
  2462  1E16                     	;# 
  2463  1E17                     	;# 
  2464  1E18                     	;# 
  2465  1E19                     	;# 
  2466  1E1A                     	;# 
  2467  1E1B                     	;# 
  2468  1E1C                     	;# 
  2469  1E1D                     	;# 
  2470  1E1E                     	;# 
  2471  1E1F                     	;# 
  2472  1E20                     	;# 
  2473  1E21                     	;# 
  2474  1E22                     	;# 
  2475  1E23                     	;# 
  2476  1E24                     	;# 
  2477  1E25                     	;# 
  2478  1E26                     	;# 
  2479  1E27                     	;# 
  2480  1E28                     	;# 
  2481  1E29                     	;# 
  2482  1E2A                     	;# 
  2483  1E2B                     	;# 
  2484  1E2C                     	;# 
  2485  1E2D                     	;# 
  2486  1E2E                     	;# 
  2487  1E2F                     	;# 
  2488  1E30                     	;# 
  2489  1E31                     	;# 
  2490  1E32                     	;# 
  2491  1E33                     	;# 
  2492  1E34                     	;# 
  2493  1E35                     	;# 
  2494  1E36                     	;# 
  2495  1E37                     	;# 
  2496  1E8F                     	;# 
  2497  1E90                     	;# 
  2498  1E91                     	;# 
  2499  1E92                     	;# 
  2500  1E93                     	;# 
  2501  1E9C                     	;# 
  2502  1EA1                     	;# 
  2503  1EA2                     	;# 
  2504  1EB1                     	;# 
  2505  1EBB                     	;# 
  2506  1EBC                     	;# 
  2507  1EBD                     	;# 
  2508  1EBE                     	;# 
  2509  1EC3                     	;# 
  2510  1EC5                     	;# 
  2511  1EC6                     	;# 
  2512  1EC7                     	;# 
  2513  1EC8                     	;# 
  2514  1EC9                     	;# 
  2515  1ECA                     	;# 
  2516  1ECB                     	;# 
  2517  1ECC                     	;# 
  2518  1ECD                     	;# 
  2519  1ECE                     	;# 
  2520  1F10                     	;# 
  2521  1F11                     	;# 
  2522  1F12                     	;# 
  2523  1F13                     	;# 
  2524  1F14                     	;# 
  2525  1F15                     	;# 
  2526  1F16                     	;# 
  2527  1F17                     	;# 
  2528  1F18                     	;# 
  2529  1F19                     	;# 
  2530  1F1A                     	;# 
  2531  1F1B                     	;# 
  2532  1F1C                     	;# 
  2533  1F1D                     	;# 
  2534  1F1E                     	;# 
  2535  1F1F                     	;# 
  2536  1F20                     	;# 
  2537  1F21                     	;# 
  2538  1F22                     	;# 
  2539  1F23                     	;# 
  2540  1F24                     	;# 
  2541  1F25                     	;# 
  2542  1F26                     	;# 
  2543  1F27                     	;# 
  2544  1F38                     	;# 
  2545  1F39                     	;# 
  2546  1F3A                     	;# 
  2547  1F3B                     	;# 
  2548  1F3C                     	;# 
  2549  1F3D                     	;# 
  2550  1F3E                     	;# 
  2551  1F3F                     	;# 
  2552  1F43                     	;# 
  2553  1F44                     	;# 
  2554  1F45                     	;# 
  2555  1F46                     	;# 
  2556  1F47                     	;# 
  2557  1F48                     	;# 
  2558  1F49                     	;# 
  2559  1F4A                     	;# 
  2560  1F4E                     	;# 
  2561  1F4F                     	;# 
  2562  1F50                     	;# 
  2563  1F51                     	;# 
  2564  1F52                     	;# 
  2565  1F53                     	;# 
  2566  1F54                     	;# 
  2567  1F55                     	;# 
  2568  1F65                     	;# 
  2569  1F68                     	;# 
  2570  1F69                     	;# 
  2571  1F6A                     	;# 
  2572  1F6B                     	;# 
  2573  1FE4                     	;# 
  2574  1FE5                     	;# 
  2575  1FE6                     	;# 
  2576  1FE7                     	;# 
  2577  1FE8                     	;# 
  2578  1FE8                     	;# 
  2579  1FE9                     	;# 
  2580  1FEA                     	;# 
  2581  1FEB                     	;# 
  2582  1FED                     	;# 
  2583  1FEE                     	;# 
  2584  1FEF                     	;# 
  2585  0000                     	;# 
  2586  0001                     	;# 
  2587  0002                     	;# 
  2588  0003                     	;# 
  2589  0004                     	;# 
  2590  0005                     	;# 
  2591  0006                     	;# 
  2592  0007                     	;# 
  2593  0008                     	;# 
  2594  0009                     	;# 
  2595  000A                     	;# 
  2596  000B                     	;# 
  2597  000C                     	;# 
  2598  000D                     	;# 
  2599  000E                     	;# 
  2600  0010                     	;# 
  2601  0012                     	;# 
  2602  0013                     	;# 
  2603  0014                     	;# 
  2604  0016                     	;# 
  2605  0018                     	;# 
  2606  0019                     	;# 
  2607  001A                     	;# 
  2608  009B                     	;# 
  2609  009B                     	;# 
  2610  009C                     	;# 
  2611  009D                     	;# 
  2612  009E                     	;# 
  2613  009F                     	;# 
  2614  0119                     	;# 
  2615  0119                     	;# 
  2616  0119                     	;# 
  2617  011A                     	;# 
  2618  011A                     	;# 
  2619  011A                     	;# 
  2620  011B                     	;# 
  2621  011B                     	;# 
  2622  011B                     	;# 
  2623  011B                     	;# 
  2624  011B                     	;# 
  2625  011C                     	;# 
  2626  011C                     	;# 
  2627  011C                     	;# 
  2628  011D                     	;# 
  2629  011D                     	;# 
  2630  011D                     	;# 
  2631  011E                     	;# 
  2632  011E                     	;# 
  2633  011E                     	;# 
  2634  011F                     	;# 
  2635  011F                     	;# 
  2636  011F                     	;# 
  2637  011F                     	;# 
  2638  011F                     	;# 
  2639  018C                     	;# 
  2640  018D                     	;# 
  2641  018E                     	;# 
  2642  018F                     	;# 
  2643  0190                     	;# 
  2644  0191                     	;# 
  2645  0192                     	;# 
  2646  0196                     	;# 
  2647  0197                     	;# 
  2648  0198                     	;# 
  2649  0199                     	;# 
  2650  019A                     	;# 
  2651  019B                     	;# 
  2652  019C                     	;# 
  2653  020C                     	;# 
  2654  020C                     	;# 
  2655  020D                     	;# 
  2656  020E                     	;# 
  2657  020F                     	;# 
  2658  020F                     	;# 
  2659  0210                     	;# 
  2660  0210                     	;# 
  2661  0211                     	;# 
  2662  0211                     	;# 
  2663  028C                     	;# 
  2664  028C                     	;# 
  2665  028D                     	;# 
  2666  028D                     	;# 
  2667  028E                     	;# 
  2668  028F                     	;# 
  2669  0290                     	;# 
  2670  0291                     	;# 
  2671  030C                     	;# 
  2672  030C                     	;# 
  2673  030D                     	;# 
  2674  030E                     	;# 
  2675  030F                     	;# 
  2676  0310                     	;# 
  2677  0310                     	;# 
  2678  0311                     	;# 
  2679  0312                     	;# 
  2680  0313                     	;# 
  2681  0314                     	;# 
  2682  0314                     	;# 
  2683  0315                     	;# 
  2684  0316                     	;# 
  2685  0318                     	;# 
  2686  0318                     	;# 
  2687  0319                     	;# 
  2688  031A                     	;# 
  2689  031C                     	;# 
  2690  031C                     	;# 
  2691  031D                     	;# 
  2692  031E                     	;# 
  2693  038C                     	;# 
  2694  038C                     	;# 
  2695  038D                     	;# 
  2696  038E                     	;# 
  2697  058C                     	;# 
  2698  058C                     	;# 
  2699  058D                     	;# 
  2700  058E                     	;# 
  2701  058F                     	;# 
  2702  058F                     	;# 
  2703  0590                     	;# 
  2704  0591                     	;# 
  2705  0592                     	;# 
  2706  0593                     	;# 
  2707  059C                     	;# 
  2708  059C                     	;# 
  2709  059D                     	;# 
  2710  059D                     	;# 
  2711  059E                     	;# 
  2712  059F                     	;# 
  2713  060C                     	;# 
  2714  060D                     	;# 
  2715  060E                     	;# 
  2716  060F                     	;# 
  2717  0610                     	;# 
  2718  0611                     	;# 
  2719  0612                     	;# 
  2720  0613                     	;# 
  2721  0614                     	;# 
  2722  070C                     	;# 
  2723  070D                     	;# 
  2724  070E                     	;# 
  2725  070F                     	;# 
  2726  0710                     	;# 
  2727  0711                     	;# 
  2728  0712                     	;# 
  2729  0713                     	;# 
  2730  0716                     	;# 
  2731  0717                     	;# 
  2732  0718                     	;# 
  2733  0719                     	;# 
  2734  071A                     	;# 
  2735  071B                     	;# 
  2736  071C                     	;# 
  2737  071D                     	;# 
  2738  0796                     	;# 
  2739  0797                     	;# 
  2740  0798                     	;# 
  2741  0799                     	;# 
  2742  079A                     	;# 
  2743  079B                     	;# 
  2744  080C                     	;# 
  2745  080D                     	;# 
  2746  080E                     	;# 
  2747  080F                     	;# 
  2748  0810                     	;# 
  2749  0811                     	;# 
  2750  0812                     	;# 
  2751  0813                     	;# 
  2752  0814                     	;# 
  2753  081A                     	;# 
  2754  081A                     	;# 
  2755  081B                     	;# 
  2756  081C                     	;# 
  2757  081C                     	;# 
  2758  081D                     	;# 
  2759  081E                     	;# 
  2760  081F                     	;# 
  2761  088C                     	;# 
  2762  088D                     	;# 
  2763  088E                     	;# 
  2764  088F                     	;# 
  2765  0890                     	;# 
  2766  0891                     	;# 
  2767  0892                     	;# 
  2768  0893                     	;# 
  2769  0895                     	;# 
  2770  0896                     	;# 
  2771  090C                     	;# 
  2772  090E                     	;# 
  2773  090F                     	;# 
  2774  091F                     	;# 
  2775  098F                     	;# 
  2776  098F                     	;# 
  2777  0990                     	;# 
  2778  0991                     	;# 
  2779  0992                     	;# 
  2780  0993                     	;# 
  2781  0994                     	;# 
  2782  0995                     	;# 
  2783  0996                     	;# 
  2784  0997                     	;# 
  2785  0A19                     	;# 
  2786  0A19                     	;# 
  2787  0A1A                     	;# 
  2788  0A1A                     	;# 
  2789  0A1B                     	;# 
  2790  0A1B                     	;# 
  2791  0A1B                     	;# 
  2792  0A1C                     	;# 
  2793  0A1C                     	;# 
  2794  0A1D                     	;# 
  2795  0A1D                     	;# 
  2796  0A1E                     	;# 
  2797  0A1E                     	;# 
  2798  0A1F                     	;# 
  2799  0A1F                     	;# 
  2800  0A1F                     	;# 
  2801  1E0F                     	;# 
  2802  1E10                     	;# 
  2803  1E11                     	;# 
  2804  1E12                     	;# 
  2805  1E13                     	;# 
  2806  1E14                     	;# 
  2807  1E15                     	;# 
  2808  1E16                     	;# 
  2809  1E17                     	;# 
  2810  1E18                     	;# 
  2811  1E19                     	;# 
  2812  1E1A                     	;# 
  2813  1E1B                     	;# 
  2814  1E1C                     	;# 
  2815  1E1D                     	;# 
  2816  1E1E                     	;# 
  2817  1E1F                     	;# 
  2818  1E20                     	;# 
  2819  1E21                     	;# 
  2820  1E22                     	;# 
  2821  1E23                     	;# 
  2822  1E24                     	;# 
  2823  1E25                     	;# 
  2824  1E26                     	;# 
  2825  1E27                     	;# 
  2826  1E28                     	;# 
  2827  1E29                     	;# 
  2828  1E2A                     	;# 
  2829  1E2B                     	;# 
  2830  1E2C                     	;# 
  2831  1E2D                     	;# 
  2832  1E2E                     	;# 
  2833  1E2F                     	;# 
  2834  1E30                     	;# 
  2835  1E31                     	;# 
  2836  1E32                     	;# 
  2837  1E33                     	;# 
  2838  1E34                     	;# 
  2839  1E35                     	;# 
  2840  1E36                     	;# 
  2841  1E37                     	;# 
  2842  1E8F                     	;# 
  2843  1E90                     	;# 
  2844  1E91                     	;# 
  2845  1E92                     	;# 
  2846  1E93                     	;# 
  2847  1E9C                     	;# 
  2848  1EA1                     	;# 
  2849  1EA2                     	;# 
  2850  1EB1                     	;# 
  2851  1EBB                     	;# 
  2852  1EBC                     	;# 
  2853  1EBD                     	;# 
  2854  1EBE                     	;# 
  2855  1EC3                     	;# 
  2856  1EC5                     	;# 
  2857  1EC6                     	;# 
  2858  1EC7                     	;# 
  2859  1EC8                     	;# 
  2860  1EC9                     	;# 
  2861  1ECA                     	;# 
  2862  1ECB                     	;# 
  2863  1ECC                     	;# 
  2864  1ECD                     	;# 
  2865  1ECE                     	;# 
  2866  1F10                     	;# 
  2867  1F11                     	;# 
  2868  1F12                     	;# 
  2869  1F13                     	;# 
  2870  1F14                     	;# 
  2871  1F15                     	;# 
  2872  1F16                     	;# 
  2873  1F17                     	;# 
  2874  1F18                     	;# 
  2875  1F19                     	;# 
  2876  1F1A                     	;# 
  2877  1F1B                     	;# 
  2878  1F1C                     	;# 
  2879  1F1D                     	;# 
  2880  1F1E                     	;# 
  2881  1F1F                     	;# 
  2882  1F20                     	;# 
  2883  1F21                     	;# 
  2884  1F22                     	;# 
  2885  1F23                     	;# 
  2886  1F24                     	;# 
  2887  1F25                     	;# 
  2888  1F26                     	;# 
  2889  1F27                     	;# 
  2890  1F38                     	;# 
  2891  1F39                     	;# 
  2892  1F3A                     	;# 
  2893  1F3B                     	;# 
  2894  1F3C                     	;# 
  2895  1F3D                     	;# 
  2896  1F3E                     	;# 
  2897  1F3F                     	;# 
  2898  1F43                     	;# 
  2899  1F44                     	;# 
  2900  1F45                     	;# 
  2901  1F46                     	;# 
  2902  1F47                     	;# 
  2903  1F48                     	;# 
  2904  1F49                     	;# 
  2905  1F4A                     	;# 
  2906  1F4E                     	;# 
  2907  1F4F                     	;# 
  2908  1F50                     	;# 
  2909  1F51                     	;# 
  2910  1F52                     	;# 
  2911  1F53                     	;# 
  2912  1F54                     	;# 
  2913  1F55                     	;# 
  2914  1F65                     	;# 
  2915  1F68                     	;# 
  2916  1F69                     	;# 
  2917  1F6A                     	;# 
  2918  1F6B                     	;# 
  2919  1FE4                     	;# 
  2920  1FE5                     	;# 
  2921  1FE6                     	;# 
  2922  1FE7                     	;# 
  2923  1FE8                     	;# 
  2924  1FE8                     	;# 
  2925  1FE9                     	;# 
  2926  1FEA                     	;# 
  2927  1FEB                     	;# 
  2928  1FED                     	;# 
  2929  1FEE                     	;# 
  2930  1FEF                     	;# 
  2931  0000                     	;# 
  2932  0001                     	;# 
  2933  0002                     	;# 
  2934  0003                     	;# 
  2935  0004                     	;# 
  2936  0005                     	;# 
  2937  0006                     	;# 
  2938  0007                     	;# 
  2939  0008                     	;# 
  2940  0009                     	;# 
  2941  000A                     	;# 
  2942  000B                     	;# 
  2943  000C                     	;# 
  2944  000D                     	;# 
  2945  000E                     	;# 
  2946  0010                     	;# 
  2947  0012                     	;# 
  2948  0013                     	;# 
  2949  0014                     	;# 
  2950  0016                     	;# 
  2951  0018                     	;# 
  2952  0019                     	;# 
  2953  001A                     	;# 
  2954  009B                     	;# 
  2955  009B                     	;# 
  2956  009C                     	;# 
  2957  009D                     	;# 
  2958  009E                     	;# 
  2959  009F                     	;# 
  2960  0119                     	;# 
  2961  0119                     	;# 
  2962  0119                     	;# 
  2963  011A                     	;# 
  2964  011A                     	;# 
  2965  011A                     	;# 
  2966  011B                     	;# 
  2967  011B                     	;# 
  2968  011B                     	;# 
  2969  011B                     	;# 
  2970  011B                     	;# 
  2971  011C                     	;# 
  2972  011C                     	;# 
  2973  011C                     	;# 
  2974  011D                     	;# 
  2975  011D                     	;# 
  2976  011D                     	;# 
  2977  011E                     	;# 
  2978  011E                     	;# 
  2979  011E                     	;# 
  2980  011F                     	;# 
  2981  011F                     	;# 
  2982  011F                     	;# 
  2983  011F                     	;# 
  2984  011F                     	;# 
  2985  018C                     	;# 
  2986  018D                     	;# 
  2987  018E                     	;# 
  2988  018F                     	;# 
  2989  0190                     	;# 
  2990  0191                     	;# 
  2991  0192                     	;# 
  2992  0196                     	;# 
  2993  0197                     	;# 
  2994  0198                     	;# 
  2995  0199                     	;# 
  2996  019A                     	;# 
  2997  019B                     	;# 
  2998  019C                     	;# 
  2999  020C                     	;# 
  3000  020C                     	;# 
  3001  020D                     	;# 
  3002  020E                     	;# 
  3003  020F                     	;# 
  3004  020F                     	;# 
  3005  0210                     	;# 
  3006  0210                     	;# 
  3007  0211                     	;# 
  3008  0211                     	;# 
  3009  028C                     	;# 
  3010  028C                     	;# 
  3011  028D                     	;# 
  3012  028D                     	;# 
  3013  028E                     	;# 
  3014  028F                     	;# 
  3015  0290                     	;# 
  3016  0291                     	;# 
  3017  030C                     	;# 
  3018  030C                     	;# 
  3019  030D                     	;# 
  3020  030E                     	;# 
  3021  030F                     	;# 
  3022  0310                     	;# 
  3023  0310                     	;# 
  3024  0311                     	;# 
  3025  0312                     	;# 
  3026  0313                     	;# 
  3027  0314                     	;# 
  3028  0314                     	;# 
  3029  0315                     	;# 
  3030  0316                     	;# 
  3031  0318                     	;# 
  3032  0318                     	;# 
  3033  0319                     	;# 
  3034  031A                     	;# 
  3035  031C                     	;# 
  3036  031C                     	;# 
  3037  031D                     	;# 
  3038  031E                     	;# 
  3039  038C                     	;# 
  3040  038C                     	;# 
  3041  038D                     	;# 
  3042  038E                     	;# 
  3043  058C                     	;# 
  3044  058C                     	;# 
  3045  058D                     	;# 
  3046  058E                     	;# 
  3047  058F                     	;# 
  3048  058F                     	;# 
  3049  0590                     	;# 
  3050  0591                     	;# 
  3051  0592                     	;# 
  3052  0593                     	;# 
  3053  059C                     	;# 
  3054  059C                     	;# 
  3055  059D                     	;# 
  3056  059D                     	;# 
  3057  059E                     	;# 
  3058  059F                     	;# 
  3059  060C                     	;# 
  3060  060D                     	;# 
  3061  060E                     	;# 
  3062  060F                     	;# 
  3063  0610                     	;# 
  3064  0611                     	;# 
  3065  0612                     	;# 
  3066  0613                     	;# 
  3067  0614                     	;# 
  3068  070C                     	;# 
  3069  070D                     	;# 
  3070  070E                     	;# 
  3071  070F                     	;# 
  3072  0710                     	;# 
  3073  0711                     	;# 
  3074  0712                     	;# 
  3075  0713                     	;# 
  3076  0716                     	;# 
  3077  0717                     	;# 
  3078  0718                     	;# 
  3079  0719                     	;# 
  3080  071A                     	;# 
  3081  071B                     	;# 
  3082  071C                     	;# 
  3083  071D                     	;# 
  3084  0796                     	;# 
  3085  0797                     	;# 
  3086  0798                     	;# 
  3087  0799                     	;# 
  3088  079A                     	;# 
  3089  079B                     	;# 
  3090  080C                     	;# 
  3091  080D                     	;# 
  3092  080E                     	;# 
  3093  080F                     	;# 
  3094  0810                     	;# 
  3095  0811                     	;# 
  3096  0812                     	;# 
  3097  0813                     	;# 
  3098  0814                     	;# 
  3099  081A                     	;# 
  3100  081A                     	;# 
  3101  081B                     	;# 
  3102  081C                     	;# 
  3103  081C                     	;# 
  3104  081D                     	;# 
  3105  081E                     	;# 
  3106  081F                     	;# 
  3107  088C                     	;# 
  3108  088D                     	;# 
  3109  088E                     	;# 
  3110  088F                     	;# 
  3111  0890                     	;# 
  3112  0891                     	;# 
  3113  0892                     	;# 
  3114  0893                     	;# 
  3115  0895                     	;# 
  3116  0896                     	;# 
  3117  090C                     	;# 
  3118  090E                     	;# 
  3119  090F                     	;# 
  3120  091F                     	;# 
  3121  098F                     	;# 
  3122  098F                     	;# 
  3123  0990                     	;# 
  3124  0991                     	;# 
  3125  0992                     	;# 
  3126  0993                     	;# 
  3127  0994                     	;# 
  3128  0995                     	;# 
  3129  0996                     	;# 
  3130  0997                     	;# 
  3131  0A19                     	;# 
  3132  0A19                     	;# 
  3133  0A1A                     	;# 
  3134  0A1A                     	;# 
  3135  0A1B                     	;# 
  3136  0A1B                     	;# 
  3137  0A1B                     	;# 
  3138  0A1C                     	;# 
  3139  0A1C                     	;# 
  3140  0A1D                     	;# 
  3141  0A1D                     	;# 
  3142  0A1E                     	;# 
  3143  0A1E                     	;# 
  3144  0A1F                     	;# 
  3145  0A1F                     	;# 
  3146  0A1F                     	;# 
  3147  1E0F                     	;# 
  3148  1E10                     	;# 
  3149  1E11                     	;# 
  3150  1E12                     	;# 
  3151  1E13                     	;# 
  3152  1E14                     	;# 
  3153  1E15                     	;# 
  3154  1E16                     	;# 
  3155  1E17                     	;# 
  3156  1E18                     	;# 
  3157  1E19                     	;# 
  3158  1E1A                     	;# 
  3159  1E1B                     	;# 
  3160  1E1C                     	;# 
  3161  1E1D                     	;# 
  3162  1E1E                     	;# 
  3163  1E1F                     	;# 
  3164  1E20                     	;# 
  3165  1E21                     	;# 
  3166  1E22                     	;# 
  3167  1E23                     	;# 
  3168  1E24                     	;# 
  3169  1E25                     	;# 
  3170  1E26                     	;# 
  3171  1E27                     	;# 
  3172  1E28                     	;# 
  3173  1E29                     	;# 
  3174  1E2A                     	;# 
  3175  1E2B                     	;# 
  3176  1E2C                     	;# 
  3177  1E2D                     	;# 
  3178  1E2E                     	;# 
  3179  1E2F                     	;# 
  3180  1E30                     	;# 
  3181  1E31                     	;# 
  3182  1E32                     	;# 
  3183  1E33                     	;# 
  3184  1E34                     	;# 
  3185  1E35                     	;# 
  3186  1E36                     	;# 
  3187  1E37                     	;# 
  3188  1E8F                     	;# 
  3189  1E90                     	;# 
  3190  1E91                     	;# 
  3191  1E92                     	;# 
  3192  1E93                     	;# 
  3193  1E9C                     	;# 
  3194  1EA1                     	;# 
  3195  1EA2                     	;# 
  3196  1EB1                     	;# 
  3197  1EBB                     	;# 
  3198  1EBC                     	;# 
  3199  1EBD                     	;# 
  3200  1EBE                     	;# 
  3201  1EC3                     	;# 
  3202  1EC5                     	;# 
  3203  1EC6                     	;# 
  3204  1EC7                     	;# 
  3205  1EC8                     	;# 
  3206  1EC9                     	;# 
  3207  1ECA                     	;# 
  3208  1ECB                     	;# 
  3209  1ECC                     	;# 
  3210  1ECD                     	;# 
  3211  1ECE                     	;# 
  3212  1F10                     	;# 
  3213  1F11                     	;# 
  3214  1F12                     	;# 
  3215  1F13                     	;# 
  3216  1F14                     	;# 
  3217  1F15                     	;# 
  3218  1F16                     	;# 
  3219  1F17                     	;# 
  3220  1F18                     	;# 
  3221  1F19                     	;# 
  3222  1F1A                     	;# 
  3223  1F1B                     	;# 
  3224  1F1C                     	;# 
  3225  1F1D                     	;# 
  3226  1F1E                     	;# 
  3227  1F1F                     	;# 
  3228  1F20                     	;# 
  3229  1F21                     	;# 
  3230  1F22                     	;# 
  3231  1F23                     	;# 
  3232  1F24                     	;# 
  3233  1F25                     	;# 
  3234  1F26                     	;# 
  3235  1F27                     	;# 
  3236  1F38                     	;# 
  3237  1F39                     	;# 
  3238  1F3A                     	;# 
  3239  1F3B                     	;# 
  3240  1F3C                     	;# 
  3241  1F3D                     	;# 
  3242  1F3E                     	;# 
  3243  1F3F                     	;# 
  3244  1F43                     	;# 
  3245  1F44                     	;# 
  3246  1F45                     	;# 
  3247  1F46                     	;# 
  3248  1F47                     	;# 
  3249  1F48                     	;# 
  3250  1F49                     	;# 
  3251  1F4A                     	;# 
  3252  1F4E                     	;# 
  3253  1F4F                     	;# 
  3254  1F50                     	;# 
  3255  1F51                     	;# 
  3256  1F52                     	;# 
  3257  1F53                     	;# 
  3258  1F54                     	;# 
  3259  1F55                     	;# 
  3260  1F65                     	;# 
  3261  1F68                     	;# 
  3262  1F69                     	;# 
  3263  1F6A                     	;# 
  3264  1F6B                     	;# 
  3265  1FE4                     	;# 
  3266  1FE5                     	;# 
  3267  1FE6                     	;# 
  3268  1FE7                     	;# 
  3269  1FE8                     	;# 
  3270  1FE8                     	;# 
  3271  1FE9                     	;# 
  3272  1FEA                     	;# 
  3273  1FEB                     	;# 
  3274  1FED                     	;# 
  3275  1FEE                     	;# 
  3276  1FEF                     	;# 
  3277                           
  3278                           	psect	idataBANK3
  3279  1BDE                     __pidataBANK3:	
  3280                           
  3281                           ;initializer for OLED_print_xy@F7528
  3282  1BDE  3400               	retlw	0
  3283  1BDF  3440               	retlw	64
  3284  1BE0  3414               	retlw	20
  3285  1BE1  3454               	retlw	84
  3286                           
  3287                           ;initializer for OLED_setCursor@F7522
  3288  1BE2  3400               	retlw	0
  3289  1BE3  3440               	retlw	64
  3290  1BE4  3414               	retlw	20
  3291  1BE5  3454               	retlw	84
  3292                           
  3293                           	psect	stringtext1
  3294  209E                     __pstringtext1:	
  3295  209E                     _transition_table:	
  3296  209E  3400               	retlw	0
  3297  209F  3404               	retlw	4
  3298  20A0  3401               	retlw	1
  3299  20A1  3400               	retlw	0
  3300  20A2  3482               	retlw	130
  3301  20A3  3400               	retlw	0
  3302  20A4  3401               	retlw	1
  3303  20A5  3400               	retlw	0
  3304  20A6  3402               	retlw	2
  3305  20A7  3403               	retlw	3
  3306  20A8  3401               	retlw	1
  3307  20A9  3400               	retlw	0
  3308  20AA  3402               	retlw	2
  3309  20AB  3403               	retlw	3
  3310  20AC  3400               	retlw	0
  3311  20AD  3480               	retlw	128
  3312  20AE  3445               	retlw	69
  3313  20AF  3404               	retlw	4
  3314  20B0  3400               	retlw	0
  3315  20B1  3400               	retlw	0
  3316  20B2  3405               	retlw	5
  3317  20B3  3404               	retlw	4
  3318  20B4  3406               	retlw	6
  3319  20B5  3400               	retlw	0
  3320  20B6  3405               	retlw	5
  3321  20B7  3400               	retlw	0
  3322  20B8  3406               	retlw	6
  3323  20B9  3440               	retlw	64
  3324  20BA                     __end_of_transition_table:	
  3325                           
  3326                           	psect	stringtext2
  3327  20FF                     __pstringtext2:	
  3328  20FF                     _dpowers:	
  3329  20FF  3401               	retlw	1
  3330  2100  3400               	retlw	0
  3331  2101  340A               	retlw	10
  3332  2102  3400               	retlw	0
  3333  2103  3464               	retlw	100
  3334  2104  3400               	retlw	0
  3335  2105  34E8               	retlw	232
  3336  2106  3403               	retlw	3
  3337  2107  3410               	retlw	16
  3338  2108  3427               	retlw	39
  3339  2109                     __end_of_dpowers:	
  3340                           
  3341                           	psect	stringtext3
  3342  2059                     __pstringtext3:	
  3343  2059                     log@coeff:	
  3344  2059  3400               	retlw	0
  3345  205A  3400               	retlw	0
  3346  205B  3400               	retlw	0
  3347  205C  3400               	retlw	0
  3348  205D  34C4               	retlw	196
  3349  205E  34FF               	retlw	255
  3350  205F  347F               	retlw	127
  3351  2060  343F               	retlw	63
  3352  2061  3480               	retlw	128
  3353  2062  34EF               	retlw	239
  3354  2063  34FF               	retlw	255
  3355  2064  34BE               	retlw	190
  3356  2065  3490               	retlw	144
  3357  2066  34E1               	retlw	225
  3358  2067  34A9               	retlw	169
  3359  2068  343E               	retlw	62
  3360  2069  34EC               	retlw	236
  3361  206A  3482               	retlw	130
  3362  206B  3476               	retlw	118
  3363  206C  34BE               	retlw	190
  3364  206D  3482               	retlw	130
  3365  206E  34AD               	retlw	173
  3366  206F  342B               	retlw	43
  3367  2070  343E               	retlw	62
  3368  2071  340E               	retlw	14
  3369  2072  343C               	retlw	60
  3370  2073  34C3               	retlw	195
  3371  2074  34BD               	retlw	189
  3372  2075  3487               	retlw	135
  3373  2076  34D1               	retlw	209
  3374  2077  3413               	retlw	19
  3375  2078  343D               	retlw	61
  3376  2079  3441               	retlw	65
  3377  207A  3478               	retlw	120
  3378  207B  34D3               	retlw	211
  3379  207C  34BB               	retlw	187
  3380  207D                     __end_oflog@coeff:	
  3381                           
  3382                           	psect	nvBANK2
  3383  0163                     __pnvBANK2:	
  3384  0163                     _timer1ReloadVal:	
  3385  0163                     	ds	2
  3386  0165                     _TMR0_InterruptHandler:	
  3387  0165                     	ds	2
  3388  0167                     _IOCCF2_InterruptHandler:	
  3389  0167                     	ds	2
  3390  0169                     _IOCAF7_InterruptHandler:	
  3391  0169                     	ds	2
  3392  016B                     _IOCAF5_InterruptHandler:	
  3393  016B                     	ds	2
  3394  016D                     _IOCAF4_InterruptHandler:	
  3395  016D                     	ds	2
  3396  016F                     _eusart1TxBufferRemaining:	
  3397  016F                     	ds	1
  3398                           
  3399                           	psect	nvBANK3
  3400  01C0                     __pnvBANK3:	
  3401  01C0                     _TMR1_InterruptHandler:	
  3402  01C0                     	ds	2
  3403  01C2                     _EUSART1_RxDefaultInterruptHandler:	
  3404  01C2                     	ds	2
  3405  01C4                     _EUSART1_TxDefaultInterruptHandler:	
  3406  01C4                     	ds	2
  3407  000E                     _PORTCbits	set	14
  3408  0014                     _TRISCbits	set	20
  3409  0019                     _LATBbits	set	25
  3410  0018                     _LATAbits	set	24
  3411  001A                     _LATCbits	set	26
  3412  000C                     _PORTAbits	set	12
  3413  000B                     _INTCONbits	set	11
  3414  0014                     _TRISC	set	20
  3415  0013                     _TRISB	set	19
  3416  0012                     _TRISA	set	18
  3417  001A                     _LATC	set	26
  3418  0019                     _LATB	set	25
  3419  0018                     _LATA	set	24
  3420  009D                     _ADCON0bits	set	157
  3421  009C                     _ADRESH	set	156
  3422  009B                     _ADRESL	set	155
  3423  009E                     _ADCON1	set	158
  3424  009D                     _ADCON0	set	157
  3425  0119                     _RC1REG	set	281
  3426  011D                     _RC1STAbits	set	285
  3427  011A                     _TX1REG	set	282
  3428  011E                     _TX1STAbits	set	286
  3429  011C                     _SP1BRGH	set	284
  3430  011B                     _SP1BRGL	set	283
  3431  011E                     _TX1STA	set	286
  3432  011D                     _RC1STA	set	285
  3433  011F                     _BAUD1CON	set	287
  3434  020F                     _T1GCONbits	set	527
  3435  020E                     _T1CONbits	set	526
  3436  020E                     _T1CON	set	526
  3437  020C                     _TMR1L	set	524
  3438  020D                     _TMR1H	set	525
  3439  0211                     _T1CLK	set	529
  3440  0210                     _T1GATE	set	528
  3441  020F                     _T1GCON	set	527
  3442  059E                     _T0CON0bits	set	1438
  3443  059E                     _T0CON0	set	1438
  3444  059C                     _TMR0L	set	1436
  3445  059D                     _TMR0H	set	1437
  3446  059F                     _T0CON1	set	1439
  3447  070F                     _PIR3bits	set	1807
  3448  0710                     _PIR4bits	set	1808
  3449  071A                     _PIE4bits	set	1818
  3450  070C                     _PIR0bits	set	1804
  3451  0719                     _PIE3bits	set	1817
  3452  0716                     _PIE0bits	set	1814
  3453  079B                     _PMD5	set	1947
  3454  079A                     _PMD4	set	1946
  3455  0799                     _PMD3	set	1945
  3456  0798                     _PMD2	set	1944
  3457  0797                     _PMD1	set	1943
  3458  0796                     _PMD0	set	1942
  3459  0892                     _OSCTUNE	set	2194
  3460  0890                     _OSCSTAT	set	2192
  3461  0893                     _OSCFRQ	set	2195
  3462  0891                     _OSCEN	set	2193
  3463  088F                     _OSCCON3	set	2191
  3464  088D                     _OSCCON1	set	2189
  3465  1ECB                     _RX1DTPPSbits	set	7883
  3466  1F26                     _RC6PPS	set	7974
  3467  1F53                     _IOCCPbits	set	8019
  3468  1F54                     _IOCCNbits	set	8020
  3469  1F55                     _IOCCFbits	set	8021
  3470  1F3D                     _IOCAPbits	set	7997
  3471  1F3E                     _IOCANbits	set	7998
  3472  1F3F                     _IOCAFbits	set	7999
  3473  1F50                     _ODCONC	set	8016
  3474  1F45                     _ODCONB	set	8005
  3475  1F3A                     _ODCONA	set	7994
  3476  1F4F                     _WPUC	set	8015
  3477  1F39                     _WPUA	set	7993
  3478  1F44                     _WPUB	set	8004
  3479  1F65                     _WPUE	set	8037
  3480  1F38                     _ANSELA	set	7992
  3481  1F43                     _ANSELB	set	8003
  3482  1F4E                     _ANSELC	set	8014
  3483                           
  3484                           	psect	stringtext4
  3485  1800                     __pstringtext4:	
  3486  1800                     STR_12:	
  3487  1800  3425               	retlw	37	;'%'
  3488  1801  3433               	retlw	51	;'3'
  3489  1802  3464               	retlw	100	;'d'
  3490  1803  342C               	retlw	44	;','
  3491  1804  3425               	retlw	37	;'%'
  3492  1805  3464               	retlw	100	;'d'
  3493  1806  3420               	retlw	32	;' '
  3494  1807  34DF               	retlw	-33
  3495  1808  3443               	retlw	67	;'C'
  3496  1809  3420               	retlw	32	;' '
  3497  180A  3420               	retlw	32	;' '
  3498  180B  3420               	retlw	32	;' '
  3499  180C  3420               	retlw	32	;' '
  3500  180D  3425               	retlw	37	;'%'
  3501  180E  3433               	retlw	51	;'3'
  3502  180F  3464               	retlw	100	;'d'
  3503  1810  342C               	retlw	44	;','
  3504  1811  3425               	retlw	37	;'%'
  3505  1812  3464               	retlw	100	;'d'
  3506  1813  3420               	retlw	32	;' '
  3507  1814  3425               	retlw	37	;'%'
  3508  1815  3425               	retlw	37	;'%'
  3509  1816  3472               	retlw	114	;'r'
  3510  1817  3465               	retlw	101	;'e'
  3511  1818  346C               	retlw	108	;'l'
  3512  1819  3420               	retlw	32	;' '
  3513  181A  3420               	retlw	32	;' '
  3514  181B  3420               	retlw	32	;' '
  3515  181C  3420               	retlw	32	;' '
  3516  181D  342D               	retlw	45	;'-'
  3517  181E  3478               	retlw	120	;'x'
  3518  181F  3478               	retlw	120	;'x'
  3519  1820  342C               	retlw	44	;','
  3520  1821  3478               	retlw	120	;'x'
  3521  1822  3420               	retlw	32	;' '
  3522  1823  34DF               	retlw	-33
  3523  1824  3443               	retlw	67	;'C'
  3524  1825  3420               	retlw	32	;' '
  3525  1826  3420               	retlw	32	;' '
  3526  1827  3420               	retlw	32	;' '
  3527  1828  3420               	retlw	32	;' '
  3528  1829  3425               	retlw	37	;'%'
  3529  182A  3432               	retlw	50	;'2'
  3530  182B  3475               	retlw	117	;'u'
  3531  182C  342C               	retlw	44	;','
  3532  182D  3425               	retlw	37	;'%'
  3533  182E  3431               	retlw	49	;'1'
  3534  182F  3475               	retlw	117	;'u'
  3535  1830  3456               	retlw	86	;'V'
  3536  1831  3420               	retlw	32	;' '
  3537  1832  3420               	retlw	32	;' '
  3538  1833  3425               	retlw	37	;'%'
  3539  1834  3432               	retlw	50	;'2'
  3540  1835  3475               	retlw	117	;'u'
  3541  1836  342C               	retlw	44	;','
  3542  1837  3425               	retlw	37	;'%'
  3543  1838  3475               	retlw	117	;'u'
  3544  1839  3457               	retlw	87	;'W'
  3545  183A  3400               	retlw	0
  3546                           
  3547                           	psect	stringtext5
  3548  2000                     __pstringtext5:	
  3549  2000                     STR_11:	
  3550  2000  3454               	retlw	84	;'T'
  3551  2001  3465               	retlw	101	;'e'
  3552  2002  346D               	retlw	109	;'m'
  3553  2003  3470               	retlw	112	;'p'
  3554  2004  3465               	retlw	101	;'e'
  3555  2005  3472               	retlw	114	;'r'
  3556  2006  3461               	retlw	97	;'a'
  3557  2007  3474               	retlw	116	;'t'
  3558  2008  3475               	retlw	117	;'u'
  3559  2009  3472               	retlw	114	;'r'
  3560  200A  3420               	retlw	32	;' '
  3561  200B  3420               	retlw	32	;' '
  3562  200C  3446               	retlw	70	;'F'
  3563  200D  3465               	retlw	101	;'e'
  3564  200E  3475               	retlw	117	;'u'
  3565  200F  3463               	retlw	99	;'c'
  3566  2010  3468               	retlw	104	;'h'
  3567  2011  3474               	retlw	116	;'t'
  3568  2012  3465               	retlw	101	;'e'
  3569  2013  3420               	retlw	32	;' '
  3570  2014  3420               	retlw	32	;' '
  3571  2015  3420               	retlw	32	;' '
  3572  2016  3420               	retlw	32	;' '
  3573  2017  3420               	retlw	32	;' '
  3574  2018  3454               	retlw	84	;'T'
  3575  2019  3461               	retlw	97	;'a'
  3576  201A  3475               	retlw	117	;'u'
  3577  201B  3470               	retlw	112	;'p'
  3578  201C  3475               	retlw	117	;'u'
  3579  201D  346E               	retlw	110	;'n'
  3580  201E  346B               	retlw	107	;'k'
  3581  201F  3474               	retlw	116	;'t'
  3582  2020  3420               	retlw	32	;' '
  3583  2021  3420               	retlw	32	;' '
  3584  2022  3420               	retlw	32	;' '
  3585  2023  3420               	retlw	32	;' '
  3586  2024  3442               	retlw	66	;'B'
  3587  2025  3461               	retlw	97	;'a'
  3588  2026  3474               	retlw	116	;'t'
  3589  2027  3474               	retlw	116	;'t'
  3590  2028  3465               	retlw	101	;'e'
  3591  2029  3472               	retlw	114	;'r'
  3592  202A  3469               	retlw	105	;'i'
  3593  202B  3465               	retlw	101	;'e'
  3594  202C  3400               	retlw	0
  3595                           
  3596                           	psect	stringtext6
  3597  202D                     __pstringtext6:	
  3598  202D                     STR_13:	
  3599  202D  344B               	retlw	75	;'K'
  3600  202E  3461               	retlw	97	;'a'
  3601  202F  346E               	retlw	110	;'n'
  3602  2030  3461               	retlw	97	;'a'
  3603  2031  346C               	retlw	108	;'l'
  3604  2032  3420               	retlw	32	;' '
  3605  2033  3431               	retlw	49	;'1'
  3606  2034  3420               	retlw	32	;' '
  3607  2035  3420               	retlw	32	;' '
  3608  2036  3420               	retlw	32	;' '
  3609  2037  3420               	retlw	32	;' '
  3610  2038  3420               	retlw	32	;' '
  3611  2039  344B               	retlw	75	;'K'
  3612  203A  3461               	retlw	97	;'a'
  3613  203B  346E               	retlw	110	;'n'
  3614  203C  3461               	retlw	97	;'a'
  3615  203D  346C               	retlw	108	;'l'
  3616  203E  3420               	retlw	32	;' '
  3617  203F  3432               	retlw	50	;'2'
  3618  2040  3420               	retlw	32	;' '
  3619  2041  3420               	retlw	32	;' '
  3620  2042  3420               	retlw	32	;' '
  3621  2043  3420               	retlw	32	;' '
  3622  2044  3420               	retlw	32	;' '
  3623  2045  344B               	retlw	75	;'K'
  3624  2046  3461               	retlw	97	;'a'
  3625  2047  346E               	retlw	110	;'n'
  3626  2048  3461               	retlw	97	;'a'
  3627  2049  346C               	retlw	108	;'l'
  3628  204A  3420               	retlw	32	;' '
  3629  204B  3433               	retlw	51	;'3'
  3630  204C  3420               	retlw	32	;' '
  3631  204D  3420               	retlw	32	;' '
  3632  204E  3420               	retlw	32	;' '
  3633  204F  3420               	retlw	32	;' '
  3634  2050  3420               	retlw	32	;' '
  3635  2051  344B               	retlw	75	;'K'
  3636  2052  3461               	retlw	97	;'a'
  3637  2053  346E               	retlw	110	;'n'
  3638  2054  3461               	retlw	97	;'a'
  3639  2055  346C               	retlw	108	;'l'
  3640  2056  3420               	retlw	32	;' '
  3641  2057  3434               	retlw	52	;'4'
  3642  2058  3400               	retlw	0
  3643                           
  3644                           	psect	stringtext7
  3645  207D                     __pstringtext7:	
  3646  207D                     STR_14:	
  3647  207D  3425               	retlw	37	;'%'
  3648  207E  3432               	retlw	50	;'2'
  3649  207F  3464               	retlw	100	;'d'
  3650  2080  3420               	retlw	32	;' '
  3651  2081  3425               	retlw	37	;'%'
  3652  2082  3425               	retlw	37	;'%'
  3653  2083  3420               	retlw	32	;' '
  3654  2084  3420               	retlw	32	;' '
  3655  2085  3425               	retlw	37	;'%'
  3656  2086  3432               	retlw	50	;'2'
  3657  2087  3475               	retlw	117	;'u'
  3658  2088  342C               	retlw	44	;','
  3659  2089  3425               	retlw	37	;'%'
  3660  208A  3475               	retlw	117	;'u'
  3661  208B  3420               	retlw	32	;' '
  3662  208C  3457               	retlw	87	;'W'
  3663  208D  3425               	retlw	37	;'%'
  3664  208E  3432               	retlw	50	;'2'
  3665  208F  3464               	retlw	100	;'d'
  3666  2090  3420               	retlw	32	;' '
  3667  2091  3425               	retlw	37	;'%'
  3668  2092  3425               	retlw	37	;'%'
  3669  2093  3420               	retlw	32	;' '
  3670  2094  3420               	retlw	32	;' '
  3671  2095  3425               	retlw	37	;'%'
  3672  2096  3432               	retlw	50	;'2'
  3673  2097  3475               	retlw	117	;'u'
  3674  2098  342C               	retlw	44	;','
  3675  2099  3425               	retlw	37	;'%'
  3676  209A  3475               	retlw	117	;'u'
  3677  209B  3420               	retlw	32	;' '
  3678  209C  3457               	retlw	87	;'W'
  3679  209D  3400               	retlw	0
  3680                           
  3681                           	psect	stringtext8
  3682  20BA                     __pstringtext8:	
  3683  20BA                     STR_7:	
  3684  20BA  3452               	retlw	82	;'R'
  3685  20BB  3465               	retlw	101	;'e'
  3686  20BC  346D               	retlw	109	;'m'
  3687  20BD  346F               	retlw	111	;'o'
  3688  20BE  3476               	retlw	118	;'v'
  3689  20BF  3465               	retlw	101	;'e'
  3690  20C0  3420               	retlw	32	;' '
  3691  20C1  3473               	retlw	115	;'s'
  3692  20C2  3468               	retlw	104	;'h'
  3693  20C3  346F               	retlw	111	;'o'
  3694  20C4  3472               	retlw	114	;'r'
  3695  20C5  3474               	retlw	116	;'t'
  3696  20C6  3400               	retlw	0
  3697                           
  3698                           	psect	stringtext9
  3699  20C7                     __pstringtext9:	
  3700  20C7                     STR_9:	
  3701  20C7  3448               	retlw	72	;'H'
  3702  20C8  346F               	retlw	111	;'o'
  3703  20C9  346C               	retlw	108	;'l'
  3704  20CA  3464               	retlw	100	;'d'
  3705  20CB  3420               	retlw	32	;' '
  3706  20CC  3462               	retlw	98	;'b'
  3707  20CD  3475               	retlw	117	;'u'
  3708  20CE  3474               	retlw	116	;'t'
  3709  20CF  3474               	retlw	116	;'t'
  3710  20D0  346F               	retlw	111	;'o'
  3711  20D1  346E               	retlw	110	;'n'
  3712  20D2  3400               	retlw	0
  3713                           
  3714                           	psect	stringtext10
  3715  20D3                     __pstringtext10:	
  3716  20D3                     STR_16:	
  3717  20D3  344B               	retlw	75	;'K'
  3718  20D4  3461               	retlw	97	;'a'
  3719  20D5  346E               	retlw	110	;'n'
  3720  20D6  3461               	retlw	97	;'a'
  3721  20D7  346C               	retlw	108	;'l'
  3722  20D8  3420               	retlw	32	;' '
  3723  20D9  3425               	retlw	37	;'%'
  3724  20DA  3464               	retlw	100	;'d'
  3725  20DB  343A               	retlw	58	;':'
  3726  20DC  3420               	retlw	32	;' '
  3727  20DD  3400               	retlw	0
  3728                           
  3729                           	psect	stringtext11
  3730  20DE                     __pstringtext11:	
  3731  20DE                     STR_2:	
  3732  20DE  3475               	retlw	117	;'u'
  3733  20DF  346E               	retlw	110	;'n'
  3734  20E0  3464               	retlw	100	;'d'
  3735  20E1  3465               	retlw	101	;'e'
  3736  20E2  3472               	retlw	114	;'r'
  3737  20E3  3476               	retlw	118	;'v'
  3738  20E4  346F               	retlw	111	;'o'
  3739  20E5  346C               	retlw	108	;'l'
  3740  20E6  3474               	retlw	116	;'t'
  3741  20E7  342E               	retlw	46	;'.'
  3742  20E8  3400               	retlw	0
  3743                           
  3744                           	psect	stringtext12
  3745  20E9                     __pstringtext12:	
  3746  20E9                     STR_6:	
  3747  20E9  346F               	retlw	111	;'o'
  3748  20EA  3476               	retlw	118	;'v'
  3749  20EB  3465               	retlw	101	;'e'
  3750  20EC  3472               	retlw	114	;'r'
  3751  20ED  346C               	retlw	108	;'l'
  3752  20EE  346F               	retlw	111	;'o'
  3753  20EF  3461               	retlw	97	;'a'
  3754  20F0  3464               	retlw	100	;'d'
  3755  20F1  3465               	retlw	101	;'e'
  3756  20F2  3464               	retlw	100	;'d'
  3757  20F3  3400               	retlw	0
  3758                           
  3759                           	psect	stringtext13
  3760  20F4                     __pstringtext13:	
  3761  20F4                     STR_1:	
  3762  20F4  344D               	retlw	77	;'M'
  3763  20F5  3461               	retlw	97	;'a'
  3764  20F6  3469               	retlw	105	;'i'
  3765  20F7  346E               	retlw	110	;'n'
  3766  20F8  3420               	retlw	32	;' '
  3767  20F9  3442               	retlw	66	;'B'
  3768  20FA  3420               	retlw	32	;' '
  3769  20FB  3462               	retlw	98	;'b'
  3770  20FC  3475               	retlw	117	;'u'
  3771  20FD  3473               	retlw	115	;'s'
  3772  20FE  3400               	retlw	0
  3773                           
  3774                           	psect	stringtext14
  3775  2109                     __pstringtext14:	
  3776  2109                     STR_4:	
  3777  2109  346F               	retlw	111	;'o'
  3778  210A  3476               	retlw	118	;'v'
  3779  210B  3465               	retlw	101	;'e'
  3780  210C  3472               	retlw	114	;'r'
  3781  210D  3476               	retlw	118	;'v'
  3782  210E  346F               	retlw	111	;'o'
  3783  210F  346C               	retlw	108	;'l'
  3784  2110  3474               	retlw	116	;'t'
  3785  2111  342E               	retlw	46	;'.'
  3786  2112  3400               	retlw	0
  3787                           
  3788                           	psect	stringtext15
  3789  2113                     __pstringtext15:	
  3790  2113                     STR_15:	
  3791  2113  3454               	retlw	84	;'T'
  3792  2114  3461               	retlw	97	;'a'
  3793  2115  3473               	retlw	115	;'s'
  3794  2116  3474               	retlw	116	;'t'
  3795  2117  3467               	retlw	103	;'g'
  3796  2118  3472               	retlw	114	;'r'
  3797  2119  3461               	retlw	97	;'a'
  3798  211A  3464               	retlw	100	;'d'
  3799  211B  3400               	retlw	0
  3800                           
  3801                           	psect	stringtext16
  3802  211C                     __pstringtext16:	
  3803  211C                     STR_10:	
  3804  211C  3474               	retlw	116	;'t'
  3805  211D  346F               	retlw	111	;'o'
  3806  211E  3420               	retlw	32	;' '
  3807  211F  3472               	retlw	114	;'r'
  3808  2120  3465               	retlw	101	;'e'
  3809  2121  3473               	retlw	115	;'s'
  3810  2122  3465               	retlw	101	;'e'
  3811  2123  3474               	retlw	116	;'t'
  3812  2124  3400               	retlw	0
  3813                           
  3814                           	psect	stringtext17
  3815  2125                     __pstringtext17:	
  3816  2125                     STR_8:	
  3817  2125  3463               	retlw	99	;'c'
  3818  2126  3469               	retlw	105	;'i'
  3819  2127  3472               	retlw	114	;'r'
  3820  2128  3463               	retlw	99	;'c'
  3821  2129  3475               	retlw	117	;'u'
  3822  212A  3469               	retlw	105	;'i'
  3823  212B  3474               	retlw	116	;'t'
  3824  212C  3400               	retlw	0
  3825                           
  3826                           	psect	stringtext18
  3827  212D                     __pstringtext18:	
  3828  212D                     STR_5:	
  3829  212D  344F               	retlw	79	;'O'
  3830  212E  3475               	retlw	117	;'u'
  3831  212F  3474               	retlw	116	;'t'
  3832  2130  3470               	retlw	112	;'p'
  3833  2131  3475               	retlw	117	;'u'
  3834  2132  3474               	retlw	116	;'t'
  3835  2133  3400               	retlw	0
  3836                           
  3837                           	psect	stringtext19
  3838  2134                     __pstringtext19:	
  3839  2134                     STR_17:	
  3840  2134  3425               	retlw	37	;'%'
  3841  2135  3432               	retlw	50	;'2'
  3842  2136  3464               	retlw	100	;'d'
  3843  2137  3425               	retlw	37	;'%'
  3844  2138  3425               	retlw	37	;'%'
  3845  2139  3400               	retlw	0
  3846                           
  3847                           	psect	stringtext20
  3848  0000                     __pstringtext20:	
  3849  20F4                     
  3850                           ; #config settings
  3851  0000                     
  3852                           	psect	cinit
  3853  0035                     start_initialization:	
  3854  0035                     __initialization:	
  3855                           
  3856                           ; Initialize objects allocated to BANK3
  3857  0035  30DE               	movlw	low __pidataBANK3
  3858  0036  0084               	movwf	4
  3859  0037  309B               	movlw	(high __pidataBANK3)| (0+128)
  3860  0038  0085               	movwf	5
  3861  0039  30B8               	movlw	low __pdataBANK3
  3862  003A  0086               	movwf	6
  3863  003B  3001               	movlw	high __pdataBANK3
  3864  003C  0087               	movwf	7
  3865  003D  3008               	movlw	8
  3866  003E  319B  23C0  3180   	fcall	init_ram
  3867                           
  3868                           ; Clear objects allocated to COMMON
  3869  0041  01F8               	clrf	__pbssCOMMON& (0+127)
  3870  0042  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  3871  0043  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  3872  0044  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  3873  0045  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  3874  0046  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  3875                           
  3876                           ; Clear objects allocated to BANK0
  3877  0047  01EF               	clrf	__pbssBANK0& (0+127)
  3878                           
  3879                           ; Clear objects allocated to BANK1
  3880  0048  0141               	movlb	1	; select bank1
  3881  0049  01EC               	clrf	__pbssBANK1& (0+127)
  3882  004A  01ED               	clrf	(__pbssBANK1+1)& (0+127)
  3883  004B  01EE               	clrf	(__pbssBANK1+2)& (0+127)
  3884  004C  01EF               	clrf	(__pbssBANK1+3)& (0+127)
  3885                           
  3886                           ; Clear objects allocated to BANK2
  3887  004D  3047               	movlw	low __pbssBANK2
  3888  004E  0084               	movwf	4
  3889  004F  3001               	movlw	high __pbssBANK2
  3890  0050  0085               	movwf	5
  3891  0051  301C               	movlw	28
  3892  0052  319B  23BA  3180   	fcall	clear_ram0
  3893                           
  3894                           ; Clear objects allocated to BANK3
  3895  0055  30A0               	movlw	low __pbssBANK3
  3896  0056  0084               	movwf	4
  3897  0057  3001               	movlw	high __pbssBANK3
  3898  0058  0085               	movwf	5
  3899  0059  3018               	movlw	24
  3900  005A  319B  23BA         	fcall	clear_ram0
  3901  005C                     end_of_initialization:	
  3902                           ;End of C runtime variable initialization code
  3903                           
  3904  005C                     __end_of__initialization:	
  3905  005C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3906  005D  0140               	movlb	0
  3907  005E  3180  2860         	ljmp	_main	;jump to C main() function
  3908                           
  3909                           	psect	bssCOMMON
  3910  0078                     __pbssCOMMON:	
  3911  0078                     _millis:	
  3912  0078                     	ds	4
  3913  007C                     _current_state:	
  3914  007C                     	ds	1
  3915  007D                     _eusart1TxHead:	
  3916  007D                     	ds	1
  3917                           
  3918                           	psect	bssBANK0
  3919  006F                     __pbssBANK0:	
  3920  006F                     _pb:	
  3921  006F                     	ds	1
  3922                           
  3923                           	psect	bssBANK1
  3924  00EC                     __pbssBANK1:	
  3925  00EC                     main_menu@menu:	
  3926  00EC                     	ds	1
  3927  00ED                     _dir:	
  3928  00ED                     	ds	1
  3929  00EE                     _eusart1TxTail:	
  3930  00EE                     	ds	1
  3931  00EF                     main_menu@page:	
  3932  00EF                     	ds	1
  3933                           
  3934                           	psect	bssBANK2
  3935  0147                     __pbssBANK2:	
  3936  0147                     _power:	
  3937  0147                     	ds	8
  3938  014F                     _dc:	
  3939  014F                     	ds	4
  3940  0153                     _errno:	
  3941  0153                     	ds	2
  3942  0155                     _total_power:	
  3943  0155                     	ds	2
  3944  0157                     _ntc_temp:	
  3945  0157                     	ds	2
  3946  0159                     _voltage:	
  3947  0159                     	ds	2
  3948  015B                     _rh:	
  3949  015B                     	ds	1
  3950  015C                     _fault:	
  3951  015C                     	ds	1
  3952  015D                     _pb_millis:	
  3953  015D                     	ds	1
  3954  015E                     _duty:	
  3955  015E                     	ds	1
  3956  015F                     _eusart1RxCount:	
  3957  015F                     	ds	1
  3958  0160                     _eusart1RxTail:	
  3959  0160                     	ds	1
  3960  0161                     _eusart1RxHead:	
  3961  0161                     	ds	1
  3962  0162                     _temp:	
  3963  0162                     	ds	1
  3964                           
  3965                           	psect	bssBANK3
  3966  01A0                     __pbssBANK3:	
  3967  01A0                     _current:	
  3968  01A0                     	ds	8
  3969  01A8                     _eusart1RxBuffer:	
  3970  01A8                     	ds	8
  3971  01B0                     _eusart1TxBuffer:	
  3972  01B0                     	ds	8
  3973                           
  3974                           	psect	dataBANK3
  3975  01B8                     __pdataBANK3:	
  3976  01B8                     OLED_print_xy@F7528:	
  3977  01B8                     	ds	4
  3978  01BC                     OLED_setCursor@F7522:	
  3979  01BC                     	ds	4
  3980                           
  3981                           	psect	inittext
  3982  1BC0                     init_ram:	
  3983  1BC0  00FE               	movwf	126
  3984  1BC1                     initloop:	
  3985  1BC1  0012               	moviw fsr0++
  3986  1BC2  001E               	movwi fsr1++
  3987  1BC3  0BFE               	decfsz	126,f
  3988  1BC4  2BC1               	goto	initloop
  3989  1BC5  3400               	retlw	0
  3990                           
  3991                           	psect	clrtext
  3992  1BBA                     clear_ram0:	
  3993                           ;	Called with FSR0 containing the base address, and
  3994                           ;	WREG with the size to clear
  3995                           
  3996  1BBA  0064               	clrwdt	;clear the watchdog before getting into this loop
  3997  1BBB                     clrloop0:	
  3998  1BBB  0180               	clrf	0	;clear RAM location pointed to by FSR
  3999  1BBC  3101               	addfsr 0,1
  4000  1BBD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4001  1BBE  2BBB               	goto	clrloop0	;have we reached the end yet?
  4002  1BBF  3400               	retlw	0	;all done for this memory range, return
  4003                           
  4004                           	psect	cstackBANK2
  4005  0120                     __pcstackBANK2:	
  4006  0120                     	ds	4
  4007  0124                     main@ustat:	
  4008                           
  4009                           ; 2 bytes @ 0x4
  4010  0124                     	ds	2
  4011  0126                     _main$2070:	
  4012                           
  4013                           ; 4 bytes @ 0x6
  4014  0126                     	ds	4
  4015  012A                     _main$2071:	
  4016                           
  4017                           ; 4 bytes @ 0xA
  4018  012A                     	ds	4
  4019  012E                     _main$2072:	
  4020                           
  4021                           ; 4 bytes @ 0xE
  4022  012E                     	ds	4
  4023  0132                     main@uRH:	
  4024                           
  4025                           ; 2 bytes @ 0x12
  4026  0132                     	ds	2
  4027  0134                     main@utemp_C:	
  4028                           
  4029                           ; 2 bytes @ 0x14
  4030  0134                     	ds	2
  4031  0136                     main@fH:	
  4032                           
  4033                           ; 4 bytes @ 0x16
  4034  0136                     	ds	4
  4035  013A                     _main$2073:	
  4036                           
  4037                           ; 4 bytes @ 0x1A
  4038  013A                     	ds	4
  4039  013E                     main@ftemp_C:	
  4040                           
  4041                           ; 4 bytes @ 0x1E
  4042  013E                     	ds	4
  4043  0142                     main@fRH:	
  4044                           
  4045                           ; 4 bytes @ 0x22
  4046  0142                     	ds	4
  4047  0146                     main@i:	
  4048                           
  4049                           ; 1 bytes @ 0x26
  4050  0146                     	ds	1
  4051                           
  4052                           	psect	cstackBANK1
  4053  00A0                     __pcstackBANK1:	
  4054  00A0                     ??___fladd:	
  4055  00A0                     main_menu@s:	
  4056                           ; 1 bytes @ 0x0
  4057                           
  4058                           
  4059                           ; 61 bytes @ 0x0
  4060  00A0                     	ds	8
  4061  00A8                     ___fladd@signs:	
  4062                           
  4063                           ; 1 bytes @ 0x8
  4064  00A8                     	ds	1
  4065  00A9                     ___fladd@aexp:	
  4066                           
  4067                           ; 1 bytes @ 0x9
  4068  00A9                     	ds	1
  4069  00AA                     ___fladd@bexp:	
  4070                           
  4071                           ; 1 bytes @ 0xA
  4072  00AA                     	ds	1
  4073  00AB                     ___fladd@grs:	
  4074                           
  4075                           ; 1 bytes @ 0xB
  4076  00AB                     	ds	1
  4077  00AC                     ?_eval_poly:	
  4078  00AC                     ?___flsub:	
  4079                           ; 4 bytes @ 0xC
  4080                           
  4081  00AC                     ___flsub@a:	
  4082                           ; 4 bytes @ 0xC
  4083                           
  4084  00AC                     eval_poly@x:	
  4085                           ; 4 bytes @ 0xC
  4086                           
  4087                           
  4088                           ; 4 bytes @ 0xC
  4089  00AC                     	ds	4
  4090  00B0                     eval_poly@d:	
  4091  00B0                     ___flsub@b:	
  4092                           ; 2 bytes @ 0x10
  4093                           
  4094                           
  4095                           ; 4 bytes @ 0x10
  4096  00B0                     	ds	2
  4097  00B2                     eval_poly@n:	
  4098                           
  4099                           ; 2 bytes @ 0x12
  4100  00B2                     	ds	2
  4101  00B4                     ??_eval_poly:	
  4102  00B4                     ?_round:	
  4103                           ; 1 bytes @ 0x14
  4104                           
  4105  00B4                     round@x:	
  4106                           ; 4 bytes @ 0x14
  4107                           
  4108                           
  4109                           ; 4 bytes @ 0x14
  4110  00B4                     	ds	4
  4111  00B8                     round@f:	
  4112                           
  4113                           ; 4 bytes @ 0x18
  4114  00B8                     	ds	2
  4115  00BA                     eval_poly@res:	
  4116                           
  4117                           ; 4 bytes @ 0x1A
  4118  00BA                     	ds	4
  4119  00BE                     ?_log:	
  4120  00BE                     log@x:	
  4121                           ; 4 bytes @ 0x1E
  4122                           
  4123                           
  4124                           ; 4 bytes @ 0x1E
  4125  00BE                     	ds	4
  4126  00C2                     ??_log:	
  4127                           
  4128                           ; 1 bytes @ 0x22
  4129  00C2                     	ds	1
  4130  00C3                     log@exponent:	
  4131                           
  4132                           ; 2 bytes @ 0x23
  4133  00C3                     	ds	2
  4134  00C5                     ?_log10:	
  4135  00C5                     log10@x:	
  4136                           ; 4 bytes @ 0x25
  4137                           
  4138                           
  4139                           ; 4 bytes @ 0x25
  4140  00C5                     	ds	4
  4141  00C9                     _log10$2074:	
  4142                           
  4143                           ; 4 bytes @ 0x29
  4144  00C9                     	ds	20
  4145  00DD                     _main_menu$1268:	
  4146                           
  4147                           ; 2 bytes @ 0x3D
  4148  00DD                     	ds	2
  4149  00DF                     main_menu@pages:	
  4150                           
  4151                           ; 1 bytes @ 0x3F
  4152  00DF                     	ds	1
  4153  00E0                     _main_menu$2066:	
  4154                           
  4155                           ; 2 bytes @ 0x40
  4156  00E0                     	ds	2
  4157  00E2                     _main_menu$2067:	
  4158                           
  4159                           ; 2 bytes @ 0x42
  4160  00E2                     	ds	2
  4161  00E4                     _main_menu$2068:	
  4162                           
  4163                           ; 2 bytes @ 0x44
  4164  00E4                     	ds	2
  4165  00E6                     _main_menu$2069:	
  4166                           
  4167                           ; 2 bytes @ 0x46
  4168  00E6                     	ds	2
  4169  00E8                     main_menu@i:	
  4170                           
  4171                           ; 1 bytes @ 0x48
  4172  00E8                     	ds	1
  4173  00E9                     ??_main:	
  4174                           
  4175                           ; 1 bytes @ 0x49
  4176  00E9                     	ds	3
  4177                           
  4178                           	psect	cstackCOMMON
  4179  0070                     __pcstackCOMMON:	
  4180  0070                     ?_isdigit:	
  4181  0070                     ?_PMD_Initialize:	
  4182                           ; 1 bit 
  4183                           
  4184  0070                     ?_PIN_MANAGER_Initialize:	
  4185                           ; 1 bytes @ 0x0
  4186                           
  4187  0070                     ?_OSCILLATOR_Initialize:	
  4188                           ; 1 bytes @ 0x0
  4189                           
  4190  0070                     ?_ADC_Initialize:	
  4191                           ; 1 bytes @ 0x0
  4192                           
  4193  0070                     ?_TMR1_Initialize:	
  4194                           ; 1 bytes @ 0x0
  4195                           
  4196  0070                     ?_TMR0_Initialize:	
  4197                           ; 1 bytes @ 0x0
  4198                           
  4199  0070                     ?_EUSART1_Initialize:	
  4200                           ; 1 bytes @ 0x0
  4201                           
  4202  0070                     ?_IOCAF4_DefaultInterruptHandler:	
  4203                           ; 1 bytes @ 0x0
  4204                           
  4205  0070                     ??_IOCAF4_DefaultInterruptHandler:	
  4206                           ; 1 bytes @ 0x0
  4207                           
  4208  0070                     ?_IOCAF5_DefaultInterruptHandler:	
  4209                           ; 1 bytes @ 0x0
  4210                           
  4211  0070                     ??_IOCAF5_DefaultInterruptHandler:	
  4212                           ; 1 bytes @ 0x0
  4213                           
  4214  0070                     ?_IOCAF7_DefaultInterruptHandler:	
  4215                           ; 1 bytes @ 0x0
  4216                           
  4217  0070                     ??_IOCAF7_DefaultInterruptHandler:	
  4218                           ; 1 bytes @ 0x0
  4219                           
  4220  0070                     ?_IOCCF2_DefaultInterruptHandler:	
  4221                           ; 1 bytes @ 0x0
  4222                           
  4223  0070                     ??_IOCCF2_DefaultInterruptHandler:	
  4224                           ; 1 bytes @ 0x0
  4225                           
  4226  0070                     ?_IOCAF4_ISR:	
  4227                           ; 1 bytes @ 0x0
  4228                           
  4229  0070                     ?_IOCAF5_ISR:	
  4230                           ; 1 bytes @ 0x0
  4231                           
  4232  0070                     ?_IOCAF7_ISR:	
  4233                           ; 1 bytes @ 0x0
  4234                           
  4235  0070                     ?_IOCCF2_ISR:	
  4236                           ; 1 bytes @ 0x0
  4237                           
  4238  0070                     ?_EUSART1_Receive_ISR:	
  4239                           ; 1 bytes @ 0x0
  4240                           
  4241  0070                     ??_EUSART1_Receive_ISR:	
  4242                           ; 1 bytes @ 0x0
  4243                           
  4244  0070                     ?_EUSART1_Transmit_ISR:	
  4245                           ; 1 bytes @ 0x0
  4246                           
  4247  0070                     ??_EUSART1_Transmit_ISR:	
  4248                           ; 1 bytes @ 0x0
  4249                           
  4250  0070                     ?_TMR0_ISR:	
  4251                           ; 1 bytes @ 0x0
  4252                           
  4253  0070                     ??_TMR0_ISR:	
  4254                           ; 1 bytes @ 0x0
  4255                           
  4256  0070                     ?_TMR1_ISR:	
  4257                           ; 1 bytes @ 0x0
  4258                           
  4259  0070                     ?_TMR0_DefaultInterruptHandler:	
  4260                           ; 1 bytes @ 0x0
  4261                           
  4262  0070                     ??_TMR0_DefaultInterruptHandler:	
  4263                           ; 1 bytes @ 0x0
  4264                           
  4265  0070                     ?_TMR0_CallBack:	
  4266                           ; 1 bytes @ 0x0
  4267                           
  4268  0070                     ??_TMR0_CallBack:	
  4269                           ; 1 bytes @ 0x0
  4270                           
  4271  0070                     ?_TMR1_DefaultInterruptHandler:	
  4272                           ; 1 bytes @ 0x0
  4273                           
  4274  0070                     ??_TMR1_DefaultInterruptHandler:	
  4275                           ; 1 bytes @ 0x0
  4276                           
  4277  0070                     ?_TMR1_CallBack:	
  4278                           ; 1 bytes @ 0x0
  4279                           
  4280  0070                     ?_OLED_returnHome:	
  4281                           ; 1 bytes @ 0x0
  4282                           
  4283  0070                     ?_OLED_command:	
  4284                           ; 1 bytes @ 0x0
  4285                           
  4286  0070                     ?_OLED_scrollDisplayLeft:	
  4287                           ; 1 bytes @ 0x0
  4288                           
  4289  0070                     ?_OLED_scrollDisplayRight:	
  4290                           ; 1 bytes @ 0x0
  4291                           
  4292  0070                     ?_OLED_init:	
  4293                           ; 1 bytes @ 0x0
  4294                           
  4295  0070                     ?_SYSTEM_Initialize:	
  4296                           ; 1 bytes @ 0x0
  4297                           
  4298  0070                     ?_PIN_MANAGER_IOC:	
  4299                           ; 1 bytes @ 0x0
  4300                           
  4301  0070                     ?_EUSART1_Read:	
  4302                           ; 1 bytes @ 0x0
  4303                           
  4304  0070                     ?_INTERRUPT_InterruptManager:	
  4305                           ; 1 bytes @ 0x0
  4306                           
  4307  0070                     ?_TMR1_StartTimer:	
  4308                           ; 1 bytes @ 0x0
  4309                           
  4310  0070                     ?_TMR1_StopTimer:	
  4311                           ; 1 bytes @ 0x0
  4312                           
  4313  0070                     ??_TMR1_StopTimer:	
  4314                           ; 1 bytes @ 0x0
  4315                           
  4316  0070                     ?_TMR1_WriteTimer:	
  4317                           ; 1 bytes @ 0x0
  4318                           
  4319  0070                     ?_timer0:	
  4320                           ; 1 bytes @ 0x0
  4321                           
  4322  0070                     ??_timer0:	
  4323                           ; 1 bytes @ 0x0
  4324                           
  4325  0070                     ?_rot:	
  4326                           ; 1 bytes @ 0x0
  4327                           
  4328  0070                     ??_rot:	
  4329                           ; 1 bytes @ 0x0
  4330                           
  4331  0070                     ?_pushbutton:	
  4332                           ; 1 bytes @ 0x0
  4333                           
  4334  0070                     ??_pushbutton:	
  4335                           ; 1 bytes @ 0x0
  4336                           
  4337  0070                     ?_overcurrent:	
  4338                           ; 1 bytes @ 0x0
  4339                           
  4340  0070                     ??_overcurrent:	
  4341                           ; 1 bytes @ 0x0
  4342                           
  4343  0070                     ?_read_ntc_temp:	
  4344                           ; 1 bytes @ 0x0
  4345                           
  4346  0070                     ?_read_cur_volt:	
  4347                           ; 1 bytes @ 0x0
  4348                           
  4349  0070                     ?_timer1:	
  4350                           ; 1 bytes @ 0x0
  4351                           
  4352  0070                     ??_timer1:	
  4353                           ; 1 bytes @ 0x0
  4354                           
  4355  0070                     ?_check_status:	
  4356                           ; 1 bytes @ 0x0
  4357                           
  4358  0070                     ?_main_menu:	
  4359                           ; 1 bytes @ 0x0
  4360                           
  4361  0070                     ?_main:	
  4362                           ; 1 bytes @ 0x0
  4363                           
  4364  0070                     ?_OLED_pulseEnable:	
  4365                           ; 1 bytes @ 0x0
  4366                           
  4367  0070                     ?_OLED_write4bits:	
  4368                           ; 1 bytes @ 0x0
  4369                           
  4370  0070                     ?_OLED_waitForReady:	
  4371                           ; 1 bytes @ 0x0
  4372                           
  4373  0070                     ?_OLED_write:	
  4374                           ; 1 bytes @ 0x0
  4375                           
  4376  0070                     TMR1_WriteTimer@timerVal:	
  4377                           ; 1 bytes @ 0x0
  4378                           
  4379                           
  4380                           ; 2 bytes @ 0x0
  4381  0070                     	ds	1
  4382  0071                     ??_IOCAF7_ISR:	
  4383  0071                     ??_IOCCF2_ISR:	
  4384                           ; 1 bytes @ 0x1
  4385                           
  4386  0071                     ??_TMR1_CallBack:	
  4387                           ; 1 bytes @ 0x1
  4388                           
  4389                           
  4390                           ; 1 bytes @ 0x1
  4391  0071                     	ds	1
  4392  0072                     ??_TMR1_ISR:	
  4393  0072                     ??_TMR1_WriteTimer:	
  4394                           ; 1 bytes @ 0x2
  4395                           
  4396                           
  4397                           ; 1 bytes @ 0x2
  4398  0072                     	ds	5
  4399  0077                     rot@input:	
  4400                           
  4401                           ; 1 bytes @ 0x7
  4402  0077                     	ds	1
  4403  0078                     ??_IOCAF4_ISR:	
  4404  0078                     ??_IOCAF5_ISR:	
  4405                           ; 1 bytes @ 0x8
  4406                           
  4407  0078                     ??_PIN_MANAGER_IOC:	
  4408                           ; 1 bytes @ 0x8
  4409                           
  4410  0078                     ??_INTERRUPT_InterruptManager:	
  4411                           ; 1 bytes @ 0x8
  4412                           
  4413                           
  4414                           	psect	cstackBANK0
  4415  0020                     __pcstackBANK0:	
  4416                           ; 1 bytes @ 0x8
  4417                           
  4418  0020                     ?___fleq:	
  4419  0020                     ?___flge:	
  4420                           ; 1 bit 
  4421                           
  4422  0020                     ??_PMD_Initialize:	
  4423                           ; 1 bit 
  4424                           
  4425  0020                     ??_OSCILLATOR_Initialize:	
  4426                           ; 1 bytes @ 0x0
  4427                           
  4428  0020                     ??_ADC_Initialize:	
  4429                           ; 1 bytes @ 0x0
  4430                           
  4431  0020                     ?_IOCAF4_SetInterruptHandler:	
  4432                           ; 1 bytes @ 0x0
  4433                           
  4434  0020                     ?_IOCAF5_SetInterruptHandler:	
  4435                           ; 1 bytes @ 0x0
  4436                           
  4437  0020                     ?_IOCAF7_SetInterruptHandler:	
  4438                           ; 1 bytes @ 0x0
  4439                           
  4440  0020                     ?_IOCCF2_SetInterruptHandler:	
  4441                           ; 1 bytes @ 0x0
  4442                           
  4443  0020                     ?_EUSART1_SetRxInterruptHandler:	
  4444                           ; 1 bytes @ 0x0
  4445                           
  4446  0020                     ?_EUSART1_SetTxInterruptHandler:	
  4447                           ; 1 bytes @ 0x0
  4448                           
  4449  0020                     ?_TMR0_SetInterruptHandler:	
  4450                           ; 1 bytes @ 0x0
  4451                           
  4452  0020                     ?_TMR1_SetInterruptHandler:	
  4453                           ; 1 bytes @ 0x0
  4454                           
  4455  0020                     ??_isdigit:	
  4456                           ; 1 bytes @ 0x0
  4457                           
  4458  0020                     ??_EUSART1_Read:	
  4459                           ; 1 bytes @ 0x0
  4460                           
  4461  0020                     ??_TMR1_StartTimer:	
  4462                           ; 1 bytes @ 0x0
  4463                           
  4464  0020                     ??_OLED_pulseEnable:	
  4465                           ; 1 bytes @ 0x0
  4466                           
  4467  0020                     ??_OLED_write4bits:	
  4468                           ; 1 bytes @ 0x0
  4469                           
  4470  0020                     ??_OLED_waitForReady:	
  4471                           ; 1 bytes @ 0x0
  4472                           
  4473  0020                     ?___bmul:	
  4474                           ; 1 bytes @ 0x0
  4475                           
  4476  0020                     ?__Umul8_16:	
  4477                           ; 1 bytes @ 0x0
  4478                           
  4479  0020                     ?_ADC_GetConversion:	
  4480                           ; 2 bytes @ 0x0
  4481                           
  4482  0020                     ?___wmul:	
  4483                           ; 2 bytes @ 0x0
  4484                           
  4485  0020                     ?___awdiv:	
  4486                           ; 2 bytes @ 0x0
  4487                           
  4488  0020                     ?___awmod:	
  4489                           ; 2 bytes @ 0x0
  4490                           
  4491  0020                     ?___lwdiv:	
  4492                           ; 2 bytes @ 0x0
  4493                           
  4494  0020                     ?___lmul:	
  4495                           ; 2 bytes @ 0x0
  4496                           
  4497  0020                     ?___xxtofl:	
  4498                           ; 4 bytes @ 0x0
  4499                           
  4500  0020                     OLED_waitForReady@busy:	
  4501                           ; 4 bytes @ 0x0
  4502                           
  4503  0020                     ___bmul@multiplicand:	
  4504                           ; 1 bytes @ 0x0
  4505                           
  4506  0020                     _isdigit$1762:	
  4507                           ; 1 bytes @ 0x0
  4508                           
  4509  0020                     __Umul8_16@multiplicand:	
  4510                           ; 1 bytes @ 0x0
  4511                           
  4512  0020                     IOCAF4_SetInterruptHandler@InterruptHandler:	
  4513                           ; 1 bytes @ 0x0
  4514                           
  4515  0020                     IOCAF5_SetInterruptHandler@InterruptHandler:	
  4516                           ; 2 bytes @ 0x0
  4517                           
  4518  0020                     IOCAF7_SetInterruptHandler@InterruptHandler:	
  4519                           ; 2 bytes @ 0x0
  4520                           
  4521  0020                     IOCCF2_SetInterruptHandler@InterruptHandler:	
  4522                           ; 2 bytes @ 0x0
  4523                           
  4524  0020                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  4525                           ; 2 bytes @ 0x0
  4526                           
  4527  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  4528                           ; 2 bytes @ 0x0
  4529                           
  4530  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  4531                           ; 2 bytes @ 0x0
  4532                           
  4533  0020                     TMR1_SetInterruptHandler@InterruptHandler:	
  4534                           ; 2 bytes @ 0x0
  4535                           
  4536  0020                     ___wmul@multiplier:	
  4537                           ; 2 bytes @ 0x0
  4538                           
  4539  0020                     ___awdiv@divisor:	
  4540                           ; 2 bytes @ 0x0
  4541                           
  4542  0020                     ___awmod@divisor:	
  4543                           ; 2 bytes @ 0x0
  4544                           
  4545  0020                     ___lwdiv@divisor:	
  4546                           ; 2 bytes @ 0x0
  4547                           
  4548  0020                     ___lmul@multiplier:	
  4549                           ; 2 bytes @ 0x0
  4550                           
  4551  0020                     ___fleq@ff1:	
  4552                           ; 4 bytes @ 0x0
  4553                           
  4554  0020                     ___flge@ff1:	
  4555                           ; 4 bytes @ 0x0
  4556                           
  4557  0020                     ___xxtofl@val:	
  4558                           ; 4 bytes @ 0x0
  4559                           
  4560                           
  4561                           ; 4 bytes @ 0x0
  4562  0020                     	ds	1
  4563  0021                     ??___bmul:	
  4564  0021                     EUSART1_Read@readValue:	
  4565                           ; 1 bytes @ 0x1
  4566                           
  4567  0021                     isdigit@c:	
  4568                           ; 1 bytes @ 0x1
  4569                           
  4570                           
  4571                           ; 1 bytes @ 0x1
  4572  0021                     	ds	1
  4573  0022                     ??_PIN_MANAGER_Initialize:	
  4574  0022                     ??_TMR1_Initialize:	
  4575                           ; 1 bytes @ 0x2
  4576                           
  4577  0022                     ??_TMR0_Initialize:	
  4578                           ; 1 bytes @ 0x2
  4579                           
  4580  0022                     ??_EUSART1_Initialize:	
  4581                           ; 1 bytes @ 0x2
  4582                           
  4583  0022                     ??_IOCAF4_SetInterruptHandler:	
  4584                           ; 1 bytes @ 0x2
  4585                           
  4586  0022                     ??_IOCAF5_SetInterruptHandler:	
  4587                           ; 1 bytes @ 0x2
  4588                           
  4589  0022                     ??_IOCAF7_SetInterruptHandler:	
  4590                           ; 1 bytes @ 0x2
  4591                           
  4592  0022                     ??_IOCCF2_SetInterruptHandler:	
  4593                           ; 1 bytes @ 0x2
  4594                           
  4595  0022                     ??_EUSART1_SetRxInterruptHandler:	
  4596                           ; 1 bytes @ 0x2
  4597                           
  4598  0022                     ??_EUSART1_SetTxInterruptHandler:	
  4599                           ; 1 bytes @ 0x2
  4600                           
  4601  0022                     ??_TMR0_SetInterruptHandler:	
  4602                           ; 1 bytes @ 0x2
  4603                           
  4604  0022                     ??_TMR1_SetInterruptHandler:	
  4605                           ; 1 bytes @ 0x2
  4606                           
  4607  0022                     ??__Umul8_16:	
  4608                           ; 1 bytes @ 0x2
  4609                           
  4610  0022                     ??_ADC_GetConversion:	
  4611                           ; 1 bytes @ 0x2
  4612                           
  4613  0022                     OLED_write4bits@value:	
  4614                           ; 1 bytes @ 0x2
  4615                           
  4616  0022                     ___bmul@product:	
  4617                           ; 1 bytes @ 0x2
  4618                           
  4619  0022                     ___wmul@multiplicand:	
  4620                           ; 1 bytes @ 0x2
  4621                           
  4622  0022                     ___awdiv@dividend:	
  4623                           ; 2 bytes @ 0x2
  4624                           
  4625  0022                     ___awmod@dividend:	
  4626                           ; 2 bytes @ 0x2
  4627                           
  4628  0022                     ___lwdiv@dividend:	
  4629                           ; 2 bytes @ 0x2
  4630                           
  4631                           
  4632                           ; 2 bytes @ 0x2
  4633  0022                     	ds	1
  4634  0023                     ??_SYSTEM_Initialize:	
  4635  0023                     ?_OLED_send:	
  4636                           ; 1 bytes @ 0x3
  4637                           
  4638  0023                     ADC_GetConversion@channel:	
  4639                           ; 1 bytes @ 0x3
  4640                           
  4641  0023                     OLED_send@mode:	
  4642                           ; 1 bytes @ 0x3
  4643                           
  4644  0023                     ___bmul@multiplier:	
  4645                           ; 1 bytes @ 0x3
  4646                           
  4647                           
  4648                           ; 1 bytes @ 0x3
  4649  0023                     	ds	1
  4650  0024                     ??_OLED_send:	
  4651  0024                     ??___wmul:	
  4652                           ; 1 bytes @ 0x4
  4653                           
  4654  0024                     ??___awdiv:	
  4655                           ; 1 bytes @ 0x4
  4656                           
  4657  0024                     ??___awmod:	
  4658                           ; 1 bytes @ 0x4
  4659                           
  4660  0024                     ??___lwdiv:	
  4661                           ; 1 bytes @ 0x4
  4662                           
  4663  0024                     ??___xxtofl:	
  4664                           ; 1 bytes @ 0x4
  4665                           
  4666  0024                     ___wmul@product:	
  4667                           ; 1 bytes @ 0x4
  4668                           
  4669  0024                     __Umul8_16@product:	
  4670                           ; 2 bytes @ 0x4
  4671                           
  4672  0024                     ___lmul@multiplicand:	
  4673                           ; 2 bytes @ 0x4
  4674                           
  4675  0024                     ___fleq@ff2:	
  4676                           ; 4 bytes @ 0x4
  4677                           
  4678  0024                     ___flge@ff2:	
  4679                           ; 4 bytes @ 0x4
  4680                           
  4681                           
  4682                           ; 4 bytes @ 0x4
  4683  0024                     	ds	1
  4684  0025                     OLED_send@value:	
  4685  0025                     ___awdiv@counter:	
  4686                           ; 1 bytes @ 0x5
  4687                           
  4688  0025                     ___awmod@counter:	
  4689                           ; 1 bytes @ 0x5
  4690                           
  4691  0025                     ___lwdiv@quotient:	
  4692                           ; 1 bytes @ 0x5
  4693                           
  4694                           
  4695                           ; 2 bytes @ 0x5
  4696  0025                     	ds	1
  4697  0026                     ??_OLED_command:	
  4698  0026                     ??_OLED_write:	
  4699                           ; 1 bytes @ 0x6
  4700                           
  4701  0026                     OLED_command@value:	
  4702                           ; 1 bytes @ 0x6
  4703                           
  4704  0026                     OLED_write@value:	
  4705                           ; 1 bytes @ 0x6
  4706                           
  4707  0026                     ___awdiv@sign:	
  4708                           ; 1 bytes @ 0x6
  4709                           
  4710  0026                     ___awmod@sign:	
  4711                           ; 1 bytes @ 0x6
  4712                           
  4713  0026                     __Umul8_16@word_mpld:	
  4714                           ; 1 bytes @ 0x6
  4715                           
  4716                           
  4717                           ; 2 bytes @ 0x6
  4718  0026                     	ds	1
  4719  0027                     ??_OLED_returnHome:	
  4720  0027                     ?_OLED_print_xy:	
  4721                           ; 1 bytes @ 0x7
  4722                           
  4723  0027                     ??_OLED_scrollDisplayLeft:	
  4724                           ; 1 bytes @ 0x7
  4725                           
  4726  0027                     ??_OLED_scrollDisplayRight:	
  4727                           ; 1 bytes @ 0x7
  4728                           
  4729  0027                     ??_OLED_init:	
  4730                           ; 1 bytes @ 0x7
  4731                           
  4732  0027                     OLED_print_xy@row:	
  4733                           ; 1 bytes @ 0x7
  4734                           
  4735  0027                     ___lwdiv@counter:	
  4736                           ; 1 bytes @ 0x7
  4737                           
  4738  0027                     ___awdiv@quotient:	
  4739                           ; 1 bytes @ 0x7
  4740                           
  4741                           
  4742                           ; 2 bytes @ 0x7
  4743  0027                     	ds	1
  4744  0028                     ??___lmul:	
  4745  0028                     ??___fleq:	
  4746                           ; 1 bytes @ 0x8
  4747                           
  4748  0028                     ??___flge:	
  4749                           ; 1 bytes @ 0x8
  4750                           
  4751  0028                     ?___lwmod:	
  4752                           ; 1 bytes @ 0x8
  4753                           
  4754  0028                     ___xxtofl@sign:	
  4755                           ; 2 bytes @ 0x8
  4756                           
  4757  0028                     __Umul8_16@multiplier:	
  4758                           ; 1 bytes @ 0x8
  4759                           
  4760  0028                     OLED_print_xy@s:	
  4761                           ; 1 bytes @ 0x8
  4762                           
  4763  0028                     ___lwmod@divisor:	
  4764                           ; 2 bytes @ 0x8
  4765                           
  4766  0028                     ___lmul@product:	
  4767                           ; 2 bytes @ 0x8
  4768                           
  4769                           
  4770                           ; 4 bytes @ 0x8
  4771  0028                     	ds	1
  4772  0029                     ___xxtofl@exp:	
  4773                           
  4774                           ; 1 bytes @ 0x9
  4775  0029                     	ds	1
  4776  002A                     ??_OLED_print_xy:	
  4777  002A                     ___lwmod@dividend:	
  4778                           ; 1 bytes @ 0xA
  4779                           
  4780  002A                     ___xxtofl@arg:	
  4781                           ; 2 bytes @ 0xA
  4782                           
  4783                           
  4784                           ; 4 bytes @ 0xA
  4785  002A                     	ds	1
  4786  002B                     OLED_print_xy@row_offsets:	
  4787                           
  4788                           ; 4 bytes @ 0xB
  4789  002B                     	ds	1
  4790  002C                     ??___lwmod:	
  4791  002C                     ?_frexp:	
  4792                           ; 1 bytes @ 0xC
  4793                           
  4794  002C                     ?___lldiv:	
  4795                           ; 4 bytes @ 0xC
  4796                           
  4797  002C                     ___lldiv@divisor:	
  4798                           ; 4 bytes @ 0xC
  4799                           
  4800  002C                     frexp@value:	
  4801                           ; 4 bytes @ 0xC
  4802                           
  4803                           
  4804                           ; 4 bytes @ 0xC
  4805  002C                     	ds	1
  4806  002D                     ___lwmod@counter:	
  4807                           
  4808                           ; 1 bytes @ 0xD
  4809  002D                     	ds	1
  4810  002E                     ?_sprintf:	
  4811  002E                     sprintf@f:	
  4812                           ; 2 bytes @ 0xE
  4813                           
  4814                           
  4815                           ; 2 bytes @ 0xE
  4816  002E                     	ds	1
  4817  002F                     OLED_print_xy@col:	
  4818                           
  4819                           ; 1 bytes @ 0xF
  4820  002F                     	ds	1
  4821  0030                     ??_check_status:	
  4822  0030                     frexp@eptr:	
  4823                           ; 1 bytes @ 0x10
  4824                           
  4825  0030                     ___lldiv@dividend:	
  4826                           ; 1 bytes @ 0x10
  4827                           
  4828                           
  4829                           ; 4 bytes @ 0x10
  4830  0030                     	ds	1
  4831  0031                     ??_frexp:	
  4832                           
  4833                           ; 1 bytes @ 0x11
  4834  0031                     	ds	2
  4835  0033                     ?___flmul:	
  4836  0033                     ___flmul@b:	
  4837                           ; 4 bytes @ 0x13
  4838                           
  4839                           
  4840                           ; 4 bytes @ 0x13
  4841  0033                     	ds	1
  4842  0034                     ??___lldiv:	
  4843                           
  4844                           ; 1 bytes @ 0x14
  4845  0034                     	ds	1
  4846  0035                     ___lldiv@quotient:	
  4847                           
  4848                           ; 4 bytes @ 0x15
  4849  0035                     	ds	2
  4850  0037                     ___flmul@a:	
  4851                           
  4852                           ; 4 bytes @ 0x17
  4853  0037                     	ds	2
  4854  0039                     ___lldiv@counter:	
  4855                           
  4856                           ; 1 bytes @ 0x19
  4857  0039                     	ds	1
  4858  003A                     ??_read_ntc_temp:	
  4859  003A                     ?_get_battery_volt:	
  4860                           ; 1 bytes @ 0x1A
  4861                           
  4862  003A                     ?_get_current:	
  4863                           ; 2 bytes @ 0x1A
  4864                           
  4865                           
  4866                           ; 2 bytes @ 0x1A
  4867  003A                     	ds	1
  4868  003B                     ??___flmul:	
  4869                           
  4870                           ; 1 bytes @ 0x1B
  4871  003B                     	ds	1
  4872  003C                     ??_get_battery_volt:	
  4873  003C                     ??_get_current:	
  4874                           ; 1 bytes @ 0x1C
  4875                           
  4876  003C                     get_current@val:	
  4877                           ; 1 bytes @ 0x1C
  4878                           
  4879                           
  4880                           ; 4 bytes @ 0x1C
  4881  003C                     	ds	2
  4882  003E                     read_ntc_temp@val:	
  4883                           
  4884                           ; 4 bytes @ 0x1E
  4885  003E                     	ds	2
  4886  0040                     ??_sprintf:	
  4887  0040                     ___flmul@sign:	
  4888                           ; 1 bytes @ 0x20
  4889                           
  4890  0040                     get_battery_volt@val:	
  4891                           ; 1 bytes @ 0x20
  4892                           
  4893                           
  4894                           ; 4 bytes @ 0x20
  4895  0040                     	ds	1
  4896  0041                     ___flmul@grs:	
  4897                           
  4898                           ; 4 bytes @ 0x21
  4899  0041                     	ds	3
  4900  0044                     ??_read_cur_volt:	
  4901  0044                     sprintf@cp:	
  4902                           ; 1 bytes @ 0x24
  4903                           
  4904                           
  4905                           ; 1 bytes @ 0x24
  4906  0044                     	ds	1
  4907  0045                     sprintf@prec:	
  4908  0045                     ___flmul@aexp:	
  4909                           ; 1 bytes @ 0x25
  4910                           
  4911                           
  4912                           ; 1 bytes @ 0x25
  4913  0045                     	ds	1
  4914  0046                     sprintf@ap:	
  4915  0046                     ___flmul@bexp:	
  4916                           ; 1 bytes @ 0x26
  4917                           
  4918  0046                     read_cur_volt@volt_min:	
  4919                           ; 1 bytes @ 0x26
  4920                           
  4921                           
  4922                           ; 2 bytes @ 0x26
  4923  0046                     	ds	1
  4924  0047                     sprintf@len:	
  4925  0047                     ___flmul@prod:	
  4926                           ; 2 bytes @ 0x27
  4927                           
  4928                           
  4929                           ; 4 bytes @ 0x27
  4930  0047                     	ds	1
  4931  0048                     read_cur_volt@i:	
  4932                           
  4933                           ; 1 bytes @ 0x28
  4934  0048                     	ds	1
  4935  0049                     sprintf@flag:	
  4936  0049                     read_cur_volt@volt:	
  4937                           ; 1 bytes @ 0x29
  4938                           
  4939                           
  4940                           ; 2 bytes @ 0x29
  4941  0049                     	ds	1
  4942  004A                     sprintf@val:	
  4943                           
  4944                           ; 2 bytes @ 0x2A
  4945  004A                     	ds	1
  4946  004B                     ___flmul@temp:	
  4947                           
  4948                           ; 2 bytes @ 0x2B
  4949  004B                     	ds	1
  4950  004C                     sprintf@width:	
  4951                           
  4952                           ; 2 bytes @ 0x2C
  4953  004C                     	ds	1
  4954  004D                     ?___fltol:	
  4955  004D                     ?___fldiv:	
  4956                           ; 4 bytes @ 0x2D
  4957                           
  4958  004D                     ___fltol@f1:	
  4959                           ; 4 bytes @ 0x2D
  4960                           
  4961  004D                     ___fldiv@a:	
  4962                           ; 4 bytes @ 0x2D
  4963                           
  4964                           
  4965                           ; 4 bytes @ 0x2D
  4966  004D                     	ds	1
  4967  004E                     sprintf@sp:	
  4968                           
  4969                           ; 1 bytes @ 0x2E
  4970  004E                     	ds	1
  4971  004F                     sprintf@c:	
  4972                           
  4973                           ; 1 bytes @ 0x2F
  4974  004F                     	ds	1
  4975  0050                     ??_main_menu:	
  4976                           
  4977                           ; 1 bytes @ 0x30
  4978  0050                     	ds	1
  4979  0051                     ??___fltol:	
  4980  0051                     ___fldiv@b:	
  4981                           ; 1 bytes @ 0x31
  4982                           
  4983                           
  4984                           ; 4 bytes @ 0x31
  4985  0051                     	ds	4
  4986  0055                     ??___fldiv:	
  4987                           
  4988                           ; 1 bytes @ 0x35
  4989  0055                     	ds	1
  4990  0056                     ___fltol@sign1:	
  4991                           
  4992                           ; 1 bytes @ 0x36
  4993  0056                     	ds	1
  4994  0057                     ___fltol@exp1:	
  4995                           
  4996                           ; 1 bytes @ 0x37
  4997  0057                     	ds	1
  4998  0058                     ?_trunc:	
  4999  0058                     trunc@x:	
  5000                           ; 4 bytes @ 0x38
  5001                           
  5002                           
  5003                           ; 4 bytes @ 0x38
  5004  0058                     	ds	2
  5005  005A                     ___fldiv@rem:	
  5006                           
  5007                           ; 4 bytes @ 0x3A
  5008  005A                     	ds	2
  5009  005C                     ??_trunc:	
  5010                           
  5011                           ; 1 bytes @ 0x3C
  5012  005C                     	ds	1
  5013  005D                     trunc@i:	
  5014                           
  5015                           ; 4 bytes @ 0x3D
  5016  005D                     	ds	1
  5017  005E                     ___fldiv@sign:	
  5018                           
  5019                           ; 1 bytes @ 0x3E
  5020  005E                     	ds	1
  5021  005F                     ___fldiv@new_exp:	
  5022                           
  5023                           ; 2 bytes @ 0x3F
  5024  005F                     	ds	2
  5025  0061                     trunc@expon:	
  5026  0061                     ___fldiv@grs:	
  5027                           ; 2 bytes @ 0x41
  5028                           
  5029                           
  5030                           ; 4 bytes @ 0x41
  5031  0061                     	ds	4
  5032  0065                     ___fldiv@bexp:	
  5033                           
  5034                           ; 1 bytes @ 0x45
  5035  0065                     	ds	1
  5036  0066                     ___fldiv@aexp:	
  5037                           
  5038                           ; 1 bytes @ 0x46
  5039  0066                     	ds	1
  5040  0067                     ?___fladd:	
  5041  0067                     ___fladd@b:	
  5042                           ; 4 bytes @ 0x47
  5043                           
  5044                           
  5045                           ; 4 bytes @ 0x47
  5046  0067                     	ds	4
  5047  006B                     ___fladd@a:	
  5048                           
  5049                           ; 4 bytes @ 0x4B
  5050  006B                     	ds	4
  5051  006F                     ??_log10:	
  5052  006F                     ??_round:	
  5053                           ; 1 bytes @ 0x4F
  5054                           
  5055  006F                     ??___flsub:	
  5056                           ; 1 bytes @ 0x4F
  5057                           
  5058                           
  5059                           	psect	maintext
  5060  0060                     __pmaintext:	
  5061                           ; 1 bytes @ 0x4F
  5062 ;;
  5063 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  5064 ;;
  5065 ;; *************** function _main *****************
  5066 ;; Defined at:
  5067 ;;		line 378 in file "main.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;		None
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;  obj             6    0        struct .
  5072 ;;  fRH             4   34[BANK2 ] float 
  5073 ;;  ftemp_C         4   30[BANK2 ] float 
  5074 ;;  fH              4   22[BANK2 ] float 
  5075 ;;  ftd             4    0        float 
  5076 ;;  utemp_C         2   20[BANK2 ] unsigned int 
  5077 ;;  uRH             2   18[BANK2 ] unsigned int 
  5078 ;;  ustat           2    4[BANK2 ] unsigned int 
  5079 ;;  i               1   38[BANK2 ] unsigned char 
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  1    wreg      void 
  5082 ;; Registers used:
  5083 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5084 ;; Tracked objects:
  5085 ;;		On entry : B3F/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5090 ;;      Locals:         0       0       0      39       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5091 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5092 ;;      Totals:         0       0       3      39       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5093 ;;Total ram usage:       42 bytes
  5094 ;; Hardware stack levels required when called:   11
  5095 ;; This function calls:
  5096 ;;		_ADC_Initialize
  5097 ;;		_EUSART1_Read
  5098 ;;		_IOCAF4_SetInterruptHandler
  5099 ;;		_IOCAF5_SetInterruptHandler
  5100 ;;		_IOCAF7_SetInterruptHandler
  5101 ;;		_IOCCF2_SetInterruptHandler
  5102 ;;		_OLED_init
  5103 ;;		_SYSTEM_Initialize
  5104 ;;		_TMR0_SetInterruptHandler
  5105 ;;		_TMR1_SetInterruptHandler
  5106 ;;		_TMR1_StartTimer
  5107 ;;		___fladd
  5108 ;;		___fldiv
  5109 ;;		___flge
  5110 ;;		___flmul
  5111 ;;		___flsub
  5112 ;;		___fltol
  5113 ;;		___xxtofl
  5114 ;;		_check_status
  5115 ;;		_log10
  5116 ;;		_main_menu
  5117 ;;		_read_cur_volt
  5118 ;;		_read_ntc_temp
  5119 ;;		_round
  5120 ;; This function is called by:
  5121 ;;		Startup code after reset
  5122 ;; This function uses a non-reentrant model
  5123 ;;
  5124                           
  5125                           
  5126                           ;psect for function _main
  5127  0060                     _main:	
  5128                           
  5129                           ;main.c: 380: uint8_t i;;main.c: 381: uint16_t uRH, utemp_C,ustat;;main.c: 382: float fR
      +                          H, ftemp_C, ftd, fH;;main.c: 383: DATA_OBJ obj;;main.c: 386: SYSTEM_Initialize();
  5130                           
  5131                           ;incstack = 0
  5132                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5133  0060  319C  24EE  3180   	fcall	_SYSTEM_Initialize
  5134                           
  5135                           ;main.c: 389: (INTCONbits.GIE = 1);
  5136  0063  178B               	bsf	11,7	;volatile
  5137                           
  5138                           ;main.c: 392: (INTCONbits.PEIE = 1);
  5139  0064  170B               	bsf	11,6	;volatile
  5140                           
  5141                           ;main.c: 394: ADC_Initialize();
  5142  0065  319B  23CE  3180   	fcall	_ADC_Initialize
  5143                           
  5144                           ;main.c: 397: LATBbits.LATB5 = 1;
  5145  0068  0140               	movlb	0	; select bank0
  5146  0069  1699               	bsf	25,5	;volatile
  5147                           
  5148                           ;main.c: 400: LATCbits.LATC3 = 1;
  5149  006A  159A               	bsf	26,3	;volatile
  5150                           
  5151                           ;main.c: 403: OLED_init();
  5152  006B  3193  2303  3180   	fcall	_OLED_init
  5153                           
  5154                           ;main.c: 405: read_cur_volt();
  5155  006E  3187  271A  3180   	fcall	_read_cur_volt
  5156                           
  5157                           ;main.c: 408: IOCAF7_SetInterruptHandler(pushbutton);
  5158  0071  3003               	movlw	low _pushbutton
  5159  0072  0140               	movlb	0	; select bank0
  5160  0073  00A0               	movwf	IOCAF7_SetInterruptHandler@InterruptHandler
  5161  0074  3008               	movlw	high _pushbutton
  5162  0075  00A1               	movwf	IOCAF7_SetInterruptHandler@InterruptHandler+1
  5163  0076  319C  2413  3180   	fcall	_IOCAF7_SetInterruptHandler
  5164                           
  5165                           ;main.c: 409: IOCAF4_SetInterruptHandler(rot);
  5166  0079  308F               	movlw	low _rot
  5167  007A  0140               	movlb	0	; select bank0
  5168  007B  00A0               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler
  5169  007C  301F               	movlw	high _rot
  5170  007D  00A1               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler+1
  5171  007E  319C  2401  3180   	fcall	_IOCAF4_SetInterruptHandler
  5172                           
  5173                           ;main.c: 410: IOCAF5_SetInterruptHandler(rot);
  5174  0081  308F               	movlw	low _rot
  5175  0082  0140               	movlb	0	; select bank0
  5176  0083  00A0               	movwf	IOCAF5_SetInterruptHandler@InterruptHandler
  5177  0084  301F               	movlw	high _rot
  5178  0085  00A1               	movwf	IOCAF5_SetInterruptHandler@InterruptHandler+1
  5179  0086  319C  240A  3180   	fcall	_IOCAF5_SetInterruptHandler
  5180                           
  5181                           ;main.c: 411: TMR0_SetInterruptHandler(timer0);
  5182  0089  30E6               	movlw	low _timer0
  5183  008A  0140               	movlb	0	; select bank0
  5184  008B  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  5185  008C  301B               	movlw	high _timer0
  5186  008D  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  5187  008E  319C  2425  3180   	fcall	_TMR0_SetInterruptHandler
  5188                           
  5189                           ;main.c: 412: TMR1_SetInterruptHandler(timer1);
  5190  0091  30C7               	movlw	low _timer1
  5191  0092  0140               	movlb	0	; select bank0
  5192  0093  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  5193  0094  301F               	movlw	high _timer1
  5194  0095  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  5195  0096  319C  242E  3180   	fcall	_TMR1_SetInterruptHandler
  5196                           
  5197                           ;main.c: 413: IOCCF2_SetInterruptHandler(overcurrent);
  5198  0099  30AD               	movlw	low _overcurrent
  5199  009A  0140               	movlb	0	; select bank0
  5200  009B  00A0               	movwf	IOCCF2_SetInterruptHandler@InterruptHandler
  5201  009C  301C               	movlw	high _overcurrent
  5202  009D  00A1               	movwf	IOCCF2_SetInterruptHandler@InterruptHandler+1
  5203  009E  319C  241C  3180   	fcall	_IOCCF2_SetInterruptHandler
  5204                           
  5205                           ;main.c: 415: dc[0] = 50;
  5206  00A1  3032               	movlw	50
  5207  00A2  0141               	movlb	1	; select bank1
  5208  00A3  00E9               	movwf	??_main^(0+128)
  5209  00A4  0869               	movf	??_main^(0+128),w
  5210  00A5  0142               	movlb	2	; select bank2
  5211  00A6  00CF               	movwf	_dc^(0+256)
  5212  00A7                     l5262:	
  5213                           
  5214                           ;main.c: 419: {;main.c: 421: read_ntc_temp();
  5215  00A7  3191  212A  3180   	fcall	_read_ntc_temp
  5216                           
  5217                           ;main.c: 423: if (eusart1RxCount >= 6) {
  5218  00AA  3006               	movlw	6
  5219  00AB  0142               	movlb	2	; select bank2
  5220  00AC  025F               	subwf	_eusart1RxCount^(0+256),w	;volatile
  5221  00AD  1C03               	skipc
  5222  00AE  2C18               	goto	l5316
  5223                           
  5224                           ;main.c: 427: i = EUSART1_Read(); uRH = i;
  5225  00AF  319D  25E0  3180   	fcall	_EUSART1_Read
  5226  00B2  0141               	movlb	1	; select bank1
  5227  00B3  00E9               	movwf	??_main^(0+128)
  5228  00B4  0869               	movf	??_main^(0+128),w
  5229  00B5  0142               	movlb	2	; select bank2
  5230  00B6  00C6               	movwf	main@i^(0+256)
  5231  00B7  0846               	movf	main@i^(0+256),w
  5232  00B8  0141               	movlb	1	; select bank1
  5233  00B9  00E9               	movwf	??_main^(0+128)
  5234  00BA  01EA               	clrf	(??_main^(0+128)+1)
  5235  00BB  0869               	movf	??_main^(0+128),w
  5236  00BC  0142               	movlb	2	; select bank2
  5237  00BD  00B2               	movwf	main@uRH^(0+256)
  5238  00BE  0141               	movlb	1	; select bank1
  5239  00BF  086A               	movf	(??_main+1)^(0+128),w
  5240  00C0  0142               	movlb	2	; select bank2
  5241  00C1  00B3               	movwf	(main@uRH+1)^(0+256)
  5242                           
  5243                           ;main.c: 428: i = EUSART1_Read(); uRH |= i<<8;
  5244  00C2  319D  25E0  3180   	fcall	_EUSART1_Read
  5245  00C5  0141               	movlb	1	; select bank1
  5246  00C6  00E9               	movwf	??_main^(0+128)
  5247  00C7  0869               	movf	??_main^(0+128),w
  5248  00C8  0142               	movlb	2	; select bank2
  5249  00C9  00C6               	movwf	main@i^(0+256)
  5250  00CA  0846               	movf	main@i^(0+256),w
  5251  00CB  0141               	movlb	1	; select bank1
  5252  00CC  00E9               	movwf	??_main^(0+128)
  5253  00CD  01EA               	clrf	(??_main^(0+128)+1)
  5254  00CE  0869               	movf	??_main^(0+128),w
  5255  00CF  00EA               	movwf	(??_main^(0+128)+1)
  5256  00D0  01E9               	clrf	??_main^(0+128)
  5257  00D1  0869               	movf	??_main^(0+128),w
  5258  00D2  0142               	movlb	2	; select bank2
  5259  00D3  04B2               	iorwf	main@uRH^(0+256),f
  5260  00D4  0141               	movlb	1	; select bank1
  5261  00D5  086A               	movf	(??_main+1)^(0+128),w
  5262  00D6  0142               	movlb	2	; select bank2
  5263  00D7  04B3               	iorwf	(main@uRH+1)^(0+256),f
  5264                           
  5265                           ;main.c: 430: i = EUSART1_Read(); utemp_C = i;
  5266  00D8  319D  25E0  3180   	fcall	_EUSART1_Read
  5267  00DB  0141               	movlb	1	; select bank1
  5268  00DC  00E9               	movwf	??_main^(0+128)
  5269  00DD  0869               	movf	??_main^(0+128),w
  5270  00DE  0142               	movlb	2	; select bank2
  5271  00DF  00C6               	movwf	main@i^(0+256)
  5272  00E0  0846               	movf	main@i^(0+256),w
  5273  00E1  0141               	movlb	1	; select bank1
  5274  00E2  00E9               	movwf	??_main^(0+128)
  5275  00E3  01EA               	clrf	(??_main^(0+128)+1)
  5276  00E4  0869               	movf	??_main^(0+128),w
  5277  00E5  0142               	movlb	2	; select bank2
  5278  00E6  00B4               	movwf	main@utemp_C^(0+256)
  5279  00E7  0141               	movlb	1	; select bank1
  5280  00E8  086A               	movf	(??_main+1)^(0+128),w
  5281  00E9  0142               	movlb	2	; select bank2
  5282  00EA  00B5               	movwf	(main@utemp_C+1)^(0+256)
  5283                           
  5284                           ;main.c: 431: i = EUSART1_Read(); utemp_C |= i<<8;
  5285  00EB  319D  25E0  3180   	fcall	_EUSART1_Read
  5286  00EE  0141               	movlb	1	; select bank1
  5287  00EF  00E9               	movwf	??_main^(0+128)
  5288  00F0  0869               	movf	??_main^(0+128),w
  5289  00F1  0142               	movlb	2	; select bank2
  5290  00F2  00C6               	movwf	main@i^(0+256)
  5291  00F3  0846               	movf	main@i^(0+256),w
  5292  00F4  0141               	movlb	1	; select bank1
  5293  00F5  00E9               	movwf	??_main^(0+128)
  5294  00F6  01EA               	clrf	(??_main^(0+128)+1)
  5295  00F7  0869               	movf	??_main^(0+128),w
  5296  00F8  00EA               	movwf	(??_main^(0+128)+1)
  5297  00F9  01E9               	clrf	??_main^(0+128)
  5298  00FA  0869               	movf	??_main^(0+128),w
  5299  00FB  0142               	movlb	2	; select bank2
  5300  00FC  04B4               	iorwf	main@utemp_C^(0+256),f
  5301  00FD  0141               	movlb	1	; select bank1
  5302  00FE  086A               	movf	(??_main+1)^(0+128),w
  5303  00FF  0142               	movlb	2	; select bank2
  5304  0100  04B5               	iorwf	(main@utemp_C+1)^(0+256),f
  5305                           
  5306                           ;main.c: 433: i = EUSART1_Read(); ustat = i;
  5307  0101  319D  25E0  3180   	fcall	_EUSART1_Read
  5308  0104  0141               	movlb	1	; select bank1
  5309  0105  00E9               	movwf	??_main^(0+128)
  5310  0106  0869               	movf	??_main^(0+128),w
  5311  0107  0142               	movlb	2	; select bank2
  5312  0108  00C6               	movwf	main@i^(0+256)
  5313  0109  0846               	movf	main@i^(0+256),w
  5314  010A  0141               	movlb	1	; select bank1
  5315  010B  00E9               	movwf	??_main^(0+128)
  5316  010C  01EA               	clrf	(??_main^(0+128)+1)
  5317  010D  0869               	movf	??_main^(0+128),w
  5318  010E  0142               	movlb	2	; select bank2
  5319  010F  00A4               	movwf	main@ustat^(0+256)
  5320  0110  0141               	movlb	1	; select bank1
  5321  0111  086A               	movf	(??_main+1)^(0+128),w
  5322  0112  0142               	movlb	2	; select bank2
  5323  0113  00A5               	movwf	(main@ustat+1)^(0+256)
  5324                           
  5325                           ;main.c: 434: i = EUSART1_Read(); ustat |= i<<8;
  5326  0114  319D  25E0  3180   	fcall	_EUSART1_Read
  5327  0117  0141               	movlb	1	; select bank1
  5328  0118  00E9               	movwf	??_main^(0+128)
  5329  0119  0869               	movf	??_main^(0+128),w
  5330  011A  0142               	movlb	2	; select bank2
  5331  011B  00C6               	movwf	main@i^(0+256)
  5332  011C  0846               	movf	main@i^(0+256),w
  5333  011D  0141               	movlb	1	; select bank1
  5334  011E  00E9               	movwf	??_main^(0+128)
  5335  011F  01EA               	clrf	(??_main^(0+128)+1)
  5336  0120  0869               	movf	??_main^(0+128),w
  5337  0121  00EA               	movwf	(??_main^(0+128)+1)
  5338  0122  01E9               	clrf	??_main^(0+128)
  5339  0123  0869               	movf	??_main^(0+128),w
  5340  0124  0142               	movlb	2	; select bank2
  5341  0125  04A4               	iorwf	main@ustat^(0+256),f
  5342  0126  0141               	movlb	1	; select bank1
  5343  0127  086A               	movf	(??_main+1)^(0+128),w
  5344  0128  0142               	movlb	2	; select bank2
  5345  0129  04A5               	iorwf	(main@ustat+1)^(0+256),f
  5346                           
  5347                           ;main.c: 439: fRH = (125.0 * uRH) / 65536 - 6;
  5348  012A  30C0               	movlw	192
  5349  012B  0140               	movlb	0	; select bank0
  5350  012C  00EA               	movwf	___fladd@b+3
  5351  012D  30C0               	movlw	192
  5352  012E  00E9               	movwf	___fladd@b+2
  5353  012F  3000               	movlw	0
  5354  0130  00E8               	movwf	___fladd@b+1
  5355  0131  3000               	movlw	0
  5356  0132  00E7               	movwf	___fladd@b
  5357  0133  3047               	movlw	71
  5358  0134  00D0               	movwf	___fldiv@a+3
  5359  0135  3080               	movlw	128
  5360  0136  00CF               	movwf	___fldiv@a+2
  5361  0137  3000               	movlw	0
  5362  0138  00CE               	movwf	___fldiv@a+1
  5363  0139  3000               	movlw	0
  5364  013A  00CD               	movwf	___fldiv@a
  5365  013B  3042               	movlw	66
  5366  013C  00B6               	movwf	___flmul@b+3
  5367  013D  30FA               	movlw	250
  5368  013E  00B5               	movwf	___flmul@b+2
  5369  013F  3000               	movlw	0
  5370  0140  00B4               	movwf	___flmul@b+1
  5371  0141  3000               	movlw	0
  5372  0142  00B3               	movwf	___flmul@b
  5373  0143  0142               	movlb	2	; select bank2
  5374  0144  0832               	movf	main@uRH^(0+256),w
  5375  0145  0140               	movlb	0	; select bank0
  5376  0146  00A0               	movwf	___xxtofl@val
  5377  0147  0142               	movlb	2	; select bank2
  5378  0148  0833               	movf	(main@uRH+1)^(0+256),w
  5379  0149  0140               	movlb	0	; select bank0
  5380  014A  00A1               	movwf	___xxtofl@val+1
  5381  014B  01A2               	clrf	___xxtofl@val+2
  5382  014C  01A3               	clrf	___xxtofl@val+3
  5383  014D  3000               	movlw	0
  5384  014E  3195  2567  3180   	fcall	___xxtofl
  5385  0151  0140               	movlb	0	; select bank0
  5386  0152  0823               	movf	?___xxtofl+3,w
  5387  0153  00BA               	movwf	___flmul@a+3
  5388  0154  0822               	movf	?___xxtofl+2,w
  5389  0155  00B9               	movwf	___flmul@a+2
  5390  0156  0821               	movf	?___xxtofl+1,w
  5391  0157  00B8               	movwf	___flmul@a+1
  5392  0158  0820               	movf	?___xxtofl,w
  5393  0159  00B7               	movwf	___flmul@a
  5394  015A  318B  2375  3180   	fcall	___flmul
  5395  015D  0140               	movlb	0	; select bank0
  5396  015E  0836               	movf	?___flmul+3,w
  5397  015F  00D4               	movwf	___fldiv@b+3
  5398  0160  0835               	movf	?___flmul+2,w
  5399  0161  00D3               	movwf	___fldiv@b+2
  5400  0162  0834               	movf	?___flmul+1,w
  5401  0163  00D2               	movwf	___fldiv@b+1
  5402  0164  0833               	movf	?___flmul,w
  5403  0165  00D1               	movwf	___fldiv@b
  5404  0166  3188  205A  3180   	fcall	___fldiv
  5405  0169  0140               	movlb	0	; select bank0
  5406  016A  0850               	movf	?___fldiv+3,w
  5407  016B  00EE               	movwf	___fladd@a+3
  5408  016C  084F               	movf	?___fldiv+2,w
  5409  016D  00ED               	movwf	___fladd@a+2
  5410  016E  084E               	movf	?___fldiv+1,w
  5411  016F  00EC               	movwf	___fladd@a+1
  5412  0170  084D               	movf	?___fldiv,w
  5413  0171  00EB               	movwf	___fladd@a
  5414  0172  318D  25A1  3180   	fcall	___fladd
  5415  0175  0140               	movlb	0	; select bank0
  5416  0176  086A               	movf	?___fladd+3,w
  5417  0177  0142               	movlb	2	; select bank2
  5418  0178  00C5               	movwf	(main@fRH+3)^(0+256)
  5419  0179  0140               	movlb	0	; select bank0
  5420  017A  0869               	movf	?___fladd+2,w
  5421  017B  0142               	movlb	2	; select bank2
  5422  017C  00C4               	movwf	(main@fRH+2)^(0+256)
  5423  017D  0140               	movlb	0	; select bank0
  5424  017E  0868               	movf	?___fladd+1,w
  5425  017F  0142               	movlb	2	; select bank2
  5426  0180  00C3               	movwf	(main@fRH+1)^(0+256)
  5427  0181  0140               	movlb	0	; select bank0
  5428  0182  0867               	movf	?___fladd,w
  5429  0183  0142               	movlb	2	; select bank2
  5430  0184  00C2               	movwf	main@fRH^(0+256)
  5431                           
  5432                           ;main.c: 440: ftemp_C = (175.72 * utemp_C) / 65536 - 46.85;
  5433  0185  30C2               	movlw	194
  5434  0186  0140               	movlb	0	; select bank0
  5435  0187  00EA               	movwf	___fladd@b+3
  5436  0188  303B               	movlw	59
  5437  0189  00E9               	movwf	___fladd@b+2
  5438  018A  3066               	movlw	102
  5439  018B  00E8               	movwf	___fladd@b+1
  5440  018C  3066               	movlw	102
  5441  018D  00E7               	movwf	___fladd@b
  5442  018E  3047               	movlw	71
  5443  018F  00D0               	movwf	___fldiv@a+3
  5444  0190  3080               	movlw	128
  5445  0191  00CF               	movwf	___fldiv@a+2
  5446  0192  3000               	movlw	0
  5447  0193  00CE               	movwf	___fldiv@a+1
  5448  0194  3000               	movlw	0
  5449  0195  00CD               	movwf	___fldiv@a
  5450  0196  3043               	movlw	67
  5451  0197  00B6               	movwf	___flmul@b+3
  5452  0198  302F               	movlw	47
  5453  0199  00B5               	movwf	___flmul@b+2
  5454  019A  30B8               	movlw	184
  5455  019B  00B4               	movwf	___flmul@b+1
  5456  019C  3052               	movlw	82
  5457  019D  00B3               	movwf	___flmul@b
  5458  019E  0142               	movlb	2	; select bank2
  5459  019F  0834               	movf	main@utemp_C^(0+256),w
  5460  01A0  0140               	movlb	0	; select bank0
  5461  01A1  00A0               	movwf	___xxtofl@val
  5462  01A2  0142               	movlb	2	; select bank2
  5463  01A3  0835               	movf	(main@utemp_C+1)^(0+256),w
  5464  01A4  0140               	movlb	0	; select bank0
  5465  01A5  00A1               	movwf	___xxtofl@val+1
  5466  01A6  01A2               	clrf	___xxtofl@val+2
  5467  01A7  01A3               	clrf	___xxtofl@val+3
  5468  01A8  3000               	movlw	0
  5469  01A9  3195  2567  3180   	fcall	___xxtofl
  5470  01AC  0140               	movlb	0	; select bank0
  5471  01AD  0823               	movf	?___xxtofl+3,w
  5472  01AE  00BA               	movwf	___flmul@a+3
  5473  01AF  0822               	movf	?___xxtofl+2,w
  5474  01B0  00B9               	movwf	___flmul@a+2
  5475  01B1  0821               	movf	?___xxtofl+1,w
  5476  01B2  00B8               	movwf	___flmul@a+1
  5477  01B3  0820               	movf	?___xxtofl,w
  5478  01B4  00B7               	movwf	___flmul@a
  5479  01B5  318B  2375  3180   	fcall	___flmul
  5480  01B8  0140               	movlb	0	; select bank0
  5481  01B9  0836               	movf	?___flmul+3,w
  5482  01BA  00D4               	movwf	___fldiv@b+3
  5483  01BB  0835               	movf	?___flmul+2,w
  5484  01BC  00D3               	movwf	___fldiv@b+2
  5485  01BD  0834               	movf	?___flmul+1,w
  5486  01BE  00D2               	movwf	___fldiv@b+1
  5487  01BF  0833               	movf	?___flmul,w
  5488  01C0  00D1               	movwf	___fldiv@b
  5489  01C1  3188  205A  3180   	fcall	___fldiv
  5490  01C4  0140               	movlb	0	; select bank0
  5491  01C5  0850               	movf	?___fldiv+3,w
  5492  01C6  00EE               	movwf	___fladd@a+3
  5493  01C7  084F               	movf	?___fldiv+2,w
  5494  01C8  00ED               	movwf	___fladd@a+2
  5495  01C9  084E               	movf	?___fldiv+1,w
  5496  01CA  00EC               	movwf	___fladd@a+1
  5497  01CB  084D               	movf	?___fldiv,w
  5498  01CC  00EB               	movwf	___fladd@a
  5499  01CD  318D  25A1  3180   	fcall	___fladd
  5500  01D0  0140               	movlb	0	; select bank0
  5501  01D1  086A               	movf	?___fladd+3,w
  5502  01D2  0142               	movlb	2	; select bank2
  5503  01D3  00C1               	movwf	(main@ftemp_C+3)^(0+256)
  5504  01D4  0140               	movlb	0	; select bank0
  5505  01D5  0869               	movf	?___fladd+2,w
  5506  01D6  0142               	movlb	2	; select bank2
  5507  01D7  00C0               	movwf	(main@ftemp_C+2)^(0+256)
  5508  01D8  0140               	movlb	0	; select bank0
  5509  01D9  0868               	movf	?___fladd+1,w
  5510  01DA  0142               	movlb	2	; select bank2
  5511  01DB  00BF               	movwf	(main@ftemp_C+1)^(0+256)
  5512  01DC  0140               	movlb	0	; select bank0
  5513  01DD  0867               	movf	?___fladd,w
  5514  01DE  0142               	movlb	2	; select bank2
  5515  01DF  00BE               	movwf	main@ftemp_C^(0+256)
  5516                           
  5517                           ;main.c: 443: fH = (log10(fRH) - 2.0) / 0.4343 + (17.62 * ftemp_C) / (243.12 + ftemp_C);
  5518  01E0  0845               	movf	(main@fRH+3)^(0+256),w
  5519  01E1  0141               	movlb	1	; select bank1
  5520  01E2  00C8               	movwf	(log10@x+3)^(0+128)
  5521  01E3  0142               	movlb	2	; select bank2
  5522  01E4  0844               	movf	(main@fRH+2)^(0+256),w
  5523  01E5  0141               	movlb	1	; select bank1
  5524  01E6  00C7               	movwf	(log10@x+2)^(0+128)
  5525  01E7  0142               	movlb	2	; select bank2
  5526  01E8  0843               	movf	(main@fRH+1)^(0+256),w
  5527  01E9  0141               	movlb	1	; select bank1
  5528  01EA  00C6               	movwf	(log10@x+1)^(0+128)
  5529  01EB  0142               	movlb	2	; select bank2
  5530  01EC  0842               	movf	main@fRH^(0+256),w
  5531  01ED  0141               	movlb	1	; select bank1
  5532  01EE  00C5               	movwf	log10@x^(0+128)
  5533  01EF  3190  205A  3180   	fcall	_log10
  5534  01F2  0141               	movlb	1	; select bank1
  5535  01F3  0848               	movf	(?_log10+3)^(0+128),w
  5536  01F4  0142               	movlb	2	; select bank2
  5537  01F5  00A9               	movwf	(_main$2070+3)^(0+256)
  5538  01F6  0141               	movlb	1	; select bank1
  5539  01F7  0847               	movf	(?_log10+2)^(0+128),w
  5540  01F8  0142               	movlb	2	; select bank2
  5541  01F9  00A8               	movwf	(_main$2070+2)^(0+256)
  5542  01FA  0141               	movlb	1	; select bank1
  5543  01FB  0846               	movf	(?_log10+1)^(0+128),w
  5544  01FC  0142               	movlb	2	; select bank2
  5545  01FD  00A7               	movwf	(_main$2070+1)^(0+256)
  5546  01FE  0141               	movlb	1	; select bank1
  5547  01FF  0845               	movf	?_log10^(0+128),w
  5548  0200  0142               	movlb	2	; select bank2
  5549  0201  00A6               	movwf	_main$2070^(0+256)
  5550                           
  5551                           ;main.c: 443: fH = (log10(fRH) - 2.0) / 0.4343 + (17.62 * ftemp_C) / (243.12 + ftemp_C);
  5552  0202  3043               	movlw	67
  5553  0203  0140               	movlb	0	; select bank0
  5554  0204  00EA               	movwf	___fladd@b+3
  5555  0205  3073               	movlw	115
  5556  0206  00E9               	movwf	___fladd@b+2
  5557  0207  301E               	movlw	30
  5558  0208  00E8               	movwf	___fladd@b+1
  5559  0209  30B8               	movlw	184
  5560  020A  00E7               	movwf	___fladd@b
  5561  020B  0142               	movlb	2	; select bank2
  5562  020C  0841               	movf	(main@ftemp_C+3)^(0+256),w
  5563  020D  0140               	movlb	0	; select bank0
  5564  020E  00EE               	movwf	___fladd@a+3
  5565  020F  0142               	movlb	2	; select bank2
  5566  0210  0840               	movf	(main@ftemp_C+2)^(0+256),w
  5567  0211  0140               	movlb	0	; select bank0
  5568  0212  00ED               	movwf	___fladd@a+2
  5569  0213  0142               	movlb	2	; select bank2
  5570  0214  083F               	movf	(main@ftemp_C+1)^(0+256),w
  5571  0215  0140               	movlb	0	; select bank0
  5572  0216  00EC               	movwf	___fladd@a+1
  5573  0217  0142               	movlb	2	; select bank2
  5574  0218  083E               	movf	main@ftemp_C^(0+256),w
  5575  0219  0140               	movlb	0	; select bank0
  5576  021A  00EB               	movwf	___fladd@a
  5577  021B  318D  25A1  3180   	fcall	___fladd
  5578  021E  0140               	movlb	0	; select bank0
  5579  021F  086A               	movf	?___fladd+3,w
  5580  0220  00D0               	movwf	___fldiv@a+3
  5581  0221  0869               	movf	?___fladd+2,w
  5582  0222  00CF               	movwf	___fldiv@a+2
  5583  0223  0868               	movf	?___fladd+1,w
  5584  0224  00CE               	movwf	___fldiv@a+1
  5585  0225  0867               	movf	?___fladd,w
  5586  0226  00CD               	movwf	___fldiv@a
  5587  0227  3041               	movlw	65
  5588  0228  00B6               	movwf	___flmul@b+3
  5589  0229  308C               	movlw	140
  5590  022A  00B5               	movwf	___flmul@b+2
  5591  022B  30F5               	movlw	245
  5592  022C  00B4               	movwf	___flmul@b+1
  5593  022D  30C3               	movlw	195
  5594  022E  00B3               	movwf	___flmul@b
  5595  022F  0142               	movlb	2	; select bank2
  5596  0230  0841               	movf	(main@ftemp_C+3)^(0+256),w
  5597  0231  0140               	movlb	0	; select bank0
  5598  0232  00BA               	movwf	___flmul@a+3
  5599  0233  0142               	movlb	2	; select bank2
  5600  0234  0840               	movf	(main@ftemp_C+2)^(0+256),w
  5601  0235  0140               	movlb	0	; select bank0
  5602  0236  00B9               	movwf	___flmul@a+2
  5603  0237  0142               	movlb	2	; select bank2
  5604  0238  083F               	movf	(main@ftemp_C+1)^(0+256),w
  5605  0239  0140               	movlb	0	; select bank0
  5606  023A  00B8               	movwf	___flmul@a+1
  5607  023B  0142               	movlb	2	; select bank2
  5608  023C  083E               	movf	main@ftemp_C^(0+256),w
  5609  023D  0140               	movlb	0	; select bank0
  5610  023E  00B7               	movwf	___flmul@a
  5611  023F  318B  2375  3180   	fcall	___flmul
  5612  0242  0140               	movlb	0	; select bank0
  5613  0243  0836               	movf	?___flmul+3,w
  5614  0244  00D4               	movwf	___fldiv@b+3
  5615  0245  0835               	movf	?___flmul+2,w
  5616  0246  00D3               	movwf	___fldiv@b+2
  5617  0247  0834               	movf	?___flmul+1,w
  5618  0248  00D2               	movwf	___fldiv@b+1
  5619  0249  0833               	movf	?___flmul,w
  5620  024A  00D1               	movwf	___fldiv@b
  5621  024B  3188  205A  3180   	fcall	___fldiv
  5622  024E  0140               	movlb	0	; select bank0
  5623  024F  0850               	movf	?___fldiv+3,w
  5624  0250  0142               	movlb	2	; select bank2
  5625  0251  00AD               	movwf	(_main$2071+3)^(0+256)
  5626  0252  0140               	movlb	0	; select bank0
  5627  0253  084F               	movf	?___fldiv+2,w
  5628  0254  0142               	movlb	2	; select bank2
  5629  0255  00AC               	movwf	(_main$2071+2)^(0+256)
  5630  0256  0140               	movlb	0	; select bank0
  5631  0257  084E               	movf	?___fldiv+1,w
  5632  0258  0142               	movlb	2	; select bank2
  5633  0259  00AB               	movwf	(_main$2071+1)^(0+256)
  5634  025A  0140               	movlb	0	; select bank0
  5635  025B  084D               	movf	?___fldiv,w
  5636  025C  0142               	movlb	2	; select bank2
  5637  025D  00AA               	movwf	_main$2071^(0+256)
  5638                           
  5639                           ;main.c: 443: fH = (log10(fRH) - 2.0) / 0.4343 + (17.62 * ftemp_C) / (243.12 + ftemp_C);
  5640  025E  303E               	movlw	62
  5641  025F  0140               	movlb	0	; select bank0
  5642  0260  00D0               	movwf	___fldiv@a+3
  5643  0261  30DE               	movlw	222
  5644  0262  00CF               	movwf	___fldiv@a+2
  5645  0263  305C               	movlw	92
  5646  0264  00CE               	movwf	___fldiv@a+1
  5647  0265  3092               	movlw	146
  5648  0266  00CD               	movwf	___fldiv@a
  5649  0267  30C0               	movlw	192
  5650  0268  00EA               	movwf	___fladd@b+3
  5651  0269  3000               	movlw	0
  5652  026A  00E9               	movwf	___fladd@b+2
  5653  026B  3000               	movlw	0
  5654  026C  00E8               	movwf	___fladd@b+1
  5655  026D  3000               	movlw	0
  5656  026E  00E7               	movwf	___fladd@b
  5657  026F  0142               	movlb	2	; select bank2
  5658  0270  0829               	movf	(_main$2070+3)^(0+256),w
  5659  0271  0140               	movlb	0	; select bank0
  5660  0272  00EE               	movwf	___fladd@a+3
  5661  0273  0142               	movlb	2	; select bank2
  5662  0274  0828               	movf	(_main$2070+2)^(0+256),w
  5663  0275  0140               	movlb	0	; select bank0
  5664  0276  00ED               	movwf	___fladd@a+2
  5665  0277  0142               	movlb	2	; select bank2
  5666  0278  0827               	movf	(_main$2070+1)^(0+256),w
  5667  0279  0140               	movlb	0	; select bank0
  5668  027A  00EC               	movwf	___fladd@a+1
  5669  027B  0142               	movlb	2	; select bank2
  5670  027C  0826               	movf	_main$2070^(0+256),w
  5671  027D  0140               	movlb	0	; select bank0
  5672  027E  00EB               	movwf	___fladd@a
  5673  027F  318D  25A1  3180   	fcall	___fladd
  5674  0282  0140               	movlb	0	; select bank0
  5675  0283  086A               	movf	?___fladd+3,w
  5676  0284  00D4               	movwf	___fldiv@b+3
  5677  0285  0869               	movf	?___fladd+2,w
  5678  0286  00D3               	movwf	___fldiv@b+2
  5679  0287  0868               	movf	?___fladd+1,w
  5680  0288  00D2               	movwf	___fldiv@b+1
  5681  0289  0867               	movf	?___fladd,w
  5682  028A  00D1               	movwf	___fldiv@b
  5683  028B  3188  205A  3180   	fcall	___fldiv
  5684  028E  0140               	movlb	0	; select bank0
  5685  028F  0850               	movf	?___fldiv+3,w
  5686  0290  0142               	movlb	2	; select bank2
  5687  0291  00B1               	movwf	(_main$2072+3)^(0+256)
  5688  0292  0140               	movlb	0	; select bank0
  5689  0293  084F               	movf	?___fldiv+2,w
  5690  0294  0142               	movlb	2	; select bank2
  5691  0295  00B0               	movwf	(_main$2072+2)^(0+256)
  5692  0296  0140               	movlb	0	; select bank0
  5693  0297  084E               	movf	?___fldiv+1,w
  5694  0298  0142               	movlb	2	; select bank2
  5695  0299  00AF               	movwf	(_main$2072+1)^(0+256)
  5696  029A  0140               	movlb	0	; select bank0
  5697  029B  084D               	movf	?___fldiv,w
  5698  029C  0142               	movlb	2	; select bank2
  5699  029D  00AE               	movwf	_main$2072^(0+256)
  5700                           
  5701                           ;main.c: 443: fH = (log10(fRH) - 2.0) / 0.4343 + (17.62 * ftemp_C) / (243.12 + ftemp_C);
  5702  029E  082D               	movf	(_main$2071+3)^(0+256),w
  5703  029F  0140               	movlb	0	; select bank0
  5704  02A0  00EA               	movwf	___fladd@b+3
  5705  02A1  0142               	movlb	2	; select bank2
  5706  02A2  082C               	movf	(_main$2071+2)^(0+256),w
  5707  02A3  0140               	movlb	0	; select bank0
  5708  02A4  00E9               	movwf	___fladd@b+2
  5709  02A5  0142               	movlb	2	; select bank2
  5710  02A6  082B               	movf	(_main$2071+1)^(0+256),w
  5711  02A7  0140               	movlb	0	; select bank0
  5712  02A8  00E8               	movwf	___fladd@b+1
  5713  02A9  0142               	movlb	2	; select bank2
  5714  02AA  082A               	movf	_main$2071^(0+256),w
  5715  02AB  0140               	movlb	0	; select bank0
  5716  02AC  00E7               	movwf	___fladd@b
  5717  02AD  0142               	movlb	2	; select bank2
  5718  02AE  0831               	movf	(_main$2072+3)^(0+256),w
  5719  02AF  0140               	movlb	0	; select bank0
  5720  02B0  00EE               	movwf	___fladd@a+3
  5721  02B1  0142               	movlb	2	; select bank2
  5722  02B2  0830               	movf	(_main$2072+2)^(0+256),w
  5723  02B3  0140               	movlb	0	; select bank0
  5724  02B4  00ED               	movwf	___fladd@a+2
  5725  02B5  0142               	movlb	2	; select bank2
  5726  02B6  082F               	movf	(_main$2072+1)^(0+256),w
  5727  02B7  0140               	movlb	0	; select bank0
  5728  02B8  00EC               	movwf	___fladd@a+1
  5729  02B9  0142               	movlb	2	; select bank2
  5730  02BA  082E               	movf	_main$2072^(0+256),w
  5731  02BB  0140               	movlb	0	; select bank0
  5732  02BC  00EB               	movwf	___fladd@a
  5733  02BD  318D  25A1  3180   	fcall	___fladd
  5734  02C0  0140               	movlb	0	; select bank0
  5735  02C1  086A               	movf	?___fladd+3,w
  5736  02C2  0142               	movlb	2	; select bank2
  5737  02C3  00B9               	movwf	(main@fH+3)^(0+256)
  5738  02C4  0140               	movlb	0	; select bank0
  5739  02C5  0869               	movf	?___fladd+2,w
  5740  02C6  0142               	movlb	2	; select bank2
  5741  02C7  00B8               	movwf	(main@fH+2)^(0+256)
  5742  02C8  0140               	movlb	0	; select bank0
  5743  02C9  0868               	movf	?___fladd+1,w
  5744  02CA  0142               	movlb	2	; select bank2
  5745  02CB  00B7               	movwf	(main@fH+1)^(0+256)
  5746  02CC  0140               	movlb	0	; select bank0
  5747  02CD  0867               	movf	?___fladd,w
  5748  02CE  0142               	movlb	2	; select bank2
  5749  02CF  00B6               	movwf	main@fH^(0+256)
  5750  02D0  0839               	movf	(main@fH+3)^(0+256),w
  5751  02D1  0141               	movlb	1	; select bank1
  5752  02D2  00AF               	movwf	(___flsub@a+3)^(0+128)
  5753  02D3  0142               	movlb	2	; select bank2
  5754  02D4  0838               	movf	(main@fH+2)^(0+256),w
  5755  02D5  0141               	movlb	1	; select bank1
  5756  02D6  00AE               	movwf	(___flsub@a+2)^(0+128)
  5757  02D7  0142               	movlb	2	; select bank2
  5758  02D8  0837               	movf	(main@fH+1)^(0+256),w
  5759  02D9  0141               	movlb	1	; select bank1
  5760  02DA  00AD               	movwf	(___flsub@a+1)^(0+128)
  5761  02DB  0142               	movlb	2	; select bank2
  5762  02DC  0836               	movf	main@fH^(0+256),w
  5763  02DD  0141               	movlb	1	; select bank1
  5764  02DE  00AC               	movwf	___flsub@a^(0+128)
  5765  02DF  3041               	movlw	65
  5766  02E0  00B3               	movwf	(___flsub@b+3)^(0+128)
  5767  02E1  308C               	movlw	140
  5768  02E2  00B2               	movwf	(___flsub@b+2)^(0+128)
  5769  02E3  30F5               	movlw	245
  5770  02E4  00B1               	movwf	(___flsub@b+1)^(0+128)
  5771  02E5  30C3               	movlw	195
  5772  02E6  00B0               	movwf	___flsub@b^(0+128)
  5773  02E7  319F  2723  3180   	fcall	___flsub
  5774  02EA  0141               	movlb	1	; select bank1
  5775  02EB  082F               	movf	(?___flsub+3)^(0+128),w
  5776  02EC  0140               	movlb	0	; select bank0
  5777  02ED  00D0               	movwf	___fldiv@a+3
  5778  02EE  0141               	movlb	1	; select bank1
  5779  02EF  082E               	movf	(?___flsub+2)^(0+128),w
  5780  02F0  0140               	movlb	0	; select bank0
  5781  02F1  00CF               	movwf	___fldiv@a+2
  5782  02F2  0141               	movlb	1	; select bank1
  5783  02F3  082D               	movf	(?___flsub+1)^(0+128),w
  5784  02F4  0140               	movlb	0	; select bank0
  5785  02F5  00CE               	movwf	___fldiv@a+1
  5786  02F6  0141               	movlb	1	; select bank1
  5787  02F7  082C               	movf	?___flsub^(0+128),w
  5788  02F8  0140               	movlb	0	; select bank0
  5789  02F9  00CD               	movwf	___fldiv@a
  5790  02FA  3043               	movlw	67
  5791  02FB  00B6               	movwf	___flmul@b+3
  5792  02FC  3073               	movlw	115
  5793  02FD  00B5               	movwf	___flmul@b+2
  5794  02FE  301E               	movlw	30
  5795  02FF  00B4               	movwf	___flmul@b+1
  5796  0300  30B8               	movlw	184
  5797  0301  00B3               	movwf	___flmul@b
  5798  0302  0142               	movlb	2	; select bank2
  5799  0303  0839               	movf	(main@fH+3)^(0+256),w
  5800  0304  0140               	movlb	0	; select bank0
  5801  0305  00BA               	movwf	___flmul@a+3
  5802  0306  0142               	movlb	2	; select bank2
  5803  0307  0838               	movf	(main@fH+2)^(0+256),w
  5804  0308  0140               	movlb	0	; select bank0
  5805  0309  00B9               	movwf	___flmul@a+2
  5806  030A  0142               	movlb	2	; select bank2
  5807  030B  0837               	movf	(main@fH+1)^(0+256),w
  5808  030C  0140               	movlb	0	; select bank0
  5809  030D  00B8               	movwf	___flmul@a+1
  5810  030E  0142               	movlb	2	; select bank2
  5811  030F  0836               	movf	main@fH^(0+256),w
  5812  0310  0140               	movlb	0	; select bank0
  5813  0311  00B7               	movwf	___flmul@a
  5814  0312  318B  2375  3180   	fcall	___flmul
  5815  0315  0140               	movlb	0	; select bank0
  5816  0316  0836               	movf	?___flmul+3,w
  5817  0317  00D4               	movwf	___fldiv@b+3
  5818  0318  0835               	movf	?___flmul+2,w
  5819  0319  00D3               	movwf	___fldiv@b+2
  5820  031A  0834               	movf	?___flmul+1,w
  5821  031B  00D2               	movwf	___fldiv@b+1
  5822  031C  0833               	movf	?___flmul,w
  5823  031D  00D1               	movwf	___fldiv@b
  5824  031E  3188  205A  3180   	fcall	___fldiv
  5825                           
  5826                           ;main.c: 446: if (fRH < 0) fRH = 0;
  5827  0321  0142               	movlb	2	; select bank2
  5828  0322  0845               	movf	(main@fRH+3)^(0+256),w
  5829  0323  0140               	movlb	0	; select bank0
  5830  0324  00A3               	movwf	___flge@ff1+3
  5831  0325  0142               	movlb	2	; select bank2
  5832  0326  0844               	movf	(main@fRH+2)^(0+256),w
  5833  0327  0140               	movlb	0	; select bank0
  5834  0328  00A2               	movwf	___flge@ff1+2
  5835  0329  0142               	movlb	2	; select bank2
  5836  032A  0843               	movf	(main@fRH+1)^(0+256),w
  5837  032B  0140               	movlb	0	; select bank0
  5838  032C  00A1               	movwf	___flge@ff1+1
  5839  032D  0142               	movlb	2	; select bank2
  5840  032E  0842               	movf	main@fRH^(0+256),w
  5841  032F  0140               	movlb	0	; select bank0
  5842  0330  00A0               	movwf	___flge@ff1
  5843  0331  3000               	movlw	0
  5844  0332  00A7               	movwf	___flge@ff2+3
  5845  0333  3000               	movlw	0
  5846  0334  00A6               	movwf	___flge@ff2+2
  5847  0335  3000               	movlw	0
  5848  0336  00A5               	movwf	___flge@ff2+1
  5849  0337  3000               	movlw	0
  5850  0338  00A4               	movwf	___flge@ff2
  5851  0339  3193  23CC  3180   	fcall	___flge
  5852  033C  1803               	btfsc	3,0
  5853  033D  2B43               	goto	l5302
  5854  033E  3000               	movlw	0
  5855  033F  0142               	movlb	2	; select bank2
  5856  0340  00C5               	movwf	(main@fRH+3)^(0+256)
  5857  0341  3000               	movlw	0
  5858  0342  2B65               	goto	L1
  5859  0343                     l5302:	
  5860                           
  5861                           ;main.c: 447: else if (fRH > 100) fRH = 100;
  5862  0343  3042               	movlw	66
  5863  0344  0140               	movlb	0	; select bank0
  5864  0345  00A3               	movwf	___flge@ff1+3
  5865  0346  30C8               	movlw	200
  5866  0347  00A2               	movwf	___flge@ff1+2
  5867  0348  3000               	movlw	0
  5868  0349  00A1               	movwf	___flge@ff1+1
  5869  034A  3000               	movlw	0
  5870  034B  00A0               	movwf	___flge@ff1
  5871  034C  0142               	movlb	2	; select bank2
  5872  034D  0845               	movf	(main@fRH+3)^(0+256),w
  5873  034E  0140               	movlb	0	; select bank0
  5874  034F  00A7               	movwf	___flge@ff2+3
  5875  0350  0142               	movlb	2	; select bank2
  5876  0351  0844               	movf	(main@fRH+2)^(0+256),w
  5877  0352  0140               	movlb	0	; select bank0
  5878  0353  00A6               	movwf	___flge@ff2+2
  5879  0354  0142               	movlb	2	; select bank2
  5880  0355  0843               	movf	(main@fRH+1)^(0+256),w
  5881  0356  0140               	movlb	0	; select bank0
  5882  0357  00A5               	movwf	___flge@ff2+1
  5883  0358  0142               	movlb	2	; select bank2
  5884  0359  0842               	movf	main@fRH^(0+256),w
  5885  035A  0140               	movlb	0	; select bank0
  5886  035B  00A4               	movwf	___flge@ff2
  5887  035C  3193  23CC  3180   	fcall	___flge
  5888  035F  1803               	btfsc	3,0
  5889  0360  2B6A               	goto	l5306
  5890  0361  3042               	movlw	66
  5891  0362  0142               	movlb	2	; select bank2
  5892  0363  00C5               	movwf	(main@fRH+3)^(0+256)
  5893  0364  30C8               	movlw	200
  5894  0365                     L1:	
  5895  0365  00C4               	movwf	(main@fRH+2)^(0+256)
  5896  0366  3000               	movlw	0
  5897  0367  00C3               	movwf	(main@fRH+1)^(0+256)
  5898  0368  3000               	movlw	0
  5899  0369  00C2               	movwf	main@fRH^(0+256)
  5900  036A                     l5306:	
  5901                           
  5902                           ;main.c: 448: rh = round(fRH * 10.0);
  5903  036A  0142               	movlb	2	; select bank2
  5904  036B  0845               	movf	(main@fRH+3)^(0+256),w
  5905  036C  0140               	movlb	0	; select bank0
  5906  036D  00BA               	movwf	___flmul@a+3
  5907  036E  0142               	movlb	2	; select bank2
  5908  036F  0844               	movf	(main@fRH+2)^(0+256),w
  5909  0370  0140               	movlb	0	; select bank0
  5910  0371  00B9               	movwf	___flmul@a+2
  5911  0372  0142               	movlb	2	; select bank2
  5912  0373  0843               	movf	(main@fRH+1)^(0+256),w
  5913  0374  0140               	movlb	0	; select bank0
  5914  0375  00B8               	movwf	___flmul@a+1
  5915  0376  0142               	movlb	2	; select bank2
  5916  0377  0842               	movf	main@fRH^(0+256),w
  5917  0378  0140               	movlb	0	; select bank0
  5918  0379  00B7               	movwf	___flmul@a
  5919  037A  3041               	movlw	65
  5920  037B  00B6               	movwf	___flmul@b+3
  5921  037C  3020               	movlw	32
  5922  037D  00B5               	movwf	___flmul@b+2
  5923  037E  3000               	movlw	0
  5924  037F  00B4               	movwf	___flmul@b+1
  5925  0380  3000               	movlw	0
  5926  0381  00B3               	movwf	___flmul@b
  5927  0382  318B  2375  3180   	fcall	___flmul
  5928  0385  0140               	movlb	0	; select bank0
  5929  0386  0836               	movf	?___flmul+3,w
  5930  0387  0141               	movlb	1	; select bank1
  5931  0388  00B7               	movwf	(round@x+3)^(0+128)
  5932  0389  0140               	movlb	0	; select bank0
  5933  038A  0835               	movf	?___flmul+2,w
  5934  038B  0141               	movlb	1	; select bank1
  5935  038C  00B6               	movwf	(round@x+2)^(0+128)
  5936  038D  0140               	movlb	0	; select bank0
  5937  038E  0834               	movf	?___flmul+1,w
  5938  038F  0141               	movlb	1	; select bank1
  5939  0390  00B5               	movwf	(round@x+1)^(0+128)
  5940  0391  0140               	movlb	0	; select bank0
  5941  0392  0833               	movf	?___flmul,w
  5942  0393  0141               	movlb	1	; select bank1
  5943  0394  00B4               	movwf	round@x^(0+128)
  5944  0395  3194  2448  3180   	fcall	_round
  5945  0398  0141               	movlb	1	; select bank1
  5946  0399  0837               	movf	(?_round+3)^(0+128),w
  5947  039A  0142               	movlb	2	; select bank2
  5948  039B  00BD               	movwf	(_main$2073+3)^(0+256)
  5949  039C  0141               	movlb	1	; select bank1
  5950  039D  0836               	movf	(?_round+2)^(0+128),w
  5951  039E  0142               	movlb	2	; select bank2
  5952  039F  00BC               	movwf	(_main$2073+2)^(0+256)
  5953  03A0  0141               	movlb	1	; select bank1
  5954  03A1  0835               	movf	(?_round+1)^(0+128),w
  5955  03A2  0142               	movlb	2	; select bank2
  5956  03A3  00BB               	movwf	(_main$2073+1)^(0+256)
  5957  03A4  0141               	movlb	1	; select bank1
  5958  03A5  0834               	movf	?_round^(0+128),w
  5959  03A6  0142               	movlb	2	; select bank2
  5960  03A7  00BA               	movwf	_main$2073^(0+256)
  5961                           
  5962                           ;main.c: 448: rh = round(fRH * 10.0);
  5963  03A8  083D               	movf	(_main$2073+3)^(0+256),w
  5964  03A9  0140               	movlb	0	; select bank0
  5965  03AA  00D0               	movwf	___fltol@f1+3
  5966  03AB  0142               	movlb	2	; select bank2
  5967  03AC  083C               	movf	(_main$2073+2)^(0+256),w
  5968  03AD  0140               	movlb	0	; select bank0
  5969  03AE  00CF               	movwf	___fltol@f1+2
  5970  03AF  0142               	movlb	2	; select bank2
  5971  03B0  083B               	movf	(_main$2073+1)^(0+256),w
  5972  03B1  0140               	movlb	0	; select bank0
  5973  03B2  00CE               	movwf	___fltol@f1+1
  5974  03B3  0142               	movlb	2	; select bank2
  5975  03B4  083A               	movf	_main$2073^(0+256),w
  5976  03B5  0140               	movlb	0	; select bank0
  5977  03B6  00CD               	movwf	___fltol@f1
  5978  03B7  3193  2366  3180   	fcall	___fltol
  5979  03BA  0140               	movlb	0	; select bank0
  5980  03BB  084D               	movf	?___fltol,w
  5981  03BC  0141               	movlb	1	; select bank1
  5982  03BD  00E9               	movwf	??_main^(0+128)
  5983  03BE  0869               	movf	??_main^(0+128),w
  5984  03BF  0142               	movlb	2	; select bank2
  5985  03C0  00DB               	movwf	_rh^(0+256)
  5986                           
  5987                           ;main.c: 449: temp = round(ftemp_C * 10.0);
  5988  03C1  0841               	movf	(main@ftemp_C+3)^(0+256),w
  5989  03C2  0140               	movlb	0	; select bank0
  5990  03C3  00BA               	movwf	___flmul@a+3
  5991  03C4  0142               	movlb	2	; select bank2
  5992  03C5  0840               	movf	(main@ftemp_C+2)^(0+256),w
  5993  03C6  0140               	movlb	0	; select bank0
  5994  03C7  00B9               	movwf	___flmul@a+2
  5995  03C8  0142               	movlb	2	; select bank2
  5996  03C9  083F               	movf	(main@ftemp_C+1)^(0+256),w
  5997  03CA  0140               	movlb	0	; select bank0
  5998  03CB  00B8               	movwf	___flmul@a+1
  5999  03CC  0142               	movlb	2	; select bank2
  6000  03CD  083E               	movf	main@ftemp_C^(0+256),w
  6001  03CE  0140               	movlb	0	; select bank0
  6002  03CF  00B7               	movwf	___flmul@a
  6003  03D0  3041               	movlw	65
  6004  03D1  00B6               	movwf	___flmul@b+3
  6005  03D2  3020               	movlw	32
  6006  03D3  00B5               	movwf	___flmul@b+2
  6007  03D4  3000               	movlw	0
  6008  03D5  00B4               	movwf	___flmul@b+1
  6009  03D6  3000               	movlw	0
  6010  03D7  00B3               	movwf	___flmul@b
  6011  03D8  318B  2375  3180   	fcall	___flmul
  6012  03DB  0140               	movlb	0	; select bank0
  6013  03DC  0836               	movf	?___flmul+3,w
  6014  03DD  0141               	movlb	1	; select bank1
  6015  03DE  00B7               	movwf	(round@x+3)^(0+128)
  6016  03DF  0140               	movlb	0	; select bank0
  6017  03E0  0835               	movf	?___flmul+2,w
  6018  03E1  0141               	movlb	1	; select bank1
  6019  03E2  00B6               	movwf	(round@x+2)^(0+128)
  6020  03E3  0140               	movlb	0	; select bank0
  6021  03E4  0834               	movf	?___flmul+1,w
  6022  03E5  0141               	movlb	1	; select bank1
  6023  03E6  00B5               	movwf	(round@x+1)^(0+128)
  6024  03E7  0140               	movlb	0	; select bank0
  6025  03E8  0833               	movf	?___flmul,w
  6026  03E9  0141               	movlb	1	; select bank1
  6027  03EA  00B4               	movwf	round@x^(0+128)
  6028  03EB  3194  2448  3180   	fcall	_round
  6029  03EE  0141               	movlb	1	; select bank1
  6030  03EF  0837               	movf	(?_round+3)^(0+128),w
  6031  03F0  0142               	movlb	2	; select bank2
  6032  03F1  00BD               	movwf	(_main$2073+3)^(0+256)
  6033  03F2  0141               	movlb	1	; select bank1
  6034  03F3  0836               	movf	(?_round+2)^(0+128),w
  6035  03F4  0142               	movlb	2	; select bank2
  6036  03F5  00BC               	movwf	(_main$2073+2)^(0+256)
  6037  03F6  0141               	movlb	1	; select bank1
  6038  03F7  0835               	movf	(?_round+1)^(0+128),w
  6039  03F8  0142               	movlb	2	; select bank2
  6040  03F9  00BB               	movwf	(_main$2073+1)^(0+256)
  6041  03FA  0141               	movlb	1	; select bank1
  6042  03FB  0834               	movf	?_round^(0+128),w
  6043  03FC  0142               	movlb	2	; select bank2
  6044  03FD  00BA               	movwf	_main$2073^(0+256)
  6045                           
  6046                           ;main.c: 449: temp = round(ftemp_C * 10.0);
  6047  03FE  083D               	movf	(_main$2073+3)^(0+256),w
  6048  03FF  0140               	movlb	0	; select bank0
  6049  0400  00D0               	movwf	___fltol@f1+3
  6050  0401  0142               	movlb	2	; select bank2
  6051  0402  083C               	movf	(_main$2073+2)^(0+256),w
  6052  0403  0140               	movlb	0	; select bank0
  6053  0404  00CF               	movwf	___fltol@f1+2
  6054  0405  0142               	movlb	2	; select bank2
  6055  0406  083B               	movf	(_main$2073+1)^(0+256),w
  6056  0407  0140               	movlb	0	; select bank0
  6057  0408  00CE               	movwf	___fltol@f1+1
  6058  0409  0142               	movlb	2	; select bank2
  6059  040A  083A               	movf	_main$2073^(0+256),w
  6060  040B  0140               	movlb	0	; select bank0
  6061  040C  00CD               	movwf	___fltol@f1
  6062  040D  3193  2366  3180   	fcall	___fltol
  6063  0410  0140               	movlb	0	; select bank0
  6064  0411  084D               	movf	?___fltol,w
  6065  0412  0141               	movlb	1	; select bank1
  6066  0413  00E9               	movwf	??_main^(0+128)
  6067  0414  0869               	movf	??_main^(0+128),w
  6068  0415  0142               	movlb	2	; select bank2
  6069  0416  00E2               	movwf	_temp^(0+256)
  6070                           
  6071                           ;main.c: 450: __nop();
  6072  0417  0000               	nop
  6073  0418                     l5316:	
  6074                           
  6075                           ;main.c: 451: };main.c: 454: if (duty == 0) {
  6076  0418  0142               	movlb	2	; select bank2
  6077  0419  085E               	movf	_duty^(0+256),w	;volatile
  6078  041A  1D03               	btfss	3,2
  6079  041B  2C22               	goto	l5322
  6080                           
  6081                           ;main.c: 455: read_cur_volt();
  6082  041C  3187  271A  3180   	fcall	_read_cur_volt
  6083                           
  6084                           ;main.c: 456: TMR1_StartTimer();
  6085  041F  3188  2000  3180   	fcall	_TMR1_StartTimer
  6086  0422                     l5322:	
  6087                           
  6088                           ;main.c: 457: };main.c: 460: if (check_status() == 0) {
  6089  0422  3195  25FD  3180   	fcall	_check_status
  6090  0425  3A00               	xorlw	0
  6091  0426  1D03               	skipz
  6092  0427  2C2B               	goto	l5326
  6093                           
  6094                           ;main.c: 462: main_menu();
  6095  0428  3184  2435  3180   	fcall	_main_menu
  6096  042B                     l5326:	
  6097                           
  6098                           ;main.c: 463: };main.c: 467: _delay((unsigned long)((100)*(1000000/4000.0)));
  6099  042B  3021               	movlw	33
  6100  042C  0141               	movlb	1	; select bank1
  6101  042D  00E9               	movwf	??_main^(0+128)
  6102  042E  3076               	movlw	118
  6103  042F                     u5937:	
  6104  042F  0B89               	decfsz	9,f
  6105  0430  2C2F               	goto	u5937
  6106  0431  0BE9               	decfsz	??_main^(0+128),f
  6107  0432  2C2F               	goto	u5937
  6108  0433  0000               	nop
  6109  0434  28A7               	goto	l5262
  6110  0435                     __end_of_main:	
  6111                           
  6112                           	psect	text1
  6113  1448                     __ptext1:	
  6114 ;; *************** function _round *****************
  6115 ;; Defined at:
  6116 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\round.c"
  6117 ;; Parameters:    Size  Location     Type
  6118 ;;  x               4   20[BANK1 ] void 
  6119 ;; Auto vars:     Size  Location     Type
  6120 ;;  f               4   24[BANK1 ] void 
  6121 ;; Return value:  Size  Location     Type
  6122 ;;                  4   20[BANK1 ] void 
  6123 ;; Registers used:
  6124 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6125 ;; Tracked objects:
  6126 ;;		On entry : 0/0
  6127 ;;		On exit  : 0/0
  6128 ;;		Unchanged: 0/0
  6129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6130 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6131 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6133 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6134 ;;Total ram usage:        8 bytes
  6135 ;; Hardware stack levels used:    1
  6136 ;; Hardware stack levels required when called:    8
  6137 ;; This function calls:
  6138 ;;		___fladd
  6139 ;;		___flsub
  6140 ;;		_trunc
  6141 ;; This function is called by:
  6142 ;;		_main
  6143 ;; This function uses a non-reentrant model
  6144 ;;
  6145                           
  6146                           
  6147                           ;psect for function _round
  6148  1448                     _round:	
  6149                           
  6150                           ;incstack = 0
  6151                           ; Regs used in _round: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6152  1448  0141               	movlb	1	; select bank1
  6153  1449  0837               	movf	(round@x+3)^(0+128),w
  6154  144A  0140               	movlb	0	; select bank0
  6155  144B  00DB               	movwf	trunc@x+3
  6156  144C  0141               	movlb	1	; select bank1
  6157  144D  0836               	movf	(round@x+2)^(0+128),w
  6158  144E  0140               	movlb	0	; select bank0
  6159  144F  00DA               	movwf	trunc@x+2
  6160  1450  0141               	movlb	1	; select bank1
  6161  1451  0835               	movf	(round@x+1)^(0+128),w
  6162  1452  0140               	movlb	0	; select bank0
  6163  1453  00D9               	movwf	trunc@x+1
  6164  1454  0141               	movlb	1	; select bank1
  6165  1455  0834               	movf	round@x^(0+128),w
  6166  1456  0140               	movlb	0	; select bank0
  6167  1457  00D8               	movwf	trunc@x
  6168  1458  3191  2174  3194   	fcall	_trunc
  6169  145B  0140               	movlb	0	; select bank0
  6170  145C  085B               	movf	?_trunc+3,w
  6171  145D  0141               	movlb	1	; select bank1
  6172  145E  00AF               	movwf	(___flsub@a+3)^(0+128)
  6173  145F  0140               	movlb	0	; select bank0
  6174  1460  085A               	movf	?_trunc+2,w
  6175  1461  0141               	movlb	1	; select bank1
  6176  1462  00AE               	movwf	(___flsub@a+2)^(0+128)
  6177  1463  0140               	movlb	0	; select bank0
  6178  1464  0859               	movf	?_trunc+1,w
  6179  1465  0141               	movlb	1	; select bank1
  6180  1466  00AD               	movwf	(___flsub@a+1)^(0+128)
  6181  1467  0140               	movlb	0	; select bank0
  6182  1468  0858               	movf	?_trunc,w
  6183  1469  0141               	movlb	1	; select bank1
  6184  146A  00AC               	movwf	___flsub@a^(0+128)
  6185  146B  0837               	movf	(round@x+3)^(0+128),w
  6186  146C  00B3               	movwf	(___flsub@b+3)^(0+128)
  6187  146D  0836               	movf	(round@x+2)^(0+128),w
  6188  146E  00B2               	movwf	(___flsub@b+2)^(0+128)
  6189  146F  0835               	movf	(round@x+1)^(0+128),w
  6190  1470  00B1               	movwf	(___flsub@b+1)^(0+128)
  6191  1471  0834               	movf	round@x^(0+128),w
  6192  1472  00B0               	movwf	___flsub@b^(0+128)
  6193  1473  319F  2723  3194   	fcall	___flsub
  6194  1476  0141               	movlb	1	; select bank1
  6195  1477  082F               	movf	(?___flsub+3)^(0+128),w
  6196  1478  00BB               	movwf	(round@f+3)^(0+128)
  6197  1479  082E               	movf	(?___flsub+2)^(0+128),w
  6198  147A  00BA               	movwf	(round@f+2)^(0+128)
  6199  147B  082D               	movf	(?___flsub+1)^(0+128),w
  6200  147C  00B9               	movwf	(round@f+1)^(0+128)
  6201  147D  082C               	movf	?___flsub^(0+128),w
  6202  147E  00B8               	movwf	round@f^(0+128)
  6203  147F  083B               	movf	(round@f+3)^(0+128),w
  6204  1480  0140               	movlb	0	; select bank0
  6205  1481  00EA               	movwf	___fladd@b+3
  6206  1482  0141               	movlb	1	; select bank1
  6207  1483  083A               	movf	(round@f+2)^(0+128),w
  6208  1484  0140               	movlb	0	; select bank0
  6209  1485  00E9               	movwf	___fladd@b+2
  6210  1486  0141               	movlb	1	; select bank1
  6211  1487  0839               	movf	(round@f+1)^(0+128),w
  6212  1488  0140               	movlb	0	; select bank0
  6213  1489  00E8               	movwf	___fladd@b+1
  6214  148A  0141               	movlb	1	; select bank1
  6215  148B  0838               	movf	round@f^(0+128),w
  6216  148C  0140               	movlb	0	; select bank0
  6217  148D  00E7               	movwf	___fladd@b
  6218  148E  0141               	movlb	1	; select bank1
  6219  148F  0837               	movf	(round@x+3)^(0+128),w
  6220  1490  0140               	movlb	0	; select bank0
  6221  1491  00EE               	movwf	___fladd@a+3
  6222  1492  0141               	movlb	1	; select bank1
  6223  1493  0836               	movf	(round@x+2)^(0+128),w
  6224  1494  0140               	movlb	0	; select bank0
  6225  1495  00ED               	movwf	___fladd@a+2
  6226  1496  0141               	movlb	1	; select bank1
  6227  1497  0835               	movf	(round@x+1)^(0+128),w
  6228  1498  0140               	movlb	0	; select bank0
  6229  1499  00EC               	movwf	___fladd@a+1
  6230  149A  0141               	movlb	1	; select bank1
  6231  149B  0834               	movf	round@x^(0+128),w
  6232  149C  0140               	movlb	0	; select bank0
  6233  149D  00EB               	movwf	___fladd@a
  6234  149E  318D  25A1  3194   	fcall	___fladd
  6235  14A1  0140               	movlb	0	; select bank0
  6236  14A2  086A               	movf	?___fladd+3,w
  6237  14A3  0141               	movlb	1	; select bank1
  6238  14A4  00B7               	movwf	(round@x+3)^(0+128)
  6239  14A5  0140               	movlb	0	; select bank0
  6240  14A6  0869               	movf	?___fladd+2,w
  6241  14A7  0141               	movlb	1	; select bank1
  6242  14A8  00B6               	movwf	(round@x+2)^(0+128)
  6243  14A9  0140               	movlb	0	; select bank0
  6244  14AA  0868               	movf	?___fladd+1,w
  6245  14AB  0141               	movlb	1	; select bank1
  6246  14AC  00B5               	movwf	(round@x+1)^(0+128)
  6247  14AD  0140               	movlb	0	; select bank0
  6248  14AE  0867               	movf	?___fladd,w
  6249  14AF  0141               	movlb	1	; select bank1
  6250  14B0  00B4               	movwf	round@x^(0+128)
  6251  14B1  0837               	movf	(round@x+3)^(0+128),w
  6252  14B2  0140               	movlb	0	; select bank0
  6253  14B3  00DB               	movwf	trunc@x+3
  6254  14B4  0141               	movlb	1	; select bank1
  6255  14B5  0836               	movf	(round@x+2)^(0+128),w
  6256  14B6  0140               	movlb	0	; select bank0
  6257  14B7  00DA               	movwf	trunc@x+2
  6258  14B8  0141               	movlb	1	; select bank1
  6259  14B9  0835               	movf	(round@x+1)^(0+128),w
  6260  14BA  0140               	movlb	0	; select bank0
  6261  14BB  00D9               	movwf	trunc@x+1
  6262  14BC  0141               	movlb	1	; select bank1
  6263  14BD  0834               	movf	round@x^(0+128),w
  6264  14BE  0140               	movlb	0	; select bank0
  6265  14BF  00D8               	movwf	trunc@x
  6266  14C0  3191  2174         	fcall	_trunc
  6267  14C2  0140               	movlb	0	; select bank0
  6268  14C3  085B               	movf	?_trunc+3,w
  6269  14C4  0141               	movlb	1	; select bank1
  6270  14C5  00B7               	movwf	(?_round+3)^(0+128)
  6271  14C6  0140               	movlb	0	; select bank0
  6272  14C7  085A               	movf	?_trunc+2,w
  6273  14C8  0141               	movlb	1	; select bank1
  6274  14C9  00B6               	movwf	(?_round+2)^(0+128)
  6275  14CA  0140               	movlb	0	; select bank0
  6276  14CB  0859               	movf	?_trunc+1,w
  6277  14CC  0141               	movlb	1	; select bank1
  6278  14CD  00B5               	movwf	(?_round+1)^(0+128)
  6279  14CE  0140               	movlb	0	; select bank0
  6280  14CF  0858               	movf	?_trunc,w
  6281  14D0  0141               	movlb	1	; select bank1
  6282  14D1  00B4               	movwf	?_round^(0+128)
  6283  14D2  0008               	return
  6284  14D3                     __end_of_round:	
  6285                           
  6286                           	psect	text2
  6287  1174                     __ptext2:	
  6288 ;; *************** function _trunc *****************
  6289 ;; Defined at:
  6290 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\trunc.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;  x               4   56[BANK0 ] void 
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;  i               4   61[BANK0 ] void 
  6295 ;;  expon           2   65[BANK0 ] int 
  6296 ;; Return value:  Size  Location     Type
  6297 ;;                  4   56[BANK0 ] int 
  6298 ;; Registers used:
  6299 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6300 ;; Tracked objects:
  6301 ;;		On entry : 0/0
  6302 ;;		On exit  : 0/0
  6303 ;;		Unchanged: 0/0
  6304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6305 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6306 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6307 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6308 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6309 ;;Total ram usage:       11 bytes
  6310 ;; Hardware stack levels used:    1
  6311 ;; Hardware stack levels required when called:    7
  6312 ;; This function calls:
  6313 ;;		___fltol
  6314 ;;		___xxtofl
  6315 ;;		_frexp
  6316 ;; This function is called by:
  6317 ;;		_round
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           
  6322                           ;psect for function _trunc
  6323  1174                     _trunc:	
  6324                           
  6325                           ;incstack = 0
  6326                           ; Regs used in _trunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6327  1174  0140               	movlb	0	; select bank0
  6328  1175  085B               	movf	trunc@x+3,w
  6329  1176  00AF               	movwf	frexp@value+3
  6330  1177  085A               	movf	trunc@x+2,w
  6331  1178  00AE               	movwf	frexp@value+2
  6332  1179  0859               	movf	trunc@x+1,w
  6333  117A  00AD               	movwf	frexp@value+1
  6334  117B  0858               	movf	trunc@x,w
  6335  117C  00AC               	movwf	frexp@value
  6336  117D  3061               	movlw	(low (trunc@expon| 0))& (0+255)
  6337  117E  00DC               	movwf	??_trunc
  6338  117F  085C               	movf	??_trunc,w
  6339  1180  00B0               	movwf	frexp@eptr
  6340  1181  3192  220E  3191   	fcall	_frexp
  6341  1184  0140               	movlb	0	; select bank0
  6342  1185  1FE2               	btfss	trunc@expon+1,7
  6343  1186  2990               	goto	l4620
  6344  1187  3000               	movlw	0
  6345  1188  00DB               	movwf	?_trunc+3
  6346  1189  3000               	movlw	0
  6347  118A  00DA               	movwf	?_trunc+2
  6348  118B  3000               	movlw	0
  6349  118C  00D9               	movwf	?_trunc+1
  6350  118D  3000               	movlw	0
  6351  118E  00D8               	movwf	?_trunc
  6352  118F  0008               	return
  6353  1190                     l4620:	
  6354  1190  3000               	movlw	0
  6355  1191  0262               	subwf	trunc@expon+1,w
  6356  1192  301D               	movlw	29
  6357  1193  1903               	skipnz
  6358  1194  0261               	subwf	trunc@expon,w
  6359  1195  1803               	btfsc	3,0
  6360  1196  0008               	return
  6361  1197  085B               	movf	trunc@x+3,w
  6362  1198  00D0               	movwf	___fltol@f1+3
  6363  1199  085A               	movf	trunc@x+2,w
  6364  119A  00CF               	movwf	___fltol@f1+2
  6365  119B  0859               	movf	trunc@x+1,w
  6366  119C  00CE               	movwf	___fltol@f1+1
  6367  119D  0858               	movf	trunc@x,w
  6368  119E  00CD               	movwf	___fltol@f1
  6369  119F  3193  2366  3191   	fcall	___fltol
  6370  11A2  0140               	movlb	0	; select bank0
  6371  11A3  0850               	movf	?___fltol+3,w
  6372  11A4  00A3               	movwf	___xxtofl@val+3
  6373  11A5  084F               	movf	?___fltol+2,w
  6374  11A6  00A2               	movwf	___xxtofl@val+2
  6375  11A7  084E               	movf	?___fltol+1,w
  6376  11A8  00A1               	movwf	___xxtofl@val+1
  6377  11A9  084D               	movf	?___fltol,w
  6378  11AA  00A0               	movwf	___xxtofl@val
  6379  11AB  3001               	movlw	1
  6380  11AC  3195  2567         	fcall	___xxtofl
  6381  11AE  0140               	movlb	0	; select bank0
  6382  11AF  0823               	movf	?___xxtofl+3,w
  6383  11B0  00E0               	movwf	trunc@i+3
  6384  11B1  0822               	movf	?___xxtofl+2,w
  6385  11B2  00DF               	movwf	trunc@i+2
  6386  11B3  0821               	movf	?___xxtofl+1,w
  6387  11B4  00DE               	movwf	trunc@i+1
  6388  11B5  0820               	movf	?___xxtofl,w
  6389  11B6  00DD               	movwf	trunc@i
  6390  11B7  0860               	movf	trunc@i+3,w
  6391  11B8  00DB               	movwf	?_trunc+3
  6392  11B9  085F               	movf	trunc@i+2,w
  6393  11BA  00DA               	movwf	?_trunc+2
  6394  11BB  085E               	movf	trunc@i+1,w
  6395  11BC  00D9               	movwf	?_trunc+1
  6396  11BD  085D               	movf	trunc@i,w
  6397  11BE  00D8               	movwf	?_trunc
  6398  11BF  0008               	return
  6399  11C0                     __end_of_trunc:	
  6400                           
  6401                           	psect	text3
  6402  1366                     __ptext3:	
  6403 ;; *************** function ___fltol *****************
  6404 ;; Defined at:
  6405 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;  f1              4   45[BANK0 ] int 
  6408 ;; Auto vars:     Size  Location     Type
  6409 ;;  exp1            1   55[BANK0 ] unsigned char 
  6410 ;;  sign1           1   54[BANK0 ] unsigned char 
  6411 ;; Return value:  Size  Location     Type
  6412 ;;                  4   45[BANK0 ] long 
  6413 ;; Registers used:
  6414 ;;		wreg, status,2, status,0
  6415 ;; Tracked objects:
  6416 ;;		On entry : 0/0
  6417 ;;		On exit  : 0/0
  6418 ;;		Unchanged: 0/0
  6419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6420 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6421 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6422 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6423 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6424 ;;Total ram usage:       11 bytes
  6425 ;; Hardware stack levels used:    1
  6426 ;; Hardware stack levels required when called:    5
  6427 ;; This function calls:
  6428 ;;		Nothing
  6429 ;; This function is called by:
  6430 ;;		_main
  6431 ;;		_trunc
  6432 ;; This function uses a non-reentrant model
  6433 ;;
  6434                           
  6435                           
  6436                           ;psect for function ___fltol
  6437  1366                     ___fltol:	
  6438                           
  6439                           ;incstack = 0
  6440                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6441  1366  1003               	clrc
  6442  1367  0140               	movlb	0	; select bank0
  6443  1368  0D4F               	rlf	___fltol@f1+2,w
  6444  1369  0D50               	rlf	___fltol@f1+3,w
  6445  136A  00D1               	movwf	??___fltol
  6446  136B  0851               	movf	??___fltol,w
  6447  136C  00D7               	movwf	___fltol@exp1
  6448  136D  0857               	movf	___fltol@exp1,w
  6449  136E  1D03               	btfss	3,2
  6450  136F  2B79               	goto	l4020
  6451  1370                     l4016:	
  6452  1370  3000               	movlw	0
  6453  1371  00D0               	movwf	?___fltol+3
  6454  1372  3000               	movlw	0
  6455  1373  00CF               	movwf	?___fltol+2
  6456  1374  3000               	movlw	0
  6457  1375  00CE               	movwf	?___fltol+1
  6458  1376  3000               	movlw	0
  6459  1377  00CD               	movwf	?___fltol
  6460  1378  0008               	return
  6461  1379                     l4020:	
  6462  1379  084D               	movf	___fltol@f1,w
  6463  137A  00D1               	movwf	??___fltol
  6464  137B  084E               	movf	___fltol@f1+1,w
  6465  137C  00D2               	movwf	??___fltol+1
  6466  137D  084F               	movf	___fltol@f1+2,w
  6467  137E  00D3               	movwf	??___fltol+2
  6468  137F  0850               	movf	___fltol@f1+3,w
  6469  1380  00D4               	movwf	??___fltol+3
  6470  1381  301F               	movlw	31
  6471  1382                     u4135:	
  6472  1382  36D4               	lsrf	??___fltol+3,f
  6473  1383  0CD3               	rrf	??___fltol+2,f
  6474  1384  0CD2               	rrf	??___fltol+1,f
  6475  1385  0CD1               	rrf	??___fltol,f
  6476  1386  0B89               	decfsz	9,f
  6477  1387  2B82               	goto	u4135
  6478  1388  0851               	movf	??___fltol,w
  6479  1389  00D5               	movwf	??___fltol+4
  6480  138A  0855               	movf	??___fltol+4,w
  6481  138B  00D6               	movwf	___fltol@sign1
  6482  138C  17CF               	bsf	___fltol@f1+2,7
  6483  138D  30FF               	movlw	255
  6484  138E  05CD               	andwf	___fltol@f1,f
  6485  138F  30FF               	movlw	255
  6486  1390  05CE               	andwf	___fltol@f1+1,f
  6487  1391  30FF               	movlw	255
  6488  1392  05CF               	andwf	___fltol@f1+2,f
  6489  1393  3000               	movlw	0
  6490  1394  05D0               	andwf	___fltol@f1+3,f
  6491  1395  3096               	movlw	150
  6492  1396  02D7               	subwf	___fltol@exp1,f
  6493  1397  1FD7               	btfss	___fltol@exp1,7
  6494  1398  2BAC               	goto	l4038
  6495  1399  0857               	movf	___fltol@exp1,w
  6496  139A  3A80               	xorlw	128
  6497  139B  3E97               	addlw	151
  6498  139C  1C03               	btfss	3,0
  6499  139D  2B70               	goto	l4016
  6500  139E                     l4036:	
  6501  139E  3001               	movlw	1
  6502  139F                     u4165:	
  6503  139F  36D0               	lsrf	___fltol@f1+3,f
  6504  13A0  0CCF               	rrf	___fltol@f1+2,f
  6505  13A1  0CCE               	rrf	___fltol@f1+1,f
  6506  13A2  0CCD               	rrf	___fltol@f1,f
  6507  13A3  0B89               	decfsz	9,f
  6508  13A4  2B9F               	goto	u4165
  6509  13A5  3001               	movlw	1
  6510  13A6  00D1               	movwf	??___fltol
  6511  13A7  0851               	movf	??___fltol,w
  6512  13A8  07D7               	addwf	___fltol@exp1,f
  6513  13A9  1903               	btfsc	3,2
  6514  13AA  2BBD               	goto	l4046
  6515  13AB  2B9E               	goto	l4036
  6516  13AC                     l4038:	
  6517  13AC  3020               	movlw	32
  6518  13AD  0257               	subwf	___fltol@exp1,w
  6519  13AE  1803               	btfsc	3,0
  6520  13AF  2B70               	goto	l4016
  6521  13B0                     l1062:	
  6522  13B0  0857               	movf	___fltol@exp1,w
  6523  13B1  1903               	btfsc	3,2
  6524  13B2  2BBD               	goto	l4046
  6525  13B3  3001               	movlw	1
  6526  13B4                     u4195:	
  6527  13B4  35CD               	lslf	___fltol@f1,f
  6528  13B5  0DCE               	rlf	___fltol@f1+1,f
  6529  13B6  0DCF               	rlf	___fltol@f1+2,f
  6530  13B7  0DD0               	rlf	___fltol@f1+3,f
  6531  13B8  0B89               	decfsz	9,f
  6532  13B9  2BB4               	goto	u4195
  6533  13BA  3001               	movlw	1
  6534  13BB  02D7               	subwf	___fltol@exp1,f
  6535  13BC  2BB0               	goto	l1062
  6536  13BD                     l4046:	
  6537  13BD  0856               	movf	___fltol@sign1,w
  6538  13BE  1903               	btfsc	3,2
  6539  13BF  0008               	return
  6540  13C0  09CD               	comf	___fltol@f1,f
  6541  13C1  09CE               	comf	___fltol@f1+1,f
  6542  13C2  09CF               	comf	___fltol@f1+2,f
  6543  13C3  09D0               	comf	___fltol@f1+3,f
  6544  13C4  0ACD               	incf	___fltol@f1,f
  6545  13C5  1903               	skipnz
  6546  13C6  0ACE               	incf	___fltol@f1+1,f
  6547  13C7  1903               	skipnz
  6548  13C8  0ACF               	incf	___fltol@f1+2,f
  6549  13C9  1903               	skipnz
  6550  13CA  0AD0               	incf	___fltol@f1+3,f
  6551  13CB  0008               	return
  6552  13CC                     __end_of___fltol:	
  6553                           
  6554                           	psect	text4
  6555  1F23                     __ptext4:	
  6556 ;; *************** function ___flsub *****************
  6557 ;; Defined at:
  6558 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  6559 ;; Parameters:    Size  Location     Type
  6560 ;;  a               4   12[BANK1 ] long 
  6561 ;;  b               4   16[BANK1 ] long 
  6562 ;; Auto vars:     Size  Location     Type
  6563 ;;		None
  6564 ;; Return value:  Size  Location     Type
  6565 ;;                  4   12[BANK1 ] long 
  6566 ;; Registers used:
  6567 ;;		wreg, status,2, status,0, pclath, cstack
  6568 ;; Tracked objects:
  6569 ;;		On entry : 0/0
  6570 ;;		On exit  : 0/0
  6571 ;;		Unchanged: 0/0
  6572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6573 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6576 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6577 ;;Total ram usage:        8 bytes
  6578 ;; Hardware stack levels used:    1
  6579 ;; Hardware stack levels required when called:    6
  6580 ;; This function calls:
  6581 ;;		___fladd
  6582 ;; This function is called by:
  6583 ;;		_main
  6584 ;;		_round
  6585 ;; This function uses a non-reentrant model
  6586 ;;
  6587                           
  6588                           
  6589                           ;psect for function ___flsub
  6590  1F23                     ___flsub:	
  6591                           
  6592                           ;incstack = 0
  6593                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  6594  1F23  3080               	movlw	128
  6595  1F24  0141               	movlb	1	; select bank1
  6596  1F25  06AF               	xorwf	(___flsub@a+3)^(0+128),f
  6597  1F26  0833               	movf	(___flsub@b+3)^(0+128),w
  6598  1F27  0140               	movlb	0	; select bank0
  6599  1F28  00EA               	movwf	___fladd@b+3
  6600  1F29  0141               	movlb	1	; select bank1
  6601  1F2A  0832               	movf	(___flsub@b+2)^(0+128),w
  6602  1F2B  0140               	movlb	0	; select bank0
  6603  1F2C  00E9               	movwf	___fladd@b+2
  6604  1F2D  0141               	movlb	1	; select bank1
  6605  1F2E  0831               	movf	(___flsub@b+1)^(0+128),w
  6606  1F2F  0140               	movlb	0	; select bank0
  6607  1F30  00E8               	movwf	___fladd@b+1
  6608  1F31  0141               	movlb	1	; select bank1
  6609  1F32  0830               	movf	___flsub@b^(0+128),w
  6610  1F33  0140               	movlb	0	; select bank0
  6611  1F34  00E7               	movwf	___fladd@b
  6612  1F35  0141               	movlb	1	; select bank1
  6613  1F36  082F               	movf	(___flsub@a+3)^(0+128),w
  6614  1F37  0140               	movlb	0	; select bank0
  6615  1F38  00EE               	movwf	___fladd@a+3
  6616  1F39  0141               	movlb	1	; select bank1
  6617  1F3A  082E               	movf	(___flsub@a+2)^(0+128),w
  6618  1F3B  0140               	movlb	0	; select bank0
  6619  1F3C  00ED               	movwf	___fladd@a+2
  6620  1F3D  0141               	movlb	1	; select bank1
  6621  1F3E  082D               	movf	(___flsub@a+1)^(0+128),w
  6622  1F3F  0140               	movlb	0	; select bank0
  6623  1F40  00EC               	movwf	___fladd@a+1
  6624  1F41  0141               	movlb	1	; select bank1
  6625  1F42  082C               	movf	___flsub@a^(0+128),w
  6626  1F43  0140               	movlb	0	; select bank0
  6627  1F44  00EB               	movwf	___fladd@a
  6628  1F45  318D  25A1         	fcall	___fladd
  6629  1F47  0140               	movlb	0	; select bank0
  6630  1F48  086A               	movf	?___fladd+3,w
  6631  1F49  0141               	movlb	1	; select bank1
  6632  1F4A  00AF               	movwf	(?___flsub+3)^(0+128)
  6633  1F4B  0140               	movlb	0	; select bank0
  6634  1F4C  0869               	movf	?___fladd+2,w
  6635  1F4D  0141               	movlb	1	; select bank1
  6636  1F4E  00AE               	movwf	(?___flsub+2)^(0+128)
  6637  1F4F  0140               	movlb	0	; select bank0
  6638  1F50  0868               	movf	?___fladd+1,w
  6639  1F51  0141               	movlb	1	; select bank1
  6640  1F52  00AD               	movwf	(?___flsub+1)^(0+128)
  6641  1F53  0140               	movlb	0	; select bank0
  6642  1F54  0867               	movf	?___fladd,w
  6643  1F55  0141               	movlb	1	; select bank1
  6644  1F56  00AC               	movwf	?___flsub^(0+128)
  6645  1F57  0008               	return
  6646  1F58                     __end_of___flsub:	
  6647                           
  6648                           	psect	text5
  6649  112A                     __ptext5:	
  6650 ;; *************** function _read_ntc_temp *****************
  6651 ;; Defined at:
  6652 ;;		line 141 in file "main.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;		None
  6655 ;; Auto vars:     Size  Location     Type
  6656 ;;  val             4   30[BANK0 ] unsigned long 
  6657 ;; Return value:  Size  Location     Type
  6658 ;;                  1    wreg      void 
  6659 ;; Registers used:
  6660 ;;		wreg, status,2, status,0, pclath, cstack
  6661 ;; Tracked objects:
  6662 ;;		On entry : 0/0
  6663 ;;		On exit  : 0/0
  6664 ;;		Unchanged: 0/0
  6665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6667 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6668 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6669 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6670 ;;Total ram usage:        8 bytes
  6671 ;; Hardware stack levels used:    1
  6672 ;; Hardware stack levels required when called:    6
  6673 ;; This function calls:
  6674 ;;		_ADC_GetConversion
  6675 ;;		___lldiv
  6676 ;;		___lmul
  6677 ;; This function is called by:
  6678 ;;		_main
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682                           
  6683                           ;psect for function _read_ntc_temp
  6684  112A                     _read_ntc_temp:	
  6685                           
  6686                           ;main.c: 142: uint32_t val;;main.c: 145: val = ADC_GetConversion(TEMP);
  6687                           
  6688                           ;incstack = 0
  6689                           ; Regs used in _read_ntc_temp: [wreg+status,2+status,0+pclath+cstack]
  6690  112A  3006               	movlw	6
  6691  112B  3190  2000  3191   	fcall	_ADC_GetConversion
  6692  112E  0140               	movlb	0	; select bank0
  6693  112F  0820               	movf	?_ADC_GetConversion,w
  6694  1130  00BE               	movwf	read_ntc_temp@val
  6695  1131  0821               	movf	?_ADC_GetConversion+1,w
  6696  1132  00BF               	movwf	read_ntc_temp@val+1
  6697  1133  01C0               	clrf	read_ntc_temp@val+2
  6698  1134  01C1               	clrf	read_ntc_temp@val+3
  6699                           
  6700                           ;main.c: 146: ntc_temp = (uint16_t)(((val * 119) - 34511) / 100);
  6701  1135  3000               	movlw	0
  6702  1136  00AF               	movwf	___lldiv@divisor+3
  6703  1137  3000               	movlw	0
  6704  1138  00AE               	movwf	___lldiv@divisor+2
  6705  1139  3000               	movlw	0
  6706  113A  00AD               	movwf	___lldiv@divisor+1
  6707  113B  3064               	movlw	100
  6708  113C  00AC               	movwf	___lldiv@divisor
  6709  113D  3031               	movlw	49
  6710  113E  00BA               	movwf	??_read_ntc_temp
  6711  113F  3079               	movlw	121
  6712  1140  00BB               	movwf	??_read_ntc_temp+1
  6713  1141  30FF               	movlw	255
  6714  1142  00BC               	movwf	??_read_ntc_temp+2
  6715  1143  30FF               	movlw	255
  6716  1144  00BD               	movwf	??_read_ntc_temp+3
  6717  1145  0841               	movf	read_ntc_temp@val+3,w
  6718  1146  00A3               	movwf	___lmul@multiplier+3
  6719  1147  0840               	movf	read_ntc_temp@val+2,w
  6720  1148  00A2               	movwf	___lmul@multiplier+2
  6721  1149  083F               	movf	read_ntc_temp@val+1,w
  6722  114A  00A1               	movwf	___lmul@multiplier+1
  6723  114B  083E               	movf	read_ntc_temp@val,w
  6724  114C  00A0               	movwf	___lmul@multiplier
  6725  114D  3000               	movlw	0
  6726  114E  00A7               	movwf	___lmul@multiplicand+3
  6727  114F  3000               	movlw	0
  6728  1150  00A6               	movwf	___lmul@multiplicand+2
  6729  1151  3000               	movlw	0
  6730  1152  00A5               	movwf	___lmul@multiplicand+1
  6731  1153  3077               	movlw	119
  6732  1154  00A4               	movwf	___lmul@multiplicand
  6733  1155  319E  265A  3191   	fcall	___lmul
  6734  1158  0140               	movlb	0	; select bank0
  6735  1159  0820               	movf	?___lmul,w
  6736  115A  07BA               	addwf	??_read_ntc_temp,f
  6737  115B  0821               	movf	?___lmul+1,w
  6738  115C  3DBB               	addwfc	??_read_ntc_temp+1,f
  6739  115D  0822               	movf	?___lmul+2,w
  6740  115E  3DBC               	addwfc	??_read_ntc_temp+2,f
  6741  115F  0823               	movf	?___lmul+3,w
  6742  1160  3DBD               	addwfc	??_read_ntc_temp+3,f
  6743  1161  083D               	movf	??_read_ntc_temp+3,w
  6744  1162  00B3               	movwf	___lldiv@dividend+3
  6745  1163  083C               	movf	??_read_ntc_temp+2,w
  6746  1164  00B2               	movwf	___lldiv@dividend+2
  6747  1165  083B               	movf	??_read_ntc_temp+1,w
  6748  1166  00B1               	movwf	___lldiv@dividend+1
  6749  1167  083A               	movf	??_read_ntc_temp,w
  6750  1168  00B0               	movwf	___lldiv@dividend
  6751  1169  3192  22B0         	fcall	___lldiv
  6752  116B  0140               	movlb	0	; select bank0
  6753  116C  082D               	movf	?___lldiv+1,w
  6754  116D  0142               	movlb	2	; select bank2
  6755  116E  00D8               	movwf	(_ntc_temp+1)^(0+256)
  6756  116F  0140               	movlb	0	; select bank0
  6757  1170  082C               	movf	?___lldiv,w
  6758  1171  0142               	movlb	2	; select bank2
  6759  1172  00D7               	movwf	_ntc_temp^(0+256)
  6760  1173  0008               	return
  6761  1174                     __end_of_read_ntc_temp:	
  6762                           
  6763                           	psect	text6
  6764  071A                     __ptext6:	
  6765 ;; *************** function _read_cur_volt *****************
  6766 ;; Defined at:
  6767 ;;		line 167 in file "main.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;		None
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;  volt            2   41[BANK0 ] unsigned int 
  6772 ;;  volt_min        2   38[BANK0 ] unsigned int 
  6773 ;;  i               1   40[BANK0 ] unsigned char 
  6774 ;; Return value:  Size  Location     Type
  6775 ;;                  1    wreg      void 
  6776 ;; Registers used:
  6777 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6778 ;; Tracked objects:
  6779 ;;		On entry : 0/0
  6780 ;;		On exit  : 0/0
  6781 ;;		Unchanged: 0/0
  6782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6784 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6785 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6786 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6787 ;;Total ram usage:        7 bytes
  6788 ;; Hardware stack levels used:    1
  6789 ;; Hardware stack levels required when called:    7
  6790 ;; This function calls:
  6791 ;;		___lldiv
  6792 ;;		___lmul
  6793 ;;		_get_battery_volt
  6794 ;;		_get_current
  6795 ;; This function is called by:
  6796 ;;		_main
  6797 ;; This function uses a non-reentrant model
  6798 ;;
  6799                           
  6800                           
  6801                           ;psect for function _read_cur_volt
  6802  071A                     _read_cur_volt:	
  6803                           
  6804                           ;main.c: 168: uint8_t i;;main.c: 169: uint16_t volt, volt_min;;main.c: 172: LATAbits.LAT
      +                          A0 = 1;
  6805                           
  6806                           ;incstack = 0
  6807                           ; Regs used in _read_cur_volt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6808  071A  0140               	movlb	0	; select bank0
  6809  071B  1418               	bsf	24,0	;volatile
  6810                           
  6811                           ;main.c: 173: current[0] = get_current();
  6812  071C  319F  2758  3187   	fcall	_get_current
  6813  071F  0140               	movlb	0	; select bank0
  6814  0720  083B               	movf	?_get_current+1,w
  6815  0721  0143               	movlb	3	; select bank3
  6816  0722  00A1               	movwf	(_current+1)^(0+384)
  6817  0723  0140               	movlb	0	; select bank0
  6818  0724  083A               	movf	?_get_current,w
  6819  0725  0143               	movlb	3	; select bank3
  6820  0726  00A0               	movwf	_current^(0+384)
  6821                           
  6822                           ;main.c: 175: volt_min = get_battery_volt();
  6823  0727  319E  26BC  3187   	fcall	_get_battery_volt
  6824  072A  0140               	movlb	0	; select bank0
  6825  072B  083B               	movf	?_get_battery_volt+1,w
  6826  072C  00C7               	movwf	read_cur_volt@volt_min+1
  6827  072D  083A               	movf	?_get_battery_volt,w
  6828  072E  00C6               	movwf	read_cur_volt@volt_min
  6829                           
  6830                           ;main.c: 176: LATAbits.LATA0 = 0;
  6831  072F  1018               	bcf	24,0	;volatile
  6832                           
  6833                           ;main.c: 179: LATAbits.LATA1 = 1;
  6834  0730  1498               	bsf	24,1	;volatile
  6835                           
  6836                           ;main.c: 180: current[1] = get_current();
  6837  0731  319F  2758  3187   	fcall	_get_current
  6838  0734  0140               	movlb	0	; select bank0
  6839  0735  083B               	movf	?_get_current+1,w
  6840  0736  0143               	movlb	3	; select bank3
  6841  0737  00A3               	movwf	((_current+1)^(0+384)+2)
  6842  0738  0140               	movlb	0	; select bank0
  6843  0739  083A               	movf	?_get_current,w
  6844  073A  0143               	movlb	3	; select bank3
  6845  073B  00A2               	movwf	(_current^(0+384)+2)
  6846                           
  6847                           ;main.c: 182: volt = get_battery_volt();
  6848  073C  319E  26BC  3187   	fcall	_get_battery_volt
  6849  073F  0140               	movlb	0	; select bank0
  6850  0740  083B               	movf	?_get_battery_volt+1,w
  6851  0741  00CA               	movwf	read_cur_volt@volt+1
  6852  0742  083A               	movf	?_get_battery_volt,w
  6853  0743  00C9               	movwf	read_cur_volt@volt
  6854                           
  6855                           ;main.c: 183: if (volt < volt_min) volt_min = volt;
  6856  0744  0847               	movf	read_cur_volt@volt_min+1,w
  6857  0745  024A               	subwf	read_cur_volt@volt+1,w
  6858  0746  1D03               	skipz
  6859  0747  2F4A               	goto	u5145
  6860  0748  0846               	movf	read_cur_volt@volt_min,w
  6861  0749  0249               	subwf	read_cur_volt@volt,w
  6862  074A                     u5145:	
  6863  074A  1803               	skipnc
  6864  074B  2F50               	goto	l4730
  6865  074C  084A               	movf	read_cur_volt@volt+1,w
  6866  074D  00C7               	movwf	read_cur_volt@volt_min+1
  6867  074E  0849               	movf	read_cur_volt@volt,w
  6868  074F  00C6               	movwf	read_cur_volt@volt_min
  6869  0750                     l4730:	
  6870                           
  6871                           ;main.c: 184: LATAbits.LATA1 = 0;
  6872  0750  1098               	bcf	24,1	;volatile
  6873                           
  6874                           ;main.c: 187: LATAbits.LATA2 = 1;
  6875  0751  1518               	bsf	24,2	;volatile
  6876                           
  6877                           ;main.c: 188: current[2] = get_current();
  6878  0752  319F  2758  3187   	fcall	_get_current
  6879  0755  0140               	movlb	0	; select bank0
  6880  0756  083B               	movf	?_get_current+1,w
  6881  0757  0143               	movlb	3	; select bank3
  6882  0758  00A5               	movwf	((_current+1)^(0+384)+4)
  6883  0759  0140               	movlb	0	; select bank0
  6884  075A  083A               	movf	?_get_current,w
  6885  075B  0143               	movlb	3	; select bank3
  6886  075C  00A4               	movwf	(_current^(0+384)+4)
  6887                           
  6888                           ;main.c: 190: volt = get_battery_volt();
  6889  075D  319E  26BC  3187   	fcall	_get_battery_volt
  6890  0760  0140               	movlb	0	; select bank0
  6891  0761  083B               	movf	?_get_battery_volt+1,w
  6892  0762  00CA               	movwf	read_cur_volt@volt+1
  6893  0763  083A               	movf	?_get_battery_volt,w
  6894  0764  00C9               	movwf	read_cur_volt@volt
  6895                           
  6896                           ;main.c: 191: if (volt < volt_min) volt_min = volt;
  6897  0765  0847               	movf	read_cur_volt@volt_min+1,w
  6898  0766  024A               	subwf	read_cur_volt@volt+1,w
  6899  0767  1D03               	skipz
  6900  0768  2F6B               	goto	u5155
  6901  0769  0846               	movf	read_cur_volt@volt_min,w
  6902  076A  0249               	subwf	read_cur_volt@volt,w
  6903  076B                     u5155:	
  6904  076B  1803               	skipnc
  6905  076C  2F71               	goto	l4740
  6906  076D  084A               	movf	read_cur_volt@volt+1,w
  6907  076E  00C7               	movwf	read_cur_volt@volt_min+1
  6908  076F  0849               	movf	read_cur_volt@volt,w
  6909  0770  00C6               	movwf	read_cur_volt@volt_min
  6910  0771                     l4740:	
  6911                           
  6912                           ;main.c: 192: LATAbits.LATA2 = 0;
  6913  0771  1118               	bcf	24,2	;volatile
  6914                           
  6915                           ;main.c: 195: LATAbits.LATA3 = 1;
  6916  0772  1598               	bsf	24,3	;volatile
  6917                           
  6918                           ;main.c: 196: current[3] = get_current();
  6919  0773  319F  2758  3187   	fcall	_get_current
  6920  0776  0140               	movlb	0	; select bank0
  6921  0777  083B               	movf	?_get_current+1,w
  6922  0778  0143               	movlb	3	; select bank3
  6923  0779  00A7               	movwf	((_current+1)^(0+384)+6)
  6924  077A  0140               	movlb	0	; select bank0
  6925  077B  083A               	movf	?_get_current,w
  6926  077C  0143               	movlb	3	; select bank3
  6927  077D  00A6               	movwf	(_current^(0+384)+6)
  6928                           
  6929                           ;main.c: 198: volt = get_battery_volt();
  6930  077E  319E  26BC  3187   	fcall	_get_battery_volt
  6931  0781  0140               	movlb	0	; select bank0
  6932  0782  083B               	movf	?_get_battery_volt+1,w
  6933  0783  00CA               	movwf	read_cur_volt@volt+1
  6934  0784  083A               	movf	?_get_battery_volt,w
  6935  0785  00C9               	movwf	read_cur_volt@volt
  6936                           
  6937                           ;main.c: 199: if (volt < volt_min) volt_min = volt;
  6938  0786  0847               	movf	read_cur_volt@volt_min+1,w
  6939  0787  024A               	subwf	read_cur_volt@volt+1,w
  6940  0788  1D03               	skipz
  6941  0789  2F8C               	goto	u5165
  6942  078A  0846               	movf	read_cur_volt@volt_min,w
  6943  078B  0249               	subwf	read_cur_volt@volt,w
  6944  078C                     u5165:	
  6945  078C  1803               	skipnc
  6946  078D  2F92               	goto	l4750
  6947  078E  084A               	movf	read_cur_volt@volt+1,w
  6948  078F  00C7               	movwf	read_cur_volt@volt_min+1
  6949  0790  0849               	movf	read_cur_volt@volt,w
  6950  0791  00C6               	movwf	read_cur_volt@volt_min
  6951  0792                     l4750:	
  6952                           
  6953                           ;main.c: 200: LATAbits.LATA3 = 0;
  6954  0792  1198               	bcf	24,3	;volatile
  6955                           
  6956                           ;main.c: 203: voltage = volt_min;
  6957  0793  0847               	movf	read_cur_volt@volt_min+1,w
  6958  0794  0142               	movlb	2	; select bank2
  6959  0795  00DA               	movwf	(_voltage+1)^(0+256)
  6960  0796  0140               	movlb	0	; select bank0
  6961  0797  0846               	movf	read_cur_volt@volt_min,w
  6962  0798  0142               	movlb	2	; select bank2
  6963  0799  00D9               	movwf	_voltage^(0+256)
  6964                           
  6965                           ;main.c: 206: total_power = 0;
  6966  079A  01D5               	clrf	_total_power^(0+256)
  6967  079B  01D6               	clrf	(_total_power+1)^(0+256)
  6968                           
  6969                           ;main.c: 207: for(i=0;i<4;i++) {
  6970  079C  0140               	movlb	0	; select bank0
  6971  079D  01C8               	clrf	read_cur_volt@i
  6972  079E                     l4758:	
  6973                           
  6974                           ;main.c: 208: power[i] = volt * (uint32_t)current[i] / (uint32_t)1000;
  6975  079E  3000               	movlw	0
  6976  079F  00AF               	movwf	___lldiv@divisor+3
  6977  07A0  3000               	movlw	0
  6978  07A1  00AE               	movwf	___lldiv@divisor+2
  6979  07A2  3003               	movlw	3
  6980  07A3  00AD               	movwf	___lldiv@divisor+1
  6981  07A4  30E8               	movlw	232
  6982  07A5  00AC               	movwf	___lldiv@divisor
  6983  07A6  0849               	movf	read_cur_volt@volt,w
  6984  07A7  00A0               	movwf	___lmul@multiplier
  6985  07A8  084A               	movf	read_cur_volt@volt+1,w
  6986  07A9  00A1               	movwf	___lmul@multiplier+1
  6987  07AA  01A2               	clrf	___lmul@multiplier+2
  6988  07AB  01A3               	clrf	___lmul@multiplier+3
  6989  07AC  3548               	lslf	read_cur_volt@i,w
  6990  07AD  3EA0               	addlw	(low (_current| (0+256)))& (0+255)
  6991  07AE  0086               	movwf	6
  6992  07AF  3001               	movlw	1	; select bank3/4
  6993  07B0  0087               	movwf	7
  6994  07B1  3F40               	moviw [0]fsr1
  6995  07B2  00C4               	movwf	??_read_cur_volt
  6996  07B3  3F41               	moviw [1]fsr1
  6997  07B4  00C5               	movwf	??_read_cur_volt+1
  6998  07B5  0844               	movf	??_read_cur_volt,w
  6999  07B6  00A4               	movwf	___lmul@multiplicand
  7000  07B7  0845               	movf	??_read_cur_volt+1,w
  7001  07B8  00A5               	movwf	___lmul@multiplicand+1
  7002  07B9  01A6               	clrf	___lmul@multiplicand+2
  7003  07BA  01A7               	clrf	___lmul@multiplicand+3
  7004  07BB  319E  265A  3187   	fcall	___lmul
  7005  07BE  0140               	movlb	0	; select bank0
  7006  07BF  0823               	movf	?___lmul+3,w
  7007  07C0  00B3               	movwf	___lldiv@dividend+3
  7008  07C1  0822               	movf	?___lmul+2,w
  7009  07C2  00B2               	movwf	___lldiv@dividend+2
  7010  07C3  0821               	movf	?___lmul+1,w
  7011  07C4  00B1               	movwf	___lldiv@dividend+1
  7012  07C5  0820               	movf	?___lmul,w
  7013  07C6  00B0               	movwf	___lldiv@dividend
  7014  07C7  3192  22B0  3187   	fcall	___lldiv
  7015  07CA  0140               	movlb	0	; select bank0
  7016  07CB  3548               	lslf	read_cur_volt@i,w
  7017  07CC  3E47               	addlw	(low (_power| (0+256)))& (0+255)
  7018  07CD  0086               	movwf	6
  7019  07CE  3001               	movlw	1	; select bank2/3
  7020  07CF  0087               	movwf	7
  7021  07D0  082C               	movf	?___lldiv,w
  7022  07D1  3FC0               	movwi [0]fsr1
  7023  07D2  082D               	movf	?___lldiv+1,w
  7024  07D3  3FC1               	movwi [1]fsr1
  7025                           
  7026                           ;main.c: 209: total_power += power[i];
  7027  07D4  3548               	lslf	read_cur_volt@i,w
  7028  07D5  3E47               	addlw	(low (_power| (0+256)))& (0+255)
  7029  07D6  0086               	movwf	6
  7030  07D7  3001               	movlw	1	; select bank2/3
  7031  07D8  0087               	movwf	7
  7032  07D9  3F40               	moviw [0]fsr1
  7033  07DA  00C4               	movwf	??_read_cur_volt
  7034  07DB  3F41               	moviw [1]fsr1
  7035  07DC  00C5               	movwf	??_read_cur_volt+1
  7036  07DD  0844               	movf	??_read_cur_volt,w
  7037  07DE  0142               	movlb	2	; select bank2
  7038  07DF  07D5               	addwf	_total_power^(0+256),f
  7039  07E0  0140               	movlb	0	; select bank0
  7040  07E1  0845               	movf	??_read_cur_volt+1,w
  7041  07E2  0142               	movlb	2	; select bank2
  7042  07E3  3DD6               	addwfc	(_total_power+1)^(0+256),f
  7043  07E4  3001               	movlw	1
  7044  07E5  0140               	movlb	0	; select bank0
  7045  07E6  00C4               	movwf	??_read_cur_volt
  7046  07E7  0844               	movf	??_read_cur_volt,w
  7047  07E8  07C8               	addwf	read_cur_volt@i,f
  7048  07E9  3004               	movlw	4
  7049  07EA  0248               	subwf	read_cur_volt@i,w
  7050  07EB  1803               	btfsc	3,0
  7051  07EC  0008               	return
  7052  07ED  2F9E               	goto	l4758
  7053  07EE                     __end_of_read_cur_volt:	
  7054                           
  7055                           	psect	text7
  7056  1F58                     __ptext7:	
  7057 ;; *************** function _get_current *****************
  7058 ;; Defined at:
  7059 ;;		line 160 in file "main.c"
  7060 ;; Parameters:    Size  Location     Type
  7061 ;;		None
  7062 ;; Auto vars:     Size  Location     Type
  7063 ;;  val             4   28[BANK0 ] unsigned long 
  7064 ;; Return value:  Size  Location     Type
  7065 ;;                  2   26[BANK0 ] unsigned int 
  7066 ;; Registers used:
  7067 ;;		wreg, status,2, status,0, pclath, cstack
  7068 ;; Tracked objects:
  7069 ;;		On entry : 0/0
  7070 ;;		On exit  : 0/0
  7071 ;;		Unchanged: 0/0
  7072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7073 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7074 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7076 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7077 ;;Total ram usage:        6 bytes
  7078 ;; Hardware stack levels used:    1
  7079 ;; Hardware stack levels required when called:    6
  7080 ;; This function calls:
  7081 ;;		_ADC_GetConversion
  7082 ;;		___lldiv
  7083 ;;		___lmul
  7084 ;; This function is called by:
  7085 ;;		_read_cur_volt
  7086 ;; This function uses a non-reentrant model
  7087 ;;
  7088                           
  7089                           
  7090                           ;psect for function _get_current
  7091  1F58                     _get_current:	
  7092                           
  7093                           ;main.c: 161: uint32_t val;;main.c: 162: val = ADC_GetConversion(ISENS);
  7094                           
  7095                           ;incstack = 0
  7096                           ; Regs used in _get_current: [wreg+status,2+status,0+pclath+cstack]
  7097  1F58  3011               	movlw	17
  7098  1F59  3190  2000  319F   	fcall	_ADC_GetConversion
  7099  1F5C  0140               	movlb	0	; select bank0
  7100  1F5D  0820               	movf	?_ADC_GetConversion,w
  7101  1F5E  00BC               	movwf	get_current@val
  7102  1F5F  0821               	movf	?_ADC_GetConversion+1,w
  7103  1F60  00BD               	movwf	get_current@val+1
  7104  1F61  01BE               	clrf	get_current@val+2
  7105  1F62  01BF               	clrf	get_current@val+3
  7106                           
  7107                           ;main.c: 163: return (uint16_t)((val * 1955) / 1000);
  7108  1F63  3000               	movlw	0
  7109  1F64  00AF               	movwf	___lldiv@divisor+3
  7110  1F65  3000               	movlw	0
  7111  1F66  00AE               	movwf	___lldiv@divisor+2
  7112  1F67  3003               	movlw	3
  7113  1F68  00AD               	movwf	___lldiv@divisor+1
  7114  1F69  30E8               	movlw	232
  7115  1F6A  00AC               	movwf	___lldiv@divisor
  7116  1F6B  083F               	movf	get_current@val+3,w
  7117  1F6C  00A3               	movwf	___lmul@multiplier+3
  7118  1F6D  083E               	movf	get_current@val+2,w
  7119  1F6E  00A2               	movwf	___lmul@multiplier+2
  7120  1F6F  083D               	movf	get_current@val+1,w
  7121  1F70  00A1               	movwf	___lmul@multiplier+1
  7122  1F71  083C               	movf	get_current@val,w
  7123  1F72  00A0               	movwf	___lmul@multiplier
  7124  1F73  3000               	movlw	0
  7125  1F74  00A7               	movwf	___lmul@multiplicand+3
  7126  1F75  3000               	movlw	0
  7127  1F76  00A6               	movwf	___lmul@multiplicand+2
  7128  1F77  3007               	movlw	7
  7129  1F78  00A5               	movwf	___lmul@multiplicand+1
  7130  1F79  30A3               	movlw	163
  7131  1F7A  00A4               	movwf	___lmul@multiplicand
  7132  1F7B  319E  265A  319F   	fcall	___lmul
  7133  1F7E  0140               	movlb	0	; select bank0
  7134  1F7F  0823               	movf	?___lmul+3,w
  7135  1F80  00B3               	movwf	___lldiv@dividend+3
  7136  1F81  0822               	movf	?___lmul+2,w
  7137  1F82  00B2               	movwf	___lldiv@dividend+2
  7138  1F83  0821               	movf	?___lmul+1,w
  7139  1F84  00B1               	movwf	___lldiv@dividend+1
  7140  1F85  0820               	movf	?___lmul,w
  7141  1F86  00B0               	movwf	___lldiv@dividend
  7142  1F87  3192  22B0         	fcall	___lldiv
  7143  1F89  0140               	movlb	0	; select bank0
  7144  1F8A  082D               	movf	?___lldiv+1,w
  7145  1F8B  00BB               	movwf	?_get_current+1
  7146  1F8C  082C               	movf	?___lldiv,w
  7147  1F8D  00BA               	movwf	?_get_current
  7148  1F8E  0008               	return
  7149  1F8F                     __end_of_get_current:	
  7150                           
  7151                           	psect	text8
  7152  1E5A                     __ptext8:	
  7153 ;; *************** function ___lmul *****************
  7154 ;; Defined at:
  7155 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul32.c"
  7156 ;; Parameters:    Size  Location     Type
  7157 ;;  multiplier      4    0[BANK0 ] unsigned long 
  7158 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  7159 ;; Auto vars:     Size  Location     Type
  7160 ;;  product         4    8[BANK0 ] unsigned long 
  7161 ;; Return value:  Size  Location     Type
  7162 ;;                  4    0[BANK0 ] unsigned long 
  7163 ;; Registers used:
  7164 ;;		wreg, status,2, status,0
  7165 ;; Tracked objects:
  7166 ;;		On entry : 0/0
  7167 ;;		On exit  : 0/0
  7168 ;;		Unchanged: 0/0
  7169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7170 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7171 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7173 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7174 ;;Total ram usage:       12 bytes
  7175 ;; Hardware stack levels used:    1
  7176 ;; Hardware stack levels required when called:    5
  7177 ;; This function calls:
  7178 ;;		Nothing
  7179 ;; This function is called by:
  7180 ;;		_read_ntc_temp
  7181 ;;		_get_current
  7182 ;;		_read_cur_volt
  7183 ;; This function uses a non-reentrant model
  7184 ;;
  7185                           
  7186                           
  7187                           ;psect for function ___lmul
  7188  1E5A                     ___lmul:	
  7189                           
  7190                           ;incstack = 0
  7191                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  7192  1E5A  3000               	movlw	0
  7193  1E5B  0140               	movlb	0	; select bank0
  7194  1E5C  00AB               	movwf	___lmul@product+3
  7195  1E5D  3000               	movlw	0
  7196  1E5E  00AA               	movwf	___lmul@product+2
  7197  1E5F  3000               	movlw	0
  7198  1E60  00A9               	movwf	___lmul@product+1
  7199  1E61  3000               	movlw	0
  7200  1E62  00A8               	movwf	___lmul@product
  7201  1E63                     l3958:	
  7202  1E63  1C20               	btfss	___lmul@multiplier,0
  7203  1E64  2E6D               	goto	l3962
  7204  1E65  0824               	movf	___lmul@multiplicand,w
  7205  1E66  07A8               	addwf	___lmul@product,f
  7206  1E67  0825               	movf	___lmul@multiplicand+1,w
  7207  1E68  3DA9               	addwfc	___lmul@product+1,f
  7208  1E69  0826               	movf	___lmul@multiplicand+2,w
  7209  1E6A  3DAA               	addwfc	___lmul@product+2,f
  7210  1E6B  0827               	movf	___lmul@multiplicand+3,w
  7211  1E6C  3DAB               	addwfc	___lmul@product+3,f
  7212  1E6D                     l3962:	
  7213  1E6D  3001               	movlw	1
  7214  1E6E                     u3975:	
  7215  1E6E  35A4               	lslf	___lmul@multiplicand,f
  7216  1E6F  0DA5               	rlf	___lmul@multiplicand+1,f
  7217  1E70  0DA6               	rlf	___lmul@multiplicand+2,f
  7218  1E71  0DA7               	rlf	___lmul@multiplicand+3,f
  7219  1E72  0B89               	decfsz	9,f
  7220  1E73  2E6E               	goto	u3975
  7221  1E74  3001               	movlw	1
  7222  1E75                     u3985:	
  7223  1E75  36A3               	lsrf	___lmul@multiplier+3,f
  7224  1E76  0CA2               	rrf	___lmul@multiplier+2,f
  7225  1E77  0CA1               	rrf	___lmul@multiplier+1,f
  7226  1E78  0CA0               	rrf	___lmul@multiplier,f
  7227  1E79  0B89               	decfsz	9,f
  7228  1E7A  2E75               	goto	u3985
  7229  1E7B  0823               	movf	___lmul@multiplier+3,w
  7230  1E7C  0422               	iorwf	___lmul@multiplier+2,w
  7231  1E7D  0421               	iorwf	___lmul@multiplier+1,w
  7232  1E7E  0420               	iorwf	___lmul@multiplier,w
  7233  1E7F  1D03               	skipz
  7234  1E80  2E63               	goto	l3958
  7235  1E81  082B               	movf	___lmul@product+3,w
  7236  1E82  00A3               	movwf	?___lmul+3
  7237  1E83  082A               	movf	___lmul@product+2,w
  7238  1E84  00A2               	movwf	?___lmul+2
  7239  1E85  0829               	movf	___lmul@product+1,w
  7240  1E86  00A1               	movwf	?___lmul+1
  7241  1E87  0828               	movf	___lmul@product,w
  7242  1E88  00A0               	movwf	?___lmul
  7243  1E89  0008               	return
  7244  1E8A                     __end_of___lmul:	
  7245                           
  7246                           	psect	text9
  7247  1EBC                     __ptext9:	
  7248 ;; *************** function _get_battery_volt *****************
  7249 ;; Defined at:
  7250 ;;		line 154 in file "main.c"
  7251 ;; Parameters:    Size  Location     Type
  7252 ;;		None
  7253 ;; Auto vars:     Size  Location     Type
  7254 ;;  val             4   32[BANK0 ] unsigned long 
  7255 ;; Return value:  Size  Location     Type
  7256 ;;                  2   26[BANK0 ] unsigned int 
  7257 ;; Registers used:
  7258 ;;		wreg, status,2, status,0, pclath, cstack
  7259 ;; Tracked objects:
  7260 ;;		On entry : 0/0
  7261 ;;		On exit  : 0/0
  7262 ;;		Unchanged: 0/0
  7263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7264 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7265 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7266 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7267 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7268 ;;Total ram usage:       10 bytes
  7269 ;; Hardware stack levels used:    1
  7270 ;; Hardware stack levels required when called:    6
  7271 ;; This function calls:
  7272 ;;		_ADC_GetConversion
  7273 ;;		___lldiv
  7274 ;; This function is called by:
  7275 ;;		_read_cur_volt
  7276 ;; This function uses a non-reentrant model
  7277 ;;
  7278                           
  7279                           
  7280                           ;psect for function _get_battery_volt
  7281  1EBC                     _get_battery_volt:	
  7282                           
  7283                           ;main.c: 155: uint32_t val;;main.c: 156: val = ADC_GetConversion(VSENS);
  7284                           
  7285                           ;incstack = 0
  7286                           ; Regs used in _get_battery_volt: [wreg+status,2+status,0+pclath+cstack]
  7287  1EBC  3010               	movlw	16
  7288  1EBD  3190  2000  319E   	fcall	_ADC_GetConversion
  7289  1EC0  0140               	movlb	0	; select bank0
  7290  1EC1  0820               	movf	?_ADC_GetConversion,w
  7291  1EC2  00C0               	movwf	get_battery_volt@val
  7292  1EC3  0821               	movf	?_ADC_GetConversion+1,w
  7293  1EC4  00C1               	movwf	get_battery_volt@val+1
  7294  1EC5  01C2               	clrf	get_battery_volt@val+2
  7295  1EC6  01C3               	clrf	get_battery_volt@val+3
  7296                           
  7297                           ;main.c: 157: return (uint16_t)((val << 11) / 10000);
  7298  1EC7  3000               	movlw	0
  7299  1EC8  00AF               	movwf	___lldiv@divisor+3
  7300  1EC9  3000               	movlw	0
  7301  1ECA  00AE               	movwf	___lldiv@divisor+2
  7302  1ECB  3027               	movlw	39
  7303  1ECC  00AD               	movwf	___lldiv@divisor+1
  7304  1ECD  3010               	movlw	16
  7305  1ECE  00AC               	movwf	___lldiv@divisor
  7306  1ECF  0840               	movf	get_battery_volt@val,w
  7307  1ED0  00BC               	movwf	??_get_battery_volt
  7308  1ED1  0841               	movf	get_battery_volt@val+1,w
  7309  1ED2  00BD               	movwf	??_get_battery_volt+1
  7310  1ED3  0842               	movf	get_battery_volt@val+2,w
  7311  1ED4  00BE               	movwf	??_get_battery_volt+2
  7312  1ED5  0843               	movf	get_battery_volt@val+3,w
  7313  1ED6  00BF               	movwf	??_get_battery_volt+3
  7314  1ED7  300B               	movlw	11
  7315  1ED8                     u4585:	
  7316  1ED8  35BC               	lslf	??_get_battery_volt,f
  7317  1ED9  0DBD               	rlf	??_get_battery_volt+1,f
  7318  1EDA  0DBE               	rlf	??_get_battery_volt+2,f
  7319  1EDB  0DBF               	rlf	??_get_battery_volt+3,f
  7320  1EDC  0B89               	decfsz	9,f
  7321  1EDD  2ED8               	goto	u4585
  7322  1EDE  083F               	movf	??_get_battery_volt+3,w
  7323  1EDF  00B3               	movwf	___lldiv@dividend+3
  7324  1EE0  083E               	movf	??_get_battery_volt+2,w
  7325  1EE1  00B2               	movwf	___lldiv@dividend+2
  7326  1EE2  083D               	movf	??_get_battery_volt+1,w
  7327  1EE3  00B1               	movwf	___lldiv@dividend+1
  7328  1EE4  083C               	movf	??_get_battery_volt,w
  7329  1EE5  00B0               	movwf	___lldiv@dividend
  7330  1EE6  3192  22B0         	fcall	___lldiv
  7331  1EE8  0140               	movlb	0	; select bank0
  7332  1EE9  082D               	movf	?___lldiv+1,w
  7333  1EEA  00BB               	movwf	?_get_battery_volt+1
  7334  1EEB  082C               	movf	?___lldiv,w
  7335  1EEC  00BA               	movwf	?_get_battery_volt
  7336  1EED  0008               	return
  7337  1EEE                     __end_of_get_battery_volt:	
  7338                           
  7339                           	psect	text10
  7340  12B0                     __ptext10:	
  7341 ;; *************** function ___lldiv *****************
  7342 ;; Defined at:
  7343 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  7344 ;; Parameters:    Size  Location     Type
  7345 ;;  divisor         4   12[BANK0 ] unsigned long 
  7346 ;;  dividend        4   16[BANK0 ] unsigned long 
  7347 ;; Auto vars:     Size  Location     Type
  7348 ;;  quotient        4   21[BANK0 ] unsigned long 
  7349 ;;  counter         1   25[BANK0 ] unsigned char 
  7350 ;; Return value:  Size  Location     Type
  7351 ;;                  4   12[BANK0 ] unsigned long 
  7352 ;; Registers used:
  7353 ;;		wreg, status,2, status,0
  7354 ;; Tracked objects:
  7355 ;;		On entry : 0/0
  7356 ;;		On exit  : 0/0
  7357 ;;		Unchanged: 0/0
  7358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7359 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7360 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7361 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7362 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7363 ;;Total ram usage:       14 bytes
  7364 ;; Hardware stack levels used:    1
  7365 ;; Hardware stack levels required when called:    5
  7366 ;; This function calls:
  7367 ;;		Nothing
  7368 ;; This function is called by:
  7369 ;;		_read_ntc_temp
  7370 ;;		_get_battery_volt
  7371 ;;		_get_current
  7372 ;;		_read_cur_volt
  7373 ;; This function uses a non-reentrant model
  7374 ;;
  7375                           
  7376                           
  7377                           ;psect for function ___lldiv
  7378  12B0                     ___lldiv:	
  7379                           
  7380                           ;incstack = 0
  7381                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7382  12B0  3000               	movlw	0
  7383  12B1  0140               	movlb	0	; select bank0
  7384  12B2  00B8               	movwf	___lldiv@quotient+3
  7385  12B3  3000               	movlw	0
  7386  12B4  00B7               	movwf	___lldiv@quotient+2
  7387  12B5  3000               	movlw	0
  7388  12B6  00B6               	movwf	___lldiv@quotient+1
  7389  12B7  3000               	movlw	0
  7390  12B8  00B5               	movwf	___lldiv@quotient
  7391  12B9  082F               	movf	___lldiv@divisor+3,w
  7392  12BA  042E               	iorwf	___lldiv@divisor+2,w
  7393  12BB  042D               	iorwf	___lldiv@divisor+1,w
  7394  12BC  042C               	iorwf	___lldiv@divisor,w
  7395  12BD  1903               	skipnz
  7396  12BE  2AFA               	goto	l3990
  7397  12BF  01B9               	clrf	___lldiv@counter
  7398  12C0  0AB9               	incf	___lldiv@counter,f
  7399  12C1                     l3976:	
  7400  12C1  1BAF               	btfsc	___lldiv@divisor+3,7
  7401  12C2  2ACF               	goto	l3978
  7402  12C3  3001               	movlw	1
  7403  12C4                     u4015:	
  7404  12C4  35AC               	lslf	___lldiv@divisor,f
  7405  12C5  0DAD               	rlf	___lldiv@divisor+1,f
  7406  12C6  0DAE               	rlf	___lldiv@divisor+2,f
  7407  12C7  0DAF               	rlf	___lldiv@divisor+3,f
  7408  12C8  0B89               	decfsz	9,f
  7409  12C9  2AC4               	goto	u4015
  7410  12CA  3001               	movlw	1
  7411  12CB  00B4               	movwf	??___lldiv
  7412  12CC  0834               	movf	??___lldiv,w
  7413  12CD  07B9               	addwf	___lldiv@counter,f
  7414  12CE  2AC1               	goto	l3976
  7415  12CF                     l3978:	
  7416  12CF  3001               	movlw	1
  7417  12D0                     u4035:	
  7418  12D0  35B5               	lslf	___lldiv@quotient,f
  7419  12D1  0DB6               	rlf	___lldiv@quotient+1,f
  7420  12D2  0DB7               	rlf	___lldiv@quotient+2,f
  7421  12D3  0DB8               	rlf	___lldiv@quotient+3,f
  7422  12D4  0B89               	decfsz	9,f
  7423  12D5  2AD0               	goto	u4035
  7424  12D6  082F               	movf	___lldiv@divisor+3,w
  7425  12D7  0233               	subwf	___lldiv@dividend+3,w
  7426  12D8  1D03               	skipz
  7427  12D9  2AE4               	goto	u4045
  7428  12DA  082E               	movf	___lldiv@divisor+2,w
  7429  12DB  0232               	subwf	___lldiv@dividend+2,w
  7430  12DC  1D03               	skipz
  7431  12DD  2AE4               	goto	u4045
  7432  12DE  082D               	movf	___lldiv@divisor+1,w
  7433  12DF  0231               	subwf	___lldiv@dividend+1,w
  7434  12E0  1D03               	skipz
  7435  12E1  2AE4               	goto	u4045
  7436  12E2  082C               	movf	___lldiv@divisor,w
  7437  12E3  0230               	subwf	___lldiv@dividend,w
  7438  12E4                     u4045:	
  7439  12E4  1C03               	skipc
  7440  12E5  2AEF               	goto	l3986
  7441  12E6  082C               	movf	___lldiv@divisor,w
  7442  12E7  02B0               	subwf	___lldiv@dividend,f
  7443  12E8  082D               	movf	___lldiv@divisor+1,w
  7444  12E9  3BB1               	subwfb	___lldiv@dividend+1,f
  7445  12EA  082E               	movf	___lldiv@divisor+2,w
  7446  12EB  3BB2               	subwfb	___lldiv@dividend+2,f
  7447  12EC  082F               	movf	___lldiv@divisor+3,w
  7448  12ED  3BB3               	subwfb	___lldiv@dividend+3,f
  7449  12EE  1435               	bsf	___lldiv@quotient,0
  7450  12EF                     l3986:	
  7451  12EF  3001               	movlw	1
  7452  12F0                     u4055:	
  7453  12F0  36AF               	lsrf	___lldiv@divisor+3,f
  7454  12F1  0CAE               	rrf	___lldiv@divisor+2,f
  7455  12F2  0CAD               	rrf	___lldiv@divisor+1,f
  7456  12F3  0CAC               	rrf	___lldiv@divisor,f
  7457  12F4  0B89               	decfsz	9,f
  7458  12F5  2AF0               	goto	u4055
  7459  12F6  3001               	movlw	1
  7460  12F7  02B9               	subwf	___lldiv@counter,f
  7461  12F8  1D03               	btfss	3,2
  7462  12F9  2ACF               	goto	l3978
  7463  12FA                     l3990:	
  7464  12FA  0838               	movf	___lldiv@quotient+3,w
  7465  12FB  00AF               	movwf	?___lldiv+3
  7466  12FC  0837               	movf	___lldiv@quotient+2,w
  7467  12FD  00AE               	movwf	?___lldiv+2
  7468  12FE  0836               	movf	___lldiv@quotient+1,w
  7469  12FF  00AD               	movwf	?___lldiv+1
  7470  1300  0835               	movf	___lldiv@quotient,w
  7471  1301  00AC               	movwf	?___lldiv
  7472  1302  0008               	return
  7473  1303                     __end_of___lldiv:	
  7474                           
  7475                           	psect	text11
  7476  1000                     __ptext11:	
  7477 ;; *************** function _ADC_GetConversion *****************
  7478 ;; Defined at:
  7479 ;;		line 110 in file "mcc_generated_files/adc.c"
  7480 ;; Parameters:    Size  Location     Type
  7481 ;;  channel         1    wreg     enum E7178
  7482 ;; Auto vars:     Size  Location     Type
  7483 ;;  channel         1    3[BANK0 ] enum E7178
  7484 ;; Return value:  Size  Location     Type
  7485 ;;                  2    0[BANK0 ] unsigned int 
  7486 ;; Registers used:
  7487 ;;		wreg, status,2, status,0
  7488 ;; Tracked objects:
  7489 ;;		On entry : 0/0
  7490 ;;		On exit  : 0/0
  7491 ;;		Unchanged: 0/0
  7492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7493 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7494 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7495 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7496 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7497 ;;Total ram usage:        4 bytes
  7498 ;; Hardware stack levels used:    1
  7499 ;; Hardware stack levels required when called:    5
  7500 ;; This function calls:
  7501 ;;		Nothing
  7502 ;; This function is called by:
  7503 ;;		_read_ntc_temp
  7504 ;;		_get_battery_volt
  7505 ;;		_get_current
  7506 ;; This function uses a non-reentrant model
  7507 ;;
  7508                           
  7509                           
  7510                           ;psect for function _ADC_GetConversion
  7511  1000                     _ADC_GetConversion:	
  7512                           
  7513                           ;incstack = 0
  7514                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  7515                           ;ADC_GetConversion@channel stored from wreg
  7516  1000  0140               	movlb	0	; select bank0
  7517  1001  00A3               	movwf	ADC_GetConversion@channel
  7518                           
  7519                           ;adc.c: 113: ADCON0bits.CHS = channel;
  7520  1002  0823               	movf	ADC_GetConversion@channel,w
  7521  1003  00A2               	movwf	??_ADC_GetConversion
  7522  1004  0DA2               	rlf	??_ADC_GetConversion,f
  7523  1005  0DA2               	rlf	??_ADC_GetConversion,f
  7524  1006  0141               	movlb	1	; select bank1
  7525  1007  081D               	movf	29,w	;volatile
  7526  1008  0140               	movlb	0	; select bank0
  7527  1009  0622               	xorwf	??_ADC_GetConversion,w
  7528  100A  3903               	andlw	-253
  7529  100B  0622               	xorwf	??_ADC_GetConversion,w
  7530  100C  0141               	movlb	1	; select bank1
  7531  100D  009D               	movwf	29	;volatile
  7532                           
  7533                           ;adc.c: 116: ADCON0bits.ADON = 1;
  7534  100E  141D               	bsf	29,0	;volatile
  7535                           
  7536                           ;adc.c: 119: _delay((unsigned long)((5)*(1000000/4000000.0)));
  7537  100F  0000               	nop
  7538                           
  7539                           ;adc.c: 122: ADCON0bits.GO = 1;
  7540  1010  0141               	movlb	1	; select bank1
  7541  1011  149D               	bsf	29,1	;volatile
  7542  1012                     l217:	
  7543                           ;adc.c: 126: {
  7544                           
  7545  1012  189D               	btfsc	29,1	;volatile
  7546  1013  2812               	goto	l217
  7547                           
  7548                           ;adc.c: 127: };adc.c: 130: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  7549  1014  081C               	movf	28,w	;volatile
  7550  1015  0140               	movlb	0	; select bank0
  7551  1016  00A1               	movwf	?_ADC_GetConversion+1
  7552  1017  0141               	movlb	1	; select bank1
  7553  1018  081B               	movf	27,w	;volatile
  7554  1019  0140               	movlb	0	; select bank0
  7555  101A  00A0               	movwf	?_ADC_GetConversion
  7556  101B  0008               	return
  7557  101C                     __end_of_ADC_GetConversion:	
  7558                           
  7559                           	psect	text12
  7560  0435                     __ptext12:	
  7561 ;; *************** function _main_menu *****************
  7562 ;; Defined at:
  7563 ;;		line 286 in file "main.c"
  7564 ;; Parameters:    Size  Location     Type
  7565 ;;		None
  7566 ;; Auto vars:     Size  Location     Type
  7567 ;;  s              61    0[BANK1 ] unsigned char [61]
  7568 ;;  i               1   72[BANK1 ] unsigned char 
  7569 ;;  pages           1   63[BANK1 ] unsigned char 
  7570 ;; Return value:  Size  Location     Type
  7571 ;;                  1    wreg      void 
  7572 ;; Registers used:
  7573 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7574 ;; Tracked objects:
  7575 ;;		On entry : 0/0
  7576 ;;		On exit  : 0/0
  7577 ;;		Unchanged: 0/0
  7578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7580 ;;      Locals:         0       0      73       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7581 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7582 ;;      Totals:         0       8      73       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7583 ;;Total ram usage:       81 bytes
  7584 ;; Hardware stack levels used:    1
  7585 ;; Hardware stack levels required when called:   10
  7586 ;; This function calls:
  7587 ;;		_OLED_print_xy
  7588 ;;		_OLED_returnHome
  7589 ;;		_OLED_scrollDisplayLeft
  7590 ;;		_OLED_scrollDisplayRight
  7591 ;;		___awdiv
  7592 ;;		___awmod
  7593 ;;		___bmul
  7594 ;;		___lwdiv
  7595 ;;		___lwmod
  7596 ;;		_sprintf
  7597 ;; This function is called by:
  7598 ;;		_main
  7599 ;; This function uses a non-reentrant model
  7600 ;;
  7601                           
  7602                           
  7603                           ;psect for function _main_menu
  7604  0435                     _main_menu:	
  7605                           
  7606                           ;main.c: 287: static uint8_t menu = 0;;main.c: 288: static uint8_t page = 0;;main.c: 289
      +                          : uint8_t pages = 0;
  7607                           
  7608                           ;incstack = 0
  7609                           ; Regs used in _main_menu: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7610  0435  0141               	movlb	1	; select bank1
  7611  0436  01DF               	clrf	main_menu@pages^(0+128)
  7612                           
  7613                           ;main.c: 290: uint8_t i;;main.c: 292: char s[61];;main.c: 294: if (menu == 0)
  7614  0437  086C               	movf	main_menu@menu^(0+128),w
  7615  0438  1D03               	btfss	3,2
  7616  0439  2D5A               	goto	l4884
  7617                           
  7618                           ;main.c: 295: {;main.c: 297: pages = 3;
  7619  043A  3003               	movlw	3
  7620  043B  0140               	movlb	0	; select bank0
  7621  043C  00D0               	movwf	??_main_menu
  7622  043D  0850               	movf	??_main_menu,w
  7623  043E  0141               	movlb	1	; select bank1
  7624  043F  00DF               	movwf	main_menu@pages^(0+128)
  7625                           
  7626                           ;main.c: 298: OLED_print_xy(0,0, "Temperatur  Feuchte     Taupunkt    Batterie");
  7627  0440  0140               	movlb	0	; select bank0
  7628  0441  01A7               	clrf	OLED_print_xy@row
  7629  0442  3000               	movlw	low (STR_11| (0+32768))
  7630  0443  00A8               	movwf	OLED_print_xy@s
  7631  0444  30A0               	movlw	high (STR_11| (0+32768))
  7632  0445  00A9               	movwf	OLED_print_xy@s+1
  7633  0446  3000               	movlw	0
  7634  0447  319E  268A  3184   	fcall	_OLED_print_xy
  7635                           
  7636                           ;main.c: 299: sprintf(s,"%3d,%d \xdf\C    %3d,%d %%rel    -xx,x \xdf\C    %2u,%1uV  %2u,
      +                          %uW",;main.c: 300: (int8_t)(temp/10),(int8_t)((temp < 0 ? -1*temp : temp)%10),;main.c: 3
      +                          01: (uint8_t)(rh/10),(uint8_t)(rh%10),;main.c: 302: (uint8_t)(voltage / 10),(uint8_t)(vo
      +                          ltage % 10),;main.c: 303: total_power / 10, total_power % 10);
  7637  044A  0142               	movlb	2	; select bank2
  7638  044B  1BE2               	btfsc	_temp^(0+256),7
  7639  044C  2C54               	goto	l4870
  7640  044D  0862               	movf	_temp^(0+256),w
  7641  044E  0141               	movlb	1	; select bank1
  7642  044F  00DD               	movwf	_main_menu$1268^(0+128)
  7643  0450  01DE               	clrf	(_main_menu$1268+1)^(0+128)
  7644  0451  1BDD               	btfsc	_main_menu$1268^(0+128),7
  7645  0452  03DE               	decf	(_main_menu$1268+1)^(0+128),f
  7646  0453  2C66               	goto	l4872
  7647  0454                     l4870:	
  7648  0454  0862               	movf	_temp^(0+256),w
  7649  0455  0140               	movlb	0	; select bank0
  7650  0456  00D0               	movwf	??_main_menu
  7651  0457  01D1               	clrf	??_main_menu+1
  7652  0458  1BD0               	btfsc	??_main_menu,7
  7653  0459  03D1               	decf	??_main_menu+1,f
  7654  045A  09D0               	comf	??_main_menu,f
  7655  045B  09D1               	comf	??_main_menu+1,f
  7656  045C  0AD0               	incf	??_main_menu,f
  7657  045D  1903               	skipnz
  7658  045E  0AD1               	incf	??_main_menu+1,f
  7659  045F  0850               	movf	??_main_menu,w
  7660  0460  0141               	movlb	1	; select bank1
  7661  0461  00DD               	movwf	_main_menu$1268^(0+128)
  7662  0462  0140               	movlb	0	; select bank0
  7663  0463  0851               	movf	??_main_menu+1,w
  7664  0464  0141               	movlb	1	; select bank1
  7665  0465  00DE               	movwf	(_main_menu$1268+1)^(0+128)
  7666  0466                     l4872:	
  7667  0466  300A               	movlw	10
  7668  0467  0140               	movlb	0	; select bank0
  7669  0468  00A0               	movwf	___lwdiv@divisor
  7670  0469  3000               	movlw	0
  7671  046A  00A1               	movwf	___lwdiv@divisor+1
  7672  046B  0142               	movlb	2	; select bank2
  7673  046C  085A               	movf	(_voltage+1)^(0+256),w
  7674  046D  0140               	movlb	0	; select bank0
  7675  046E  00A3               	movwf	___lwdiv@dividend+1
  7676  046F  0142               	movlb	2	; select bank2
  7677  0470  0859               	movf	_voltage^(0+256),w
  7678  0471  0140               	movlb	0	; select bank0
  7679  0472  00A2               	movwf	___lwdiv@dividend
  7680  0473  319E  26EE  3184   	fcall	___lwdiv
  7681  0476  0140               	movlb	0	; select bank0
  7682  0477  0820               	movf	?___lwdiv,w
  7683  0478  00D0               	movwf	??_main_menu
  7684  0479  01D1               	clrf	??_main_menu+1
  7685  047A  0850               	movf	??_main_menu,w
  7686  047B  0141               	movlb	1	; select bank1
  7687  047C  00E0               	movwf	_main_menu$2066^(0+128)
  7688  047D  0140               	movlb	0	; select bank0
  7689  047E  0851               	movf	??_main_menu+1,w
  7690  047F  0141               	movlb	1	; select bank1
  7691  0480  00E1               	movwf	(_main_menu$2066+1)^(0+128)
  7692  0481  300A               	movlw	10
  7693  0482  0140               	movlb	0	; select bank0
  7694  0483  00A8               	movwf	___lwmod@divisor
  7695  0484  3000               	movlw	0
  7696  0485  00A9               	movwf	___lwmod@divisor+1
  7697  0486  0142               	movlb	2	; select bank2
  7698  0487  085A               	movf	(_voltage+1)^(0+256),w
  7699  0488  0140               	movlb	0	; select bank0
  7700  0489  00AB               	movwf	___lwmod@dividend+1
  7701  048A  0142               	movlb	2	; select bank2
  7702  048B  0859               	movf	_voltage^(0+256),w
  7703  048C  0140               	movlb	0	; select bank0
  7704  048D  00AA               	movwf	___lwmod@dividend
  7705  048E  319E  262D  3184   	fcall	___lwmod
  7706  0491  0140               	movlb	0	; select bank0
  7707  0492  0828               	movf	?___lwmod,w
  7708  0493  00D0               	movwf	??_main_menu
  7709  0494  01D1               	clrf	??_main_menu+1
  7710  0495  0850               	movf	??_main_menu,w
  7711  0496  0141               	movlb	1	; select bank1
  7712  0497  00E2               	movwf	_main_menu$2067^(0+128)
  7713  0498  0140               	movlb	0	; select bank0
  7714  0499  0851               	movf	??_main_menu+1,w
  7715  049A  0141               	movlb	1	; select bank1
  7716  049B  00E3               	movwf	(_main_menu$2067+1)^(0+128)
  7717  049C  300A               	movlw	10
  7718  049D  0140               	movlb	0	; select bank0
  7719  049E  00A0               	movwf	___lwdiv@divisor
  7720  049F  3000               	movlw	0
  7721  04A0  00A1               	movwf	___lwdiv@divisor+1
  7722  04A1  0142               	movlb	2	; select bank2
  7723  04A2  0856               	movf	(_total_power+1)^(0+256),w
  7724  04A3  0140               	movlb	0	; select bank0
  7725  04A4  00A3               	movwf	___lwdiv@dividend+1
  7726  04A5  0142               	movlb	2	; select bank2
  7727  04A6  0855               	movf	_total_power^(0+256),w
  7728  04A7  0140               	movlb	0	; select bank0
  7729  04A8  00A2               	movwf	___lwdiv@dividend
  7730  04A9  319E  26EE  3184   	fcall	___lwdiv
  7731  04AC  0140               	movlb	0	; select bank0
  7732  04AD  0821               	movf	?___lwdiv+1,w
  7733  04AE  0141               	movlb	1	; select bank1
  7734  04AF  00E5               	movwf	(_main_menu$2068+1)^(0+128)
  7735  04B0  0140               	movlb	0	; select bank0
  7736  04B1  0820               	movf	?___lwdiv,w
  7737  04B2  0141               	movlb	1	; select bank1
  7738  04B3  00E4               	movwf	_main_menu$2068^(0+128)
  7739  04B4  300A               	movlw	10
  7740  04B5  0140               	movlb	0	; select bank0
  7741  04B6  00A8               	movwf	___lwmod@divisor
  7742  04B7  3000               	movlw	0
  7743  04B8  00A9               	movwf	___lwmod@divisor+1
  7744  04B9  0142               	movlb	2	; select bank2
  7745  04BA  0856               	movf	(_total_power+1)^(0+256),w
  7746  04BB  0140               	movlb	0	; select bank0
  7747  04BC  00AB               	movwf	___lwmod@dividend+1
  7748  04BD  0142               	movlb	2	; select bank2
  7749  04BE  0855               	movf	_total_power^(0+256),w
  7750  04BF  0140               	movlb	0	; select bank0
  7751  04C0  00AA               	movwf	___lwmod@dividend
  7752  04C1  319E  262D  3184   	fcall	___lwmod
  7753  04C4  0140               	movlb	0	; select bank0
  7754  04C5  0829               	movf	?___lwmod+1,w
  7755  04C6  0141               	movlb	1	; select bank1
  7756  04C7  00E7               	movwf	(_main_menu$2069+1)^(0+128)
  7757  04C8  0140               	movlb	0	; select bank0
  7758  04C9  0828               	movf	?___lwmod,w
  7759  04CA  0141               	movlb	1	; select bank1
  7760  04CB  00E6               	movwf	_main_menu$2069^(0+128)
  7761  04CC  3000               	movlw	low (STR_12| (0+32768))
  7762  04CD  0140               	movlb	0	; select bank0
  7763  04CE  00AE               	movwf	sprintf@f
  7764  04CF  3098               	movlw	high (STR_12| (0+32768))
  7765  04D0  00AF               	movwf	sprintf@f+1
  7766  04D1  300A               	movlw	10
  7767  04D2  00A0               	movwf	___awdiv@divisor
  7768  04D3  3000               	movlw	0
  7769  04D4  00A1               	movwf	___awdiv@divisor+1
  7770  04D5  0142               	movlb	2	; select bank2
  7771  04D6  0862               	movf	_temp^(0+256),w
  7772  04D7  0140               	movlb	0	; select bank0
  7773  04D8  00A2               	movwf	___awdiv@dividend
  7774  04D9  01A3               	clrf	___awdiv@dividend+1
  7775  04DA  1BA2               	btfsc	___awdiv@dividend,7
  7776  04DB  03A3               	decf	___awdiv@dividend+1,f
  7777  04DC  3192  225E  3184   	fcall	___awdiv
  7778  04DF  0140               	movlb	0	; select bank0
  7779  04E0  0820               	movf	?___awdiv,w
  7780  04E1  00B0               	movwf	?_sprintf+2
  7781  04E2  01B1               	clrf	?_sprintf+3
  7782  04E3  1BB0               	btfsc	?_sprintf+2,7
  7783  04E4  03B1               	decf	?_sprintf+3,f
  7784  04E5  300A               	movlw	10
  7785  04E6  00A0               	movwf	___awmod@divisor
  7786  04E7  3000               	movlw	0
  7787  04E8  00A1               	movwf	___awmod@divisor+1
  7788  04E9  0141               	movlb	1	; select bank1
  7789  04EA  085E               	movf	(_main_menu$1268+1)^(0+128),w
  7790  04EB  0140               	movlb	0	; select bank0
  7791  04EC  00A3               	movwf	___awmod@dividend+1
  7792  04ED  0141               	movlb	1	; select bank1
  7793  04EE  085D               	movf	_main_menu$1268^(0+128),w
  7794  04EF  0140               	movlb	0	; select bank0
  7795  04F0  00A2               	movwf	___awmod@dividend
  7796  04F1  3190  209B  3184   	fcall	___awmod
  7797  04F4  0140               	movlb	0	; select bank0
  7798  04F5  0820               	movf	?___awmod,w
  7799  04F6  00B2               	movwf	?_sprintf+4
  7800  04F7  01B3               	clrf	?_sprintf+5
  7801  04F8  1BB2               	btfsc	?_sprintf+4,7
  7802  04F9  03B3               	decf	?_sprintf+5,f
  7803  04FA  300A               	movlw	10
  7804  04FB  00A0               	movwf	___awdiv@divisor
  7805  04FC  3000               	movlw	0
  7806  04FD  00A1               	movwf	___awdiv@divisor+1
  7807  04FE  0142               	movlb	2	; select bank2
  7808  04FF  085B               	movf	_rh^(0+256),w
  7809  0500  0140               	movlb	0	; select bank0
  7810  0501  00D0               	movwf	??_main_menu
  7811  0502  01D1               	clrf	??_main_menu+1
  7812  0503  0850               	movf	??_main_menu,w
  7813  0504  00A2               	movwf	___awdiv@dividend
  7814  0505  0851               	movf	??_main_menu+1,w
  7815  0506  00A3               	movwf	___awdiv@dividend+1
  7816  0507  3192  225E  3184   	fcall	___awdiv
  7817  050A  0140               	movlb	0	; select bank0
  7818  050B  0820               	movf	?___awdiv,w
  7819  050C  00D2               	movwf	??_main_menu+2
  7820  050D  01D3               	clrf	??_main_menu+3
  7821  050E  0852               	movf	??_main_menu+2,w
  7822  050F  00B4               	movwf	?_sprintf+6
  7823  0510  0853               	movf	??_main_menu+3,w
  7824  0511  00B5               	movwf	?_sprintf+7
  7825  0512  300A               	movlw	10
  7826  0513  00A0               	movwf	___awmod@divisor
  7827  0514  3000               	movlw	0
  7828  0515  00A1               	movwf	___awmod@divisor+1
  7829  0516  0142               	movlb	2	; select bank2
  7830  0517  085B               	movf	_rh^(0+256),w
  7831  0518  0140               	movlb	0	; select bank0
  7832  0519  00D4               	movwf	??_main_menu+4
  7833  051A  01D5               	clrf	??_main_menu+5
  7834  051B  0854               	movf	??_main_menu+4,w
  7835  051C  00A2               	movwf	___awmod@dividend
  7836  051D  0855               	movf	??_main_menu+5,w
  7837  051E  00A3               	movwf	___awmod@dividend+1
  7838  051F  3190  209B  3184   	fcall	___awmod
  7839  0522  0140               	movlb	0	; select bank0
  7840  0523  0820               	movf	?___awmod,w
  7841  0524  00D6               	movwf	??_main_menu+6
  7842  0525  01D7               	clrf	??_main_menu+7
  7843  0526  0856               	movf	??_main_menu+6,w
  7844  0527  00B6               	movwf	?_sprintf+8
  7845  0528  0857               	movf	??_main_menu+7,w
  7846  0529  00B7               	movwf	?_sprintf+9
  7847  052A  0141               	movlb	1	; select bank1
  7848  052B  0861               	movf	(_main_menu$2066+1)^(0+128),w
  7849  052C  0140               	movlb	0	; select bank0
  7850  052D  00B9               	movwf	?_sprintf+11
  7851  052E  0141               	movlb	1	; select bank1
  7852  052F  0860               	movf	_main_menu$2066^(0+128),w
  7853  0530  0140               	movlb	0	; select bank0
  7854  0531  00B8               	movwf	?_sprintf+10
  7855  0532  0141               	movlb	1	; select bank1
  7856  0533  0863               	movf	(_main_menu$2067+1)^(0+128),w
  7857  0534  0140               	movlb	0	; select bank0
  7858  0535  00BB               	movwf	?_sprintf+13
  7859  0536  0141               	movlb	1	; select bank1
  7860  0537  0862               	movf	_main_menu$2067^(0+128),w
  7861  0538  0140               	movlb	0	; select bank0
  7862  0539  00BA               	movwf	?_sprintf+12
  7863  053A  0141               	movlb	1	; select bank1
  7864  053B  0865               	movf	(_main_menu$2068+1)^(0+128),w
  7865  053C  0140               	movlb	0	; select bank0
  7866  053D  00BD               	movwf	?_sprintf+15
  7867  053E  0141               	movlb	1	; select bank1
  7868  053F  0864               	movf	_main_menu$2068^(0+128),w
  7869  0540  0140               	movlb	0	; select bank0
  7870  0541  00BC               	movwf	?_sprintf+14
  7871  0542  0141               	movlb	1	; select bank1
  7872  0543  0867               	movf	(_main_menu$2069+1)^(0+128),w
  7873  0544  0140               	movlb	0	; select bank0
  7874  0545  00BF               	movwf	?_sprintf+17
  7875  0546  0141               	movlb	1	; select bank1
  7876  0547  0866               	movf	_main_menu$2069^(0+128),w
  7877  0548  0140               	movlb	0	; select bank0
  7878  0549  00BE               	movwf	?_sprintf+16
  7879  054A  30A0               	movlw	(low (main_menu@s| 0))& (0+255)
  7880  054B  3189  21D4  3184   	fcall	_sprintf
  7881                           
  7882                           ;main.c: 304: OLED_print_xy(0,1, s);
  7883  054E  0140               	movlb	0	; select bank0
  7884  054F  01A7               	clrf	OLED_print_xy@row
  7885  0550  0AA7               	incf	OLED_print_xy@row,f
  7886  0551  30A0               	movlw	low main_menu@s
  7887  0552  00A8               	movwf	OLED_print_xy@s
  7888  0553  3000               	movlw	high main_menu@s
  7889  0554  00A9               	movwf	OLED_print_xy@s+1
  7890  0555  3000               	movlw	0
  7891  0556  319E  268A  3184   	fcall	_OLED_print_xy
  7892                           
  7893                           ;main.c: 305: }
  7894  0559  2EBB               	goto	l4938
  7895  055A                     l4884:	
  7896                           
  7897                           ;main.c: 306: else if (menu == 1)
  7898  055A  036C               	decf	main_menu@menu^(0+128),w
  7899  055B  1D03               	btfss	3,2
  7900  055C  2E20               	goto	l4908
  7901                           
  7902                           ;main.c: 307: {;main.c: 309: pages = 3;
  7903  055D  3003               	movlw	3
  7904  055E  0140               	movlb	0	; select bank0
  7905  055F  00D0               	movwf	??_main_menu
  7906  0560  0850               	movf	??_main_menu,w
  7907  0561  0141               	movlb	1	; select bank1
  7908  0562  00DF               	movwf	main_menu@pages^(0+128)
  7909                           
  7910                           ;main.c: 310: OLED_print_xy(0,0, "Kanal 1     Kanal 2     Kanal 3     Kanal 4");
  7911  0563  0140               	movlb	0	; select bank0
  7912  0564  01A7               	clrf	OLED_print_xy@row
  7913  0565  302D               	movlw	low (STR_13| (0+32768))
  7914  0566  00A8               	movwf	OLED_print_xy@s
  7915  0567  30A0               	movlw	high (STR_13| (0+32768))
  7916  0568  00A9               	movwf	OLED_print_xy@s+1
  7917  0569  3000               	movlw	0
  7918  056A  319E  268A  3184   	fcall	_OLED_print_xy
  7919                           
  7920                           ;main.c: 311: sprintf(s,"%2d %%  %2u,%u W%2d %%  %2u,%u W",;main.c: 312: dc[0], power[0]
      +                          /10, power[0]%10, dc[1], power[1]/10, power[1]%10);
  7921  056D  300A               	movlw	10
  7922  056E  0140               	movlb	0	; select bank0
  7923  056F  00A0               	movwf	___lwdiv@divisor
  7924  0570  3000               	movlw	0
  7925  0571  00A1               	movwf	___lwdiv@divisor+1
  7926  0572  0142               	movlb	2	; select bank2
  7927  0573  0848               	movf	(_power+1)^(0+256),w
  7928  0574  0140               	movlb	0	; select bank0
  7929  0575  00A3               	movwf	___lwdiv@dividend+1
  7930  0576  0142               	movlb	2	; select bank2
  7931  0577  0847               	movf	_power^(0+256),w
  7932  0578  0140               	movlb	0	; select bank0
  7933  0579  00A2               	movwf	___lwdiv@dividend
  7934  057A  319E  26EE  3184   	fcall	___lwdiv
  7935  057D  0140               	movlb	0	; select bank0
  7936  057E  0821               	movf	?___lwdiv+1,w
  7937  057F  0141               	movlb	1	; select bank1
  7938  0580  00E1               	movwf	(_main_menu$2066+1)^(0+128)
  7939  0581  0140               	movlb	0	; select bank0
  7940  0582  0820               	movf	?___lwdiv,w
  7941  0583  0141               	movlb	1	; select bank1
  7942  0584  00E0               	movwf	_main_menu$2066^(0+128)
  7943                           
  7944                           ;main.c: 311: sprintf(s,"%2d %%  %2u,%u W%2d %%  %2u,%u W",;main.c: 312: dc[0], power[0]
      +                          /10, power[0]%10, dc[1], power[1]/10, power[1]%10);
  7945  0585  300A               	movlw	10
  7946  0586  0140               	movlb	0	; select bank0
  7947  0587  00A8               	movwf	___lwmod@divisor
  7948  0588  3000               	movlw	0
  7949  0589  00A9               	movwf	___lwmod@divisor+1
  7950  058A  0142               	movlb	2	; select bank2
  7951  058B  0848               	movf	(_power+1)^(0+256),w
  7952  058C  0140               	movlb	0	; select bank0
  7953  058D  00AB               	movwf	___lwmod@dividend+1
  7954  058E  0142               	movlb	2	; select bank2
  7955  058F  0847               	movf	_power^(0+256),w
  7956  0590  0140               	movlb	0	; select bank0
  7957  0591  00AA               	movwf	___lwmod@dividend
  7958  0592  319E  262D  3184   	fcall	___lwmod
  7959  0595  0140               	movlb	0	; select bank0
  7960  0596  0829               	movf	?___lwmod+1,w
  7961  0597  0141               	movlb	1	; select bank1
  7962  0598  00E3               	movwf	(_main_menu$2067+1)^(0+128)
  7963  0599  0140               	movlb	0	; select bank0
  7964  059A  0828               	movf	?___lwmod,w
  7965  059B  0141               	movlb	1	; select bank1
  7966  059C  00E2               	movwf	_main_menu$2067^(0+128)
  7967                           
  7968                           ;main.c: 311: sprintf(s,"%2d %%  %2u,%u W%2d %%  %2u,%u W",;main.c: 312: dc[0], power[0]
      +                          /10, power[0]%10, dc[1], power[1]/10, power[1]%10);
  7969  059D  300A               	movlw	10
  7970  059E  0140               	movlb	0	; select bank0
  7971  059F  00A0               	movwf	___lwdiv@divisor
  7972  05A0  3000               	movlw	0
  7973  05A1  00A1               	movwf	___lwdiv@divisor+1
  7974  05A2  0142               	movlb	2	; select bank2
  7975  05A3  084A               	movf	((_power+1)^(0+256)+2),w
  7976  05A4  0140               	movlb	0	; select bank0
  7977  05A5  00A3               	movwf	___lwdiv@dividend+1
  7978  05A6  0142               	movlb	2	; select bank2
  7979  05A7  0849               	movf	(_power^(0+256)+2),w
  7980  05A8  0140               	movlb	0	; select bank0
  7981  05A9  00A2               	movwf	___lwdiv@dividend
  7982  05AA  319E  26EE  3184   	fcall	___lwdiv
  7983  05AD  0140               	movlb	0	; select bank0
  7984  05AE  0821               	movf	?___lwdiv+1,w
  7985  05AF  0141               	movlb	1	; select bank1
  7986  05B0  00E5               	movwf	(_main_menu$2068+1)^(0+128)
  7987  05B1  0140               	movlb	0	; select bank0
  7988  05B2  0820               	movf	?___lwdiv,w
  7989  05B3  0141               	movlb	1	; select bank1
  7990  05B4  00E4               	movwf	_main_menu$2068^(0+128)
  7991                           
  7992                           ;main.c: 311: sprintf(s,"%2d %%  %2u,%u W%2d %%  %2u,%u W",;main.c: 312: dc[0], power[0]
      +                          /10, power[0]%10, dc[1], power[1]/10, power[1]%10);
  7993  05B5  300A               	movlw	10
  7994  05B6  0140               	movlb	0	; select bank0
  7995  05B7  00A8               	movwf	___lwmod@divisor
  7996  05B8  3000               	movlw	0
  7997  05B9  00A9               	movwf	___lwmod@divisor+1
  7998  05BA  0142               	movlb	2	; select bank2
  7999  05BB  084A               	movf	((_power+1)^(0+256)+2),w
  8000  05BC  0140               	movlb	0	; select bank0
  8001  05BD  00AB               	movwf	___lwmod@dividend+1
  8002  05BE  0142               	movlb	2	; select bank2
  8003  05BF  0849               	movf	(_power^(0+256)+2),w
  8004  05C0  0140               	movlb	0	; select bank0
  8005  05C1  00AA               	movwf	___lwmod@dividend
  8006  05C2  319E  262D  3184   	fcall	___lwmod
  8007  05C5  0140               	movlb	0	; select bank0
  8008  05C6  0829               	movf	?___lwmod+1,w
  8009  05C7  0141               	movlb	1	; select bank1
  8010  05C8  00E7               	movwf	(_main_menu$2069+1)^(0+128)
  8011  05C9  0140               	movlb	0	; select bank0
  8012  05CA  0828               	movf	?___lwmod,w
  8013  05CB  0141               	movlb	1	; select bank1
  8014  05CC  00E6               	movwf	_main_menu$2069^(0+128)
  8015                           
  8016                           ;main.c: 311: sprintf(s,"%2d %%  %2u,%u W%2d %%  %2u,%u W",;main.c: 312: dc[0], power[0]
      +                          /10, power[0]%10, dc[1], power[1]/10, power[1]%10);
  8017  05CD  307D               	movlw	low (STR_14| (0+32768))
  8018  05CE  0140               	movlb	0	; select bank0
  8019  05CF  00AE               	movwf	sprintf@f
  8020  05D0  30A0               	movlw	high (STR_14| (0+32768))
  8021  05D1  00AF               	movwf	sprintf@f+1
  8022  05D2  0142               	movlb	2	; select bank2
  8023  05D3  084F               	movf	_dc^(0+256),w
  8024  05D4  0140               	movlb	0	; select bank0
  8025  05D5  00D0               	movwf	??_main_menu
  8026  05D6  01D1               	clrf	??_main_menu+1
  8027  05D7  0850               	movf	??_main_menu,w
  8028  05D8  00B0               	movwf	?_sprintf+2
  8029  05D9  0851               	movf	??_main_menu+1,w
  8030  05DA  00B1               	movwf	?_sprintf+3
  8031  05DB  0141               	movlb	1	; select bank1
  8032  05DC  0861               	movf	(_main_menu$2066+1)^(0+128),w
  8033  05DD  0140               	movlb	0	; select bank0
  8034  05DE  00B3               	movwf	?_sprintf+5
  8035  05DF  0141               	movlb	1	; select bank1
  8036  05E0  0860               	movf	_main_menu$2066^(0+128),w
  8037  05E1  0140               	movlb	0	; select bank0
  8038  05E2  00B2               	movwf	?_sprintf+4
  8039  05E3  0141               	movlb	1	; select bank1
  8040  05E4  0863               	movf	(_main_menu$2067+1)^(0+128),w
  8041  05E5  0140               	movlb	0	; select bank0
  8042  05E6  00B5               	movwf	?_sprintf+7
  8043  05E7  0141               	movlb	1	; select bank1
  8044  05E8  0862               	movf	_main_menu$2067^(0+128),w
  8045  05E9  0140               	movlb	0	; select bank0
  8046  05EA  00B4               	movwf	?_sprintf+6
  8047  05EB  0142               	movlb	2	; select bank2
  8048  05EC  0850               	movf	(_dc^(0+256)+1),w
  8049  05ED  0140               	movlb	0	; select bank0
  8050  05EE  00D2               	movwf	??_main_menu+2
  8051  05EF  01D3               	clrf	??_main_menu+3
  8052  05F0  0852               	movf	??_main_menu+2,w
  8053  05F1  00B6               	movwf	?_sprintf+8
  8054  05F2  0853               	movf	??_main_menu+3,w
  8055  05F3  00B7               	movwf	?_sprintf+9
  8056  05F4  0141               	movlb	1	; select bank1
  8057  05F5  0865               	movf	(_main_menu$2068+1)^(0+128),w
  8058  05F6  0140               	movlb	0	; select bank0
  8059  05F7  00B9               	movwf	?_sprintf+11
  8060  05F8  0141               	movlb	1	; select bank1
  8061  05F9  0864               	movf	_main_menu$2068^(0+128),w
  8062  05FA  0140               	movlb	0	; select bank0
  8063  05FB  00B8               	movwf	?_sprintf+10
  8064  05FC  0141               	movlb	1	; select bank1
  8065  05FD  0867               	movf	(_main_menu$2069+1)^(0+128),w
  8066  05FE  0140               	movlb	0	; select bank0
  8067  05FF  00BB               	movwf	?_sprintf+13
  8068  0600  0141               	movlb	1	; select bank1
  8069  0601  0866               	movf	_main_menu$2069^(0+128),w
  8070  0602  0140               	movlb	0	; select bank0
  8071  0603  00BA               	movwf	?_sprintf+12
  8072  0604  30A0               	movlw	(low (main_menu@s| 0))& (0+255)
  8073  0605  3189  21D4  3184   	fcall	_sprintf
  8074                           
  8075                           ;main.c: 313: OLED_print_xy(0,1, s);
  8076  0608  0140               	movlb	0	; select bank0
  8077  0609  01A7               	clrf	OLED_print_xy@row
  8078  060A  0AA7               	incf	OLED_print_xy@row,f
  8079  060B  30A0               	movlw	low main_menu@s
  8080  060C  00A8               	movwf	OLED_print_xy@s
  8081  060D  3000               	movlw	high main_menu@s
  8082  060E  00A9               	movwf	OLED_print_xy@s+1
  8083  060F  3000               	movlw	0
  8084  0610  319E  268A  3184   	fcall	_OLED_print_xy
  8085                           
  8086                           ;main.c: 315: if (pb == long_press) {
  8087  0613  3002               	movlw	2
  8088  0614  0140               	movlb	0	; select bank0
  8089  0615  066F               	xorwf	_pb,w	;volatile
  8090  0616  1D03               	btfss	3,2
  8091  0617  2EBB               	goto	l4938
  8092                           
  8093                           ;main.c: 316: menu = 10;
  8094  0618  300A               	movlw	10
  8095  0619  00D0               	movwf	??_main_menu
  8096  061A  0850               	movf	??_main_menu,w
  8097  061B  0141               	movlb	1	; select bank1
  8098  061C  00EC               	movwf	main_menu@menu^(0+128)
  8099                           
  8100                           ;main.c: 317: pb = none;
  8101  061D  0140               	movlb	0	; select bank0
  8102  061E  01EF               	clrf	_pb	;volatile
  8103  061F  2EBB               	goto	l4938
  8104  0620                     l4908:	
  8105                           
  8106                           ;main.c: 320: else if (menu == 10)
  8107  0620  300A               	movlw	10
  8108  0621  066C               	xorwf	main_menu@menu^(0+128),w
  8109  0622  1D03               	btfss	3,2
  8110  0623  2EBB               	goto	l4938
  8111                           
  8112                           ;main.c: 321: {;main.c: 324: OLED_print_xy(12 * page, 0, "Tastgrad");
  8113  0624  0140               	movlb	0	; select bank0
  8114  0625  01A7               	clrf	OLED_print_xy@row
  8115  0626  3013               	movlw	low (STR_15| (0+32768))
  8116  0627  00A8               	movwf	OLED_print_xy@s
  8117  0628  30A1               	movlw	high (STR_15| (0+32768))
  8118  0629  00A9               	movwf	OLED_print_xy@s+1
  8119  062A  300C               	movlw	12
  8120  062B  00D0               	movwf	??_main_menu
  8121  062C  0850               	movf	??_main_menu,w
  8122  062D  00A0               	movwf	___bmul@multiplicand
  8123  062E  0141               	movlb	1	; select bank1
  8124  062F  086F               	movf	main_menu@page^(0+128),w
  8125  0630  3187  27EE  3184   	fcall	___bmul
  8126  0633  319E  268A  3184   	fcall	_OLED_print_xy
  8127                           
  8128                           ;main.c: 325: sprintf(s, "Kanal %d: ", page + 1);
  8129  0636  30D3               	movlw	low (STR_16| (0+32768))
  8130  0637  0140               	movlb	0	; select bank0
  8131  0638  00AE               	movwf	sprintf@f
  8132  0639  30A0               	movlw	high (STR_16| (0+32768))
  8133  063A  00AF               	movwf	sprintf@f+1
  8134  063B  0141               	movlb	1	; select bank1
  8135  063C  086F               	movf	main_menu@page^(0+128),w
  8136  063D  3E01               	addlw	1
  8137  063E  0140               	movlb	0	; select bank0
  8138  063F  00B0               	movwf	?_sprintf+2
  8139  0640  3000               	movlw	0
  8140  0641  1803               	skipnc
  8141  0642  3001               	movlw	1
  8142  0643  00B1               	movwf	?_sprintf+3
  8143  0644  30A0               	movlw	(low (main_menu@s| 0))& (0+255)
  8144  0645  3189  21D4  3184   	fcall	_sprintf
  8145                           
  8146                           ;main.c: 326: OLED_print_xy(12 * page, 1, s);
  8147  0648  0140               	movlb	0	; select bank0
  8148  0649  01A7               	clrf	OLED_print_xy@row
  8149  064A  0AA7               	incf	OLED_print_xy@row,f
  8150  064B  30A0               	movlw	low main_menu@s
  8151  064C  00A8               	movwf	OLED_print_xy@s
  8152  064D  3000               	movlw	high main_menu@s
  8153  064E  00A9               	movwf	OLED_print_xy@s+1
  8154  064F  300C               	movlw	12
  8155  0650  00D0               	movwf	??_main_menu
  8156  0651  0850               	movf	??_main_menu,w
  8157  0652  00A0               	movwf	___bmul@multiplicand
  8158  0653  0141               	movlb	1	; select bank1
  8159  0654  086F               	movf	main_menu@page^(0+128),w
  8160  0655  3187  27EE  3184   	fcall	___bmul
  8161  0658                     L2:	
  8162  0658  319E  268A  3184   	fcall	_OLED_print_xy
  8163  065B  0140               	movlb	0	; select bank0
  8164  065C  086F               	movf	_pb,w	;volatile
  8165  065D  1D03               	btfss	3,2
  8166  065E  2EB7               	goto	l4934
  8167                           
  8168                           ;main.c: 329: if ((dir == cw) && (dc[page] < 99)) {
  8169                           
  8170                           ;main.c: 328: while(pb == none) {
  8171  065F  0141               	movlb	1	; select bank1
  8172  0660  036D               	decf	_dir^(0+128),w	;volatile
  8173  0661  1D03               	btfss	3,2
  8174  0662  2E79               	goto	l4920
  8175  0663  086F               	movf	main_menu@page^(0+128),w
  8176  0664  3E4F               	addlw	(low (_dc| (0+256)))& (0+255)
  8177  0665  0086               	movwf	6
  8178  0666  3001               	movlw	1	; select bank2/3
  8179  0667  0087               	movwf	7
  8180  0668  3063               	movlw	99
  8181  0669  0201               	subwf	1,w
  8182  066A  1803               	skipnc
  8183  066B  2E79               	goto	l4920
  8184                           
  8185                           ;main.c: 330: dc[page]++;
  8186  066C  3001               	movlw	1
  8187  066D  0140               	movlb	0	; select bank0
  8188  066E  00D0               	movwf	??_main_menu
  8189  066F  0141               	movlb	1	; select bank1
  8190  0670  086F               	movf	main_menu@page^(0+128),w
  8191  0671  3E4F               	addlw	(low (_dc| (0+256)))& (0+255)
  8192  0672  0086               	movwf	6
  8193  0673  3001               	movlw	1	; select bank2/3
  8194  0674  0087               	movwf	7
  8195  0675  0140               	movlb	0	; select bank0
  8196  0676  0850               	movf	??_main_menu,w
  8197  0677  0781               	addwf	1,f
  8198                           
  8199                           ;main.c: 332: } else if ((dir == ccw) && (dc[page] > 0)) {
  8200  0678  2E8C               	goto	l4918
  8201  0679                     l4920:	
  8202  0679  3002               	movlw	2
  8203  067A  066D               	xorwf	_dir^(0+128),w	;volatile
  8204  067B  1D03               	btfss	3,2
  8205  067C  2E8E               	goto	l4928
  8206  067D  086F               	movf	main_menu@page^(0+128),w
  8207  067E  3E4F               	addlw	(low (_dc| (0+256)))& (0+255)
  8208  067F  0086               	movwf	6
  8209  0680  3001               	movlw	1	; select bank2/3
  8210  0681  0087               	movwf	7
  8211  0682  0801               	movf	1,w
  8212  0683  1903               	btfsc	3,2
  8213  0684  2E8E               	goto	l4928
  8214                           
  8215                           ;main.c: 333: dc[page]--;
  8216  0685  086F               	movf	main_menu@page^(0+128),w
  8217  0686  3E4F               	addlw	(low (_dc| (0+256)))& (0+255)
  8218  0687  0086               	movwf	6
  8219  0688  3001               	movlw	1	; select bank2/3
  8220  0689  0087               	movwf	7
  8221  068A  3001               	movlw	1
  8222  068B  0281               	subwf	1,f
  8223  068C                     l4918:	
  8224                           
  8225                           ;main.c: 331: dir = stop;
  8226  068C  0141               	movlb	1	; select bank1
  8227  068D  01ED               	clrf	_dir^(0+128)	;volatile
  8228  068E                     l4928:	
  8229                           
  8230                           ;main.c: 335: };main.c: 336: sprintf(s,"%2d%%", dc[page]);
  8231  068E  3034               	movlw	low (STR_17| (0+32768))
  8232  068F  0140               	movlb	0	; select bank0
  8233  0690  00AE               	movwf	sprintf@f
  8234  0691  30A1               	movlw	high (STR_17| (0+32768))
  8235  0692  00AF               	movwf	sprintf@f+1
  8236  0693  0141               	movlb	1	; select bank1
  8237  0694  086F               	movf	main_menu@page^(0+128),w
  8238  0695  3E4F               	addlw	(low (_dc| (0+256)))& (0+255)
  8239  0696  0086               	movwf	6
  8240  0697  3001               	movlw	1	; select bank2/3
  8241  0698  0087               	movwf	7
  8242  0699  0801               	movf	1,w
  8243  069A  0140               	movlb	0	; select bank0
  8244  069B  00D0               	movwf	??_main_menu
  8245  069C  01D1               	clrf	??_main_menu+1
  8246  069D  0850               	movf	??_main_menu,w
  8247  069E  00B0               	movwf	?_sprintf+2
  8248  069F  0851               	movf	??_main_menu+1,w
  8249  06A0  00B1               	movwf	?_sprintf+3
  8250  06A1  30A0               	movlw	(low (main_menu@s| 0))& (0+255)
  8251  06A2  3189  21D4  3184   	fcall	_sprintf
  8252                           
  8253                           ;main.c: 337: OLED_print_xy(12 * page + 9, 1, s);
  8254  06A5  0140               	movlb	0	; select bank0
  8255  06A6  01A7               	clrf	OLED_print_xy@row
  8256  06A7  0AA7               	incf	OLED_print_xy@row,f
  8257  06A8  30A0               	movlw	low main_menu@s
  8258  06A9  00A8               	movwf	OLED_print_xy@s
  8259  06AA  3000               	movlw	high main_menu@s
  8260  06AB  00A9               	movwf	OLED_print_xy@s+1
  8261  06AC  300C               	movlw	12
  8262  06AD  00D0               	movwf	??_main_menu
  8263  06AE  0850               	movf	??_main_menu,w
  8264  06AF  00A0               	movwf	___bmul@multiplicand
  8265  06B0  0141               	movlb	1	; select bank1
  8266  06B1  086F               	movf	main_menu@page^(0+128),w
  8267  06B2  3187  27EE  3184   	fcall	___bmul
  8268  06B5  3E09               	addlw	9
  8269  06B6  2E58               	goto	L2
  8270  06B7                     l4934:	
  8271                           
  8272                           ;main.c: 338: };main.c: 339: pb = none;
  8273  06B7  01EF               	clrf	_pb	;volatile
  8274                           
  8275                           ;main.c: 341: menu = 1;
  8276  06B8  0141               	movlb	1	; select bank1
  8277  06B9  01EC               	clrf	main_menu@menu^(0+128)
  8278  06BA  0AEC               	incf	main_menu@menu^(0+128),f
  8279  06BB                     l4938:	
  8280                           
  8281                           ;main.c: 342: };main.c: 345: if (pb == short_press) {
  8282  06BB  0140               	movlb	0	; select bank0
  8283  06BC  036F               	decf	_pb,w	;volatile
  8284  06BD  1D03               	btfss	3,2
  8285  06BE  2ECF               	goto	l4952
  8286                           
  8287                           ;main.c: 346: pb = none;
  8288  06BF  01EF               	clrf	_pb	;volatile
  8289                           
  8290                           ;main.c: 347: if (menu == 0) menu = 1;
  8291  06C0  0141               	movlb	1	; select bank1
  8292  06C1  086C               	movf	main_menu@menu^(0+128),w
  8293  06C2  1D03               	btfss	3,2
  8294  06C3  2EC7               	goto	l4946
  8295  06C4  01EC               	clrf	main_menu@menu^(0+128)
  8296  06C5  0AEC               	incf	main_menu@menu^(0+128),f
  8297  06C6  2ECB               	goto	l661
  8298  06C7                     l4946:	
  8299                           
  8300                           ;main.c: 348: else if (menu == 1) menu = 0;
  8301  06C7  036C               	decf	main_menu@menu^(0+128),w
  8302  06C8  1D03               	btfss	3,2
  8303  06C9  2ECB               	goto	l661
  8304  06CA  01EC               	clrf	main_menu@menu^(0+128)
  8305  06CB                     l661:	
  8306                           
  8307                           ;main.c: 349: page = 0;
  8308  06CB  01EF               	clrf	main_menu@page^(0+128)
  8309                           
  8310                           ;main.c: 350: OLED_returnHome();
  8311  06CC  319B  23A9  3184   	fcall	_OLED_returnHome
  8312  06CF                     l4952:	
  8313                           
  8314                           ;main.c: 351: };main.c: 354: if (menu < 10) {
  8315  06CF  300A               	movlw	10
  8316  06D0  0141               	movlb	1	; select bank1
  8317  06D1  026C               	subwf	main_menu@menu^(0+128),w
  8318  06D2  1803               	skipnc
  8319  06D3  0008               	return
  8320                           
  8321                           ;main.c: 355: if ((dir == cw) && (page < pages)) {
  8322  06D4  036D               	decf	_dir^(0+128),w	;volatile
  8323  06D5  1D03               	btfss	3,2
  8324  06D6  2EF9               	goto	l4976
  8325  06D7  085F               	movf	main_menu@pages^(0+128),w
  8326  06D8  026F               	subwf	main_menu@page^(0+128),w
  8327  06D9  1803               	skipnc
  8328  06DA  2EF9               	goto	l4976
  8329                           
  8330                           ;main.c: 356: page++;
  8331  06DB  3001               	movlw	1
  8332  06DC  0140               	movlb	0	; select bank0
  8333  06DD  00D0               	movwf	??_main_menu
  8334  06DE  0850               	movf	??_main_menu,w
  8335  06DF  0141               	movlb	1	; select bank1
  8336  06E0  07EF               	addwf	main_menu@page^(0+128),f
  8337                           
  8338                           ;main.c: 357: dir = stop;
  8339  06E1  01ED               	clrf	_dir^(0+128)	;volatile
  8340                           
  8341                           ;main.c: 358: for(i=0;i<12;i++) {
  8342  06E2  01E8               	clrf	main_menu@i^(0+128)
  8343  06E3                     l4964:	
  8344  06E3  300C               	movlw	12
  8345  06E4  0268               	subwf	main_menu@i^(0+128),w
  8346  06E5  1803               	btfsc	3,0
  8347  06E6  0008               	return
  8348                           
  8349                           ;main.c: 359: OLED_scrollDisplayLeft();
  8350  06E7  319B  23AD  3184   	fcall	_OLED_scrollDisplayLeft
  8351                           
  8352                           ;main.c: 360: _delay((unsigned long)((20)*(1000000/4000.0)));
  8353  06EA  3007               	movlw	7
  8354  06EB  0140               	movlb	0	; select bank0
  8355  06EC  00D0               	movwf	??_main_menu
  8356  06ED  307D               	movlw	125
  8357  06EE                     u5947:	
  8358  06EE  0B89               	decfsz	9,f
  8359  06EF  2EEE               	goto	u5947
  8360  06F0  0BD0               	decfsz	??_main_menu,f
  8361  06F1  2EEE               	goto	u5947
  8362  06F2  3001               	movlw	1
  8363  06F3  0140               	movlb	0	; select bank0
  8364  06F4  00D0               	movwf	??_main_menu
  8365  06F5  0850               	movf	??_main_menu,w
  8366  06F6  0141               	movlb	1	; select bank1
  8367  06F7  07E8               	addwf	main_menu@i^(0+128),f
  8368  06F8  2EE3               	goto	l4964
  8369  06F9                     l4976:	
  8370                           
  8371                           ;main.c: 363: else if ((dir == ccw) && (page > 0)) {
  8372  06F9  3002               	movlw	2
  8373  06FA  066D               	xorwf	_dir^(0+128),w	;volatile
  8374  06FB  1D03               	btfss	3,2
  8375  06FC  0008               	return
  8376  06FD  086F               	movf	main_menu@page^(0+128),w
  8377  06FE  1903               	btfsc	3,2
  8378  06FF  0008               	return
  8379                           
  8380                           ;main.c: 364: page--;
  8381  0700  3001               	movlw	1
  8382  0701  02EF               	subwf	main_menu@page^(0+128),f
  8383                           
  8384                           ;main.c: 365: dir = stop;
  8385  0702  01ED               	clrf	_dir^(0+128)	;volatile
  8386                           
  8387                           ;main.c: 366: for(i=0;i<12;i++) {
  8388  0703  01E8               	clrf	main_menu@i^(0+128)
  8389  0704                     l4986:	
  8390  0704  300C               	movlw	12
  8391  0705  0268               	subwf	main_menu@i^(0+128),w
  8392  0706  1803               	btfsc	3,0
  8393  0707  0008               	return
  8394                           
  8395                           ;main.c: 367: OLED_scrollDisplayRight();
  8396  0708  319B  23B1  3184   	fcall	_OLED_scrollDisplayRight
  8397                           
  8398                           ;main.c: 368: _delay((unsigned long)((20)*(1000000/4000.0)));
  8399  070B  3007               	movlw	7
  8400  070C  0140               	movlb	0	; select bank0
  8401  070D  00D0               	movwf	??_main_menu
  8402  070E  307D               	movlw	125
  8403  070F                     u5957:	
  8404  070F  0B89               	decfsz	9,f
  8405  0710  2F0F               	goto	u5957
  8406  0711  0BD0               	decfsz	??_main_menu,f
  8407  0712  2F0F               	goto	u5957
  8408  0713  3001               	movlw	1
  8409  0714  0140               	movlb	0	; select bank0
  8410  0715  00D0               	movwf	??_main_menu
  8411  0716  0850               	movf	??_main_menu,w
  8412  0717  0141               	movlb	1	; select bank1
  8413  0718  07E8               	addwf	main_menu@i^(0+128),f
  8414  0719  2F04               	goto	l4986
  8415  071A                     __end_of_main_menu:	
  8416                           
  8417                           	psect	text13
  8418  09D4                     __ptext13:	
  8419 ;; *************** function _sprintf *****************
  8420 ;; Defined at:
  8421 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  8422 ;; Parameters:    Size  Location     Type
  8423 ;;  sp              1    wreg     PTR unsigned char 
  8424 ;;		 -> main_menu@s(61), 
  8425 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  8426 ;;		 -> STR_17(6), STR_16(11), STR_14(33), STR_12(59), 
  8427 ;; Auto vars:     Size  Location     Type
  8428 ;;  sp              1   46[BANK0 ] PTR unsigned char 
  8429 ;;		 -> main_menu@s(61), 
  8430 ;;  tmpval          4    0        struct .
  8431 ;;  width           2   44[BANK0 ] int 
  8432 ;;  val             2   42[BANK0 ] unsigned int 
  8433 ;;  len             2   39[BANK0 ] unsigned int 
  8434 ;;  c               1   47[BANK0 ] unsigned char 
  8435 ;;  flag            1   41[BANK0 ] unsigned char 
  8436 ;;  ap              1   38[BANK0 ] PTR void [1]
  8437 ;;		 -> ?_sprintf(2), 
  8438 ;;  prec            1   37[BANK0 ] char 
  8439 ;;  cp              1   36[BANK0 ] PTR const unsigned char 
  8440 ;;		 -> sprintf@c(1), 
  8441 ;; Return value:  Size  Location     Type
  8442 ;;                  2   14[BANK0 ] int 
  8443 ;; Registers used:
  8444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8445 ;; Tracked objects:
  8446 ;;		On entry : 0/0
  8447 ;;		On exit  : 0/0
  8448 ;;		Unchanged: 0/0
  8449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8450 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8451 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8452 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8453 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8454 ;;Total ram usage:       34 bytes
  8455 ;; Hardware stack levels used:    1
  8456 ;; Hardware stack levels required when called:    6
  8457 ;; This function calls:
  8458 ;;		___lwdiv
  8459 ;;		___lwmod
  8460 ;;		___wmul
  8461 ;;		_isdigit
  8462 ;; This function is called by:
  8463 ;;		_main_menu
  8464 ;; This function uses a non-reentrant model
  8465 ;;
  8466                           
  8467                           
  8468                           ;psect for function _sprintf
  8469  09D4                     _sprintf:	
  8470                           
  8471                           ;incstack = 0
  8472                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8473                           ;sprintf@sp stored from wreg
  8474  09D4  0140               	movlb	0	; select bank0
  8475  09D5  00CE               	movwf	sprintf@sp
  8476                           
  8477                           ;doprnt.c: 502: va_list ap;;doprnt.c: 507: char c;;doprnt.c: 509: int width;;doprnt.c: 5
      +                          16: signed char prec;;doprnt.c: 520: unsigned char flag;;doprnt.c: 535: union {;doprnt.c
      +                          : 536: unsigned long vd;;doprnt.c: 537: double integ;;doprnt.c: 538: } tmpval;;doprnt.c:
      +                           540: unsigned int val;;doprnt.c: 541: unsigned len;;doprnt.c: 542: const char * cp;;dop
      +                          rnt.c: 545: *ap = __va_start();
  8478  09D6  3030               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  8479  09D7  00C0               	movwf	??_sprintf
  8480  09D8  0840               	movf	??_sprintf,w
  8481  09D9  00C6               	movwf	sprintf@ap
  8482  09DA                     l4478:	
  8483                           ;doprnt.c: 548: while((c = *f++)) {
  8484                           
  8485  09DA  082F               	movf	sprintf@f+1,w
  8486  09DB  00C1               	movwf	??_sprintf+1
  8487  09DC  082E               	movf	sprintf@f,w
  8488  09DD  00C0               	movwf	??_sprintf
  8489  09DE  0AAE               	incf	sprintf@f,f
  8490  09DF  1903               	skipnz
  8491  09E0  0AAF               	incf	sprintf@f+1,f
  8492  09E1  0840               	movf	??_sprintf,w
  8493  09E2  0084               	movwf	4
  8494  09E3  0841               	movf	??_sprintf+1,w
  8495  09E4  0085               	movwf	5
  8496  09E5  0800               	movf	0,w	;code access
  8497  09E6  00C2               	movwf	??_sprintf+2
  8498  09E7  0842               	movf	??_sprintf+2,w
  8499  09E8  00CF               	movwf	sprintf@c
  8500  09E9  084F               	movf	sprintf@c,w
  8501  09EA  1903               	btfsc	3,2
  8502  09EB  2B70               	goto	l4480
  8503                           
  8504                           ;doprnt.c: 550: if(c != '%')
  8505  09EC  3025               	movlw	37
  8506  09ED  064F               	xorwf	sprintf@c,w
  8507  09EE  1903               	btfsc	3,2
  8508  09EF  29FC               	goto	l4378
  8509                           
  8510                           ;doprnt.c: 552: {;doprnt.c: 553: ((*sp++ = (c)));
  8511  09F0  084F               	movf	sprintf@c,w
  8512  09F1  00C0               	movwf	??_sprintf
  8513  09F2  084E               	movf	sprintf@sp,w
  8514  09F3  0086               	movwf	6
  8515  09F4  0187               	clrf	7
  8516  09F5  0840               	movf	??_sprintf,w
  8517  09F6  0081               	movwf	1
  8518  09F7  3001               	movlw	1
  8519  09F8  00C0               	movwf	??_sprintf
  8520  09F9  0840               	movf	??_sprintf,w
  8521  09FA  07CE               	addwf	sprintf@sp,f
  8522                           
  8523                           ;doprnt.c: 554: continue;
  8524  09FB  29DA               	goto	l4478
  8525  09FC                     l4378:	
  8526                           
  8527                           ;doprnt.c: 555: };doprnt.c: 558: width = 0;
  8528  09FC  01CC               	clrf	sprintf@width
  8529  09FD  01CD               	clrf	sprintf@width+1
  8530                           
  8531                           ;doprnt.c: 560: flag = 0;
  8532  09FE  01C9               	clrf	sprintf@flag
  8533                           
  8534                           ;doprnt.c: 609: if(isdigit((unsigned)*f)) {
  8535  09FF  082E               	movf	sprintf@f,w
  8536  0A00  0084               	movwf	4
  8537  0A01  082F               	movf	sprintf@f+1,w
  8538  0A02  0085               	movwf	5
  8539  0A03  0800               	movf	0,w	;code access
  8540  0A04  319C  24CB  3189   	fcall	_isdigit
  8541  0A07  1C03               	btfss	3,0
  8542  0A08  2A86               	goto	l4416
  8543                           
  8544                           ;doprnt.c: 610: width = 0;
  8545  0A09  0140               	movlb	0	; select bank0
  8546  0A0A  01CC               	clrf	sprintf@width
  8547  0A0B  01CD               	clrf	sprintf@width+1
  8548  0A0C                     l4384:	
  8549                           
  8550                           ;doprnt.c: 612: width *= 10;
  8551  0A0C  300A               	movlw	10
  8552  0A0D  0140               	movlb	0	; select bank0
  8553  0A0E  00A0               	movwf	___wmul@multiplier
  8554  0A0F  3000               	movlw	0
  8555  0A10  00A1               	movwf	___wmul@multiplier+1
  8556  0A11  084D               	movf	sprintf@width+1,w
  8557  0A12  00A3               	movwf	___wmul@multiplicand+1
  8558  0A13  084C               	movf	sprintf@width,w
  8559  0A14  00A2               	movwf	___wmul@multiplicand
  8560  0A15  319D  2566  3189   	fcall	___wmul
  8561  0A18  0140               	movlb	0	; select bank0
  8562  0A19  0821               	movf	?___wmul+1,w
  8563  0A1A  00CD               	movwf	sprintf@width+1
  8564  0A1B  0820               	movf	?___wmul,w
  8565  0A1C  00CC               	movwf	sprintf@width
  8566                           
  8567                           ;doprnt.c: 613: width += *f++ - '0';
  8568  0A1D  082E               	movf	sprintf@f,w
  8569  0A1E  0084               	movwf	4
  8570  0A1F  082F               	movf	sprintf@f+1,w
  8571  0A20  0085               	movwf	5
  8572  0A21  0800               	movf	0,w	;code access
  8573  0A22  3ED0               	addlw	208
  8574  0A23  00C0               	movwf	??_sprintf
  8575  0A24  30FF               	movlw	255
  8576  0A25  1803               	skipnc
  8577  0A26  3000               	movlw	0
  8578  0A27  00C1               	movwf	??_sprintf+1
  8579  0A28  0840               	movf	??_sprintf,w
  8580  0A29  07CC               	addwf	sprintf@width,f
  8581  0A2A  0841               	movf	??_sprintf+1,w
  8582  0A2B  3DCD               	addwfc	sprintf@width+1,f
  8583  0A2C  3001               	movlw	1
  8584  0A2D  07AE               	addwf	sprintf@f,f
  8585  0A2E  3000               	movlw	0
  8586  0A2F  3DAF               	addwfc	sprintf@f+1,f
  8587                           
  8588                           ;doprnt.c: 614: } while(isdigit((unsigned)*f));
  8589  0A30  082E               	movf	sprintf@f,w
  8590  0A31  0084               	movwf	4
  8591  0A32  082F               	movf	sprintf@f+1,w
  8592  0A33  0085               	movwf	5
  8593  0A34  0800               	movf	0,w	;code access
  8594  0A35  319C  24CB  3189   	fcall	_isdigit
  8595  0A38  1C03               	btfss	3,0
  8596  0A39  2A86               	goto	l4416
  8597  0A3A  2A0C               	goto	l4384
  8598  0A3B                     l4392:	
  8599                           
  8600                           ;doprnt.c: 776: if(width > len)
  8601  0A3B  3000               	movlw	0
  8602  0A3C  024D               	subwf	sprintf@width+1,w
  8603  0A3D  3002               	movlw	2
  8604  0A3E  1903               	skipnz
  8605  0A3F  024C               	subwf	sprintf@width,w
  8606  0A40  1C03               	skipc
  8607  0A41  2A47               	goto	l4396
  8608                           
  8609                           ;doprnt.c: 777: width -= len;
  8610  0A42  30FF               	movlw	255
  8611  0A43  07CC               	addwf	sprintf@width,f
  8612  0A44  30FF               	movlw	255
  8613  0A45  3DCD               	addwfc	sprintf@width+1,f
  8614  0A46  2A49               	goto	l4402
  8615  0A47                     l4396:	
  8616                           
  8617                           ;doprnt.c: 778: else;doprnt.c: 779: width = 0;
  8618  0A47  01CC               	clrf	sprintf@width
  8619  0A48  01CD               	clrf	sprintf@width+1
  8620  0A49                     l4402:	
  8621  0A49  30FF               	movlw	255
  8622  0A4A  07CC               	addwf	sprintf@width,f
  8623  0A4B  30FF               	movlw	255
  8624  0A4C  3DCD               	addwfc	sprintf@width+1,f
  8625  0A4D  0A4C               	incf	sprintf@width,w
  8626  0A4E  1903               	btfsc	3,2
  8627  0A4F  0A4D               	incf	sprintf@width+1,w
  8628  0A50  1903               	btfsc	3,2
  8629  0A51  2A70               	goto	l4410
  8630                           
  8631                           ;doprnt.c: 784: ((*sp++ = (' ')));
  8632  0A52  3020               	movlw	32
  8633  0A53  00C0               	movwf	??_sprintf
  8634  0A54  084E               	movf	sprintf@sp,w
  8635  0A55  0086               	movwf	6
  8636  0A56  0187               	clrf	7
  8637  0A57  0840               	movf	??_sprintf,w
  8638  0A58  0081               	movwf	1
  8639  0A59  3001               	movlw	1
  8640  0A5A  00C0               	movwf	??_sprintf
  8641  0A5B  0840               	movf	??_sprintf,w
  8642  0A5C  07CE               	addwf	sprintf@sp,f
  8643  0A5D  2A49               	goto	l4402
  8644  0A5E                     l4404:	
  8645                           
  8646                           ;doprnt.c: 787: ((*sp++ = (*cp++)));
  8647  0A5E  0844               	movf	sprintf@cp,w
  8648  0A5F  0086               	movwf	6
  8649  0A60  0187               	clrf	7
  8650  0A61  0801               	movf	1,w
  8651  0A62  00C0               	movwf	??_sprintf
  8652  0A63  084E               	movf	sprintf@sp,w
  8653  0A64  0086               	movwf	6
  8654  0A65  0187               	clrf	7
  8655  0A66  0840               	movf	??_sprintf,w
  8656  0A67  0081               	movwf	1
  8657  0A68  3001               	movlw	1
  8658  0A69  00C0               	movwf	??_sprintf
  8659  0A6A  0840               	movf	??_sprintf,w
  8660  0A6B  07C4               	addwf	sprintf@cp,f
  8661  0A6C  3001               	movlw	1
  8662  0A6D  00C0               	movwf	??_sprintf
  8663  0A6E  0840               	movf	??_sprintf,w
  8664  0A6F  07CE               	addwf	sprintf@sp,f
  8665  0A70                     l4410:	
  8666  0A70  3001               	movlw	1
  8667  0A71  02C7               	subwf	sprintf@len,f
  8668  0A72  3000               	movlw	0
  8669  0A73  3BC8               	subwfb	sprintf@len+1,f
  8670  0A74  0A47               	incf	sprintf@len,w
  8671  0A75  1D03               	skipz
  8672  0A76  2A5E               	goto	l4404
  8673  0A77  0A48               	incf	sprintf@len+1,w
  8674  0A78  1903               	btfsc	3,2
  8675  0A79  29DA               	goto	l4478
  8676  0A7A  2A5E               	goto	l4404
  8677  0A7B                     l4412:	
  8678                           
  8679                           ;doprnt.c: 824: cp = (char *)&c;
  8680  0A7B  304F               	movlw	(low (sprintf@c| 0))& (0+255)
  8681  0A7C  00C0               	movwf	??_sprintf
  8682  0A7D  0840               	movf	??_sprintf,w
  8683  0A7E  00C4               	movwf	sprintf@cp
  8684                           
  8685                           ;doprnt.c: 825: len = 1;
  8686  0A7F  3001               	movlw	1
  8687  0A80  00C7               	movwf	sprintf@len
  8688  0A81  3000               	movlw	0
  8689  0A82  00C8               	movwf	sprintf@len+1
  8690                           
  8691                           ;doprnt.c: 826: goto dostring;
  8692  0A83  2A3B               	goto	l4392
  8693  0A84                     l847:	
  8694                           ;doprnt.c: 836: case 'u':
  8695                           
  8696                           
  8697                           ;doprnt.c: 837: flag |= 0x40;
  8698  0A84  1749               	bsf	sprintf@flag,6
  8699                           
  8700                           ;doprnt.c: 838: break;
  8701  0A85  2AA1               	goto	l836
  8702  0A86                     l4416:	
  8703  0A86  0140               	movlb	0	; select bank0
  8704  0A87  082F               	movf	sprintf@f+1,w
  8705  0A88  00C1               	movwf	??_sprintf+1
  8706  0A89  082E               	movf	sprintf@f,w
  8707  0A8A  00C0               	movwf	??_sprintf
  8708  0A8B  0AAE               	incf	sprintf@f,f
  8709  0A8C  1903               	skipnz
  8710  0A8D  0AAF               	incf	sprintf@f+1,f
  8711  0A8E  0840               	movf	??_sprintf,w
  8712  0A8F  0084               	movwf	4
  8713  0A90  0841               	movf	??_sprintf+1,w
  8714  0A91  0085               	movwf	5
  8715  0A92  0800               	movf	0,w	;code access
  8716  0A93  00CF               	movwf	sprintf@c
  8717                           
  8718                           ; Switch size 1, requested type "simple"
  8719                           ; Number of cases is 4, Range of values is 0 to 117
  8720                           ; switch strategies available:
  8721                           ; Name         Instructions Cycles
  8722                           ; simple_byte           13     7 (average)
  8723                           ; direct_byte          242     6 (fixed)
  8724                           ; jumptable            260     6 (fixed)
  8725                           ;	Chosen strategy is simple_byte
  8726  0A94  3A00               	xorlw	0	; case 0
  8727  0A95  1903               	skipnz
  8728  0A96  2B70               	goto	l4480
  8729  0A97  3A64               	xorlw	100	; case 100
  8730  0A98  1903               	skipnz
  8731  0A99  2AA1               	goto	l836
  8732  0A9A  3A0D               	xorlw	13	; case 105
  8733  0A9B  1903               	skipnz
  8734  0A9C  2AA1               	goto	l836
  8735  0A9D  3A1C               	xorlw	28	; case 117
  8736  0A9E  1903               	skipnz
  8737  0A9F  2A84               	goto	l847
  8738  0AA0  2A7B               	goto	l4412
  8739  0AA1                     l836:	
  8740                           
  8741                           ;doprnt.c: 1270: if((flag & 0x40) == 0x00)
  8742  0AA1  1B49               	btfsc	sprintf@flag,6
  8743  0AA2  2ABA               	goto	l4428
  8744                           
  8745                           ;doprnt.c: 1272: {;doprnt.c: 1278: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  8746  0AA3  0846               	movf	sprintf@ap,w
  8747  0AA4  0086               	movwf	6
  8748  0AA5  0187               	clrf	7
  8749  0AA6  3F40               	moviw [0]fsr1
  8750  0AA7  00CA               	movwf	sprintf@val
  8751  0AA8  3F41               	moviw [1]fsr1
  8752  0AA9  00CB               	movwf	sprintf@val+1
  8753  0AAA  3002               	movlw	2
  8754  0AAB  00C0               	movwf	??_sprintf
  8755  0AAC  0840               	movf	??_sprintf,w
  8756  0AAD  07C6               	addwf	sprintf@ap,f
  8757                           
  8758                           ;doprnt.c: 1280: if((int)val < 0) {
  8759  0AAE  1FCB               	btfss	sprintf@val+1,7
  8760  0AAF  2AC5               	goto	l4432
  8761                           
  8762                           ;doprnt.c: 1281: flag |= 0x03;
  8763  0AB0  3003               	movlw	3
  8764  0AB1  00C0               	movwf	??_sprintf
  8765  0AB2  0840               	movf	??_sprintf,w
  8766  0AB3  04C9               	iorwf	sprintf@flag,f
  8767                           
  8768                           ;doprnt.c: 1282: val = -val;
  8769  0AB4  09CA               	comf	sprintf@val,f
  8770  0AB5  09CB               	comf	sprintf@val+1,f
  8771  0AB6  0ACA               	incf	sprintf@val,f
  8772  0AB7  1903               	skipnz
  8773  0AB8  0ACB               	incf	sprintf@val+1,f
  8774  0AB9  2AC5               	goto	l4432
  8775  0ABA                     l4428:	
  8776                           
  8777                           ;doprnt.c: 1287: else;doprnt.c: 1292: {;doprnt.c: 1305: val = (*(unsigned *)__va_arg((*(
      +                          unsigned **)ap), (unsigned)0));
  8778  0ABA  0846               	movf	sprintf@ap,w
  8779  0ABB  0086               	movwf	6
  8780  0ABC  0187               	clrf	7
  8781  0ABD  3F40               	moviw [0]fsr1
  8782  0ABE  00CA               	movwf	sprintf@val
  8783  0ABF  3F41               	moviw [1]fsr1
  8784  0AC0  00CB               	movwf	sprintf@val+1
  8785  0AC1  3002               	movlw	2
  8786  0AC2  00C0               	movwf	??_sprintf
  8787  0AC3  0840               	movf	??_sprintf,w
  8788  0AC4  07C6               	addwf	sprintf@ap,f
  8789  0AC5                     l4432:	
  8790                           
  8791                           ;doprnt.c: 1306: };doprnt.c: 1324: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  8792  0AC5  01CF               	clrf	sprintf@c
  8793  0AC6  0ACF               	incf	sprintf@c,f
  8794  0AC7  3005               	movlw	5
  8795  0AC8  064F               	xorwf	sprintf@c,w
  8796  0AC9  1903               	btfsc	3,2
  8797  0ACA  2AEA               	goto	l4444
  8798  0ACB                     l4438:	
  8799                           
  8800                           ;doprnt.c: 1325: if(val < dpowers[c])
  8801  0ACB  084F               	movf	sprintf@c,w
  8802  0ACC  00C0               	movwf	??_sprintf
  8803  0ACD  01C1               	clrf	??_sprintf+1
  8804  0ACE  35C0               	lslf	??_sprintf,f
  8805  0ACF  0DC1               	rlf	??_sprintf+1,f
  8806  0AD0  30FF               	movlw	low (_dpowers| (0+32768))
  8807  0AD1  0740               	addwf	??_sprintf,w
  8808  0AD2  0084               	movwf	4
  8809  0AD3  30A0               	movlw	high (_dpowers| (0+32768))
  8810  0AD4  3D41               	addwfc	??_sprintf+1,w
  8811  0AD5  0085               	movwf	5
  8812  0AD6  3F00               	moviw [0]fsr0
  8813  0AD7  00C2               	movwf	??_sprintf+2
  8814  0AD8  3F01               	moviw [1]fsr0
  8815  0AD9  00C3               	movwf	??_sprintf+3
  8816  0ADA  0843               	movf	??_sprintf+3,w
  8817  0ADB  024B               	subwf	sprintf@val+1,w
  8818  0ADC  1D03               	skipz
  8819  0ADD  2AE0               	goto	u4695
  8820  0ADE  0842               	movf	??_sprintf+2,w
  8821  0ADF  024A               	subwf	sprintf@val,w
  8822  0AE0                     u4695:	
  8823  0AE0  1C03               	btfss	3,0
  8824  0AE1  2AEA               	goto	l4444
  8825  0AE2  3001               	movlw	1
  8826  0AE3  00C0               	movwf	??_sprintf
  8827  0AE4  0840               	movf	??_sprintf,w
  8828  0AE5  07CF               	addwf	sprintf@c,f
  8829  0AE6  3005               	movlw	5
  8830  0AE7  064F               	xorwf	sprintf@c,w
  8831  0AE8  1D03               	btfss	3,2
  8832  0AE9  2ACB               	goto	l4438
  8833  0AEA                     l4444:	
  8834                           
  8835                           ;doprnt.c: 1364: if(width && flag & 0x03)
  8836  0AEA  084C               	movf	sprintf@width,w
  8837  0AEB  044D               	iorwf	sprintf@width+1,w
  8838  0AEC  1903               	btfsc	3,2
  8839  0AED  2AF6               	goto	l854
  8840  0AEE  0849               	movf	sprintf@flag,w
  8841  0AEF  3903               	andlw	3
  8842  0AF0  1903               	btfsc	3,2
  8843  0AF1  2AF6               	goto	l854
  8844                           
  8845                           ;doprnt.c: 1365: width--;
  8846  0AF2  30FF               	movlw	255
  8847  0AF3  07CC               	addwf	sprintf@width,f
  8848  0AF4  30FF               	movlw	255
  8849  0AF5  3DCD               	addwfc	sprintf@width+1,f
  8850  0AF6                     l854:	
  8851                           
  8852                           ;doprnt.c: 1400: if(width > c)
  8853  0AF6  084D               	movf	sprintf@width+1,w
  8854  0AF7  3A80               	xorlw	128
  8855  0AF8  3C80               	sublw	128
  8856  0AF9  1D03               	skipz
  8857  0AFA  2AFD               	goto	u4735
  8858  0AFB  084C               	movf	sprintf@width,w
  8859  0AFC  024F               	subwf	sprintf@c,w
  8860  0AFD                     u4735:	
  8861  0AFD  1803               	skipnc
  8862  0AFE  2B08               	goto	l4452
  8863                           
  8864                           ;doprnt.c: 1401: width -= c;
  8865  0AFF  0140               	movlb	0	; select bank0
  8866  0B00  084F               	movf	sprintf@c,w
  8867  0B01  00C0               	movwf	??_sprintf
  8868  0B02  01C1               	clrf	??_sprintf+1
  8869  0B03  0840               	movf	??_sprintf,w
  8870  0B04  02CC               	subwf	sprintf@width,f
  8871  0B05  0841               	movf	??_sprintf+1,w
  8872  0B06  3BCD               	subwfb	sprintf@width+1,f
  8873  0B07  2B0B               	goto	l4454
  8874  0B08                     l4452:	
  8875                           
  8876                           ;doprnt.c: 1402: else;doprnt.c: 1403: width = 0;
  8877  0B08  0140               	movlb	0	; select bank0
  8878  0B09  01CC               	clrf	sprintf@width
  8879  0B0A  01CD               	clrf	sprintf@width+1
  8880  0B0B                     l4454:	
  8881                           
  8882                           ;doprnt.c: 1441: {;doprnt.c: 1443: if(width;doprnt.c: 1447: )
  8883  0B0B  084C               	movf	sprintf@width,w
  8884  0B0C  044D               	iorwf	sprintf@width+1,w
  8885  0B0D  1903               	btfsc	3,2
  8886  0B0E  2B22               	goto	l4462
  8887  0B0F                     l4456:	
  8888                           
  8889                           ;doprnt.c: 1449: ((*sp++ = (' ')));
  8890  0B0F  3020               	movlw	32
  8891  0B10  00C0               	movwf	??_sprintf
  8892  0B11  084E               	movf	sprintf@sp,w
  8893  0B12  0086               	movwf	6
  8894  0B13  0187               	clrf	7
  8895  0B14  0840               	movf	??_sprintf,w
  8896  0B15  0081               	movwf	1
  8897  0B16  3001               	movlw	1
  8898  0B17  00C0               	movwf	??_sprintf
  8899  0B18  0840               	movf	??_sprintf,w
  8900  0B19  07CE               	addwf	sprintf@sp,f
  8901                           
  8902                           ;doprnt.c: 1450: while(--width);
  8903  0B1A  30FF               	movlw	255
  8904  0B1B  07CC               	addwf	sprintf@width,f
  8905  0B1C  30FF               	movlw	255
  8906  0B1D  3DCD               	addwfc	sprintf@width+1,f
  8907  0B1E  084C               	movf	sprintf@width,w
  8908  0B1F  044D               	iorwf	sprintf@width+1,w
  8909  0B20  1D03               	btfss	3,2
  8910  0B21  2B0F               	goto	l4456
  8911  0B22                     l4462:	
  8912                           
  8913                           ;doprnt.c: 1457: if(flag & 0x03)
  8914  0B22  0849               	movf	sprintf@flag,w
  8915  0B23  3903               	andlw	3
  8916  0B24  1903               	btfsc	3,2
  8917  0B25  2B31               	goto	l4468
  8918                           
  8919                           ;doprnt.c: 1458: ((*sp++ = ('-')));
  8920  0B26  302D               	movlw	45
  8921  0B27  00C0               	movwf	??_sprintf
  8922  0B28  084E               	movf	sprintf@sp,w
  8923  0B29  0086               	movwf	6
  8924  0B2A  0187               	clrf	7
  8925  0B2B  0840               	movf	??_sprintf,w
  8926  0B2C  0081               	movwf	1
  8927  0B2D  3001               	movlw	1
  8928  0B2E  00C0               	movwf	??_sprintf
  8929  0B2F  0840               	movf	??_sprintf,w
  8930  0B30  07CE               	addwf	sprintf@sp,f
  8931  0B31                     l4468:	
  8932                           
  8933                           ;doprnt.c: 1488: };doprnt.c: 1491: prec = c;
  8934  0B31  084F               	movf	sprintf@c,w
  8935  0B32  00C0               	movwf	??_sprintf
  8936  0B33  0840               	movf	??_sprintf,w
  8937  0B34  00C5               	movwf	sprintf@prec
  8938  0B35                     l4476:	
  8939                           ;doprnt.c: 1493: while(prec--) {
  8940                           
  8941  0B35  30FF               	movlw	255
  8942  0B36  00C0               	movwf	??_sprintf
  8943  0B37  0840               	movf	??_sprintf,w
  8944  0B38  07C5               	addwf	sprintf@prec,f
  8945  0B39  0A45               	incf	sprintf@prec,w
  8946  0B3A  1903               	btfsc	3,2
  8947  0B3B  29DA               	goto	l4478
  8948                           
  8949                           ;doprnt.c: 1497: {;doprnt.c: 1508: c = (val / dpowers[prec]) % 10 + '0';
  8950  0B3C  300A               	movlw	10
  8951  0B3D  00A8               	movwf	___lwmod@divisor
  8952  0B3E  3000               	movlw	0
  8953  0B3F  00A9               	movwf	___lwmod@divisor+1
  8954  0B40  0845               	movf	sprintf@prec,w
  8955  0B41  00C0               	movwf	??_sprintf
  8956  0B42  01C1               	clrf	??_sprintf+1
  8957  0B43  35C0               	lslf	??_sprintf,f
  8958  0B44  0DC1               	rlf	??_sprintf+1,f
  8959  0B45  30FF               	movlw	low (_dpowers| (0+32768))
  8960  0B46  0740               	addwf	??_sprintf,w
  8961  0B47  0084               	movwf	4
  8962  0B48  30A0               	movlw	high (_dpowers| (0+32768))
  8963  0B49  3D41               	addwfc	??_sprintf+1,w
  8964  0B4A  0085               	movwf	5
  8965  0B4B  3F00               	moviw [0]fsr0
  8966  0B4C  00A0               	movwf	___lwdiv@divisor
  8967  0B4D  3F01               	moviw [1]fsr0
  8968  0B4E  00A1               	movwf	___lwdiv@divisor+1
  8969  0B4F  084B               	movf	sprintf@val+1,w
  8970  0B50  00A3               	movwf	___lwdiv@dividend+1
  8971  0B51  084A               	movf	sprintf@val,w
  8972  0B52  00A2               	movwf	___lwdiv@dividend
  8973  0B53  319E  26EE  3189   	fcall	___lwdiv
  8974  0B56  0140               	movlb	0	; select bank0
  8975  0B57  0821               	movf	?___lwdiv+1,w
  8976  0B58  00AB               	movwf	___lwmod@dividend+1
  8977  0B59  0820               	movf	?___lwdiv,w
  8978  0B5A  00AA               	movwf	___lwmod@dividend
  8979  0B5B  319E  262D  3189   	fcall	___lwmod
  8980  0B5E  0140               	movlb	0	; select bank0
  8981  0B5F  0828               	movf	?___lwmod,w
  8982  0B60  3E30               	addlw	48
  8983  0B61  00C2               	movwf	??_sprintf+2
  8984  0B62  0842               	movf	??_sprintf+2,w
  8985  0B63  00CF               	movwf	sprintf@c
  8986                           
  8987                           ;doprnt.c: 1542: };doprnt.c: 1543: ((*sp++ = (c)));
  8988  0B64  084F               	movf	sprintf@c,w
  8989  0B65  00C0               	movwf	??_sprintf
  8990  0B66  084E               	movf	sprintf@sp,w
  8991  0B67  0086               	movwf	6
  8992  0B68  0187               	clrf	7
  8993  0B69  0840               	movf	??_sprintf,w
  8994  0B6A  0081               	movwf	1
  8995  0B6B  3001               	movlw	1
  8996  0B6C  00C0               	movwf	??_sprintf
  8997  0B6D  0840               	movf	??_sprintf,w
  8998  0B6E  07CE               	addwf	sprintf@sp,f
  8999  0B6F  2B35               	goto	l4476
  9000  0B70                     l4480:	
  9001                           
  9002                           ;doprnt.c: 1557: *sp = 0;
  9003  0B70  084E               	movf	sprintf@sp,w
  9004  0B71  0086               	movwf	6
  9005  0B72  0187               	clrf	7
  9006  0B73  0181               	clrf	1
  9007  0B74  0008               	return
  9008  0B75                     __end_of_sprintf:	
  9009                           
  9010                           	psect	text14
  9011  1CCB                     __ptext14:	
  9012 ;; *************** function _isdigit *****************
  9013 ;; Defined at:
  9014 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  9015 ;; Parameters:    Size  Location     Type
  9016 ;;  c               1    wreg     unsigned char 
  9017 ;; Auto vars:     Size  Location     Type
  9018 ;;  c               1    1[BANK0 ] unsigned char 
  9019 ;; Return value:  Size  Location     Type
  9020 ;;		None               void
  9021 ;; Registers used:
  9022 ;;		wreg, status,2, status,0
  9023 ;; Tracked objects:
  9024 ;;		On entry : 0/0
  9025 ;;		On exit  : 0/0
  9026 ;;		Unchanged: 0/0
  9027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9029 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9031 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9032 ;;Total ram usage:        2 bytes
  9033 ;; Hardware stack levels used:    1
  9034 ;; Hardware stack levels required when called:    5
  9035 ;; This function calls:
  9036 ;;		Nothing
  9037 ;; This function is called by:
  9038 ;;		_sprintf
  9039 ;; This function uses a non-reentrant model
  9040 ;;
  9041                           
  9042                           
  9043                           ;psect for function _isdigit
  9044  1CCB                     _isdigit:	
  9045                           
  9046                           ;incstack = 0
  9047                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  9048                           ;isdigit@c stored from wreg
  9049  1CCB  0140               	movlb	0	; select bank0
  9050  1CCC  00A1               	movwf	isdigit@c
  9051  1CCD  01A0               	clrf	_isdigit$1762
  9052  1CCE  303A               	movlw	58
  9053  1CCF  0221               	subwf	isdigit@c,w
  9054  1CD0  1803               	skipnc
  9055  1CD1  2CD8               	goto	l3938
  9056  1CD2  3030               	movlw	48
  9057  1CD3  0221               	subwf	isdigit@c,w
  9058  1CD4  1C03               	skipc
  9059  1CD5  2CD8               	goto	l3938
  9060  1CD6  01A0               	clrf	_isdigit$1762
  9061  1CD7  0AA0               	incf	_isdigit$1762,f
  9062  1CD8                     l3938:	
  9063  1CD8  0C20               	rrf	_isdigit$1762,w
  9064  1CD9  0008               	return
  9065  1CDA                     __end_of_isdigit:	
  9066                           
  9067                           	psect	text15
  9068  1D66                     __ptext15:	
  9069 ;; *************** function ___wmul *****************
  9070 ;; Defined at:
  9071 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  9072 ;; Parameters:    Size  Location     Type
  9073 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9074 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9075 ;; Auto vars:     Size  Location     Type
  9076 ;;  product         2    4[BANK0 ] unsigned int 
  9077 ;; Return value:  Size  Location     Type
  9078 ;;                  2    0[BANK0 ] unsigned int 
  9079 ;; Registers used:
  9080 ;;		wreg, status,2, status,0
  9081 ;; Tracked objects:
  9082 ;;		On entry : 0/0
  9083 ;;		On exit  : 0/0
  9084 ;;		Unchanged: 0/0
  9085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9086 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9087 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9089 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9090 ;;Total ram usage:        6 bytes
  9091 ;; Hardware stack levels used:    1
  9092 ;; Hardware stack levels required when called:    5
  9093 ;; This function calls:
  9094 ;;		Nothing
  9095 ;; This function is called by:
  9096 ;;		_sprintf
  9097 ;; This function uses a non-reentrant model
  9098 ;;
  9099                           
  9100                           
  9101                           ;psect for function ___wmul
  9102  1D66                     ___wmul:	
  9103                           
  9104                           ;incstack = 0
  9105                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9106  1D66  0140               	movlb	0	; select bank0
  9107  1D67  01A4               	clrf	___wmul@product
  9108  1D68  01A5               	clrf	___wmul@product+1
  9109  1D69                     l3944:	
  9110  1D69  1C20               	btfss	___wmul@multiplier,0
  9111  1D6A  2D6F               	goto	l869
  9112  1D6B  0822               	movf	___wmul@multiplicand,w
  9113  1D6C  07A4               	addwf	___wmul@product,f
  9114  1D6D  0823               	movf	___wmul@multiplicand+1,w
  9115  1D6E  3DA5               	addwfc	___wmul@product+1,f
  9116  1D6F                     l869:	
  9117  1D6F  3001               	movlw	1
  9118  1D70                     u3935:	
  9119  1D70  35A2               	lslf	___wmul@multiplicand,f
  9120  1D71  0DA3               	rlf	___wmul@multiplicand+1,f
  9121  1D72  0B89               	decfsz	9,f
  9122  1D73  2D70               	goto	u3935
  9123  1D74  3001               	movlw	1
  9124  1D75                     u3945:	
  9125  1D75  36A1               	lsrf	___wmul@multiplier+1,f
  9126  1D76  0CA0               	rrf	___wmul@multiplier,f
  9127  1D77  0B89               	decfsz	9,f
  9128  1D78  2D75               	goto	u3945
  9129  1D79  0820               	movf	___wmul@multiplier,w
  9130  1D7A  0421               	iorwf	___wmul@multiplier+1,w
  9131  1D7B  1D03               	btfss	3,2
  9132  1D7C  2D69               	goto	l3944
  9133  1D7D  0825               	movf	___wmul@product+1,w
  9134  1D7E  00A1               	movwf	?___wmul+1
  9135  1D7F  0824               	movf	___wmul@product,w
  9136  1D80  00A0               	movwf	?___wmul
  9137  1D81  0008               	return
  9138  1D82                     __end_of___wmul:	
  9139                           
  9140                           	psect	text16
  9141  1E2D                     __ptext16:	
  9142 ;; *************** function ___lwmod *****************
  9143 ;; Defined at:
  9144 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  9145 ;; Parameters:    Size  Location     Type
  9146 ;;  divisor         2    8[BANK0 ] unsigned int 
  9147 ;;  dividend        2   10[BANK0 ] unsigned int 
  9148 ;; Auto vars:     Size  Location     Type
  9149 ;;  counter         1   13[BANK0 ] unsigned char 
  9150 ;; Return value:  Size  Location     Type
  9151 ;;                  2    8[BANK0 ] unsigned int 
  9152 ;; Registers used:
  9153 ;;		wreg, status,2, status,0
  9154 ;; Tracked objects:
  9155 ;;		On entry : 0/0
  9156 ;;		On exit  : 0/0
  9157 ;;		Unchanged: 0/0
  9158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9159 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9160 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9161 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9162 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9163 ;;Total ram usage:        6 bytes
  9164 ;; Hardware stack levels used:    1
  9165 ;; Hardware stack levels required when called:    5
  9166 ;; This function calls:
  9167 ;;		Nothing
  9168 ;; This function is called by:
  9169 ;;		_main_menu
  9170 ;;		_sprintf
  9171 ;; This function uses a non-reentrant model
  9172 ;;
  9173                           
  9174                           
  9175                           ;psect for function ___lwmod
  9176  1E2D                     ___lwmod:	
  9177                           
  9178                           ;incstack = 0
  9179                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  9180  1E2D  0140               	movlb	0	; select bank0
  9181  1E2E  0828               	movf	___lwmod@divisor,w
  9182  1E2F  0429               	iorwf	___lwmod@divisor+1,w
  9183  1E30  1903               	btfsc	3,2
  9184  1E31  2E55               	goto	l4094
  9185  1E32  01AD               	clrf	___lwmod@counter
  9186  1E33  0AAD               	incf	___lwmod@counter,f
  9187  1E34                     l4084:	
  9188  1E34  1BA9               	btfsc	___lwmod@divisor+1,7
  9189  1E35  2E40               	goto	l4086
  9190  1E36  3001               	movlw	1
  9191  1E37                     u4305:	
  9192  1E37  35A8               	lslf	___lwmod@divisor,f
  9193  1E38  0DA9               	rlf	___lwmod@divisor+1,f
  9194  1E39  0B89               	decfsz	9,f
  9195  1E3A  2E37               	goto	u4305
  9196  1E3B  3001               	movlw	1
  9197  1E3C  00AC               	movwf	??___lwmod
  9198  1E3D  082C               	movf	??___lwmod,w
  9199  1E3E  07AD               	addwf	___lwmod@counter,f
  9200  1E3F  2E34               	goto	l4084
  9201  1E40                     l4086:	
  9202  1E40  0829               	movf	___lwmod@divisor+1,w
  9203  1E41  022B               	subwf	___lwmod@dividend+1,w
  9204  1E42  1D03               	skipz
  9205  1E43  2E46               	goto	u4325
  9206  1E44  0828               	movf	___lwmod@divisor,w
  9207  1E45  022A               	subwf	___lwmod@dividend,w
  9208  1E46                     u4325:	
  9209  1E46  1C03               	skipc
  9210  1E47  2E4C               	goto	l4090
  9211  1E48  0828               	movf	___lwmod@divisor,w
  9212  1E49  02AA               	subwf	___lwmod@dividend,f
  9213  1E4A  0829               	movf	___lwmod@divisor+1,w
  9214  1E4B  3BAB               	subwfb	___lwmod@dividend+1,f
  9215  1E4C                     l4090:	
  9216  1E4C  3001               	movlw	1
  9217  1E4D                     u4335:	
  9218  1E4D  36A9               	lsrf	___lwmod@divisor+1,f
  9219  1E4E  0CA8               	rrf	___lwmod@divisor,f
  9220  1E4F  0B89               	decfsz	9,f
  9221  1E50  2E4D               	goto	u4335
  9222  1E51  3001               	movlw	1
  9223  1E52  02AD               	subwf	___lwmod@counter,f
  9224  1E53  1D03               	btfss	3,2
  9225  1E54  2E40               	goto	l4086
  9226  1E55                     l4094:	
  9227  1E55  082B               	movf	___lwmod@dividend+1,w
  9228  1E56  00A9               	movwf	?___lwmod+1
  9229  1E57  082A               	movf	___lwmod@dividend,w
  9230  1E58  00A8               	movwf	?___lwmod
  9231  1E59  0008               	return
  9232  1E5A                     __end_of___lwmod:	
  9233                           
  9234                           	psect	text17
  9235  1EEE                     __ptext17:	
  9236 ;; *************** function ___lwdiv *****************
  9237 ;; Defined at:
  9238 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  9239 ;; Parameters:    Size  Location     Type
  9240 ;;  divisor         2    0[BANK0 ] unsigned int 
  9241 ;;  dividend        2    2[BANK0 ] unsigned int 
  9242 ;; Auto vars:     Size  Location     Type
  9243 ;;  quotient        2    5[BANK0 ] unsigned int 
  9244 ;;  counter         1    7[BANK0 ] unsigned char 
  9245 ;; Return value:  Size  Location     Type
  9246 ;;                  2    0[BANK0 ] unsigned int 
  9247 ;; Registers used:
  9248 ;;		wreg, status,2, status,0
  9249 ;; Tracked objects:
  9250 ;;		On entry : 0/0
  9251 ;;		On exit  : 0/0
  9252 ;;		Unchanged: 0/0
  9253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9254 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9255 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9256 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9257 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9258 ;;Total ram usage:        8 bytes
  9259 ;; Hardware stack levels used:    1
  9260 ;; Hardware stack levels required when called:    5
  9261 ;; This function calls:
  9262 ;;		Nothing
  9263 ;; This function is called by:
  9264 ;;		_main_menu
  9265 ;;		_sprintf
  9266 ;; This function uses a non-reentrant model
  9267 ;;
  9268                           
  9269                           
  9270                           ;psect for function ___lwdiv
  9271  1EEE                     ___lwdiv:	
  9272                           
  9273                           ;incstack = 0
  9274                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9275  1EEE  0140               	movlb	0	; select bank0
  9276  1EEF  01A5               	clrf	___lwdiv@quotient
  9277  1EF0  01A6               	clrf	___lwdiv@quotient+1
  9278  1EF1  0820               	movf	___lwdiv@divisor,w
  9279  1EF2  0421               	iorwf	___lwdiv@divisor+1,w
  9280  1EF3  1903               	btfsc	3,2
  9281  1EF4  2F1E               	goto	l4072
  9282  1EF5  01A7               	clrf	___lwdiv@counter
  9283  1EF6  0AA7               	incf	___lwdiv@counter,f
  9284  1EF7                     l4060:	
  9285  1EF7  1BA1               	btfsc	___lwdiv@divisor+1,7
  9286  1EF8  2F03               	goto	l4062
  9287  1EF9  3001               	movlw	1
  9288  1EFA                     u4235:	
  9289  1EFA  35A0               	lslf	___lwdiv@divisor,f
  9290  1EFB  0DA1               	rlf	___lwdiv@divisor+1,f
  9291  1EFC  0B89               	decfsz	9,f
  9292  1EFD  2EFA               	goto	u4235
  9293  1EFE  3001               	movlw	1
  9294  1EFF  00A4               	movwf	??___lwdiv
  9295  1F00  0824               	movf	??___lwdiv,w
  9296  1F01  07A7               	addwf	___lwdiv@counter,f
  9297  1F02  2EF7               	goto	l4060
  9298  1F03                     l4062:	
  9299  1F03  3001               	movlw	1
  9300  1F04                     u4255:	
  9301  1F04  35A5               	lslf	___lwdiv@quotient,f
  9302  1F05  0DA6               	rlf	___lwdiv@quotient+1,f
  9303  1F06  0B89               	decfsz	9,f
  9304  1F07  2F04               	goto	u4255
  9305  1F08  0821               	movf	___lwdiv@divisor+1,w
  9306  1F09  0223               	subwf	___lwdiv@dividend+1,w
  9307  1F0A  1D03               	skipz
  9308  1F0B  2F0E               	goto	u4265
  9309  1F0C  0820               	movf	___lwdiv@divisor,w
  9310  1F0D  0222               	subwf	___lwdiv@dividend,w
  9311  1F0E                     u4265:	
  9312  1F0E  1C03               	skipc
  9313  1F0F  2F15               	goto	l4068
  9314  1F10  0820               	movf	___lwdiv@divisor,w
  9315  1F11  02A2               	subwf	___lwdiv@dividend,f
  9316  1F12  0821               	movf	___lwdiv@divisor+1,w
  9317  1F13  3BA3               	subwfb	___lwdiv@dividend+1,f
  9318  1F14  1425               	bsf	___lwdiv@quotient,0
  9319  1F15                     l4068:	
  9320  1F15  3001               	movlw	1
  9321  1F16                     u4275:	
  9322  1F16  36A1               	lsrf	___lwdiv@divisor+1,f
  9323  1F17  0CA0               	rrf	___lwdiv@divisor,f
  9324  1F18  0B89               	decfsz	9,f
  9325  1F19  2F16               	goto	u4275
  9326  1F1A  3001               	movlw	1
  9327  1F1B  02A7               	subwf	___lwdiv@counter,f
  9328  1F1C  1D03               	btfss	3,2
  9329  1F1D  2F03               	goto	l4062
  9330  1F1E                     l4072:	
  9331  1F1E  0826               	movf	___lwdiv@quotient+1,w
  9332  1F1F  00A1               	movwf	?___lwdiv+1
  9333  1F20  0825               	movf	___lwdiv@quotient,w
  9334  1F21  00A0               	movwf	?___lwdiv
  9335  1F22  0008               	return
  9336  1F23                     __end_of___lwdiv:	
  9337                           
  9338                           	psect	text18
  9339  07EE                     __ptext18:	
  9340 ;; *************** function ___bmul *****************
  9341 ;; Defined at:
  9342 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  9343 ;; Parameters:    Size  Location     Type
  9344 ;;  multiplier      1    wreg     unsigned char 
  9345 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  9346 ;; Auto vars:     Size  Location     Type
  9347 ;;  multiplier      1    3[BANK0 ] unsigned char 
  9348 ;;  product         1    2[BANK0 ] unsigned char 
  9349 ;; Return value:  Size  Location     Type
  9350 ;;                  1    wreg      unsigned char 
  9351 ;; Registers used:
  9352 ;;		wreg, status,2, status,0
  9353 ;; Tracked objects:
  9354 ;;		On entry : 0/0
  9355 ;;		On exit  : 0/0
  9356 ;;		Unchanged: 0/0
  9357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9358 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9359 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9360 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9361 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9362 ;;Total ram usage:        4 bytes
  9363 ;; Hardware stack levels used:    1
  9364 ;; Hardware stack levels required when called:    5
  9365 ;; This function calls:
  9366 ;;		Nothing
  9367 ;; This function is called by:
  9368 ;;		_main_menu
  9369 ;; This function uses a non-reentrant model
  9370 ;;
  9371                           
  9372                           
  9373                           ;psect for function ___bmul
  9374  07EE                     ___bmul:	
  9375                           
  9376                           ;incstack = 0
  9377                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9378                           ;___bmul@multiplier stored from wreg
  9379  07EE  0140               	movlb	0	; select bank0
  9380  07EF  00A3               	movwf	___bmul@multiplier
  9381  07F0  01A2               	clrf	___bmul@product
  9382  07F1                     l4490:	
  9383  07F1  1C23               	btfss	___bmul@multiplier,0
  9384  07F2  2FF7               	goto	l4494
  9385  07F3  0820               	movf	___bmul@multiplicand,w
  9386  07F4  00A1               	movwf	??___bmul
  9387  07F5  0821               	movf	??___bmul,w
  9388  07F6  07A2               	addwf	___bmul@product,f
  9389  07F7                     l4494:	
  9390  07F7  1003               	clrc
  9391  07F8  0DA0               	rlf	___bmul@multiplicand,f
  9392  07F9  1003               	clrc
  9393  07FA  0CA3               	rrf	___bmul@multiplier,f
  9394  07FB  0823               	movf	___bmul@multiplier,w
  9395  07FC  1D03               	btfss	3,2
  9396  07FD  2FF1               	goto	l4490
  9397  07FE  0822               	movf	___bmul@product,w
  9398  07FF  0008               	return
  9399  0800                     __end_of___bmul:	
  9400                           
  9401                           	psect	text19
  9402  109B                     __ptext19:	
  9403 ;; *************** function ___awmod *****************
  9404 ;; Defined at:
  9405 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  9406 ;; Parameters:    Size  Location     Type
  9407 ;;  divisor         2    0[BANK0 ] int 
  9408 ;;  dividend        2    2[BANK0 ] int 
  9409 ;; Auto vars:     Size  Location     Type
  9410 ;;  sign            1    6[BANK0 ] unsigned char 
  9411 ;;  counter         1    5[BANK0 ] unsigned char 
  9412 ;; Return value:  Size  Location     Type
  9413 ;;                  2    0[BANK0 ] int 
  9414 ;; Registers used:
  9415 ;;		wreg, status,2, status,0
  9416 ;; Tracked objects:
  9417 ;;		On entry : 0/0
  9418 ;;		On exit  : 0/0
  9419 ;;		Unchanged: 0/0
  9420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9421 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9422 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9423 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9424 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9425 ;;Total ram usage:        7 bytes
  9426 ;; Hardware stack levels used:    1
  9427 ;; Hardware stack levels required when called:    5
  9428 ;; This function calls:
  9429 ;;		Nothing
  9430 ;; This function is called by:
  9431 ;;		_main_menu
  9432 ;; This function uses a non-reentrant model
  9433 ;;
  9434                           
  9435                           
  9436                           ;psect for function ___awmod
  9437  109B                     ___awmod:	
  9438                           
  9439                           ;incstack = 0
  9440                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9441  109B  0140               	movlb	0	; select bank0
  9442  109C  01A6               	clrf	___awmod@sign
  9443  109D  1FA3               	btfss	___awmod@dividend+1,7
  9444  109E  28A6               	goto	l4554
  9445  109F  09A2               	comf	___awmod@dividend,f
  9446  10A0  09A3               	comf	___awmod@dividend+1,f
  9447  10A1  0AA2               	incf	___awmod@dividend,f
  9448  10A2  1903               	skipnz
  9449  10A3  0AA3               	incf	___awmod@dividend+1,f
  9450  10A4  01A6               	clrf	___awmod@sign
  9451  10A5  0AA6               	incf	___awmod@sign,f
  9452  10A6                     l4554:	
  9453  10A6  1FA1               	btfss	___awmod@divisor+1,7
  9454  10A7  28AD               	goto	l4558
  9455  10A8  09A0               	comf	___awmod@divisor,f
  9456  10A9  09A1               	comf	___awmod@divisor+1,f
  9457  10AA  0AA0               	incf	___awmod@divisor,f
  9458  10AB  1903               	skipnz
  9459  10AC  0AA1               	incf	___awmod@divisor+1,f
  9460  10AD                     l4558:	
  9461  10AD  0820               	movf	___awmod@divisor,w
  9462  10AE  0421               	iorwf	___awmod@divisor+1,w
  9463  10AF  1903               	btfsc	3,2
  9464  10B0  28D4               	goto	l4576
  9465  10B1  01A5               	clrf	___awmod@counter
  9466  10B2  0AA5               	incf	___awmod@counter,f
  9467  10B3                     l4566:	
  9468  10B3  1BA1               	btfsc	___awmod@divisor+1,7
  9469  10B4  28BF               	goto	l4568
  9470  10B5  3001               	movlw	1
  9471  10B6                     u4945:	
  9472  10B6  35A0               	lslf	___awmod@divisor,f
  9473  10B7  0DA1               	rlf	___awmod@divisor+1,f
  9474  10B8  0B89               	decfsz	9,f
  9475  10B9  28B6               	goto	u4945
  9476  10BA  3001               	movlw	1
  9477  10BB  00A4               	movwf	??___awmod
  9478  10BC  0824               	movf	??___awmod,w
  9479  10BD  07A5               	addwf	___awmod@counter,f
  9480  10BE  28B3               	goto	l4566
  9481  10BF                     l4568:	
  9482  10BF  0821               	movf	___awmod@divisor+1,w
  9483  10C0  0223               	subwf	___awmod@dividend+1,w
  9484  10C1  1D03               	skipz
  9485  10C2  28C5               	goto	u4965
  9486  10C3  0820               	movf	___awmod@divisor,w
  9487  10C4  0222               	subwf	___awmod@dividend,w
  9488  10C5                     u4965:	
  9489  10C5  1C03               	skipc
  9490  10C6  28CB               	goto	l4572
  9491  10C7  0820               	movf	___awmod@divisor,w
  9492  10C8  02A2               	subwf	___awmod@dividend,f
  9493  10C9  0821               	movf	___awmod@divisor+1,w
  9494  10CA  3BA3               	subwfb	___awmod@dividend+1,f
  9495  10CB                     l4572:	
  9496  10CB  3001               	movlw	1
  9497  10CC                     u4975:	
  9498  10CC  36A1               	lsrf	___awmod@divisor+1,f
  9499  10CD  0CA0               	rrf	___awmod@divisor,f
  9500  10CE  0B89               	decfsz	9,f
  9501  10CF  28CC               	goto	u4975
  9502  10D0  3001               	movlw	1
  9503  10D1  02A5               	subwf	___awmod@counter,f
  9504  10D2  1D03               	btfss	3,2
  9505  10D3  28BF               	goto	l4568
  9506  10D4                     l4576:	
  9507  10D4  0826               	movf	___awmod@sign,w
  9508  10D5  1903               	btfsc	3,2
  9509  10D6  28DC               	goto	l4580
  9510  10D7  09A2               	comf	___awmod@dividend,f
  9511  10D8  09A3               	comf	___awmod@dividend+1,f
  9512  10D9  0AA2               	incf	___awmod@dividend,f
  9513  10DA  1903               	skipnz
  9514  10DB  0AA3               	incf	___awmod@dividend+1,f
  9515  10DC                     l4580:	
  9516  10DC  0823               	movf	___awmod@dividend+1,w
  9517  10DD  00A1               	movwf	?___awmod+1
  9518  10DE  0822               	movf	___awmod@dividend,w
  9519  10DF  00A0               	movwf	?___awmod
  9520  10E0  0008               	return
  9521  10E1                     __end_of___awmod:	
  9522                           
  9523                           	psect	text20
  9524  125E                     __ptext20:	
  9525 ;; *************** function ___awdiv *****************
  9526 ;; Defined at:
  9527 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  9528 ;; Parameters:    Size  Location     Type
  9529 ;;  divisor         2    0[BANK0 ] int 
  9530 ;;  dividend        2    2[BANK0 ] int 
  9531 ;; Auto vars:     Size  Location     Type
  9532 ;;  quotient        2    7[BANK0 ] int 
  9533 ;;  sign            1    6[BANK0 ] unsigned char 
  9534 ;;  counter         1    5[BANK0 ] unsigned char 
  9535 ;; Return value:  Size  Location     Type
  9536 ;;                  2    0[BANK0 ] int 
  9537 ;; Registers used:
  9538 ;;		wreg, status,2, status,0
  9539 ;; Tracked objects:
  9540 ;;		On entry : 0/0
  9541 ;;		On exit  : 0/0
  9542 ;;		Unchanged: 0/0
  9543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9544 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9545 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9546 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9547 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9548 ;;Total ram usage:        9 bytes
  9549 ;; Hardware stack levels used:    1
  9550 ;; Hardware stack levels required when called:    5
  9551 ;; This function calls:
  9552 ;;		Nothing
  9553 ;; This function is called by:
  9554 ;;		_main_menu
  9555 ;; This function uses a non-reentrant model
  9556 ;;
  9557                           
  9558                           
  9559                           ;psect for function ___awdiv
  9560  125E                     ___awdiv:	
  9561                           
  9562                           ;incstack = 0
  9563                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9564  125E  0140               	movlb	0	; select bank0
  9565  125F  01A6               	clrf	___awdiv@sign
  9566  1260  1FA1               	btfss	___awdiv@divisor+1,7
  9567  1261  2A69               	goto	l4510
  9568  1262  09A0               	comf	___awdiv@divisor,f
  9569  1263  09A1               	comf	___awdiv@divisor+1,f
  9570  1264  0AA0               	incf	___awdiv@divisor,f
  9571  1265  1903               	skipnz
  9572  1266  0AA1               	incf	___awdiv@divisor+1,f
  9573  1267  01A6               	clrf	___awdiv@sign
  9574  1268  0AA6               	incf	___awdiv@sign,f
  9575  1269                     l4510:	
  9576  1269  1FA3               	btfss	___awdiv@dividend+1,7
  9577  126A  2A74               	goto	l4516
  9578  126B  09A2               	comf	___awdiv@dividend,f
  9579  126C  09A3               	comf	___awdiv@dividend+1,f
  9580  126D  0AA2               	incf	___awdiv@dividend,f
  9581  126E  1903               	skipnz
  9582  126F  0AA3               	incf	___awdiv@dividend+1,f
  9583  1270  3001               	movlw	1
  9584  1271  00A4               	movwf	??___awdiv
  9585  1272  0824               	movf	??___awdiv,w
  9586  1273  06A6               	xorwf	___awdiv@sign,f
  9587  1274                     l4516:	
  9588  1274  01A7               	clrf	___awdiv@quotient
  9589  1275  01A8               	clrf	___awdiv@quotient+1
  9590  1276  0820               	movf	___awdiv@divisor,w
  9591  1277  0421               	iorwf	___awdiv@divisor+1,w
  9592  1278  1903               	btfsc	3,2
  9593  1279  2AA3               	goto	l4538
  9594  127A  01A5               	clrf	___awdiv@counter
  9595  127B  0AA5               	incf	___awdiv@counter,f
  9596  127C                     l4526:	
  9597  127C  1BA1               	btfsc	___awdiv@divisor+1,7
  9598  127D  2A88               	goto	l4528
  9599  127E  3001               	movlw	1
  9600  127F                     u4845:	
  9601  127F  35A0               	lslf	___awdiv@divisor,f
  9602  1280  0DA1               	rlf	___awdiv@divisor+1,f
  9603  1281  0B89               	decfsz	9,f
  9604  1282  2A7F               	goto	u4845
  9605  1283  3001               	movlw	1
  9606  1284  00A4               	movwf	??___awdiv
  9607  1285  0824               	movf	??___awdiv,w
  9608  1286  07A5               	addwf	___awdiv@counter,f
  9609  1287  2A7C               	goto	l4526
  9610  1288                     l4528:	
  9611  1288  3001               	movlw	1
  9612  1289                     u4865:	
  9613  1289  35A7               	lslf	___awdiv@quotient,f
  9614  128A  0DA8               	rlf	___awdiv@quotient+1,f
  9615  128B  0B89               	decfsz	9,f
  9616  128C  2A89               	goto	u4865
  9617  128D  0821               	movf	___awdiv@divisor+1,w
  9618  128E  0223               	subwf	___awdiv@dividend+1,w
  9619  128F  1D03               	skipz
  9620  1290  2A93               	goto	u4875
  9621  1291  0820               	movf	___awdiv@divisor,w
  9622  1292  0222               	subwf	___awdiv@dividend,w
  9623  1293                     u4875:	
  9624  1293  1C03               	skipc
  9625  1294  2A9A               	goto	l4534
  9626  1295  0820               	movf	___awdiv@divisor,w
  9627  1296  02A2               	subwf	___awdiv@dividend,f
  9628  1297  0821               	movf	___awdiv@divisor+1,w
  9629  1298  3BA3               	subwfb	___awdiv@dividend+1,f
  9630  1299  1427               	bsf	___awdiv@quotient,0
  9631  129A                     l4534:	
  9632  129A  3001               	movlw	1
  9633  129B                     u4885:	
  9634  129B  36A1               	lsrf	___awdiv@divisor+1,f
  9635  129C  0CA0               	rrf	___awdiv@divisor,f
  9636  129D  0B89               	decfsz	9,f
  9637  129E  2A9B               	goto	u4885
  9638  129F  3001               	movlw	1
  9639  12A0  02A5               	subwf	___awdiv@counter,f
  9640  12A1  1D03               	btfss	3,2
  9641  12A2  2A88               	goto	l4528
  9642  12A3                     l4538:	
  9643  12A3  0826               	movf	___awdiv@sign,w
  9644  12A4  1903               	btfsc	3,2
  9645  12A5  2AAB               	goto	l4542
  9646  12A6  09A7               	comf	___awdiv@quotient,f
  9647  12A7  09A8               	comf	___awdiv@quotient+1,f
  9648  12A8  0AA7               	incf	___awdiv@quotient,f
  9649  12A9  1903               	skipnz
  9650  12AA  0AA8               	incf	___awdiv@quotient+1,f
  9651  12AB                     l4542:	
  9652  12AB  0828               	movf	___awdiv@quotient+1,w
  9653  12AC  00A1               	movwf	?___awdiv+1
  9654  12AD  0827               	movf	___awdiv@quotient,w
  9655  12AE  00A0               	movwf	?___awdiv
  9656  12AF  0008               	return
  9657  12B0                     __end_of___awdiv:	
  9658                           
  9659                           	psect	text21
  9660  1BB1                     __ptext21:	
  9661 ;; *************** function _OLED_scrollDisplayRight *****************
  9662 ;; Defined at:
  9663 ;;		line 135 in file "oled.c"
  9664 ;; Parameters:    Size  Location     Type
  9665 ;;		None
  9666 ;; Auto vars:     Size  Location     Type
  9667 ;;		None
  9668 ;; Return value:  Size  Location     Type
  9669 ;;                  1    wreg      void 
  9670 ;; Registers used:
  9671 ;;		wreg, status,2, status,0, pclath, cstack
  9672 ;; Tracked objects:
  9673 ;;		On entry : 0/0
  9674 ;;		On exit  : 0/0
  9675 ;;		Unchanged: 0/0
  9676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9681 ;;Total ram usage:        0 bytes
  9682 ;; Hardware stack levels used:    1
  9683 ;; Hardware stack levels required when called:    9
  9684 ;; This function calls:
  9685 ;;		_OLED_command
  9686 ;; This function is called by:
  9687 ;;		_main_menu
  9688 ;; This function uses a non-reentrant model
  9689 ;;
  9690                           
  9691                           
  9692                           ;psect for function _OLED_scrollDisplayRight
  9693  1BB1                     _OLED_scrollDisplayRight:	
  9694                           
  9695                           ;oled.c: 137: OLED_command(0x10 | 0x08 | 0x04);
  9696                           
  9697                           ;incstack = 0
  9698                           ; Regs used in _OLED_scrollDisplayRight: [wreg+status,2+status,0+pclath+cstack]
  9699  1BB1  301C               	movlw	28
  9700  1BB2  319C  2437         	fcall	_OLED_command
  9701  1BB4  0008               	return
  9702  1BB5                     __end_of_OLED_scrollDisplayRight:	
  9703                           
  9704                           	psect	text22
  9705  1BAD                     __ptext22:	
  9706 ;; *************** function _OLED_scrollDisplayLeft *****************
  9707 ;; Defined at:
  9708 ;;		line 130 in file "oled.c"
  9709 ;; Parameters:    Size  Location     Type
  9710 ;;		None
  9711 ;; Auto vars:     Size  Location     Type
  9712 ;;		None
  9713 ;; Return value:  Size  Location     Type
  9714 ;;                  1    wreg      void 
  9715 ;; Registers used:
  9716 ;;		wreg, status,2, status,0, pclath, cstack
  9717 ;; Tracked objects:
  9718 ;;		On entry : 0/0
  9719 ;;		On exit  : 0/0
  9720 ;;		Unchanged: 0/0
  9721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9726 ;;Total ram usage:        0 bytes
  9727 ;; Hardware stack levels used:    1
  9728 ;; Hardware stack levels required when called:    9
  9729 ;; This function calls:
  9730 ;;		_OLED_command
  9731 ;; This function is called by:
  9732 ;;		_main_menu
  9733 ;; This function uses a non-reentrant model
  9734 ;;
  9735                           
  9736                           
  9737                           ;psect for function _OLED_scrollDisplayLeft
  9738  1BAD                     _OLED_scrollDisplayLeft:	
  9739                           
  9740                           ;oled.c: 132: OLED_command(0x10 | 0x08 | 0x00);
  9741                           
  9742                           ;incstack = 0
  9743                           ; Regs used in _OLED_scrollDisplayLeft: [wreg+status,2+status,0+pclath+cstack]
  9744  1BAD  3018               	movlw	24
  9745  1BAE  319C  2437         	fcall	_OLED_command
  9746  1BB0  0008               	return
  9747  1BB1                     __end_of_OLED_scrollDisplayLeft:	
  9748                           
  9749                           	psect	text23
  9750  105A                     __ptext23:	
  9751 ;; *************** function _log10 *****************
  9752 ;; Defined at:
  9753 ;;		line 39 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\log.c"
  9754 ;; Parameters:    Size  Location     Type
  9755 ;;  x               4   37[BANK1 ] void 
  9756 ;; Auto vars:     Size  Location     Type
  9757 ;;		None
  9758 ;; Return value:  Size  Location     Type
  9759 ;;                  4   37[BANK1 ] void 
  9760 ;; Registers used:
  9761 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9762 ;; Tracked objects:
  9763 ;;		On entry : 0/0
  9764 ;;		On exit  : 0/0
  9765 ;;		Unchanged: 0/0
  9766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9767 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9768 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9770 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9771 ;;Total ram usage:        8 bytes
  9772 ;; Hardware stack levels used:    1
  9773 ;; Hardware stack levels required when called:    9
  9774 ;; This function calls:
  9775 ;;		___flmul
  9776 ;;		_log
  9777 ;; This function is called by:
  9778 ;;		_main
  9779 ;; This function uses a non-reentrant model
  9780 ;;
  9781                           
  9782                           
  9783                           ;psect for function _log10
  9784  105A                     _log10:	
  9785                           
  9786                           ;incstack = 0
  9787                           ; Regs used in _log10: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9788  105A  0141               	movlb	1	; select bank1
  9789  105B  0848               	movf	(log10@x+3)^(0+128),w
  9790  105C  00C1               	movwf	(log@x+3)^(0+128)
  9791  105D  0847               	movf	(log10@x+2)^(0+128),w
  9792  105E  00C0               	movwf	(log@x+2)^(0+128)
  9793  105F  0846               	movf	(log10@x+1)^(0+128),w
  9794  1060  00BF               	movwf	(log@x+1)^(0+128)
  9795  1061  0845               	movf	log10@x^(0+128),w
  9796  1062  00BE               	movwf	log@x^(0+128)
  9797  1063  3196  26E6  3190   	fcall	_log
  9798  1066  0141               	movlb	1	; select bank1
  9799  1067  0841               	movf	(?_log+3)^(0+128),w
  9800  1068  00CC               	movwf	(_log10$2074+3)^(0+128)
  9801  1069  0840               	movf	(?_log+2)^(0+128),w
  9802  106A  00CB               	movwf	(_log10$2074+2)^(0+128)
  9803  106B  083F               	movf	(?_log+1)^(0+128),w
  9804  106C  00CA               	movwf	(_log10$2074+1)^(0+128)
  9805  106D  083E               	movf	?_log^(0+128),w
  9806  106E  00C9               	movwf	_log10$2074^(0+128)
  9807  106F  303E               	movlw	62
  9808  1070  0140               	movlb	0	; select bank0
  9809  1071  00B6               	movwf	___flmul@b+3
  9810  1072  30DE               	movlw	222
  9811  1073  00B5               	movwf	___flmul@b+2
  9812  1074  305B               	movlw	91
  9813  1075  00B4               	movwf	___flmul@b+1
  9814  1076  30D9               	movlw	217
  9815  1077  00B3               	movwf	___flmul@b
  9816  1078  0141               	movlb	1	; select bank1
  9817  1079  084C               	movf	(_log10$2074+3)^(0+128),w
  9818  107A  0140               	movlb	0	; select bank0
  9819  107B  00BA               	movwf	___flmul@a+3
  9820  107C  0141               	movlb	1	; select bank1
  9821  107D  084B               	movf	(_log10$2074+2)^(0+128),w
  9822  107E  0140               	movlb	0	; select bank0
  9823  107F  00B9               	movwf	___flmul@a+2
  9824  1080  0141               	movlb	1	; select bank1
  9825  1081  084A               	movf	(_log10$2074+1)^(0+128),w
  9826  1082  0140               	movlb	0	; select bank0
  9827  1083  00B8               	movwf	___flmul@a+1
  9828  1084  0141               	movlb	1	; select bank1
  9829  1085  0849               	movf	_log10$2074^(0+128),w
  9830  1086  0140               	movlb	0	; select bank0
  9831  1087  00B7               	movwf	___flmul@a
  9832  1088  318B  2375         	fcall	___flmul
  9833  108A  0140               	movlb	0	; select bank0
  9834  108B  0836               	movf	?___flmul+3,w
  9835  108C  0141               	movlb	1	; select bank1
  9836  108D  00C8               	movwf	(?_log10+3)^(0+128)
  9837  108E  0140               	movlb	0	; select bank0
  9838  108F  0835               	movf	?___flmul+2,w
  9839  1090  0141               	movlb	1	; select bank1
  9840  1091  00C7               	movwf	(?_log10+2)^(0+128)
  9841  1092  0140               	movlb	0	; select bank0
  9842  1093  0834               	movf	?___flmul+1,w
  9843  1094  0141               	movlb	1	; select bank1
  9844  1095  00C6               	movwf	(?_log10+1)^(0+128)
  9845  1096  0140               	movlb	0	; select bank0
  9846  1097  0833               	movf	?___flmul,w
  9847  1098  0141               	movlb	1	; select bank1
  9848  1099  00C5               	movwf	?_log10^(0+128)
  9849  109A  0008               	return
  9850  109B                     __end_of_log10:	
  9851                           
  9852                           	psect	text24
  9853  16E6                     __ptext24:	
  9854 ;; *************** function _log *****************
  9855 ;; Defined at:
  9856 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\log.c"
  9857 ;; Parameters:    Size  Location     Type
  9858 ;;  x               4   30[BANK1 ] void 
  9859 ;; Auto vars:     Size  Location     Type
  9860 ;;  exponent        2   35[BANK1 ] int 
  9861 ;; Return value:  Size  Location     Type
  9862 ;;                  4   30[BANK1 ] int 
  9863 ;; Registers used:
  9864 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9865 ;; Tracked objects:
  9866 ;;		On entry : 0/0
  9867 ;;		On exit  : 0/0
  9868 ;;		Unchanged: 0/0
  9869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9870 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9871 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9872 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9873 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9874 ;;Total ram usage:        7 bytes
  9875 ;; Hardware stack levels used:    1
  9876 ;; Hardware stack levels required when called:    8
  9877 ;; This function calls:
  9878 ;;		___fladd
  9879 ;;		___fleq
  9880 ;;		___flge
  9881 ;;		___flmul
  9882 ;;		___xxtofl
  9883 ;;		_eval_poly
  9884 ;;		_frexp
  9885 ;; This function is called by:
  9886 ;;		_log10
  9887 ;; This function uses a non-reentrant model
  9888 ;;
  9889                           
  9890                           
  9891                           ;psect for function _log
  9892  16E6                     _log:	
  9893                           
  9894                           ;incstack = 0
  9895                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9896  16E6  0141               	movlb	1	; select bank1
  9897  16E7  0841               	movf	(log@x+3)^(0+128),w
  9898  16E8  0140               	movlb	0	; select bank0
  9899  16E9  00A3               	movwf	___flge@ff1+3
  9900  16EA  0141               	movlb	1	; select bank1
  9901  16EB  0840               	movf	(log@x+2)^(0+128),w
  9902  16EC  0140               	movlb	0	; select bank0
  9903  16ED  00A2               	movwf	___flge@ff1+2
  9904  16EE  0141               	movlb	1	; select bank1
  9905  16EF  083F               	movf	(log@x+1)^(0+128),w
  9906  16F0  0140               	movlb	0	; select bank0
  9907  16F1  00A1               	movwf	___flge@ff1+1
  9908  16F2  0141               	movlb	1	; select bank1
  9909  16F3  083E               	movf	log@x^(0+128),w
  9910  16F4  0140               	movlb	0	; select bank0
  9911  16F5  00A0               	movwf	___flge@ff1
  9912  16F6  3000               	movlw	0
  9913  16F7  00A7               	movwf	___flge@ff2+3
  9914  16F8  3000               	movlw	0
  9915  16F9  00A6               	movwf	___flge@ff2+2
  9916  16FA  3000               	movlw	0
  9917  16FB  00A5               	movwf	___flge@ff2+1
  9918  16FC  3000               	movlw	0
  9919  16FD  00A4               	movwf	___flge@ff2
  9920  16FE  3193  23CC  3196   	fcall	___flge
  9921  1701  1803               	btfsc	3,0
  9922  1702  2F12               	goto	l4596
  9923  1703  3021               	movlw	33
  9924  1704  0142               	movlb	2	; select bank2
  9925  1705  00D3               	movwf	_errno^(0+256)
  9926  1706  3000               	movlw	0
  9927  1707  00D4               	movwf	(_errno^(0+256)+1)
  9928  1708  3000               	movlw	0
  9929  1709  0141               	movlb	1	; select bank1
  9930  170A  00C1               	movwf	(?_log+3)^(0+128)
  9931  170B  3000               	movlw	0
  9932  170C  00C0               	movwf	(?_log+2)^(0+128)
  9933  170D  3000               	movlw	0
  9934  170E  00BF               	movwf	(?_log+1)^(0+128)
  9935  170F  3000               	movlw	0
  9936  1710  00BE               	movwf	?_log^(0+128)
  9937  1711  0008               	return
  9938  1712                     l4596:	
  9939  1712  0141               	movlb	1	; select bank1
  9940  1713  0841               	movf	(log@x+3)^(0+128),w
  9941  1714  0140               	movlb	0	; select bank0
  9942  1715  00A3               	movwf	___fleq@ff1+3
  9943  1716  0141               	movlb	1	; select bank1
  9944  1717  0840               	movf	(log@x+2)^(0+128),w
  9945  1718  0140               	movlb	0	; select bank0
  9946  1719  00A2               	movwf	___fleq@ff1+2
  9947  171A  0141               	movlb	1	; select bank1
  9948  171B  083F               	movf	(log@x+1)^(0+128),w
  9949  171C  0140               	movlb	0	; select bank0
  9950  171D  00A1               	movwf	___fleq@ff1+1
  9951  171E  0141               	movlb	1	; select bank1
  9952  171F  083E               	movf	log@x^(0+128),w
  9953  1720  0140               	movlb	0	; select bank0
  9954  1721  00A0               	movwf	___fleq@ff1
  9955  1722  3000               	movlw	0
  9956  1723  00A7               	movwf	___fleq@ff2+3
  9957  1724  3000               	movlw	0
  9958  1725  00A6               	movwf	___fleq@ff2+2
  9959  1726  3000               	movlw	0
  9960  1727  00A5               	movwf	___fleq@ff2+1
  9961  1728  3000               	movlw	0
  9962  1729  00A4               	movwf	___fleq@ff2
  9963  172A  3190  20E1  3196   	fcall	___fleq
  9964  172D  1C03               	btfss	3,0
  9965  172E  2F3E               	goto	l4602
  9966  172F  3022               	movlw	34
  9967  1730  0142               	movlb	2	; select bank2
  9968  1731  00D3               	movwf	_errno^(0+256)
  9969  1732  3000               	movlw	0
  9970  1733  00D4               	movwf	(_errno^(0+256)+1)
  9971  1734  3000               	movlw	0
  9972  1735  0141               	movlb	1	; select bank1
  9973  1736  00C1               	movwf	(?_log+3)^(0+128)
  9974  1737  3000               	movlw	0
  9975  1738  00C0               	movwf	(?_log+2)^(0+128)
  9976  1739  3000               	movlw	0
  9977  173A  00BF               	movwf	(?_log+1)^(0+128)
  9978  173B  3000               	movlw	0
  9979  173C  00BE               	movwf	?_log^(0+128)
  9980  173D  0008               	return
  9981  173E                     l4602:	
  9982  173E  30BF               	movlw	191
  9983  173F  0140               	movlb	0	; select bank0
  9984  1740  00EA               	movwf	___fladd@b+3
  9985  1741  3080               	movlw	128
  9986  1742  00E9               	movwf	___fladd@b+2
  9987  1743  3000               	movlw	0
  9988  1744  00E8               	movwf	___fladd@b+1
  9989  1745  3000               	movlw	0
  9990  1746  00E7               	movwf	___fladd@b
  9991  1747  3040               	movlw	64
  9992  1748  00B6               	movwf	___flmul@b+3
  9993  1749  3000               	movlw	0
  9994  174A  00B5               	movwf	___flmul@b+2
  9995  174B  3000               	movlw	0
  9996  174C  00B4               	movwf	___flmul@b+1
  9997  174D  3000               	movlw	0
  9998  174E  00B3               	movwf	___flmul@b
  9999  174F  30C3               	movlw	(low (log@exponent| 0))& (0+255)
 10000  1750  0141               	movlb	1	; select bank1
 10001  1751  00C2               	movwf	??_log^(0+128)
 10002  1752  0842               	movf	??_log^(0+128),w
 10003  1753  0140               	movlb	0	; select bank0
 10004  1754  00B0               	movwf	frexp@eptr
 10005  1755  0141               	movlb	1	; select bank1
 10006  1756  0841               	movf	(log@x+3)^(0+128),w
 10007  1757  0140               	movlb	0	; select bank0
 10008  1758  00AF               	movwf	frexp@value+3
 10009  1759  0141               	movlb	1	; select bank1
 10010  175A  0840               	movf	(log@x+2)^(0+128),w
 10011  175B  0140               	movlb	0	; select bank0
 10012  175C  00AE               	movwf	frexp@value+2
 10013  175D  0141               	movlb	1	; select bank1
 10014  175E  083F               	movf	(log@x+1)^(0+128),w
 10015  175F  0140               	movlb	0	; select bank0
 10016  1760  00AD               	movwf	frexp@value+1
 10017  1761  0141               	movlb	1	; select bank1
 10018  1762  083E               	movf	log@x^(0+128),w
 10019  1763  0140               	movlb	0	; select bank0
 10020  1764  00AC               	movwf	frexp@value
 10021  1765  3192  220E  3196   	fcall	_frexp
 10022  1768  0140               	movlb	0	; select bank0
 10023  1769  082F               	movf	?_frexp+3,w
 10024  176A  00BA               	movwf	___flmul@a+3
 10025  176B  082E               	movf	?_frexp+2,w
 10026  176C  00B9               	movwf	___flmul@a+2
 10027  176D  082D               	movf	?_frexp+1,w
 10028  176E  00B8               	movwf	___flmul@a+1
 10029  176F  082C               	movf	?_frexp,w
 10030  1770  00B7               	movwf	___flmul@a
 10031  1771  318B  2375  3196   	fcall	___flmul
 10032  1774  0140               	movlb	0	; select bank0
 10033  1775  0836               	movf	?___flmul+3,w
 10034  1776  00EE               	movwf	___fladd@a+3
 10035  1777  0835               	movf	?___flmul+2,w
 10036  1778  00ED               	movwf	___fladd@a+2
 10037  1779  0834               	movf	?___flmul+1,w
 10038  177A  00EC               	movwf	___fladd@a+1
 10039  177B  0833               	movf	?___flmul,w
 10040  177C  00EB               	movwf	___fladd@a
 10041  177D  318D  25A1  3196   	fcall	___fladd
 10042  1780  0140               	movlb	0	; select bank0
 10043  1781  086A               	movf	?___fladd+3,w
 10044  1782  0141               	movlb	1	; select bank1
 10045  1783  00C1               	movwf	(log@x+3)^(0+128)
 10046  1784  0140               	movlb	0	; select bank0
 10047  1785  0869               	movf	?___fladd+2,w
 10048  1786  0141               	movlb	1	; select bank1
 10049  1787  00C0               	movwf	(log@x+2)^(0+128)
 10050  1788  0140               	movlb	0	; select bank0
 10051  1789  0868               	movf	?___fladd+1,w
 10052  178A  0141               	movlb	1	; select bank1
 10053  178B  00BF               	movwf	(log@x+1)^(0+128)
 10054  178C  0140               	movlb	0	; select bank0
 10055  178D  0867               	movf	?___fladd,w
 10056  178E  0141               	movlb	1	; select bank1
 10057  178F  00BE               	movwf	log@x^(0+128)
 10058  1790  30FF               	movlw	255
 10059  1791  07C3               	addwf	log@exponent^(0+128),f
 10060  1792  30FF               	movlw	255
 10061  1793  3DC4               	addwfc	(log@exponent+1)^(0+128),f
 10062  1794  0841               	movf	(log@x+3)^(0+128),w
 10063  1795  00AF               	movwf	(eval_poly@x+3)^(0+128)
 10064  1796  0840               	movf	(log@x+2)^(0+128),w
 10065  1797  00AE               	movwf	(eval_poly@x+2)^(0+128)
 10066  1798  083F               	movf	(log@x+1)^(0+128),w
 10067  1799  00AD               	movwf	(eval_poly@x+1)^(0+128)
 10068  179A  083E               	movf	log@x^(0+128),w
 10069  179B  00AC               	movwf	eval_poly@x^(0+128)
 10070  179C  3059               	movlw	low (log@coeff| (0+32768))
 10071  179D  00B0               	movwf	eval_poly@d^(0+128)
 10072  179E  30A0               	movlw	high (log@coeff| (0+32768))
 10073  179F  00B1               	movwf	(eval_poly@d^(0+128)+1)
 10074  17A0  3008               	movlw	8
 10075  17A1  00B2               	movwf	eval_poly@n^(0+128)
 10076  17A2  3000               	movlw	0
 10077  17A3  00B3               	movwf	(eval_poly@n^(0+128)+1)
 10078  17A4  3194  24D3  3196   	fcall	_eval_poly
 10079  17A7  0141               	movlb	1	; select bank1
 10080  17A8  082F               	movf	(?_eval_poly+3)^(0+128),w
 10081  17A9  00C1               	movwf	(log@x+3)^(0+128)
 10082  17AA  082E               	movf	(?_eval_poly+2)^(0+128),w
 10083  17AB  00C0               	movwf	(log@x+2)^(0+128)
 10084  17AC  082D               	movf	(?_eval_poly+1)^(0+128),w
 10085  17AD  00BF               	movwf	(log@x+1)^(0+128)
 10086  17AE  082C               	movf	?_eval_poly^(0+128),w
 10087  17AF  00BE               	movwf	log@x^(0+128)
 10088  17B0  0841               	movf	(log@x+3)^(0+128),w
 10089  17B1  0140               	movlb	0	; select bank0
 10090  17B2  00EA               	movwf	___fladd@b+3
 10091  17B3  0141               	movlb	1	; select bank1
 10092  17B4  0840               	movf	(log@x+2)^(0+128),w
 10093  17B5  0140               	movlb	0	; select bank0
 10094  17B6  00E9               	movwf	___fladd@b+2
 10095  17B7  0141               	movlb	1	; select bank1
 10096  17B8  083F               	movf	(log@x+1)^(0+128),w
 10097  17B9  0140               	movlb	0	; select bank0
 10098  17BA  00E8               	movwf	___fladd@b+1
 10099  17BB  0141               	movlb	1	; select bank1
 10100  17BC  083E               	movf	log@x^(0+128),w
 10101  17BD  0140               	movlb	0	; select bank0
 10102  17BE  00E7               	movwf	___fladd@b
 10103  17BF  303F               	movlw	63
 10104  17C0  00B6               	movwf	___flmul@b+3
 10105  17C1  3031               	movlw	49
 10106  17C2  00B5               	movwf	___flmul@b+2
 10107  17C3  3072               	movlw	114
 10108  17C4  00B4               	movwf	___flmul@b+1
 10109  17C5  3018               	movlw	24
 10110  17C6  00B3               	movwf	___flmul@b
 10111  17C7  0141               	movlb	1	; select bank1
 10112  17C8  0843               	movf	log@exponent^(0+128),w
 10113  17C9  0140               	movlb	0	; select bank0
 10114  17CA  00A0               	movwf	___xxtofl@val
 10115  17CB  0141               	movlb	1	; select bank1
 10116  17CC  0844               	movf	(log@exponent+1)^(0+128),w
 10117  17CD  0140               	movlb	0	; select bank0
 10118  17CE  00A1               	movwf	___xxtofl@val+1
 10119  17CF  0D89               	rlf	9,f
 10120  17D0  3B89               	subwfb	9,f
 10121  17D1  0989               	comf	9,f
 10122  17D2  00A2               	movwf	___xxtofl@val+2
 10123  17D3  00A3               	movwf	___xxtofl@val+3
 10124  17D4  3001               	movlw	1
 10125  17D5  3195  2567  3196   	fcall	___xxtofl
 10126  17D8  0140               	movlb	0	; select bank0
 10127  17D9  0823               	movf	?___xxtofl+3,w
 10128  17DA  00BA               	movwf	___flmul@a+3
 10129  17DB  0822               	movf	?___xxtofl+2,w
 10130  17DC  00B9               	movwf	___flmul@a+2
 10131  17DD  0821               	movf	?___xxtofl+1,w
 10132  17DE  00B8               	movwf	___flmul@a+1
 10133  17DF  0820               	movf	?___xxtofl,w
 10134  17E0  00B7               	movwf	___flmul@a
 10135  17E1  318B  2375  3196   	fcall	___flmul
 10136  17E4  0140               	movlb	0	; select bank0
 10137  17E5  0836               	movf	?___flmul+3,w
 10138  17E6  00EE               	movwf	___fladd@a+3
 10139  17E7  0835               	movf	?___flmul+2,w
 10140  17E8  00ED               	movwf	___fladd@a+2
 10141  17E9  0834               	movf	?___flmul+1,w
 10142  17EA  00EC               	movwf	___fladd@a+1
 10143  17EB  0833               	movf	?___flmul,w
 10144  17EC  00EB               	movwf	___fladd@a
 10145  17ED  318D  25A1         	fcall	___fladd
 10146  17EF  0140               	movlb	0	; select bank0
 10147  17F0  086A               	movf	?___fladd+3,w
 10148  17F1  0141               	movlb	1	; select bank1
 10149  17F2  00C1               	movwf	(?_log+3)^(0+128)
 10150  17F3  0140               	movlb	0	; select bank0
 10151  17F4  0869               	movf	?___fladd+2,w
 10152  17F5  0141               	movlb	1	; select bank1
 10153  17F6  00C0               	movwf	(?_log+2)^(0+128)
 10154  17F7  0140               	movlb	0	; select bank0
 10155  17F8  0868               	movf	?___fladd+1,w
 10156  17F9  0141               	movlb	1	; select bank1
 10157  17FA  00BF               	movwf	(?_log+1)^(0+128)
 10158  17FB  0140               	movlb	0	; select bank0
 10159  17FC  0867               	movf	?___fladd,w
 10160  17FD  0141               	movlb	1	; select bank1
 10161  17FE  00BE               	movwf	?_log^(0+128)
 10162  17FF  0008               	return
 10163  1800                     __end_of_log:	
 10164                           
 10165                           	psect	text25
 10166  120E                     __ptext25:	
 10167 ;; *************** function _frexp *****************
 10168 ;; Defined at:
 10169 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\frexp.c"
 10170 ;; Parameters:    Size  Location     Type
 10171 ;;  value           4   12[BANK0 ] int 
 10172 ;;  eptr            1   16[BANK0 ] PTR int 
 10173 ;;		 -> trunc@expon(2), log@exponent(2), 
 10174 ;; Auto vars:     Size  Location     Type
 10175 ;;		None
 10176 ;; Return value:  Size  Location     Type
 10177 ;;                  4   12[BANK0 ] PTR int 
 10178 ;; Registers used:
 10179 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10180 ;; Tracked objects:
 10181 ;;		On entry : 0/0
 10182 ;;		On exit  : 0/0
 10183 ;;		Unchanged: 0/0
 10184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10185 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10187 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10188 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10189 ;;Total ram usage:        7 bytes
 10190 ;; Hardware stack levels used:    1
 10191 ;; Hardware stack levels required when called:    6
 10192 ;; This function calls:
 10193 ;;		___fleq
 10194 ;; This function is called by:
 10195 ;;		_log
 10196 ;;		_trunc
 10197 ;; This function uses a non-reentrant model
 10198 ;;
 10199                           
 10200                           
 10201                           ;psect for function _frexp
 10202  120E                     _frexp:	
 10203                           
 10204                           ;incstack = 0
 10205                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10206  120E  0140               	movlb	0	; select bank0
 10207  120F  082F               	movf	frexp@value+3,w
 10208  1210  00A3               	movwf	___fleq@ff1+3
 10209  1211  082E               	movf	frexp@value+2,w
 10210  1212  00A2               	movwf	___fleq@ff1+2
 10211  1213  082D               	movf	frexp@value+1,w
 10212  1214  00A1               	movwf	___fleq@ff1+1
 10213  1215  082C               	movf	frexp@value,w
 10214  1216  00A0               	movwf	___fleq@ff1
 10215  1217  3000               	movlw	0
 10216  1218  00A7               	movwf	___fleq@ff2+3
 10217  1219  3000               	movlw	0
 10218  121A  00A6               	movwf	___fleq@ff2+2
 10219  121B  3000               	movlw	0
 10220  121C  00A5               	movwf	___fleq@ff2+1
 10221  121D  3000               	movlw	0
 10222  121E  00A4               	movwf	___fleq@ff2
 10223  121F  3190  20E1  3192   	fcall	___fleq
 10224  1222  1C03               	btfss	3,0
 10225  1223  2A34               	goto	l4150
 10226  1224  0140               	movlb	0	; select bank0
 10227  1225  0830               	movf	frexp@eptr,w
 10228  1226  0086               	movwf	6
 10229  1227  0187               	clrf	7
 10230  1228  3000               	movlw	0
 10231  1229  3FC0               	movwi [0]fsr1
 10232  122A  3FC1               	movwi [1]fsr1
 10233  122B  3000               	movlw	0
 10234  122C  00AF               	movwf	?_frexp+3
 10235  122D  3000               	movlw	0
 10236  122E  00AE               	movwf	?_frexp+2
 10237  122F  3000               	movlw	0
 10238  1230  00AD               	movwf	?_frexp+1
 10239  1231  3000               	movlw	0
 10240  1232  00AC               	movwf	?_frexp
 10241  1233  0008               	return
 10242  1234                     l4150:	
 10243  1234  0140               	movlb	0	; select bank0
 10244  1235  082F               	movf	frexp@value+3,w
 10245  1236  397F               	andlw	127
 10246  1237  00B1               	movwf	??_frexp
 10247  1238  01B2               	clrf	??_frexp+1
 10248  1239  35B1               	lslf	??_frexp,f
 10249  123A  0DB2               	rlf	??_frexp+1,f
 10250  123B  0830               	movf	frexp@eptr,w
 10251  123C  0086               	movwf	6
 10252  123D  0187               	clrf	7
 10253  123E  0831               	movf	??_frexp,w
 10254  123F  3FC0               	movwi [0]fsr1
 10255  1240  0832               	movf	??_frexp+1,w
 10256  1241  3FC1               	movwi [1]fsr1
 10257  1242  0D2E               	rlf	frexp@value+2,w
 10258  1243  0D2E               	rlf	frexp@value+2,w
 10259  1244  3901               	andlw	1
 10260  1245  00B1               	movwf	??_frexp
 10261  1246  01B2               	clrf	??_frexp+1
 10262  1247  0830               	movf	frexp@eptr,w
 10263  1248  0086               	movwf	6
 10264  1249  0187               	clrf	7
 10265  124A  0831               	movf	??_frexp,w
 10266  124B  0481               	iorwf	1,f
 10267  124C  3141               	addfsr 1,1
 10268  124D  0832               	movf	??_frexp+1,w
 10269  124E  0481               	iorwf	1,f
 10270  124F  0830               	movf	frexp@eptr,w
 10271  1250  0086               	movwf	6
 10272  1251  0187               	clrf	7
 10273  1252  3082               	movlw	130
 10274  1253  0781               	addwf	1,f
 10275  1254  3141               	addfsr 1,1
 10276  1255  30FF               	movlw	255
 10277  1256  3D81               	addwfc	1,f
 10278  1257  317F               	addfsr 1,-1
 10279  1258  082F               	movf	frexp@value+3,w
 10280  1259  3980               	andlw	-128
 10281  125A  383F               	iorlw	63
 10282  125B  00AF               	movwf	frexp@value+3
 10283  125C  13AE               	bcf	frexp@value+2,7
 10284  125D  0008               	return
 10285  125E                     __end_of_frexp:	
 10286                           
 10287                           	psect	text26
 10288  10E1                     __ptext26:	
 10289 ;; *************** function ___fleq *****************
 10290 ;; Defined at:
 10291 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
 10292 ;; Parameters:    Size  Location     Type
 10293 ;;  ff1             4    0[BANK0 ] PTR int 
 10294 ;;  ff2             4    4[BANK0 ] PTR int 
 10295 ;; Auto vars:     Size  Location     Type
 10296 ;;		None
 10297 ;; Return value:  Size  Location     Type
 10298 ;;		None               void
 10299 ;; Registers used:
 10300 ;;		wreg, status,2, status,0
 10301 ;; Tracked objects:
 10302 ;;		On entry : 0/0
 10303 ;;		On exit  : 0/0
 10304 ;;		Unchanged: 0/0
 10305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10306 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10308 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10309 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10310 ;;Total ram usage:       12 bytes
 10311 ;; Hardware stack levels used:    1
 10312 ;; Hardware stack levels required when called:    5
 10313 ;; This function calls:
 10314 ;;		Nothing
 10315 ;; This function is called by:
 10316 ;;		_log
 10317 ;;		_frexp
 10318 ;; This function uses a non-reentrant model
 10319 ;;
 10320                           
 10321                           
 10322                           ;psect for function ___fleq
 10323  10E1                     ___fleq:	
 10324                           
 10325                           ;incstack = 0
 10326                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 10327  10E1  3000               	movlw	0
 10328  10E2  0140               	movlb	0	; select bank0
 10329  10E3  0520               	andwf	___fleq@ff1,w
 10330  10E4  00A8               	movwf	??___fleq
 10331  10E5  3000               	movlw	0
 10332  10E6  0521               	andwf	___fleq@ff1+1,w
 10333  10E7  00A9               	movwf	??___fleq+1
 10334  10E8  3080               	movlw	128
 10335  10E9  0522               	andwf	___fleq@ff1+2,w
 10336  10EA  00AA               	movwf	??___fleq+2
 10337  10EB  307F               	movlw	127
 10338  10EC  0523               	andwf	___fleq@ff1+3,w
 10339  10ED  00AB               	movwf	??___fleq+3
 10340  10EE  082B               	movf	??___fleq+3,w
 10341  10EF  042A               	iorwf	??___fleq+2,w
 10342  10F0  0429               	iorwf	??___fleq+1,w
 10343  10F1  0428               	iorwf	??___fleq,w
 10344  10F2  1D03               	skipz
 10345  10F3  28FC               	goto	l1038
 10346  10F4  3000               	movlw	0
 10347  10F5  00A3               	movwf	___fleq@ff1+3
 10348  10F6  3000               	movlw	0
 10349  10F7  00A2               	movwf	___fleq@ff1+2
 10350  10F8  3000               	movlw	0
 10351  10F9  00A1               	movwf	___fleq@ff1+1
 10352  10FA  3000               	movlw	0
 10353  10FB  00A0               	movwf	___fleq@ff1
 10354  10FC                     l1038:	
 10355  10FC  3000               	movlw	0
 10356  10FD  0524               	andwf	___fleq@ff2,w
 10357  10FE  00A8               	movwf	??___fleq
 10358  10FF  3000               	movlw	0
 10359  1100  0525               	andwf	___fleq@ff2+1,w
 10360  1101  00A9               	movwf	??___fleq+1
 10361  1102  3080               	movlw	128
 10362  1103  0526               	andwf	___fleq@ff2+2,w
 10363  1104  00AA               	movwf	??___fleq+2
 10364  1105  307F               	movlw	127
 10365  1106  0527               	andwf	___fleq@ff2+3,w
 10366  1107  00AB               	movwf	??___fleq+3
 10367  1108  082B               	movf	??___fleq+3,w
 10368  1109  042A               	iorwf	??___fleq+2,w
 10369  110A  0429               	iorwf	??___fleq+1,w
 10370  110B  0428               	iorwf	??___fleq,w
 10371  110C  1D03               	skipz
 10372  110D  2916               	goto	l1039
 10373  110E  3000               	movlw	0
 10374  110F  00A7               	movwf	___fleq@ff2+3
 10375  1110  3000               	movlw	0
 10376  1111  00A6               	movwf	___fleq@ff2+2
 10377  1112  3000               	movlw	0
 10378  1113  00A5               	movwf	___fleq@ff2+1
 10379  1114  3000               	movlw	0
 10380  1115  00A4               	movwf	___fleq@ff2
 10381  1116                     l1039:	
 10382  1116  0827               	movf	___fleq@ff2+3,w
 10383  1117  0623               	xorwf	___fleq@ff1+3,w
 10384  1118  1D03               	skipz
 10385  1119  2924               	goto	u3075
 10386  111A  0826               	movf	___fleq@ff2+2,w
 10387  111B  0622               	xorwf	___fleq@ff1+2,w
 10388  111C  1D03               	skipz
 10389  111D  2924               	goto	u3075
 10390  111E  0825               	movf	___fleq@ff2+1,w
 10391  111F  0621               	xorwf	___fleq@ff1+1,w
 10392  1120  1D03               	skipz
 10393  1121  2924               	goto	u3075
 10394  1122  0824               	movf	___fleq@ff2,w
 10395  1123  0620               	xorwf	___fleq@ff1,w
 10396  1124                     u3075:	
 10397  1124  1903               	skipnz
 10398  1125  2928               	goto	l3482
 10399  1126  1003               	clrc
 10400  1127  0008               	return
 10401  1128                     l3482:	
 10402  1128  1403               	setc
 10403  1129  0008               	return
 10404  112A                     __end_of___fleq:	
 10405                           
 10406                           	psect	text27
 10407  14D3                     __ptext27:	
 10408 ;; *************** function _eval_poly *****************
 10409 ;; Defined at:
 10410 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\evalpoly.c"
 10411 ;; Parameters:    Size  Location     Type
 10412 ;;  x               4   12[BANK1 ] PTR int 
 10413 ;;  d               2   16[BANK1 ] PTR const 
 10414 ;;		 -> log@coeff(36), 
 10415 ;;  n               2   18[BANK1 ] int 
 10416 ;; Auto vars:     Size  Location     Type
 10417 ;;  res             4   26[BANK1 ] int 
 10418 ;; Return value:  Size  Location     Type
 10419 ;;                  4   12[BANK1 ] int 
 10420 ;; Registers used:
 10421 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10422 ;; Tracked objects:
 10423 ;;		On entry : 0/0
 10424 ;;		On exit  : 0/0
 10425 ;;		Unchanged: 0/0
 10426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10427 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10428 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10429 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10430 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10431 ;;Total ram usage:       18 bytes
 10432 ;; Hardware stack levels used:    1
 10433 ;; Hardware stack levels required when called:    7
 10434 ;; This function calls:
 10435 ;;		___fladd
 10436 ;;		___flmul
 10437 ;; This function is called by:
 10438 ;;		_log
 10439 ;; This function uses a non-reentrant model
 10440 ;;
 10441                           
 10442                           
 10443                           ;psect for function _eval_poly
 10444  14D3                     _eval_poly:	
 10445                           
 10446                           ;incstack = 0
 10447                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10448  14D3  0141               	movlb	1	; select bank1
 10449  14D4  0833               	movf	(eval_poly@n+1)^(0+128),w
 10450  14D5  00B5               	movwf	(??_eval_poly^(0+128)+1)
 10451  14D6  0832               	movf	eval_poly@n^(0+128),w
 10452  14D7  00B4               	movwf	??_eval_poly^(0+128)
 10453  14D8  35B4               	lslf	??_eval_poly^(0+128),f
 10454  14D9  0DB5               	rlf	(??_eval_poly^(0+128)+1),f
 10455  14DA  35B4               	lslf	??_eval_poly^(0+128),f
 10456  14DB  0DB5               	rlf	(??_eval_poly^(0+128)+1),f
 10457  14DC  0830               	movf	eval_poly@d^(0+128),w
 10458  14DD  0734               	addwf	??_eval_poly^(0+128),w
 10459  14DE  0084               	movwf	4
 10460  14DF  0831               	movf	(eval_poly@d+1)^(0+128),w
 10461  14E0  3D35               	addwfc	(??_eval_poly+1)^(0+128),w
 10462  14E1  0085               	movwf	5
 10463  14E2  3F00               	moviw [0]fsr0
 10464  14E3  00B6               	movwf	(??_eval_poly+2)^(0+128)
 10465  14E4  3F01               	moviw [1]fsr0
 10466  14E5  00B7               	movwf	((??_eval_poly+2)^(0+128)+1)
 10467  14E6  3F02               	moviw [2]fsr0
 10468  14E7  00B8               	movwf	((??_eval_poly+2)^(0+128)+2)
 10469  14E8  3F03               	moviw [3]fsr0
 10470  14E9  00B9               	movwf	((??_eval_poly+2)^(0+128)+3)
 10471  14EA  0839               	movf	(??_eval_poly+5)^(0+128),w
 10472  14EB  00BD               	movwf	(eval_poly@res+3)^(0+128)
 10473  14EC  0838               	movf	(??_eval_poly+4)^(0+128),w
 10474  14ED  00BC               	movwf	(eval_poly@res+2)^(0+128)
 10475  14EE  0837               	movf	(??_eval_poly+3)^(0+128),w
 10476  14EF  00BB               	movwf	(eval_poly@res+1)^(0+128)
 10477  14F0  0836               	movf	(??_eval_poly+2)^(0+128),w
 10478  14F1                     L3:	
 10479  14F1  00BA               	movwf	eval_poly@res^(0+128)
 10480  14F2  0832               	movf	eval_poly@n^(0+128),w
 10481  14F3  0433               	iorwf	(eval_poly@n+1)^(0+128),w
 10482  14F4  1903               	btfsc	3,2
 10483  14F5  2D5E               	goto	l4168
 10484  14F6  30FF               	movlw	255
 10485  14F7  07B2               	addwf	eval_poly@n^(0+128),f
 10486  14F8  30FF               	movlw	255
 10487  14F9  3DB3               	addwfc	(eval_poly@n+1)^(0+128),f
 10488  14FA  0833               	movf	(eval_poly@n+1)^(0+128),w
 10489  14FB  00B5               	movwf	(??_eval_poly^(0+128)+1)
 10490  14FC  0832               	movf	eval_poly@n^(0+128),w
 10491  14FD  00B4               	movwf	??_eval_poly^(0+128)
 10492  14FE  35B4               	lslf	??_eval_poly^(0+128),f
 10493  14FF  0DB5               	rlf	(??_eval_poly^(0+128)+1),f
 10494  1500  35B4               	lslf	??_eval_poly^(0+128),f
 10495  1501  0DB5               	rlf	(??_eval_poly^(0+128)+1),f
 10496  1502  0830               	movf	eval_poly@d^(0+128),w
 10497  1503  0734               	addwf	??_eval_poly^(0+128),w
 10498  1504  0084               	movwf	4
 10499  1505  0831               	movf	(eval_poly@d+1)^(0+128),w
 10500  1506  3D35               	addwfc	(??_eval_poly+1)^(0+128),w
 10501  1507  0085               	movwf	5
 10502  1508  3F00               	moviw [0]fsr0
 10503  1509  00B6               	movwf	(??_eval_poly+2)^(0+128)
 10504  150A  3F01               	moviw [1]fsr0
 10505  150B  00B7               	movwf	((??_eval_poly+2)^(0+128)+1)
 10506  150C  3F02               	moviw [2]fsr0
 10507  150D  00B8               	movwf	((??_eval_poly+2)^(0+128)+2)
 10508  150E  3F03               	moviw [3]fsr0
 10509  150F  00B9               	movwf	((??_eval_poly+2)^(0+128)+3)
 10510  1510  0839               	movf	(??_eval_poly+5)^(0+128),w
 10511  1511  0140               	movlb	0	; select bank0
 10512  1512  00EA               	movwf	___fladd@b+3
 10513  1513  0141               	movlb	1	; select bank1
 10514  1514  0838               	movf	(??_eval_poly+4)^(0+128),w
 10515  1515  0140               	movlb	0	; select bank0
 10516  1516  00E9               	movwf	___fladd@b+2
 10517  1517  0141               	movlb	1	; select bank1
 10518  1518  0837               	movf	(??_eval_poly+3)^(0+128),w
 10519  1519  0140               	movlb	0	; select bank0
 10520  151A  00E8               	movwf	___fladd@b+1
 10521  151B  0141               	movlb	1	; select bank1
 10522  151C  0836               	movf	(??_eval_poly+2)^(0+128),w
 10523  151D  0140               	movlb	0	; select bank0
 10524  151E  00E7               	movwf	___fladd@b
 10525  151F  0141               	movlb	1	; select bank1
 10526  1520  083D               	movf	(eval_poly@res+3)^(0+128),w
 10527  1521  0140               	movlb	0	; select bank0
 10528  1522  00B6               	movwf	___flmul@b+3
 10529  1523  0141               	movlb	1	; select bank1
 10530  1524  083C               	movf	(eval_poly@res+2)^(0+128),w
 10531  1525  0140               	movlb	0	; select bank0
 10532  1526  00B5               	movwf	___flmul@b+2
 10533  1527  0141               	movlb	1	; select bank1
 10534  1528  083B               	movf	(eval_poly@res+1)^(0+128),w
 10535  1529  0140               	movlb	0	; select bank0
 10536  152A  00B4               	movwf	___flmul@b+1
 10537  152B  0141               	movlb	1	; select bank1
 10538  152C  083A               	movf	eval_poly@res^(0+128),w
 10539  152D  0140               	movlb	0	; select bank0
 10540  152E  00B3               	movwf	___flmul@b
 10541  152F  0141               	movlb	1	; select bank1
 10542  1530  082F               	movf	(eval_poly@x+3)^(0+128),w
 10543  1531  0140               	movlb	0	; select bank0
 10544  1532  00BA               	movwf	___flmul@a+3
 10545  1533  0141               	movlb	1	; select bank1
 10546  1534  082E               	movf	(eval_poly@x+2)^(0+128),w
 10547  1535  0140               	movlb	0	; select bank0
 10548  1536  00B9               	movwf	___flmul@a+2
 10549  1537  0141               	movlb	1	; select bank1
 10550  1538  082D               	movf	(eval_poly@x+1)^(0+128),w
 10551  1539  0140               	movlb	0	; select bank0
 10552  153A  00B8               	movwf	___flmul@a+1
 10553  153B  0141               	movlb	1	; select bank1
 10554  153C  082C               	movf	eval_poly@x^(0+128),w
 10555  153D  0140               	movlb	0	; select bank0
 10556  153E  00B7               	movwf	___flmul@a
 10557  153F  318B  2375  3194   	fcall	___flmul
 10558  1542  0140               	movlb	0	; select bank0
 10559  1543  0836               	movf	?___flmul+3,w
 10560  1544  00EE               	movwf	___fladd@a+3
 10561  1545  0835               	movf	?___flmul+2,w
 10562  1546  00ED               	movwf	___fladd@a+2
 10563  1547  0834               	movf	?___flmul+1,w
 10564  1548  00EC               	movwf	___fladd@a+1
 10565  1549  0833               	movf	?___flmul,w
 10566  154A  00EB               	movwf	___fladd@a
 10567  154B  318D  25A1  3194   	fcall	___fladd
 10568  154E  0140               	movlb	0	; select bank0
 10569  154F  086A               	movf	?___fladd+3,w
 10570  1550  0141               	movlb	1	; select bank1
 10571  1551  00BD               	movwf	(eval_poly@res+3)^(0+128)
 10572  1552  0140               	movlb	0	; select bank0
 10573  1553  0869               	movf	?___fladd+2,w
 10574  1554  0141               	movlb	1	; select bank1
 10575  1555  00BC               	movwf	(eval_poly@res+2)^(0+128)
 10576  1556  0140               	movlb	0	; select bank0
 10577  1557  0868               	movf	?___fladd+1,w
 10578  1558  0141               	movlb	1	; select bank1
 10579  1559  00BB               	movwf	(eval_poly@res+1)^(0+128)
 10580  155A  0140               	movlb	0	; select bank0
 10581  155B  0867               	movf	?___fladd,w
 10582  155C  0141               	movlb	1	; select bank1
 10583  155D  2CF1               	goto	L3
 10584  155E                     l4168:	
 10585  155E  083D               	movf	(eval_poly@res+3)^(0+128),w
 10586  155F  00AF               	movwf	(?_eval_poly+3)^(0+128)
 10587  1560  083C               	movf	(eval_poly@res+2)^(0+128),w
 10588  1561  00AE               	movwf	(?_eval_poly+2)^(0+128)
 10589  1562  083B               	movf	(eval_poly@res+1)^(0+128),w
 10590  1563  00AD               	movwf	(?_eval_poly+1)^(0+128)
 10591  1564  083A               	movf	eval_poly@res^(0+128),w
 10592  1565  00AC               	movwf	?_eval_poly^(0+128)
 10593  1566  0008               	return
 10594  1567                     __end_of_eval_poly:	
 10595                           
 10596                           	psect	text28
 10597  0B75                     __ptext28:	
 10598 ;; *************** function ___flmul *****************
 10599 ;; Defined at:
 10600 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
 10601 ;; Parameters:    Size  Location     Type
 10602 ;;  b               4   19[BANK0 ] int 
 10603 ;;  a               4   23[BANK0 ] int 
 10604 ;; Auto vars:     Size  Location     Type
 10605 ;;  prod            4   39[BANK0 ] struct .
 10606 ;;  grs             4   33[BANK0 ] unsigned long 
 10607 ;;  temp            2   43[BANK0 ] struct .
 10608 ;;  bexp            1   38[BANK0 ] unsigned char 
 10609 ;;  aexp            1   37[BANK0 ] unsigned char 
 10610 ;;  sign            1   32[BANK0 ] unsigned char 
 10611 ;; Return value:  Size  Location     Type
 10612 ;;                  4   19[BANK0 ] unsigned char 
 10613 ;; Registers used:
 10614 ;;		wreg, status,2, status,0, pclath, cstack
 10615 ;; Tracked objects:
 10616 ;;		On entry : 0/0
 10617 ;;		On exit  : 0/0
 10618 ;;		Unchanged: 0/0
 10619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10620 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10621 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10622 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10623 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10624 ;;Total ram usage:       26 bytes
 10625 ;; Hardware stack levels used:    1
 10626 ;; Hardware stack levels required when called:    6
 10627 ;; This function calls:
 10628 ;;		__Umul8_16
 10629 ;; This function is called by:
 10630 ;;		_main
 10631 ;;		_log
 10632 ;;		_log10
 10633 ;;		_eval_poly
 10634 ;; This function uses a non-reentrant model
 10635 ;;
 10636                           
 10637                           
 10638                           ;psect for function ___flmul
 10639  0B75                     ___flmul:	
 10640                           
 10641                           ;incstack = 0
 10642                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 10643  0B75  0140               	movlb	0	; select bank0
 10644  0B76  0836               	movf	___flmul@b+3,w
 10645  0B77  3980               	andlw	128
 10646  0B78  00BB               	movwf	??___flmul
 10647  0B79  083B               	movf	??___flmul,w
 10648  0B7A  00C0               	movwf	___flmul@sign
 10649  0B7B  3536               	lslf	___flmul@b+3,w
 10650  0B7C  00BB               	movwf	??___flmul
 10651  0B7D  083B               	movf	??___flmul,w
 10652  0B7E  00C6               	movwf	___flmul@bexp
 10653  0B7F  1BB5               	btfsc	___flmul@b+2,7
 10654  0B80  1446               	bsf	___flmul@bexp,0
 10655  0B81  0846               	movf	___flmul@bexp,w
 10656  0B82  1903               	btfsc	3,2
 10657  0B83  2B91               	goto	l3696
 10658  0B84  0A46               	incf	___flmul@bexp,w
 10659  0B85  1D03               	btfss	3,2
 10660  0B86  2B8F               	goto	l3694
 10661  0B87  3000               	movlw	0
 10662  0B88  00B6               	movwf	___flmul@b+3
 10663  0B89  3000               	movlw	0
 10664  0B8A  00B5               	movwf	___flmul@b+2
 10665  0B8B  3000               	movlw	0
 10666  0B8C  00B4               	movwf	___flmul@b+1
 10667  0B8D  3000               	movlw	0
 10668  0B8E  00B3               	movwf	___flmul@b
 10669  0B8F                     l3694:	
 10670  0B8F  17B5               	bsf	___flmul@b+2,7
 10671  0B90  2B99               	goto	l3698
 10672  0B91                     l3696:	
 10673  0B91  3000               	movlw	0
 10674  0B92  00B6               	movwf	___flmul@b+3
 10675  0B93  3000               	movlw	0
 10676  0B94  00B5               	movwf	___flmul@b+2
 10677  0B95  3000               	movlw	0
 10678  0B96  00B4               	movwf	___flmul@b+1
 10679  0B97  3000               	movlw	0
 10680  0B98  00B3               	movwf	___flmul@b
 10681  0B99                     l3698:	
 10682  0B99  083A               	movf	___flmul@a+3,w
 10683  0B9A  3980               	andlw	128
 10684  0B9B  00BB               	movwf	??___flmul
 10685  0B9C  083B               	movf	??___flmul,w
 10686  0B9D  06C0               	xorwf	___flmul@sign,f
 10687  0B9E  353A               	lslf	___flmul@a+3,w
 10688  0B9F  00BB               	movwf	??___flmul
 10689  0BA0  083B               	movf	??___flmul,w
 10690  0BA1  00C5               	movwf	___flmul@aexp
 10691  0BA2  1BB9               	btfsc	___flmul@a+2,7
 10692  0BA3  1445               	bsf	___flmul@aexp,0
 10693  0BA4  0845               	movf	___flmul@aexp,w
 10694  0BA5  1903               	btfsc	3,2
 10695  0BA6  2BB4               	goto	l3714
 10696  0BA7  0A45               	incf	___flmul@aexp,w
 10697  0BA8  1D03               	btfss	3,2
 10698  0BA9  2BB2               	goto	l3712
 10699  0BAA  3000               	movlw	0
 10700  0BAB  00BA               	movwf	___flmul@a+3
 10701  0BAC  3000               	movlw	0
 10702  0BAD  00B9               	movwf	___flmul@a+2
 10703  0BAE  3000               	movlw	0
 10704  0BAF  00B8               	movwf	___flmul@a+1
 10705  0BB0  3000               	movlw	0
 10706  0BB1  00B7               	movwf	___flmul@a
 10707  0BB2                     l3712:	
 10708  0BB2  17B9               	bsf	___flmul@a+2,7
 10709  0BB3  2BBC               	goto	l3716
 10710  0BB4                     l3714:	
 10711  0BB4  3000               	movlw	0
 10712  0BB5  00BA               	movwf	___flmul@a+3
 10713  0BB6  3000               	movlw	0
 10714  0BB7  00B9               	movwf	___flmul@a+2
 10715  0BB8  3000               	movlw	0
 10716  0BB9  00B8               	movwf	___flmul@a+1
 10717  0BBA  3000               	movlw	0
 10718  0BBB  00B7               	movwf	___flmul@a
 10719  0BBC                     l3716:	
 10720  0BBC  0845               	movf	___flmul@aexp,w
 10721  0BBD  1D03               	btfss	3,2
 10722  0BBE  0846               	movf	___flmul@bexp,w
 10723  0BBF  1D03               	btfss	3,2
 10724  0BC0  2BCA               	goto	l3724
 10725  0BC1  3000               	movlw	0
 10726  0BC2  00B6               	movwf	?___flmul+3
 10727  0BC3  3000               	movlw	0
 10728  0BC4  00B5               	movwf	?___flmul+2
 10729  0BC5  3000               	movlw	0
 10730  0BC6  00B4               	movwf	?___flmul+1
 10731  0BC7  3000               	movlw	0
 10732  0BC8  00B3               	movwf	?___flmul
 10733  0BC9  0008               	return
 10734  0BCA                     l3724:	
 10735  0BCA  0833               	movf	___flmul@b,w
 10736  0BCB  00BB               	movwf	??___flmul
 10737  0BCC  083B               	movf	??___flmul,w
 10738  0BCD  00A0               	movwf	__Umul8_16@multiplicand
 10739  0BCE  0839               	movf	___flmul@a+2,w
 10740  0BCF  319D  25C0  318B   	fcall	__Umul8_16
 10741  0BD2  0140               	movlb	0	; select bank0
 10742  0BD3  0821               	movf	?__Umul8_16+1,w
 10743  0BD4  00CC               	movwf	___flmul@temp+1
 10744  0BD5  0820               	movf	?__Umul8_16,w
 10745  0BD6  00CB               	movwf	___flmul@temp
 10746  0BD7  084B               	movf	___flmul@temp,w
 10747  0BD8  00BB               	movwf	??___flmul
 10748  0BD9  01BC               	clrf	??___flmul+1
 10749  0BDA  01BD               	clrf	??___flmul+2
 10750  0BDB  01BE               	clrf	??___flmul+3
 10751  0BDC  083E               	movf	??___flmul+3,w
 10752  0BDD  00C4               	movwf	___flmul@grs+3
 10753  0BDE  083D               	movf	??___flmul+2,w
 10754  0BDF  00C3               	movwf	___flmul@grs+2
 10755  0BE0  083C               	movf	??___flmul+1,w
 10756  0BE1  00C2               	movwf	___flmul@grs+1
 10757  0BE2  083B               	movf	??___flmul,w
 10758  0BE3  00C1               	movwf	___flmul@grs
 10759  0BE4  084C               	movf	___flmul@temp+1,w
 10760  0BE5  00BB               	movwf	??___flmul
 10761  0BE6  01BC               	clrf	??___flmul+1
 10762  0BE7  01BD               	clrf	??___flmul+2
 10763  0BE8  01BE               	clrf	??___flmul+3
 10764  0BE9  083E               	movf	??___flmul+3,w
 10765  0BEA  00CA               	movwf	___flmul@prod+3
 10766  0BEB  083D               	movf	??___flmul+2,w
 10767  0BEC  00C9               	movwf	___flmul@prod+2
 10768  0BED  083C               	movf	??___flmul+1,w
 10769  0BEE  00C8               	movwf	___flmul@prod+1
 10770  0BEF  083B               	movf	??___flmul,w
 10771  0BF0  00C7               	movwf	___flmul@prod
 10772  0BF1  0834               	movf	___flmul@b+1,w
 10773  0BF2  00BB               	movwf	??___flmul
 10774  0BF3  083B               	movf	??___flmul,w
 10775  0BF4  00A0               	movwf	__Umul8_16@multiplicand
 10776  0BF5  0838               	movf	___flmul@a+1,w
 10777  0BF6  319D  25C0  318B   	fcall	__Umul8_16
 10778  0BF9  0140               	movlb	0	; select bank0
 10779  0BFA  0821               	movf	?__Umul8_16+1,w
 10780  0BFB  00CC               	movwf	___flmul@temp+1
 10781  0BFC  0820               	movf	?__Umul8_16,w
 10782  0BFD  00CB               	movwf	___flmul@temp
 10783  0BFE  084B               	movf	___flmul@temp,w
 10784  0BFF  00BB               	movwf	??___flmul
 10785  0C00  01BC               	clrf	??___flmul+1
 10786  0C01  01BD               	clrf	??___flmul+2
 10787  0C02  01BE               	clrf	??___flmul+3
 10788  0C03  083B               	movf	??___flmul,w
 10789  0C04  07C1               	addwf	___flmul@grs,f
 10790  0C05  083C               	movf	??___flmul+1,w
 10791  0C06  3DC2               	addwfc	___flmul@grs+1,f
 10792  0C07  083D               	movf	??___flmul+2,w
 10793  0C08  3DC3               	addwfc	___flmul@grs+2,f
 10794  0C09  083E               	movf	??___flmul+3,w
 10795  0C0A  3DC4               	addwfc	___flmul@grs+3,f
 10796  0C0B  084C               	movf	___flmul@temp+1,w
 10797  0C0C  00BB               	movwf	??___flmul
 10798  0C0D  01BC               	clrf	??___flmul+1
 10799  0C0E  01BD               	clrf	??___flmul+2
 10800  0C0F  01BE               	clrf	??___flmul+3
 10801  0C10  083B               	movf	??___flmul,w
 10802  0C11  07C7               	addwf	___flmul@prod,f
 10803  0C12  083C               	movf	??___flmul+1,w
 10804  0C13  3DC8               	addwfc	___flmul@prod+1,f
 10805  0C14  083D               	movf	??___flmul+2,w
 10806  0C15  3DC9               	addwfc	___flmul@prod+2,f
 10807  0C16  083E               	movf	??___flmul+3,w
 10808  0C17  3DCA               	addwfc	___flmul@prod+3,f
 10809  0C18  0835               	movf	___flmul@b+2,w
 10810  0C19  00BB               	movwf	??___flmul
 10811  0C1A  083B               	movf	??___flmul,w
 10812  0C1B  00A0               	movwf	__Umul8_16@multiplicand
 10813  0C1C  0837               	movf	___flmul@a,w
 10814  0C1D  319D  25C0  318B   	fcall	__Umul8_16
 10815  0C20  0140               	movlb	0	; select bank0
 10816  0C21  0821               	movf	?__Umul8_16+1,w
 10817  0C22  00CC               	movwf	___flmul@temp+1
 10818  0C23  0820               	movf	?__Umul8_16,w
 10819  0C24  00CB               	movwf	___flmul@temp
 10820  0C25  084B               	movf	___flmul@temp,w
 10821  0C26  00BB               	movwf	??___flmul
 10822  0C27  01BC               	clrf	??___flmul+1
 10823  0C28  01BD               	clrf	??___flmul+2
 10824  0C29  01BE               	clrf	??___flmul+3
 10825  0C2A  083B               	movf	??___flmul,w
 10826  0C2B  07C1               	addwf	___flmul@grs,f
 10827  0C2C  083C               	movf	??___flmul+1,w
 10828  0C2D  3DC2               	addwfc	___flmul@grs+1,f
 10829  0C2E  083D               	movf	??___flmul+2,w
 10830  0C2F  3DC3               	addwfc	___flmul@grs+2,f
 10831  0C30  083E               	movf	??___flmul+3,w
 10832  0C31  3DC4               	addwfc	___flmul@grs+3,f
 10833  0C32  084C               	movf	___flmul@temp+1,w
 10834  0C33  00BB               	movwf	??___flmul
 10835  0C34  01BC               	clrf	??___flmul+1
 10836  0C35  01BD               	clrf	??___flmul+2
 10837  0C36  01BE               	clrf	??___flmul+3
 10838  0C37  083B               	movf	??___flmul,w
 10839  0C38  07C7               	addwf	___flmul@prod,f
 10840  0C39  083C               	movf	??___flmul+1,w
 10841  0C3A  3DC8               	addwfc	___flmul@prod+1,f
 10842  0C3B  083D               	movf	??___flmul+2,w
 10843  0C3C  3DC9               	addwfc	___flmul@prod+2,f
 10844  0C3D  083E               	movf	??___flmul+3,w
 10845  0C3E  3DCA               	addwfc	___flmul@prod+3,f
 10846  0C3F  3008               	movlw	8
 10847  0C40                     u3595:	
 10848  0C40  35C1               	lslf	___flmul@grs,f
 10849  0C41  0DC2               	rlf	___flmul@grs+1,f
 10850  0C42  0DC3               	rlf	___flmul@grs+2,f
 10851  0C43  0DC4               	rlf	___flmul@grs+3,f
 10852  0C44  0B89               	decfsz	9,f
 10853  0C45  2C40               	goto	u3595
 10854  0C46  0834               	movf	___flmul@b+1,w
 10855  0C47  00BB               	movwf	??___flmul
 10856  0C48  083B               	movf	??___flmul,w
 10857  0C49  00A0               	movwf	__Umul8_16@multiplicand
 10858  0C4A  0837               	movf	___flmul@a,w
 10859  0C4B  319D  25C0  318B   	fcall	__Umul8_16
 10860  0C4E  0140               	movlb	0	; select bank0
 10861  0C4F  0821               	movf	?__Umul8_16+1,w
 10862  0C50  00CC               	movwf	___flmul@temp+1
 10863  0C51  0820               	movf	?__Umul8_16,w
 10864  0C52  00CB               	movwf	___flmul@temp
 10865  0C53  084B               	movf	___flmul@temp,w
 10866  0C54  07C1               	addwf	___flmul@grs,f
 10867  0C55  084C               	movf	___flmul@temp+1,w
 10868  0C56  3DC2               	addwfc	___flmul@grs+1,f
 10869  0C57  3000               	movlw	0
 10870  0C58  3DC3               	addwfc	___flmul@grs+2,f
 10871  0C59  3DC4               	addwfc	___flmul@grs+3,f
 10872  0C5A  0833               	movf	___flmul@b,w
 10873  0C5B  00BB               	movwf	??___flmul
 10874  0C5C  083B               	movf	??___flmul,w
 10875  0C5D  00A0               	movwf	__Umul8_16@multiplicand
 10876  0C5E  0838               	movf	___flmul@a+1,w
 10877  0C5F  319D  25C0  318B   	fcall	__Umul8_16
 10878  0C62  0140               	movlb	0	; select bank0
 10879  0C63  0821               	movf	?__Umul8_16+1,w
 10880  0C64  00CC               	movwf	___flmul@temp+1
 10881  0C65  0820               	movf	?__Umul8_16,w
 10882  0C66  00CB               	movwf	___flmul@temp
 10883  0C67  084B               	movf	___flmul@temp,w
 10884  0C68  07C1               	addwf	___flmul@grs,f
 10885  0C69  084C               	movf	___flmul@temp+1,w
 10886  0C6A  3DC2               	addwfc	___flmul@grs+1,f
 10887  0C6B  3000               	movlw	0
 10888  0C6C  3DC3               	addwfc	___flmul@grs+2,f
 10889  0C6D  3DC4               	addwfc	___flmul@grs+3,f
 10890  0C6E  3008               	movlw	8
 10891  0C6F                     u3605:	
 10892  0C6F  35C1               	lslf	___flmul@grs,f
 10893  0C70  0DC2               	rlf	___flmul@grs+1,f
 10894  0C71  0DC3               	rlf	___flmul@grs+2,f
 10895  0C72  0DC4               	rlf	___flmul@grs+3,f
 10896  0C73  0B89               	decfsz	9,f
 10897  0C74  2C6F               	goto	u3605
 10898  0C75  0833               	movf	___flmul@b,w
 10899  0C76  00BB               	movwf	??___flmul
 10900  0C77  083B               	movf	??___flmul,w
 10901  0C78  00A0               	movwf	__Umul8_16@multiplicand
 10902  0C79  0837               	movf	___flmul@a,w
 10903  0C7A  319D  25C0  318B   	fcall	__Umul8_16
 10904  0C7D  0140               	movlb	0	; select bank0
 10905  0C7E  0821               	movf	?__Umul8_16+1,w
 10906  0C7F  00CC               	movwf	___flmul@temp+1
 10907  0C80  0820               	movf	?__Umul8_16,w
 10908  0C81  00CB               	movwf	___flmul@temp
 10909  0C82  084B               	movf	___flmul@temp,w
 10910  0C83  07C1               	addwf	___flmul@grs,f
 10911  0C84  084C               	movf	___flmul@temp+1,w
 10912  0C85  3DC2               	addwfc	___flmul@grs+1,f
 10913  0C86  3000               	movlw	0
 10914  0C87  3DC3               	addwfc	___flmul@grs+2,f
 10915  0C88  3DC4               	addwfc	___flmul@grs+3,f
 10916  0C89  0834               	movf	___flmul@b+1,w
 10917  0C8A  00BB               	movwf	??___flmul
 10918  0C8B  083B               	movf	??___flmul,w
 10919  0C8C  00A0               	movwf	__Umul8_16@multiplicand
 10920  0C8D  0839               	movf	___flmul@a+2,w
 10921  0C8E  319D  25C0  318B   	fcall	__Umul8_16
 10922  0C91  0140               	movlb	0	; select bank0
 10923  0C92  0821               	movf	?__Umul8_16+1,w
 10924  0C93  00CC               	movwf	___flmul@temp+1
 10925  0C94  0820               	movf	?__Umul8_16,w
 10926  0C95  00CB               	movwf	___flmul@temp
 10927  0C96  084B               	movf	___flmul@temp,w
 10928  0C97  07C7               	addwf	___flmul@prod,f
 10929  0C98  084C               	movf	___flmul@temp+1,w
 10930  0C99  3DC8               	addwfc	___flmul@prod+1,f
 10931  0C9A  3000               	movlw	0
 10932  0C9B  3DC9               	addwfc	___flmul@prod+2,f
 10933  0C9C  3DCA               	addwfc	___flmul@prod+3,f
 10934  0C9D  0835               	movf	___flmul@b+2,w
 10935  0C9E  00BB               	movwf	??___flmul
 10936  0C9F  083B               	movf	??___flmul,w
 10937  0CA0  00A0               	movwf	__Umul8_16@multiplicand
 10938  0CA1  0838               	movf	___flmul@a+1,w
 10939  0CA2  319D  25C0  318B   	fcall	__Umul8_16
 10940  0CA5  0140               	movlb	0	; select bank0
 10941  0CA6  0821               	movf	?__Umul8_16+1,w
 10942  0CA7  00CC               	movwf	___flmul@temp+1
 10943  0CA8  0820               	movf	?__Umul8_16,w
 10944  0CA9  00CB               	movwf	___flmul@temp
 10945  0CAA  084B               	movf	___flmul@temp,w
 10946  0CAB  07C7               	addwf	___flmul@prod,f
 10947  0CAC  084C               	movf	___flmul@temp+1,w
 10948  0CAD  3DC8               	addwfc	___flmul@prod+1,f
 10949  0CAE  3000               	movlw	0
 10950  0CAF  3DC9               	addwfc	___flmul@prod+2,f
 10951  0CB0  3DCA               	addwfc	___flmul@prod+3,f
 10952  0CB1  0835               	movf	___flmul@b+2,w
 10953  0CB2  00BB               	movwf	??___flmul
 10954  0CB3  083B               	movf	??___flmul,w
 10955  0CB4  00A0               	movwf	__Umul8_16@multiplicand
 10956  0CB5  0839               	movf	___flmul@a+2,w
 10957  0CB6  319D  25C0  318B   	fcall	__Umul8_16
 10958  0CB9  0140               	movlb	0	; select bank0
 10959  0CBA  0821               	movf	?__Umul8_16+1,w
 10960  0CBB  00CC               	movwf	___flmul@temp+1
 10961  0CBC  0820               	movf	?__Umul8_16,w
 10962  0CBD  00CB               	movwf	___flmul@temp
 10963  0CBE  084B               	movf	___flmul@temp,w
 10964  0CBF  00BB               	movwf	??___flmul
 10965  0CC0  084C               	movf	___flmul@temp+1,w
 10966  0CC1  00BC               	movwf	??___flmul+1
 10967  0CC2  01BD               	clrf	??___flmul+2
 10968  0CC3  01BE               	clrf	??___flmul+3
 10969  0CC4  3008               	movlw	8
 10970  0CC5                     u3615:	
 10971  0CC5  35BB               	lslf	??___flmul,f
 10972  0CC6  0DBC               	rlf	??___flmul+1,f
 10973  0CC7  0DBD               	rlf	??___flmul+2,f
 10974  0CC8  0DBE               	rlf	??___flmul+3,f
 10975  0CC9  0B89               	decfsz	9,f
 10976  0CCA  2CC5               	goto	u3615
 10977  0CCB  083B               	movf	??___flmul,w
 10978  0CCC  07C7               	addwf	___flmul@prod,f
 10979  0CCD  083C               	movf	??___flmul+1,w
 10980  0CCE  3DC8               	addwfc	___flmul@prod+1,f
 10981  0CCF  083D               	movf	??___flmul+2,w
 10982  0CD0  3DC9               	addwfc	___flmul@prod+2,f
 10983  0CD1  083E               	movf	??___flmul+3,w
 10984  0CD2  3DCA               	addwfc	___flmul@prod+3,f
 10985  0CD3  0841               	movf	___flmul@grs,w
 10986  0CD4  00BB               	movwf	??___flmul
 10987  0CD5  0842               	movf	___flmul@grs+1,w
 10988  0CD6  00BC               	movwf	??___flmul+1
 10989  0CD7  0843               	movf	___flmul@grs+2,w
 10990  0CD8  00BD               	movwf	??___flmul+2
 10991  0CD9  0844               	movf	___flmul@grs+3,w
 10992  0CDA  00BE               	movwf	??___flmul+3
 10993  0CDB  3018               	movlw	24
 10994  0CDC                     u3625:	
 10995  0CDC  36BE               	lsrf	??___flmul+3,f
 10996  0CDD  0CBD               	rrf	??___flmul+2,f
 10997  0CDE  0CBC               	rrf	??___flmul+1,f
 10998  0CDF  0CBB               	rrf	??___flmul,f
 10999  0CE0  0B89               	decfsz	9,f
 11000  0CE1  2CDC               	goto	u3625
 11001  0CE2  083B               	movf	??___flmul,w
 11002  0CE3  07C7               	addwf	___flmul@prod,f
 11003  0CE4  083C               	movf	??___flmul+1,w
 11004  0CE5  3DC8               	addwfc	___flmul@prod+1,f
 11005  0CE6  083D               	movf	??___flmul+2,w
 11006  0CE7  3DC9               	addwfc	___flmul@prod+2,f
 11007  0CE8  083E               	movf	??___flmul+3,w
 11008  0CE9  3DCA               	addwfc	___flmul@prod+3,f
 11009  0CEA  3008               	movlw	8
 11010  0CEB                     u3635:	
 11011  0CEB  35C1               	lslf	___flmul@grs,f
 11012  0CEC  0DC2               	rlf	___flmul@grs+1,f
 11013  0CED  0DC3               	rlf	___flmul@grs+2,f
 11014  0CEE  0DC4               	rlf	___flmul@grs+3,f
 11015  0CEF  0B89               	decfsz	9,f
 11016  0CF0  2CEB               	goto	u3635
 11017  0CF1  0846               	movf	___flmul@bexp,w
 11018  0CF2  0745               	addwf	___flmul@aexp,w
 11019  0CF3  00BB               	movwf	??___flmul
 11020  0CF4  01BC               	clrf	??___flmul+1
 11021  0CF5  0DBC               	rlf	??___flmul+1,f
 11022  0CF6  083B               	movf	??___flmul,w
 11023  0CF7  3E82               	addlw	130
 11024  0CF8  00CB               	movwf	___flmul@temp
 11025  0CF9  30FF               	movlw	255
 11026  0CFA  3D3C               	addwfc	??___flmul+1,w
 11027  0CFB  00CC               	movwf	___flmul@temp+1
 11028  0CFC                     l3776:	
 11029  0CFC  1BC9               	btfsc	___flmul@prod+2,7
 11030  0CFD  2D13               	goto	l3778
 11031  0CFE  3001               	movlw	1
 11032  0CFF                     u3645:	
 11033  0CFF  35C7               	lslf	___flmul@prod,f
 11034  0D00  0DC8               	rlf	___flmul@prod+1,f
 11035  0D01  0DC9               	rlf	___flmul@prod+2,f
 11036  0D02  0DCA               	rlf	___flmul@prod+3,f
 11037  0D03  0B89               	decfsz	9,f
 11038  0D04  2CFF               	goto	u3645
 11039  0D05  1BC4               	btfsc	___flmul@grs+3,7
 11040  0D06  1447               	bsf	___flmul@prod,0
 11041  0D07  3001               	movlw	1
 11042  0D08                     u3665:	
 11043  0D08  35C1               	lslf	___flmul@grs,f
 11044  0D09  0DC2               	rlf	___flmul@grs+1,f
 11045  0D0A  0DC3               	rlf	___flmul@grs+2,f
 11046  0D0B  0DC4               	rlf	___flmul@grs+3,f
 11047  0D0C  0B89               	decfsz	9,f
 11048  0D0D  2D08               	goto	u3665
 11049  0D0E  30FF               	movlw	255
 11050  0D0F  07CB               	addwf	___flmul@temp,f
 11051  0D10  30FF               	movlw	255
 11052  0D11  3DCC               	addwfc	___flmul@temp+1,f
 11053  0D12  2CFC               	goto	l3776
 11054  0D13                     l3778:	
 11055  0D13  01C5               	clrf	___flmul@aexp
 11056  0D14  1FC4               	btfss	___flmul@grs+3,7
 11057  0D15  2D2C               	goto	l3788
 11058  0D16  30FF               	movlw	255
 11059  0D17  0541               	andwf	___flmul@grs,w
 11060  0D18  00BB               	movwf	??___flmul
 11061  0D19  30FF               	movlw	255
 11062  0D1A  0542               	andwf	___flmul@grs+1,w
 11063  0D1B  00BC               	movwf	??___flmul+1
 11064  0D1C  30FF               	movlw	255
 11065  0D1D  0543               	andwf	___flmul@grs+2,w
 11066  0D1E  00BD               	movwf	??___flmul+2
 11067  0D1F  307F               	movlw	127
 11068  0D20  0544               	andwf	___flmul@grs+3,w
 11069  0D21  00BE               	movwf	??___flmul+3
 11070  0D22  083E               	movf	??___flmul+3,w
 11071  0D23  043D               	iorwf	??___flmul+2,w
 11072  0D24  043C               	iorwf	??___flmul+1,w
 11073  0D25  043B               	iorwf	??___flmul,w
 11074  0D26  1903               	skipnz
 11075  0D27  1847               	btfsc	___flmul@prod,0
 11076  0D28  2D2A               	goto	l3784
 11077  0D29  2D2C               	goto	l3788
 11078  0D2A                     l3784:	
 11079  0D2A  01C5               	clrf	___flmul@aexp
 11080  0D2B  0AC5               	incf	___flmul@aexp,f
 11081  0D2C                     l3788:	
 11082  0D2C  0845               	movf	___flmul@aexp,w
 11083  0D2D  1903               	btfsc	3,2
 11084  0D2E  2D55               	goto	l3798
 11085  0D2F  3001               	movlw	1
 11086  0D30  07C7               	addwf	___flmul@prod,f
 11087  0D31  3000               	movlw	0
 11088  0D32  3DC8               	addwfc	___flmul@prod+1,f
 11089  0D33  3000               	movlw	0
 11090  0D34  3DC9               	addwfc	___flmul@prod+2,f
 11091  0D35  3000               	movlw	0
 11092  0D36  3DCA               	addwfc	___flmul@prod+3,f
 11093  0D37  1C4A               	btfss	___flmul@prod+3,0
 11094  0D38  2D55               	goto	l3798
 11095  0D39  0847               	movf	___flmul@prod,w
 11096  0D3A  00BB               	movwf	??___flmul
 11097  0D3B  0848               	movf	___flmul@prod+1,w
 11098  0D3C  00BC               	movwf	??___flmul+1
 11099  0D3D  0849               	movf	___flmul@prod+2,w
 11100  0D3E  00BD               	movwf	??___flmul+2
 11101  0D3F  084A               	movf	___flmul@prod+3,w
 11102  0D40  00BE               	movwf	??___flmul+3
 11103  0D41  3001               	movlw	1
 11104  0D42  00BF               	movwf	??___flmul+4
 11105  0D43                     u3735:	
 11106  0D43  37BE               	asrf	??___flmul+3,f
 11107  0D44  0CBD               	rrf	??___flmul+2,f
 11108  0D45  0CBC               	rrf	??___flmul+1,f
 11109  0D46  0CBB               	rrf	??___flmul,f
 11110  0D47  0BBF               	decfsz	??___flmul+4,f
 11111  0D48  2D43               	goto	u3735
 11112  0D49  083E               	movf	??___flmul+3,w
 11113  0D4A  00CA               	movwf	___flmul@prod+3
 11114  0D4B  083D               	movf	??___flmul+2,w
 11115  0D4C  00C9               	movwf	___flmul@prod+2
 11116  0D4D  083C               	movf	??___flmul+1,w
 11117  0D4E  00C8               	movwf	___flmul@prod+1
 11118  0D4F  083B               	movf	??___flmul,w
 11119  0D50  00C7               	movwf	___flmul@prod
 11120  0D51  3001               	movlw	1
 11121  0D52  07CB               	addwf	___flmul@temp,f
 11122  0D53  3000               	movlw	0
 11123  0D54  3DCC               	addwfc	___flmul@temp+1,f
 11124  0D55                     l3798:	
 11125  0D55  084C               	movf	___flmul@temp+1,w
 11126  0D56  3A80               	xorlw	128
 11127  0D57  00BB               	movwf	??___flmul
 11128  0D58  3080               	movlw	128
 11129  0D59  023B               	subwf	??___flmul,w
 11130  0D5A  1D03               	skipz
 11131  0D5B  2D5E               	goto	u3745
 11132  0D5C  30FF               	movlw	255
 11133  0D5D  024B               	subwf	___flmul@temp,w
 11134  0D5E                     u3745:	
 11135  0D5E  1C03               	skipc
 11136  0D5F  2D6A               	goto	l3802
 11137  0D60  307F               	movlw	127
 11138  0D61  0140               	movlb	0	; select bank0
 11139  0D62  00CA               	movwf	___flmul@prod+3
 11140  0D63  3080               	movlw	128
 11141  0D64  00C9               	movwf	___flmul@prod+2
 11142  0D65  3000               	movlw	0
 11143  0D66  00C8               	movwf	___flmul@prod+1
 11144  0D67  3000               	movlw	0
 11145  0D68  00C7               	movwf	___flmul@prod
 11146  0D69  2D94               	goto	l1270
 11147  0D6A                     l3802:	
 11148  0D6A  0140               	movlb	0	; select bank0
 11149  0D6B  084C               	movf	___flmul@temp+1,w
 11150  0D6C  3A80               	xorlw	128
 11151  0D6D  00BB               	movwf	??___flmul
 11152  0D6E  3080               	movlw	128
 11153  0D6F  023B               	subwf	??___flmul,w
 11154  0D70  1D03               	skipz
 11155  0D71  2D74               	goto	u3755
 11156  0D72  3001               	movlw	1
 11157  0D73  024B               	subwf	___flmul@temp,w
 11158  0D74                     u3755:	
 11159  0D74  1803               	skipnc
 11160  0D75  2D81               	goto	l3808
 11161  0D76  3000               	movlw	0
 11162  0D77  0140               	movlb	0	; select bank0
 11163  0D78  00CA               	movwf	___flmul@prod+3
 11164  0D79  3000               	movlw	0
 11165  0D7A  00C9               	movwf	___flmul@prod+2
 11166  0D7B  3000               	movlw	0
 11167  0D7C  00C8               	movwf	___flmul@prod+1
 11168  0D7D  3000               	movlw	0
 11169  0D7E  00C7               	movwf	___flmul@prod
 11170  0D7F  01C0               	clrf	___flmul@sign
 11171  0D80  2D94               	goto	l1270
 11172  0D81                     l3808:	
 11173  0D81  0140               	movlb	0	; select bank0
 11174  0D82  084B               	movf	___flmul@temp,w
 11175  0D83  00BB               	movwf	??___flmul
 11176  0D84  083B               	movf	??___flmul,w
 11177  0D85  00C6               	movwf	___flmul@bexp
 11178  0D86  30FF               	movlw	255
 11179  0D87  05C7               	andwf	___flmul@prod,f
 11180  0D88  30FF               	movlw	255
 11181  0D89  05C8               	andwf	___flmul@prod+1,f
 11182  0D8A  307F               	movlw	127
 11183  0D8B  05C9               	andwf	___flmul@prod+2,f
 11184  0D8C  3000               	movlw	0
 11185  0D8D  05CA               	andwf	___flmul@prod+3,f
 11186  0D8E  1846               	btfsc	___flmul@bexp,0
 11187  0D8F  17C9               	bsf	___flmul@prod+2,7
 11188  0D90  3646               	lsrf	___flmul@bexp,w
 11189  0D91  00BB               	movwf	??___flmul
 11190  0D92  083B               	movf	??___flmul,w
 11191  0D93  00CA               	movwf	___flmul@prod+3
 11192  0D94                     l1270:	
 11193  0D94  0840               	movf	___flmul@sign,w
 11194  0D95  00BB               	movwf	??___flmul
 11195  0D96  083B               	movf	??___flmul,w
 11196  0D97  04CA               	iorwf	___flmul@prod+3,f
 11197  0D98  084A               	movf	___flmul@prod+3,w
 11198  0D99  00B6               	movwf	?___flmul+3
 11199  0D9A  0849               	movf	___flmul@prod+2,w
 11200  0D9B  00B5               	movwf	?___flmul+2
 11201  0D9C  0848               	movf	___flmul@prod+1,w
 11202  0D9D  00B4               	movwf	?___flmul+1
 11203  0D9E  0847               	movf	___flmul@prod,w
 11204  0D9F  00B3               	movwf	?___flmul
 11205  0DA0  0008               	return
 11206  0DA1                     __end_of___flmul:	
 11207                           
 11208                           	psect	text29
 11209  1DC0                     __ptext29:	
 11210 ;; *************** function __Umul8_16 *****************
 11211 ;; Defined at:
 11212 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
 11213 ;; Parameters:    Size  Location     Type
 11214 ;;  multiplier      1    wreg     unsigned char 
 11215 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 11216 ;; Auto vars:     Size  Location     Type
 11217 ;;  multiplier      1    8[BANK0 ] unsigned char 
 11218 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 11219 ;;  product         2    4[BANK0 ] unsigned int 
 11220 ;; Return value:  Size  Location     Type
 11221 ;;                  2    0[BANK0 ] unsigned int 
 11222 ;; Registers used:
 11223 ;;		wreg, status,2, status,0
 11224 ;; Tracked objects:
 11225 ;;		On entry : 0/0
 11226 ;;		On exit  : 0/0
 11227 ;;		Unchanged: 0/0
 11228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11229 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11230 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11231 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11232 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11233 ;;Total ram usage:        9 bytes
 11234 ;; Hardware stack levels used:    1
 11235 ;; Hardware stack levels required when called:    5
 11236 ;; This function calls:
 11237 ;;		Nothing
 11238 ;; This function is called by:
 11239 ;;		___flmul
 11240 ;; This function uses a non-reentrant model
 11241 ;;
 11242                           
 11243                           
 11244                           ;psect for function __Umul8_16
 11245  1DC0                     __Umul8_16:	
 11246                           
 11247                           ;incstack = 0
 11248                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 11249                           ;__Umul8_16@multiplier stored from wreg
 11250  1DC0  0140               	movlb	0	; select bank0
 11251  1DC1  00A8               	movwf	__Umul8_16@multiplier
 11252  1DC2  01A4               	clrf	__Umul8_16@product
 11253  1DC3  01A5               	clrf	__Umul8_16@product+1
 11254  1DC4  0820               	movf	__Umul8_16@multiplicand,w
 11255  1DC5  00A2               	movwf	??__Umul8_16
 11256  1DC6  01A3               	clrf	??__Umul8_16+1
 11257  1DC7  0822               	movf	??__Umul8_16,w
 11258  1DC8  00A6               	movwf	__Umul8_16@word_mpld
 11259  1DC9  0823               	movf	??__Umul8_16+1,w
 11260  1DCA  00A7               	movwf	__Umul8_16@word_mpld+1
 11261  1DCB                     l3444:	
 11262  1DCB  1C28               	btfss	__Umul8_16@multiplier,0
 11263  1DCC  2DD1               	goto	l1348
 11264  1DCD  0826               	movf	__Umul8_16@word_mpld,w
 11265  1DCE  07A4               	addwf	__Umul8_16@product,f
 11266  1DCF  0827               	movf	__Umul8_16@word_mpld+1,w
 11267  1DD0  3DA5               	addwfc	__Umul8_16@product+1,f
 11268  1DD1                     l1348:	
 11269  1DD1  3001               	movlw	1
 11270  1DD2                     u3015:	
 11271  1DD2  35A6               	lslf	__Umul8_16@word_mpld,f
 11272  1DD3  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 11273  1DD4  0B89               	decfsz	9,f
 11274  1DD5  2DD2               	goto	u3015
 11275  1DD6  1003               	clrc
 11276  1DD7  0CA8               	rrf	__Umul8_16@multiplier,f
 11277  1DD8  0828               	movf	__Umul8_16@multiplier,w
 11278  1DD9  1D03               	btfss	3,2
 11279  1DDA  2DCB               	goto	l3444
 11280  1DDB  0825               	movf	__Umul8_16@product+1,w
 11281  1DDC  00A1               	movwf	?__Umul8_16+1
 11282  1DDD  0824               	movf	__Umul8_16@product,w
 11283  1DDE  00A0               	movwf	?__Umul8_16
 11284  1DDF  0008               	return
 11285  1DE0                     __end_of__Umul8_16:	
 11286                           
 11287                           	psect	text30
 11288  0DA1                     __ptext30:	
 11289 ;; *************** function ___fladd *****************
 11290 ;; Defined at:
 11291 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 11292 ;; Parameters:    Size  Location     Type
 11293 ;;  b               4   71[BANK0 ] unsigned int 
 11294 ;;  a               4   75[BANK0 ] unsigned int 
 11295 ;; Auto vars:     Size  Location     Type
 11296 ;;  grs             1   11[BANK1 ] unsigned char 
 11297 ;;  bexp            1   10[BANK1 ] unsigned char 
 11298 ;;  aexp            1    9[BANK1 ] unsigned char 
 11299 ;;  signs           1    8[BANK1 ] unsigned char 
 11300 ;; Return value:  Size  Location     Type
 11301 ;;                  4   71[BANK0 ] unsigned char 
 11302 ;; Registers used:
 11303 ;;		wreg, status,2, status,0
 11304 ;; Tracked objects:
 11305 ;;		On entry : 0/0
 11306 ;;		On exit  : 0/0
 11307 ;;		Unchanged: 0/0
 11308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11309 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11310 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11311 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11312 ;;      Totals:         0       8      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11313 ;;Total ram usage:       20 bytes
 11314 ;; Hardware stack levels used:    1
 11315 ;; Hardware stack levels required when called:    5
 11316 ;; This function calls:
 11317 ;;		Nothing
 11318 ;; This function is called by:
 11319 ;;		_main
 11320 ;;		___flsub
 11321 ;;		_log
 11322 ;;		_round
 11323 ;;		_eval_poly
 11324 ;; This function uses a non-reentrant model
 11325 ;;
 11326                           
 11327                           
 11328                           ;psect for function ___fladd
 11329  0DA1                     ___fladd:	
 11330                           
 11331                           ;incstack = 0
 11332                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 11333  0DA1  0140               	movlb	0	; select bank0
 11334  0DA2  086A               	movf	___fladd@b+3,w
 11335  0DA3  3980               	andlw	128
 11336  0DA4  0141               	movlb	1	; select bank1
 11337  0DA5  00A0               	movwf	??___fladd^(0+128)
 11338  0DA6  0820               	movf	??___fladd^(0+128),w
 11339  0DA7  00A8               	movwf	___fladd@signs^(0+128)
 11340  0DA8  0140               	movlb	0	; select bank0
 11341  0DA9  356A               	lslf	___fladd@b+3,w
 11342  0DAA  0141               	movlb	1	; select bank1
 11343  0DAB  00A0               	movwf	??___fladd^(0+128)
 11344  0DAC  0820               	movf	??___fladd^(0+128),w
 11345  0DAD  00AA               	movwf	___fladd@bexp^(0+128)
 11346  0DAE  0140               	movlb	0	; select bank0
 11347  0DAF  1FE9               	btfss	___fladd@b+2,7
 11348  0DB0  2DB3               	goto	l3494
 11349  0DB1  0141               	movlb	1	; select bank1
 11350  0DB2  142A               	bsf	___fladd@bexp^(0+128),0
 11351  0DB3                     l3494:	
 11352  0DB3  0141               	movlb	1	; select bank1
 11353  0DB4  082A               	movf	___fladd@bexp^(0+128),w
 11354  0DB5  1903               	btfsc	3,2
 11355  0DB6  2DC7               	goto	l3504
 11356  0DB7  0A2A               	incf	___fladd@bexp^(0+128),w
 11357  0DB8  1D03               	btfss	3,2
 11358  0DB9  2DC3               	goto	l3500
 11359  0DBA  3000               	movlw	0
 11360  0DBB  0140               	movlb	0	; select bank0
 11361  0DBC  00EA               	movwf	___fladd@b+3
 11362  0DBD  3000               	movlw	0
 11363  0DBE  00E9               	movwf	___fladd@b+2
 11364  0DBF  3000               	movlw	0
 11365  0DC0  00E8               	movwf	___fladd@b+1
 11366  0DC1  3000               	movlw	0
 11367  0DC2  00E7               	movwf	___fladd@b
 11368  0DC3                     l3500:	
 11369  0DC3  0140               	movlb	0	; select bank0
 11370  0DC4  17E9               	bsf	___fladd@b+2,7
 11371  0DC5  01EA               	clrf	___fladd@b+3
 11372  0DC6  2DD0               	goto	l3506
 11373  0DC7                     l3504:	
 11374  0DC7  3000               	movlw	0
 11375  0DC8  0140               	movlb	0	; select bank0
 11376  0DC9  00EA               	movwf	___fladd@b+3
 11377  0DCA  3000               	movlw	0
 11378  0DCB  00E9               	movwf	___fladd@b+2
 11379  0DCC  3000               	movlw	0
 11380  0DCD  00E8               	movwf	___fladd@b+1
 11381  0DCE  3000               	movlw	0
 11382  0DCF  00E7               	movwf	___fladd@b
 11383  0DD0                     l3506:	
 11384  0DD0  086E               	movf	___fladd@a+3,w
 11385  0DD1  3980               	andlw	128
 11386  0DD2  0141               	movlb	1	; select bank1
 11387  0DD3  00A0               	movwf	??___fladd^(0+128)
 11388  0DD4  0820               	movf	??___fladd^(0+128),w
 11389  0DD5  00A9               	movwf	___fladd@aexp^(0+128)
 11390  0DD6  0829               	movf	___fladd@aexp^(0+128),w
 11391  0DD7  0628               	xorwf	___fladd@signs^(0+128),w
 11392  0DD8  1D03               	btfss	3,2
 11393  0DD9  1728               	bsf	___fladd@signs^(0+128),6
 11394  0DDA  0140               	movlb	0	; select bank0
 11395  0DDB  356E               	lslf	___fladd@a+3,w
 11396  0DDC  0141               	movlb	1	; select bank1
 11397  0DDD  00A0               	movwf	??___fladd^(0+128)
 11398  0DDE  0820               	movf	??___fladd^(0+128),w
 11399  0DDF  00A9               	movwf	___fladd@aexp^(0+128)
 11400  0DE0  0140               	movlb	0	; select bank0
 11401  0DE1  1FED               	btfss	___fladd@a+2,7
 11402  0DE2  2DE5               	goto	l3518
 11403  0DE3  0141               	movlb	1	; select bank1
 11404  0DE4  1429               	bsf	___fladd@aexp^(0+128),0
 11405  0DE5                     l3518:	
 11406  0DE5  0141               	movlb	1	; select bank1
 11407  0DE6  0829               	movf	___fladd@aexp^(0+128),w
 11408  0DE7  1903               	btfsc	3,2
 11409  0DE8  2DF9               	goto	l3528
 11410  0DE9  0A29               	incf	___fladd@aexp^(0+128),w
 11411  0DEA  1D03               	btfss	3,2
 11412  0DEB  2DF5               	goto	l3524
 11413  0DEC  3000               	movlw	0
 11414  0DED  0140               	movlb	0	; select bank0
 11415  0DEE  00EE               	movwf	___fladd@a+3
 11416  0DEF  3000               	movlw	0
 11417  0DF0  00ED               	movwf	___fladd@a+2
 11418  0DF1  3000               	movlw	0
 11419  0DF2  00EC               	movwf	___fladd@a+1
 11420  0DF3  3000               	movlw	0
 11421  0DF4  00EB               	movwf	___fladd@a
 11422  0DF5                     l3524:	
 11423  0DF5  0140               	movlb	0	; select bank0
 11424  0DF6  17ED               	bsf	___fladd@a+2,7
 11425  0DF7  01EE               	clrf	___fladd@a+3
 11426  0DF8  2E02               	goto	l1162
 11427  0DF9                     l3528:	
 11428  0DF9  3000               	movlw	0
 11429  0DFA  0140               	movlb	0	; select bank0
 11430  0DFB  00EE               	movwf	___fladd@a+3
 11431  0DFC  3000               	movlw	0
 11432  0DFD  00ED               	movwf	___fladd@a+2
 11433  0DFE  3000               	movlw	0
 11434  0DFF  00EC               	movwf	___fladd@a+1
 11435  0E00  3000               	movlw	0
 11436  0E01  00EB               	movwf	___fladd@a
 11437  0E02                     l1162:	
 11438  0E02  0141               	movlb	1	; select bank1
 11439  0E03  082A               	movf	___fladd@bexp^(0+128),w
 11440  0E04  0229               	subwf	___fladd@aexp^(0+128),w
 11441  0E05  1803               	skipnc
 11442  0E06  2E62               	goto	l3564
 11443  0E07  1F28               	btfss	___fladd@signs^(0+128),6
 11444  0E08  2E0D               	goto	l3534
 11445  0E09  3080               	movlw	128
 11446  0E0A  00A0               	movwf	??___fladd^(0+128)
 11447  0E0B  0820               	movf	??___fladd^(0+128),w
 11448  0E0C  06A8               	xorwf	___fladd@signs^(0+128),f
 11449  0E0D                     l3534:	
 11450  0E0D  082A               	movf	___fladd@bexp^(0+128),w
 11451  0E0E  00A0               	movwf	??___fladd^(0+128)
 11452  0E0F  0820               	movf	??___fladd^(0+128),w
 11453  0E10  00AB               	movwf	___fladd@grs^(0+128)
 11454  0E11  0829               	movf	___fladd@aexp^(0+128),w
 11455  0E12  00A0               	movwf	??___fladd^(0+128)
 11456  0E13  0820               	movf	??___fladd^(0+128),w
 11457  0E14  00AA               	movwf	___fladd@bexp^(0+128)
 11458  0E15  082B               	movf	___fladd@grs^(0+128),w
 11459  0E16  00A0               	movwf	??___fladd^(0+128)
 11460  0E17  0820               	movf	??___fladd^(0+128),w
 11461  0E18  00A9               	movwf	___fladd@aexp^(0+128)
 11462  0E19  0140               	movlb	0	; select bank0
 11463  0E1A  0867               	movf	___fladd@b,w
 11464  0E1B  0141               	movlb	1	; select bank1
 11465  0E1C  00A0               	movwf	??___fladd^(0+128)
 11466  0E1D  0820               	movf	??___fladd^(0+128),w
 11467  0E1E  00AB               	movwf	___fladd@grs^(0+128)
 11468  0E1F  0140               	movlb	0	; select bank0
 11469  0E20  086B               	movf	___fladd@a,w
 11470  0E21  0141               	movlb	1	; select bank1
 11471  0E22  00A0               	movwf	??___fladd^(0+128)
 11472  0E23  0820               	movf	??___fladd^(0+128),w
 11473  0E24  0140               	movlb	0	; select bank0
 11474  0E25  00E7               	movwf	___fladd@b
 11475  0E26  0141               	movlb	1	; select bank1
 11476  0E27  082B               	movf	___fladd@grs^(0+128),w
 11477  0E28  00A0               	movwf	??___fladd^(0+128)
 11478  0E29  0820               	movf	??___fladd^(0+128),w
 11479  0E2A  0140               	movlb	0	; select bank0
 11480  0E2B  00EB               	movwf	___fladd@a
 11481  0E2C  0868               	movf	___fladd@b+1,w
 11482  0E2D  0141               	movlb	1	; select bank1
 11483  0E2E  00A0               	movwf	??___fladd^(0+128)
 11484  0E2F  0820               	movf	??___fladd^(0+128),w
 11485  0E30  00AB               	movwf	___fladd@grs^(0+128)
 11486  0E31  0140               	movlb	0	; select bank0
 11487  0E32  086C               	movf	___fladd@a+1,w
 11488  0E33  0141               	movlb	1	; select bank1
 11489  0E34  00A0               	movwf	??___fladd^(0+128)
 11490  0E35  0820               	movf	??___fladd^(0+128),w
 11491  0E36  0140               	movlb	0	; select bank0
 11492  0E37  00E8               	movwf	___fladd@b+1
 11493  0E38  0141               	movlb	1	; select bank1
 11494  0E39  082B               	movf	___fladd@grs^(0+128),w
 11495  0E3A  00A0               	movwf	??___fladd^(0+128)
 11496  0E3B  0820               	movf	??___fladd^(0+128),w
 11497  0E3C  0140               	movlb	0	; select bank0
 11498  0E3D  00EC               	movwf	___fladd@a+1
 11499  0E3E  0869               	movf	___fladd@b+2,w
 11500  0E3F  0141               	movlb	1	; select bank1
 11501  0E40  00A0               	movwf	??___fladd^(0+128)
 11502  0E41  0820               	movf	??___fladd^(0+128),w
 11503  0E42  00AB               	movwf	___fladd@grs^(0+128)
 11504  0E43  0140               	movlb	0	; select bank0
 11505  0E44  086D               	movf	___fladd@a+2,w
 11506  0E45  0141               	movlb	1	; select bank1
 11507  0E46  00A0               	movwf	??___fladd^(0+128)
 11508  0E47  0820               	movf	??___fladd^(0+128),w
 11509  0E48  0140               	movlb	0	; select bank0
 11510  0E49  00E9               	movwf	___fladd@b+2
 11511  0E4A  0141               	movlb	1	; select bank1
 11512  0E4B  082B               	movf	___fladd@grs^(0+128),w
 11513  0E4C  00A0               	movwf	??___fladd^(0+128)
 11514  0E4D  0820               	movf	??___fladd^(0+128),w
 11515  0E4E  0140               	movlb	0	; select bank0
 11516  0E4F  00ED               	movwf	___fladd@a+2
 11517  0E50  086A               	movf	___fladd@b+3,w
 11518  0E51  0141               	movlb	1	; select bank1
 11519  0E52  00A0               	movwf	??___fladd^(0+128)
 11520  0E53  0820               	movf	??___fladd^(0+128),w
 11521  0E54  00AB               	movwf	___fladd@grs^(0+128)
 11522  0E55  0140               	movlb	0	; select bank0
 11523  0E56  086E               	movf	___fladd@a+3,w
 11524  0E57  0141               	movlb	1	; select bank1
 11525  0E58  00A0               	movwf	??___fladd^(0+128)
 11526  0E59  0820               	movf	??___fladd^(0+128),w
 11527  0E5A  0140               	movlb	0	; select bank0
 11528  0E5B  00EA               	movwf	___fladd@b+3
 11529  0E5C  0141               	movlb	1	; select bank1
 11530  0E5D  082B               	movf	___fladd@grs^(0+128),w
 11531  0E5E  00A0               	movwf	??___fladd^(0+128)
 11532  0E5F  0820               	movf	??___fladd^(0+128),w
 11533  0E60  0140               	movlb	0	; select bank0
 11534  0E61  00EE               	movwf	___fladd@a+3
 11535  0E62                     l3564:	
 11536  0E62  0141               	movlb	1	; select bank1
 11537  0E63  01AB               	clrf	___fladd@grs^(0+128)
 11538  0E64  0829               	movf	___fladd@aexp^(0+128),w
 11539  0E65  00A0               	movwf	??___fladd^(0+128)
 11540  0E66  01A1               	clrf	(??___fladd^(0+128)+1)
 11541  0E67  0821               	movf	(??___fladd+1)^(0+128),w
 11542  0E68  00A3               	movwf	((??___fladd+2)^(0+128)+1)
 11543  0E69  082A               	movf	___fladd@bexp^(0+128),w
 11544  0E6A  0220               	subwf	??___fladd^(0+128),w
 11545  0E6B  00A2               	movwf	(??___fladd+2)^(0+128)
 11546  0E6C  1C03               	skipc
 11547  0E6D  03A3               	decf	((??___fladd+2)^(0+128)+1),f
 11548  0E6E  0823               	movf	(??___fladd+3)^(0+128),w
 11549  0E6F  3A80               	xorlw	128
 11550  0E70  00A4               	movwf	(??___fladd+4)^(0+128)
 11551  0E71  3080               	movlw	128
 11552  0E72  0224               	subwf	(??___fladd+4)^(0+128),w
 11553  0E73  1D03               	skipz
 11554  0E74  2E77               	goto	u3175
 11555  0E75  301A               	movlw	26
 11556  0E76  0222               	subwf	(??___fladd+2)^(0+128),w
 11557  0E77                     u3175:	
 11558  0E77  1C03               	skipc
 11559  0E78  2EB4               	goto	l3582
 11560  0E79  0140               	movlb	0	; select bank0
 11561  0E7A  086A               	movf	___fladd@b+3,w
 11562  0E7B  0469               	iorwf	___fladd@b+2,w
 11563  0E7C  0468               	iorwf	___fladd@b+1,w
 11564  0E7D  0467               	iorwf	___fladd@b,w
 11565  0E7E  1903               	btfsc	3,2
 11566  0E7F  2E82               	goto	u3180
 11567  0E80  3001               	movlw	1
 11568  0E81  2E83               	goto	u3190
 11569  0E82                     u3180:	
 11570  0E82  3000               	movlw	0
 11571  0E83                     u3190:	
 11572  0E83  0141               	movlb	1	; select bank1
 11573  0E84  00A0               	movwf	??___fladd^(0+128)
 11574  0E85  0820               	movf	??___fladd^(0+128),w
 11575  0E86  00AB               	movwf	___fladd@grs^(0+128)
 11576  0E87  3000               	movlw	0
 11577  0E88  0140               	movlb	0	; select bank0
 11578  0E89  00EA               	movwf	___fladd@b+3
 11579  0E8A  3000               	movlw	0
 11580  0E8B  00E9               	movwf	___fladd@b+2
 11581  0E8C  3000               	movlw	0
 11582  0E8D  00E8               	movwf	___fladd@b+1
 11583  0E8E  3000               	movlw	0
 11584  0E8F  00E7               	movwf	___fladd@b
 11585  0E90  0141               	movlb	1	; select bank1
 11586  0E91  0829               	movf	___fladd@aexp^(0+128),w
 11587  0E92  00A0               	movwf	??___fladd^(0+128)
 11588  0E93  0820               	movf	??___fladd^(0+128),w
 11589  0E94  00AA               	movwf	___fladd@bexp^(0+128)
 11590  0E95  2EB9               	goto	l1166
 11591  0E96                     l1168:	
 11592  0E96  1C2B               	btfss	___fladd@grs^(0+128),0
 11593  0E97  2E9E               	goto	l3572
 11594  0E98  362B               	lsrf	___fladd@grs^(0+128),w
 11595  0E99  3801               	iorlw	1
 11596  0E9A  00A0               	movwf	??___fladd^(0+128)
 11597  0E9B  0820               	movf	??___fladd^(0+128),w
 11598  0E9C  00AB               	movwf	___fladd@grs^(0+128)
 11599  0E9D  2EA0               	goto	l3574
 11600  0E9E                     l3572:	
 11601  0E9E  1003               	clrc
 11602  0E9F  0CAB               	rrf	___fladd@grs^(0+128),f
 11603  0EA0                     l3574:	
 11604  0EA0  0140               	movlb	0	; select bank0
 11605  0EA1  1C67               	btfss	___fladd@b,0
 11606  0EA2  2EA5               	goto	l3578
 11607  0EA3  0141               	movlb	1	; select bank1
 11608  0EA4  17AB               	bsf	___fladd@grs^(0+128),7
 11609  0EA5                     l3578:	
 11610  0EA5  3001               	movlw	1
 11611  0EA6  0141               	movlb	1	; select bank1
 11612  0EA7  00A0               	movwf	??___fladd^(0+128)
 11613  0EA8                     u3225:	
 11614  0EA8  0140               	movlb	0	; select bank0
 11615  0EA9  37EA               	asrf	___fladd@b+3,f
 11616  0EAA  0CE9               	rrf	___fladd@b+2,f
 11617  0EAB  0CE8               	rrf	___fladd@b+1,f
 11618  0EAC  0CE7               	rrf	___fladd@b,f
 11619  0EAD  0141               	movlb	1	; select bank1
 11620  0EAE  0BA0               	decfsz	(??___fladd^(0+128))& (0+127),f
 11621  0EAF  2EA8               	goto	u3225
 11622  0EB0  3001               	movlw	1
 11623  0EB1  00A0               	movwf	??___fladd^(0+128)
 11624  0EB2  0820               	movf	??___fladd^(0+128),w
 11625  0EB3  07AA               	addwf	___fladd@bexp^(0+128),f
 11626  0EB4                     l3582:	
 11627  0EB4  0141               	movlb	1	; select bank1
 11628  0EB5  0829               	movf	___fladd@aexp^(0+128),w
 11629  0EB6  022A               	subwf	___fladd@bexp^(0+128),w
 11630  0EB7  1C03               	skipc
 11631  0EB8  2E96               	goto	l1168
 11632  0EB9                     l1166:	
 11633  0EB9  1B28               	btfsc	___fladd@signs^(0+128),6
 11634  0EBA  2EF3               	goto	l3608
 11635  0EBB  082A               	movf	___fladd@bexp^(0+128),w
 11636  0EBC  1D03               	btfss	3,2
 11637  0EBD  2EC8               	goto	l3590
 11638  0EBE  3000               	movlw	0
 11639  0EBF  0140               	movlb	0	; select bank0
 11640  0EC0  00EA               	movwf	?___fladd+3
 11641  0EC1  3000               	movlw	0
 11642  0EC2  00E9               	movwf	?___fladd+2
 11643  0EC3  3000               	movlw	0
 11644  0EC4  00E8               	movwf	?___fladd+1
 11645  0EC5  3000               	movlw	0
 11646  0EC6  00E7               	movwf	?___fladd
 11647  0EC7  0008               	return
 11648  0EC8                     l3590:	
 11649  0EC8  0140               	movlb	0	; select bank0
 11650  0EC9  086B               	movf	___fladd@a,w
 11651  0ECA  07E7               	addwf	___fladd@b,f
 11652  0ECB  086C               	movf	___fladd@a+1,w
 11653  0ECC  3DE8               	addwfc	___fladd@b+1,f
 11654  0ECD  086D               	movf	___fladd@a+2,w
 11655  0ECE  3DE9               	addwfc	___fladd@b+2,f
 11656  0ECF  086E               	movf	___fladd@a+3,w
 11657  0ED0  3DEA               	addwfc	___fladd@b+3,f
 11658  0ED1  1C6A               	btfss	___fladd@b+3,0
 11659  0ED2  2F8C               	goto	l3642
 11660  0ED3  0141               	movlb	1	; select bank1
 11661  0ED4  1C2B               	btfss	___fladd@grs^(0+128),0
 11662  0ED5  2EDC               	goto	l3598
 11663  0ED6  362B               	lsrf	___fladd@grs^(0+128),w
 11664  0ED7  3801               	iorlw	1
 11665  0ED8  00A0               	movwf	??___fladd^(0+128)
 11666  0ED9  0820               	movf	??___fladd^(0+128),w
 11667  0EDA  00AB               	movwf	___fladd@grs^(0+128)
 11668  0EDB  2EDE               	goto	l3600
 11669  0EDC                     l3598:	
 11670  0EDC  1003               	clrc
 11671  0EDD  0CAB               	rrf	___fladd@grs^(0+128),f
 11672  0EDE                     l3600:	
 11673  0EDE  0140               	movlb	0	; select bank0
 11674  0EDF  1C67               	btfss	___fladd@b,0
 11675  0EE0  2EE3               	goto	l3604
 11676  0EE1  0141               	movlb	1	; select bank1
 11677  0EE2  17AB               	bsf	___fladd@grs^(0+128),7
 11678  0EE3                     l3604:	
 11679  0EE3  3001               	movlw	1
 11680  0EE4  0141               	movlb	1	; select bank1
 11681  0EE5  00A0               	movwf	??___fladd^(0+128)
 11682  0EE6                     u3295:	
 11683  0EE6  0140               	movlb	0	; select bank0
 11684  0EE7  37EA               	asrf	___fladd@b+3,f
 11685  0EE8  0CE9               	rrf	___fladd@b+2,f
 11686  0EE9  0CE8               	rrf	___fladd@b+1,f
 11687  0EEA  0CE7               	rrf	___fladd@b,f
 11688  0EEB  0141               	movlb	1	; select bank1
 11689  0EEC  0BA0               	decfsz	(??___fladd^(0+128))& (0+127),f
 11690  0EED  2EE6               	goto	u3295
 11691  0EEE  3001               	movlw	1
 11692  0EEF  00A0               	movwf	??___fladd^(0+128)
 11693  0EF0  0820               	movf	??___fladd^(0+128),w
 11694  0EF1  07AA               	addwf	___fladd@bexp^(0+128),f
 11695  0EF2  2F8C               	goto	l3642
 11696  0EF3                     l3608:	
 11697  0EF3  0140               	movlb	0	; select bank0
 11698  0EF4  086A               	movf	___fladd@b+3,w
 11699  0EF5  3A80               	xorlw	128
 11700  0EF6  0141               	movlb	1	; select bank1
 11701  0EF7  00A0               	movwf	??___fladd^(0+128)
 11702  0EF8  0140               	movlb	0	; select bank0
 11703  0EF9  086E               	movf	___fladd@a+3,w
 11704  0EFA  3A80               	xorlw	128
 11705  0EFB  0141               	movlb	1	; select bank1
 11706  0EFC  0220               	subwf	??___fladd^(0+128),w
 11707  0EFD  0140               	movlb	0	; select bank0
 11708  0EFE  1D03               	skipz
 11709  0EFF  2F0A               	goto	u3303
 11710  0F00  086D               	movf	___fladd@a+2,w
 11711  0F01  0269               	subwf	___fladd@b+2,w
 11712  0F02  1D03               	skipz
 11713  0F03  2F0A               	goto	u3303
 11714  0F04  086C               	movf	___fladd@a+1,w
 11715  0F05  0268               	subwf	___fladd@b+1,w
 11716  0F06  1D03               	skipz
 11717  0F07  2F0A               	goto	u3303
 11718  0F08  086B               	movf	___fladd@a,w
 11719  0F09  0267               	subwf	___fladd@b,w
 11720  0F0A                     u3303:	
 11721  0F0A  1803               	skipnc
 11722  0F0B  2F54               	goto	l3618
 11723  0F0C  30FF               	movlw	255
 11724  0F0D  0141               	movlb	1	; select bank1
 11725  0F0E  00A0               	movwf	??___fladd^(0+128)
 11726  0F0F  30FF               	movlw	255
 11727  0F10  00A1               	movwf	(??___fladd^(0+128)+1)
 11728  0F11  30FF               	movlw	255
 11729  0F12  00A2               	movwf	(??___fladd^(0+128)+2)
 11730  0F13  30FF               	movlw	255
 11731  0F14  00A3               	movwf	(??___fladd^(0+128)+3)
 11732  0F15  0140               	movlb	0	; select bank0
 11733  0F16  0867               	movf	___fladd@b,w
 11734  0F17  026B               	subwf	___fladd@a,w
 11735  0F18  0141               	movlb	1	; select bank1
 11736  0F19  00A4               	movwf	(??___fladd+4)^(0+128)
 11737  0F1A  0140               	movlb	0	; select bank0
 11738  0F1B  0868               	movf	___fladd@b+1,w
 11739  0F1C  3B6C               	subwfb	___fladd@a+1,w
 11740  0F1D  0141               	movlb	1	; select bank1
 11741  0F1E  00A5               	movwf	((??___fladd+4)^(0+128)+1)
 11742  0F1F  0140               	movlb	0	; select bank0
 11743  0F20  0869               	movf	___fladd@b+2,w
 11744  0F21  3B6D               	subwfb	___fladd@a+2,w
 11745  0F22  0141               	movlb	1	; select bank1
 11746  0F23  00A6               	movwf	((??___fladd+4)^(0+128)+2)
 11747  0F24  0140               	movlb	0	; select bank0
 11748  0F25  086A               	movf	___fladd@b+3,w
 11749  0F26  3B6E               	subwfb	___fladd@a+3,w
 11750  0F27  0141               	movlb	1	; select bank1
 11751  0F28  00A7               	movwf	((??___fladd+4)^(0+128)+3)
 11752  0F29  0824               	movf	(??___fladd+4)^(0+128),w
 11753  0F2A  07A0               	addwf	??___fladd^(0+128),f
 11754  0F2B  0825               	movf	(??___fladd+5)^(0+128),w
 11755  0F2C  3DA1               	addwfc	(??___fladd^(0+128)+1),f
 11756  0F2D  0826               	movf	(??___fladd+6)^(0+128),w
 11757  0F2E  3DA2               	addwfc	(??___fladd^(0+128)+2),f
 11758  0F2F  0827               	movf	(??___fladd+7)^(0+128),w
 11759  0F30  3DA3               	addwfc	(??___fladd^(0+128)+3),f
 11760  0F31  0823               	movf	(??___fladd+3)^(0+128),w
 11761  0F32  0140               	movlb	0	; select bank0
 11762  0F33  00EA               	movwf	___fladd@b+3
 11763  0F34  0141               	movlb	1	; select bank1
 11764  0F35  0822               	movf	(??___fladd+2)^(0+128),w
 11765  0F36  0140               	movlb	0	; select bank0
 11766  0F37  00E9               	movwf	___fladd@b+2
 11767  0F38  0141               	movlb	1	; select bank1
 11768  0F39  0821               	movf	(??___fladd+1)^(0+128),w
 11769  0F3A  0140               	movlb	0	; select bank0
 11770  0F3B  00E8               	movwf	___fladd@b+1
 11771  0F3C  0141               	movlb	1	; select bank1
 11772  0F3D  0820               	movf	??___fladd^(0+128),w
 11773  0F3E  0140               	movlb	0	; select bank0
 11774  0F3F  00E7               	movwf	___fladd@b
 11775  0F40  3080               	movlw	128
 11776  0F41  0141               	movlb	1	; select bank1
 11777  0F42  00A0               	movwf	??___fladd^(0+128)
 11778  0F43  0820               	movf	??___fladd^(0+128),w
 11779  0F44  06A8               	xorwf	___fladd@signs^(0+128),f
 11780  0F45  09AB               	comf	___fladd@grs^(0+128),f
 11781  0F46  0AAB               	incf	___fladd@grs^(0+128),f
 11782  0F47  082B               	movf	___fladd@grs^(0+128),w
 11783  0F48  1D03               	btfss	3,2
 11784  0F49  2F5C               	goto	l1183
 11785  0F4A  3001               	movlw	1
 11786  0F4B  0140               	movlb	0	; select bank0
 11787  0F4C  07E7               	addwf	___fladd@b,f
 11788  0F4D  3000               	movlw	0
 11789  0F4E  3DE8               	addwfc	___fladd@b+1,f
 11790  0F4F  3000               	movlw	0
 11791  0F50  3DE9               	addwfc	___fladd@b+2,f
 11792  0F51  3000               	movlw	0
 11793  0F52  3DEA               	addwfc	___fladd@b+3,f
 11794  0F53  2F5C               	goto	l1183
 11795  0F54                     l3618:	
 11796  0F54  086B               	movf	___fladd@a,w
 11797  0F55  02E7               	subwf	___fladd@b,f
 11798  0F56  086C               	movf	___fladd@a+1,w
 11799  0F57  3BE8               	subwfb	___fladd@b+1,f
 11800  0F58  086D               	movf	___fladd@a+2,w
 11801  0F59  3BE9               	subwfb	___fladd@b+2,f
 11802  0F5A  086E               	movf	___fladd@a+3,w
 11803  0F5B  3BEA               	subwfb	___fladd@b+3,f
 11804  0F5C                     l1183:	
 11805  0F5C  0140               	movlb	0	; select bank0
 11806  0F5D  086A               	movf	___fladd@b+3,w
 11807  0F5E  0469               	iorwf	___fladd@b+2,w
 11808  0F5F  0468               	iorwf	___fladd@b+1,w
 11809  0F60  0467               	iorwf	___fladd@b,w
 11810  0F61  1D03               	skipz
 11811  0F62  2F89               	goto	l3640
 11812  0F63  0141               	movlb	1	; select bank1
 11813  0F64  082B               	movf	___fladd@grs^(0+128),w
 11814  0F65  1D03               	btfss	3,2
 11815  0F66  2F89               	goto	l3640
 11816  0F67  3000               	movlw	0
 11817  0F68  0140               	movlb	0	; select bank0
 11818  0F69  00EA               	movwf	?___fladd+3
 11819  0F6A  3000               	movlw	0
 11820  0F6B  00E9               	movwf	?___fladd+2
 11821  0F6C  3000               	movlw	0
 11822  0F6D  00E8               	movwf	?___fladd+1
 11823  0F6E  3000               	movlw	0
 11824  0F6F  00E7               	movwf	?___fladd
 11825  0F70  0008               	return
 11826  0F71                     l3626:	
 11827  0F71  3001               	movlw	1
 11828  0F72                     u3345:	
 11829  0F72  35E7               	lslf	___fladd@b,f
 11830  0F73  0DE8               	rlf	___fladd@b+1,f
 11831  0F74  0DE9               	rlf	___fladd@b+2,f
 11832  0F75  0DEA               	rlf	___fladd@b+3,f
 11833  0F76  0B89               	decfsz	9,f
 11834  0F77  2F72               	goto	u3345
 11835  0F78  0141               	movlb	1	; select bank1
 11836  0F79  1FAB               	btfss	___fladd@grs^(0+128),7
 11837  0F7A  2F7D               	goto	l1187
 11838  0F7B  0140               	movlb	0	; select bank0
 11839  0F7C  1467               	bsf	___fladd@b,0
 11840  0F7D                     l1187:	
 11841  0F7D  0141               	movlb	1	; select bank1
 11842  0F7E  1C2B               	btfss	___fladd@grs^(0+128),0
 11843  0F7F  2F82               	goto	l3634
 11844  0F80  1403               	setc
 11845  0F81  2F83               	goto	L4
 11846  0F82                     l3634:	
 11847  0F82  1003               	clrc
 11848  0F83                     L4:	
 11849  0F83  0DAB               	rlf	___fladd@grs^(0+128),f
 11850  0F84  082A               	movf	___fladd@bexp^(0+128),w
 11851  0F85  1903               	btfsc	3,2
 11852  0F86  2F89               	goto	l3640
 11853  0F87  3001               	movlw	1
 11854  0F88  02AA               	subwf	___fladd@bexp^(0+128),f
 11855  0F89                     l3640:	
 11856  0F89  0140               	movlb	0	; select bank0
 11857  0F8A  1FE9               	btfss	___fladd@b+2,7
 11858  0F8B  2F71               	goto	l3626
 11859  0F8C                     l3642:	
 11860  0F8C  0141               	movlb	1	; select bank1
 11861  0F8D  01A9               	clrf	___fladd@aexp^(0+128)
 11862  0F8E  1FAB               	btfss	___fladd@grs^(0+128),7
 11863  0F8F  2F9A               	goto	l3652
 11864  0F90  082B               	movf	___fladd@grs^(0+128),w
 11865  0F91  397F               	andlw	127
 11866  0F92  1D03               	btfss	3,2
 11867  0F93  2F97               	goto	l3648
 11868  0F94  0140               	movlb	0	; select bank0
 11869  0F95  1C67               	btfss	___fladd@b,0
 11870  0F96  2F9A               	goto	l3652
 11871  0F97                     l3648:	
 11872  0F97  0141               	movlb	1	; select bank1
 11873  0F98  01A9               	clrf	___fladd@aexp^(0+128)
 11874  0F99  0AA9               	incf	___fladd@aexp^(0+128),f
 11875  0F9A                     l3652:	
 11876  0F9A  0141               	movlb	1	; select bank1
 11877  0F9B  0829               	movf	___fladd@aexp^(0+128),w
 11878  0F9C  1903               	btfsc	3,2
 11879  0F9D  2FD7               	goto	l1196
 11880  0F9E  3001               	movlw	1
 11881  0F9F  0140               	movlb	0	; select bank0
 11882  0FA0  07E7               	addwf	___fladd@b,f
 11883  0FA1  3000               	movlw	0
 11884  0FA2  3DE8               	addwfc	___fladd@b+1,f
 11885  0FA3  3000               	movlw	0
 11886  0FA4  3DE9               	addwfc	___fladd@b+2,f
 11887  0FA5  3000               	movlw	0
 11888  0FA6  3DEA               	addwfc	___fladd@b+3,f
 11889  0FA7  1C6A               	btfss	___fladd@b+3,0
 11890  0FA8  2FD7               	goto	l1196
 11891  0FA9  0867               	movf	___fladd@b,w
 11892  0FAA  0141               	movlb	1	; select bank1
 11893  0FAB  00A0               	movwf	??___fladd^(0+128)
 11894  0FAC  0140               	movlb	0	; select bank0
 11895  0FAD  0868               	movf	___fladd@b+1,w
 11896  0FAE  0141               	movlb	1	; select bank1
 11897  0FAF  00A1               	movwf	(??___fladd^(0+128)+1)
 11898  0FB0  0140               	movlb	0	; select bank0
 11899  0FB1  0869               	movf	___fladd@b+2,w
 11900  0FB2  0141               	movlb	1	; select bank1
 11901  0FB3  00A2               	movwf	(??___fladd^(0+128)+2)
 11902  0FB4  0140               	movlb	0	; select bank0
 11903  0FB5  086A               	movf	___fladd@b+3,w
 11904  0FB6  0141               	movlb	1	; select bank1
 11905  0FB7  00A3               	movwf	(??___fladd^(0+128)+3)
 11906  0FB8  3001               	movlw	1
 11907  0FB9  00A4               	movwf	(??___fladd+4)^(0+128)
 11908  0FBA                     u3445:	
 11909  0FBA  37A3               	asrf	(??___fladd^(0+128)+3),f
 11910  0FBB  0CA2               	rrf	(??___fladd^(0+128)+2),f
 11911  0FBC  0CA1               	rrf	(??___fladd^(0+128)+1),f
 11912  0FBD  0CA0               	rrf	??___fladd^(0+128),f
 11913  0FBE  0BA4               	decfsz	(??___fladd+4)^(0+128),f
 11914  0FBF  2FBA               	goto	u3445
 11915  0FC0  0823               	movf	(??___fladd+3)^(0+128),w
 11916  0FC1  0140               	movlb	0	; select bank0
 11917  0FC2  00EA               	movwf	___fladd@b+3
 11918  0FC3  0141               	movlb	1	; select bank1
 11919  0FC4  0822               	movf	(??___fladd+2)^(0+128),w
 11920  0FC5  0140               	movlb	0	; select bank0
 11921  0FC6  00E9               	movwf	___fladd@b+2
 11922  0FC7  0141               	movlb	1	; select bank1
 11923  0FC8  0821               	movf	(??___fladd+1)^(0+128),w
 11924  0FC9  0140               	movlb	0	; select bank0
 11925  0FCA  00E8               	movwf	___fladd@b+1
 11926  0FCB  0141               	movlb	1	; select bank1
 11927  0FCC  0820               	movf	??___fladd^(0+128),w
 11928  0FCD  0140               	movlb	0	; select bank0
 11929  0FCE  00E7               	movwf	___fladd@b
 11930  0FCF  0141               	movlb	1	; select bank1
 11931  0FD0  0A2A               	incf	___fladd@bexp^(0+128),w
 11932  0FD1  1903               	btfsc	3,2
 11933  0FD2  2FD7               	goto	l1196
 11934  0FD3  3001               	movlw	1
 11935  0FD4  00A0               	movwf	??___fladd^(0+128)
 11936  0FD5  0820               	movf	??___fladd^(0+128),w
 11937  0FD6  07AA               	addwf	___fladd@bexp^(0+128),f
 11938  0FD7                     l1196:	
 11939  0FD7  0141               	movlb	1	; select bank1
 11940  0FD8  0A2A               	incf	___fladd@bexp^(0+128),w
 11941  0FD9  1D03               	btfss	3,2
 11942  0FDA  082A               	movf	___fladd@bexp^(0+128),w
 11943  0FDB  1D03               	btfss	3,2
 11944  0FDC  2FEA               	goto	l3670
 11945  0FDD  3000               	movlw	0
 11946  0FDE  0140               	movlb	0	; select bank0
 11947  0FDF  00EA               	movwf	___fladd@b+3
 11948  0FE0  3000               	movlw	0
 11949  0FE1  00E9               	movwf	___fladd@b+2
 11950  0FE2  3000               	movlw	0
 11951  0FE3  00E8               	movwf	___fladd@b+1
 11952  0FE4  3000               	movlw	0
 11953  0FE5  00E7               	movwf	___fladd@b
 11954  0FE6  0141               	movlb	1	; select bank1
 11955  0FE7  082A               	movf	___fladd@bexp^(0+128),w
 11956  0FE8  1903               	btfsc	3,2
 11957  0FE9  01A8               	clrf	___fladd@signs^(0+128)
 11958  0FEA                     l3670:	
 11959  0FEA  1C2A               	btfss	___fladd@bexp^(0+128),0
 11960  0FEB  2FEF               	goto	l3674
 11961  0FEC  0140               	movlb	0	; select bank0
 11962  0FED  17E9               	bsf	___fladd@b+2,7
 11963  0FEE  2FF4               	goto	l1204
 11964  0FEF                     l3674:	
 11965  0FEF  307F               	movlw	127
 11966  0FF0  00A0               	movwf	??___fladd^(0+128)
 11967  0FF1  0820               	movf	??___fladd^(0+128),w
 11968  0FF2  0140               	movlb	0	; select bank0
 11969  0FF3  05E9               	andwf	___fladd@b+2,f
 11970  0FF4                     l1204:	
 11971  0FF4  0141               	movlb	1	; select bank1
 11972  0FF5  362A               	lsrf	___fladd@bexp^(0+128),w
 11973  0FF6  00A0               	movwf	??___fladd^(0+128)
 11974  0FF7  0820               	movf	??___fladd^(0+128),w
 11975  0FF8  0140               	movlb	0	; select bank0
 11976  0FF9  00EA               	movwf	___fladd@b+3
 11977  0FFA  0141               	movlb	1	; select bank1
 11978  0FFB  1FA8               	btfss	___fladd@signs^(0+128),7
 11979  0FFC  0008               	return
 11980  0FFD  0140               	movlb	0	; select bank0
 11981  0FFE  17EA               	bsf	___fladd@b+3,7
 11982  0FFF  0008               	return
 11983  1000                     __end_of___fladd:	
 11984                           
 11985                           	psect	text31
 11986  1567                     __ptext31:	
 11987 ;; *************** function ___xxtofl *****************
 11988 ;; Defined at:
 11989 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
 11990 ;; Parameters:    Size  Location     Type
 11991 ;;  sign            1    wreg     unsigned char 
 11992 ;;  val             4    0[BANK0 ] long 
 11993 ;; Auto vars:     Size  Location     Type
 11994 ;;  sign            1    8[BANK0 ] unsigned char 
 11995 ;;  arg             4   10[BANK0 ] unsigned long 
 11996 ;;  exp             1    9[BANK0 ] unsigned char 
 11997 ;; Return value:  Size  Location     Type
 11998 ;;                  4    0[BANK0 ] unsigned char 
 11999 ;; Registers used:
 12000 ;;		wreg, status,2, status,0
 12001 ;; Tracked objects:
 12002 ;;		On entry : 0/0
 12003 ;;		On exit  : 0/0
 12004 ;;		Unchanged: 0/0
 12005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12006 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12007 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12008 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12009 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12010 ;;Total ram usage:       14 bytes
 12011 ;; Hardware stack levels used:    1
 12012 ;; Hardware stack levels required when called:    5
 12013 ;; This function calls:
 12014 ;;		Nothing
 12015 ;; This function is called by:
 12016 ;;		_main
 12017 ;;		_log
 12018 ;;		_trunc
 12019 ;; This function uses a non-reentrant model
 12020 ;;
 12021                           
 12022                           
 12023                           ;psect for function ___xxtofl
 12024  1567                     ___xxtofl:	
 12025                           
 12026                           ;incstack = 0
 12027                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 12028                           ;___xxtofl@sign stored from wreg
 12029  1567  0140               	movlb	0	; select bank0
 12030  1568  00A8               	movwf	___xxtofl@sign
 12031  1569  0828               	movf	___xxtofl@sign,w
 12032  156A  1D03               	btfss	3,2
 12033  156B  1FA3               	btfss	___xxtofl@val+3,7
 12034  156C  2D7D               	goto	l4104
 12035  156D  0920               	comf	___xxtofl@val,w
 12036  156E  00AA               	movwf	___xxtofl@arg
 12037  156F  0921               	comf	___xxtofl@val+1,w
 12038  1570  00AB               	movwf	___xxtofl@arg+1
 12039  1571  0922               	comf	___xxtofl@val+2,w
 12040  1572  00AC               	movwf	___xxtofl@arg+2
 12041  1573  0923               	comf	___xxtofl@val+3,w
 12042  1574  00AD               	movwf	___xxtofl@arg+3
 12043  1575  0AAA               	incf	___xxtofl@arg,f
 12044  1576  1903               	skipnz
 12045  1577  0AAB               	incf	___xxtofl@arg+1,f
 12046  1578  1903               	skipnz
 12047  1579  0AAC               	incf	___xxtofl@arg+2,f
 12048  157A  1903               	skipnz
 12049  157B  0AAD               	incf	___xxtofl@arg+3,f
 12050  157C  2D85               	goto	l1296
 12051  157D                     l4104:	
 12052  157D  0823               	movf	___xxtofl@val+3,w
 12053  157E  00AD               	movwf	___xxtofl@arg+3
 12054  157F  0822               	movf	___xxtofl@val+2,w
 12055  1580  00AC               	movwf	___xxtofl@arg+2
 12056  1581  0821               	movf	___xxtofl@val+1,w
 12057  1582  00AB               	movwf	___xxtofl@arg+1
 12058  1583  0820               	movf	___xxtofl@val,w
 12059  1584  00AA               	movwf	___xxtofl@arg
 12060  1585                     l1296:	
 12061  1585  0823               	movf	___xxtofl@val+3,w
 12062  1586  0422               	iorwf	___xxtofl@val+2,w
 12063  1587  0421               	iorwf	___xxtofl@val+1,w
 12064  1588  0420               	iorwf	___xxtofl@val,w
 12065  1589  1D03               	skipz
 12066  158A  2D94               	goto	l4110
 12067  158B  3000               	movlw	0
 12068  158C  00A3               	movwf	?___xxtofl+3
 12069  158D  3000               	movlw	0
 12070  158E  00A2               	movwf	?___xxtofl+2
 12071  158F  3000               	movlw	0
 12072  1590  00A1               	movwf	?___xxtofl+1
 12073  1591  3000               	movlw	0
 12074  1592  00A0               	movwf	?___xxtofl
 12075  1593  0008               	return
 12076  1594                     l4110:	
 12077  1594  3096               	movlw	150
 12078  1595  00A4               	movwf	??___xxtofl
 12079  1596  0824               	movf	??___xxtofl,w
 12080  1597  00A9               	movwf	___xxtofl@exp
 12081  1598                     l4114:	
 12082  1598  30FE               	movlw	254
 12083  1599  052D               	andwf	___xxtofl@arg+3,w
 12084  159A  1903               	btfsc	3,2
 12085  159B  2DBB               	goto	l1302
 12086  159C  3001               	movlw	1
 12087  159D  00A4               	movwf	??___xxtofl
 12088  159E  0824               	movf	??___xxtofl,w
 12089  159F  07A9               	addwf	___xxtofl@exp,f
 12090  15A0  3001               	movlw	1
 12091  15A1                     u4385:	
 12092  15A1  36AD               	lsrf	___xxtofl@arg+3,f
 12093  15A2  0CAC               	rrf	___xxtofl@arg+2,f
 12094  15A3  0CAB               	rrf	___xxtofl@arg+1,f
 12095  15A4  0CAA               	rrf	___xxtofl@arg,f
 12096  15A5  0B89               	decfsz	9,f
 12097  15A6  2DA1               	goto	u4385
 12098  15A7  2D98               	goto	l4114
 12099  15A8                     l4116:	
 12100  15A8  3001               	movlw	1
 12101  15A9  00A4               	movwf	??___xxtofl
 12102  15AA  0824               	movf	??___xxtofl,w
 12103  15AB  07A9               	addwf	___xxtofl@exp,f
 12104  15AC  3001               	movlw	1
 12105  15AD  07AA               	addwf	___xxtofl@arg,f
 12106  15AE  3000               	movlw	0
 12107  15AF  3DAB               	addwfc	___xxtofl@arg+1,f
 12108  15B0  3000               	movlw	0
 12109  15B1  3DAC               	addwfc	___xxtofl@arg+2,f
 12110  15B2  3000               	movlw	0
 12111  15B3  3DAD               	addwfc	___xxtofl@arg+3,f
 12112  15B4  3001               	movlw	1
 12113  15B5                     u4405:	
 12114  15B5  36AD               	lsrf	___xxtofl@arg+3,f
 12115  15B6  0CAC               	rrf	___xxtofl@arg+2,f
 12116  15B7  0CAB               	rrf	___xxtofl@arg+1,f
 12117  15B8  0CAA               	rrf	___xxtofl@arg,f
 12118  15B9  0B89               	decfsz	9,f
 12119  15BA  2DB5               	goto	u4405
 12120  15BB                     l1302:	
 12121  15BB  30FF               	movlw	255
 12122  15BC  052D               	andwf	___xxtofl@arg+3,w
 12123  15BD  1903               	btfsc	3,2
 12124  15BE  2DCD               	goto	l4124
 12125  15BF  2DA8               	goto	l4116
 12126  15C0                     l4126:	
 12127  15C0  3002               	movlw	2
 12128  15C1  0229               	subwf	___xxtofl@exp,w
 12129  15C2  1C03               	btfss	3,0
 12130  15C3  2DCF               	goto	l1309
 12131  15C4  3001               	movlw	1
 12132  15C5  02A9               	subwf	___xxtofl@exp,f
 12133  15C6  3001               	movlw	1
 12134  15C7                     u4425:	
 12135  15C7  35AA               	lslf	___xxtofl@arg,f
 12136  15C8  0DAB               	rlf	___xxtofl@arg+1,f
 12137  15C9  0DAC               	rlf	___xxtofl@arg+2,f
 12138  15CA  0DAD               	rlf	___xxtofl@arg+3,f
 12139  15CB  0B89               	decfsz	9,f
 12140  15CC  2DC7               	goto	u4425
 12141  15CD                     l4124:	
 12142  15CD  1FAC               	btfss	___xxtofl@arg+2,7
 12143  15CE  2DC0               	goto	l4126
 12144  15CF                     l1309:	
 12145  15CF  1829               	btfsc	___xxtofl@exp,0
 12146  15D0  2DD9               	goto	l1310
 12147  15D1  30FF               	movlw	255
 12148  15D2  05AA               	andwf	___xxtofl@arg,f
 12149  15D3  30FF               	movlw	255
 12150  15D4  05AB               	andwf	___xxtofl@arg+1,f
 12151  15D5  307F               	movlw	127
 12152  15D6  05AC               	andwf	___xxtofl@arg+2,f
 12153  15D7  30FF               	movlw	255
 12154  15D8  05AD               	andwf	___xxtofl@arg+3,f
 12155  15D9                     l1310:	
 12156  15D9  1003               	clrc
 12157  15DA  0CA9               	rrf	___xxtofl@exp,f
 12158  15DB  0829               	movf	___xxtofl@exp,w
 12159  15DC  00A4               	movwf	??___xxtofl
 12160  15DD  01A5               	clrf	??___xxtofl+1
 12161  15DE  01A6               	clrf	??___xxtofl+2
 12162  15DF  01A7               	clrf	??___xxtofl+3
 12163  15E0  3018               	movlw	24
 12164  15E1                     u4465:	
 12165  15E1  35A4               	lslf	??___xxtofl,f
 12166  15E2  0DA5               	rlf	??___xxtofl+1,f
 12167  15E3  0DA6               	rlf	??___xxtofl+2,f
 12168  15E4  0DA7               	rlf	??___xxtofl+3,f
 12169  15E5  0B89               	decfsz	9,f
 12170  15E6  2DE1               	goto	u4465
 12171  15E7  0824               	movf	??___xxtofl,w
 12172  15E8  04AA               	iorwf	___xxtofl@arg,f
 12173  15E9  0825               	movf	??___xxtofl+1,w
 12174  15EA  04AB               	iorwf	___xxtofl@arg+1,f
 12175  15EB  0826               	movf	??___xxtofl+2,w
 12176  15EC  04AC               	iorwf	___xxtofl@arg+2,f
 12177  15ED  0827               	movf	??___xxtofl+3,w
 12178  15EE  04AD               	iorwf	___xxtofl@arg+3,f
 12179  15EF  0828               	movf	___xxtofl@sign,w
 12180  15F0  1D03               	btfss	3,2
 12181  15F1  1FA3               	btfss	___xxtofl@val+3,7
 12182  15F2  2DF4               	goto	l4138
 12183  15F3  17AD               	bsf	___xxtofl@arg+3,7
 12184  15F4                     l4138:	
 12185  15F4  082D               	movf	___xxtofl@arg+3,w
 12186  15F5  00A3               	movwf	?___xxtofl+3
 12187  15F6  082C               	movf	___xxtofl@arg+2,w
 12188  15F7  00A2               	movwf	?___xxtofl+2
 12189  15F8  082B               	movf	___xxtofl@arg+1,w
 12190  15F9  00A1               	movwf	?___xxtofl+1
 12191  15FA  082A               	movf	___xxtofl@arg,w
 12192  15FB  00A0               	movwf	?___xxtofl
 12193  15FC  0008               	return
 12194  15FD                     __end_of___xxtofl:	
 12195                           
 12196                           	psect	text32
 12197  13CC                     __ptext32:	
 12198 ;; *************** function ___flge *****************
 12199 ;; Defined at:
 12200 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
 12201 ;; Parameters:    Size  Location     Type
 12202 ;;  ff1             4    0[BANK0 ] unsigned char 
 12203 ;;  ff2             4    4[BANK0 ] unsigned char 
 12204 ;; Auto vars:     Size  Location     Type
 12205 ;;		None
 12206 ;; Return value:  Size  Location     Type
 12207 ;;		None               void
 12208 ;; Registers used:
 12209 ;;		wreg, status,2, status,0
 12210 ;; Tracked objects:
 12211 ;;		On entry : 0/0
 12212 ;;		On exit  : 0/0
 12213 ;;		Unchanged: 0/0
 12214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12215 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12217 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12218 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12219 ;;Total ram usage:       12 bytes
 12220 ;; Hardware stack levels used:    1
 12221 ;; Hardware stack levels required when called:    5
 12222 ;; This function calls:
 12223 ;;		Nothing
 12224 ;; This function is called by:
 12225 ;;		_main
 12226 ;;		_log
 12227 ;; This function uses a non-reentrant model
 12228 ;;
 12229                           
 12230                           
 12231                           ;psect for function ___flge
 12232  13CC                     ___flge:	
 12233                           
 12234                           ;incstack = 0
 12235                           ; Regs used in ___flge: [wreg+status,2+status,0]
 12236  13CC  3000               	movlw	0
 12237  13CD  0140               	movlb	0	; select bank0
 12238  13CE  0520               	andwf	___flge@ff1,w
 12239  13CF  00A8               	movwf	??___flge
 12240  13D0  3000               	movlw	0
 12241  13D1  0521               	andwf	___flge@ff1+1,w
 12242  13D2  00A9               	movwf	??___flge+1
 12243  13D3  3080               	movlw	128
 12244  13D4  0522               	andwf	___flge@ff1+2,w
 12245  13D5  00AA               	movwf	??___flge+2
 12246  13D6  307F               	movlw	127
 12247  13D7  0523               	andwf	___flge@ff1+3,w
 12248  13D8  00AB               	movwf	??___flge+3
 12249  13D9  082B               	movf	??___flge+3,w
 12250  13DA  042A               	iorwf	??___flge+2,w
 12251  13DB  0429               	iorwf	??___flge+1,w
 12252  13DC  0428               	iorwf	??___flge,w
 12253  13DD  1D03               	skipz
 12254  13DE  2BE7               	goto	l1043
 12255  13DF  3000               	movlw	0
 12256  13E0  00A3               	movwf	___flge@ff1+3
 12257  13E1  3000               	movlw	0
 12258  13E2  00A2               	movwf	___flge@ff1+2
 12259  13E3  3000               	movlw	0
 12260  13E4  00A1               	movwf	___flge@ff1+1
 12261  13E5  3000               	movlw	0
 12262  13E6  00A0               	movwf	___flge@ff1
 12263  13E7                     l1043:	
 12264  13E7  3000               	movlw	0
 12265  13E8  0524               	andwf	___flge@ff2,w
 12266  13E9  00A8               	movwf	??___flge
 12267  13EA  3000               	movlw	0
 12268  13EB  0525               	andwf	___flge@ff2+1,w
 12269  13EC  00A9               	movwf	??___flge+1
 12270  13ED  3080               	movlw	128
 12271  13EE  0526               	andwf	___flge@ff2+2,w
 12272  13EF  00AA               	movwf	??___flge+2
 12273  13F0  307F               	movlw	127
 12274  13F1  0527               	andwf	___flge@ff2+3,w
 12275  13F2  00AB               	movwf	??___flge+3
 12276  13F3  082B               	movf	??___flge+3,w
 12277  13F4  042A               	iorwf	??___flge+2,w
 12278  13F5  0429               	iorwf	??___flge+1,w
 12279  13F6  0428               	iorwf	??___flge,w
 12280  13F7  1D03               	skipz
 12281  13F8  2C01               	goto	l4000
 12282  13F9  3000               	movlw	0
 12283  13FA  00A7               	movwf	___flge@ff2+3
 12284  13FB  3000               	movlw	0
 12285  13FC  00A6               	movwf	___flge@ff2+2
 12286  13FD  3000               	movlw	0
 12287  13FE  00A5               	movwf	___flge@ff2+1
 12288  13FF  3000               	movlw	0
 12289  1400  00A4               	movwf	___flge@ff2
 12290  1401                     l4000:	
 12291  1401  1FA3               	btfss	___flge@ff1+3,7
 12292  1402  2C1B               	goto	l4004
 12293  1403  3000               	movlw	0
 12294  1404  00A8               	movwf	??___flge
 12295  1405  3000               	movlw	0
 12296  1406  00A9               	movwf	??___flge+1
 12297  1407  3000               	movlw	0
 12298  1408  00AA               	movwf	??___flge+2
 12299  1409  3080               	movlw	128
 12300  140A  00AB               	movwf	??___flge+3
 12301  140B  0820               	movf	___flge@ff1,w
 12302  140C  02A8               	subwf	??___flge,f
 12303  140D  0821               	movf	___flge@ff1+1,w
 12304  140E  3BA9               	subwfb	??___flge+1,f
 12305  140F  0822               	movf	___flge@ff1+2,w
 12306  1410  3BAA               	subwfb	??___flge+2,f
 12307  1411  0823               	movf	___flge@ff1+3,w
 12308  1412  3BAB               	subwfb	??___flge+3,f
 12309  1413  082B               	movf	??___flge+3,w
 12310  1414  00A3               	movwf	___flge@ff1+3
 12311  1415  082A               	movf	??___flge+2,w
 12312  1416  00A2               	movwf	___flge@ff1+2
 12313  1417  0829               	movf	??___flge+1,w
 12314  1418  00A1               	movwf	___flge@ff1+1
 12315  1419  0828               	movf	??___flge,w
 12316  141A  00A0               	movwf	___flge@ff1
 12317  141B                     l4004:	
 12318  141B  1FA7               	btfss	___flge@ff2+3,7
 12319  141C  2C35               	goto	l1046
 12320  141D  3000               	movlw	0
 12321  141E  00A8               	movwf	??___flge
 12322  141F  3000               	movlw	0
 12323  1420  00A9               	movwf	??___flge+1
 12324  1421  3000               	movlw	0
 12325  1422  00AA               	movwf	??___flge+2
 12326  1423  3080               	movlw	128
 12327  1424  00AB               	movwf	??___flge+3
 12328  1425  0824               	movf	___flge@ff2,w
 12329  1426  02A8               	subwf	??___flge,f
 12330  1427  0825               	movf	___flge@ff2+1,w
 12331  1428  3BA9               	subwfb	??___flge+1,f
 12332  1429  0826               	movf	___flge@ff2+2,w
 12333  142A  3BAA               	subwfb	??___flge+2,f
 12334  142B  0827               	movf	___flge@ff2+3,w
 12335  142C  3BAB               	subwfb	??___flge+3,f
 12336  142D  082B               	movf	??___flge+3,w
 12337  142E  00A7               	movwf	___flge@ff2+3
 12338  142F  082A               	movf	??___flge+2,w
 12339  1430  00A6               	movwf	___flge@ff2+2
 12340  1431  0829               	movf	??___flge+1,w
 12341  1432  00A5               	movwf	___flge@ff2+1
 12342  1433  0828               	movf	??___flge,w
 12343  1434  00A4               	movwf	___flge@ff2
 12344  1435                     l1046:	
 12345  1435  3080               	movlw	128
 12346  1436  06A3               	xorwf	___flge@ff1+3,f
 12347  1437  3080               	movlw	128
 12348  1438  06A7               	xorwf	___flge@ff2+3,f
 12349  1439  0827               	movf	___flge@ff2+3,w
 12350  143A  0223               	subwf	___flge@ff1+3,w
 12351  143B  1D03               	skipz
 12352  143C  0008               	return
 12353  143D  0826               	movf	___flge@ff2+2,w
 12354  143E  0222               	subwf	___flge@ff1+2,w
 12355  143F  1D03               	skipz
 12356  1440  0008               	return
 12357  1441  0825               	movf	___flge@ff2+1,w
 12358  1442  0221               	subwf	___flge@ff1+1,w
 12359  1443  1D03               	skipz
 12360  1444  0008               	return
 12361  1445  0824               	movf	___flge@ff2,w
 12362  1446  0220               	subwf	___flge@ff1,w
 12363  1447  0008               	return
 12364  1448                     __end_of___flge:	
 12365                           
 12366                           	psect	text33
 12367  15FD                     __ptext33:	
 12368 ;; *************** function _check_status *****************
 12369 ;; Defined at:
 12370 ;;		line 231 in file "main.c"
 12371 ;; Parameters:    Size  Location     Type
 12372 ;;		None
 12373 ;; Auto vars:     Size  Location     Type
 12374 ;;		None
 12375 ;; Return value:  Size  Location     Type
 12376 ;;                  1    wreg      unsigned char 
 12377 ;; Registers used:
 12378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12379 ;; Tracked objects:
 12380 ;;		On entry : 0/0
 12381 ;;		On exit  : 0/0
 12382 ;;		Unchanged: 0/0
 12383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12386 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12387 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12388 ;;Total ram usage:        2 bytes
 12389 ;; Hardware stack levels used:    1
 12390 ;; Hardware stack levels required when called:   10
 12391 ;; This function calls:
 12392 ;;		_OLED_command
 12393 ;;		_OLED_print_xy
 12394 ;;		_OLED_returnHome
 12395 ;;		_TMR1_StartTimer
 12396 ;; This function is called by:
 12397 ;;		_main
 12398 ;; This function uses a non-reentrant model
 12399 ;;
 12400                           
 12401                           
 12402                           ;psect for function _check_status
 12403  15FD                     _check_status:	
 12404                           
 12405                           ;main.c: 232: if (voltage <= 104) {
 12406                           
 12407                           ;incstack = 0
 12408                           ; Regs used in _check_status: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12409  15FD  3000               	movlw	0
 12410  15FE  0142               	movlb	2	; select bank2
 12411  15FF  025A               	subwf	(_voltage+1)^(0+256),w
 12412  1600  3069               	movlw	105
 12413  1601  1903               	skipnz
 12414  1602  0259               	subwf	_voltage^(0+256),w
 12415  1603  1803               	skipnc
 12416  1604  2E41               	goto	l4780
 12417                           
 12418                           ;main.c: 233: OLED_returnHome();
 12419  1605  319B  23A9  3195   	fcall	_OLED_returnHome
 12420                           
 12421                           ;main.c: 234: OLED_command(0x01);
 12422  1608  3001               	movlw	1
 12423  1609  319C  2437  3195   	fcall	_OLED_command
 12424                           
 12425                           ;main.c: 235: OLED_print_xy(0,0, "Main B bus");
 12426  160C  0140               	movlb	0	; select bank0
 12427  160D  01A7               	clrf	OLED_print_xy@row
 12428  160E  30F4               	movlw	low (STR_1| (0+32768))
 12429  160F  00A8               	movwf	OLED_print_xy@s
 12430  1610  30A0               	movlw	high (STR_1| (0+32768))
 12431  1611  00A9               	movwf	OLED_print_xy@s+1
 12432  1612  3000               	movlw	0
 12433  1613  319E  268A  3195   	fcall	_OLED_print_xy
 12434                           
 12435                           ;main.c: 236: OLED_print_xy(0,1, "undervolt.");
 12436  1616  0140               	movlb	0	; select bank0
 12437  1617  01A7               	clrf	OLED_print_xy@row
 12438  1618  0AA7               	incf	OLED_print_xy@row,f
 12439  1619  30DE               	movlw	low (STR_2| (0+32768))
 12440  161A  00A8               	movwf	OLED_print_xy@s
 12441  161B  30A0               	movlw	high (STR_2| (0+32768))
 12442  161C  2E3B               	goto	L6
 12443  161D                     l4782:	
 12444  161D  3000               	movlw	0
 12445  161E  025A               	subwf	(_voltage+1)^(0+256),w
 12446  161F  3091               	movlw	145
 12447  1620  1903               	skipnz
 12448  1621  0259               	subwf	_voltage^(0+256),w
 12449  1622  1803               	skipnc
 12450  1623  2E48               	goto	l4796
 12451                           
 12452                           ;main.c: 239: OLED_returnHome();
 12453  1624  319B  23A9  3195   	fcall	_OLED_returnHome
 12454                           
 12455                           ;main.c: 240: OLED_command(0x01);
 12456  1627  3001               	movlw	1
 12457  1628  319C  2437  3195   	fcall	_OLED_command
 12458                           
 12459                           ;main.c: 241: OLED_print_xy(0,0, "Main B bus");
 12460  162B  0140               	movlb	0	; select bank0
 12461  162C  01A7               	clrf	OLED_print_xy@row
 12462  162D  30F4               	movlw	low (STR_1| (0+32768))
 12463  162E  00A8               	movwf	OLED_print_xy@s
 12464  162F  30A0               	movlw	high (STR_1| (0+32768))
 12465  1630  00A9               	movwf	OLED_print_xy@s+1
 12466  1631  3000               	movlw	0
 12467  1632  319E  268A  3195   	fcall	_OLED_print_xy
 12468                           
 12469                           ;main.c: 242: OLED_print_xy(0,1, "overvolt.");
 12470  1635  0140               	movlb	0	; select bank0
 12471  1636  01A7               	clrf	OLED_print_xy@row
 12472  1637  0AA7               	incf	OLED_print_xy@row,f
 12473  1638  3009               	movlw	low (STR_4| (0+32768))
 12474  1639  00A8               	movwf	OLED_print_xy@s
 12475  163A  30A1               	movlw	high (STR_4| (0+32768))
 12476  163B                     L6:	
 12477  163B  00A9               	movwf	OLED_print_xy@s+1
 12478  163C  3000               	movlw	0
 12479  163D  319E  268A         	fcall	_OLED_print_xy
 12480                           
 12481                           ;main.c: 237: return 1;
 12482  163F  3001               	movlw	1
 12483  1640  0008               	return
 12484  1641                     l4780:	
 12485  1641  3000               	movlw	0
 12486  1642  025A               	subwf	(_voltage+1)^(0+256),w
 12487  1643  3085               	movlw	133
 12488  1644  1903               	skipnz
 12489  1645  0259               	subwf	_voltage^(0+256),w
 12490  1646  1803               	btfsc	3,0
 12491  1647  2E1D               	goto	l4782
 12492  1648                     l4796:	
 12493  1648  3000               	movlw	0
 12494  1649  025A               	subwf	(_voltage+1)^(0+256),w
 12495  164A  3091               	movlw	145
 12496  164B  1903               	skipnz
 12497  164C  0259               	subwf	_voltage^(0+256),w
 12498  164D  1C03               	skipc
 12499  164E  2E5E               	goto	l4818
 12500                           
 12501                           ;main.c: 246: OLED_command(0x08);
 12502  164F  3008               	movlw	8
 12503  1650  319C  2437  3195   	fcall	_OLED_command
 12504                           
 12505                           ;main.c: 247: LATBbits.LATB5 = 0;
 12506  1653  0140               	movlb	0	; select bank0
 12507  1654  1299               	bcf	25,5	;volatile
 12508                           
 12509                           ;main.c: 248: LATCbits.LATC3 = 0;
 12510  1655  119A               	bcf	26,3	;volatile
 12511                           
 12512                           ;main.c: 249: LATBbits.LATB1 = 0;
 12513  1656  1099               	bcf	25,1	;volatile
 12514                           
 12515                           ;main.c: 250: LATBbits.LATB1 = 0;
 12516  1657  1099               	bcf	25,1	;volatile
 12517                           
 12518                           ;main.c: 251: LATBbits.LATB0 = 0;
 12519  1658  1019               	bcf	25,0	;volatile
 12520                           
 12521                           ;main.c: 252: LATCbits.LATC5 = 0;
 12522  1659  129A               	bcf	26,5	;volatile
 12523                           
 12524                           ;main.c: 253: LATCbits.LATC4 = 0;
 12525  165A  121A               	bcf	26,4	;volatile
 12526                           
 12527                           ;main.c: 254: LATBbits.LATB4 = 0;
 12528  165B  1219               	bcf	25,4	;volatile
 12529                           
 12530                           ;main.c: 255: LATBbits.LATB2 = 0;
 12531  165C  1119               	bcf	25,2	;volatile
 12532  165D                     l630:	
 12533                           ;main.c: 256: while(1);
 12534                           
 12535  165D  2E5D               	goto	l630
 12536  165E                     l4818:	
 12537                           
 12538                           ;main.c: 258: };main.c: 260: if (fault) {
 12539  165E  085C               	movf	_fault^(0+256),w	;volatile
 12540  165F  1903               	btfsc	3,2
 12541  1660  2EE4               	goto	l4854
 12542                           
 12543                           ;main.c: 261: OLED_returnHome();
 12544  1661  319B  23A9  3195   	fcall	_OLED_returnHome
 12545                           
 12546                           ;main.c: 262: pb = none;
 12547  1664  0140               	movlb	0	; select bank0
 12548  1665  01EF               	clrf	_pb	;volatile
 12549  1666                     l4846:	
 12550                           ;main.c: 263: while(pb != abort) {
 12551                           
 12552  1666  3003               	movlw	3
 12553  1667  0140               	movlb	0	; select bank0
 12554  1668  066F               	xorwf	_pb,w	;volatile
 12555  1669  1903               	btfsc	3,2
 12556  166A  2EDE               	goto	l4848
 12557                           
 12558                           ;main.c: 264: OLED_command(0x01);
 12559  166B  3001               	movlw	1
 12560  166C  319C  2437  3195   	fcall	_OLED_command
 12561                           
 12562                           ;main.c: 265: OLED_print_xy(0,0, "Output");
 12563  166F  0140               	movlb	0	; select bank0
 12564  1670  01A7               	clrf	OLED_print_xy@row
 12565  1671  302D               	movlw	low (STR_5| (0+32768))
 12566  1672  00A8               	movwf	OLED_print_xy@s
 12567  1673  30A1               	movlw	high (STR_5| (0+32768))
 12568  1674  00A9               	movwf	OLED_print_xy@s+1
 12569  1675  3000               	movlw	0
 12570  1676  319E  268A  3195   	fcall	_OLED_print_xy
 12571                           
 12572                           ;main.c: 266: OLED_print_xy(0,1, "overloaded");
 12573  1679  0140               	movlb	0	; select bank0
 12574  167A  01A7               	clrf	OLED_print_xy@row
 12575  167B  0AA7               	incf	OLED_print_xy@row,f
 12576  167C  30E9               	movlw	low (STR_6| (0+32768))
 12577  167D  00A8               	movwf	OLED_print_xy@s
 12578  167E  30A0               	movlw	high (STR_6| (0+32768))
 12579  167F  00A9               	movwf	OLED_print_xy@s+1
 12580  1680  3000               	movlw	0
 12581  1681  319E  268A  3195   	fcall	_OLED_print_xy
 12582                           
 12583                           ;main.c: 267: _delay((unsigned long)((1500)*(1000000/4000.0)));
 12584  1684  3002               	movlw	2
 12585  1685  0140               	movlb	0	; select bank0
 12586  1686  00B1               	movwf	??_check_status+1
 12587  1687  30E7               	movlw	231
 12588  1688  00B0               	movwf	??_check_status
 12589  1689  3000               	movlw	0
 12590  168A                     u5967:	
 12591  168A  0B89               	decfsz	9,f
 12592  168B  2E8A               	goto	u5967
 12593  168C  0BB0               	decfsz	??_check_status,f
 12594  168D  2E8A               	goto	u5967
 12595  168E  0BB1               	decfsz	??_check_status+1,f
 12596  168F  2E8A               	goto	u5967
 12597  1690  0000               	nop
 12598                           
 12599                           ;main.c: 268: OLED_command(0x01);
 12600  1691  3001               	movlw	1
 12601  1692  319C  2437  3195   	fcall	_OLED_command
 12602                           
 12603                           ;main.c: 269: OLED_print_xy(0,0, "Remove short");
 12604  1695  0140               	movlb	0	; select bank0
 12605  1696  01A7               	clrf	OLED_print_xy@row
 12606  1697  30BA               	movlw	low (STR_7| (0+32768))
 12607  1698  00A8               	movwf	OLED_print_xy@s
 12608  1699  30A0               	movlw	high (STR_7| (0+32768))
 12609  169A  00A9               	movwf	OLED_print_xy@s+1
 12610  169B  3000               	movlw	0
 12611  169C  319E  268A  3195   	fcall	_OLED_print_xy
 12612                           
 12613                           ;main.c: 270: OLED_print_xy(0,1, "circuit");
 12614  169F  0140               	movlb	0	; select bank0
 12615  16A0  01A7               	clrf	OLED_print_xy@row
 12616  16A1  0AA7               	incf	OLED_print_xy@row,f
 12617  16A2  3025               	movlw	low (STR_8| (0+32768))
 12618  16A3  00A8               	movwf	OLED_print_xy@s
 12619  16A4  30A1               	movlw	high (STR_8| (0+32768))
 12620  16A5  00A9               	movwf	OLED_print_xy@s+1
 12621  16A6  3000               	movlw	0
 12622  16A7  319E  268A  3195   	fcall	_OLED_print_xy
 12623                           
 12624                           ;main.c: 271: _delay((unsigned long)((1500)*(1000000/4000.0)));
 12625  16AA  3002               	movlw	2
 12626  16AB  0140               	movlb	0	; select bank0
 12627  16AC  00B1               	movwf	??_check_status+1
 12628  16AD  30E7               	movlw	231
 12629  16AE  00B0               	movwf	??_check_status
 12630  16AF  3000               	movlw	0
 12631  16B0                     u5977:	
 12632  16B0  0B89               	decfsz	9,f
 12633  16B1  2EB0               	goto	u5977
 12634  16B2  0BB0               	decfsz	??_check_status,f
 12635  16B3  2EB0               	goto	u5977
 12636  16B4  0BB1               	decfsz	??_check_status+1,f
 12637  16B5  2EB0               	goto	u5977
 12638  16B6  0000               	nop
 12639                           
 12640                           ;main.c: 272: OLED_command(0x01);
 12641  16B7  3001               	movlw	1
 12642  16B8  319C  2437  3195   	fcall	_OLED_command
 12643                           
 12644                           ;main.c: 273: OLED_print_xy(0,0, "Hold button");
 12645  16BB  0140               	movlb	0	; select bank0
 12646  16BC  01A7               	clrf	OLED_print_xy@row
 12647  16BD  30C7               	movlw	low (STR_9| (0+32768))
 12648  16BE  00A8               	movwf	OLED_print_xy@s
 12649  16BF  30A0               	movlw	high (STR_9| (0+32768))
 12650  16C0  00A9               	movwf	OLED_print_xy@s+1
 12651  16C1  3000               	movlw	0
 12652  16C2  319E  268A  3195   	fcall	_OLED_print_xy
 12653                           
 12654                           ;main.c: 274: OLED_print_xy(0,1, "to reset");
 12655  16C5  0140               	movlb	0	; select bank0
 12656  16C6  01A7               	clrf	OLED_print_xy@row
 12657  16C7  0AA7               	incf	OLED_print_xy@row,f
 12658  16C8  301C               	movlw	low (STR_10| (0+32768))
 12659  16C9  00A8               	movwf	OLED_print_xy@s
 12660  16CA  30A1               	movlw	high (STR_10| (0+32768))
 12661  16CB  00A9               	movwf	OLED_print_xy@s+1
 12662  16CC  3000               	movlw	0
 12663  16CD  319E  268A  3195   	fcall	_OLED_print_xy
 12664                           
 12665                           ;main.c: 275: _delay((unsigned long)((1500)*(1000000/4000.0)));
 12666  16D0  3002               	movlw	2
 12667  16D1  0140               	movlb	0	; select bank0
 12668  16D2  00B1               	movwf	??_check_status+1
 12669  16D3  30E7               	movlw	231
 12670  16D4  00B0               	movwf	??_check_status
 12671  16D5  3000               	movlw	0
 12672  16D6                     u5987:	
 12673  16D6  0B89               	decfsz	9,f
 12674  16D7  2ED6               	goto	u5987
 12675  16D8  0BB0               	decfsz	??_check_status,f
 12676  16D9  2ED6               	goto	u5987
 12677  16DA  0BB1               	decfsz	??_check_status+1,f
 12678  16DB  2ED6               	goto	u5987
 12679  16DC  0000               	nop
 12680  16DD  2E66               	goto	l4846
 12681  16DE                     l4848:	
 12682                           
 12683                           ;main.c: 276: };main.c: 277: fault = 0;
 12684  16DE  0142               	movlb	2	; select bank2
 12685  16DF  01DC               	clrf	_fault^(0+256)	;volatile
 12686                           
 12687                           ;main.c: 278: LATCbits.LATC3 = 1;
 12688  16E0  0140               	movlb	0	; select bank0
 12689  16E1  159A               	bsf	26,3	;volatile
 12690                           
 12691                           ;main.c: 279: TMR1_StartTimer();
 12692  16E2  3188  2000         	fcall	_TMR1_StartTimer
 12693  16E4                     l4854:	
 12694                           
 12695                           ;main.c: 280: };main.c: 281: return 0;
 12696  16E4  3000               	movlw	0
 12697  16E5  0008               	return
 12698  16E6                     __end_of_check_status:	
 12699                           
 12700                           	psect	text34
 12701  0800                     __ptext34:	
 12702 ;; *************** function _TMR1_StartTimer *****************
 12703 ;; Defined at:
 12704 ;;		line 99 in file "mcc_generated_files/tmr1.c"
 12705 ;; Parameters:    Size  Location     Type
 12706 ;;		None
 12707 ;; Auto vars:     Size  Location     Type
 12708 ;;		None
 12709 ;; Return value:  Size  Location     Type
 12710 ;;                  1    wreg      void 
 12711 ;; Registers used:
 12712 ;;		None
 12713 ;; Tracked objects:
 12714 ;;		On entry : 0/0
 12715 ;;		On exit  : 0/0
 12716 ;;		Unchanged: 0/0
 12717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12722 ;;Total ram usage:        0 bytes
 12723 ;; Hardware stack levels used:    1
 12724 ;; Hardware stack levels required when called:    5
 12725 ;; This function calls:
 12726 ;;		Nothing
 12727 ;; This function is called by:
 12728 ;;		_check_status
 12729 ;;		_main
 12730 ;; This function uses a non-reentrant model
 12731 ;;
 12732                           
 12733                           
 12734                           ;psect for function _TMR1_StartTimer
 12735  0800                     _TMR1_StartTimer:	
 12736                           
 12737                           ;tmr1.c: 102: T1CONbits.TMR1ON = 1;
 12738                           
 12739                           ;incstack = 0
 12740                           ; Regs used in _TMR1_StartTimer: []
 12741  0800  0144               	movlb	4	; select bank4
 12742  0801  140E               	bsf	14,0	;volatile
 12743  0802  0008               	return
 12744  0803                     __end_of_TMR1_StartTimer:	
 12745                           
 12746                           	psect	text35
 12747  1BA9                     __ptext35:	
 12748 ;; *************** function _OLED_returnHome *****************
 12749 ;; Defined at:
 12750 ;;		line 163 in file "oled.c"
 12751 ;; Parameters:    Size  Location     Type
 12752 ;;		None
 12753 ;; Auto vars:     Size  Location     Type
 12754 ;;		None
 12755 ;; Return value:  Size  Location     Type
 12756 ;;                  1    wreg      void 
 12757 ;; Registers used:
 12758 ;;		wreg, status,2, status,0, pclath, cstack
 12759 ;; Tracked objects:
 12760 ;;		On entry : 0/0
 12761 ;;		On exit  : 0/0
 12762 ;;		Unchanged: 0/0
 12763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12768 ;;Total ram usage:        0 bytes
 12769 ;; Hardware stack levels used:    1
 12770 ;; Hardware stack levels required when called:    9
 12771 ;; This function calls:
 12772 ;;		_OLED_command
 12773 ;; This function is called by:
 12774 ;;		_check_status
 12775 ;;		_main_menu
 12776 ;; This function uses a non-reentrant model
 12777 ;;
 12778                           
 12779                           
 12780                           ;psect for function _OLED_returnHome
 12781  1BA9                     _OLED_returnHome:	
 12782                           
 12783                           ;oled.c: 164: OLED_command(0x02);
 12784                           
 12785                           ;incstack = 0
 12786                           ; Regs used in _OLED_returnHome: [wreg+status,2+status,0+pclath+cstack]
 12787  1BA9  3002               	movlw	2
 12788  1BAA  319C  2437         	fcall	_OLED_command
 12789  1BAC  0008               	return
 12790  1BAD                     __end_of_OLED_returnHome:	
 12791                           
 12792                           	psect	text36
 12793  1E8A                     __ptext36:	
 12794 ;; *************** function _OLED_print_xy *****************
 12795 ;; Defined at:
 12796 ;;		line 154 in file "oled.c"
 12797 ;; Parameters:    Size  Location     Type
 12798 ;;  col             1    wreg     unsigned char 
 12799 ;;  row             1    7[BANK0 ] unsigned char 
 12800 ;;  s               2    8[BANK0 ] PTR unsigned char 
 12801 ;;		 -> STR_15(9), STR_13(44), main_menu@s(61), STR_11(45), 
 12802 ;;		 -> STR_10(9), STR_9(12), STR_8(8), STR_7(13), 
 12803 ;;		 -> STR_6(11), STR_5(7), STR_4(10), STR_3(11), 
 12804 ;;		 -> STR_2(11), STR_1(11), 
 12805 ;; Auto vars:     Size  Location     Type
 12806 ;;  col             1   15[BANK0 ] unsigned char 
 12807 ;;  row_offsets     4   11[BANK0 ] unsigned char [4]
 12808 ;; Return value:  Size  Location     Type
 12809 ;;                  1    wreg      void 
 12810 ;; Registers used:
 12811 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12812 ;; Tracked objects:
 12813 ;;		On entry : 0/0
 12814 ;;		On exit  : 0/0
 12815 ;;		Unchanged: 0/0
 12816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12817 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12818 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12819 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12820 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12821 ;;Total ram usage:        9 bytes
 12822 ;; Hardware stack levels used:    1
 12823 ;; Hardware stack levels required when called:    9
 12824 ;; This function calls:
 12825 ;;		_OLED_command
 12826 ;;		_OLED_write
 12827 ;; This function is called by:
 12828 ;;		_check_status
 12829 ;;		_main_menu
 12830 ;; This function uses a non-reentrant model
 12831 ;;
 12832                           
 12833                           
 12834                           ;psect for function _OLED_print_xy
 12835  1E8A                     _OLED_print_xy:	
 12836                           
 12837                           ;incstack = 0
 12838                           ; Regs used in _OLED_print_xy: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12839                           ;OLED_print_xy@col stored from wreg
 12840  1E8A  0140               	movlb	0	; select bank0
 12841  1E8B  00AF               	movwf	OLED_print_xy@col
 12842                           
 12843                           ;oled.c: 155: uint8_t row_offsets[] = { 0x00, 0x40, 0x14, 0x54 };
 12844  1E8C  0143               	movlb	3	; select bank3
 12845  1E8D  083B               	movf	(OLED_print_xy@F7528+3)^(0+384),w
 12846  1E8E  0140               	movlb	0	; select bank0
 12847  1E8F  00AE               	movwf	OLED_print_xy@row_offsets+3
 12848  1E90  0143               	movlb	3	; select bank3
 12849  1E91  083A               	movf	(OLED_print_xy@F7528+2)^(0+384),w
 12850  1E92  0140               	movlb	0	; select bank0
 12851  1E93  00AD               	movwf	OLED_print_xy@row_offsets+2
 12852  1E94  0143               	movlb	3	; select bank3
 12853  1E95  0839               	movf	(OLED_print_xy@F7528+1)^(0+384),w
 12854  1E96  0140               	movlb	0	; select bank0
 12855  1E97  00AC               	movwf	OLED_print_xy@row_offsets+1
 12856  1E98  0143               	movlb	3	; select bank3
 12857  1E99  0838               	movf	OLED_print_xy@F7528^(0+384),w
 12858  1E9A  0140               	movlb	0	; select bank0
 12859  1E9B  00AB               	movwf	OLED_print_xy@row_offsets
 12860                           
 12861                           ;oled.c: 157: OLED_command(0x80 | (col + row_offsets[row]));
 12862  1E9C  0827               	movf	OLED_print_xy@row,w
 12863  1E9D  3E2B               	addlw	(low (OLED_print_xy@row_offsets| 0))& (0+255)
 12864  1E9E  0086               	movwf	6
 12865  1E9F  0187               	clrf	7
 12866  1EA0  0801               	movf	1,w
 12867  1EA1  072F               	addwf	OLED_print_xy@col,w
 12868  1EA2  3880               	iorlw	128
 12869  1EA3  319C  2437  319E   	fcall	_OLED_command
 12870  1EA6                     l4368:	
 12871                           ;oled.c: 158: while (*s != (0)) {
 12872                           
 12873  1EA6  0140               	movlb	0	; select bank0
 12874  1EA7  0828               	movf	OLED_print_xy@s,w
 12875  1EA8  0084               	movwf	4
 12876  1EA9  0829               	movf	OLED_print_xy@s+1,w
 12877  1EAA  0085               	movwf	5
 12878  1EAB  0012               	moviw fsr0++
 12879  1EAC  1903               	btfsc	3,2
 12880  1EAD  0008               	return
 12881                           
 12882                           ;oled.c: 159: OLED_write(*s++);
 12883  1EAE  0828               	movf	OLED_print_xy@s,w
 12884  1EAF  0084               	movwf	4
 12885  1EB0  0829               	movf	OLED_print_xy@s+1,w
 12886  1EB1  0085               	movwf	5
 12887  1EB2  0800               	movf	0,w	;code access
 12888  1EB3  319C  2461  319E   	fcall	_OLED_write
 12889  1EB6  3001               	movlw	1
 12890  1EB7  0140               	movlb	0	; select bank0
 12891  1EB8  07A8               	addwf	OLED_print_xy@s,f
 12892  1EB9  3000               	movlw	0
 12893  1EBA  3DA9               	addwfc	OLED_print_xy@s+1,f
 12894  1EBB  2EA6               	goto	l4368
 12895  1EBC                     __end_of_OLED_print_xy:	
 12896                           
 12897                           	psect	text37
 12898  1C61                     __ptext37:	
 12899 ;; *************** function _OLED_write *****************
 12900 ;; Defined at:
 12901 ;;		line 76 in file "oled.c"
 12902 ;; Parameters:    Size  Location     Type
 12903 ;;  value           1    wreg     unsigned char 
 12904 ;; Auto vars:     Size  Location     Type
 12905 ;;  value           1    6[BANK0 ] unsigned char 
 12906 ;; Return value:  Size  Location     Type
 12907 ;;                  1    wreg      void 
 12908 ;; Registers used:
 12909 ;;		wreg, status,2, status,0, pclath, cstack
 12910 ;; Tracked objects:
 12911 ;;		On entry : 0/0
 12912 ;;		On exit  : 0/0
 12913 ;;		Unchanged: 0/0
 12914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12916 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12918 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12919 ;;Total ram usage:        1 bytes
 12920 ;; Hardware stack levels used:    1
 12921 ;; Hardware stack levels required when called:    8
 12922 ;; This function calls:
 12923 ;;		_OLED_send
 12924 ;;		_OLED_waitForReady
 12925 ;; This function is called by:
 12926 ;;		_OLED_print_xy
 12927 ;;		_OLED_print
 12928 ;; This function uses a non-reentrant model
 12929 ;;
 12930                           
 12931                           
 12932                           ;psect for function _OLED_write
 12933  1C61                     _OLED_write:	
 12934                           
 12935                           ;incstack = 0
 12936                           ; Regs used in _OLED_write: [wreg+status,2+status,0+pclath+cstack]
 12937                           ;OLED_write@value stored from wreg
 12938  1C61  0140               	movlb	0	; select bank0
 12939  1C62  00A6               	movwf	OLED_write@value
 12940                           
 12941                           ;oled.c: 78: OLED_send(value, 1);
 12942  1C63  01A3               	clrf	OLED_send@mode
 12943  1C64  0AA3               	incf	OLED_send@mode,f
 12944  1C65  0826               	movf	OLED_write@value,w
 12945  1C66  319D  2503  319C   	fcall	_OLED_send
 12946                           
 12947                           ;oled.c: 79: OLED_waitForReady();
 12948  1C69  319D  2532         	fcall	_OLED_waitForReady
 12949  1C6B  0008               	return
 12950  1C6C                     __end_of_OLED_write:	
 12951                           
 12952                           	psect	text38
 12953  085A                     __ptext38:	
 12954 ;; *************** function ___fldiv *****************
 12955 ;; Defined at:
 12956 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
 12957 ;; Parameters:    Size  Location     Type
 12958 ;;  a               4   45[BANK0 ] void 
 12959 ;;  b               4   49[BANK0 ] void 
 12960 ;; Auto vars:     Size  Location     Type
 12961 ;;  grs             4   65[BANK0 ] unsigned long 
 12962 ;;  rem             4   58[BANK0 ] unsigned long 
 12963 ;;  new_exp         2   63[BANK0 ] int 
 12964 ;;  aexp            1   70[BANK0 ] unsigned char 
 12965 ;;  bexp            1   69[BANK0 ] unsigned char 
 12966 ;;  sign            1   62[BANK0 ] unsigned char 
 12967 ;; Return value:  Size  Location     Type
 12968 ;;                  4   45[BANK0 ] unsigned char 
 12969 ;; Registers used:
 12970 ;;		wreg, status,2, status,0
 12971 ;; Tracked objects:
 12972 ;;		On entry : 0/0
 12973 ;;		On exit  : 0/0
 12974 ;;		Unchanged: 0/0
 12975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12976 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12977 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12978 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12979 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12980 ;;Total ram usage:       26 bytes
 12981 ;; Hardware stack levels used:    1
 12982 ;; Hardware stack levels required when called:    5
 12983 ;; This function calls:
 12984 ;;		Nothing
 12985 ;; This function is called by:
 12986 ;;		_main
 12987 ;; This function uses a non-reentrant model
 12988 ;;
 12989                           
 12990                           
 12991                           ;psect for function ___fldiv
 12992  085A                     ___fldiv:	
 12993                           
 12994                           ;incstack = 0
 12995                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 12996  085A  0140               	movlb	0	; select bank0
 12997  085B  0854               	movf	___fldiv@b+3,w
 12998  085C  3980               	andlw	128
 12999  085D  00D5               	movwf	??___fldiv
 13000  085E  0855               	movf	??___fldiv,w
 13001  085F  00DE               	movwf	___fldiv@sign
 13002  0860  3554               	lslf	___fldiv@b+3,w
 13003  0861  00D5               	movwf	??___fldiv
 13004  0862  0855               	movf	??___fldiv,w
 13005  0863  00E5               	movwf	___fldiv@bexp
 13006  0864  1BD3               	btfsc	___fldiv@b+2,7
 13007  0865  1465               	bsf	___fldiv@bexp,0
 13008  0866  0865               	movf	___fldiv@bexp,w
 13009  0867  1903               	btfsc	3,2
 13010  0868  2877               	goto	l5070
 13011  0869  0A65               	incf	___fldiv@bexp,w
 13012  086A  1D03               	btfss	3,2
 13013  086B  2874               	goto	l5066
 13014  086C  3000               	movlw	0
 13015  086D  00D4               	movwf	___fldiv@b+3
 13016  086E  3000               	movlw	0
 13017  086F  00D3               	movwf	___fldiv@b+2
 13018  0870  3000               	movlw	0
 13019  0871  00D2               	movwf	___fldiv@b+1
 13020  0872  3000               	movlw	0
 13021  0873  00D1               	movwf	___fldiv@b
 13022  0874                     l5066:	
 13023  0874  17D3               	bsf	___fldiv@b+2,7
 13024  0875  01D4               	clrf	___fldiv@b+3
 13025  0876  287F               	goto	l5072
 13026  0877                     l5070:	
 13027  0877  3000               	movlw	0
 13028  0878  00D4               	movwf	___fldiv@b+3
 13029  0879  3000               	movlw	0
 13030  087A  00D3               	movwf	___fldiv@b+2
 13031  087B  3000               	movlw	0
 13032  087C  00D2               	movwf	___fldiv@b+1
 13033  087D  3000               	movlw	0
 13034  087E  00D1               	movwf	___fldiv@b
 13035  087F                     l5072:	
 13036  087F  0850               	movf	___fldiv@a+3,w
 13037  0880  3980               	andlw	128
 13038  0881  00D5               	movwf	??___fldiv
 13039  0882  0855               	movf	??___fldiv,w
 13040  0883  06DE               	xorwf	___fldiv@sign,f
 13041  0884  3550               	lslf	___fldiv@a+3,w
 13042  0885  00D5               	movwf	??___fldiv
 13043  0886  0855               	movf	??___fldiv,w
 13044  0887  00E6               	movwf	___fldiv@aexp
 13045  0888  1BCF               	btfsc	___fldiv@a+2,7
 13046  0889  1466               	bsf	___fldiv@aexp,0
 13047  088A  0866               	movf	___fldiv@aexp,w
 13048  088B  1903               	btfsc	3,2
 13049  088C  289B               	goto	l5090
 13050  088D  0A66               	incf	___fldiv@aexp,w
 13051  088E  1D03               	btfss	3,2
 13052  088F  2898               	goto	l5086
 13053  0890  3000               	movlw	0
 13054  0891  00D0               	movwf	___fldiv@a+3
 13055  0892  3000               	movlw	0
 13056  0893  00CF               	movwf	___fldiv@a+2
 13057  0894  3000               	movlw	0
 13058  0895  00CE               	movwf	___fldiv@a+1
 13059  0896  3000               	movlw	0
 13060  0897  00CD               	movwf	___fldiv@a
 13061  0898                     l5086:	
 13062  0898  17CF               	bsf	___fldiv@a+2,7
 13063  0899  01D0               	clrf	___fldiv@a+3
 13064  089A  28A3               	goto	l1218
 13065  089B                     l5090:	
 13066  089B  3000               	movlw	0
 13067  089C  00D0               	movwf	___fldiv@a+3
 13068  089D  3000               	movlw	0
 13069  089E  00CF               	movwf	___fldiv@a+2
 13070  089F  3000               	movlw	0
 13071  08A0  00CE               	movwf	___fldiv@a+1
 13072  08A1  3000               	movlw	0
 13073  08A2  00CD               	movwf	___fldiv@a
 13074  08A3                     l1218:	
 13075  08A3  0850               	movf	___fldiv@a+3,w
 13076  08A4  044F               	iorwf	___fldiv@a+2,w
 13077  08A5  044E               	iorwf	___fldiv@a+1,w
 13078  08A6  044D               	iorwf	___fldiv@a,w
 13079  08A7  1D03               	skipz
 13080  08A8  28C2               	goto	l5100
 13081  08A9  3000               	movlw	0
 13082  08AA  00D4               	movwf	___fldiv@b+3
 13083  08AB  3000               	movlw	0
 13084  08AC  00D3               	movwf	___fldiv@b+2
 13085  08AD  3000               	movlw	0
 13086  08AE  00D2               	movwf	___fldiv@b+1
 13087  08AF  3000               	movlw	0
 13088  08B0  00D1               	movwf	___fldiv@b
 13089  08B1  3080               	movlw	128
 13090  08B2  04D3               	iorwf	___fldiv@b+2,f
 13091  08B3  307F               	movlw	127
 13092  08B4  04D4               	iorwf	___fldiv@b+3,f
 13093  08B5                     L7:	
 13094  08B5  085E               	movf	___fldiv@sign,w
 13095  08B6  00D5               	movwf	??___fldiv
 13096  08B7  0855               	movf	??___fldiv,w
 13097  08B8  04D4               	iorwf	___fldiv@b+3,f
 13098  08B9  0854               	movf	___fldiv@b+3,w
 13099  08BA  00D0               	movwf	?___fldiv+3
 13100  08BB  0853               	movf	___fldiv@b+2,w
 13101  08BC  00CF               	movwf	?___fldiv+2
 13102  08BD  0852               	movf	___fldiv@b+1,w
 13103  08BE  00CE               	movwf	?___fldiv+1
 13104  08BF  0851               	movf	___fldiv@b,w
 13105  08C0  00CD               	movwf	?___fldiv
 13106  08C1  0008               	return
 13107  08C2                     l5100:	
 13108  08C2  0865               	movf	___fldiv@bexp,w
 13109  08C3  1D03               	btfss	3,2
 13110  08C4  28CE               	goto	l5106
 13111  08C5  3000               	movlw	0
 13112  08C6  00D0               	movwf	?___fldiv+3
 13113  08C7  3000               	movlw	0
 13114  08C8  00CF               	movwf	?___fldiv+2
 13115  08C9  3000               	movlw	0
 13116  08CA  00CE               	movwf	?___fldiv+1
 13117  08CB  3000               	movlw	0
 13118  08CC  00CD               	movwf	?___fldiv
 13119  08CD  0008               	return
 13120  08CE                     l5106:	
 13121  08CE  0865               	movf	___fldiv@bexp,w
 13122  08CF  00D5               	movwf	??___fldiv
 13123  08D0  01D6               	clrf	??___fldiv+1
 13124  08D1  0856               	movf	??___fldiv+1,w
 13125  08D2  00D8               	movwf	??___fldiv+3
 13126  08D3  0866               	movf	___fldiv@aexp,w
 13127  08D4  0255               	subwf	??___fldiv,w
 13128  08D5  00D7               	movwf	??___fldiv+2
 13129  08D6  1C03               	skipc
 13130  08D7  03D8               	decf	??___fldiv+3,f
 13131  08D8  0857               	movf	??___fldiv+2,w
 13132  08D9  3E7F               	addlw	127
 13133  08DA  00DF               	movwf	___fldiv@new_exp
 13134  08DB  3000               	movlw	0
 13135  08DC  3D58               	addwfc	??___fldiv+3,w
 13136  08DD  00E0               	movwf	___fldiv@new_exp+1
 13137  08DE  0854               	movf	___fldiv@b+3,w
 13138  08DF  00DD               	movwf	___fldiv@rem+3
 13139  08E0  0853               	movf	___fldiv@b+2,w
 13140  08E1  00DC               	movwf	___fldiv@rem+2
 13141  08E2  0852               	movf	___fldiv@b+1,w
 13142  08E3  00DB               	movwf	___fldiv@rem+1
 13143  08E4  0851               	movf	___fldiv@b,w
 13144  08E5  00DA               	movwf	___fldiv@rem
 13145  08E6  3000               	movlw	0
 13146  08E7  00D4               	movwf	___fldiv@b+3
 13147  08E8  3000               	movlw	0
 13148  08E9  00D3               	movwf	___fldiv@b+2
 13149  08EA  3000               	movlw	0
 13150  08EB  00D2               	movwf	___fldiv@b+1
 13151  08EC  3000               	movlw	0
 13152  08ED  00D1               	movwf	___fldiv@b
 13153  08EE  3000               	movlw	0
 13154  08EF  00E4               	movwf	___fldiv@grs+3
 13155  08F0  3000               	movlw	0
 13156  08F1  00E3               	movwf	___fldiv@grs+2
 13157  08F2  3000               	movlw	0
 13158  08F3  00E2               	movwf	___fldiv@grs+1
 13159  08F4  3000               	movlw	0
 13160  08F5  00E1               	movwf	___fldiv@grs
 13161  08F6  01E6               	clrf	___fldiv@aexp
 13162  08F7                     l5134:	
 13163  08F7  301A               	movlw	26
 13164  08F8  0266               	subwf	___fldiv@aexp,w
 13165  08F9  1803               	btfsc	3,0
 13166  08FA  2933               	goto	l5136
 13167  08FB  0866               	movf	___fldiv@aexp,w
 13168  08FC  1903               	btfsc	3,2
 13169  08FD  2915               	goto	l5126
 13170  08FE  3001               	movlw	1
 13171  08FF                     u5535:	
 13172  08FF  35DA               	lslf	___fldiv@rem,f
 13173  0900  0DDB               	rlf	___fldiv@rem+1,f
 13174  0901  0DDC               	rlf	___fldiv@rem+2,f
 13175  0902  0DDD               	rlf	___fldiv@rem+3,f
 13176  0903  0B89               	decfsz	9,f
 13177  0904  28FF               	goto	u5535
 13178  0905  3001               	movlw	1
 13179  0906                     u5545:	
 13180  0906  35D1               	lslf	___fldiv@b,f
 13181  0907  0DD2               	rlf	___fldiv@b+1,f
 13182  0908  0DD3               	rlf	___fldiv@b+2,f
 13183  0909  0DD4               	rlf	___fldiv@b+3,f
 13184  090A  0B89               	decfsz	9,f
 13185  090B  2906               	goto	u5545
 13186  090C  1BE4               	btfsc	___fldiv@grs+3,7
 13187  090D  1451               	bsf	___fldiv@b,0
 13188  090E  3001               	movlw	1
 13189  090F                     u5565:	
 13190  090F  35E1               	lslf	___fldiv@grs,f
 13191  0910  0DE2               	rlf	___fldiv@grs+1,f
 13192  0911  0DE3               	rlf	___fldiv@grs+2,f
 13193  0912  0DE4               	rlf	___fldiv@grs+3,f
 13194  0913  0B89               	decfsz	9,f
 13195  0914  290F               	goto	u5565
 13196  0915                     l5126:	
 13197  0915  0850               	movf	___fldiv@a+3,w
 13198  0916  025D               	subwf	___fldiv@rem+3,w
 13199  0917  1D03               	skipz
 13200  0918  2923               	goto	u5575
 13201  0919  084F               	movf	___fldiv@a+2,w
 13202  091A  025C               	subwf	___fldiv@rem+2,w
 13203  091B  1D03               	skipz
 13204  091C  2923               	goto	u5575
 13205  091D  084E               	movf	___fldiv@a+1,w
 13206  091E  025B               	subwf	___fldiv@rem+1,w
 13207  091F  1D03               	skipz
 13208  0920  2923               	goto	u5575
 13209  0921  084D               	movf	___fldiv@a,w
 13210  0922  025A               	subwf	___fldiv@rem,w
 13211  0923                     u5575:	
 13212  0923  1C03               	skipc
 13213  0924  292E               	goto	l5132
 13214  0925  1764               	bsf	___fldiv@grs+3,6
 13215  0926  084D               	movf	___fldiv@a,w
 13216  0927  02DA               	subwf	___fldiv@rem,f
 13217  0928  084E               	movf	___fldiv@a+1,w
 13218  0929  3BDB               	subwfb	___fldiv@rem+1,f
 13219  092A  084F               	movf	___fldiv@a+2,w
 13220  092B  3BDC               	subwfb	___fldiv@rem+2,f
 13221  092C  0850               	movf	___fldiv@a+3,w
 13222  092D  3BDD               	subwfb	___fldiv@rem+3,f
 13223  092E                     l5132:	
 13224  092E  3001               	movlw	1
 13225  092F  00D5               	movwf	??___fldiv
 13226  0930  0855               	movf	??___fldiv,w
 13227  0931  07E6               	addwf	___fldiv@aexp,f
 13228  0932  28F7               	goto	l5134
 13229  0933                     l5136:	
 13230  0933  085D               	movf	___fldiv@rem+3,w
 13231  0934  045C               	iorwf	___fldiv@rem+2,w
 13232  0935  045B               	iorwf	___fldiv@rem+1,w
 13233  0936  045A               	iorwf	___fldiv@rem,w
 13234  0937  1D03               	btfss	3,2
 13235  0938  1461               	bsf	___fldiv@grs,0
 13236  0939                     l5150:	
 13237  0939  1BD3               	btfsc	___fldiv@b+2,7
 13238  093A  2950               	goto	l5152
 13239  093B  3001               	movlw	1
 13240  093C                     u5605:	
 13241  093C  35D1               	lslf	___fldiv@b,f
 13242  093D  0DD2               	rlf	___fldiv@b+1,f
 13243  093E  0DD3               	rlf	___fldiv@b+2,f
 13244  093F  0DD4               	rlf	___fldiv@b+3,f
 13245  0940  0B89               	decfsz	9,f
 13246  0941  293C               	goto	u5605
 13247  0942  1BE4               	btfsc	___fldiv@grs+3,7
 13248  0943  1451               	bsf	___fldiv@b,0
 13249  0944  3001               	movlw	1
 13250  0945                     u5625:	
 13251  0945  35E1               	lslf	___fldiv@grs,f
 13252  0946  0DE2               	rlf	___fldiv@grs+1,f
 13253  0947  0DE3               	rlf	___fldiv@grs+2,f
 13254  0948  0DE4               	rlf	___fldiv@grs+3,f
 13255  0949  0B89               	decfsz	9,f
 13256  094A  2945               	goto	u5625
 13257  094B  30FF               	movlw	255
 13258  094C  07DF               	addwf	___fldiv@new_exp,f
 13259  094D  30FF               	movlw	255
 13260  094E  3DE0               	addwfc	___fldiv@new_exp+1,f
 13261  094F  2939               	goto	l5150
 13262  0950                     l5152:	
 13263  0950  01E6               	clrf	___fldiv@aexp
 13264  0951  1FE4               	btfss	___fldiv@grs+3,7
 13265  0952  2969               	goto	l5162
 13266  0953  30FF               	movlw	255
 13267  0954  0561               	andwf	___fldiv@grs,w
 13268  0955  00D5               	movwf	??___fldiv
 13269  0956  30FF               	movlw	255
 13270  0957  0562               	andwf	___fldiv@grs+1,w
 13271  0958  00D6               	movwf	??___fldiv+1
 13272  0959  30FF               	movlw	255
 13273  095A  0563               	andwf	___fldiv@grs+2,w
 13274  095B  00D7               	movwf	??___fldiv+2
 13275  095C  307F               	movlw	127
 13276  095D  0564               	andwf	___fldiv@grs+3,w
 13277  095E  00D8               	movwf	??___fldiv+3
 13278  095F  0858               	movf	??___fldiv+3,w
 13279  0960  0457               	iorwf	??___fldiv+2,w
 13280  0961  0456               	iorwf	??___fldiv+1,w
 13281  0962  0455               	iorwf	??___fldiv,w
 13282  0963  1903               	skipnz
 13283  0964  1851               	btfsc	___fldiv@b,0
 13284  0965  2967               	goto	l5158
 13285  0966  2969               	goto	l5162
 13286  0967                     l5158:	
 13287  0967  01E6               	clrf	___fldiv@aexp
 13288  0968  0AE6               	incf	___fldiv@aexp,f
 13289  0969                     l5162:	
 13290  0969  0866               	movf	___fldiv@aexp,w
 13291  096A  1903               	btfsc	3,2
 13292  096B  2992               	goto	l5172
 13293  096C  3001               	movlw	1
 13294  096D  07D1               	addwf	___fldiv@b,f
 13295  096E  3000               	movlw	0
 13296  096F  3DD2               	addwfc	___fldiv@b+1,f
 13297  0970  3000               	movlw	0
 13298  0971  3DD3               	addwfc	___fldiv@b+2,f
 13299  0972  3000               	movlw	0
 13300  0973  3DD4               	addwfc	___fldiv@b+3,f
 13301  0974  1C54               	btfss	___fldiv@b+3,0
 13302  0975  2992               	goto	l5172
 13303  0976  0851               	movf	___fldiv@b,w
 13304  0977  00D5               	movwf	??___fldiv
 13305  0978  0852               	movf	___fldiv@b+1,w
 13306  0979  00D6               	movwf	??___fldiv+1
 13307  097A  0853               	movf	___fldiv@b+2,w
 13308  097B  00D7               	movwf	??___fldiv+2
 13309  097C  0854               	movf	___fldiv@b+3,w
 13310  097D  00D8               	movwf	??___fldiv+3
 13311  097E  3001               	movlw	1
 13312  097F  00D9               	movwf	??___fldiv+4
 13313  0980                     u5695:	
 13314  0980  37D8               	asrf	??___fldiv+3,f
 13315  0981  0CD7               	rrf	??___fldiv+2,f
 13316  0982  0CD6               	rrf	??___fldiv+1,f
 13317  0983  0CD5               	rrf	??___fldiv,f
 13318  0984  0BD9               	decfsz	??___fldiv+4,f
 13319  0985  2980               	goto	u5695
 13320  0986  0858               	movf	??___fldiv+3,w
 13321  0987  00D4               	movwf	___fldiv@b+3
 13322  0988  0857               	movf	??___fldiv+2,w
 13323  0989  00D3               	movwf	___fldiv@b+2
 13324  098A  0856               	movf	??___fldiv+1,w
 13325  098B  00D2               	movwf	___fldiv@b+1
 13326  098C  0855               	movf	??___fldiv,w
 13327  098D  00D1               	movwf	___fldiv@b
 13328  098E  3001               	movlw	1
 13329  098F  07DF               	addwf	___fldiv@new_exp,f
 13330  0990  3000               	movlw	0
 13331  0991  3DE0               	addwfc	___fldiv@new_exp+1,f
 13332  0992                     l5172:	
 13333  0992  0860               	movf	___fldiv@new_exp+1,w
 13334  0993  3A80               	xorlw	128
 13335  0994  00D5               	movwf	??___fldiv
 13336  0995  3080               	movlw	128
 13337  0996  0255               	subwf	??___fldiv,w
 13338  0997  1D03               	skipz
 13339  0998  299B               	goto	u5705
 13340  0999  30FF               	movlw	255
 13341  099A  025F               	subwf	___fldiv@new_exp,w
 13342  099B                     u5705:	
 13343  099B  1C03               	skipc
 13344  099C  29AA               	goto	l1239
 13345  099D  30FF               	movlw	255
 13346  099E  0140               	movlb	0	; select bank0
 13347  099F  00DF               	movwf	___fldiv@new_exp
 13348  09A0  3000               	movlw	0
 13349  09A1  00E0               	movwf	___fldiv@new_exp+1
 13350  09A2  3000               	movlw	0
 13351  09A3  00D4               	movwf	___fldiv@b+3
 13352  09A4  3000               	movlw	0
 13353  09A5  00D3               	movwf	___fldiv@b+2
 13354  09A6  3000               	movlw	0
 13355  09A7  00D2               	movwf	___fldiv@b+1
 13356  09A8  3000               	movlw	0
 13357  09A9  00D1               	movwf	___fldiv@b
 13358  09AA                     l1239:	
 13359  09AA  0140               	movlb	0	; select bank0
 13360  09AB  0860               	movf	___fldiv@new_exp+1,w
 13361  09AC  3A80               	xorlw	128
 13362  09AD  00D5               	movwf	??___fldiv
 13363  09AE  3080               	movlw	128
 13364  09AF  0255               	subwf	??___fldiv,w
 13365  09B0  1D03               	skipz
 13366  09B1  29B4               	goto	u5715
 13367  09B2  3001               	movlw	1
 13368  09B3  025F               	subwf	___fldiv@new_exp,w
 13369  09B4                     u5715:	
 13370  09B4  1803               	skipnc
 13371  09B5  29C2               	goto	l1240
 13372  09B6  0140               	movlb	0	; select bank0
 13373  09B7  01DF               	clrf	___fldiv@new_exp
 13374  09B8  01E0               	clrf	___fldiv@new_exp+1
 13375  09B9  3000               	movlw	0
 13376  09BA  00D4               	movwf	___fldiv@b+3
 13377  09BB  3000               	movlw	0
 13378  09BC  00D3               	movwf	___fldiv@b+2
 13379  09BD  3000               	movlw	0
 13380  09BE  00D2               	movwf	___fldiv@b+1
 13381  09BF  3000               	movlw	0
 13382  09C0  00D1               	movwf	___fldiv@b
 13383  09C1  01DE               	clrf	___fldiv@sign
 13384  09C2                     l1240:	
 13385  09C2  0140               	movlb	0	; select bank0
 13386  09C3  085F               	movf	___fldiv@new_exp,w
 13387  09C4  00D5               	movwf	??___fldiv
 13388  09C5  0855               	movf	??___fldiv,w
 13389  09C6  00E5               	movwf	___fldiv@bexp
 13390  09C7  1C65               	btfss	___fldiv@bexp,0
 13391  09C8  29CB               	goto	l5186
 13392  09C9  17D3               	bsf	___fldiv@b+2,7
 13393  09CA  29CF               	goto	l1242
 13394  09CB                     l5186:	
 13395  09CB  307F               	movlw	127
 13396  09CC  00D5               	movwf	??___fldiv
 13397  09CD  0855               	movf	??___fldiv,w
 13398  09CE  05D3               	andwf	___fldiv@b+2,f
 13399  09CF                     l1242:	
 13400  09CF  3665               	lsrf	___fldiv@bexp,w
 13401  09D0  00D5               	movwf	??___fldiv
 13402  09D1  0855               	movf	??___fldiv,w
 13403  09D2  00D4               	movwf	___fldiv@b+3
 13404  09D3  28B5               	goto	L7
 13405  09D4                     __end_of___fldiv:	
 13406                           
 13407                           	psect	text39
 13408  1CEE                     __ptext39:	
 13409 ;; *************** function _SYSTEM_Initialize *****************
 13410 ;; Defined at:
 13411 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13412 ;; Parameters:    Size  Location     Type
 13413 ;;		None
 13414 ;; Auto vars:     Size  Location     Type
 13415 ;;		None
 13416 ;; Return value:  Size  Location     Type
 13417 ;;                  1    wreg      void 
 13418 ;; Registers used:
 13419 ;;		wreg, status,2, status,0, pclath, cstack
 13420 ;; Tracked objects:
 13421 ;;		On entry : 0/0
 13422 ;;		On exit  : 0/0
 13423 ;;		Unchanged: 0/0
 13424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13429 ;;Total ram usage:        0 bytes
 13430 ;; Hardware stack levels used:    1
 13431 ;; Hardware stack levels required when called:    7
 13432 ;; This function calls:
 13433 ;;		_ADC_Initialize
 13434 ;;		_EUSART1_Initialize
 13435 ;;		_OSCILLATOR_Initialize
 13436 ;;		_PIN_MANAGER_Initialize
 13437 ;;		_PMD_Initialize
 13438 ;;		_TMR0_Initialize
 13439 ;;		_TMR1_Initialize
 13440 ;; This function is called by:
 13441 ;;		_main
 13442 ;; This function uses a non-reentrant model
 13443 ;;
 13444                           
 13445                           
 13446                           ;psect for function _SYSTEM_Initialize
 13447  1CEE                     _SYSTEM_Initialize:	
 13448                           
 13449                           ;mcc.c: 52: PMD_Initialize();
 13450                           
 13451                           ;incstack = 0
 13452                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13453  1CEE  319B  23D6  319C   	fcall	_PMD_Initialize
 13454                           
 13455                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 13456  1CF1  3191  21C0  319C   	fcall	_PIN_MANAGER_Initialize
 13457                           
 13458                           ;mcc.c: 54: OSCILLATOR_Initialize();
 13459  1CF4  319C  2441  319C   	fcall	_OSCILLATOR_Initialize
 13460                           
 13461                           ;mcc.c: 55: ADC_Initialize();
 13462  1CF7  319B  23CE  319C   	fcall	_ADC_Initialize
 13463                           
 13464                           ;mcc.c: 56: TMR1_Initialize();
 13465  1CFA  319D  2582  319C   	fcall	_TMR1_Initialize
 13466                           
 13467                           ;mcc.c: 57: TMR0_Initialize();
 13468  1CFD  319C  24DA  319C   	fcall	_TMR0_Initialize
 13469                           
 13470                           ;mcc.c: 58: EUSART1_Initialize();
 13471  1D00  319E  2601         	fcall	_EUSART1_Initialize
 13472  1D02  0008               	return
 13473  1D03                     __end_of_SYSTEM_Initialize:	
 13474                           
 13475                           	psect	text40
 13476  1D82                     __ptext40:	
 13477 ;; *************** function _TMR1_Initialize *****************
 13478 ;; Defined at:
 13479 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 13480 ;; Parameters:    Size  Location     Type
 13481 ;;		None
 13482 ;; Auto vars:     Size  Location     Type
 13483 ;;		None
 13484 ;; Return value:  Size  Location     Type
 13485 ;;                  1    wreg      void 
 13486 ;; Registers used:
 13487 ;;		wreg, status,2, status,0, pclath, cstack
 13488 ;; Tracked objects:
 13489 ;;		On entry : 0/0
 13490 ;;		On exit  : 0/0
 13491 ;;		Unchanged: 0/0
 13492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13497 ;;Total ram usage:        0 bytes
 13498 ;; Hardware stack levels used:    1
 13499 ;; Hardware stack levels required when called:    6
 13500 ;; This function calls:
 13501 ;;		_TMR1_SetInterruptHandler
 13502 ;; This function is called by:
 13503 ;;		_SYSTEM_Initialize
 13504 ;; This function uses a non-reentrant model
 13505 ;;
 13506                           
 13507                           
 13508                           ;psect for function _TMR1_Initialize
 13509  1D82                     _TMR1_Initialize:	
 13510                           
 13511                           ;tmr1.c: 69: T1GCON = 0x00;
 13512                           
 13513                           ;incstack = 0
 13514                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13515  1D82  0144               	movlb	4	; select bank4
 13516  1D83  018F               	clrf	15	;volatile
 13517                           
 13518                           ;tmr1.c: 72: T1GATE = 0x00;
 13519  1D84  0190               	clrf	16	;volatile
 13520                           
 13521                           ;tmr1.c: 75: T1CLK = 0x01;
 13522  1D85  3001               	movlw	1
 13523  1D86  0091               	movwf	17	;volatile
 13524                           
 13525                           ;tmr1.c: 78: TMR1H = 0x9E;
 13526  1D87  309E               	movlw	158
 13527  1D88  008D               	movwf	13	;volatile
 13528                           
 13529                           ;tmr1.c: 81: TMR1L = 0x58;
 13530  1D89  3058               	movlw	88
 13531  1D8A  008C               	movwf	12	;volatile
 13532                           
 13533                           ;tmr1.c: 84: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 13534  1D8B  080D               	movf	13,w	;volatile
 13535  1D8C  0142               	movlb	2	; select bank2
 13536  1D8D  00E4               	movwf	(_timer1ReloadVal+1)^(0+256)	;volatile
 13537  1D8E  0144               	movlb	4	; select bank4
 13538  1D8F  080C               	movf	12,w	;volatile
 13539  1D90  0142               	movlb	2	; select bank2
 13540  1D91  00E3               	movwf	_timer1ReloadVal^(0+256)	;volatile
 13541                           
 13542                           ;tmr1.c: 87: PIR4bits.TMR1IF = 0;
 13543  1D92  014E               	movlb	14	; select bank14
 13544  1D93  1010               	bcf	16,0	;volatile
 13545                           
 13546                           ;tmr1.c: 90: PIE4bits.TMR1IE = 1;
 13547  1D94  141A               	bsf	26,0	;volatile
 13548                           
 13549                           ;tmr1.c: 93: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 13550  1D95  3003               	movlw	low _TMR1_DefaultInterruptHandler
 13551  1D96  0140               	movlb	0	; select bank0
 13552  1D97  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 13553  1D98  3000               	movlw	high _TMR1_DefaultInterruptHandler
 13554  1D99  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 13555  1D9A  319C  242E         	fcall	_TMR1_SetInterruptHandler
 13556                           
 13557                           ;tmr1.c: 96: T1CON = 0x05;
 13558  1D9C  3005               	movlw	5
 13559  1D9D  0144               	movlb	4	; select bank4
 13560  1D9E  008E               	movwf	14	;volatile
 13561  1D9F  0008               	return
 13562  1DA0                     __end_of_TMR1_Initialize:	
 13563                           
 13564                           	psect	text41
 13565  1C2E                     __ptext41:	
 13566 ;; *************** function _TMR1_SetInterruptHandler *****************
 13567 ;; Defined at:
 13568 ;;		line 185 in file "mcc_generated_files/tmr1.c"
 13569 ;; Parameters:    Size  Location     Type
 13570 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 13571 ;;		 -> timer1(1), TMR1_DefaultInterruptHandler(1), 
 13572 ;; Auto vars:     Size  Location     Type
 13573 ;;		None
 13574 ;; Return value:  Size  Location     Type
 13575 ;;                  1    wreg      void 
 13576 ;; Registers used:
 13577 ;;		wreg
 13578 ;; Tracked objects:
 13579 ;;		On entry : 0/0
 13580 ;;		On exit  : 0/0
 13581 ;;		Unchanged: 0/0
 13582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13583 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13586 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13587 ;;Total ram usage:        2 bytes
 13588 ;; Hardware stack levels used:    1
 13589 ;; Hardware stack levels required when called:    5
 13590 ;; This function calls:
 13591 ;;		Nothing
 13592 ;; This function is called by:
 13593 ;;		_TMR1_Initialize
 13594 ;;		_main
 13595 ;; This function uses a non-reentrant model
 13596 ;;
 13597                           
 13598                           
 13599                           ;psect for function _TMR1_SetInterruptHandler
 13600  1C2E                     _TMR1_SetInterruptHandler:	
 13601                           
 13602                           ;tmr1.c: 186: TMR1_InterruptHandler = InterruptHandler;
 13603                           
 13604                           ;incstack = 0
 13605                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 13606  1C2E  0140               	movlb	0	; select bank0
 13607  1C2F  0821               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 13608  1C30  0143               	movlb	3	; select bank3
 13609  1C31  00C1               	movwf	(_TMR1_InterruptHandler+1)^(0+384)
 13610  1C32  0140               	movlb	0	; select bank0
 13611  1C33  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 13612  1C34  0143               	movlb	3	; select bank3
 13613  1C35  00C0               	movwf	_TMR1_InterruptHandler^(0+384)
 13614  1C36  0008               	return
 13615  1C37                     __end_of_TMR1_SetInterruptHandler:	
 13616                           
 13617                           	psect	text42
 13618  1CDA                     __ptext42:	
 13619 ;; *************** function _TMR0_Initialize *****************
 13620 ;; Defined at:
 13621 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 13622 ;; Parameters:    Size  Location     Type
 13623 ;;		None
 13624 ;; Auto vars:     Size  Location     Type
 13625 ;;		None
 13626 ;; Return value:  Size  Location     Type
 13627 ;;                  1    wreg      void 
 13628 ;; Registers used:
 13629 ;;		wreg, status,2, status,0, pclath, cstack
 13630 ;; Tracked objects:
 13631 ;;		On entry : 0/0
 13632 ;;		On exit  : 0/0
 13633 ;;		Unchanged: 0/0
 13634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13639 ;;Total ram usage:        0 bytes
 13640 ;; Hardware stack levels used:    1
 13641 ;; Hardware stack levels required when called:    6
 13642 ;; This function calls:
 13643 ;;		_TMR0_SetInterruptHandler
 13644 ;; This function is called by:
 13645 ;;		_SYSTEM_Initialize
 13646 ;; This function uses a non-reentrant model
 13647 ;;
 13648                           
 13649                           
 13650                           ;psect for function _TMR0_Initialize
 13651  1CDA                     _TMR0_Initialize:	
 13652                           
 13653                           ;tmr0.c: 66: T0CON1 = 0x52;
 13654                           
 13655                           ;incstack = 0
 13656                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13657  1CDA  3052               	movlw	82
 13658  1CDB  014B               	movlb	11	; select bank11
 13659  1CDC  009F               	movwf	31	;volatile
 13660                           
 13661                           ;tmr0.c: 69: TMR0H = 0x7C;
 13662  1CDD  307C               	movlw	124
 13663  1CDE  009D               	movwf	29	;volatile
 13664                           
 13665                           ;tmr0.c: 72: TMR0L = 0x00;
 13666  1CDF  019C               	clrf	28	;volatile
 13667                           
 13668                           ;tmr0.c: 75: PIR0bits.TMR0IF = 0;
 13669  1CE0  014E               	movlb	14	; select bank14
 13670  1CE1  128C               	bcf	12,5	;volatile
 13671                           
 13672                           ;tmr0.c: 78: PIE0bits.TMR0IE = 1;
 13673  1CE2  1696               	bsf	22,5	;volatile
 13674                           
 13675                           ;tmr0.c: 81: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 13676  1CE3  3002               	movlw	low _TMR0_DefaultInterruptHandler
 13677  1CE4  0140               	movlb	0	; select bank0
 13678  1CE5  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 13679  1CE6  3000               	movlw	high _TMR0_DefaultInterruptHandler
 13680  1CE7  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 13681  1CE8  319C  2425         	fcall	_TMR0_SetInterruptHandler
 13682                           
 13683                           ;tmr0.c: 84: T0CON0 = 0x84;
 13684  1CEA  3084               	movlw	132
 13685  1CEB  014B               	movlb	11	; select bank11
 13686  1CEC  009E               	movwf	30	;volatile
 13687  1CED  0008               	return
 13688  1CEE                     __end_of_TMR0_Initialize:	
 13689                           
 13690                           	psect	text43
 13691  1C25                     __ptext43:	
 13692 ;; *************** function _TMR0_SetInterruptHandler *****************
 13693 ;; Defined at:
 13694 ;;		line 142 in file "mcc_generated_files/tmr0.c"
 13695 ;; Parameters:    Size  Location     Type
 13696 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 13697 ;;		 -> timer0(1), TMR0_DefaultInterruptHandler(1), 
 13698 ;; Auto vars:     Size  Location     Type
 13699 ;;		None
 13700 ;; Return value:  Size  Location     Type
 13701 ;;                  1    wreg      void 
 13702 ;; Registers used:
 13703 ;;		wreg
 13704 ;; Tracked objects:
 13705 ;;		On entry : 0/0
 13706 ;;		On exit  : 0/0
 13707 ;;		Unchanged: 0/0
 13708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13709 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13712 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13713 ;;Total ram usage:        2 bytes
 13714 ;; Hardware stack levels used:    1
 13715 ;; Hardware stack levels required when called:    5
 13716 ;; This function calls:
 13717 ;;		Nothing
 13718 ;; This function is called by:
 13719 ;;		_TMR0_Initialize
 13720 ;;		_main
 13721 ;; This function uses a non-reentrant model
 13722 ;;
 13723                           
 13724                           
 13725                           ;psect for function _TMR0_SetInterruptHandler
 13726  1C25                     _TMR0_SetInterruptHandler:	
 13727                           
 13728                           ;tmr0.c: 143: TMR0_InterruptHandler = InterruptHandler;
 13729                           
 13730                           ;incstack = 0
 13731                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 13732  1C25  0140               	movlb	0	; select bank0
 13733  1C26  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 13734  1C27  0142               	movlb	2	; select bank2
 13735  1C28  00E6               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 13736  1C29  0140               	movlb	0	; select bank0
 13737  1C2A  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 13738  1C2B  0142               	movlb	2	; select bank2
 13739  1C2C  00E5               	movwf	_TMR0_InterruptHandler^(0+256)
 13740  1C2D  0008               	return
 13741  1C2E                     __end_of_TMR0_SetInterruptHandler:	
 13742                           
 13743                           	psect	text44
 13744  1BD6                     __ptext44:	
 13745 ;; *************** function _PMD_Initialize *****************
 13746 ;; Defined at:
 13747 ;;		line 77 in file "mcc_generated_files/mcc.c"
 13748 ;; Parameters:    Size  Location     Type
 13749 ;;		None
 13750 ;; Auto vars:     Size  Location     Type
 13751 ;;		None
 13752 ;; Return value:  Size  Location     Type
 13753 ;;                  1    wreg      void 
 13754 ;; Registers used:
 13755 ;;		status,2
 13756 ;; Tracked objects:
 13757 ;;		On entry : 0/0
 13758 ;;		On exit  : 0/0
 13759 ;;		Unchanged: 0/0
 13760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13765 ;;Total ram usage:        0 bytes
 13766 ;; Hardware stack levels used:    1
 13767 ;; Hardware stack levels required when called:    5
 13768 ;; This function calls:
 13769 ;;		Nothing
 13770 ;; This function is called by:
 13771 ;;		_SYSTEM_Initialize
 13772 ;; This function uses a non-reentrant model
 13773 ;;
 13774                           
 13775                           
 13776                           ;psect for function _PMD_Initialize
 13777  1BD6                     _PMD_Initialize:	
 13778                           
 13779                           ;mcc.c: 80: PMD0 = 0x00;
 13780                           
 13781                           ;incstack = 0
 13782                           ; Regs used in _PMD_Initialize: [status,2]
 13783  1BD6  014F               	movlb	15	; select bank15
 13784  1BD7  0196               	clrf	22	;volatile
 13785                           
 13786                           ;mcc.c: 82: PMD1 = 0x00;
 13787  1BD8  0197               	clrf	23	;volatile
 13788                           
 13789                           ;mcc.c: 84: PMD2 = 0x00;
 13790  1BD9  0198               	clrf	24	;volatile
 13791                           
 13792                           ;mcc.c: 86: PMD3 = 0x00;
 13793  1BDA  0199               	clrf	25	;volatile
 13794                           
 13795                           ;mcc.c: 88: PMD4 = 0x00;
 13796  1BDB  019A               	clrf	26	;volatile
 13797                           
 13798                           ;mcc.c: 90: PMD5 = 0x00;
 13799  1BDC  019B               	clrf	27	;volatile
 13800  1BDD  0008               	return
 13801  1BDE                     __end_of_PMD_Initialize:	
 13802                           
 13803                           	psect	text45
 13804  11C0                     __ptext45:	
 13805 ;; *************** function _PIN_MANAGER_Initialize *****************
 13806 ;; Defined at:
 13807 ;;		line 62 in file "mcc_generated_files/pin_manager.c"
 13808 ;; Parameters:    Size  Location     Type
 13809 ;;		None
 13810 ;; Auto vars:     Size  Location     Type
 13811 ;;		None
 13812 ;; Return value:  Size  Location     Type
 13813 ;;                  1    wreg      void 
 13814 ;; Registers used:
 13815 ;;		wreg, status,2, status,0, pclath, cstack
 13816 ;; Tracked objects:
 13817 ;;		On entry : 0/0
 13818 ;;		On exit  : 0/0
 13819 ;;		Unchanged: 0/0
 13820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13825 ;;Total ram usage:        0 bytes
 13826 ;; Hardware stack levels used:    1
 13827 ;; Hardware stack levels required when called:    6
 13828 ;; This function calls:
 13829 ;;		_IOCAF4_SetInterruptHandler
 13830 ;;		_IOCAF5_SetInterruptHandler
 13831 ;;		_IOCAF7_SetInterruptHandler
 13832 ;;		_IOCCF2_SetInterruptHandler
 13833 ;; This function is called by:
 13834 ;;		_SYSTEM_Initialize
 13835 ;; This function uses a non-reentrant model
 13836 ;;
 13837                           
 13838                           
 13839                           ;psect for function _PIN_MANAGER_Initialize
 13840  11C0                     _PIN_MANAGER_Initialize:	
 13841                           
 13842                           ;pin_manager.c: 67: LATA = 0x00;
 13843                           
 13844                           ;incstack = 0
 13845                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13846  11C0  0140               	movlb	0	; select bank0
 13847  11C1  0198               	clrf	24	;volatile
 13848                           
 13849                           ;pin_manager.c: 68: LATB = 0x00;
 13850  11C2  0199               	clrf	25	;volatile
 13851                           
 13852                           ;pin_manager.c: 69: LATC = 0x00;
 13853  11C3  019A               	clrf	26	;volatile
 13854                           
 13855                           ;pin_manager.c: 74: TRISA = 0xF0;
 13856  11C4  30F0               	movlw	240
 13857  11C5  0092               	movwf	18	;volatile
 13858                           
 13859                           ;pin_manager.c: 75: TRISB = 0xC0;
 13860  11C6  30C0               	movlw	192
 13861  11C7  0093               	movwf	19	;volatile
 13862                           
 13863                           ;pin_manager.c: 76: TRISC = 0x87;
 13864  11C8  3087               	movlw	135
 13865  11C9  0094               	movwf	20	;volatile
 13866                           
 13867                           ;pin_manager.c: 81: ANSELC = 0x0B;
 13868  11CA  300B               	movlw	11
 13869  11CB  017E               	movlb	62	; select bank62
 13870  11CC  00CE               	movwf	78	;volatile
 13871                           
 13872                           ;pin_manager.c: 82: ANSELB = 0xC0;
 13873  11CD  30C0               	movlw	192
 13874  11CE  00C3               	movwf	67	;volatile
 13875                           
 13876                           ;pin_manager.c: 83: ANSELA = 0x40;
 13877  11CF  3040               	movlw	64
 13878  11D0  00B8               	movwf	56	;volatile
 13879                           
 13880                           ;pin_manager.c: 88: WPUE = 0x00;
 13881  11D1  01E5               	clrf	101	;volatile
 13882                           
 13883                           ;pin_manager.c: 89: WPUB = 0x00;
 13884  11D2  01C4               	clrf	68	;volatile
 13885                           
 13886                           ;pin_manager.c: 90: WPUA = 0x00;
 13887  11D3  01B9               	clrf	57	;volatile
 13888                           
 13889                           ;pin_manager.c: 91: WPUC = 0x00;
 13890  11D4  01CF               	clrf	79	;volatile
 13891                           
 13892                           ;pin_manager.c: 96: ODCONA = 0x00;
 13893  11D5  01BA               	clrf	58	;volatile
 13894                           
 13895                           ;pin_manager.c: 97: ODCONB = 0x00;
 13896  11D6  01C5               	clrf	69	;volatile
 13897                           
 13898                           ;pin_manager.c: 98: ODCONC = 0x00;
 13899  11D7  01D0               	clrf	80	;volatile
 13900                           
 13901                           ;pin_manager.c: 105: IOCAFbits.IOCAF4 = 0;
 13902  11D8  123F               	bcf	63,4	;volatile
 13903                           
 13904                           ;pin_manager.c: 107: IOCAFbits.IOCAF5 = 0;
 13905  11D9  12BF               	bcf	63,5	;volatile
 13906                           
 13907                           ;pin_manager.c: 109: IOCAFbits.IOCAF7 = 0;
 13908  11DA  13BF               	bcf	63,7	;volatile
 13909                           
 13910                           ;pin_manager.c: 111: IOCANbits.IOCAN4 = 1;
 13911  11DB  163E               	bsf	62,4	;volatile
 13912                           
 13913                           ;pin_manager.c: 113: IOCANbits.IOCAN5 = 1;
 13914  11DC  16BE               	bsf	62,5	;volatile
 13915                           
 13916                           ;pin_manager.c: 115: IOCANbits.IOCAN7 = 1;
 13917  11DD  17BE               	bsf	62,7	;volatile
 13918                           
 13919                           ;pin_manager.c: 117: IOCAPbits.IOCAP4 = 1;
 13920  11DE  163D               	bsf	61,4	;volatile
 13921                           
 13922                           ;pin_manager.c: 119: IOCAPbits.IOCAP5 = 1;
 13923  11DF  16BD               	bsf	61,5	;volatile
 13924                           
 13925                           ;pin_manager.c: 121: IOCAPbits.IOCAP7 = 1;
 13926  11E0  17BD               	bsf	61,7	;volatile
 13927                           
 13928                           ;pin_manager.c: 123: IOCCFbits.IOCCF2 = 0;
 13929  11E1  1155               	bcf	85,2	;volatile
 13930                           
 13931                           ;pin_manager.c: 125: IOCCNbits.IOCCN2 = 1;
 13932  11E2  1554               	bsf	84,2	;volatile
 13933                           
 13934                           ;pin_manager.c: 127: IOCCPbits.IOCCP2 = 1;
 13935  11E3  1553               	bsf	83,2	;volatile
 13936                           
 13937                           ;pin_manager.c: 132: IOCAF4_SetInterruptHandler(IOCAF4_DefaultInterruptHandler);
 13938  11E4  30A3               	movlw	low _IOCAF4_DefaultInterruptHandler
 13939  11E5  0140               	movlb	0	; select bank0
 13940  11E6  00A0               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler
 13941  11E7  301B               	movlw	high _IOCAF4_DefaultInterruptHandler
 13942  11E8  00A1               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler+1
 13943  11E9  319C  2401  3191   	fcall	_IOCAF4_SetInterruptHandler
 13944                           
 13945                           ;pin_manager.c: 133: IOCAF5_SetInterruptHandler(IOCAF5_DefaultInterruptHandler);
 13946  11EC  30A2               	movlw	low _IOCAF5_DefaultInterruptHandler
 13947  11ED  0140               	movlb	0	; select bank0
 13948  11EE  00A0               	movwf	IOCAF5_SetInterruptHandler@InterruptHandler
 13949  11EF  301B               	movlw	high _IOCAF5_DefaultInterruptHandler
 13950  11F0  00A1               	movwf	IOCAF5_SetInterruptHandler@InterruptHandler+1
 13951  11F1  319C  240A  3191   	fcall	_IOCAF5_SetInterruptHandler
 13952                           
 13953                           ;pin_manager.c: 134: IOCAF7_SetInterruptHandler(IOCAF7_DefaultInterruptHandler);
 13954  11F4  30A4               	movlw	low _IOCAF7_DefaultInterruptHandler
 13955  11F5  0140               	movlb	0	; select bank0
 13956  11F6  00A0               	movwf	IOCAF7_SetInterruptHandler@InterruptHandler
 13957  11F7  301B               	movlw	high _IOCAF7_DefaultInterruptHandler
 13958  11F8  00A1               	movwf	IOCAF7_SetInterruptHandler@InterruptHandler+1
 13959  11F9  319C  2413  3191   	fcall	_IOCAF7_SetInterruptHandler
 13960                           
 13961                           ;pin_manager.c: 135: IOCCF2_SetInterruptHandler(IOCCF2_DefaultInterruptHandler);
 13962  11FC  30A5               	movlw	low _IOCCF2_DefaultInterruptHandler
 13963  11FD  0140               	movlb	0	; select bank0
 13964  11FE  00A0               	movwf	IOCCF2_SetInterruptHandler@InterruptHandler
 13965  11FF  301B               	movlw	high _IOCCF2_DefaultInterruptHandler
 13966  1200  00A1               	movwf	IOCCF2_SetInterruptHandler@InterruptHandler+1
 13967  1201  319C  241C         	fcall	_IOCCF2_SetInterruptHandler
 13968                           
 13969                           ;pin_manager.c: 138: PIE0bits.IOCIE = 1;
 13970  1203  014E               	movlb	14	; select bank14
 13971  1204  1616               	bsf	22,4	;volatile
 13972                           
 13973                           ;pin_manager.c: 141: RX1DTPPSbits.RX1DTPPS = 0x17;
 13974  1205  017D               	movlb	61	; select bank61
 13975  1206  084B               	movf	75,w	;volatile
 13976  1207  39C0               	andlw	-64
 13977  1208  3817               	iorlw	23
 13978  1209  00CB               	movwf	75	;volatile
 13979                           
 13980                           ;pin_manager.c: 142: RC6PPS = 0x0F;
 13981  120A  300F               	movlw	15
 13982  120B  017E               	movlb	62	; select bank62
 13983  120C  00A6               	movwf	38	;volatile
 13984  120D  0008               	return
 13985  120E                     __end_of_PIN_MANAGER_Initialize:	
 13986                           
 13987                           	psect	text46
 13988  1C1C                     __ptext46:	
 13989 ;; *************** function _IOCCF2_SetInterruptHandler *****************
 13990 ;; Defined at:
 13991 ;;		line 277 in file "mcc_generated_files/pin_manager.c"
 13992 ;; Parameters:    Size  Location     Type
 13993 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 13994 ;;		 -> overcurrent(1), IOCCF2_DefaultInterruptHandler(1), 
 13995 ;; Auto vars:     Size  Location     Type
 13996 ;;		None
 13997 ;; Return value:  Size  Location     Type
 13998 ;;                  1    wreg      void 
 13999 ;; Registers used:
 14000 ;;		wreg
 14001 ;; Tracked objects:
 14002 ;;		On entry : 0/0
 14003 ;;		On exit  : 0/0
 14004 ;;		Unchanged: 0/0
 14005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14006 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14009 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14010 ;;Total ram usage:        2 bytes
 14011 ;; Hardware stack levels used:    1
 14012 ;; Hardware stack levels required when called:    5
 14013 ;; This function calls:
 14014 ;;		Nothing
 14015 ;; This function is called by:
 14016 ;;		_PIN_MANAGER_Initialize
 14017 ;;		_main
 14018 ;; This function uses a non-reentrant model
 14019 ;;
 14020                           
 14021                           
 14022                           ;psect for function _IOCCF2_SetInterruptHandler
 14023  1C1C                     _IOCCF2_SetInterruptHandler:	
 14024                           
 14025                           ;pin_manager.c: 278: IOCCF2_InterruptHandler = InterruptHandler;
 14026                           
 14027                           ;incstack = 0
 14028                           ; Regs used in _IOCCF2_SetInterruptHandler: [wreg]
 14029  1C1C  0140               	movlb	0	; select bank0
 14030  1C1D  0821               	movf	IOCCF2_SetInterruptHandler@InterruptHandler+1,w
 14031  1C1E  0142               	movlb	2	; select bank2
 14032  1C1F  00E8               	movwf	(_IOCCF2_InterruptHandler+1)^(0+256)
 14033  1C20  0140               	movlb	0	; select bank0
 14034  1C21  0820               	movf	IOCCF2_SetInterruptHandler@InterruptHandler,w
 14035  1C22  0142               	movlb	2	; select bank2
 14036  1C23  00E7               	movwf	_IOCCF2_InterruptHandler^(0+256)
 14037  1C24  0008               	return
 14038  1C25                     __end_of_IOCCF2_SetInterruptHandler:	
 14039                           
 14040                           	psect	text47
 14041  1C13                     __ptext47:	
 14042 ;; *************** function _IOCAF7_SetInterruptHandler *****************
 14043 ;; Defined at:
 14044 ;;		line 247 in file "mcc_generated_files/pin_manager.c"
 14045 ;; Parameters:    Size  Location     Type
 14046 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 14047 ;;		 -> pushbutton(1), IOCAF7_DefaultInterruptHandler(1), 
 14048 ;; Auto vars:     Size  Location     Type
 14049 ;;		None
 14050 ;; Return value:  Size  Location     Type
 14051 ;;                  1    wreg      void 
 14052 ;; Registers used:
 14053 ;;		wreg
 14054 ;; Tracked objects:
 14055 ;;		On entry : 0/0
 14056 ;;		On exit  : 0/0
 14057 ;;		Unchanged: 0/0
 14058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14059 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14062 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14063 ;;Total ram usage:        2 bytes
 14064 ;; Hardware stack levels used:    1
 14065 ;; Hardware stack levels required when called:    5
 14066 ;; This function calls:
 14067 ;;		Nothing
 14068 ;; This function is called by:
 14069 ;;		_PIN_MANAGER_Initialize
 14070 ;;		_main
 14071 ;; This function uses a non-reentrant model
 14072 ;;
 14073                           
 14074                           
 14075                           ;psect for function _IOCAF7_SetInterruptHandler
 14076  1C13                     _IOCAF7_SetInterruptHandler:	
 14077                           
 14078                           ;pin_manager.c: 248: IOCAF7_InterruptHandler = InterruptHandler;
 14079                           
 14080                           ;incstack = 0
 14081                           ; Regs used in _IOCAF7_SetInterruptHandler: [wreg]
 14082  1C13  0140               	movlb	0	; select bank0
 14083  1C14  0821               	movf	IOCAF7_SetInterruptHandler@InterruptHandler+1,w
 14084  1C15  0142               	movlb	2	; select bank2
 14085  1C16  00EA               	movwf	(_IOCAF7_InterruptHandler+1)^(0+256)
 14086  1C17  0140               	movlb	0	; select bank0
 14087  1C18  0820               	movf	IOCAF7_SetInterruptHandler@InterruptHandler,w
 14088  1C19  0142               	movlb	2	; select bank2
 14089  1C1A  00E9               	movwf	_IOCAF7_InterruptHandler^(0+256)
 14090  1C1B  0008               	return
 14091  1C1C                     __end_of_IOCAF7_SetInterruptHandler:	
 14092                           
 14093                           	psect	text48
 14094  1C0A                     __ptext48:	
 14095 ;; *************** function _IOCAF5_SetInterruptHandler *****************
 14096 ;; Defined at:
 14097 ;;		line 217 in file "mcc_generated_files/pin_manager.c"
 14098 ;; Parameters:    Size  Location     Type
 14099 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 14100 ;;		 -> rot(1), IOCAF5_DefaultInterruptHandler(1), 
 14101 ;; Auto vars:     Size  Location     Type
 14102 ;;		None
 14103 ;; Return value:  Size  Location     Type
 14104 ;;                  1    wreg      void 
 14105 ;; Registers used:
 14106 ;;		wreg
 14107 ;; Tracked objects:
 14108 ;;		On entry : 0/0
 14109 ;;		On exit  : 0/0
 14110 ;;		Unchanged: 0/0
 14111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14112 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14115 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14116 ;;Total ram usage:        2 bytes
 14117 ;; Hardware stack levels used:    1
 14118 ;; Hardware stack levels required when called:    5
 14119 ;; This function calls:
 14120 ;;		Nothing
 14121 ;; This function is called by:
 14122 ;;		_PIN_MANAGER_Initialize
 14123 ;;		_main
 14124 ;; This function uses a non-reentrant model
 14125 ;;
 14126                           
 14127                           
 14128                           ;psect for function _IOCAF5_SetInterruptHandler
 14129  1C0A                     _IOCAF5_SetInterruptHandler:	
 14130                           
 14131                           ;pin_manager.c: 218: IOCAF5_InterruptHandler = InterruptHandler;
 14132                           
 14133                           ;incstack = 0
 14134                           ; Regs used in _IOCAF5_SetInterruptHandler: [wreg]
 14135  1C0A  0140               	movlb	0	; select bank0
 14136  1C0B  0821               	movf	IOCAF5_SetInterruptHandler@InterruptHandler+1,w
 14137  1C0C  0142               	movlb	2	; select bank2
 14138  1C0D  00EC               	movwf	(_IOCAF5_InterruptHandler+1)^(0+256)
 14139  1C0E  0140               	movlb	0	; select bank0
 14140  1C0F  0820               	movf	IOCAF5_SetInterruptHandler@InterruptHandler,w
 14141  1C10  0142               	movlb	2	; select bank2
 14142  1C11  00EB               	movwf	_IOCAF5_InterruptHandler^(0+256)
 14143  1C12  0008               	return
 14144  1C13                     __end_of_IOCAF5_SetInterruptHandler:	
 14145                           
 14146                           	psect	text49
 14147  1C01                     __ptext49:	
 14148 ;; *************** function _IOCAF4_SetInterruptHandler *****************
 14149 ;; Defined at:
 14150 ;;		line 187 in file "mcc_generated_files/pin_manager.c"
 14151 ;; Parameters:    Size  Location     Type
 14152 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 14153 ;;		 -> rot(1), IOCAF4_DefaultInterruptHandler(1), 
 14154 ;; Auto vars:     Size  Location     Type
 14155 ;;		None
 14156 ;; Return value:  Size  Location     Type
 14157 ;;                  1    wreg      void 
 14158 ;; Registers used:
 14159 ;;		wreg
 14160 ;; Tracked objects:
 14161 ;;		On entry : 0/0
 14162 ;;		On exit  : 0/0
 14163 ;;		Unchanged: 0/0
 14164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14165 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14168 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14169 ;;Total ram usage:        2 bytes
 14170 ;; Hardware stack levels used:    1
 14171 ;; Hardware stack levels required when called:    5
 14172 ;; This function calls:
 14173 ;;		Nothing
 14174 ;; This function is called by:
 14175 ;;		_PIN_MANAGER_Initialize
 14176 ;;		_main
 14177 ;; This function uses a non-reentrant model
 14178 ;;
 14179                           
 14180                           
 14181                           ;psect for function _IOCAF4_SetInterruptHandler
 14182  1C01                     _IOCAF4_SetInterruptHandler:	
 14183                           
 14184                           ;pin_manager.c: 188: IOCAF4_InterruptHandler = InterruptHandler;
 14185                           
 14186                           ;incstack = 0
 14187                           ; Regs used in _IOCAF4_SetInterruptHandler: [wreg]
 14188  1C01  0140               	movlb	0	; select bank0
 14189  1C02  0821               	movf	IOCAF4_SetInterruptHandler@InterruptHandler+1,w
 14190  1C03  0142               	movlb	2	; select bank2
 14191  1C04  00EE               	movwf	(_IOCAF4_InterruptHandler+1)^(0+256)
 14192  1C05  0140               	movlb	0	; select bank0
 14193  1C06  0820               	movf	IOCAF4_SetInterruptHandler@InterruptHandler,w
 14194  1C07  0142               	movlb	2	; select bank2
 14195  1C08  00ED               	movwf	_IOCAF4_InterruptHandler^(0+256)
 14196  1C09  0008               	return
 14197  1C0A                     __end_of_IOCAF4_SetInterruptHandler:	
 14198                           
 14199                           	psect	text50
 14200  1C41                     __ptext50:	
 14201 ;; *************** function _OSCILLATOR_Initialize *****************
 14202 ;; Defined at:
 14203 ;;		line 61 in file "mcc_generated_files/mcc.c"
 14204 ;; Parameters:    Size  Location     Type
 14205 ;;		None
 14206 ;; Auto vars:     Size  Location     Type
 14207 ;;		None
 14208 ;; Return value:  Size  Location     Type
 14209 ;;                  1    wreg      void 
 14210 ;; Registers used:
 14211 ;;		wreg, status,2
 14212 ;; Tracked objects:
 14213 ;;		On entry : 0/0
 14214 ;;		On exit  : 0/0
 14215 ;;		Unchanged: 0/0
 14216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14221 ;;Total ram usage:        0 bytes
 14222 ;; Hardware stack levels used:    1
 14223 ;; Hardware stack levels required when called:    5
 14224 ;; This function calls:
 14225 ;;		Nothing
 14226 ;; This function is called by:
 14227 ;;		_SYSTEM_Initialize
 14228 ;; This function uses a non-reentrant model
 14229 ;;
 14230                           
 14231                           
 14232                           ;psect for function _OSCILLATOR_Initialize
 14233  1C41                     _OSCILLATOR_Initialize:	
 14234                           
 14235                           ;mcc.c: 64: OSCCON1 = 0x62;
 14236                           
 14237                           ;incstack = 0
 14238                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 14239  1C41  3062               	movlw	98
 14240  1C42  0151               	movlb	17	; select bank17
 14241  1C43  008D               	movwf	13	;volatile
 14242                           
 14243                           ;mcc.c: 66: OSCCON3 = 0x00;
 14244  1C44  018F               	clrf	15	;volatile
 14245                           
 14246                           ;mcc.c: 68: OSCEN = 0x00;
 14247  1C45  0191               	clrf	17	;volatile
 14248                           
 14249                           ;mcc.c: 70: OSCFRQ = 0x02;
 14250  1C46  3002               	movlw	2
 14251  1C47  0093               	movwf	19	;volatile
 14252                           
 14253                           ;mcc.c: 72: OSCSTAT = 0x00;
 14254  1C48  0190               	clrf	16	;volatile
 14255                           
 14256                           ;mcc.c: 74: OSCTUNE = 0x00;
 14257  1C49  0192               	clrf	18	;volatile
 14258  1C4A  0008               	return
 14259  1C4B                     __end_of_OSCILLATOR_Initialize:	
 14260                           
 14261                           	psect	text51
 14262  1E01                     __ptext51:	
 14263 ;; *************** function _EUSART1_Initialize *****************
 14264 ;; Defined at:
 14265 ;;		line 75 in file "mcc_generated_files/eusart1.c"
 14266 ;; Parameters:    Size  Location     Type
 14267 ;;		None
 14268 ;; Auto vars:     Size  Location     Type
 14269 ;;		None
 14270 ;; Return value:  Size  Location     Type
 14271 ;;                  1    wreg      void 
 14272 ;; Registers used:
 14273 ;;		wreg, status,2, status,0, pclath, cstack
 14274 ;; Tracked objects:
 14275 ;;		On entry : 0/0
 14276 ;;		On exit  : 0/0
 14277 ;;		Unchanged: 0/0
 14278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14281 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14282 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14283 ;;Total ram usage:        1 bytes
 14284 ;; Hardware stack levels used:    1
 14285 ;; Hardware stack levels required when called:    6
 14286 ;; This function calls:
 14287 ;;		_EUSART1_SetRxInterruptHandler
 14288 ;;		_EUSART1_SetTxInterruptHandler
 14289 ;; This function is called by:
 14290 ;;		_SYSTEM_Initialize
 14291 ;; This function uses a non-reentrant model
 14292 ;;
 14293                           
 14294                           
 14295                           ;psect for function _EUSART1_Initialize
 14296  1E01                     _EUSART1_Initialize:	
 14297                           
 14298                           ;eusart1.c: 78: PIE3bits.RC1IE = 0;
 14299                           
 14300                           ;incstack = 0
 14301                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14302  1E01  014E               	movlb	14	; select bank14
 14303  1E02  1299               	bcf	25,5	;volatile
 14304                           
 14305                           ;eusart1.c: 79: EUSART1_SetRxInterruptHandler(EUSART1_Receive_ISR);
 14306  1E03  304B               	movlw	low _EUSART1_Receive_ISR
 14307  1E04  0140               	movlb	0	; select bank0
 14308  1E05  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 14309  1E06  301D               	movlw	high _EUSART1_Receive_ISR
 14310  1E07  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 14311  1E08  319B  23EF  319E   	fcall	_EUSART1_SetRxInterruptHandler
 14312                           
 14313                           ;eusart1.c: 80: PIE3bits.TX1IE = 0;
 14314  1E0B  014E               	movlb	14	; select bank14
 14315  1E0C  1219               	bcf	25,4	;volatile
 14316                           
 14317                           ;eusart1.c: 81: EUSART1_SetTxInterruptHandler(EUSART1_Transmit_ISR);
 14318  1E0D  30A0               	movlw	low _EUSART1_Transmit_ISR
 14319  1E0E  0140               	movlb	0	; select bank0
 14320  1E0F  00A0               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
 14321  1E10  301D               	movlw	high _EUSART1_Transmit_ISR
 14322  1E11  00A1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
 14323  1E12  319B  23F8         	fcall	_EUSART1_SetTxInterruptHandler
 14324                           
 14325                           ;eusart1.c: 85: BAUD1CON = 0x08;
 14326  1E14  3008               	movlw	8
 14327  1E15  0142               	movlb	2	; select bank2
 14328  1E16  009F               	movwf	31	;volatile
 14329                           
 14330                           ;eusart1.c: 88: RC1STA = 0x90;
 14331  1E17  3090               	movlw	144
 14332  1E18  009D               	movwf	29	;volatile
 14333                           
 14334                           ;eusart1.c: 91: TX1STA = 0x04;
 14335  1E19  3004               	movlw	4
 14336  1E1A  009E               	movwf	30	;volatile
 14337                           
 14338                           ;eusart1.c: 94: SP1BRGL = 0x19;
 14339  1E1B  3019               	movlw	25
 14340  1E1C  009B               	movwf	27	;volatile
 14341                           
 14342                           ;eusart1.c: 97: SP1BRGH = 0x00;
 14343  1E1D  019C               	clrf	28	;volatile
 14344                           
 14345                           ;eusart1.c: 101: eusart1TxHead = 0;
 14346  1E1E  01FD               	clrf	_eusart1TxHead	;volatile
 14347                           
 14348                           ;eusart1.c: 102: eusart1TxTail = 0;
 14349  1E1F  0141               	movlb	1	; select bank1
 14350  1E20  01EE               	clrf	_eusart1TxTail^(0+128)	;volatile
 14351                           
 14352                           ;eusart1.c: 103: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
 14353  1E21  3008               	movlw	8
 14354  1E22  0140               	movlb	0	; select bank0
 14355  1E23  00A2               	movwf	??_EUSART1_Initialize
 14356  1E24  0822               	movf	??_EUSART1_Initialize,w
 14357  1E25  0142               	movlb	2	; select bank2
 14358  1E26  00EF               	movwf	_eusart1TxBufferRemaining^(0+256)	;volatile
 14359                           
 14360                           ;eusart1.c: 105: eusart1RxHead = 0;
 14361  1E27  01E1               	clrf	_eusart1RxHead^(0+256)	;volatile
 14362                           
 14363                           ;eusart1.c: 106: eusart1RxTail = 0;
 14364  1E28  01E0               	clrf	_eusart1RxTail^(0+256)	;volatile
 14365                           
 14366                           ;eusart1.c: 107: eusart1RxCount = 0;
 14367  1E29  01DF               	clrf	_eusart1RxCount^(0+256)	;volatile
 14368                           
 14369                           ;eusart1.c: 110: PIE3bits.RC1IE = 1;
 14370  1E2A  014E               	movlb	14	; select bank14
 14371  1E2B  1699               	bsf	25,5	;volatile
 14372  1E2C  0008               	return
 14373  1E2D                     __end_of_EUSART1_Initialize:	
 14374                           
 14375                           	psect	text52
 14376  1BF8                     __ptext52:	
 14377 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 14378 ;; Defined at:
 14379 ;;		line 211 in file "mcc_generated_files/eusart1.c"
 14380 ;; Parameters:    Size  Location     Type
 14381 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 14382 ;;		 -> EUSART1_Transmit_ISR(1), 
 14383 ;; Auto vars:     Size  Location     Type
 14384 ;;		None
 14385 ;; Return value:  Size  Location     Type
 14386 ;;                  1    wreg      void 
 14387 ;; Registers used:
 14388 ;;		wreg
 14389 ;; Tracked objects:
 14390 ;;		On entry : 0/0
 14391 ;;		On exit  : 0/0
 14392 ;;		Unchanged: 0/0
 14393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14394 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14397 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14398 ;;Total ram usage:        2 bytes
 14399 ;; Hardware stack levels used:    1
 14400 ;; Hardware stack levels required when called:    5
 14401 ;; This function calls:
 14402 ;;		Nothing
 14403 ;; This function is called by:
 14404 ;;		_EUSART1_Initialize
 14405 ;; This function uses a non-reentrant model
 14406 ;;
 14407                           
 14408                           
 14409                           ;psect for function _EUSART1_SetTxInterruptHandler
 14410  1BF8                     _EUSART1_SetTxInterruptHandler:	
 14411                           
 14412                           ;eusart1.c: 212: EUSART1_TxDefaultInterruptHandler = interruptHandler;
 14413                           
 14414                           ;incstack = 0
 14415                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
 14416  1BF8  0140               	movlb	0	; select bank0
 14417  1BF9  0821               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
 14418  1BFA  0143               	movlb	3	; select bank3
 14419  1BFB  00C5               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+384)
 14420  1BFC  0140               	movlb	0	; select bank0
 14421  1BFD  0820               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
 14422  1BFE  0143               	movlb	3	; select bank3
 14423  1BFF  00C4               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+384)
 14424  1C00  0008               	return
 14425  1C01                     __end_of_EUSART1_SetTxInterruptHandler:	
 14426                           
 14427                           	psect	text53
 14428  1BEF                     __ptext53:	
 14429 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 14430 ;; Defined at:
 14431 ;;		line 215 in file "mcc_generated_files/eusart1.c"
 14432 ;; Parameters:    Size  Location     Type
 14433 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 14434 ;;		 -> EUSART1_Receive_ISR(1), 
 14435 ;; Auto vars:     Size  Location     Type
 14436 ;;		None
 14437 ;; Return value:  Size  Location     Type
 14438 ;;                  1    wreg      void 
 14439 ;; Registers used:
 14440 ;;		wreg
 14441 ;; Tracked objects:
 14442 ;;		On entry : 0/0
 14443 ;;		On exit  : 0/0
 14444 ;;		Unchanged: 0/0
 14445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14446 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14449 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14450 ;;Total ram usage:        2 bytes
 14451 ;; Hardware stack levels used:    1
 14452 ;; Hardware stack levels required when called:    5
 14453 ;; This function calls:
 14454 ;;		Nothing
 14455 ;; This function is called by:
 14456 ;;		_EUSART1_Initialize
 14457 ;; This function uses a non-reentrant model
 14458 ;;
 14459                           
 14460                           
 14461                           ;psect for function _EUSART1_SetRxInterruptHandler
 14462  1BEF                     _EUSART1_SetRxInterruptHandler:	
 14463                           
 14464                           ;eusart1.c: 216: EUSART1_RxDefaultInterruptHandler = interruptHandler;
 14465                           
 14466                           ;incstack = 0
 14467                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 14468  1BEF  0140               	movlb	0	; select bank0
 14469  1BF0  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 14470  1BF1  0143               	movlb	3	; select bank3
 14471  1BF2  00C3               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+384)
 14472  1BF3  0140               	movlb	0	; select bank0
 14473  1BF4  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 14474  1BF5  0143               	movlb	3	; select bank3
 14475  1BF6  00C2               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+384)
 14476  1BF7  0008               	return
 14477  1BF8                     __end_of_EUSART1_SetRxInterruptHandler:	
 14478                           
 14479                           	psect	text54
 14480  1BCE                     __ptext54:	
 14481 ;; *************** function _ADC_Initialize *****************
 14482 ;; Defined at:
 14483 ;;		line 65 in file "mcc_generated_files/adc.c"
 14484 ;; Parameters:    Size  Location     Type
 14485 ;;		None
 14486 ;; Auto vars:     Size  Location     Type
 14487 ;;		None
 14488 ;; Return value:  Size  Location     Type
 14489 ;;                  1    wreg      void 
 14490 ;; Registers used:
 14491 ;;		wreg, status,2
 14492 ;; Tracked objects:
 14493 ;;		On entry : 0/0
 14494 ;;		On exit  : 0/0
 14495 ;;		Unchanged: 0/0
 14496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14501 ;;Total ram usage:        0 bytes
 14502 ;; Hardware stack levels used:    1
 14503 ;; Hardware stack levels required when called:    5
 14504 ;; This function calls:
 14505 ;;		Nothing
 14506 ;; This function is called by:
 14507 ;;		_SYSTEM_Initialize
 14508 ;;		_main
 14509 ;; This function uses a non-reentrant model
 14510 ;;
 14511                           
 14512                           
 14513                           ;psect for function _ADC_Initialize
 14514  1BCE                     _ADC_Initialize:	
 14515                           
 14516                           ;adc.c: 70: ADCON0 = 0x01;
 14517                           
 14518                           ;incstack = 0
 14519                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 14520  1BCE  3001               	movlw	1
 14521  1BCF  0141               	movlb	1	; select bank1
 14522  1BD0  009D               	movwf	29	;volatile
 14523                           
 14524                           ;adc.c: 73: ADCON1 = 0xE0;
 14525  1BD1  30E0               	movlw	224
 14526  1BD2  009E               	movwf	30	;volatile
 14527                           
 14528                           ;adc.c: 76: ADRESL = 0x00;
 14529  1BD3  019B               	clrf	27	;volatile
 14530                           
 14531                           ;adc.c: 79: ADRESH = 0x00;
 14532  1BD4  019C               	clrf	28	;volatile
 14533  1BD5  0008               	return
 14534  1BD6                     __end_of_ADC_Initialize:	
 14535                           
 14536                           	psect	text55
 14537  1303                     __ptext55:	
 14538 ;; *************** function _OLED_init *****************
 14539 ;; Defined at:
 14540 ;;		line 82 in file "oled.c"
 14541 ;; Parameters:    Size  Location     Type
 14542 ;;		None
 14543 ;; Auto vars:     Size  Location     Type
 14544 ;;		None
 14545 ;; Return value:  Size  Location     Type
 14546 ;;                  1    wreg      void 
 14547 ;; Registers used:
 14548 ;;		wreg, status,2, status,0, pclath, cstack
 14549 ;; Tracked objects:
 14550 ;;		On entry : 0/0
 14551 ;;		On exit  : 0/0
 14552 ;;		Unchanged: 0/0
 14553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14556 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14557 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14558 ;;Total ram usage:        1 bytes
 14559 ;; Hardware stack levels used:    1
 14560 ;; Hardware stack levels required when called:    9
 14561 ;; This function calls:
 14562 ;;		_OLED_command
 14563 ;;		_OLED_write4bits
 14564 ;; This function is called by:
 14565 ;;		_main
 14566 ;; This function uses a non-reentrant model
 14567 ;;
 14568                           
 14569                           
 14570                           ;psect for function _OLED_init
 14571  1303                     _OLED_init:	
 14572                           
 14573                           ;oled.c: 84: LATBbits.LATB4 = 0;
 14574                           
 14575                           ;incstack = 0
 14576                           ; Regs used in _OLED_init: [wreg+status,2+status,0+pclath+cstack]
 14577  1303  0140               	movlb	0	; select bank0
 14578  1304  1219               	bcf	25,4	;volatile
 14579                           
 14580                           ;oled.c: 85: LATBbits.LATB2 = 0;
 14581  1305  1119               	bcf	25,2	;volatile
 14582                           
 14583                           ;oled.c: 86: LATBbits.LATB3 = 0;
 14584  1306  1199               	bcf	25,3	;volatile
 14585                           
 14586                           ;oled.c: 88: _delay((unsigned long)((50)*(1000000/4000.0)));
 14587  1307  3011               	movlw	17
 14588  1308  0140               	movlb	0	; select bank0
 14589  1309  00A7               	movwf	??_OLED_init
 14590  130A  303A               	movlw	58
 14591  130B                     u5997:	
 14592  130B  0B89               	decfsz	9,f
 14593  130C  2B0B               	goto	u5997
 14594  130D  0BA7               	decfsz	??_OLED_init,f
 14595  130E  2B0B               	goto	u5997
 14596  130F  0000               	nop
 14597                           
 14598                           ;oled.c: 92: LATBbits.LATB1 = 0;
 14599  1310  0140               	movlb	0	; select bank0
 14600  1311  1099               	bcf	25,1	;volatile
 14601                           
 14602                           ;oled.c: 93: LATBbits.LATB0 = 0;
 14603  1312  1019               	bcf	25,0	;volatile
 14604                           
 14605                           ;oled.c: 94: LATCbits.LATC5 = 0;
 14606  1313  129A               	bcf	26,5	;volatile
 14607                           
 14608                           ;oled.c: 95: LATCbits.LATC4 = 0;
 14609  1314  121A               	bcf	26,4	;volatile
 14610                           
 14611                           ;oled.c: 106: OLED_write4bits(0x03);
 14612  1315  3003               	movlw	3
 14613  1316  3190  201C  3193   	fcall	_OLED_write4bits
 14614                           
 14615                           ;oled.c: 107: _delay((unsigned long)((5)*(1000000/4000.0)));
 14616  1319  30FA               	movlw	250
 14617  131A                     u6007:	
 14618  131A  3200               	nop2
 14619  131B  0B89               	decfsz	9,f
 14620  131C  2B1A               	goto	u6007
 14621                           
 14622                           ;oled.c: 108: OLED_write4bits(0x08);
 14623  131D  3008               	movlw	8
 14624  131E  3190  201C  3193   	fcall	_OLED_write4bits
 14625                           
 14626                           ;oled.c: 109: _delay((unsigned long)((5)*(1000000/4000.0)));
 14627  1321  30FA               	movlw	250
 14628  1322                     u6017:	
 14629  1322  3200               	nop2
 14630  1323  0B89               	decfsz	9,f
 14631  1324  2B22               	goto	u6017
 14632                           
 14633                           ;oled.c: 111: OLED_write4bits(0x02);
 14634  1325  3002               	movlw	2
 14635  1326  3190  201C  3193   	fcall	_OLED_write4bits
 14636                           
 14637                           ;oled.c: 112: _delay((unsigned long)((5)*(1000000/4000.0)));
 14638  1329  30FA               	movlw	250
 14639  132A                     u6027:	
 14640  132A  3200               	nop2
 14641  132B  0B89               	decfsz	9,f
 14642  132C  2B2A               	goto	u6027
 14643                           
 14644                           ;oled.c: 113: OLED_write4bits(0x02);
 14645  132D  3002               	movlw	2
 14646  132E  3190  201C  3193   	fcall	_OLED_write4bits
 14647                           
 14648                           ;oled.c: 114: _delay((unsigned long)((5)*(1000000/4000.0)));
 14649  1331  30FA               	movlw	250
 14650  1332                     u6037:	
 14651  1332  3200               	nop2
 14652  1333  0B89               	decfsz	9,f
 14653  1334  2B32               	goto	u6037
 14654                           
 14655                           ;oled.c: 115: OLED_write4bits(0x08);
 14656  1335  3008               	movlw	8
 14657  1336  3190  201C  3193   	fcall	_OLED_write4bits
 14658                           
 14659                           ;oled.c: 116: _delay((unsigned long)((5)*(1000000/4000.0)));
 14660  1339  30FA               	movlw	250
 14661  133A                     u6047:	
 14662  133A  3200               	nop2
 14663  133B  0B89               	decfsz	9,f
 14664  133C  2B3A               	goto	u6047
 14665                           
 14666                           ;oled.c: 118: OLED_command(0x08);
 14667  133D  3008               	movlw	8
 14668  133E  319C  2437  3193   	fcall	_OLED_command
 14669                           
 14670                           ;oled.c: 119: _delay((unsigned long)((5)*(1000000/4000.0)));
 14671  1341  30FA               	movlw	250
 14672  1342                     u6057:	
 14673  1342  3200               	nop2
 14674  1343  0B89               	decfsz	9,f
 14675  1344  2B42               	goto	u6057
 14676                           
 14677                           ;oled.c: 120: OLED_command(0x01);
 14678  1345  3001               	movlw	1
 14679  1346  319C  2437  3193   	fcall	_OLED_command
 14680                           
 14681                           ;oled.c: 121: _delay((unsigned long)((5)*(1000000/4000.0)));
 14682  1349  30FA               	movlw	250
 14683  134A                     u6067:	
 14684  134A  3200               	nop2
 14685  134B  0B89               	decfsz	9,f
 14686  134C  2B4A               	goto	u6067
 14687                           
 14688                           ;oled.c: 122: OLED_command(0x06);
 14689  134D  3006               	movlw	6
 14690  134E  319C  2437  3193   	fcall	_OLED_command
 14691                           
 14692                           ;oled.c: 123: _delay((unsigned long)((5)*(1000000/4000.0)));
 14693  1351  30FA               	movlw	250
 14694  1352                     u6077:	
 14695  1352  3200               	nop2
 14696  1353  0B89               	decfsz	9,f
 14697  1354  2B52               	goto	u6077
 14698                           
 14699                           ;oled.c: 124: OLED_command(0x02);
 14700  1355  3002               	movlw	2
 14701  1356  319C  2437  3193   	fcall	_OLED_command
 14702                           
 14703                           ;oled.c: 125: _delay((unsigned long)((5)*(1000000/4000.0)));
 14704  1359  30FA               	movlw	250
 14705  135A                     u6087:	
 14706  135A  3200               	nop2
 14707  135B  0B89               	decfsz	9,f
 14708  135C  2B5A               	goto	u6087
 14709                           
 14710                           ;oled.c: 126: OLED_command(0x0C);
 14711  135D  300C               	movlw	12
 14712  135E  319C  2437  3193   	fcall	_OLED_command
 14713                           
 14714                           ;oled.c: 127: _delay((unsigned long)((5)*(1000000/4000.0)));
 14715  1361  30FA               	movlw	250
 14716  1362                     u6097:	
 14717  1362  3200               	nop2
 14718  1363  0B89               	decfsz	9,f
 14719  1364  2B62               	goto	u6097
 14720  1365  0008               	return
 14721  1366                     __end_of_OLED_init:	
 14722                           
 14723                           	psect	text56
 14724  1C37                     __ptext56:	
 14725 ;; *************** function _OLED_command *****************
 14726 ;; Defined at:
 14727 ;;		line 70 in file "oled.c"
 14728 ;; Parameters:    Size  Location     Type
 14729 ;;  value           1    wreg     unsigned char 
 14730 ;; Auto vars:     Size  Location     Type
 14731 ;;  value           1    6[BANK0 ] unsigned char 
 14732 ;; Return value:  Size  Location     Type
 14733 ;;                  1    wreg      void 
 14734 ;; Registers used:
 14735 ;;		wreg, status,2, status,0, pclath, cstack
 14736 ;; Tracked objects:
 14737 ;;		On entry : 0/0
 14738 ;;		On exit  : 0/0
 14739 ;;		Unchanged: 0/0
 14740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14742 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14744 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14745 ;;Total ram usage:        1 bytes
 14746 ;; Hardware stack levels used:    1
 14747 ;; Hardware stack levels required when called:    8
 14748 ;; This function calls:
 14749 ;;		_OLED_send
 14750 ;;		_OLED_waitForReady
 14751 ;; This function is called by:
 14752 ;;		_check_status
 14753 ;;		_OLED_init
 14754 ;;		_OLED_scrollDisplayLeft
 14755 ;;		_OLED_scrollDisplayRight
 14756 ;;		_OLED_print_xy
 14757 ;;		_OLED_returnHome
 14758 ;;		_OLED_setCursor
 14759 ;; This function uses a non-reentrant model
 14760 ;;
 14761                           
 14762                           
 14763                           ;psect for function _OLED_command
 14764  1C37                     _OLED_command:	
 14765                           
 14766                           ;incstack = 0
 14767                           ; Regs used in _OLED_command: [wreg+status,2+status,0+pclath+cstack]
 14768                           ;OLED_command@value stored from wreg
 14769  1C37  0140               	movlb	0	; select bank0
 14770  1C38  00A6               	movwf	OLED_command@value
 14771                           
 14772                           ;oled.c: 72: OLED_send(value, 0);
 14773  1C39  01A3               	clrf	OLED_send@mode
 14774  1C3A  0826               	movf	OLED_command@value,w
 14775  1C3B  319D  2503  319C   	fcall	_OLED_send
 14776                           
 14777                           ;oled.c: 73: OLED_waitForReady();
 14778  1C3E  319D  2532         	fcall	_OLED_waitForReady
 14779  1C40  0008               	return
 14780  1C41                     __end_of_OLED_command:	
 14781                           
 14782                           	psect	text57
 14783  1D32                     __ptext57:	
 14784 ;; *************** function _OLED_waitForReady *****************
 14785 ;; Defined at:
 14786 ;;		line 42 in file "oled.c"
 14787 ;; Parameters:    Size  Location     Type
 14788 ;;		None
 14789 ;; Auto vars:     Size  Location     Type
 14790 ;;  busy            1    0[BANK0 ] unsigned char 
 14791 ;; Return value:  Size  Location     Type
 14792 ;;                  1    wreg      void 
 14793 ;; Registers used:
 14794 ;;		wreg, status,2, status,0, pclath, cstack
 14795 ;; Tracked objects:
 14796 ;;		On entry : 0/0
 14797 ;;		On exit  : 0/0
 14798 ;;		Unchanged: 0/0
 14799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14801 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14803 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14804 ;;Total ram usage:        1 bytes
 14805 ;; Hardware stack levels used:    1
 14806 ;; Hardware stack levels required when called:    6
 14807 ;; This function calls:
 14808 ;;		_OLED_pulseEnable
 14809 ;; This function is called by:
 14810 ;;		_OLED_command
 14811 ;;		_OLED_write
 14812 ;; This function uses a non-reentrant model
 14813 ;;
 14814                           
 14815                           
 14816                           ;psect for function _OLED_waitForReady
 14817  1D32                     _OLED_waitForReady:	
 14818                           
 14819                           ;oled.c: 47: TRISCbits.TRISC4 = 1;
 14820                           
 14821                           ;incstack = 0
 14822                           ; Regs used in _OLED_waitForReady: [wreg+status,2+status,0+pclath+cstack]
 14823  1D32  0140               	movlb	0	; select bank0
 14824  1D33  1614               	bsf	20,4	;volatile
 14825                           
 14826                           ;oled.c: 48: LATBbits.LATB4 = 0;
 14827  1D34  1219               	bcf	25,4	;volatile
 14828                           
 14829                           ;oled.c: 49: LATBbits.LATB3 = 1;
 14830  1D35  1599               	bsf	25,3	;volatile
 14831  1D36                     l711:	
 14832                           ;oled.c: 51: do
 14833                           
 14834                           
 14835                           ;oled.c: 52: {;oled.c: 53: LATBbits.LATB2 = 0;
 14836  1D36  1119               	bcf	25,2	;volatile
 14837                           
 14838                           ;oled.c: 54: _delay((unsigned long)((10)*(1000000/4000000.0)));
 14839  1D37  3200               	nop2	;2 cycle nop
 14840                           
 14841                           ;oled.c: 55: LATBbits.LATB2 = 1;
 14842  1D38  0140               	movlb	0	; select bank0
 14843  1D39  1519               	bsf	25,2	;volatile
 14844                           
 14845                           ;oled.c: 57: _delay((unsigned long)((10)*(1000000/4000000.0)));
 14846  1D3A  3200               	nop2	;2 cycle nop
 14847                           
 14848                           ;oled.c: 58: busy = PORTCbits.RC4;
 14849  1D3B  3000               	movlw	0
 14850  1D3C  0140               	movlb	0	; select bank0
 14851  1D3D  1A0E               	btfsc	14,4	;volatile
 14852  1D3E  3001               	movlw	1
 14853  1D3F  00A0               	movwf	OLED_waitForReady@busy
 14854                           
 14855                           ;oled.c: 60: LATBbits.LATB2 = 0;
 14856  1D40  1119               	bcf	25,2	;volatile
 14857                           
 14858                           ;oled.c: 62: OLED_pulseEnable();
 14859  1D41  319B  23C6  319D   	fcall	_OLED_pulseEnable
 14860                           
 14861                           ;oled.c: 63: };oled.c: 64: while(busy);
 14862  1D44  0140               	movlb	0	; select bank0
 14863  1D45  0820               	movf	OLED_waitForReady@busy,w
 14864  1D46  1D03               	btfss	3,2
 14865  1D47  2D36               	goto	l711
 14866                           
 14867                           ;oled.c: 66: TRISCbits.TRISC4 = 0;
 14868  1D48  1214               	bcf	20,4	;volatile
 14869                           
 14870                           ;oled.c: 67: LATBbits.LATB3 = 0;
 14871  1D49  1199               	bcf	25,3	;volatile
 14872  1D4A  0008               	return
 14873  1D4B                     __end_of_OLED_waitForReady:	
 14874                           
 14875                           	psect	text58
 14876  1D03                     __ptext58:	
 14877 ;; *************** function _OLED_send *****************
 14878 ;; Defined at:
 14879 ;;		line 32 in file "oled.c"
 14880 ;; Parameters:    Size  Location     Type
 14881 ;;  value           1    wreg     unsigned char 
 14882 ;;  mode            1    3[BANK0 ] unsigned char 
 14883 ;; Auto vars:     Size  Location     Type
 14884 ;;  value           1    5[BANK0 ] unsigned char 
 14885 ;; Return value:  Size  Location     Type
 14886 ;;                  1    wreg      void 
 14887 ;; Registers used:
 14888 ;;		wreg, status,2, status,0, pclath, cstack
 14889 ;; Tracked objects:
 14890 ;;		On entry : 0/0
 14891 ;;		On exit  : 0/0
 14892 ;;		Unchanged: 0/0
 14893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14894 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14895 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14896 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14897 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14898 ;;Total ram usage:        3 bytes
 14899 ;; Hardware stack levels used:    1
 14900 ;; Hardware stack levels required when called:    7
 14901 ;; This function calls:
 14902 ;;		_OLED_write4bits
 14903 ;; This function is called by:
 14904 ;;		_OLED_command
 14905 ;;		_OLED_write
 14906 ;; This function uses a non-reentrant model
 14907 ;;
 14908                           
 14909                           
 14910                           ;psect for function _OLED_send
 14911  1D03                     _OLED_send:	
 14912                           
 14913                           ;incstack = 0
 14914                           ; Regs used in _OLED_send: [wreg+status,2+status,0+pclath+cstack]
 14915                           ;OLED_send@value stored from wreg
 14916  1D03  0140               	movlb	0	; select bank0
 14917  1D04  00A5               	movwf	OLED_send@value
 14918                           
 14919                           ;oled.c: 34: LATBbits.LATB4 = mode;
 14920  1D05  0C23               	rrf	OLED_send@mode,w
 14921  1D06  1C03               	skipc
 14922  1D07  1219               	bcf	25,4	;volatile
 14923  1D08  1803               	skipnc
 14924  1D09  1619               	bsf	25,4	;volatile
 14925                           
 14926                           ;oled.c: 35: LATBbits.LATB3 = 0;
 14927  1D0A  1199               	bcf	25,3	;volatile
 14928                           
 14929                           ;oled.c: 37: OLED_write4bits(value>>4);
 14930  1D0B  0825               	movf	OLED_send@value,w
 14931  1D0C  00A4               	movwf	??_OLED_send
 14932  1D0D  3004               	movlw	4
 14933  1D0E                     u3035:	
 14934  1D0E  36A4               	lsrf	??_OLED_send,f
 14935  1D0F  0B89               	decfsz	9,f
 14936  1D10  2D0E               	goto	u3035
 14937  1D11  0824               	movf	??_OLED_send,w
 14938  1D12  3190  201C  319D   	fcall	_OLED_write4bits
 14939                           
 14940                           ;oled.c: 38: OLED_write4bits(value);
 14941  1D15  0140               	movlb	0	; select bank0
 14942  1D16  0825               	movf	OLED_send@value,w
 14943  1D17  3190  201C         	fcall	_OLED_write4bits
 14944  1D19  0008               	return
 14945  1D1A                     __end_of_OLED_send:	
 14946                           
 14947                           	psect	text59
 14948  101C                     __ptext59:	
 14949 ;; *************** function _OLED_write4bits *****************
 14950 ;; Defined at:
 14951 ;;		line 21 in file "oled.c"
 14952 ;; Parameters:    Size  Location     Type
 14953 ;;  value           1    wreg     unsigned char 
 14954 ;; Auto vars:     Size  Location     Type
 14955 ;;  value           1    2[BANK0 ] unsigned char 
 14956 ;; Return value:  Size  Location     Type
 14957 ;;                  1    wreg      void 
 14958 ;; Registers used:
 14959 ;;		wreg, status,2, status,0, pclath, cstack
 14960 ;; Tracked objects:
 14961 ;;		On entry : 0/0
 14962 ;;		On exit  : 0/0
 14963 ;;		Unchanged: 0/0
 14964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14966 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14967 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14968 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14969 ;;Total ram usage:        3 bytes
 14970 ;; Hardware stack levels used:    1
 14971 ;; Hardware stack levels required when called:    6
 14972 ;; This function calls:
 14973 ;;		_OLED_pulseEnable
 14974 ;; This function is called by:
 14975 ;;		_OLED_send
 14976 ;;		_OLED_init
 14977 ;; This function uses a non-reentrant model
 14978 ;;
 14979                           
 14980                           
 14981                           ;psect for function _OLED_write4bits
 14982  101C                     _OLED_write4bits:	
 14983                           
 14984                           ;incstack = 0
 14985                           ; Regs used in _OLED_write4bits: [wreg+status,2+status,0+pclath+cstack]
 14986                           ;OLED_write4bits@value stored from wreg
 14987  101C  0140               	movlb	0	; select bank0
 14988  101D  00A2               	movwf	OLED_write4bits@value
 14989                           
 14990                           ;oled.c: 23: LATBbits.LATB1 = (value >> 0) & 0x01;
 14991  101E  0822               	movf	OLED_write4bits@value,w
 14992  101F  3901               	andlw	1
 14993  1020  00A0               	movwf	??_OLED_write4bits
 14994  1021  0DA0               	rlf	??_OLED_write4bits,f
 14995  1022  0819               	movf	25,w	;volatile
 14996  1023  0620               	xorwf	??_OLED_write4bits,w
 14997  1024  39FD               	andlw	-3
 14998  1025  0620               	xorwf	??_OLED_write4bits,w
 14999  1026  0099               	movwf	25	;volatile
 15000                           
 15001                           ;oled.c: 24: LATBbits.LATB0 = (value >> 1) & 0x01;
 15002  1027  0822               	movf	OLED_write4bits@value,w
 15003  1028  00A0               	movwf	??_OLED_write4bits
 15004  1029  3001               	movlw	1
 15005  102A                     u2975:	
 15006  102A  36A0               	lsrf	??_OLED_write4bits,f
 15007  102B  0B89               	decfsz	9,f
 15008  102C  282A               	goto	u2975
 15009  102D  3001               	movlw	1
 15010  102E  0520               	andwf	??_OLED_write4bits,w
 15011  102F  00A1               	movwf	??_OLED_write4bits+1
 15012  1030  0819               	movf	25,w	;volatile
 15013  1031  0621               	xorwf	??_OLED_write4bits+1,w
 15014  1032  39FE               	andlw	-2
 15015  1033  0621               	xorwf	??_OLED_write4bits+1,w
 15016  1034  0099               	movwf	25	;volatile
 15017                           
 15018                           ;oled.c: 25: LATCbits.LATC5 = (value >> 2) & 0x01;
 15019  1035  0822               	movf	OLED_write4bits@value,w
 15020  1036  00A0               	movwf	??_OLED_write4bits
 15021  1037  3002               	movlw	2
 15022  1038                     u2985:	
 15023  1038  36A0               	lsrf	??_OLED_write4bits,f
 15024  1039  0B89               	decfsz	9,f
 15025  103A  2838               	goto	u2985
 15026  103B  0820               	movf	??_OLED_write4bits,w
 15027  103C  3901               	andlw	1
 15028  103D  00A1               	movwf	??_OLED_write4bits+1
 15029  103E  0EA1               	swapf	??_OLED_write4bits+1,f
 15030  103F  0DA1               	rlf	??_OLED_write4bits+1,f
 15031  1040  081A               	movf	26,w	;volatile
 15032  1041  0621               	xorwf	??_OLED_write4bits+1,w
 15033  1042  39DF               	andlw	-33
 15034  1043  0621               	xorwf	??_OLED_write4bits+1,w
 15035  1044  009A               	movwf	26	;volatile
 15036                           
 15037                           ;oled.c: 26: LATCbits.LATC4 = (value >> 3) & 0x01;
 15038  1045  0822               	movf	OLED_write4bits@value,w
 15039  1046  00A0               	movwf	??_OLED_write4bits
 15040  1047  3003               	movlw	3
 15041  1048                     u2995:	
 15042  1048  36A0               	lsrf	??_OLED_write4bits,f
 15043  1049  0B89               	decfsz	9,f
 15044  104A  2848               	goto	u2995
 15045  104B  0820               	movf	??_OLED_write4bits,w
 15046  104C  3901               	andlw	1
 15047  104D  00A1               	movwf	??_OLED_write4bits+1
 15048  104E  0EA1               	swapf	??_OLED_write4bits+1,f
 15049  104F  081A               	movf	26,w	;volatile
 15050  1050  0621               	xorwf	??_OLED_write4bits+1,w
 15051  1051  39EF               	andlw	-17
 15052  1052  0621               	xorwf	??_OLED_write4bits+1,w
 15053  1053  009A               	movwf	26	;volatile
 15054                           
 15055                           ;oled.c: 28: _delay((unsigned long)((50)*(1000000/4000000.0)));
 15056  1054  3004               	movlw	4
 15057  1055                     u6107:	
 15058  1055  0B89               	decfsz	9,f
 15059  1056  2855               	goto	u6107
 15060                           
 15061                           ;oled.c: 29: OLED_pulseEnable();
 15062  1057  319B  23C6         	fcall	_OLED_pulseEnable
 15063  1059  0008               	return
 15064  105A                     __end_of_OLED_write4bits:	
 15065                           
 15066                           	psect	text60
 15067  1BC6                     __ptext60:	
 15068 ;; *************** function _OLED_pulseEnable *****************
 15069 ;; Defined at:
 15070 ;;		line 14 in file "oled.c"
 15071 ;; Parameters:    Size  Location     Type
 15072 ;;		None
 15073 ;; Auto vars:     Size  Location     Type
 15074 ;;		None
 15075 ;; Return value:  Size  Location     Type
 15076 ;;                  1    wreg      void 
 15077 ;; Registers used:
 15078 ;;		wreg
 15079 ;; Tracked objects:
 15080 ;;		On entry : 0/0
 15081 ;;		On exit  : 0/0
 15082 ;;		Unchanged: 0/0
 15083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15088 ;;Total ram usage:        0 bytes
 15089 ;; Hardware stack levels used:    1
 15090 ;; Hardware stack levels required when called:    5
 15091 ;; This function calls:
 15092 ;;		Nothing
 15093 ;; This function is called by:
 15094 ;;		_OLED_write4bits
 15095 ;;		_OLED_waitForReady
 15096 ;; This function uses a non-reentrant model
 15097 ;;
 15098                           
 15099                           
 15100                           ;psect for function _OLED_pulseEnable
 15101  1BC6                     _OLED_pulseEnable:	
 15102                           
 15103                           ;oled.c: 16: LATBbits.LATB2 = 1;
 15104                           
 15105                           ;incstack = 0
 15106                           ; Regs used in _OLED_pulseEnable: [wreg]
 15107  1BC6  0140               	movlb	0	; select bank0
 15108  1BC7  1519               	bsf	25,2	;volatile
 15109                           
 15110                           ;oled.c: 17: _delay((unsigned long)((50)*(1000000/4000000.0)));
 15111  1BC8  3004               	movlw	4
 15112  1BC9                     u6117:	
 15113  1BC9  0B89               	decfsz	9,f
 15114  1BCA  2BC9               	goto	u6117
 15115                           
 15116                           ;oled.c: 18: LATBbits.LATB2 = 0;
 15117  1BCB  0140               	movlb	0	; select bank0
 15118  1BCC  1119               	bcf	25,2	;volatile
 15119  1BCD  0008               	return
 15120  1BCE                     __end_of_OLED_pulseEnable:	
 15121                           
 15122                           	psect	text61
 15123  1DE0                     __ptext61:	
 15124 ;; *************** function _EUSART1_Read *****************
 15125 ;; Defined at:
 15126 ;;		line 128 in file "mcc_generated_files/eusart1.c"
 15127 ;; Parameters:    Size  Location     Type
 15128 ;;		None
 15129 ;; Auto vars:     Size  Location     Type
 15130 ;;  readValue       1    1[BANK0 ] unsigned char 
 15131 ;; Return value:  Size  Location     Type
 15132 ;;                  1    wreg      unsigned char 
 15133 ;; Registers used:
 15134 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15135 ;; Tracked objects:
 15136 ;;		On entry : 0/0
 15137 ;;		On exit  : 0/0
 15138 ;;		Unchanged: 0/0
 15139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15141 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15142 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15143 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15144 ;;Total ram usage:        2 bytes
 15145 ;; Hardware stack levels used:    1
 15146 ;; Hardware stack levels required when called:    5
 15147 ;; This function calls:
 15148 ;;		Nothing
 15149 ;; This function is called by:
 15150 ;;		_main
 15151 ;; This function uses a non-reentrant model
 15152 ;;
 15153                           
 15154                           
 15155                           ;psect for function _EUSART1_Read
 15156  1DE0                     _EUSART1_Read:	
 15157  1DE0                     l4662:	
 15158                           ;eusart1.c: 132: while(0 == eusart1RxCount)
 15159                           
 15160                           ;incstack = 0
 15161                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 15162                           
 15163  1DE0  0142               	movlb	2	; select bank2
 15164  1DE1  085F               	movf	_eusart1RxCount^(0+256),w	;volatile
 15165  1DE2  1903               	btfsc	3,2
 15166  1DE3  2DE0               	goto	l4662
 15167                           
 15168                           ;eusart1.c: 134: };eusart1.c: 136: readValue = eusart1RxBuffer[eusart1RxTail++];
 15169  1DE4  0860               	movf	_eusart1RxTail^(0+256),w
 15170  1DE5  3EA8               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 15171  1DE6  0086               	movwf	6
 15172  1DE7  3001               	movlw	1	; select bank3/4
 15173  1DE8  0087               	movwf	7
 15174  1DE9  0801               	movf	1,w
 15175  1DEA  0140               	movlb	0	; select bank0
 15176  1DEB  00A0               	movwf	??_EUSART1_Read
 15177  1DEC  0820               	movf	??_EUSART1_Read,w
 15178  1DED  00A1               	movwf	EUSART1_Read@readValue
 15179  1DEE  3001               	movlw	1
 15180  1DEF  00A0               	movwf	??_EUSART1_Read
 15181  1DF0  0820               	movf	??_EUSART1_Read,w
 15182  1DF1  0142               	movlb	2	; select bank2
 15183  1DF2  07E0               	addwf	_eusart1RxTail^(0+256),f	;volatile
 15184                           
 15185                           ;eusart1.c: 137: if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 15186  1DF3  3008               	movlw	8
 15187  1DF4  0260               	subwf	_eusart1RxTail^(0+256),w	;volatile
 15188  1DF5  1803               	btfsc	3,0
 15189                           
 15190                           ;eusart1.c: 138: {;eusart1.c: 139: eusart1RxTail = 0;
 15191  1DF6  01E0               	clrf	_eusart1RxTail^(0+256)	;volatile
 15192                           
 15193                           ;eusart1.c: 140: };eusart1.c: 141: PIE3bits.RC1IE = 0;
 15194  1DF7  014E               	movlb	14	; select bank14
 15195  1DF8  1299               	bcf	25,5	;volatile
 15196                           
 15197                           ;eusart1.c: 142: eusart1RxCount--;
 15198  1DF9  3001               	movlw	1
 15199  1DFA  0142               	movlb	2	; select bank2
 15200  1DFB  02DF               	subwf	_eusart1RxCount^(0+256),f	;volatile
 15201                           
 15202                           ;eusart1.c: 143: PIE3bits.RC1IE = 1;
 15203  1DFC  014E               	movlb	14	; select bank14
 15204  1DFD  1699               	bsf	25,5	;volatile
 15205                           
 15206                           ;eusart1.c: 145: return readValue;
 15207  1DFE  0140               	movlb	0	; select bank0
 15208  1DFF  0821               	movf	EUSART1_Read@readValue,w
 15209  1E00  0008               	return
 15210  1E01                     __end_of_EUSART1_Read:	
 15211                           
 15212                           	psect	intentry
 15213  0004                     __pintentry:	
 15214 ;; *************** function _INTERRUPT_InterruptManager *****************
 15215 ;; Defined at:
 15216 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15217 ;; Parameters:    Size  Location     Type
 15218 ;;		None
 15219 ;; Auto vars:     Size  Location     Type
 15220 ;;		None
 15221 ;; Return value:  Size  Location     Type
 15222 ;;                  1    wreg      void 
 15223 ;; Registers used:
 15224 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15225 ;; Tracked objects:
 15226 ;;		On entry : 0/0
 15227 ;;		On exit  : 0/0
 15228 ;;		Unchanged: 0/0
 15229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15234 ;;Total ram usage:        0 bytes
 15235 ;; Hardware stack levels used:    1
 15236 ;; Hardware stack levels required when called:    4
 15237 ;; This function calls:
 15238 ;;		Absolute function
 15239 ;;		_EUSART1_Receive_ISR
 15240 ;;		_EUSART1_Transmit_ISR
 15241 ;;		_PIN_MANAGER_IOC
 15242 ;;		_TMR0_ISR
 15243 ;;		_TMR1_ISR
 15244 ;; This function is called by:
 15245 ;;		Interrupt level 1
 15246 ;; This function uses a non-reentrant model
 15247 ;;
 15248                           
 15249  0004                     _INTERRUPT_InterruptManager:	
 15250                           
 15251                           ;incstack = 0
 15252  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 15253                           
 15254                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15255  0005  3180               	pagesel	$
 15256                           
 15257                           ;interrupt_manager.c: 55: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 15258  0006  014E               	movlb	14	; select bank14
 15259  0007  1A96               	btfsc	22,5	;volatile
 15260  0008  1E8C               	btfss	12,5	;volatile
 15261  0009  280E               	goto	i1l345
 15262                           
 15263                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: TMR0_ISR();
 15264  000A  319B  23B5  3180   	fcall	_TMR0_ISR
 15265                           
 15266                           ;interrupt_manager.c: 58: }
 15267  000D  2831               	goto	i1l355
 15268  000E                     i1l345:	
 15269                           
 15270                           ;interrupt_manager.c: 59: else if(PIE0bits.IOCIE == 1 && PIR0bits.IOCIF == 1)
 15271  000E  1A16               	btfsc	22,4	;volatile
 15272  000F  1E0C               	btfss	12,4	;volatile
 15273  0010  2815               	goto	i1l347
 15274                           
 15275                           ;interrupt_manager.c: 60: {;interrupt_manager.c: 61: PIN_MANAGER_IOC();
 15276  0011  319D  251A  3180   	fcall	_PIN_MANAGER_IOC
 15277                           
 15278                           ;interrupt_manager.c: 62: }
 15279  0014  2831               	goto	i1l355
 15280  0015                     i1l347:	
 15281                           
 15282                           ;interrupt_manager.c: 63: else if(INTCONbits.PEIE == 1)
 15283  0015  1F0B               	btfss	11,6	;volatile
 15284  0016  2831               	goto	i1l355
 15285                           
 15286                           ;interrupt_manager.c: 64: {;interrupt_manager.c: 65: if(PIE4bits.TMR1IE == 1 && PIR4bits
      +                          .TMR1IF == 1)
 15287  0017  181A               	btfsc	26,0	;volatile
 15288  0018  1C10               	btfss	16,0	;volatile
 15289  0019  281E               	goto	i1l350
 15290                           
 15291                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: TMR1_ISR();
 15292  001A  319C  24A0  3180   	fcall	_TMR1_ISR
 15293                           
 15294                           ;interrupt_manager.c: 68: }
 15295  001D  2831               	goto	i1l355
 15296  001E                     i1l350:	
 15297                           
 15298                           ;interrupt_manager.c: 69: else if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
 15299  001E  1A19               	btfsc	25,4	;volatile
 15300  001F  1E0F               	btfss	15,4	;volatile
 15301  0020  2828               	goto	i1l352
 15302                           
 15303                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: EUSART1_TxDefaultInterruptHandler()
      +                          ;
 15304  0021  0143               	movlb	3	; select bank3
 15305  0022  0845               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+384),w
 15306  0023  008A               	movwf	10
 15307  0024  0844               	movf	_EUSART1_TxDefaultInterruptHandler^(0+384),w
 15308  0025  000A               	callw
 15309  0026  3180               	pagesel	$
 15310                           
 15311                           ;interrupt_manager.c: 72: }
 15312  0027  2831               	goto	i1l355
 15313  0028                     i1l352:	
 15314                           
 15315                           ;interrupt_manager.c: 73: else if(PIE3bits.RC1IE == 1 && PIR3bits.RC1IF == 1)
 15316  0028  1A99               	btfsc	25,5	;volatile
 15317  0029  1E8F               	btfss	15,5	;volatile
 15318  002A  2831               	goto	i1l355
 15319                           
 15320                           ;interrupt_manager.c: 74: {;interrupt_manager.c: 75: EUSART1_RxDefaultInterruptHandler()
      +                          ;
 15321  002B  0143               	movlb	3	; select bank3
 15322  002C  0843               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+384),w
 15323  002D  008A               	movwf	10
 15324  002E  0842               	movf	_EUSART1_RxDefaultInterruptHandler^(0+384),w
 15325  002F  000A               	callw
 15326  0030  3180               	pagesel	$
 15327  0031                     i1l355:	
 15328  0031  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 15329  0032  0009               	retfie
 15330  0033                     __end_of_INTERRUPT_InterruptManager:	
 15331                           
 15332                           	psect	text63
 15333  1CA0                     __ptext63:	
 15334 ;; *************** function _TMR1_ISR *****************
 15335 ;; Defined at:
 15336 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 15337 ;; Parameters:    Size  Location     Type
 15338 ;;		None
 15339 ;; Auto vars:     Size  Location     Type
 15340 ;;		None
 15341 ;; Return value:  Size  Location     Type
 15342 ;;                  1    wreg      void 
 15343 ;; Registers used:
 15344 ;;		wreg, status,2, status,0, pclath, cstack
 15345 ;; Tracked objects:
 15346 ;;		On entry : 0/0
 15347 ;;		On exit  : 0/0
 15348 ;;		Unchanged: 0/0
 15349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15354 ;;Total ram usage:        0 bytes
 15355 ;; Hardware stack levels used:    1
 15356 ;; Hardware stack levels required when called:    3
 15357 ;; This function calls:
 15358 ;;		_TMR1_CallBack
 15359 ;;		_TMR1_WriteTimer
 15360 ;; This function is called by:
 15361 ;;		_INTERRUPT_InterruptManager
 15362 ;; This function uses a non-reentrant model
 15363 ;;
 15364                           
 15365                           
 15366                           ;psect for function _TMR1_ISR
 15367  1CA0                     _TMR1_ISR:	
 15368                           
 15369                           ;tmr1.c: 168: PIR4bits.TMR1IF = 0;
 15370                           
 15371                           ;incstack = 0
 15372                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 15373  1CA0  014E               	movlb	14	; select bank14
 15374  1CA1  1010               	bcf	16,0	;volatile
 15375                           
 15376                           ;tmr1.c: 169: TMR1_WriteTimer(timer1ReloadVal);
 15377  1CA2  0142               	movlb	2	; select bank2
 15378  1CA3  0864               	movf	(_timer1ReloadVal+1)^(0+256),w	;volatile
 15379  1CA4  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 15380  1CA5  0863               	movf	_timer1ReloadVal^(0+256),w	;volatile
 15381  1CA6  00F0               	movwf	TMR1_WriteTimer@timerVal
 15382  1CA7  319C  24BC  319C   	fcall	_TMR1_WriteTimer
 15383                           
 15384                           ;tmr1.c: 173: TMR1_CallBack();
 15385  1CAA  319C  2456         	fcall	_TMR1_CallBack
 15386  1CAC  0008               	return
 15387  1CAD                     __end_of_TMR1_ISR:	
 15388                           
 15389                           	psect	text64
 15390  1CBC                     __ptext64:	
 15391 ;; *************** function _TMR1_WriteTimer *****************
 15392 ;; Defined at:
 15393 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 15394 ;; Parameters:    Size  Location     Type
 15395 ;;  timerVal        2    0[COMMON] unsigned int 
 15396 ;; Auto vars:     Size  Location     Type
 15397 ;;		None
 15398 ;; Return value:  Size  Location     Type
 15399 ;;                  1    wreg      void 
 15400 ;; Registers used:
 15401 ;;		wreg, status,2
 15402 ;; Tracked objects:
 15403 ;;		On entry : 0/0
 15404 ;;		On exit  : 0/0
 15405 ;;		Unchanged: 0/0
 15406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15407 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15410 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15411 ;;Total ram usage:        2 bytes
 15412 ;; Hardware stack levels used:    1
 15413 ;; This function calls:
 15414 ;;		Nothing
 15415 ;; This function is called by:
 15416 ;;		_TMR1_ISR
 15417 ;;		_TMR1_Reload
 15418 ;; This function uses a non-reentrant model
 15419 ;;
 15420                           
 15421                           
 15422                           ;psect for function _TMR1_WriteTimer
 15423  1CBC                     _TMR1_WriteTimer:	
 15424                           
 15425                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 15426                           
 15427                           ;incstack = 0
 15428                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 15429  1CBC  0144               	movlb	4	; select bank4
 15430  1CBD  1D0E               	btfss	14,2	;volatile
 15431  1CBE  2CC6               	goto	i1l4342
 15432                           
 15433                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 15434  1CBF  100E               	bcf	14,0	;volatile
 15435                           
 15436                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 15437  1CC0  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 15438  1CC1  008D               	movwf	13	;volatile
 15439                           
 15440                           ;tmr1.c: 136: TMR1L = timerVal;
 15441  1CC2  0870               	movf	TMR1_WriteTimer@timerVal,w
 15442  1CC3  008C               	movwf	12	;volatile
 15443                           
 15444                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 15445  1CC4  140E               	bsf	14,0	;volatile
 15446                           
 15447                           ;tmr1.c: 140: }
 15448  1CC5  0008               	return
 15449  1CC6                     i1l4342:	
 15450                           
 15451                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 15452  1CC6  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 15453  1CC7  008D               	movwf	13	;volatile
 15454                           
 15455                           ;tmr1.c: 145: TMR1L = timerVal;
 15456  1CC8  0870               	movf	TMR1_WriteTimer@timerVal,w
 15457  1CC9  008C               	movwf	12	;volatile
 15458  1CCA  0008               	return
 15459  1CCB                     __end_of_TMR1_WriteTimer:	
 15460                           
 15461                           	psect	text65
 15462  1C56                     __ptext65:	
 15463 ;; *************** function _TMR1_CallBack *****************
 15464 ;; Defined at:
 15465 ;;		line 176 in file "mcc_generated_files/tmr1.c"
 15466 ;; Parameters:    Size  Location     Type
 15467 ;;		None
 15468 ;; Auto vars:     Size  Location     Type
 15469 ;;		None
 15470 ;; Return value:  Size  Location     Type
 15471 ;;                  1    wreg      void 
 15472 ;; Registers used:
 15473 ;;		wreg, status,2, status,0, pclath, cstack
 15474 ;; Tracked objects:
 15475 ;;		On entry : 0/0
 15476 ;;		On exit  : 0/0
 15477 ;;		Unchanged: 0/0
 15478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15483 ;;Total ram usage:        0 bytes
 15484 ;; Hardware stack levels used:    1
 15485 ;; Hardware stack levels required when called:    2
 15486 ;; This function calls:
 15487 ;;		Absolute function
 15488 ;;		_TMR1_DefaultInterruptHandler
 15489 ;;		_timer1
 15490 ;; This function is called by:
 15491 ;;		_TMR1_ISR
 15492 ;; This function uses a non-reentrant model
 15493 ;;
 15494                           
 15495                           
 15496                           ;psect for function _TMR1_CallBack
 15497  1C56                     _TMR1_CallBack:	
 15498                           
 15499                           ;tmr1.c: 179: if(TMR1_InterruptHandler)
 15500                           
 15501                           ;incstack = 0
 15502                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
 15503  1C56  0143               	movlb	3	; select bank3
 15504  1C57  0840               	movf	_TMR1_InterruptHandler^(0+384),w
 15505  1C58  0441               	iorwf	(_TMR1_InterruptHandler+1)^(0+384),w
 15506  1C59  1903               	btfsc	3,2
 15507  1C5A  0008               	return
 15508                           
 15509                           ;tmr1.c: 180: {;tmr1.c: 181: TMR1_InterruptHandler();
 15510  1C5B  0841               	movf	(_TMR1_InterruptHandler+1)^(0+384),w
 15511  1C5C  008A               	movwf	10
 15512  1C5D  0840               	movf	_TMR1_InterruptHandler^(0+384),w
 15513  1C5E  000A               	callw
 15514  1C5F  319C               	pagesel	$
 15515  1C60  0008               	return
 15516  1C61                     __end_of_TMR1_CallBack:	
 15517                           
 15518                           	psect	text66
 15519  0003                     __ptext66:	
 15520 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 15521 ;; Defined at:
 15522 ;;		line 189 in file "mcc_generated_files/tmr1.c"
 15523 ;; Parameters:    Size  Location     Type
 15524 ;;		None
 15525 ;; Auto vars:     Size  Location     Type
 15526 ;;		None
 15527 ;; Return value:  Size  Location     Type
 15528 ;;                  1    wreg      void 
 15529 ;; Registers used:
 15530 ;;		None
 15531 ;; Tracked objects:
 15532 ;;		On entry : 0/0
 15533 ;;		On exit  : 0/0
 15534 ;;		Unchanged: 0/0
 15535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15540 ;;Total ram usage:        0 bytes
 15541 ;; Hardware stack levels used:    1
 15542 ;; This function calls:
 15543 ;;		Nothing
 15544 ;; This function is called by:
 15545 ;;		_TMR1_Initialize
 15546 ;;		_TMR1_CallBack
 15547 ;; This function uses a non-reentrant model
 15548 ;;
 15549                           
 15550                           
 15551                           ;psect for function _TMR1_DefaultInterruptHandler
 15552  0003                     _TMR1_DefaultInterruptHandler:	
 15553                           
 15554                           ;incstack = 0
 15555                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 15556  0003  0008               	return
 15557  0004                     __end_of_TMR1_DefaultInterruptHandler:	
 15558                           
 15559                           	psect	text67
 15560  1FC7                     __ptext67:	
 15561 ;; *************** function _timer1 *****************
 15562 ;; Defined at:
 15563 ;;		line 213 in file "main.c"
 15564 ;; Parameters:    Size  Location     Type
 15565 ;;		None
 15566 ;; Auto vars:     Size  Location     Type
 15567 ;;		None
 15568 ;; Return value:  Size  Location     Type
 15569 ;;                  1    wreg      void 
 15570 ;; Registers used:
 15571 ;;		wreg, status,2, status,0, pclath, cstack
 15572 ;; Tracked objects:
 15573 ;;		On entry : 0/0
 15574 ;;		On exit  : 0/0
 15575 ;;		Unchanged: 0/0
 15576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15579 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15580 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15581 ;;Total ram usage:        1 bytes
 15582 ;; Hardware stack levels used:    1
 15583 ;; Hardware stack levels required when called:    1
 15584 ;; This function calls:
 15585 ;;		_TMR1_StopTimer
 15586 ;; This function is called by:
 15587 ;;		_main
 15588 ;;		_TMR1_CallBack
 15589 ;; This function uses a non-reentrant model
 15590 ;;
 15591                           
 15592                           
 15593                           ;psect for function _timer1
 15594  1FC7                     _timer1:	
 15595                           
 15596                           ;main.c: 214: if (duty++ > 99) {
 15597                           
 15598                           ;incstack = 0
 15599                           ; Regs used in _timer1: [wreg+status,2+status,0+pclath+cstack]
 15600  1FC7  0142               	movlb	2	; select bank2
 15601  1FC8  085E               	movf	_duty^(0+256),w	;volatile
 15602  1FC9  0ADE               	incf	_duty^(0+256),f	;volatile
 15603  1FCA  00F0               	movwf	??_timer1
 15604  1FCB  3064               	movlw	100
 15605  1FCC  0270               	subwf	??_timer1,w
 15606  1FCD  1C03               	skipc
 15607  1FCE  2FD8               	goto	i1l3910
 15608                           
 15609                           ;main.c: 215: duty = 0;
 15610  1FCF  01DE               	clrf	_duty^(0+256)	;volatile
 15611                           
 15612                           ;main.c: 217: TMR1_StopTimer();
 15613  1FD0  319B  23A6         	fcall	_TMR1_StopTimer
 15614                           
 15615                           ;main.c: 218: LATAbits.LATA0 = 0;
 15616  1FD2  0140               	movlb	0	; select bank0
 15617  1FD3  1018               	bcf	24,0	;volatile
 15618                           
 15619                           ;main.c: 219: LATAbits.LATA1 = 0;
 15620  1FD4  1098               	bcf	24,1	;volatile
 15621                           
 15622                           ;main.c: 220: LATAbits.LATA2 = 0;
 15623  1FD5  1118               	bcf	24,2	;volatile
 15624                           
 15625                           ;main.c: 221: LATAbits.LATA3 = 0;
 15626  1FD6  1198               	bcf	24,3	;volatile
 15627                           
 15628                           ;main.c: 222: } else {
 15629  1FD7  0008               	return
 15630  1FD8                     i1l3910:	
 15631                           
 15632                           ;main.c: 224: if (duty < dc[0]) LATAbits.LATA0 = 1; else LATAbits.LATA0 = 0;
 15633  1FD8  084F               	movf	_dc^(0+256),w
 15634  1FD9  025E               	subwf	_duty^(0+256),w	;volatile
 15635  1FDA  1803               	skipnc
 15636  1FDB  2FDF               	goto	i1l613
 15637  1FDC  0140               	movlb	0	; select bank0
 15638  1FDD  1418               	bsf	24,0	;volatile
 15639  1FDE  2FE1               	goto	i1l3914
 15640  1FDF                     i1l613:	
 15641  1FDF  0140               	movlb	0	; select bank0
 15642  1FE0  1018               	bcf	24,0	;volatile
 15643  1FE1                     i1l3914:	
 15644                           
 15645                           ;main.c: 225: if (duty < dc[1]) LATAbits.LATA1 = 1; else LATAbits.LATA1 = 0;
 15646  1FE1  0142               	movlb	2	; select bank2
 15647  1FE2  0850               	movf	(_dc^(0+256)+1),w
 15648  1FE3  025E               	subwf	_duty^(0+256),w	;volatile
 15649  1FE4  1803               	skipnc
 15650  1FE5  2FE9               	goto	i1l615
 15651  1FE6  0140               	movlb	0	; select bank0
 15652  1FE7  1498               	bsf	24,1	;volatile
 15653  1FE8  2FEB               	goto	i1l3918
 15654  1FE9                     i1l615:	
 15655  1FE9  0140               	movlb	0	; select bank0
 15656  1FEA  1098               	bcf	24,1	;volatile
 15657  1FEB                     i1l3918:	
 15658                           
 15659                           ;main.c: 226: if (duty < dc[2]) LATAbits.LATA2 = 1; else LATAbits.LATA2 = 0;
 15660  1FEB  0142               	movlb	2	; select bank2
 15661  1FEC  0851               	movf	(_dc^(0+256)+2),w
 15662  1FED  025E               	subwf	_duty^(0+256),w	;volatile
 15663  1FEE  1803               	skipnc
 15664  1FEF  2FF3               	goto	i1l617
 15665  1FF0  0140               	movlb	0	; select bank0
 15666  1FF1  1518               	bsf	24,2	;volatile
 15667  1FF2  2FF5               	goto	i1l3922
 15668  1FF3                     i1l617:	
 15669  1FF3  0140               	movlb	0	; select bank0
 15670  1FF4  1118               	bcf	24,2	;volatile
 15671  1FF5                     i1l3922:	
 15672                           
 15673                           ;main.c: 227: if (duty < dc[3]) LATAbits.LATA3 = 1; else LATAbits.LATA3 = 0;
 15674  1FF5  0142               	movlb	2	; select bank2
 15675  1FF6  0852               	movf	(_dc^(0+256)+3),w
 15676  1FF7  025E               	subwf	_duty^(0+256),w	;volatile
 15677  1FF8  1803               	skipnc
 15678  1FF9  2FFD               	goto	i1l619
 15679  1FFA  0140               	movlb	0	; select bank0
 15680  1FFB  1598               	bsf	24,3	;volatile
 15681  1FFC  0008               	return
 15682  1FFD                     i1l619:	
 15683  1FFD  0140               	movlb	0	; select bank0
 15684  1FFE  1198               	bcf	24,3	;volatile
 15685  1FFF  0008               	return
 15686  2000                     __end_of_timer1:	
 15687                           
 15688                           	psect	text68
 15689  1BB5                     __ptext68:	
 15690 ;; *************** function _TMR0_ISR *****************
 15691 ;; Defined at:
 15692 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 15693 ;; Parameters:    Size  Location     Type
 15694 ;;		None
 15695 ;; Auto vars:     Size  Location     Type
 15696 ;;		None
 15697 ;; Return value:  Size  Location     Type
 15698 ;;                  1    wreg      void 
 15699 ;; Registers used:
 15700 ;;		wreg, status,2, status,0, pclath, cstack
 15701 ;; Tracked objects:
 15702 ;;		On entry : 0/0
 15703 ;;		On exit  : 0/0
 15704 ;;		Unchanged: 0/0
 15705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15710 ;;Total ram usage:        0 bytes
 15711 ;; Hardware stack levels used:    1
 15712 ;; Hardware stack levels required when called:    2
 15713 ;; This function calls:
 15714 ;;		_TMR0_CallBack
 15715 ;; This function is called by:
 15716 ;;		_INTERRUPT_InterruptManager
 15717 ;; This function uses a non-reentrant model
 15718 ;;
 15719                           
 15720                           
 15721                           ;psect for function _TMR0_ISR
 15722  1BB5                     _TMR0_ISR:	
 15723                           
 15724                           ;tmr0.c: 124: PIR0bits.TMR0IF = 0;
 15725                           
 15726                           ;incstack = 0
 15727                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 15728  1BB5  014E               	movlb	14	; select bank14
 15729  1BB6  128C               	bcf	12,5	;volatile
 15730                           
 15731                           ;tmr0.c: 127: TMR0_CallBack();
 15732  1BB7  319C  244B         	fcall	_TMR0_CallBack
 15733  1BB9  0008               	return
 15734  1BBA                     __end_of_TMR0_ISR:	
 15735                           
 15736                           	psect	text69
 15737  1C4B                     __ptext69:	
 15738 ;; *************** function _TMR0_CallBack *****************
 15739 ;; Defined at:
 15740 ;;		line 132 in file "mcc_generated_files/tmr0.c"
 15741 ;; Parameters:    Size  Location     Type
 15742 ;;		None
 15743 ;; Auto vars:     Size  Location     Type
 15744 ;;		None
 15745 ;; Return value:  Size  Location     Type
 15746 ;;                  1    wreg      void 
 15747 ;; Registers used:
 15748 ;;		wreg, status,2, status,0, pclath, cstack
 15749 ;; Tracked objects:
 15750 ;;		On entry : 0/0
 15751 ;;		On exit  : 0/0
 15752 ;;		Unchanged: 0/0
 15753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15758 ;;Total ram usage:        0 bytes
 15759 ;; Hardware stack levels used:    1
 15760 ;; Hardware stack levels required when called:    1
 15761 ;; This function calls:
 15762 ;;		Absolute function
 15763 ;;		_TMR0_DefaultInterruptHandler
 15764 ;;		_timer0
 15765 ;; This function is called by:
 15766 ;;		_TMR0_ISR
 15767 ;; This function uses a non-reentrant model
 15768 ;;
 15769                           
 15770                           
 15771                           ;psect for function _TMR0_CallBack
 15772  1C4B                     _TMR0_CallBack:	
 15773                           
 15774                           ;tmr0.c: 136: if(TMR0_InterruptHandler)
 15775                           
 15776                           ;incstack = 0
 15777                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
 15778  1C4B  0142               	movlb	2	; select bank2
 15779  1C4C  0865               	movf	_TMR0_InterruptHandler^(0+256),w
 15780  1C4D  0466               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 15781  1C4E  1903               	btfsc	3,2
 15782  1C4F  0008               	return
 15783                           
 15784                           ;tmr0.c: 137: {;tmr0.c: 138: TMR0_InterruptHandler();
 15785  1C50  0866               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 15786  1C51  008A               	movwf	10
 15787  1C52  0865               	movf	_TMR0_InterruptHandler^(0+256),w
 15788  1C53  000A               	callw
 15789  1C54  319C               	pagesel	$
 15790  1C55  0008               	return
 15791  1C56                     __end_of_TMR0_CallBack:	
 15792                           
 15793                           	psect	text70
 15794  0002                     __ptext70:	
 15795 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 15796 ;; Defined at:
 15797 ;;		line 146 in file "mcc_generated_files/tmr0.c"
 15798 ;; Parameters:    Size  Location     Type
 15799 ;;		None
 15800 ;; Auto vars:     Size  Location     Type
 15801 ;;		None
 15802 ;; Return value:  Size  Location     Type
 15803 ;;                  1    wreg      void 
 15804 ;; Registers used:
 15805 ;;		None
 15806 ;; Tracked objects:
 15807 ;;		On entry : 0/0
 15808 ;;		On exit  : 0/0
 15809 ;;		Unchanged: 0/0
 15810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15815 ;;Total ram usage:        0 bytes
 15816 ;; Hardware stack levels used:    1
 15817 ;; This function calls:
 15818 ;;		Nothing
 15819 ;; This function is called by:
 15820 ;;		_TMR0_Initialize
 15821 ;;		_TMR0_CallBack
 15822 ;; This function uses a non-reentrant model
 15823 ;;
 15824                           
 15825                           
 15826                           ;psect for function _TMR0_DefaultInterruptHandler
 15827  0002                     _TMR0_DefaultInterruptHandler:	
 15828                           
 15829                           ;incstack = 0
 15830                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 15831  0002  0008               	return
 15832  0003                     __end_of_TMR0_DefaultInterruptHandler:	
 15833                           
 15834                           	psect	text71
 15835  1BE6                     __ptext71:	
 15836 ;; *************** function _timer0 *****************
 15837 ;; Defined at:
 15838 ;;		line 97 in file "main.c"
 15839 ;; Parameters:    Size  Location     Type
 15840 ;;		None
 15841 ;; Auto vars:     Size  Location     Type
 15842 ;;		None
 15843 ;; Return value:  Size  Location     Type
 15844 ;;                  1    wreg      void 
 15845 ;; Registers used:
 15846 ;;		wreg
 15847 ;; Tracked objects:
 15848 ;;		On entry : 0/0
 15849 ;;		On exit  : 0/0
 15850 ;;		Unchanged: 0/0
 15851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15856 ;;Total ram usage:        0 bytes
 15857 ;; Hardware stack levels used:    1
 15858 ;; This function calls:
 15859 ;;		Nothing
 15860 ;; This function is called by:
 15861 ;;		_main
 15862 ;;		_TMR0_CallBack
 15863 ;; This function uses a non-reentrant model
 15864 ;;
 15865                           
 15866                           
 15867                           ;psect for function _timer0
 15868  1BE6                     _timer0:	
 15869                           
 15870                           ;main.c: 98: millis++;
 15871                           
 15872                           ;incstack = 0
 15873                           ; Regs used in _timer0: [wreg]
 15874  1BE6  3001               	movlw	1
 15875  1BE7  07F8               	addwf	_millis,f	;volatile
 15876  1BE8  3000               	movlw	0
 15877  1BE9  3DF9               	addwfc	_millis+1,f	;volatile
 15878  1BEA  3000               	movlw	0
 15879  1BEB  3DFA               	addwfc	_millis+2,f	;volatile
 15880  1BEC  3000               	movlw	0
 15881  1BED  3DFB               	addwfc	_millis+3,f	;volatile
 15882  1BEE  0008               	return
 15883  1BEF                     __end_of_timer0:	
 15884                           
 15885                           	psect	text72
 15886  1D1A                     __ptext72:	
 15887 ;; *************** function _PIN_MANAGER_IOC *****************
 15888 ;; Defined at:
 15889 ;;		line 145 in file "mcc_generated_files/pin_manager.c"
 15890 ;; Parameters:    Size  Location     Type
 15891 ;;		None
 15892 ;; Auto vars:     Size  Location     Type
 15893 ;;		None
 15894 ;; Return value:  Size  Location     Type
 15895 ;;                  1    wreg      void 
 15896 ;; Registers used:
 15897 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15898 ;; Tracked objects:
 15899 ;;		On entry : 0/0
 15900 ;;		On exit  : 0/0
 15901 ;;		Unchanged: 0/0
 15902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15907 ;;Total ram usage:        0 bytes
 15908 ;; Hardware stack levels used:    1
 15909 ;; Hardware stack levels required when called:    3
 15910 ;; This function calls:
 15911 ;;		_IOCAF4_ISR
 15912 ;;		_IOCAF5_ISR
 15913 ;;		_IOCAF7_ISR
 15914 ;;		_IOCCF2_ISR
 15915 ;; This function is called by:
 15916 ;;		_INTERRUPT_InterruptManager
 15917 ;; This function uses a non-reentrant model
 15918 ;;
 15919                           
 15920                           
 15921                           ;psect for function _PIN_MANAGER_IOC
 15922  1D1A                     _PIN_MANAGER_IOC:	
 15923                           
 15924                           ;pin_manager.c: 148: if(IOCAFbits.IOCAF4 == 1)
 15925                           
 15926                           ;incstack = 0
 15927                           ; Regs used in _PIN_MANAGER_IOC: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15928  1D1A  017E               	movlb	62	; select bank62
 15929  1D1B  1E3F               	btfss	63,4	;volatile
 15930  1D1C  2D20               	goto	i1l4648
 15931                           
 15932                           ;pin_manager.c: 149: {;pin_manager.c: 150: IOCAF4_ISR();
 15933  1D1D  319C  246C  319D   	fcall	_IOCAF4_ISR
 15934  1D20                     i1l4648:	
 15935                           
 15936                           ;pin_manager.c: 151: };pin_manager.c: 153: if(IOCAFbits.IOCAF5 == 1)
 15937  1D20  017E               	movlb	62	; select bank62
 15938  1D21  1EBF               	btfss	63,5	;volatile
 15939  1D22  2D26               	goto	i1l4652
 15940                           
 15941                           ;pin_manager.c: 154: {;pin_manager.c: 155: IOCAF5_ISR();
 15942  1D23  319C  2479  319D   	fcall	_IOCAF5_ISR
 15943  1D26                     i1l4652:	
 15944                           
 15945                           ;pin_manager.c: 156: };pin_manager.c: 158: if(IOCAFbits.IOCAF7 == 1)
 15946  1D26  017E               	movlb	62	; select bank62
 15947  1D27  1FBF               	btfss	63,7	;volatile
 15948  1D28  2D2C               	goto	i1l4656
 15949                           
 15950                           ;pin_manager.c: 159: {;pin_manager.c: 160: IOCAF7_ISR();
 15951  1D29  319C  2486  319D   	fcall	_IOCAF7_ISR
 15952  1D2C                     i1l4656:	
 15953                           
 15954                           ;pin_manager.c: 161: };pin_manager.c: 163: if(IOCCFbits.IOCCF2 == 1)
 15955  1D2C  017E               	movlb	62	; select bank62
 15956  1D2D  1D55               	btfss	85,2	;volatile
 15957  1D2E  0008               	return
 15958                           
 15959                           ;pin_manager.c: 164: {;pin_manager.c: 165: IOCCF2_ISR();
 15960  1D2F  319C  2493         	fcall	_IOCCF2_ISR
 15961  1D31  0008               	return
 15962  1D32                     __end_of_PIN_MANAGER_IOC:	
 15963                           
 15964                           	psect	text73
 15965  1C93                     __ptext73:	
 15966 ;; *************** function _IOCCF2_ISR *****************
 15967 ;; Defined at:
 15968 ;;		line 262 in file "mcc_generated_files/pin_manager.c"
 15969 ;; Parameters:    Size  Location     Type
 15970 ;;		None
 15971 ;; Auto vars:     Size  Location     Type
 15972 ;;		None
 15973 ;; Return value:  Size  Location     Type
 15974 ;;                  1    wreg      void 
 15975 ;; Registers used:
 15976 ;;		wreg, status,2, status,0, pclath, cstack
 15977 ;; Tracked objects:
 15978 ;;		On entry : 0/0
 15979 ;;		On exit  : 0/0
 15980 ;;		Unchanged: 0/0
 15981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15986 ;;Total ram usage:        0 bytes
 15987 ;; Hardware stack levels used:    1
 15988 ;; Hardware stack levels required when called:    2
 15989 ;; This function calls:
 15990 ;;		Absolute function
 15991 ;;		_IOCCF2_DefaultInterruptHandler
 15992 ;;		_overcurrent
 15993 ;; This function is called by:
 15994 ;;		_PIN_MANAGER_IOC
 15995 ;; This function uses a non-reentrant model
 15996 ;;
 15997                           
 15998                           
 15999                           ;psect for function _IOCCF2_ISR
 16000  1C93                     _IOCCF2_ISR:	
 16001                           
 16002                           ;pin_manager.c: 267: if(IOCCF2_InterruptHandler)
 16003                           
 16004                           ;incstack = 0
 16005                           ; Regs used in _IOCCF2_ISR: [wreg+status,2+status,0+pclath+cstack]
 16006  1C93  0142               	movlb	2	; select bank2
 16007  1C94  0867               	movf	_IOCCF2_InterruptHandler^(0+256),w
 16008  1C95  0468               	iorwf	(_IOCCF2_InterruptHandler+1)^(0+256),w
 16009  1C96  1903               	btfsc	3,2
 16010  1C97  2C9D               	goto	i1l4324
 16011                           
 16012                           ;pin_manager.c: 268: {;pin_manager.c: 269: IOCCF2_InterruptHandler();
 16013  1C98  0868               	movf	(_IOCCF2_InterruptHandler+1)^(0+256),w
 16014  1C99  008A               	movwf	10
 16015  1C9A  0867               	movf	_IOCCF2_InterruptHandler^(0+256),w
 16016  1C9B  000A               	callw
 16017  1C9C  319C               	pagesel	$
 16018  1C9D                     i1l4324:	
 16019                           
 16020                           ;pin_manager.c: 270: };pin_manager.c: 271: IOCCFbits.IOCCF2 = 0;
 16021  1C9D  017E               	movlb	62	; select bank62
 16022  1C9E  1155               	bcf	85,2	;volatile
 16023  1C9F  0008               	return
 16024  1CA0                     __end_of_IOCCF2_ISR:	
 16025                           
 16026                           	psect	text74
 16027  1BA5                     __ptext74:	
 16028 ;; *************** function _IOCCF2_DefaultInterruptHandler *****************
 16029 ;; Defined at:
 16030 ;;		line 284 in file "mcc_generated_files/pin_manager.c"
 16031 ;; Parameters:    Size  Location     Type
 16032 ;;		None
 16033 ;; Auto vars:     Size  Location     Type
 16034 ;;		None
 16035 ;; Return value:  Size  Location     Type
 16036 ;;                  1    wreg      void 
 16037 ;; Registers used:
 16038 ;;		None
 16039 ;; Tracked objects:
 16040 ;;		On entry : 0/0
 16041 ;;		On exit  : 0/0
 16042 ;;		Unchanged: 0/0
 16043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16048 ;;Total ram usage:        0 bytes
 16049 ;; Hardware stack levels used:    1
 16050 ;; This function calls:
 16051 ;;		Nothing
 16052 ;; This function is called by:
 16053 ;;		_PIN_MANAGER_Initialize
 16054 ;;		_IOCCF2_ISR
 16055 ;; This function uses a non-reentrant model
 16056 ;;
 16057                           
 16058                           
 16059                           ;psect for function _IOCCF2_DefaultInterruptHandler
 16060  1BA5                     _IOCCF2_DefaultInterruptHandler:	
 16061                           
 16062                           ;incstack = 0
 16063                           ; Regs used in _IOCCF2_DefaultInterruptHandler: []
 16064  1BA5  0008               	return
 16065  1BA6                     __end_of_IOCCF2_DefaultInterruptHandler:	
 16066                           
 16067                           	psect	text75
 16068  1CAD                     __ptext75:	
 16069 ;; *************** function _overcurrent *****************
 16070 ;; Defined at:
 16071 ;;		line 131 in file "main.c"
 16072 ;; Parameters:    Size  Location     Type
 16073 ;;		None
 16074 ;; Auto vars:     Size  Location     Type
 16075 ;;		None
 16076 ;; Return value:  Size  Location     Type
 16077 ;;                  1    wreg      void 
 16078 ;; Registers used:
 16079 ;;		wreg, status,2, status,0, pclath, cstack
 16080 ;; Tracked objects:
 16081 ;;		On entry : 0/0
 16082 ;;		On exit  : 0/0
 16083 ;;		Unchanged: 0/0
 16084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16087 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16088 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16089 ;;Total ram usage:        1 bytes
 16090 ;; Hardware stack levels used:    1
 16091 ;; Hardware stack levels required when called:    1
 16092 ;; This function calls:
 16093 ;;		_TMR1_StopTimer
 16094 ;; This function is called by:
 16095 ;;		_main
 16096 ;;		_IOCCF2_ISR
 16097 ;; This function uses a non-reentrant model
 16098 ;;
 16099                           
 16100                           
 16101                           ;psect for function _overcurrent
 16102  1CAD                     _overcurrent:	
 16103                           
 16104                           ;main.c: 132: LATCbits.LATC3 = 0;
 16105                           
 16106                           ;incstack = 0
 16107                           ; Regs used in _overcurrent: [wreg+status,2+status,0+pclath+cstack]
 16108  1CAD  0140               	movlb	0	; select bank0
 16109  1CAE  119A               	bcf	26,3	;volatile
 16110                           
 16111                           ;main.c: 133: TMR1_StopTimer();
 16112  1CAF  319B  23A6         	fcall	_TMR1_StopTimer
 16113                           
 16114                           ;main.c: 134: LATAbits.LATA0 = 0;
 16115  1CB1  0140               	movlb	0	; select bank0
 16116  1CB2  1018               	bcf	24,0	;volatile
 16117                           
 16118                           ;main.c: 135: LATAbits.LATA1 = 0;
 16119  1CB3  1098               	bcf	24,1	;volatile
 16120                           
 16121                           ;main.c: 136: LATAbits.LATA2 = 0;
 16122  1CB4  1118               	bcf	24,2	;volatile
 16123                           
 16124                           ;main.c: 137: LATAbits.LATA3 = 0;
 16125  1CB5  1198               	bcf	24,3	;volatile
 16126                           
 16127                           ;main.c: 138: fault = 1;
 16128  1CB6  3001               	movlw	1
 16129  1CB7  00F0               	movwf	??_overcurrent
 16130  1CB8  0870               	movf	??_overcurrent,w
 16131  1CB9  0142               	movlb	2	; select bank2
 16132  1CBA  00DC               	movwf	_fault^(0+256)	;volatile
 16133  1CBB  0008               	return
 16134  1CBC                     __end_of_overcurrent:	
 16135                           
 16136                           	psect	text76
 16137  1BA6                     __ptext76:	
 16138 ;; *************** function _TMR1_StopTimer *****************
 16139 ;; Defined at:
 16140 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 16141 ;; Parameters:    Size  Location     Type
 16142 ;;		None
 16143 ;; Auto vars:     Size  Location     Type
 16144 ;;		None
 16145 ;; Return value:  Size  Location     Type
 16146 ;;                  1    wreg      void 
 16147 ;; Registers used:
 16148 ;;		None
 16149 ;; Tracked objects:
 16150 ;;		On entry : 0/0
 16151 ;;		On exit  : 0/0
 16152 ;;		Unchanged: 0/0
 16153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16158 ;;Total ram usage:        0 bytes
 16159 ;; Hardware stack levels used:    1
 16160 ;; This function calls:
 16161 ;;		Nothing
 16162 ;; This function is called by:
 16163 ;;		_overcurrent
 16164 ;;		_timer1
 16165 ;; This function uses a non-reentrant model
 16166 ;;
 16167                           
 16168                           
 16169                           ;psect for function _TMR1_StopTimer
 16170  1BA6                     _TMR1_StopTimer:	
 16171                           
 16172                           ;tmr1.c: 108: T1CONbits.TMR1ON = 0;
 16173                           
 16174                           ;incstack = 0
 16175                           ; Regs used in _TMR1_StopTimer: []
 16176  1BA6  0144               	movlb	4	; select bank4
 16177  1BA7  100E               	bcf	14,0	;volatile
 16178  1BA8  0008               	return
 16179  1BA9                     __end_of_TMR1_StopTimer:	
 16180                           
 16181                           	psect	text77
 16182  1C86                     __ptext77:	
 16183 ;; *************** function _IOCAF7_ISR *****************
 16184 ;; Defined at:
 16185 ;;		line 232 in file "mcc_generated_files/pin_manager.c"
 16186 ;; Parameters:    Size  Location     Type
 16187 ;;		None
 16188 ;; Auto vars:     Size  Location     Type
 16189 ;;		None
 16190 ;; Return value:  Size  Location     Type
 16191 ;;                  1    wreg      void 
 16192 ;; Registers used:
 16193 ;;		wreg, status,2, status,0, pclath, cstack
 16194 ;; Tracked objects:
 16195 ;;		On entry : 0/0
 16196 ;;		On exit  : 0/0
 16197 ;;		Unchanged: 0/0
 16198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16203 ;;Total ram usage:        0 bytes
 16204 ;; Hardware stack levels used:    1
 16205 ;; Hardware stack levels required when called:    1
 16206 ;; This function calls:
 16207 ;;		Absolute function
 16208 ;;		_IOCAF7_DefaultInterruptHandler
 16209 ;;		_pushbutton
 16210 ;; This function is called by:
 16211 ;;		_PIN_MANAGER_IOC
 16212 ;; This function uses a non-reentrant model
 16213 ;;
 16214                           
 16215                           
 16216                           ;psect for function _IOCAF7_ISR
 16217  1C86                     _IOCAF7_ISR:	
 16218                           
 16219                           ;pin_manager.c: 237: if(IOCAF7_InterruptHandler)
 16220                           
 16221                           ;incstack = 0
 16222                           ; Regs used in _IOCAF7_ISR: [wreg+status,2+status,0+pclath+cstack]
 16223  1C86  0142               	movlb	2	; select bank2
 16224  1C87  0869               	movf	_IOCAF7_InterruptHandler^(0+256),w
 16225  1C88  046A               	iorwf	(_IOCAF7_InterruptHandler+1)^(0+256),w
 16226  1C89  1903               	btfsc	3,2
 16227  1C8A  2C90               	goto	i1l4318
 16228                           
 16229                           ;pin_manager.c: 238: {;pin_manager.c: 239: IOCAF7_InterruptHandler();
 16230  1C8B  086A               	movf	(_IOCAF7_InterruptHandler+1)^(0+256),w
 16231  1C8C  008A               	movwf	10
 16232  1C8D  0869               	movf	_IOCAF7_InterruptHandler^(0+256),w
 16233  1C8E  000A               	callw
 16234  1C8F  319C               	pagesel	$
 16235  1C90                     i1l4318:	
 16236                           
 16237                           ;pin_manager.c: 240: };pin_manager.c: 241: IOCAFbits.IOCAF7 = 0;
 16238  1C90  017E               	movlb	62	; select bank62
 16239  1C91  13BF               	bcf	63,7	;volatile
 16240  1C92  0008               	return
 16241  1C93                     __end_of_IOCAF7_ISR:	
 16242                           
 16243                           	psect	text78
 16244  1BA4                     __ptext78:	
 16245 ;; *************** function _IOCAF7_DefaultInterruptHandler *****************
 16246 ;; Defined at:
 16247 ;;		line 254 in file "mcc_generated_files/pin_manager.c"
 16248 ;; Parameters:    Size  Location     Type
 16249 ;;		None
 16250 ;; Auto vars:     Size  Location     Type
 16251 ;;		None
 16252 ;; Return value:  Size  Location     Type
 16253 ;;                  1    wreg      void 
 16254 ;; Registers used:
 16255 ;;		None
 16256 ;; Tracked objects:
 16257 ;;		On entry : 0/0
 16258 ;;		On exit  : 0/0
 16259 ;;		Unchanged: 0/0
 16260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16265 ;;Total ram usage:        0 bytes
 16266 ;; Hardware stack levels used:    1
 16267 ;; This function calls:
 16268 ;;		Nothing
 16269 ;; This function is called by:
 16270 ;;		_PIN_MANAGER_Initialize
 16271 ;;		_IOCAF7_ISR
 16272 ;; This function uses a non-reentrant model
 16273 ;;
 16274                           
 16275                           
 16276                           ;psect for function _IOCAF7_DefaultInterruptHandler
 16277  1BA4                     _IOCAF7_DefaultInterruptHandler:	
 16278                           
 16279                           ;incstack = 0
 16280                           ; Regs used in _IOCAF7_DefaultInterruptHandler: []
 16281  1BA4  0008               	return
 16282  1BA5                     __end_of_IOCAF7_DefaultInterruptHandler:	
 16283                           
 16284                           	psect	text79
 16285  0803                     __ptext79:	
 16286 ;; *************** function _pushbutton *****************
 16287 ;; Defined at:
 16288 ;;		line 114 in file "main.c"
 16289 ;; Parameters:    Size  Location     Type
 16290 ;;		None
 16291 ;; Auto vars:     Size  Location     Type
 16292 ;;		None
 16293 ;; Return value:  Size  Location     Type
 16294 ;;                  1    wreg      void 
 16295 ;; Registers used:
 16296 ;;		wreg, status,2, status,0
 16297 ;; Tracked objects:
 16298 ;;		On entry : 0/0
 16299 ;;		On exit  : 0/0
 16300 ;;		Unchanged: 0/0
 16301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16304 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16305 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16306 ;;Total ram usage:        1 bytes
 16307 ;; Hardware stack levels used:    1
 16308 ;; This function calls:
 16309 ;;		Nothing
 16310 ;; This function is called by:
 16311 ;;		_main
 16312 ;;		_IOCAF7_ISR
 16313 ;; This function uses a non-reentrant model
 16314 ;;
 16315                           
 16316                           
 16317                           ;psect for function _pushbutton
 16318  0803                     _pushbutton:	
 16319                           
 16320                           ;main.c: 116: if (!PORTAbits.RA7) {
 16321                           
 16322                           ;incstack = 0
 16323                           ; Regs used in _pushbutton: [wreg+status,2+status,0]
 16324  0803  0140               	movlb	0	; select bank0
 16325  0804  1B8C               	btfsc	12,7	;volatile
 16326  0805  280F               	goto	i1l3866
 16327                           
 16328                           ;main.c: 117: millis = 0;
 16329  0806  3000               	movlw	0
 16330  0807  00FB               	movwf	_millis+3	;volatile
 16331  0808  3000               	movlw	0
 16332  0809  00FA               	movwf	_millis+2	;volatile
 16333  080A  3000               	movlw	0
 16334  080B  00F9               	movwf	_millis+1	;volatile
 16335  080C  3000               	movlw	0
 16336  080D  00F8               	movwf	_millis	;volatile
 16337                           
 16338                           ;main.c: 118: } else {
 16339  080E  0008               	return
 16340  080F                     i1l3866:	
 16341                           
 16342                           ;main.c: 119: pb_millis = millis;
 16343  080F  0878               	movf	_millis,w	;volatile
 16344  0810  00F0               	movwf	??_pushbutton
 16345  0811  0870               	movf	??_pushbutton,w
 16346  0812  0142               	movlb	2	; select bank2
 16347  0813  00DD               	movwf	_pb_millis^(0+256)	;volatile
 16348                           
 16349                           ;main.c: 121: if ((millis > 5) & (millis <= 50)) pb = short_press;
 16350  0814  087B               	movf	_millis+3,w	;volatile
 16351  0815  1D03               	btfss	3,2
 16352  0816  2821               	goto	i1l3870
 16353  0817  087A               	movf	_millis+2,w	;volatile
 16354  0818  1D03               	btfss	3,2
 16355  0819  2821               	goto	i1l3870
 16356  081A  0879               	movf	_millis+1,w	;volatile
 16357  081B  1D03               	btfss	3,2
 16358  081C  2821               	goto	i1l3870
 16359  081D  3006               	movlw	6
 16360  081E  0278               	subwf	_millis,w	;volatile
 16361  081F  1C03               	btfss	3,0
 16362  0820  2834               	goto	i1l3874
 16363  0821                     i1l3870:	
 16364  0821  087B               	movf	_millis+3,w	;volatile
 16365  0822  1D03               	btfss	3,2
 16366  0823  2834               	goto	i1l3874
 16367  0824  087A               	movf	_millis+2,w	;volatile
 16368  0825  1D03               	btfss	3,2
 16369  0826  2834               	goto	i1l3874
 16370  0827  0879               	movf	_millis+1,w	;volatile
 16371  0828  1D03               	btfss	3,2
 16372  0829  2834               	goto	i1l3874
 16373  082A  3033               	movlw	51
 16374  082B  0278               	subwf	_millis,w	;volatile
 16375  082C  1803               	btfsc	3,0
 16376  082D  2834               	goto	i1l3874
 16377  082E  3001               	movlw	1
 16378  082F  00F0               	movwf	??_pushbutton
 16379  0830  0870               	movf	??_pushbutton,w
 16380  0831  0140               	movlb	0	; select bank0
 16381  0832  00EF               	movwf	_pb	;volatile
 16382  0833  0008               	return
 16383  0834                     i1l3874:	
 16384                           
 16385                           ;main.c: 123: else if ((millis > 50) & (millis <= 150)) {
 16386  0834  087B               	movf	_millis+3,w	;volatile
 16387  0835  1D03               	btfss	3,2
 16388  0836  2841               	goto	i1l3876
 16389  0837  087A               	movf	_millis+2,w	;volatile
 16390  0838  1D03               	btfss	3,2
 16391  0839  2841               	goto	i1l3876
 16392  083A  0879               	movf	_millis+1,w	;volatile
 16393  083B  1D03               	btfss	3,2
 16394  083C  2841               	goto	i1l3876
 16395  083D  3033               	movlw	51
 16396  083E  0278               	subwf	_millis,w	;volatile
 16397  083F  1C03               	btfss	3,0
 16398  0840  2854               	goto	i1l3880
 16399  0841                     i1l3876:	
 16400  0841  087B               	movf	_millis+3,w	;volatile
 16401  0842  1D03               	btfss	3,2
 16402  0843  2854               	goto	i1l3880
 16403  0844  087A               	movf	_millis+2,w	;volatile
 16404  0845  1D03               	btfss	3,2
 16405  0846  2854               	goto	i1l3880
 16406  0847  0879               	movf	_millis+1,w	;volatile
 16407  0848  1D03               	btfss	3,2
 16408  0849  2854               	goto	i1l3880
 16409  084A  3097               	movlw	151
 16410  084B  0278               	subwf	_millis,w	;volatile
 16411  084C  1803               	btfsc	3,0
 16412  084D  2854               	goto	i1l3880
 16413                           
 16414                           ;main.c: 124: pb = long_press;
 16415  084E  3002               	movlw	2
 16416  084F  00F0               	movwf	??_pushbutton
 16417  0850  0870               	movf	??_pushbutton,w
 16418  0851  0140               	movlb	0	; select bank0
 16419  0852  00EF               	movwf	_pb	;volatile
 16420                           
 16421                           ;main.c: 125: }
 16422  0853  0008               	return
 16423  0854                     i1l3880:	
 16424                           
 16425                           ;main.c: 127: else pb = abort;
 16426  0854  3003               	movlw	3
 16427  0855  00F0               	movwf	??_pushbutton
 16428  0856  0870               	movf	??_pushbutton,w
 16429  0857  0140               	movlb	0	; select bank0
 16430  0858  00EF               	movwf	_pb	;volatile
 16431  0859  0008               	return
 16432  085A                     __end_of_pushbutton:	
 16433                           
 16434                           	psect	text80
 16435  1C79                     __ptext80:	
 16436 ;; *************** function _IOCAF5_ISR *****************
 16437 ;; Defined at:
 16438 ;;		line 202 in file "mcc_generated_files/pin_manager.c"
 16439 ;; Parameters:    Size  Location     Type
 16440 ;;		None
 16441 ;; Auto vars:     Size  Location     Type
 16442 ;;		None
 16443 ;; Return value:  Size  Location     Type
 16444 ;;                  1    wreg      void 
 16445 ;; Registers used:
 16446 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16447 ;; Tracked objects:
 16448 ;;		On entry : 0/0
 16449 ;;		On exit  : 0/0
 16450 ;;		Unchanged: 0/0
 16451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16456 ;;Total ram usage:        0 bytes
 16457 ;; Hardware stack levels used:    1
 16458 ;; Hardware stack levels required when called:    1
 16459 ;; This function calls:
 16460 ;;		Absolute function
 16461 ;;		_IOCAF5_DefaultInterruptHandler
 16462 ;;		_rot
 16463 ;; This function is called by:
 16464 ;;		_PIN_MANAGER_IOC
 16465 ;; This function uses a non-reentrant model
 16466 ;;
 16467                           
 16468                           
 16469                           ;psect for function _IOCAF5_ISR
 16470  1C79                     _IOCAF5_ISR:	
 16471                           
 16472                           ;pin_manager.c: 207: if(IOCAF5_InterruptHandler)
 16473                           
 16474                           ;incstack = 0
 16475                           ; Regs used in _IOCAF5_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16476  1C79  0142               	movlb	2	; select bank2
 16477  1C7A  086B               	movf	_IOCAF5_InterruptHandler^(0+256),w
 16478  1C7B  046C               	iorwf	(_IOCAF5_InterruptHandler+1)^(0+256),w
 16479  1C7C  1903               	btfsc	3,2
 16480  1C7D  2C83               	goto	i1l4312
 16481                           
 16482                           ;pin_manager.c: 208: {;pin_manager.c: 209: IOCAF5_InterruptHandler();
 16483  1C7E  086C               	movf	(_IOCAF5_InterruptHandler+1)^(0+256),w
 16484  1C7F  008A               	movwf	10
 16485  1C80  086B               	movf	_IOCAF5_InterruptHandler^(0+256),w
 16486  1C81  000A               	callw
 16487  1C82  319C               	pagesel	$
 16488  1C83                     i1l4312:	
 16489                           
 16490                           ;pin_manager.c: 210: };pin_manager.c: 211: IOCAFbits.IOCAF5 = 0;
 16491  1C83  017E               	movlb	62	; select bank62
 16492  1C84  12BF               	bcf	63,5	;volatile
 16493  1C85  0008               	return
 16494  1C86                     __end_of_IOCAF5_ISR:	
 16495                           
 16496                           	psect	text81
 16497  1BA3                     __ptext81:	
 16498 ;; *************** function _IOCAF4_DefaultInterruptHandler *****************
 16499 ;; Defined at:
 16500 ;;		line 194 in file "mcc_generated_files/pin_manager.c"
 16501 ;; Parameters:    Size  Location     Type
 16502 ;;		None
 16503 ;; Auto vars:     Size  Location     Type
 16504 ;;		None
 16505 ;; Return value:  Size  Location     Type
 16506 ;;                  1    wreg      void 
 16507 ;; Registers used:
 16508 ;;		None
 16509 ;; Tracked objects:
 16510 ;;		On entry : 0/0
 16511 ;;		On exit  : 0/0
 16512 ;;		Unchanged: 0/0
 16513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16518 ;;Total ram usage:        0 bytes
 16519 ;; Hardware stack levels used:    1
 16520 ;; This function calls:
 16521 ;;		Nothing
 16522 ;; This function is called by:
 16523 ;;		_PIN_MANAGER_Initialize
 16524 ;;		_IOCAF4_ISR
 16525 ;; This function uses a non-reentrant model
 16526 ;;
 16527                           
 16528                           
 16529                           ;psect for function _IOCAF4_DefaultInterruptHandler
 16530  1BA3                     _IOCAF4_DefaultInterruptHandler:	
 16531                           
 16532                           ;incstack = 0
 16533                           ; Regs used in _IOCAF4_DefaultInterruptHandler: []
 16534  1BA3  0008               	return
 16535  1BA4                     __end_of_IOCAF4_DefaultInterruptHandler:	
 16536                           
 16537                           	psect	text82
 16538  1F8F                     __ptext82:	
 16539 ;; *************** function _rot *****************
 16540 ;; Defined at:
 16541 ;;		line 101 in file "main.c"
 16542 ;; Parameters:    Size  Location     Type
 16543 ;;		None
 16544 ;; Auto vars:     Size  Location     Type
 16545 ;;  input           1    7[COMMON] unsigned char 
 16546 ;; Return value:  Size  Location     Type
 16547 ;;                  1    wreg      void 
 16548 ;; Registers used:
 16549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 16550 ;; Tracked objects:
 16551 ;;		On entry : 0/0
 16552 ;;		On exit  : 0/0
 16553 ;;		Unchanged: 0/0
 16554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16556 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16557 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16558 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16559 ;;Total ram usage:        8 bytes
 16560 ;; Hardware stack levels used:    1
 16561 ;; This function calls:
 16562 ;;		Nothing
 16563 ;; This function is called by:
 16564 ;;		_main
 16565 ;;		_IOCAF4_ISR
 16566 ;;		_IOCAF5_ISR
 16567 ;; This function uses a non-reentrant model
 16568 ;;
 16569                           
 16570                           
 16571                           ;psect for function _rot
 16572  1F8F                     _rot:	
 16573                           
 16574                           ;main.c: 102: uint8_t input;;main.c: 105: input = (PORTAbits.RA5 << 1) | PORTAbits.RA4;
 16575                           
 16576                           ;incstack = 0
 16577                           ; Regs used in _rot: [wreg-fsr0h+status,2+status,0+pclath]
 16578  1F8F  0140               	movlb	0	; select bank0
 16579  1F90  0E0C               	swapf	12,w	;volatile
 16580  1F91  3901               	andlw	1
 16581  1F92  00F0               	movwf	??_rot
 16582  1F93  0E0C               	swapf	12,w	;volatile
 16583  1F94  0C89               	rrf	9,f
 16584  1F95  3901               	andlw	1
 16585  1F96  0709               	addwf	9,w
 16586  1F97  0470               	iorwf	??_rot,w
 16587  1F98  00F1               	movwf	??_rot+1
 16588  1F99  0871               	movf	??_rot+1,w
 16589  1F9A  00F7               	movwf	rot@input
 16590                           
 16591                           ;main.c: 107: current_state = transition_table[current_state & 0b00000111][input];
 16592  1F9B  087C               	movf	_current_state,w	;volatile
 16593  1F9C  3907               	andlw	7
 16594  1F9D  00F0               	movwf	??_rot
 16595  1F9E  01F1               	clrf	??_rot+1
 16596  1F9F  35F0               	lslf	??_rot,f
 16597  1FA0  0DF1               	rlf	??_rot+1,f
 16598  1FA1  35F0               	lslf	??_rot,f
 16599  1FA2  0DF1               	rlf	??_rot+1,f
 16600  1FA3  309E               	movlw	low (_transition_table| (0+32768))
 16601  1FA4  00F2               	movwf	??_rot+2
 16602  1FA5  30A0               	movlw	high (_transition_table| (0+32768))
 16603  1FA6  00F3               	movwf	??_rot+3
 16604  1FA7  0870               	movf	??_rot,w
 16605  1FA8  0772               	addwf	??_rot+2,w
 16606  1FA9  00F4               	movwf	??_rot+4
 16607  1FAA  0871               	movf	??_rot+1,w
 16608  1FAB  3D73               	addwfc	??_rot+3,w
 16609  1FAC  00F5               	movwf	??_rot+5
 16610  1FAD  0877               	movf	rot@input,w
 16611  1FAE  0774               	addwf	??_rot+4,w
 16612  1FAF  0084               	movwf	4
 16613  1FB0  0875               	movf	??_rot+5,w
 16614  1FB1  1803               	skipnc
 16615  1FB2  0A75               	incf	??_rot+5,w
 16616  1FB3  0085               	movwf	5
 16617  1FB4  0800               	movf	0,w	;code access
 16618  1FB5  00F6               	movwf	??_rot+6
 16619  1FB6  0876               	movf	??_rot+6,w
 16620  1FB7  00FC               	movwf	_current_state	;volatile
 16621                           
 16622                           ;main.c: 110: if (current_state & cw_flag) dir = cw;
 16623  1FB8  1FFC               	btfss	_current_state,7	;volatile
 16624  1FB9  2FBF               	goto	i1l3858
 16625  1FBA  3001               	movlw	1
 16626  1FBB  00F0               	movwf	??_rot
 16627  1FBC  0870               	movf	??_rot,w
 16628  1FBD  0141               	movlb	1	; select bank1
 16629  1FBE  00ED               	movwf	_dir^(0+128)	;volatile
 16630  1FBF                     i1l3858:	
 16631                           
 16632                           ;main.c: 111: if (current_state & ccw_flag) dir = ccw;
 16633  1FBF  1F7C               	btfss	_current_state,6	;volatile
 16634  1FC0  0008               	return
 16635  1FC1  3002               	movlw	2
 16636  1FC2  00F0               	movwf	??_rot
 16637  1FC3  0870               	movf	??_rot,w
 16638  1FC4  0141               	movlb	1	; select bank1
 16639  1FC5  00ED               	movwf	_dir^(0+128)	;volatile
 16640  1FC6  0008               	return
 16641  1FC7                     __end_of_rot:	
 16642                           
 16643                           	psect	text83
 16644  1BA2                     __ptext83:	
 16645 ;; *************** function _IOCAF5_DefaultInterruptHandler *****************
 16646 ;; Defined at:
 16647 ;;		line 224 in file "mcc_generated_files/pin_manager.c"
 16648 ;; Parameters:    Size  Location     Type
 16649 ;;		None
 16650 ;; Auto vars:     Size  Location     Type
 16651 ;;		None
 16652 ;; Return value:  Size  Location     Type
 16653 ;;                  1    wreg      void 
 16654 ;; Registers used:
 16655 ;;		None
 16656 ;; Tracked objects:
 16657 ;;		On entry : 0/0
 16658 ;;		On exit  : 0/0
 16659 ;;		Unchanged: 0/0
 16660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16665 ;;Total ram usage:        0 bytes
 16666 ;; Hardware stack levels used:    1
 16667 ;; This function calls:
 16668 ;;		Nothing
 16669 ;; This function is called by:
 16670 ;;		_PIN_MANAGER_Initialize
 16671 ;;		_IOCAF5_ISR
 16672 ;; This function uses a non-reentrant model
 16673 ;;
 16674                           
 16675                           
 16676                           ;psect for function _IOCAF5_DefaultInterruptHandler
 16677  1BA2                     _IOCAF5_DefaultInterruptHandler:	
 16678                           
 16679                           ;incstack = 0
 16680                           ; Regs used in _IOCAF5_DefaultInterruptHandler: []
 16681  1BA2  0008               	return
 16682  1BA3                     __end_of_IOCAF5_DefaultInterruptHandler:	
 16683                           
 16684                           	psect	text84
 16685  1C6C                     __ptext84:	
 16686 ;; *************** function _IOCAF4_ISR *****************
 16687 ;; Defined at:
 16688 ;;		line 172 in file "mcc_generated_files/pin_manager.c"
 16689 ;; Parameters:    Size  Location     Type
 16690 ;;		None
 16691 ;; Auto vars:     Size  Location     Type
 16692 ;;		None
 16693 ;; Return value:  Size  Location     Type
 16694 ;;                  1    wreg      void 
 16695 ;; Registers used:
 16696 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16697 ;; Tracked objects:
 16698 ;;		On entry : 0/0
 16699 ;;		On exit  : 0/0
 16700 ;;		Unchanged: 0/0
 16701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16706 ;;Total ram usage:        0 bytes
 16707 ;; Hardware stack levels used:    1
 16708 ;; Hardware stack levels required when called:    1
 16709 ;; This function calls:
 16710 ;;		Absolute function
 16711 ;;		_IOCAF4_DefaultInterruptHandler
 16712 ;;		_rot
 16713 ;; This function is called by:
 16714 ;;		_PIN_MANAGER_IOC
 16715 ;; This function uses a non-reentrant model
 16716 ;;
 16717                           
 16718                           
 16719                           ;psect for function _IOCAF4_ISR
 16720  1C6C                     _IOCAF4_ISR:	
 16721                           
 16722                           ;pin_manager.c: 177: if(IOCAF4_InterruptHandler)
 16723                           
 16724                           ;incstack = 0
 16725                           ; Regs used in _IOCAF4_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16726  1C6C  0142               	movlb	2	; select bank2
 16727  1C6D  086D               	movf	_IOCAF4_InterruptHandler^(0+256),w
 16728  1C6E  046E               	iorwf	(_IOCAF4_InterruptHandler+1)^(0+256),w
 16729  1C6F  1903               	btfsc	3,2
 16730  1C70  2C76               	goto	i1l4306
 16731                           
 16732                           ;pin_manager.c: 178: {;pin_manager.c: 179: IOCAF4_InterruptHandler();
 16733  1C71  086E               	movf	(_IOCAF4_InterruptHandler+1)^(0+256),w
 16734  1C72  008A               	movwf	10
 16735  1C73  086D               	movf	_IOCAF4_InterruptHandler^(0+256),w
 16736  1C74  000A               	callw
 16737  1C75  319C               	pagesel	$
 16738  1C76                     i1l4306:	
 16739                           
 16740                           ;pin_manager.c: 180: };pin_manager.c: 181: IOCAFbits.IOCAF4 = 0;
 16741  1C76  017E               	movlb	62	; select bank62
 16742  1C77  123F               	bcf	63,4	;volatile
 16743  1C78  0008               	return
 16744  1C79                     __end_of_IOCAF4_ISR:	
 16745                           
 16746                           	psect	text85
 16747  1DA0                     __ptext85:	
 16748 ;; *************** function _EUSART1_Transmit_ISR *****************
 16749 ;; Defined at:
 16750 ;;		line 172 in file "mcc_generated_files/eusart1.c"
 16751 ;; Parameters:    Size  Location     Type
 16752 ;;		None
 16753 ;; Auto vars:     Size  Location     Type
 16754 ;;		None
 16755 ;; Return value:  Size  Location     Type
 16756 ;;                  1    wreg      void 
 16757 ;; Registers used:
 16758 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16759 ;; Tracked objects:
 16760 ;;		On entry : 0/0
 16761 ;;		On exit  : 0/0
 16762 ;;		Unchanged: 0/0
 16763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16766 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16767 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16768 ;;Total ram usage:        1 bytes
 16769 ;; Hardware stack levels used:    1
 16770 ;; This function calls:
 16771 ;;		Nothing
 16772 ;; This function is called by:
 16773 ;;		_EUSART1_Initialize
 16774 ;;		_INTERRUPT_InterruptManager
 16775 ;; This function uses a non-reentrant model
 16776 ;;
 16777                           
 16778                           
 16779                           ;psect for function _EUSART1_Transmit_ISR
 16780  1DA0                     _EUSART1_Transmit_ISR:	
 16781                           
 16782                           ;eusart1.c: 176: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
 16783                           
 16784                           ;incstack = 0
 16785                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 16786  1DA0  3008               	movlw	8
 16787  1DA1  0142               	movlb	2	; select bank2
 16788  1DA2  026F               	subwf	_eusart1TxBufferRemaining^(0+256),w	;volatile
 16789  1DA3  1803               	skipnc
 16790  1DA4  2DBD               	goto	i1l302
 16791                           
 16792                           ;eusart1.c: 177: {;eusart1.c: 178: TX1REG = eusart1TxBuffer[eusart1TxTail++];
 16793  1DA5  0141               	movlb	1	; select bank1
 16794  1DA6  086E               	movf	_eusart1TxTail^(0+128),w
 16795  1DA7  3EB0               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 16796  1DA8  0086               	movwf	6
 16797  1DA9  3001               	movlw	1	; select bank3/4
 16798  1DAA  0087               	movwf	7
 16799  1DAB  0801               	movf	1,w
 16800  1DAC  0142               	movlb	2	; select bank2
 16801  1DAD  009A               	movwf	26	;volatile
 16802  1DAE  3001               	movlw	1
 16803  1DAF  00F0               	movwf	??_EUSART1_Transmit_ISR
 16804  1DB0  0870               	movf	??_EUSART1_Transmit_ISR,w
 16805  1DB1  0141               	movlb	1	; select bank1
 16806  1DB2  07EE               	addwf	_eusart1TxTail^(0+128),f	;volatile
 16807                           
 16808                           ;eusart1.c: 179: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
 16809  1DB3  3008               	movlw	8
 16810  1DB4  026E               	subwf	_eusart1TxTail^(0+128),w	;volatile
 16811  1DB5  1803               	btfsc	3,0
 16812                           
 16813                           ;eusart1.c: 180: {;eusart1.c: 181: eusart1TxTail = 0;
 16814  1DB6  01EE               	clrf	_eusart1TxTail^(0+128)	;volatile
 16815                           
 16816                           ;eusart1.c: 182: };eusart1.c: 183: eusart1TxBufferRemaining++;
 16817  1DB7  3001               	movlw	1
 16818  1DB8  00F0               	movwf	??_EUSART1_Transmit_ISR
 16819  1DB9  0870               	movf	??_EUSART1_Transmit_ISR,w
 16820  1DBA  0142               	movlb	2	; select bank2
 16821  1DBB  07EF               	addwf	_eusart1TxBufferRemaining^(0+256),f	;volatile
 16822                           
 16823                           ;eusart1.c: 184: }
 16824  1DBC  0008               	return
 16825  1DBD                     i1l302:	
 16826                           
 16827                           ;eusart1.c: 185: else;eusart1.c: 186: {;eusart1.c: 187: PIE3bits.TX1IE = 0;
 16828  1DBD  014E               	movlb	14	; select bank14
 16829  1DBE  1219               	bcf	25,4	;volatile
 16830  1DBF  0008               	return
 16831  1DC0                     __end_of_EUSART1_Transmit_ISR:	
 16832                           
 16833                           	psect	text86
 16834  1D4B                     __ptext86:	
 16835 ;; *************** function _EUSART1_Receive_ISR *****************
 16836 ;; Defined at:
 16837 ;;		line 191 in file "mcc_generated_files/eusart1.c"
 16838 ;; Parameters:    Size  Location     Type
 16839 ;;		None
 16840 ;; Auto vars:     Size  Location     Type
 16841 ;;		None
 16842 ;; Return value:  Size  Location     Type
 16843 ;;                  1    wreg      void 
 16844 ;; Registers used:
 16845 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16846 ;; Tracked objects:
 16847 ;;		On entry : 0/0
 16848 ;;		On exit  : 0/0
 16849 ;;		Unchanged: 0/0
 16850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16853 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16854 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16855 ;;Total ram usage:        1 bytes
 16856 ;; Hardware stack levels used:    1
 16857 ;; This function calls:
 16858 ;;		Nothing
 16859 ;; This function is called by:
 16860 ;;		_EUSART1_Initialize
 16861 ;;		_INTERRUPT_InterruptManager
 16862 ;; This function uses a non-reentrant model
 16863 ;;
 16864                           
 16865                           
 16866                           ;psect for function _EUSART1_Receive_ISR
 16867  1D4B                     _EUSART1_Receive_ISR:	
 16868                           
 16869                           ;eusart1.c: 194: if(1 == RC1STAbits.OERR)
 16870                           
 16871                           ;incstack = 0
 16872                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 16873  1D4B  0142               	movlb	2	; select bank2
 16874  1D4C  1C9D               	btfss	29,1	;volatile
 16875  1D4D  2D50               	goto	i1l4698
 16876                           
 16877                           ;eusart1.c: 195: {;eusart1.c: 198: RC1STAbits.CREN = 0;
 16878  1D4E  121D               	bcf	29,4	;volatile
 16879                           
 16880                           ;eusart1.c: 199: RC1STAbits.CREN = 1;
 16881  1D4F  161D               	bsf	29,4	;volatile
 16882  1D50                     i1l4698:	
 16883                           
 16884                           ;eusart1.c: 200: };eusart1.c: 203: eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 16885  1D50  0819               	movf	25,w	;volatile
 16886  1D51  00F0               	movwf	??_EUSART1_Receive_ISR
 16887  1D52  0861               	movf	_eusart1RxHead^(0+256),w
 16888  1D53  3EA8               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 16889  1D54  0086               	movwf	6
 16890  1D55  3001               	movlw	1	; select bank3/4
 16891  1D56  0087               	movwf	7
 16892  1D57  0870               	movf	??_EUSART1_Receive_ISR,w
 16893  1D58  0081               	movwf	1
 16894  1D59  3001               	movlw	1
 16895  1D5A  00F0               	movwf	??_EUSART1_Receive_ISR
 16896  1D5B  0870               	movf	??_EUSART1_Receive_ISR,w
 16897  1D5C  07E1               	addwf	_eusart1RxHead^(0+256),f	;volatile
 16898                           
 16899                           ;eusart1.c: 204: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 16900  1D5D  3008               	movlw	8
 16901  1D5E  0261               	subwf	_eusart1RxHead^(0+256),w	;volatile
 16902  1D5F  1803               	btfsc	3,0
 16903                           
 16904                           ;eusart1.c: 205: {;eusart1.c: 206: eusart1RxHead = 0;
 16905  1D60  01E1               	clrf	_eusart1RxHead^(0+256)	;volatile
 16906                           
 16907                           ;eusart1.c: 207: };eusart1.c: 208: eusart1RxCount++;
 16908  1D61  3001               	movlw	1
 16909  1D62  00F0               	movwf	??_EUSART1_Receive_ISR
 16910  1D63  0870               	movf	??_EUSART1_Receive_ISR,w
 16911  1D64  07DF               	addwf	_eusart1RxCount^(0+256),f	;volatile
 16912  1D65  0008               	return
 16913  1D66                     __end_of_EUSART1_Receive_ISR:	
 16914  007E                     btemp	set	126	;btemp
 16915  007E                     int$flags	set	126
 16916  007E                     wtemp0	set	126


Data Sizes:
    Strings     299
    Constant    74
    Data        8
    BSS         63
    Persistent  51
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     79      80
    BANK1            80     76      80
    BANK2            80     39      80
    BANK3            80      0      38
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> trunc@expon(BANK0[2]), log@exponent(BANK1[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 36
		 -> log@coeff(CODE[36]), 

    sprintf@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 59
		 -> STR_17(CODE[6]), STR_16(CODE[11]), STR_14(CODE[33]), STR_12(CODE[59]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 61
		 -> main_menu@s(BANK1[61]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    OLED_print_xy@s	PTR unsigned char  size(2) Largest target is 61
		 -> STR_15(CODE[9]), STR_13(CODE[44]), main_menu@s(BANK1[61]), STR_11(CODE[45]), 
		 -> STR_10(CODE[9]), STR_9(CODE[12]), STR_8(CODE[8]), STR_7(CODE[13]), 
		 -> STR_6(CODE[11]), STR_5(CODE[7]), STR_4(CODE[10]), STR_3(CODE[11]), 
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer1(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer1(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer0(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer0(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), Absolute function(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), Absolute function(), 

    IOCCF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> overcurrent(), IOCCF2_DefaultInterruptHandler(), 

    IOCCF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> overcurrent(), Absolute function(), IOCCF2_DefaultInterruptHandler(), 

    IOCAF7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> pushbutton(), IOCAF7_DefaultInterruptHandler(), 

    IOCAF7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> pushbutton(), Absolute function(), IOCAF7_DefaultInterruptHandler(), 

    IOCAF5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rot(), IOCAF5_DefaultInterruptHandler(), 

    IOCAF5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rot(), Absolute function(), IOCAF5_DefaultInterruptHandler(), 

    IOCAF4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rot(), IOCAF4_DefaultInterruptHandler(), 

    IOCAF4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rot(), Absolute function(), IOCAF4_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer
    _TMR1_CallBack->_timer1
    _IOCCF2_ISR->_overcurrent
    _IOCAF7_ISR->_pushbutton
    _IOCAF5_ISR->_rot
    _IOCAF4_ISR->_rot

Critical Paths under _main in BANK0

    _main->___fladd
    _round->___fladd
    _trunc->___fltol
    ___fltol->___flmul
    ___flsub->___fladd
    _read_ntc_temp->___lldiv
    _read_cur_volt->_get_battery_volt
    _get_current->___lldiv
    _get_battery_volt->___lldiv
    ___lldiv->___lmul
    _main_menu->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _OLED_scrollDisplayRight->_OLED_command
    _OLED_scrollDisplayLeft->_OLED_command
    _log->___fladd
    _frexp->___fleq
    _eval_poly->___fladd
    ___flmul->_frexp
    ___fladd->___fldiv
    _check_status->_OLED_print_xy
    _OLED_returnHome->_OLED_command
    _OLED_print_xy->_OLED_command
    _OLED_print_xy->_OLED_write
    _OLED_write->_OLED_send
    ___fldiv->___flmul
    _SYSTEM_Initialize->_EUSART1_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF4_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF5_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF7_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _OLED_init->_OLED_command
    _OLED_command->_OLED_send
    _OLED_send->_OLED_write4bits

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_main_menu
    _round->___flsub
    ___flsub->___fladd
    _log10->_log
    _log->_eval_poly
    _eval_poly->___fladd

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                48    48      0   71537
                                             73 BANK1      3     3      0
                                              0 BANK2     39    39      0
                     _ADC_Initialize
                       _EUSART1_Read
         _IOCAF4_SetInterruptHandler
         _IOCAF5_SetInterruptHandler
         _IOCAF7_SetInterruptHandler
         _IOCCF2_SetInterruptHandler
                          _OLED_init
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                       _check_status
                              _log10
                          _main_menu
                      _read_cur_volt
                      _read_ntc_temp
                              _round
 ---------------------------------------------------------------------------------
 (1) _round                                                8     4      4   10067
                                             20 BANK1      8     4      4
                            ___fladd
                            ___flmul (ARG)
                            ___flsub
                              _trunc
 ---------------------------------------------------------------------------------
 (2) _trunc                                               11     7      4    2446
                                             56 BANK0     11     7      4
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     457
                                             45 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3853
                                             12 BANK1      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                              _trunc (ARG)
 ---------------------------------------------------------------------------------
 (1) _read_ntc_temp                                        8     8      0    1363
                                             26 BANK0      8     8      0
                  _ADC_GetConversion
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _read_cur_volt                                        7     7      0    3857
                                             36 BANK0      7     7      0
                            ___lldiv
                             ___lmul
                   _get_battery_volt
                        _get_current
 ---------------------------------------------------------------------------------
 (2) _get_current                                          6     4      2    1363
                                             26 BANK0      6     4      2
                  _ADC_GetConversion
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     548
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _get_battery_volt                                    10     8      2     815
                                             26 BANK0     10     8      2
                  _ADC_GetConversion
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     770
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    4     2      2      22
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _main_menu                                           81    81      0   11931
                                             48 BANK0      8     8      0
                                              0 BANK1     73    73      0
                      _OLED_print_xy
                    _OLED_returnHome
             _OLED_scrollDisplayLeft
            _OLED_scrollDisplayRight
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___lwdiv
                            ___lwmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             38    20     18    3592
                                             14 BANK0     34    16     18
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     919
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     922
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     320
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _OLED_scrollDisplayRight                              0     0      0     352
                       _OLED_command
 ---------------------------------------------------------------------------------
 (2) _OLED_scrollDisplayLeft                               0     0      0     352
                       _OLED_command
 ---------------------------------------------------------------------------------
 (1) _log10                                                8     4      4   22089
                                             37 BANK1      8     4      4
                            ___fldiv (ARG)
                            ___flmul
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  7     3      4   18183
                                             30 BANK1      7     3      4
                            ___fladd
                            ___fldiv (ARG)
                             ___fleq
                             ___flge
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                7     2      5    1048
                                             12 BANK0      7     2      5
                             ___fleq
 ---------------------------------------------------------------------------------
 (4) ___fleq                                              12     4      8     520
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           18    10      8    7695
                                             12 BANK1     18    10      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    3785
                                             19 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3504
                                             71 BANK0      8     0      8
                                              0 BANK1     12    12      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     626
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     764
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _check_status                                         2     2      0    4105
                                             16 BANK0      2     2      0
                       _OLED_command
                      _OLED_print_xy
                    _OLED_returnHome
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OLED_returnHome                                      0     0      0     352
                       _OLED_command
 ---------------------------------------------------------------------------------
 (2) _OLED_print_xy                                        9     6      3    3401
                                              7 BANK0      9     6      3
                       _OLED_command
                         _OLED_write
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _OLED_write                                           1     1      0     352
                                              6 BANK0      1     1      0
                          _OLED_send
                  _OLED_waitForReady
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1881
                                             45 BANK0     26    18      8
                          __Umul8_16 (ARG)
                             ___fleq (ARG)
                             ___flge (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1240
                     _ADC_Initialize
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     696
         _IOCAF4_SetInterruptHandler
         _IOCAF5_SetInterruptHandler
         _IOCAF7_SetInterruptHandler
         _IOCCF2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF2_SetInterruptHandler                           2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCAF7_SetInterruptHandler                           2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCAF5_SetInterruptHandler                           2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCAF4_SetInterruptHandler                           2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0     196
                                              2 BANK0      1     1      0
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OLED_init                                            1     1      0     440
                                              7 BANK0      1     1      0
                       _OLED_command
                    _OLED_write4bits
 ---------------------------------------------------------------------------------
 (3) _OLED_command                                         1     1      0     352
                                              6 BANK0      1     1      0
                          _OLED_send
                  _OLED_waitForReady
 ---------------------------------------------------------------------------------
 (4) _OLED_waitForReady                                    1     1      0      24
                                              0 BANK0      1     1      0
                   _OLED_pulseEnable
 ---------------------------------------------------------------------------------
 (4) _OLED_send                                            3     2      1     306
                                              3 BANK0      3     2      1
                    _OLED_write4bits
 ---------------------------------------------------------------------------------
 (5) _OLED_write4bits                                      3     3      0      88
                                              0 BANK0      3     3      0
                   _OLED_pulseEnable
 ---------------------------------------------------------------------------------
 (5) _OLED_pulseEnable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         2     2      0      24
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0     286
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (9) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (9) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                             _timer1 *
 ---------------------------------------------------------------------------------
 (10) _timer1                                              1     1      0       0
                                              0 COMMON     1     1      0
                     _TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (10) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                             _timer0 *
 ---------------------------------------------------------------------------------
 (10) _timer0                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _PIN_MANAGER_IOC                                      0     0      0      46
                         _IOCAF4_ISR
                         _IOCAF5_ISR
                         _IOCAF7_ISR
                         _IOCCF2_ISR
 ---------------------------------------------------------------------------------
 (9) _IOCCF2_ISR                                           0     0      0       0
                   Absolute function *
     _IOCCF2_DefaultInterruptHandler *
                        _overcurrent *
 ---------------------------------------------------------------------------------
 (10) _overcurrent                                         1     1      0       0
                                              0 COMMON     1     1      0
                     _TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (11) _TMR1_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _IOCCF2_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _IOCAF7_ISR                                           0     0      0       0
                   Absolute function *
     _IOCAF7_DefaultInterruptHandler *
                         _pushbutton *
 ---------------------------------------------------------------------------------
 (10) _pushbutton                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _IOCAF7_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _IOCAF5_ISR                                           0     0      0      23
                   Absolute function *
     _IOCAF5_DefaultInterruptHandler *
                                _rot *
 ---------------------------------------------------------------------------------
 (10) _IOCAF5_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _IOCAF4_ISR                                           0     0      0      23
                   Absolute function *
     _IOCAF4_DefaultInterruptHandler *
                                _rot *
 ---------------------------------------------------------------------------------
 (10) _rot                                                 8     8      0      23
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (10) _IOCAF4_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _EUSART1_Read
   _IOCAF4_SetInterruptHandler
   _IOCAF5_SetInterruptHandler
   _IOCAF7_SetInterruptHandler
   _IOCCF2_SetInterruptHandler
   _OLED_init
     _OLED_command
       _OLED_send
         _OLED_write4bits
           _OLED_pulseEnable
       _OLED_waitForReady
         _OLED_pulseEnable
     _OLED_write4bits
       _OLED_pulseEnable
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF4_SetInterruptHandler
       _IOCAF5_SetInterruptHandler
       _IOCAF7_SetInterruptHandler
       _IOCCF2_SetInterruptHandler
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   ___fladd
     ___fldiv (ARG)
       __Umul8_16 (ARG)
       ___fleq (ARG)
       ___flge (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
         _frexp (ARG)
           ___fleq
       ___xxtofl (ARG)
       _frexp (ARG)
         ___fleq
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
       _frexp (ARG)
         ___fleq
     ___xxtofl (ARG)
     _frexp (ARG)
       ___fleq
   ___fldiv
     __Umul8_16 (ARG)
     ___fleq (ARG)
     ___flge (ARG)
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
       _frexp (ARG)
         ___fleq
     ___xxtofl (ARG)
     _frexp (ARG)
       ___fleq
   ___flge
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
     _frexp (ARG)
       ___fleq
   ___flsub
     ___fladd
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___fleq (ARG)
         ___flge (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
         _frexp (ARG)
           ___fleq
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
         _frexp (ARG)
           ___fleq
       ___xxtofl (ARG)
       _frexp (ARG)
         ___fleq
     ___fldiv (ARG)
       __Umul8_16 (ARG)
       ___fleq (ARG)
       ___flge (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
         _frexp (ARG)
           ___fleq
       ___xxtofl (ARG)
       _frexp (ARG)
         ___fleq
     _trunc (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
       ___xxtofl
       _frexp
         ___fleq
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
       _frexp (ARG)
         ___fleq
     ___xxtofl (ARG)
   ___xxtofl
   _check_status
     _OLED_command
       _OLED_send
         _OLED_write4bits
           _OLED_pulseEnable
       _OLED_waitForReady
         _OLED_pulseEnable
     _OLED_print_xy
       _OLED_command
         _OLED_send
           _OLED_write4bits
             _OLED_pulseEnable
         _OLED_waitForReady
           _OLED_pulseEnable
       _OLED_write
         _OLED_send
           _OLED_write4bits
             _OLED_pulseEnable
         _OLED_waitForReady
           _OLED_pulseEnable
       ___bmul (ARG)
     _OLED_returnHome
       _OLED_command
         _OLED_send
           _OLED_write4bits
             _OLED_pulseEnable
         _OLED_waitForReady
           _OLED_pulseEnable
     _TMR1_StartTimer
   _log10
     ___fldiv (ARG)
       __Umul8_16 (ARG)
       ___fleq (ARG)
       ___flge (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
         _frexp (ARG)
           ___fleq
       ___xxtofl (ARG)
       _frexp (ARG)
         ___fleq
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
       _frexp (ARG)
         ___fleq
     _log (ARG)
       ___fladd
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___fleq (ARG)
           ___flge (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
           _frexp (ARG)
             ___fleq
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
         _frexp (ARG)
           ___fleq
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___fleq (ARG)
         ___flge (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
         _frexp (ARG)
           ___fleq
       ___fleq (ARG)
       ___flge (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
         _frexp (ARG)
           ___fleq
       ___xxtofl (ARG)
       _eval_poly (ARG)
         ___fladd
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___fleq (ARG)
             ___flge (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
             _frexp (ARG)
               ___fleq
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
           _frexp (ARG)
             ___fleq
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___fleq (ARG)
           ___flge (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
           _frexp (ARG)
             ___fleq
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
           _frexp (ARG)
             ___fleq
       _frexp (ARG)
         ___fleq
   _main_menu
     _OLED_print_xy
       _OLED_command
         _OLED_send
           _OLED_write4bits
             _OLED_pulseEnable
         _OLED_waitForReady
           _OLED_pulseEnable
       _OLED_write
         _OLED_send
           _OLED_write4bits
             _OLED_pulseEnable
         _OLED_waitForReady
           _OLED_pulseEnable
       ___bmul (ARG)
     _OLED_returnHome
       _OLED_command
         _OLED_send
           _OLED_write4bits
             _OLED_pulseEnable
         _OLED_waitForReady
           _OLED_pulseEnable
     _OLED_scrollDisplayLeft
       _OLED_command
         _OLED_send
           _OLED_write4bits
             _OLED_pulseEnable
         _OLED_waitForReady
           _OLED_pulseEnable
     _OLED_scrollDisplayRight
       _OLED_command
         _OLED_send
           _OLED_write4bits
             _OLED_pulseEnable
         _OLED_waitForReady
           _OLED_pulseEnable
     ___awdiv
     ___awmod
     ___bmul
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _sprintf
       ___awdiv (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
       ___wmul (ARG)
       _isdigit (ARG)
   _read_cur_volt
     ___lldiv
       ___lmul (ARG)
     ___lmul
     _get_battery_volt
       _ADC_GetConversion
       ___lldiv
         ___lmul (ARG)
     _get_current
       _ADC_GetConversion
       ___lldiv
         ___lmul (ARG)
       ___lmul
   _read_ntc_temp
     _ADC_GetConversion
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _round
     ___fladd
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___fleq (ARG)
         ___flge (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
         _frexp (ARG)
           ___fleq
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
         _frexp (ARG)
           ___fleq
       ___xxtofl (ARG)
       _frexp (ARG)
         ___fleq
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
       _frexp (ARG)
         ___fleq
     ___flsub (ARG)
       ___fladd
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___fleq (ARG)
           ___flge (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
           _frexp (ARG)
             ___fleq
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
         _frexp (ARG)
           ___fleq
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___fleq (ARG)
         ___flge (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
         _frexp (ARG)
           ___fleq
       _trunc (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
         ___xxtofl
         _frexp
           ___fleq
     _trunc (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
       ___xxtofl
       _frexp
         ___fleq

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
   _EUSART1_Transmit_ISR *
   _PIN_MANAGER_IOC *
     _IOCAF4_ISR
       Absolute function(Fake) *
       _IOCAF4_DefaultInterruptHandler *
       _rot *
     _IOCAF5_ISR
       Absolute function(Fake) *
       _IOCAF5_DefaultInterruptHandler *
       _rot *
     _IOCAF7_ISR
       Absolute function(Fake) *
       _IOCAF7_DefaultInterruptHandler *
       _pushbutton *
     _IOCCF2_ISR
       Absolute function(Fake) *
       _IOCCF2_DefaultInterruptHandler *
       _overcurrent *
         _TMR1_StopTimer
   _TMR0_ISR *
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _timer0 *
   _TMR1_ISR *
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _timer1 *
         _TMR1_StopTimer
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4C      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
ABS                  0      0     124       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     27      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      26      12       47.5%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              20      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     124      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Jan 12 00:06:50 2020

                     __end_of_transition_table 20BA                       _eusart1TxBufferRemaining 016F  
                                 ___fldiv@aexp 0066                                   ___fldiv@bexp 0065  
             ??_IOCAF7_DefaultInterruptHandler 0070                ?_IOCAF7_DefaultInterruptHandler 0070  
                                 ___fldiv@sign 005E                                 ___bmul@product 0022  
                                  __CFG_CP$OFF 0000                                   ___awdiv@sign 0026  
                                           _dc 014F                                             _pb 006F  
                                           _rh 015B                            ___wmul@multiplicand 0022  
                          __Umul8_16@word_mpld 0026                                    __CFG_LVP$ON 0000  
                                          l217 1012                                            l630 165D  
                                          l711 1D36                                            l661 06CB  
                                          l836 0AA1                                            l854 0AF6  
                                          l847 0A84                                            l869 1D6F  
                              _timer1ReloadVal 0163                                            _dir 00ED  
                                          _log 16E6                                            _rot 1F8F  
                      __size_of_PMD_Initialize 0008                                   ___awmod@sign 0026  
                                 __CFG_BORV$LO 0000                           __end_of_check_status 16E6  
                                          wreg 0009               ??_IOCCF2_DefaultInterruptHandler 0070  
              ?_IOCCF2_DefaultInterruptHandler 0070                                   ___flmul@aexp 0045  
           __end_of_IOCAF5_SetInterruptHandler 1C13                     _IOCAF5_SetInterruptHandler 1C0A  
                                 ___flmul@bexp 0046                                   ___flmul@sign 0040  
                                 ___flmul@temp 004B                                   ___flmul@prod 0047  
                                __CFG_BBEN$OFF 0000                                    _total_power 0155  
                                 __CFG_ZCD$OFF 0000                                   ___fltol@exp1 0057  
                                         l1043 13E7                                           l1204 0FF4  
                                         l1046 1435                                           l1310 15D9  
                                         l1302 15BB                                           l1038 10FC  
                                         l1062 13B0                                           l1039 1116  
                                         l1240 09C2                                           l1242 09CF  
                                         l1218 08A3                                           l1162 0E02  
                                         l1309 15CF                                           l1166 0EB9  
                                         l1270 0D94                                           l1239 09AA  
                                         l1183 0F5C                                           l4000 1401  
                                         l1168 0E96                                           l1187 0F7D  
                                         l4004 141B                                           l1196 0FD7  
                                         l1348 1DD1                                           l4020 1379  
                                         l4110 1594                                           l1296 1585  
                                         l4104 157D                                           l4016 1370  
                                         l4114 1598                                           l5100 08C2  
                                         l4124 15CD                                           l4116 15A8  
                                         l3500 0DC3                                           l4060 1EF7  
                                         l4036 139E                                           l4126 15C0  
                                         l4150 1234                                           l4062 1F03  
                                         l4046 13BD                                           l4038 13AC  
                                         l3600 0EDE                                           l3504 0DC7  
                                         l4072 1F1E                                           l5106 08CE  
                                         l4138 15F4                                           l3506 0DD0  
                                         l4090 1E4C                                           l4410 0A70  
                                         l4402 0A49                                           l5132 092E  
                                         l3604 0EE3                                           l3524 0DF5  
                                         l3444 1DCB                                           l4068 1F15  
                                         l4084 1E34                                           l4412 0A7B  
                                         l4404 0A5E                                           l5150 0939  
                                         l5126 0915                                           l5134 08F7  
                                         l5070 0877                                           l3534 0E0D  
                                         l3518 0DE5                                           l4510 1269  
                                         l4086 1E40                                           l4094 1E55  
                                         l5302 0343                                           l5152 0950  
                                         l5136 0933                                           l5072 087F  
                                         l3640 0F89                                           l3608 0EF3  
                                         l3528 0DF9                                           l3712 0BB2  
                                         l4168 155E                                           l4432 0AC5  
                                         l4416 0A86                                           l5162 0969  
                                         l5090 089B                                           l5066 0874  
                                         l3634 0F82                                           l3626 0F71  
                                         l3618 0F54                                           l3642 0F8C  
                                         l3802 0D6A                                           l3714 0BB4  
                                         l3482 1128                                           l4602 173E  
                                         l5322 0422                                           l5306 036A  
                                         l5172 0992                                           l3652 0F9A  
                                         l3572 0E9E                                           l3564 0E62  
                                         l3724 0BCA                                           l3716 0BBC  
                                         l4516 1274                                           l4452 0B08  
                                         l4444 0AEA                                           l4428 0ABA  
                                         l4620 1190                                           l5316 0418  
                                         l5158 0967                                           l5086 0898  
                                         l3670 0FEA                                           l3590 0EC8  
                                         l3574 0EA0                                           l3582 0EB4  
                                         l3494 0DB3                                           l4542 12AB  
                                         l4534 129A                                           l4526 127C  
                                         l4462 0B22                                           l4454 0B0B  
                                         l4438 0ACB                                           l5326 042B  
                                         l5262 00A7                                           l4368 1EA6  
                                         l3648 0F97                                           l3808 0D81  
                                         l4528 1288                                           l4456 0B0F  
                                         l4480 0B70                                           l4392 0A3B  
                                         l4384 0A0C                                           l5186 09CB  
                                         l3674 0FEF                                           l3578 0EA5  
                                         l4538 12A3                                           l4554 10A6  
                                         l4490 07F1                                           l4378 09FC  
                                         l4730 0750                                           l4580 10DC  
                                         l4572 10CB                                           l4476 0B35  
                                         l4468 0B31                                           l4396 0A47  
                                         l4740 0771                                           l4662 1DE0  
                                         l3598 0EDC                                           l3694 0B8F  
                                         l4566 10B3                                           l4558 10AD  
                                         l4494 07F7                                           l4478 09DA  
                                         l4750 0792                                           l3784 0D2A  
                                         l3776 0CFC                                           l3696 0B91  
                                         l4568 10BF                                           l4576 10D4  
                                         l3944 1D69                                           l4920 0679  
                                         l4818 165E                                           l3778 0D13  
                                         l3698 0B99                                           l3938 1CD8  
                                         l3962 1E6D                                           l4780 1641  
                                         l3788 0D2C                                           l4596 1712  
                                         l4908 0620                                           ?_log 00BE  
                                         l4846 1666                                           l4854 16E4  
                                         l4782 161D                                           l3798 0D55  
                                         l4934 06B7                                           l4918 068C  
                                         l4870 0454                                           l3990 12FA  
                                         l3958 1E63                                           l4758 079E  
                                         l4848 16DE                                           l4952 06CF  
                                         l4928 068E                                           l4872 0466  
                                         l3976 12C1                                           l4946 06C7  
                                         l4938 06BB                                           l3986 12EF  
                                         l3978 12CF                                           l4796 1648  
                                         l4964 06E3                                           l4884 055A  
                                         l4976 06F9                                           l4986 0704  
                                         ?_rot 0070                                           STR_1 20F4  
                                         STR_2 20DE                                           STR_3 20F4  
                                         STR_4 2109                                           STR_5 212D  
                                         STR_6 20E9                                           STR_7 20BA  
                                         STR_8 2125                                           STR_9 20C7  
                                         _LATA 0018                                           _LATB 0019  
                                         u3015 1DD2                                           _LATC 001A  
                                         u3035 1D0E                                           u3303 0F0A  
                                         u4015 12C4                                           u3225 0EA8  
                                         u3075 1124                                           u4035 12D0  
                                         u3180 0E82                                           u4045 12E4  
                                         u3190 0E83                                           u3175 0E77  
                                         u4055 12F0                                           u4135 1382  
                                         u3345 0F72                                           u4305 1E37  
                                         u4235 1EFA                                           u4405 15B5  
                                         u3445 0FBA                                           u3605 0C6F  
                                         u4325 1E46                                           u4165 139F  
                                         u6007 131A                                           u3295 0EE6  
                                         u3615 0CC5                                           u4255 1F04  
                                         u4335 1E4D                                           u6017 1322  
                                         u4425 15C7                                           u3625 0CDC  
                                         u4265 1F0E                                           u5145 074A  
                                         u6107 1055                                           u6027 132A  
                                         u3635 0CEB                                           u4275 1F16  
                                         u5155 076B                                           u4195 13B4  
                                         _PMD0 0796                                           u6117 1BC9  
                                         u6037 1332                                           u3645 0CFF  
                                         u5165 078C                                           _PMD1 0797  
                                  main@ftemp_C 013E                                           _PMD2 0798  
                                         u6047 133A                                           u3735 0D43  
                                         _PMD3 0799                                           _PMD4 079A  
                                         u6057 1342                                           u4465 15E1  
                                         u4385 15A1                                           u3745 0D5E  
                                         u3665 0D08                                           _PMD5 079B  
                                         u6067 134A                                           u3755 0D74  
                                         u3595 0C40                                           u6077 1352  
                                         u5605 093C                                           u2975 102A  
                                         u6087 135A                                           u5535 08FF  
                                         u3935 1D70                                           u4735 0AFD  
                                         u2985 1038                                           u6097 1362  
                                         u5705 099B                                           u5625 0945  
                                         u5545 0906                                           u3945 1D75  
                                         u4585 1ED8                                           u2995 1048  
                                         u5715 09B4                                           u5565 090F  
                                         u4845 127F                                           u5575 0923  
                                         u4695 0AE0                                           u3975 1E6E  
                                         u4865 1289                                           u4945 10B6  
                                         u3985 1E75                                           u4875 1293  
                                         u4885 129B                                           u4965 10C5  
                                         u5695 0980                                           u4975 10CC  
                                         u5937 042F                                           u5947 06EE  
                                         u5957 070F                                           u5967 168A  
                                         u5977 16B0                                           u5987 16D6  
                                         u5997 130B                      __size_of_OLED_pulseEnable 0008  
                                         _WPUA 1F39                                           _WPUB 1F44  
                                         _WPUC 1F4F                                           _WPUE 1F65  
                                __CFG_FCMEN$ON 0000                                  OLED_send@mode 0023  
                                         _main 0060                                           _duty 015E  
                                ?_EUSART1_Read 0070                                           _temp 0162  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           log@x 00BE  
                                __CFG_BOREN$ON 0000                                           start 0033  
                                  ?_OLED_write 0070                                    main@utemp_C 0134  
                              ___fldiv@new_exp 005F                     ??_TMR1_SetInterruptHandler 0022  
                                __CFG_CSWEN$ON 0000                              ___bmul@multiplier 0023  
                                __CFG_MCLRE$ON 0000                                          ??_log 00C2  
                                        ??_rot 0070                        __end_of_TMR0_Initialize 1CEE  
                           __size_of_OLED_init 0063                 ??_TMR0_DefaultInterruptHandler 0070  
                           __size_of_OLED_send 0017                 __size_of_OSCILLATOR_Initialize 000A  
                          __size_of_IOCAF4_ISR 000D                            __size_of_IOCAF5_ISR 000D  
                          __size_of_IOCAF7_ISR 000D                  __end_of_OSCILLATOR_Initialize 1C4B  
                          __size_of_IOCCF2_ISR 000D                                  ___fltol@sign1 0056  
                              __end_of___fladd 1000                                          ?_main 0070  
                              __end_of___fldiv 09D4                                __end_of___awdiv 12B0  
                                        STR_10 211C                                          STR_11 2000  
                                        STR_12 1800                                          STR_13 202D  
                                        STR_14 207D                                          STR_15 2113  
                                        STR_16 20D3                                          STR_17 2134  
                                __CFG_WDTE$OFF 0000                                __end_of___awmod 10E1  
                              __end_of___flmul 0DA1                                __end_of___flsub 1F58  
                              __end_of___fltol 13CC                                _TMR1_StartTimer 0800  
                              __end_of___lldiv 1303                                          _T1CLK 0211  
                              ___awdiv@divisor 0020                                          _T1CON 020E  
                              __end_of___lwdiv 1F23                                          i1l302 1DBD  
                                        i1l350 001E                                          i1l352 0028  
                                        i1l345 000E                                __end_of___lwmod 1E5A  
                                        i1l347 0015                                          i1l355 0031  
                                        i1l613 1FDF                                          i1l615 1FE9  
                                        i1l617 1FF3                                          i1l619 1FFD  
                              ___awdiv@counter 0025                                          _OSCEN 0891  
                                        _TMR0H 059D                                          _TMR1H 020D  
                                        _TMR0L 059C                                          _TMR1L 020C  
                                        _TRISA 0012                                          _TRISB 0013  
                                        _TRISC 0014                               _get_battery_volt 1EBC  
            __size_of_TMR0_SetInterruptHandler 0009                            ___lmul@multiplicand 0024  
                    ?_TMR0_SetInterruptHandler 0020                           _EUSART1_Transmit_ISR 1DA0  
                             __end_of_TMR0_ISR 1BBA                               __end_of_TMR1_ISR 1CAD  
                                __CFG_WRTB$OFF 0000                                  __CFG_WRTC$OFF 0000  
                               OLED_send@value 0025                                          _log10 105A  
                      __end_of_PIN_MANAGER_IOC 1D32                                          _fault 015C  
                              __end_of_dpowers 2109                                          _frexp 120E  
                                        _errno 0153                                __end_of_isdigit 1CDA  
                                        _power 0147                                          _round 1448  
                                        main@i 0146                                          _trunc 1174  
                      __end_of_TMR1_Initialize 1DA0                                          pclath 000A  
                               ??_EUSART1_Read 0020                                          status 0003  
                                        wtemp0 007E                                __end_of_sprintf 0B75  
                              _TMR1_WriteTimer 1CBC                                __initialization 0035  
                                  log@exponent 00C3                     __end_of_EUSART1_Initialize 1E2D  
                                 __end_of_main 0435                                 __CFG_SAFEN$OFF 0000  
                  ?_INTERRUPT_InterruptManager 0070                                         ??_main 00E9  
                               OLED_print_xy@s 0028                                 _main_menu$2066 00E0  
                               _main_menu$2067 00E2                                 _main_menu$2068 00E4  
                               _main_menu$1268 00DD                                 _main_menu$2069 00E6  
                      _IOCAF4_InterruptHandler 016D                        _IOCCF2_InterruptHandler 0167  
                        ?_EUSART1_Transmit_ISR 0070                            __size_of_OLED_write 000B  
                                       ?_log10 00C5                        _OLED_scrollDisplayRight 1BB1  
                                       _ADCON0 009D                                         _ADCON1 009E  
                                       ?_frexp 002C                                         _ADRESH 009C  
                                       _ADRESL 009B                               ___awdiv@dividend 0022  
                                       _ANSELA 1F38                                         _ANSELB 1F43  
                                       _ANSELC 1F4E                                         ?_round 00B4  
                           __CFG_RSTOSC$HFINT1 0000                                         _T0CON0 059E  
                                       _T0CON1 059F                                         _T1GATE 0210  
                                       _T1GCON 020F                                         ?_trunc 0058  
                                       _RC1REG 0119                                         _RC1STA 011D  
                      TMR1_WriteTimer@timerVal 0070                                         _ODCONA 1F3A  
                                       _ODCONB 1F45                                         _ODCONC 1F50  
                                       _RC6PPS 1F26                                         i1l4312 1C83  
                                       i1l4306 1C76                                         i1l4324 1C9D  
                                       i1l4318 1C90                                         i1l4342 1CC6  
                                       i1l3910 1FD8                                 __CFG_WDTCCS$SC 0000  
                                       i1l3922 1FF5                                         i1l3914 1FE1  
                                       i1l4652 1D26                                         i1l3870 0821  
                                       i1l3918 1FEB                                         i1l3880 0854  
                                       i1l4656 1D2C                                         i1l4648 1D20  
                                       i1l3858 1FBF                                         i1l3874 0834  
                                       i1l3866 080F                                         i1l3876 0841  
                                       i1l4698 1D50                              __end_of_OLED_init 1366  
                            __end_of_OLED_send 1D1A                                         _OSCFRQ 0893  
                                       _TX1REG 011A                                         _TX1STA 011E  
                             __end_of___xxtofl 15FD                                 __CFG_PWRTE$OFF 0000  
         __end_of_TMR1_DefaultInterruptHandler 0004          __size_of_TMR1_DefaultInterruptHandler 0001  
                 _TMR1_DefaultInterruptHandler 0003                                         ___flge 13CC  
                                       ___bmul 07EE                                         ___fleq 10E1  
                                       ___lmul 1E5A                        __end_of_TMR1_StartTimer 0803  
                                    ??___fladd 00A0                                         ___wmul 1D66  
                                    ??___fldiv 0055                                      ??___awdiv 0024  
                               __CFG_STVREN$ON 0000                                      ??___awmod 0024  
                                    ??___flmul 003B                           __size_of_get_current 0037  
                                    ??___flsub 006F                                      ??___fltol 0051  
                                    ??___lldiv 0034                                      ??___lwdiv 0024  
                                    ??___lwmod 002C                       __size_of_OLED_returnHome 0004  
                             ?_TMR0_Initialize 0070                                         _millis 0078  
                             ___awdiv@quotient 0027                          __size_of_check_status 00E9  
                                       log10@x 00C5                                ___awmod@divisor 0020  
                                       _timer0 1BE6                                         _timer1 1FC7  
                                ?_OLED_command 0070                                ___awmod@counter 0025  
                                       main@fH 0136                                 _PMD_Initialize 1BD6  
                                    ??_isdigit 0020                             __size_of__Umul8_16 0020  
                        OLED_waitForReady@busy 0020                       ADC_GetConversion@channel 0023  
                            OLED_command@value 0026                                         round@f 00B8  
                        __end_of_TMR0_CallBack 1C56                                         round@x 00B4  
     TMR1_SetInterruptHandler@InterruptHandler 0020       TMR0_SetInterruptHandler@InterruptHandler 0020  
   IOCCF2_SetInterruptHandler@InterruptHandler 0020     IOCAF7_SetInterruptHandler@InterruptHandler 0020  
   IOCAF5_SetInterruptHandler@InterruptHandler 0020     IOCAF4_SetInterruptHandler@InterruptHandler 0020  
                             ?_PIN_MANAGER_IOC 0070                                      ??_sprintf 0040  
                                       trunc@i 005D                                         trunc@x 0058  
                      __end_of_TMR1_WriteTimer 1CCB                                _eusart1RxBuffer 01A8  
                                 ??_IOCAF4_ISR 0078                                   ??_IOCAF5_ISR 0078  
                       __size_of_read_cur_volt 00D4                                   ??_IOCAF7_ISR 0071  
                                 ??_IOCCF2_ISR 0071                          __end_of_TMR1_CallBack 1C61  
                              _eusart1TxBuffer 01B0                               _OLED_pulseEnable 1BC6  
                                   ___flge@ff1 0020                                     ___flge@ff2 0024  
                             ?_TMR1_Initialize 0070                                   ___xxtofl@arg 002A  
                                 ___xxtofl@exp 0029                              _SYSTEM_Initialize 1CEE  
                                 ___xxtofl@val 0020                                     ___fleq@ff1 0020  
                                   ___fleq@ff2 0024                               __end_oflog@coeff 207D  
                      __end_of__initialization 005C                                 get_current@val 003C  
                                 ?_overcurrent 0070                             ?_SYSTEM_Initialize 0070  
                       __size_of_read_ntc_temp 004A                                   eval_poly@res 00BA  
                                   ___fltol@f1 004D                            ___bmul@multiplicand 0020  
                                 _check_status 15FD                       __size_of_OLED_write4bits 003E  
                               __pcstackCOMMON 0070                                   __pidataBANK3 1BDE  
                          ??_SYSTEM_Initialize 0023                                      ?_TMR0_ISR 0070  
                                    ?_TMR1_ISR 0070                  ?_TMR1_DefaultInterruptHandler 0070  
                                __end_of_log10 109B                              read_cur_volt@volt 0049  
                                __end_of_frexp 125E         __end_of_IOCAF4_DefaultInterruptHandler 1BA4  
      __size_of_IOCAF4_DefaultInterruptHandler 0001                 _IOCAF4_DefaultInterruptHandler 1BA3  
                                __end_of_round 14D3                                  __end_of_trunc 11C0  
                               ??_OLED_command 0026                         __end_of_PMD_Initialize 1BDE  
                           __end_of_IOCAF4_ISR 1C79                             __end_of_IOCAF5_ISR 1C86  
                           __end_of_IOCAF7_ISR 1C93                           __end_of_EUSART1_Read 1E01  
                           __end_of_IOCCF2_ISR 1CA0                         ??_EUSART1_Transmit_ISR 0070  
                    ??_OLED_scrollDisplayRight 0027                    __end_of_EUSART1_Receive_ISR 1D66  
                  ?_IOCAF5_SetInterruptHandler 0020         __end_of_IOCAF7_DefaultInterruptHandler 1BA5  
      __size_of_IOCAF7_DefaultInterruptHandler 0001                 _IOCAF7_DefaultInterruptHandler 1BA4  
                                      ??_log10 006F                         __size_of_OLED_print_xy 0032  
                                      ??_frexp 0031                      __end_of_SYSTEM_Initialize 1D03  
                                 sprintf@width 004C                                        ??_round 006F  
                                _eusart1RxHead 0161                                        ??_trunc 005C  
                                   _log10$2074 00C9                                  _eusart1TxHead 007D  
                                _eusart1RxTail 0160                             __size_of_main_menu 02E5  
                                   __pbssBANK0 006F                                     __pbssBANK1 00EC  
                                   __pbssBANK2 0147                                     __pbssBANK3 01A0  
                                _eusart1TxTail 00EE              _EUSART1_TxDefaultInterruptHandler 01C4  
                           __size_of_eval_poly 0094                ??_EUSART1_SetRxInterruptHandler 0022  
                                _current_state 007C               ??_IOCAF5_DefaultInterruptHandler 0070  
              ?_IOCAF5_DefaultInterruptHandler 0070                                   ??_OLED_write 0026  
       __end_of_IOCCF2_DefaultInterruptHandler 1BA6        __size_of_IOCCF2_DefaultInterruptHandler 0001  
               _IOCCF2_DefaultInterruptHandler 1BA5                        _IOCAF5_InterruptHandler 016B  
                     __end_of_get_battery_volt 1EEE                              __end_of__Umul8_16 1DE0  
                                   __pmaintext 0060                                        ?___flge 0020  
                                      ?___bmul 0020                                        ?___fleq 0020  
             __end_of_TMR0_SetInterruptHandler 1C2E                                        ?___lmul 0020  
                                      ?___wmul 0020                               ?_TMR1_StartTimer 0070  
                                   ??_TMR0_ISR 0070                                     ??_TMR1_ISR 0072  
                              __CFG_PPS1WAY$ON 0000                                     __pintentry 0004  
                                _read_cur_volt 071A                              _OLED_waitForReady 1D32  
                               ___lmul@product 0028                                        ?_timer0 0070  
                                      ?_timer1 0070                       ??_OLED_scrollDisplayLeft 0027  
                              ?_PMD_Initialize 0070                        __size_of_ADC_Initialize 0008  
                      __size_of_TMR1_StopTimer 0003                             ?_OLED_waitForReady 0070  
                                _read_ntc_temp 112A                              ??_OLED_returnHome 0027  
                                    ?___xxtofl 0020                                        _SP1BRGH 011C  
                                      _SP1BRGL 011B                                        _OSCCON1 088D  
                                      _OSCCON3 088F                                        _OSCSTAT 0890  
                                      _OSCTUNE 0892                             __end_of_OLED_write 1C6C  
                          ??_OLED_waitForReady 0020                               ?_TMR1_WriteTimer 0070  
                        read_cur_volt@volt_min 0046                                  _OLED_print_xy 1E8A  
                    __end_of_OLED_waitForReady 1D4B                                 ?_read_cur_volt 0070  
                              __size_of___flge 007C                                __size_of___bmul 0012  
                              __size_of___fleq 0049                                        ___fladd 0DA1  
                                      ___fldiv 085A                                        ___awdiv 125E  
                              __size_of___lmul 0030                                        ___awmod 109B  
                                      ___flmul 0B75                                        ___flsub 1F23  
                                      ___fltol 1366                                        ___lldiv 12B0  
                              __size_of___wmul 001C                                OLED_write@value 0026  
                                      ___lwdiv 1EEE                                        ___lwmod 1E2D  
                            __end_of_main_menu 071A                              ??_OLED_write4bits 0020  
                            __end_of_eval_poly 1567                                 ?_read_ntc_temp 0070  
                                      __ptext1 1448                                        __ptext2 1174  
                                      __ptext3 1366                                        __ptext4 1F23  
                                      __ptext5 112A                                        __ptext6 071A  
                                      __ptext7 1F58                                        __ptext8 1E5A  
                                      __ptext9 1EBC                                __size_of_timer0 0009  
                              __size_of_timer1 0039                 ??_TMR1_DefaultInterruptHandler 0070  
                              __CFG_WRTAPP$OFF 0000                                      _T1CONbits 020E  
                                      _dpowers 20FF                          _OSCILLATOR_Initialize 1C41  
                                      _current 01A0                                   __size_of_log 011A  
                                      _isdigit 1CCB                                   __size_of_rot 0038  
                                   ??___xxtofl 0024                               ___awmod@dividend 0022  
            __size_of_TMR1_SetInterruptHandler 0009                             _EUSART1_Initialize 1E01  
                     ??_PIN_MANAGER_Initialize 0022                      ?_TMR1_SetInterruptHandler 0020  
                                    _IOCAFbits 1F3F                                __CFG_WRTSAF$OFF 0000  
                                    _IOCCFbits 1F55                                      _IOCANbits 1F3E  
                                    _IOCAPbits 1F3D                                      _IOCCNbits 1F54  
                                    _IOCCPbits 1F53                                        main@fRH 0142  
                                      main@uRH 0132                     __size_of_SYSTEM_Initialize 0015  
                                      _sprintf 09D4                                        clrloop0 1BBB  
                                      _voltage 0159                           end_of_initialization 005C  
                          ?_EUSART1_Initialize 0070                                  main_menu@page 00EF  
                                main_menu@menu 00EC                           __end_of_OLED_command 1C41  
                                      init_ram 1BC0                                        initloop 1BC1  
                              ___lldiv@divisor 002C                                      _OLED_init 1303  
        __end_of_EUSART1_SetRxInterruptHandler 1BF8         __size_of_EUSART1_SetRxInterruptHandler 0009  
                _EUSART1_SetRxInterruptHandler 1BEF                                      _OLED_send 1D03  
                              ___lldiv@counter 0039                           __size_of_overcurrent 000F  
                          OLED_setCursor@F7522 01BC                                 ?_OLED_print_xy 0027  
                           OLED_print_xy@F7528 01B8                          __size_of_EUSART1_Read 0021  
                         ??_EUSART1_Initialize 0022                          __CFG_WDTCPS$WDTCPS_31 0000  
                     __end_of_OLED_pulseEnable 1BCE                       _TMR0_SetInterruptHandler 1C25  
                                    _PORTAbits 000C                                      _PORTCbits 000E  
              __size_of_OLED_scrollDisplayLeft 0004                                    ___fladd@grs 00AB  
                                ___xxtofl@sign 0028                                      _TRISCbits 0014  
                                  ___fldiv@grs 0061                                    ___fldiv@rem 005A  
                 ??_IOCAF4_SetInterruptHandler 0022                   ??_IOCAF7_SetInterruptHandler 0022  
                 ??_IOCCF2_SetInterruptHandler 0022                               __CFG_FEXTOSC$OFF 0000  
                                  ___flmul@grs 0041                                     _pushbutton 0803  
                                 _EUSART1_Read 1DE0                                     ?_OLED_init 0070  
                                   ?_OLED_send 0023                                  ??_get_current 003C  
                              ??_read_cur_volt 0044                     __size_of_OLED_waitForReady 0019  
                               __end_of___flge 1448                                 __end_of___bmul 0800  
                               __end_of___fleq 112A                                 __end_of___lmul 1E8A  
                              ??_read_ntc_temp 003A                                 __end_of___wmul 1D82  
                            __size_of_TMR0_ISR 0005                              __size_of_TMR1_ISR 000D  
                               _ADC_Initialize 1BCE            __size_of_IOCAF4_SetInterruptHandler 0009  
                               _TMR1_StopTimer 1BA6            __size_of_IOCAF7_SetInterruptHandler 0009  
                       ?_OSCILLATOR_Initialize 0070            __size_of_IOCCF2_SetInterruptHandler 0009  
                                   main_menu@i 00E8                                     main_menu@s 00A0  
                               __end_of_timer0 1BEF                                 __end_of_timer1 2000  
                          start_initialization 0035                                     eval_poly@d 00B0  
                                   eval_poly@n 00B2                                     eval_poly@x 00AC  
                     __size_of_TMR0_Initialize 0014                __size_of_PIN_MANAGER_Initialize 004E  
                     OLED_print_xy@row_offsets 002B                                    __end_of_log 1800  
                                  __end_of_rot 1FC7  EUSART1_SetRxInterruptHandler@interruptHandler 0020  
EUSART1_SetTxInterruptHandler@interruptHandler 0020                                     frexp@value 002C  
                       _OLED_scrollDisplayLeft 1BAD                       __size_of_PIN_MANAGER_IOC 0018  
                              ??_OLED_print_xy 002A                               __CFG_LPBOREN$OFF 0000  
                            ?_get_battery_volt 003A                       __size_of_TMR1_Initialize 001E  
                                     ??___flge 0028                                       ??___bmul 0021  
                                     ??___fleq 0028                               ??_PMD_Initialize 0020  
                                     ??___lmul 0028                                _OLED_returnHome 1BA9  
                                     ??___wmul 0024                             ??_get_battery_volt 003C  
                       __size_of_TMR0_CallBack 000B                 ?_EUSART1_SetRxInterruptHandler 0020  
                       __end_of_ADC_Initialize 1BD6                                      __Umul8_16 1DC0  
                       __end_of_TMR1_StopTimer 1BA9                                    __pdataBANK3 01B8  
                          __end_of_get_current 1F8F                                       ??_timer0 0070  
                                     ??_timer1 0070                         __size_of_TMR1_CallBack 000B  
       __end_of_IOCAF5_DefaultInterruptHandler 1BA3        __size_of_IOCAF5_DefaultInterruptHandler 0001  
               _IOCAF5_DefaultInterruptHandler 1BA2                                 _eusart1RxCount 015F  
                             OLED_print_xy@col 002F                                      ___fladd@a 006B  
                                    ___fladd@b 0067                               OLED_print_xy@row 0027  
                                    ___fldiv@a 004D                                      ___fldiv@b 0051  
                                    ___flmul@a 0037                                      ___flmul@b 0033  
                                  __pbssCOMMON 0078                                      ___flsub@a 00AC  
                                    ___flsub@b 00B0              _EUSART1_RxDefaultInterruptHandler 01C2  
                                    ___latbits 0003                  __size_of_EUSART1_Transmit_ISR 0020  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                                __pcstackBANK2 0120                          __size_of_OLED_command 000A  
                            __size_of___xxtofl 0096                                   _isdigit$1762 0020  
              ??_EUSART1_SetTxInterruptHandler 0022                                    ?_pushbutton 0070  
                 __size_of_EUSART1_Receive_ISR 001B                                    sprintf@flag 0049  
                                  sprintf@prec 0045                          _TMR0_InterruptHandler 0165  
                                    __pnvBANK2 0163                                      __pnvBANK3 01C0  
                              _OLED_write4bits 101C                                    ??_OLED_init 0027  
                                  ??_OLED_send 0024                        _IOCAF7_InterruptHandler 0169  
                                    _main$2070 0126                                      _main$2071 012A  
                                    _main$2072 012E                                      _main$2073 013A  
                             ___lwdiv@dividend 0022                         _PIN_MANAGER_Initialize 11C0  
             __end_of_TMR1_SetInterruptHandler 1C37                                       ?___fladd 0067  
                                     ?___fldiv 004D                                       ?___awdiv 0020  
                                     ?___awmod 0020                                       ?___flmul 0033  
                                     ?___flsub 00AC                                       ?___fltol 004D  
                                     ?___lldiv 002C                                     ?__Umul8_16 0020  
                                     ?___lwdiv 0020                                       ?___lwmod 0028  
                              ?_ADC_Initialize 0070                                ?_TMR1_StopTimer 0070  
                     ?_OLED_scrollDisplayRight 0070                   ??_INTERRUPT_InterruptManager 0078  
                                 _OLED_command 1C37                                       _BAUD1CON 011F  
                     __size_of_TMR1_StartTimer 0003                                      _main_menu 0435  
                                     ?_isdigit 0070                                      _eval_poly 14D3  
           __end_of_IOCAF4_SetInterruptHandler 1C0A                     _IOCAF4_SetInterruptHandler 1C01  
                                    _pb_millis 015D             __end_of_IOCAF7_SetInterruptHandler 1C1C  
                   _IOCAF7_SetInterruptHandler 1C13             __end_of_IOCCF2_SetInterruptHandler 1C25  
                   _IOCCF2_SetInterruptHandler 1C1C                               ___lwdiv@quotient 0025  
                               __size_of_log10 0041                                       ?_sprintf 002E  
                               __size_of_frexp 0050                                  _TMR0_CallBack 1C4B  
                               __size_of_round 008B                                 __size_of_trunc 004C  
                                _TMR1_CallBack 1C56                              ??_TMR0_Initialize 0022  
                               ___wmul@product 0024                                       _LATAbits 0018  
                                     _LATBbits 0019                                       _LATCbits 001A  
                      __end_of_OLED_returnHome 1BAD                                      clear_ram0 1BBA  
                                     _PIE0bits 0716                                       _PIE3bits 0719  
                                     _PIE4bits 071A                       __size_of_TMR1_WriteTimer 000F  
          __size_of_INTERRUPT_InterruptManager 002F                     ??_TMR0_SetInterruptHandler 0022  
                                     _PIR0bits 070C                                    _get_current 1F58  
                                     _PIR3bits 070F                                       _PIR4bits 0710  
                            __CFG_BBSIZE$BB512 0000                                       _TMR0_ISR 1BB5  
                                     _TMR1_ISR 1CA0                              ??_PIN_MANAGER_IOC 0078  
                            ?_OLED_pulseEnable 0070                              ??_TMR1_Initialize 0022  
                                   _ADCON0bits 009D                              ___wmul@multiplier 0020  
                                 _RX1DTPPSbits 1ECB                            __size_of_pushbutton 0057  
                           ??_OLED_pulseEnable 0020                                     ?_main_menu 0070  
                                   ?_eval_poly 00AC                                      main@ustat 0124  
                         OLED_write4bits@value 0022                               _transition_table 209E  
                               ?_TMR0_CallBack 0070                              ___lmul@multiplier 0020  
                      __end_of_OLED_write4bits 105A                                 ?_TMR1_CallBack 0070  
                                ??_overcurrent 0070                          EUSART1_Read@readValue 0021  
                                    frexp@eptr 0030          __end_of_EUSART1_SetTxInterruptHandler 1C01  
       __size_of_EUSART1_SetTxInterruptHandler 0009                  _EUSART1_SetTxInterruptHandler 1BF8  
                                ?_check_status 0070                              _ADC_GetConversion 1000  
              __end_of_OLED_scrollDisplayRight 1BB5                            get_battery_volt@val 0040  
                      ??_OSCILLATOR_Initialize 0020                                    ??__Umul8_16 0022  
                           ?_ADC_GetConversion 0020                               __size_of___fladd 025F  
                             __size_of___fldiv 017A                               __size_of___awdiv 0052  
                             __size_of___awmod 0046                               __size_of___flmul 022C  
                             __size_of___flsub 0035                               __size_of___fltol 0066  
                             __size_of___lldiv 0053                    __size_of_EUSART1_Initialize 002C  
                             __size_of___lwdiv 0035                               __size_of___lwmod 002D  
                     _TMR1_SetInterruptHandler 1C2E                          _TMR1_InterruptHandler 01C0  
                          ??_ADC_GetConversion 0022                                     sprintf@len 0047  
                                   sprintf@val 004A                                       ___xxtofl 1567  
                                   _T0CON0bits 059E                               __size_of_isdigit 000F  
                              ___lwdiv@divisor 0020                                ___lwdiv@counter 0027  
                                     __ptext10 12B0                                       __ptext11 1000  
                                     __ptext20 125E                                       __ptext12 0435  
                                     __ptext21 1BB1                                       __ptext13 09D4  
                                   _T1GCONbits 020F                                       __ptext30 0DA1  
                                     __ptext22 1BAD                                       __ptext14 1CCB  
                                     __ptext31 1567                                       __ptext23 105A  
                                     __ptext15 1D66                                       __ptext40 1D82  
                                     __ptext32 13CC                                       __ptext24 16E6  
                                     __ptext16 1E2D                                       __ptext41 1C2E  
                                     __ptext33 15FD                                       __ptext25 120E  
                                     __ptext17 1EEE                                       __ptext50 1C41  
                                     __ptext42 1CDA                                       __ptext34 0800  
                                     __ptext26 10E1                                       __ptext18 07EE  
                                     __ptext51 1E01                                       __ptext43 1C25  
                                     __ptext35 1BA9                                       __ptext27 14D3  
                                     __ptext19 109B                                       __ptext60 1BC6  
                                     __ptext52 1BF8                                       __ptext44 1BD6  
                                     __ptext36 1E8A                                       __ptext28 0B75  
                                     __ptext61 1DE0                                       __ptext53 1BEF  
                                     __ptext45 11C0                                       __ptext37 1C61  
                                     __ptext29 1DC0                                       __ptext70 0002  
                                     __ptext54 1BCE                                       __ptext46 1C1C  
                                     __ptext38 085A                                       __ptext71 1BE6  
                                     __ptext63 1CA0                                       __ptext55 1303  
                                     __ptext47 1C13                                       __ptext39 1CEE  
                                     __ptext80 1C79                                       __ptext72 1D1A  
                                     __ptext64 1CBC                                       __ptext56 1C37  
                                     __ptext48 1C0A                                       __ptext81 1BA3  
                                     __ptext73 1C93                                       __ptext65 1C56  
                                     __ptext57 1D32                                       __ptext49 1C01  
                                     __ptext82 1F8F                                       __ptext74 1BA5  
                                     __ptext66 0003                                       __ptext58 1D03  
                                     __ptext83 1BA2                                       __ptext75 1CAD  
                                     __ptext67 1FC7                                       __ptext59 101C  
                                     __ptext84 1C6C                                       __ptext76 1BA6  
                                     __ptext68 1BB5                                       __ptext85 1DA0  
                                     __ptext77 1C86                                       __ptext69 1C4B  
                                     __ptext86 1D4B                                       __ptext78 1BA4  
                                     __ptext79 0803                   ??_IOCAF5_SetInterruptHandler 0022  
                      ?_OLED_scrollDisplayLeft 0070                              ??_TMR1_StartTimer 0020  
                                   _IOCAF4_ISR 1C6C                                     _IOCAF5_ISR 1C79  
                             __size_of_sprintf 01A1                                     _IOCAF7_ISR 1C86  
                                   _IOCCF2_ISR 1C93                               read_ntc_temp@val 003E  
                                   trunc@expon 0061                                  __size_of_main 03D5  
                             ?_OLED_returnHome 0070           __end_of_TMR0_DefaultInterruptHandler 0003  
        __size_of_TMR0_DefaultInterruptHandler 0001                   _TMR0_DefaultInterruptHandler 0002  
                               ??_check_status 0030                      __end_of_ADC_GetConversion 101C  
                         __CFG_WDTCWS$WDTCWS_7 0000                                       _ntc_temp 0157  
                                   _RC1STAbits 011D                            __end_of_overcurrent 1CBC  
                        __end_of_read_cur_volt 07EE                                       int$flags 007E  
           __end_of_INTERRUPT_InterruptManager 0033                     _INTERRUPT_InterruptManager 0004  
                            ??_TMR1_WriteTimer 0072                            _EUSART1_Receive_ISR 1D4B  
                        __end_of_read_ntc_temp 1174            __size_of_IOCAF5_SetInterruptHandler 0009  
                                     log@coeff 2059                                    ??_main_menu 0050  
                                   _INTCONbits 000B                                    ??_eval_poly 00B4  
                               main_menu@pages 00DF                      __size_of_get_battery_volt 0032  
                              ??_TMR0_CallBack 0070                 __end_of_OLED_scrollDisplayLeft 1BB1  
                               __pstringtext10 20D3                                 __pstringtext11 20DE  
                               __pstringtext20 0000                                 __pstringtext12 20E9  
                               __pstringtext13 20F4                                 __pstringtext14 2109  
                               __pstringtext15 2113                                 __pstringtext16 211C  
                               __pstringtext17 2125                                 __pstringtext18 212D  
                               __pstringtext19 2134                                       isdigit@c 0021  
                              ??_TMR1_CallBack 0071                                 read_cur_volt@i 0048  
                             ?_OLED_write4bits 0070                                       intlevel1 0000  
                                    sprintf@ap 0046                                      sprintf@cp 0044  
                                    sprintf@sp 004E                           ?_EUSART1_Receive_ISR 0070  
                                 ??_pushbutton 0070                               ___lwmod@dividend 002A  
                             ___lldiv@dividend 0030                        ?_PIN_MANAGER_Initialize 0070  
                            __CFG_CLKOUTEN$OFF 0000                                     _OLED_write 1C61  
                 __end_of_EUSART1_Transmit_ISR 1DC0                               ??_ADC_Initialize 0020  
                             ??_TMR1_StopTimer 0070                                       rot@input 0077  
                ?_TMR0_DefaultInterruptHandler 0070                          __end_of_OLED_print_xy 1EBC  
               ?_EUSART1_SetTxInterruptHandler 0020                                  __pstringtext1 209E  
                                __pstringtext2 20FF                                  __pstringtext3 2059  
                                __pstringtext4 1800                                  __pstringtext5 2000  
                                __pstringtext6 202D                                  __pstringtext7 207D  
                                __pstringtext8 20BA                                  __pstringtext9 20C7  
                       __Umul8_16@multiplicand 0020                                       sprintf@c 004F  
                                     sprintf@f 002E                             __end_of_pushbutton 085A  
                             ___lldiv@quotient 0035                                ___lwmod@divisor 0028  
                              _TMR0_Initialize 1CDA                                ___lwmod@counter 002D  
                  ?_IOCAF4_SetInterruptHandler 0020                    ?_IOCAF7_SetInterruptHandler 0020  
                  ?_IOCCF2_SetInterruptHandler 0020                                     _TX1STAbits 011E  
                                ___fladd@signs 00A8               __size_of_OLED_scrollDisplayRight 0004  
                                  ?_IOCAF4_ISR 0070                                    ?_IOCAF5_ISR 0070  
                                  ?_IOCAF7_ISR 0070                                    ?_IOCCF2_ISR 0070  
                        ??_EUSART1_Receive_ISR 0070                 __end_of_PIN_MANAGER_Initialize 120E  
             ??_IOCAF4_DefaultInterruptHandler 0070                ?_IOCAF4_DefaultInterruptHandler 0070  
                                 ___fladd@aexp 00A9                                   ___fladd@bexp 00AA  
                              _PIN_MANAGER_IOC 1D1A                                    _overcurrent 1CAD  
                         __Umul8_16@multiplier 0028                     __size_of_ADC_GetConversion 001C  
                              _TMR1_Initialize 1D82                                   ?_get_current 003A  
                            __Umul8_16@product 0024  
