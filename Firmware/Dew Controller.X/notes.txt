--- DATA STRUCTURE ---
--- GLOBAL ---
voltage
voltage min 
actual power 
temperature
humidity
dewpoint
temp_aux
dp offset
sky temp
fudge factor
groupA[4], groupB[4]

--- PER CHANNEL ---
current
max power Pmax
power required Preq
power attained Patt
duty cycle required DCreq
duty cycle attained DCatt
mode:auto|manual
status:on|off|open|short|disabled|removed
lens diameter

--- PERSISTENT DATA ---
chX
	lens dia
	mode (auto|manual)
	power

--- STATUS WORD ---
0 = ok, 1 = warning
Battery low
No sensor unit
No aux temp
typedef struct {
	unsigned BATLO:1;
	unsigned NOSENSOR:1;
	unsigned NOAUXTEMP:1;
} STATUS

--- ERROR MESSAGE ---
signed int8_t g_mp = -1;
function addMessage(message number)
	add message to message stack
	uint8_t messages[MESSAGE_STACK];
	if mp <= MESSAGE_STACK mp++;
	else f*ck it
	messages[mp] = message number;

function showMessages()
	static scrollPos;
	scroll through message[mp]
	if key mp-- & scrollPos = 0;

--- MAIN LOOP ---
read temp, humi, dp over rs232
	no data?
		if STATUS.NOSENSOR == 0 
			warning: check sensor 
		STATUS.NOSENSOR = 1;
		
read aux temp
	value out of range?
		STATUS.NOAUXTEMP = 1;
		
read voltage
read current
calc total power

current > [max load switch current] -> overcurrent (shouldn't happen)
	turn all channels off
	turn off load switch
		measure current again
		still overcurrent?
			show error!
	show error!

test voltage level
	voltage < [turn off]
		turn off load switch
		turn off oled
		power save 
	voltage min > [turn off] < [warn low]
		show warning low bat
	voltage > [warn high] < [crit]
		show warning high bat
	voltage > [crit]
		turn off oled power and load switch
		power save

calculate required power for each heater
	thermal radiation / stefan bolzman law
		epsilon = 0,95
		rho = 5,67e-8
		d = 0,0254 * lens dia
		A = PI * d^2 / 4
		T1 = tau + offset + 273,15
		T2 = tsky + 273,15
		phi = epsilon * rho * A * (T1^4 - T2^4)		
		
	Approx. heater temp. required
		p = 2 * PI * 0,0254 * lens dia
		b = 0,03 (width heat strip)
		A = p * b
		k = 0,85 (glas)
		Rth = lens dia/2 * (k * A)
		dt = phi * Rth - tau
	
	Preq = phi * fudge factor

control loop idle?
	test each heater
		if not disabled
			switch on 
			read voltage
			read current
			switch off
			store min. voltage
			current < xxx -> open
				if status changed?
					status = removed
					show warning heater removed
			current > xxx -> short
				fault detected? 
					status = disabled
					clear fault (cycle load switch)
					show warning heater short
			calculate Pmax
				Pmax = voltage * current
		
	calculate duty cycle for each channel
		DC = Pmax / Prequired
	
	optimize channel utilization
	start control loop
	
show warnings

show menu
	
--- INTERRUPT SERVICE ROUTINES ---
control loop (every 100ms)
	if not idle?
		counter < 1000?
			counter++;
		foreach channel in groupA
			counter <= DC?
				switch on
			else
				switch off
				channel in groupB?
					counter <= DC?
						switch on
					else 
						switch off
		idle = true

	