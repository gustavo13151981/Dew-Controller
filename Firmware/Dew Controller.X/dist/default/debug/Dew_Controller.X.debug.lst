

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Tue Jan 21 00:27:10 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F15356 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 110 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 130 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 277 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 510 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   120                           PORTB equ 0Dh ;# 
   121  000D                     # 572 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   122                           PORTC equ 0Eh ;# 
   123  000E                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   124                           PORTE equ 010h ;# 
   125  0010                     # 655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   126                           TRISA equ 012h ;# 
   127  0012                     # 717 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   128                           TRISB equ 013h ;# 
   129  0013                     # 779 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   130                           TRISC equ 014h ;# 
   131  0014                     # 841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   132                           TRISE equ 016h ;# 
   133  0016                     # 862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   134                           LATA equ 018h ;# 
   135  0018                     # 924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   136                           LATB equ 019h ;# 
   137  0019                     # 986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   138                           LATC equ 01Ah ;# 
   139  001A                     # 1048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   140                           ADRES equ 09Bh ;# 
   141  009B                     # 1055 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   142                           ADRESL equ 09Bh ;# 
   143  009B                     # 1125 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   144                           ADRESH equ 09Ch ;# 
   145  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   146                           ADCON0 equ 09Dh ;# 
   147  009D                     # 1272 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   148                           ADCON1 equ 09Eh ;# 
   149  009E                     # 1338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   150                           ADACT equ 09Fh ;# 
   151  009F                     # 1390 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   152                           RC1REG equ 0119h ;# 
   153  0119                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   154                           RCREG equ 0119h ;# 
   155  0119                     # 1399 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   156                           RCREG1 equ 0119h ;# 
   157  0119                     # 1444 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   158                           TX1REG equ 011Ah ;# 
   159  011A                     # 1449 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   160                           TXREG1 equ 011Ah ;# 
   161  011A                     # 1453 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   162                           TXREG equ 011Ah ;# 
   163  011A                     # 1498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   164                           SP1BRG equ 011Bh ;# 
   165  011B                     # 1505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   166                           SP1BRGL equ 011Bh ;# 
   167  011B                     # 1510 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   168                           SPBRG equ 011Bh ;# 
   169  011B                     # 1514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   170                           SPBRG1 equ 011Bh ;# 
   171  011B                     # 1518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   172                           SPBRGL equ 011Bh ;# 
   173  011B                     # 1575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   174                           SP1BRGH equ 011Ch ;# 
   175  011C                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   176                           SPBRGH equ 011Ch ;# 
   177  011C                     # 1584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   178                           SPBRGH1 equ 011Ch ;# 
   179  011C                     # 1629 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   180                           RC1STA equ 011Dh ;# 
   181  011D                     # 1634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   182                           RCSTA1 equ 011Dh ;# 
   183  011D                     # 1638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   184                           RCSTA equ 011Dh ;# 
   185  011D                     # 1809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   186                           TX1STA equ 011Eh ;# 
   187  011E                     # 1814 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   188                           TXSTA1 equ 011Eh ;# 
   189  011E                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   190                           TXSTA equ 011Eh ;# 
   191  011E                     # 1989 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   192                           BAUD1CON equ 011Fh ;# 
   193  011F                     # 1994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   194                           BAUDCON1 equ 011Fh ;# 
   195  011F                     # 1998 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   196                           BAUDCTL1 equ 011Fh ;# 
   197  011F                     # 2002 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   198                           BAUDCON equ 011Fh ;# 
   199  011F                     # 2006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   200                           BAUDCTL equ 011Fh ;# 
   201  011F                     # 2235 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   202                           SSP1BUF equ 018Ch ;# 
   203  018C                     # 2255 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   204                           SSP1ADD equ 018Dh ;# 
   205  018D                     # 2375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   206                           SSP1MSK equ 018Eh ;# 
   207  018E                     # 2445 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   208                           SSP1STAT equ 018Fh ;# 
   209  018F                     # 2809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   210                           SSP1CON1 equ 0190h ;# 
   211  0190                     # 2929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   212                           SSP1CON2 equ 0191h ;# 
   213  0191                     # 3116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   214                           SSP1CON3 equ 0192h ;# 
   215  0192                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   216                           SSP2BUF equ 0196h ;# 
   217  0196                     # 3198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   218                           SSP2ADD equ 0197h ;# 
   219  0197                     # 3318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   220                           SSP2MSK equ 0198h ;# 
   221  0198                     # 3388 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   222                           SSP2STAT equ 0199h ;# 
   223  0199                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   224                           SSP2CON1 equ 019Ah ;# 
   225  019A                     # 3872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   226                           SSP2CON2 equ 019Bh ;# 
   227  019B                     # 4059 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   228                           SSP2CON3 equ 019Ch ;# 
   229  019C                     # 4121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   230                           TMR1 equ 020Ch ;# 
   231  020C                     # 4128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   232                           TMR1L equ 020Ch ;# 
   233  020C                     # 4298 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   234                           TMR1H equ 020Dh ;# 
   235  020D                     # 4418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   236                           T1CON equ 020Eh ;# 
   237  020E                     # 4514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   238                           T1GCON equ 020Fh ;# 
   239  020F                     # 4519 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   240                           PR1 equ 020Fh ;# 
   241  020F                     # 4710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   242                           T1GATE equ 0210h ;# 
   243  0210                     # 4715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   244                           TMR1GATE equ 0210h ;# 
   245  0210                     # 4876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   246                           T1CLK equ 0211h ;# 
   247  0211                     # 4881 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   248                           TMR1CLK equ 0211h ;# 
   249  0211                     # 5018 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   250                           T2TMR equ 028Ch ;# 
   251  028C                     # 5023 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   252                           TMR2 equ 028Ch ;# 
   253  028C                     # 5072 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   254                           T2PR equ 028Dh ;# 
   255  028D                     # 5077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   256                           PR2 equ 028Dh ;# 
   257  028D                     # 5126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   258                           T2CON equ 028Eh ;# 
   259  028E                     # 5272 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   260                           T2HLT equ 028Fh ;# 
   261  028F                     # 5400 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   262                           T2CLKCON equ 0290h ;# 
   263  0290                     # 5480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   264                           T2RST equ 0291h ;# 
   265  0291                     # 5560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   266                           CCPR1 equ 030Ch ;# 
   267  030C                     # 5567 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   268                           CCPR1L equ 030Ch ;# 
   269  030C                     # 5587 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   270                           CCPR1H equ 030Dh ;# 
   271  030D                     # 5607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   272                           CCP1CON equ 030Eh ;# 
   273  030E                     # 5734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   274                           CCP1CAP equ 030Fh ;# 
   275  030F                     # 5802 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   276                           CCPR2 equ 0310h ;# 
   277  0310                     # 5809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   278                           CCPR2L equ 0310h ;# 
   279  0310                     # 5829 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   280                           CCPR2H equ 0311h ;# 
   281  0311                     # 5849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   282                           CCP2CON equ 0312h ;# 
   283  0312                     # 5976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   284                           CCP2CAP equ 0313h ;# 
   285  0313                     # 6044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   286                           PWM3DC equ 0314h ;# 
   287  0314                     # 6051 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   288                           PWM3DCL equ 0314h ;# 
   289  0314                     # 6117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   290                           PWM3DCH equ 0315h ;# 
   291  0315                     # 6287 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   292                           PWM3CON equ 0316h ;# 
   293  0316                     # 6343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   294                           PWM4DC equ 0318h ;# 
   295  0318                     # 6350 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   296                           PWM4DCL equ 0318h ;# 
   297  0318                     # 6416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   298                           PWM4DCH equ 0319h ;# 
   299  0319                     # 6586 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   300                           PWM4CON equ 031Ah ;# 
   301  031A                     # 6642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   302                           PWM5DC equ 031Ch ;# 
   303  031C                     # 6649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   304                           PWM5DCL equ 031Ch ;# 
   305  031C                     # 6715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   306                           PWM5DCH equ 031Dh ;# 
   307  031D                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   308                           PWM5CON equ 031Eh ;# 
   309  031E                     # 6941 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   310                           PWM6DC equ 038Ch ;# 
   311  038C                     # 6948 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   312                           PWM6DCL equ 038Ch ;# 
   313  038C                     # 7014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   314                           PWM6DCH equ 038Dh ;# 
   315  038D                     # 7184 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   316                           PWM6CON equ 038Eh ;# 
   317  038E                     # 7242 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   318                           NCO1ACC equ 058Ch ;# 
   319  058C                     # 7249 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   320                           NCO1ACCL equ 058Ch ;# 
   321  058C                     # 7319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   322                           NCO1ACCH equ 058Dh ;# 
   323  058D                     # 7389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   324                           NCO1ACCU equ 058Eh ;# 
   325  058E                     # 7437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   326                           NCO1INC equ 058Fh ;# 
   327  058F                     # 7444 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   328                           NCO1INCL equ 058Fh ;# 
   329  058F                     # 7514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   330                           NCO1INCH equ 0590h ;# 
   331  0590                     # 7584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   332                           NCO1INCU equ 0591h ;# 
   333  0591                     # 7630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   334                           NCO1CON equ 0592h ;# 
   335  0592                     # 7670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   336                           NCO1CLK equ 0593h ;# 
   337  0593                     # 7736 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   338                           TMR0L equ 059Ch ;# 
   339  059C                     # 7741 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   340                           TMR0 equ 059Ch ;# 
   341  059C                     # 7874 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   342                           TMR0H equ 059Dh ;# 
   343  059D                     # 7879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   344                           PR0 equ 059Dh ;# 
   345  059D                     # 8128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   346                           T0CON0 equ 059Eh ;# 
   347  059E                     # 8198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   348                           T0CON1 equ 059Fh ;# 
   349  059F                     # 8309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   350                           CWG1CLKCON equ 060Ch ;# 
   351  060C                     # 8337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   352                           CWG1DAT equ 060Dh ;# 
   353  060D                     # 8383 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   354                           CWG1DBR equ 060Eh ;# 
   355  060E                     # 8487 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   356                           CWG1DBF equ 060Fh ;# 
   357  060F                     # 8591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   358                           CWG1CON0 equ 0610h ;# 
   359  0610                     # 8692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   360                           CWG1CON1 equ 0611h ;# 
   361  0611                     # 8770 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   362                           CWG1AS0 equ 0612h ;# 
   363  0612                     # 8890 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   364                           CWG1AS1 equ 0613h ;# 
   365  0613                     # 8934 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   366                           CWG1STR equ 0614h ;# 
   367  0614                     # 9046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   368                           PIR0 equ 070Ch ;# 
   369  070C                     # 9079 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   370                           PIR1 equ 070Dh ;# 
   371  070D                     # 9118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   372                           PIR2 equ 070Eh ;# 
   373  070E                     # 9151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   374                           PIR3 equ 070Fh ;# 
   375  070F                     # 9213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   376                           PIR4 equ 0710h ;# 
   377  0710                     # 9239 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   378                           PIR5 equ 0711h ;# 
   379  0711                     # 9284 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   380                           PIR6 equ 0712h ;# 
   381  0712                     # 9310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   382                           PIR7 equ 0713h ;# 
   383  0713                     # 9352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   384                           PIE0 equ 0716h ;# 
   385  0716                     # 9385 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   386                           PIE1 equ 0717h ;# 
   387  0717                     # 9424 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   388                           PIE2 equ 0718h ;# 
   389  0718                     # 9457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   390                           PIE3 equ 0719h ;# 
   391  0719                     # 9519 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   392                           PIE4 equ 071Ah ;# 
   393  071A                     # 9545 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   394                           PIE5 equ 071Bh ;# 
   395  071B                     # 9590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   396                           PIE6 equ 071Ch ;# 
   397  071C                     # 9616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   398                           PIE7 equ 071Dh ;# 
   399  071D                     # 9658 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   400                           PMD0 equ 0796h ;# 
   401  0796                     # 9703 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   402                           PMD1 equ 0797h ;# 
   403  0797                     # 9751 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   404                           PMD2 equ 0798h ;# 
   405  0798                     # 9796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   406                           PMD3 equ 0799h ;# 
   407  0799                     # 9846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   408                           PMD4 equ 079Ah ;# 
   409  079A                     # 9891 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   410                           PMD5 equ 079Bh ;# 
   411  079B                     # 9930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   412                           WDTCON0 equ 080Ch ;# 
   413  080C                     # 10005 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   414                           WDTCON1 equ 080Dh ;# 
   415  080D                     # 10099 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   416                           WDTPSL equ 080Eh ;# 
   417  080E                     # 10227 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   418                           WDTPSH equ 080Fh ;# 
   419  080F                     # 10355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   420                           WDTTMR equ 0810h ;# 
   421  0810                     # 10437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   422                           BORCON equ 0811h ;# 
   423  0811                     # 10464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   424                           VREGCON equ 0812h ;# 
   425  0812                     # 10485 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   426                           PCON0 equ 0813h ;# 
   427  0813                     # 10547 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   428                           PCON1 equ 0814h ;# 
   429  0814                     # 10568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   430                           NVMADR equ 081Ah ;# 
   431  081A                     # 10575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   432                           NVMADRL equ 081Ah ;# 
   433  081A                     # 10637 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   434                           NVMADRH equ 081Bh ;# 
   435  081B                     # 10693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   436                           NVMDAT equ 081Ch ;# 
   437  081C                     # 10700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   438                           NVMDATL equ 081Ch ;# 
   439  081C                     # 10762 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   440                           NVMDATH equ 081Dh ;# 
   441  081D                     # 10812 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   442                           NVMCON1 equ 081Eh ;# 
   443  081E                     # 10868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   444                           NVMCON2 equ 081Fh ;# 
   445  081F                     # 10888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   446                           CPUDOZE equ 088Ch ;# 
   447  088C                     # 10953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   448                           OSCCON1 equ 088Dh ;# 
   449  088D                     # 11023 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   450                           OSCCON2 equ 088Eh ;# 
   451  088E                     # 11093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   452                           OSCCON3 equ 088Fh ;# 
   453  088F                     # 11133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   454                           OSCSTAT equ 0890h ;# 
   455  0890                     # 11190 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   456                           OSCEN equ 0891h ;# 
   457  0891                     # 11241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   458                           OSCTUNE equ 0892h ;# 
   459  0892                     # 11299 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   460                           OSCFRQ equ 0893h ;# 
   461  0893                     # 11339 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   462                           CLKRCON equ 0895h ;# 
   463  0895                     # 11404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   464                           CLKRCLK equ 0896h ;# 
   465  0896                     # 11450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   466                           FVRCON equ 090Ch ;# 
   467  090C                     # 11526 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   468                           DAC1CON0 equ 090Eh ;# 
   469  090E                     # 11627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   470                           DAC1CON1 equ 090Fh ;# 
   471  090F                     # 11679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   472                           ZCDCON equ 091Fh ;# 
   473  091F                     # 11725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   474                           CMOUT equ 098Fh ;# 
   475  098F                     # 11730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   476                           CMSTAT equ 098Fh ;# 
   477  098F                     # 11803 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   478                           CM1CON0 equ 0990h ;# 
   479  0990                     # 11883 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   480                           CM1CON1 equ 0991h ;# 
   481  0991                     # 11923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   482                           CM1NCH equ 0992h ;# 
   483  0992                     # 11983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   484                           CM1PCH equ 0993h ;# 
   485  0993                     # 12043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   486                           CM2CON0 equ 0994h ;# 
   487  0994                     # 12123 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   488                           CM2CON1 equ 0995h ;# 
   489  0995                     # 12163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   490                           CM2NCH equ 0996h ;# 
   491  0996                     # 12223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   492                           CM2PCH equ 0997h ;# 
   493  0997                     # 12283 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   494                           RC2REG equ 0A19h ;# 
   495  0A19                     # 12288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   496                           RCREG2 equ 0A19h ;# 
   497  0A19                     # 12321 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   498                           TX2REG equ 0A1Ah ;# 
   499  0A1A                     # 12326 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   500                           TXREG2 equ 0A1Ah ;# 
   501  0A1A                     # 12359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   502                           SP2BRG equ 0A1Bh ;# 
   503  0A1B                     # 12366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   504                           SP2BRGL equ 0A1Bh ;# 
   505  0A1B                     # 12371 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   506                           SPBRG2 equ 0A1Bh ;# 
   507  0A1B                     # 12404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   508                           SP2BRGH equ 0A1Ch ;# 
   509  0A1C                     # 12409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   510                           SPBRGH2 equ 0A1Ch ;# 
   511  0A1C                     # 12442 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   512                           RC2STA equ 0A1Dh ;# 
   513  0A1D                     # 12447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   514                           RCSTA2 equ 0A1Dh ;# 
   515  0A1D                     # 12564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   516                           TX2STA equ 0A1Eh ;# 
   517  0A1E                     # 12569 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   518                           TXSTA2 equ 0A1Eh ;# 
   519  0A1E                     # 12686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   520                           BAUD2CON equ 0A1Fh ;# 
   521  0A1F                     # 12691 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   522                           BAUDCON2 equ 0A1Fh ;# 
   523  0A1F                     # 12695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   524                           BAUDCTL2 equ 0A1Fh ;# 
   525  0A1F                     # 12836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   526                           CLCDATA equ 01E0Fh ;# 
   527  1E0F                     # 12874 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   528                           CLC1CON equ 01E10h ;# 
   529  1E10                     # 12992 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   530                           CLC1POL equ 01E11h ;# 
   531  1E11                     # 13070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   532                           CLC1SEL0 equ 01E12h ;# 
   533  1E12                     # 13174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   534                           CLC1SEL1 equ 01E13h ;# 
   535  1E13                     # 13278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   536                           CLC1SEL2 equ 01E14h ;# 
   537  1E14                     # 13382 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   538                           CLC1SEL3 equ 01E15h ;# 
   539  1E15                     # 13486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   540                           CLC1GLS0 equ 01E16h ;# 
   541  1E16                     # 13598 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   542                           CLC1GLS1 equ 01E17h ;# 
   543  1E17                     # 13710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   544                           CLC1GLS2 equ 01E18h ;# 
   545  1E18                     # 13822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   546                           CLC1GLS3 equ 01E19h ;# 
   547  1E19                     # 13934 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   548                           CLC2CON equ 01E1Ah ;# 
   549  1E1A                     # 14052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   550                           CLC2POL equ 01E1Bh ;# 
   551  1E1B                     # 14130 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   552                           CLC2SEL0 equ 01E1Ch ;# 
   553  1E1C                     # 14234 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   554                           CLC2SEL1 equ 01E1Dh ;# 
   555  1E1D                     # 14338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   556                           CLC2SEL2 equ 01E1Eh ;# 
   557  1E1E                     # 14442 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   558                           CLC2SEL3 equ 01E1Fh ;# 
   559  1E1F                     # 14546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   560                           CLC2GLS0 equ 01E20h ;# 
   561  1E20                     # 14658 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   562                           CLC2GLS1 equ 01E21h ;# 
   563  1E21                     # 14770 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   564                           CLC2GLS2 equ 01E22h ;# 
   565  1E22                     # 14882 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   566                           CLC2GLS3 equ 01E23h ;# 
   567  1E23                     # 14994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   568                           CLC3CON equ 01E24h ;# 
   569  1E24                     # 15112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   570                           CLC3POL equ 01E25h ;# 
   571  1E25                     # 15190 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   572                           CLC3SEL0 equ 01E26h ;# 
   573  1E26                     # 15294 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   574                           CLC3SEL1 equ 01E27h ;# 
   575  1E27                     # 15398 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   576                           CLC3SEL2 equ 01E28h ;# 
   577  1E28                     # 15502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   578                           CLC3SEL3 equ 01E29h ;# 
   579  1E29                     # 15606 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   580                           CLC3GLS0 equ 01E2Ah ;# 
   581  1E2A                     # 15718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   582                           CLC3GLS1 equ 01E2Bh ;# 
   583  1E2B                     # 15830 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   584                           CLC3GLS2 equ 01E2Ch ;# 
   585  1E2C                     # 15942 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   586                           CLC3GLS3 equ 01E2Dh ;# 
   587  1E2D                     # 16054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   588                           CLC4CON equ 01E2Eh ;# 
   589  1E2E                     # 16172 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   590                           CLC4POL equ 01E2Fh ;# 
   591  1E2F                     # 16250 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   592                           CLC4SEL0 equ 01E30h ;# 
   593  1E30                     # 16354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   594                           CLC4SEL1 equ 01E31h ;# 
   595  1E31                     # 16458 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   596                           CLC4SEL2 equ 01E32h ;# 
   597  1E32                     # 16562 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   598                           CLC4SEL3 equ 01E33h ;# 
   599  1E33                     # 16666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   600                           CLC4GLS0 equ 01E34h ;# 
   601  1E34                     # 16778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   602                           CLC4GLS1 equ 01E35h ;# 
   603  1E35                     # 16890 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   604                           CLC4GLS2 equ 01E36h ;# 
   605  1E36                     # 17002 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   606                           CLC4GLS3 equ 01E37h ;# 
   607  1E37                     # 17114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   608                           PPSLOCK equ 01E8Fh ;# 
   609  1E8F                     # 17134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   610                           INTPPS equ 01E90h ;# 
   611  1E90                     # 17192 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   612                           T0CKIPPS equ 01E91h ;# 
   613  1E91                     # 17250 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   614                           T1CKIPPS equ 01E92h ;# 
   615  1E92                     # 17308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   616                           T1GPPS equ 01E93h ;# 
   617  1E93                     # 17366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   618                           T2INPPS equ 01E9Ch ;# 
   619  1E9C                     # 17424 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   620                           CCP1PPS equ 01EA1h ;# 
   621  1EA1                     # 17482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   622                           CCP2PPS equ 01EA2h ;# 
   623  1EA2                     # 17540 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   624                           CWG1PPS equ 01EB1h ;# 
   625  1EB1                     # 17598 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   626                           CLCIN0PPS equ 01EBBh ;# 
   627  1EBB                     # 17656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   628                           CLCIN1PPS equ 01EBCh ;# 
   629  1EBC                     # 17714 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   630                           CLCIN2PPS equ 01EBDh ;# 
   631  1EBD                     # 17772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   632                           CLCIN3PPS equ 01EBEh ;# 
   633  1EBE                     # 17830 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   634                           ADACTPPS equ 01EC3h ;# 
   635  1EC3                     # 17888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   636                           SSP1CLKPPS equ 01EC5h ;# 
   637  1EC5                     # 17946 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   638                           SSP1DATPPS equ 01EC6h ;# 
   639  1EC6                     # 18004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   640                           SSP1SSPPS equ 01EC7h ;# 
   641  1EC7                     # 18062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   642                           SSP2CLKPPS equ 01EC8h ;# 
   643  1EC8                     # 18120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   644                           SSP2DATPPS equ 01EC9h ;# 
   645  1EC9                     # 18178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   646                           SSP2SSPPS equ 01ECAh ;# 
   647  1ECA                     # 18236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   648                           RX1DTPPS equ 01ECBh ;# 
   649  1ECB                     # 18294 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   650                           TX1CKPPS equ 01ECCh ;# 
   651  1ECC                     # 18352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   652                           RX2DTPPS equ 01ECDh ;# 
   653  1ECD                     # 18410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   654                           TX2CKPPS equ 01ECEh ;# 
   655  1ECE                     # 18468 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   656                           RA0PPS equ 01F10h ;# 
   657  1F10                     # 18512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   658                           RA1PPS equ 01F11h ;# 
   659  1F11                     # 18556 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   660                           RA2PPS equ 01F12h ;# 
   661  1F12                     # 18600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   662                           RA3PPS equ 01F13h ;# 
   663  1F13                     # 18644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   664                           RA4PPS equ 01F14h ;# 
   665  1F14                     # 18688 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   666                           RA5PPS equ 01F15h ;# 
   667  1F15                     # 18732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   668                           RA6PPS equ 01F16h ;# 
   669  1F16                     # 18776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   670                           RA7PPS equ 01F17h ;# 
   671  1F17                     # 18820 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   672                           RB0PPS equ 01F18h ;# 
   673  1F18                     # 18864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   674                           RB1PPS equ 01F19h ;# 
   675  1F19                     # 18908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   676                           RB2PPS equ 01F1Ah ;# 
   677  1F1A                     # 18952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   678                           RB3PPS equ 01F1Bh ;# 
   679  1F1B                     # 18996 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   680                           RB4PPS equ 01F1Ch ;# 
   681  1F1C                     # 19040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   682                           RB5PPS equ 01F1Dh ;# 
   683  1F1D                     # 19084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   684                           RB6PPS equ 01F1Eh ;# 
   685  1F1E                     # 19128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   686                           RB7PPS equ 01F1Fh ;# 
   687  1F1F                     # 19172 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   688                           RC0PPS equ 01F20h ;# 
   689  1F20                     # 19216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   690                           RC1PPS equ 01F21h ;# 
   691  1F21                     # 19260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   692                           RC2PPS equ 01F22h ;# 
   693  1F22                     # 19304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   694                           RC3PPS equ 01F23h ;# 
   695  1F23                     # 19348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   696                           RC4PPS equ 01F24h ;# 
   697  1F24                     # 19392 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   698                           RC5PPS equ 01F25h ;# 
   699  1F25                     # 19436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   700                           RC6PPS equ 01F26h ;# 
   701  1F26                     # 19480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   702                           RC7PPS equ 01F27h ;# 
   703  1F27                     # 19524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   704                           ANSELA equ 01F38h ;# 
   705  1F38                     # 19586 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   706                           WPUA equ 01F39h ;# 
   707  1F39                     # 19648 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   708                           ODCONA equ 01F3Ah ;# 
   709  1F3A                     # 19710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   710                           SLRCONA equ 01F3Bh ;# 
   711  1F3B                     # 19772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   712                           INLVLA equ 01F3Ch ;# 
   713  1F3C                     # 19834 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   714                           IOCAP equ 01F3Dh ;# 
   715  1F3D                     # 19896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   716                           IOCAN equ 01F3Eh ;# 
   717  1F3E                     # 19958 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   718                           IOCAF equ 01F3Fh ;# 
   719  1F3F                     # 20020 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   720                           ANSELB equ 01F43h ;# 
   721  1F43                     # 20082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   722                           WPUB equ 01F44h ;# 
   723  1F44                     # 20144 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   724                           ODCONB equ 01F45h ;# 
   725  1F45                     # 20206 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   726                           SLRCONB equ 01F46h ;# 
   727  1F46                     # 20268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   728                           INLVLB equ 01F47h ;# 
   729  1F47                     # 20330 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   730                           IOCBP equ 01F48h ;# 
   731  1F48                     # 20392 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   732                           IOCBN equ 01F49h ;# 
   733  1F49                     # 20454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   734                           IOCBF equ 01F4Ah ;# 
   735  1F4A                     # 20516 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   736                           ANSELC equ 01F4Eh ;# 
   737  1F4E                     # 20578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   738                           WPUC equ 01F4Fh ;# 
   739  1F4F                     # 20640 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   740                           ODCONC equ 01F50h ;# 
   741  1F50                     # 20702 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   742                           SLRCONC equ 01F51h ;# 
   743  1F51                     # 20764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   744                           INLVLC equ 01F52h ;# 
   745  1F52                     # 20826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   746                           IOCCP equ 01F53h ;# 
   747  1F53                     # 20888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   748                           IOCCN equ 01F54h ;# 
   749  1F54                     # 20950 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   750                           IOCCF equ 01F55h ;# 
   751  1F55                     # 21012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   752                           WPUE equ 01F65h ;# 
   753  1F65                     # 21033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   754                           INLVLE equ 01F68h ;# 
   755  1F68                     # 21054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   756                           IOCEP equ 01F69h ;# 
   757  1F69                     # 21075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   758                           IOCEN equ 01F6Ah ;# 
   759  1F6A                     # 21096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   760                           IOCEF equ 01F6Bh ;# 
   761  1F6B                     # 21117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   762                           STATUS_SHAD equ 01FE4h ;# 
   763  1FE4                     # 21137 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   764                           WREG_SHAD equ 01FE5h ;# 
   765  1FE5                     # 21157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   766                           BSR_SHAD equ 01FE6h ;# 
   767  1FE6                     # 21177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   768                           PCLATH_SHAD equ 01FE7h ;# 
   769  1FE7                     # 21197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   770                           FSR0_SHAD equ 01FE8h ;# 
   771  1FE8                     # 21204 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   772                           FSR0L_SHAD equ 01FE8h ;# 
   773  1FE8                     # 21224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   774                           FSR0H_SHAD equ 01FE9h ;# 
   775  1FE9                     # 21244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   776                           FSR1L_SHAD equ 01FEAh ;# 
   777  1FEA                     # 21264 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   778                           FSR1H_SHAD equ 01FEBh ;# 
   779  1FEB                     # 21284 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   780                           STKPTR equ 01FEDh ;# 
   781  1FED                     # 21328 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   782                           TOSL equ 01FEEh ;# 
   783  1FEE                     # 21398 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   784                           TOSH equ 01FEFh ;# 
   785  1FEF                     # 110 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   786                           INDF0 equ 00h ;# 
   787  0000                     # 130 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   788                           INDF1 equ 01h ;# 
   789  0001                     # 150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   790                           PCL equ 02h ;# 
   791  0002                     # 170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   792                           STATUS equ 03h ;# 
   793  0003                     # 233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   794                           FSR0L equ 04h ;# 
   795  0004                     # 253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   796                           FSR0H equ 05h ;# 
   797  0005                     # 277 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   798                           FSR1L equ 06h ;# 
   799  0006                     # 297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   800                           FSR1H equ 07h ;# 
   801  0007                     # 317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   802                           BSR equ 08h ;# 
   803  0008                     # 375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   804                           WREG equ 09h ;# 
   805  0009                     # 395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   806                           PCLATH equ 0Ah ;# 
   807  000A                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   808                           INTCON equ 0Bh ;# 
   809  000B                     # 448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   810                           PORTA equ 0Ch ;# 
   811  000C                     # 510 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   812                           PORTB equ 0Dh ;# 
   813  000D                     # 572 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   814                           PORTC equ 0Eh ;# 
   815  000E                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   816                           PORTE equ 010h ;# 
   817  0010                     # 655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   818                           TRISA equ 012h ;# 
   819  0012                     # 717 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   820                           TRISB equ 013h ;# 
   821  0013                     # 779 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   822                           TRISC equ 014h ;# 
   823  0014                     # 841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   824                           TRISE equ 016h ;# 
   825  0016                     # 862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   826                           LATA equ 018h ;# 
   827  0018                     # 924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   828                           LATB equ 019h ;# 
   829  0019                     # 986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   830                           LATC equ 01Ah ;# 
   831  001A                     # 1048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   832                           ADRES equ 09Bh ;# 
   833  009B                     # 1055 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   834                           ADRESL equ 09Bh ;# 
   835  009B                     # 1125 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   836                           ADRESH equ 09Ch ;# 
   837  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   838                           ADCON0 equ 09Dh ;# 
   839  009D                     # 1272 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   840                           ADCON1 equ 09Eh ;# 
   841  009E                     # 1338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   842                           ADACT equ 09Fh ;# 
   843  009F                     # 1390 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   844                           RC1REG equ 0119h ;# 
   845  0119                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   846                           RCREG equ 0119h ;# 
   847  0119                     # 1399 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   848                           RCREG1 equ 0119h ;# 
   849  0119                     # 1444 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   850                           TX1REG equ 011Ah ;# 
   851  011A                     # 1449 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   852                           TXREG1 equ 011Ah ;# 
   853  011A                     # 1453 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   854                           TXREG equ 011Ah ;# 
   855  011A                     # 1498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   856                           SP1BRG equ 011Bh ;# 
   857  011B                     # 1505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   858                           SP1BRGL equ 011Bh ;# 
   859  011B                     # 1510 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   860                           SPBRG equ 011Bh ;# 
   861  011B                     # 1514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   862                           SPBRG1 equ 011Bh ;# 
   863  011B                     # 1518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   864                           SPBRGL equ 011Bh ;# 
   865  011B                     # 1575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   866                           SP1BRGH equ 011Ch ;# 
   867  011C                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   868                           SPBRGH equ 011Ch ;# 
   869  011C                     # 1584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   870                           SPBRGH1 equ 011Ch ;# 
   871  011C                     # 1629 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   872                           RC1STA equ 011Dh ;# 
   873  011D                     # 1634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   874                           RCSTA1 equ 011Dh ;# 
   875  011D                     # 1638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   876                           RCSTA equ 011Dh ;# 
   877  011D                     # 1809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   878                           TX1STA equ 011Eh ;# 
   879  011E                     # 1814 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   880                           TXSTA1 equ 011Eh ;# 
   881  011E                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   882                           TXSTA equ 011Eh ;# 
   883  011E                     # 1989 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   884                           BAUD1CON equ 011Fh ;# 
   885  011F                     # 1994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   886                           BAUDCON1 equ 011Fh ;# 
   887  011F                     # 1998 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   888                           BAUDCTL1 equ 011Fh ;# 
   889  011F                     # 2002 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   890                           BAUDCON equ 011Fh ;# 
   891  011F                     # 2006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   892                           BAUDCTL equ 011Fh ;# 
   893  011F                     # 2235 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   894                           SSP1BUF equ 018Ch ;# 
   895  018C                     # 2255 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   896                           SSP1ADD equ 018Dh ;# 
   897  018D                     # 2375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   898                           SSP1MSK equ 018Eh ;# 
   899  018E                     # 2445 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   900                           SSP1STAT equ 018Fh ;# 
   901  018F                     # 2809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   902                           SSP1CON1 equ 0190h ;# 
   903  0190                     # 2929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   904                           SSP1CON2 equ 0191h ;# 
   905  0191                     # 3116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   906                           SSP1CON3 equ 0192h ;# 
   907  0192                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   908                           SSP2BUF equ 0196h ;# 
   909  0196                     # 3198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   910                           SSP2ADD equ 0197h ;# 
   911  0197                     # 3318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   912                           SSP2MSK equ 0198h ;# 
   913  0198                     # 3388 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   914                           SSP2STAT equ 0199h ;# 
   915  0199                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   916                           SSP2CON1 equ 019Ah ;# 
   917  019A                     # 3872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   918                           SSP2CON2 equ 019Bh ;# 
   919  019B                     # 4059 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   920                           SSP2CON3 equ 019Ch ;# 
   921  019C                     # 4121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   922                           TMR1 equ 020Ch ;# 
   923  020C                     # 4128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   924                           TMR1L equ 020Ch ;# 
   925  020C                     # 4298 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   926                           TMR1H equ 020Dh ;# 
   927  020D                     # 4418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   928                           T1CON equ 020Eh ;# 
   929  020E                     # 4514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   930                           T1GCON equ 020Fh ;# 
   931  020F                     # 4519 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   932                           PR1 equ 020Fh ;# 
   933  020F                     # 4710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   934                           T1GATE equ 0210h ;# 
   935  0210                     # 4715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   936                           TMR1GATE equ 0210h ;# 
   937  0210                     # 4876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   938                           T1CLK equ 0211h ;# 
   939  0211                     # 4881 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   940                           TMR1CLK equ 0211h ;# 
   941  0211                     # 5018 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   942                           T2TMR equ 028Ch ;# 
   943  028C                     # 5023 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   944                           TMR2 equ 028Ch ;# 
   945  028C                     # 5072 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   946                           T2PR equ 028Dh ;# 
   947  028D                     # 5077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   948                           PR2 equ 028Dh ;# 
   949  028D                     # 5126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   950                           T2CON equ 028Eh ;# 
   951  028E                     # 5272 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   952                           T2HLT equ 028Fh ;# 
   953  028F                     # 5400 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   954                           T2CLKCON equ 0290h ;# 
   955  0290                     # 5480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   956                           T2RST equ 0291h ;# 
   957  0291                     # 5560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   958                           CCPR1 equ 030Ch ;# 
   959  030C                     # 5567 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   960                           CCPR1L equ 030Ch ;# 
   961  030C                     # 5587 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   962                           CCPR1H equ 030Dh ;# 
   963  030D                     # 5607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   964                           CCP1CON equ 030Eh ;# 
   965  030E                     # 5734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   966                           CCP1CAP equ 030Fh ;# 
   967  030F                     # 5802 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   968                           CCPR2 equ 0310h ;# 
   969  0310                     # 5809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   970                           CCPR2L equ 0310h ;# 
   971  0310                     # 5829 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   972                           CCPR2H equ 0311h ;# 
   973  0311                     # 5849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   974                           CCP2CON equ 0312h ;# 
   975  0312                     # 5976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   976                           CCP2CAP equ 0313h ;# 
   977  0313                     # 6044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   978                           PWM3DC equ 0314h ;# 
   979  0314                     # 6051 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   980                           PWM3DCL equ 0314h ;# 
   981  0314                     # 6117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   982                           PWM3DCH equ 0315h ;# 
   983  0315                     # 6287 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   984                           PWM3CON equ 0316h ;# 
   985  0316                     # 6343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   986                           PWM4DC equ 0318h ;# 
   987  0318                     # 6350 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   988                           PWM4DCL equ 0318h ;# 
   989  0318                     # 6416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   990                           PWM4DCH equ 0319h ;# 
   991  0319                     # 6586 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   992                           PWM4CON equ 031Ah ;# 
   993  031A                     # 6642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   994                           PWM5DC equ 031Ch ;# 
   995  031C                     # 6649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   996                           PWM5DCL equ 031Ch ;# 
   997  031C                     # 6715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   998                           PWM5DCH equ 031Dh ;# 
   999  031D                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1000                           PWM5CON equ 031Eh ;# 
  1001  031E                     # 6941 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1002                           PWM6DC equ 038Ch ;# 
  1003  038C                     # 6948 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1004                           PWM6DCL equ 038Ch ;# 
  1005  038C                     # 7014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1006                           PWM6DCH equ 038Dh ;# 
  1007  038D                     # 7184 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1008                           PWM6CON equ 038Eh ;# 
  1009  038E                     # 7242 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1010                           NCO1ACC equ 058Ch ;# 
  1011  058C                     # 7249 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1012                           NCO1ACCL equ 058Ch ;# 
  1013  058C                     # 7319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1014                           NCO1ACCH equ 058Dh ;# 
  1015  058D                     # 7389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1016                           NCO1ACCU equ 058Eh ;# 
  1017  058E                     # 7437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1018                           NCO1INC equ 058Fh ;# 
  1019  058F                     # 7444 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1020                           NCO1INCL equ 058Fh ;# 
  1021  058F                     # 7514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1022                           NCO1INCH equ 0590h ;# 
  1023  0590                     # 7584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1024                           NCO1INCU equ 0591h ;# 
  1025  0591                     # 7630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1026                           NCO1CON equ 0592h ;# 
  1027  0592                     # 7670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1028                           NCO1CLK equ 0593h ;# 
  1029  0593                     # 7736 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1030                           TMR0L equ 059Ch ;# 
  1031  059C                     # 7741 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1032                           TMR0 equ 059Ch ;# 
  1033  059C                     # 7874 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1034                           TMR0H equ 059Dh ;# 
  1035  059D                     # 7879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1036                           PR0 equ 059Dh ;# 
  1037  059D                     # 8128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1038                           T0CON0 equ 059Eh ;# 
  1039  059E                     # 8198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1040                           T0CON1 equ 059Fh ;# 
  1041  059F                     # 8309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1042                           CWG1CLKCON equ 060Ch ;# 
  1043  060C                     # 8337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1044                           CWG1DAT equ 060Dh ;# 
  1045  060D                     # 8383 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1046                           CWG1DBR equ 060Eh ;# 
  1047  060E                     # 8487 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1048                           CWG1DBF equ 060Fh ;# 
  1049  060F                     # 8591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1050                           CWG1CON0 equ 0610h ;# 
  1051  0610                     # 8692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1052                           CWG1CON1 equ 0611h ;# 
  1053  0611                     # 8770 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1054                           CWG1AS0 equ 0612h ;# 
  1055  0612                     # 8890 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1056                           CWG1AS1 equ 0613h ;# 
  1057  0613                     # 8934 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1058                           CWG1STR equ 0614h ;# 
  1059  0614                     # 9046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1060                           PIR0 equ 070Ch ;# 
  1061  070C                     # 9079 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1062                           PIR1 equ 070Dh ;# 
  1063  070D                     # 9118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1064                           PIR2 equ 070Eh ;# 
  1065  070E                     # 9151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1066                           PIR3 equ 070Fh ;# 
  1067  070F                     # 9213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1068                           PIR4 equ 0710h ;# 
  1069  0710                     # 9239 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1070                           PIR5 equ 0711h ;# 
  1071  0711                     # 9284 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1072                           PIR6 equ 0712h ;# 
  1073  0712                     # 9310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1074                           PIR7 equ 0713h ;# 
  1075  0713                     # 9352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1076                           PIE0 equ 0716h ;# 
  1077  0716                     # 9385 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1078                           PIE1 equ 0717h ;# 
  1079  0717                     # 9424 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1080                           PIE2 equ 0718h ;# 
  1081  0718                     # 9457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1082                           PIE3 equ 0719h ;# 
  1083  0719                     # 9519 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1084                           PIE4 equ 071Ah ;# 
  1085  071A                     # 9545 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1086                           PIE5 equ 071Bh ;# 
  1087  071B                     # 9590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1088                           PIE6 equ 071Ch ;# 
  1089  071C                     # 9616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1090                           PIE7 equ 071Dh ;# 
  1091  071D                     # 9658 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1092                           PMD0 equ 0796h ;# 
  1093  0796                     # 9703 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1094                           PMD1 equ 0797h ;# 
  1095  0797                     # 9751 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1096                           PMD2 equ 0798h ;# 
  1097  0798                     # 9796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1098                           PMD3 equ 0799h ;# 
  1099  0799                     # 9846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1100                           PMD4 equ 079Ah ;# 
  1101  079A                     # 9891 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1102                           PMD5 equ 079Bh ;# 
  1103  079B                     # 9930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1104                           WDTCON0 equ 080Ch ;# 
  1105  080C                     # 10005 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1106                           WDTCON1 equ 080Dh ;# 
  1107  080D                     # 10099 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1108                           WDTPSL equ 080Eh ;# 
  1109  080E                     # 10227 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1110                           WDTPSH equ 080Fh ;# 
  1111  080F                     # 10355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1112                           WDTTMR equ 0810h ;# 
  1113  0810                     # 10437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1114                           BORCON equ 0811h ;# 
  1115  0811                     # 10464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1116                           VREGCON equ 0812h ;# 
  1117  0812                     # 10485 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1118                           PCON0 equ 0813h ;# 
  1119  0813                     # 10547 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1120                           PCON1 equ 0814h ;# 
  1121  0814                     # 10568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1122                           NVMADR equ 081Ah ;# 
  1123  081A                     # 10575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1124                           NVMADRL equ 081Ah ;# 
  1125  081A                     # 10637 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1126                           NVMADRH equ 081Bh ;# 
  1127  081B                     # 10693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1128                           NVMDAT equ 081Ch ;# 
  1129  081C                     # 10700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1130                           NVMDATL equ 081Ch ;# 
  1131  081C                     # 10762 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1132                           NVMDATH equ 081Dh ;# 
  1133  081D                     # 10812 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1134                           NVMCON1 equ 081Eh ;# 
  1135  081E                     # 10868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1136                           NVMCON2 equ 081Fh ;# 
  1137  081F                     # 10888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1138                           CPUDOZE equ 088Ch ;# 
  1139  088C                     # 10953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1140                           OSCCON1 equ 088Dh ;# 
  1141  088D                     # 11023 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1142                           OSCCON2 equ 088Eh ;# 
  1143  088E                     # 11093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1144                           OSCCON3 equ 088Fh ;# 
  1145  088F                     # 11133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1146                           OSCSTAT equ 0890h ;# 
  1147  0890                     # 11190 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1148                           OSCEN equ 0891h ;# 
  1149  0891                     # 11241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1150                           OSCTUNE equ 0892h ;# 
  1151  0892                     # 11299 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1152                           OSCFRQ equ 0893h ;# 
  1153  0893                     # 11339 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1154                           CLKRCON equ 0895h ;# 
  1155  0895                     # 11404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1156                           CLKRCLK equ 0896h ;# 
  1157  0896                     # 11450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1158                           FVRCON equ 090Ch ;# 
  1159  090C                     # 11526 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1160                           DAC1CON0 equ 090Eh ;# 
  1161  090E                     # 11627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1162                           DAC1CON1 equ 090Fh ;# 
  1163  090F                     # 11679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1164                           ZCDCON equ 091Fh ;# 
  1165  091F                     # 11725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1166                           CMOUT equ 098Fh ;# 
  1167  098F                     # 11730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1168                           CMSTAT equ 098Fh ;# 
  1169  098F                     # 11803 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1170                           CM1CON0 equ 0990h ;# 
  1171  0990                     # 11883 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1172                           CM1CON1 equ 0991h ;# 
  1173  0991                     # 11923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1174                           CM1NCH equ 0992h ;# 
  1175  0992                     # 11983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1176                           CM1PCH equ 0993h ;# 
  1177  0993                     # 12043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1178                           CM2CON0 equ 0994h ;# 
  1179  0994                     # 12123 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1180                           CM2CON1 equ 0995h ;# 
  1181  0995                     # 12163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1182                           CM2NCH equ 0996h ;# 
  1183  0996                     # 12223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1184                           CM2PCH equ 0997h ;# 
  1185  0997                     # 12283 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1186                           RC2REG equ 0A19h ;# 
  1187  0A19                     # 12288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1188                           RCREG2 equ 0A19h ;# 
  1189  0A19                     # 12321 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1190                           TX2REG equ 0A1Ah ;# 
  1191  0A1A                     # 12326 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1192                           TXREG2 equ 0A1Ah ;# 
  1193  0A1A                     # 12359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1194                           SP2BRG equ 0A1Bh ;# 
  1195  0A1B                     # 12366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1196                           SP2BRGL equ 0A1Bh ;# 
  1197  0A1B                     # 12371 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1198                           SPBRG2 equ 0A1Bh ;# 
  1199  0A1B                     # 12404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1200                           SP2BRGH equ 0A1Ch ;# 
  1201  0A1C                     # 12409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1202                           SPBRGH2 equ 0A1Ch ;# 
  1203  0A1C                     # 12442 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1204                           RC2STA equ 0A1Dh ;# 
  1205  0A1D                     # 12447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1206                           RCSTA2 equ 0A1Dh ;# 
  1207  0A1D                     # 12564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1208                           TX2STA equ 0A1Eh ;# 
  1209  0A1E                     # 12569 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1210                           TXSTA2 equ 0A1Eh ;# 
  1211  0A1E                     # 12686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1212                           BAUD2CON equ 0A1Fh ;# 
  1213  0A1F                     # 12691 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1214                           BAUDCON2 equ 0A1Fh ;# 
  1215  0A1F                     # 12695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1216                           BAUDCTL2 equ 0A1Fh ;# 
  1217  0A1F                     # 12836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1218                           CLCDATA equ 01E0Fh ;# 
  1219  1E0F                     # 12874 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1220                           CLC1CON equ 01E10h ;# 
  1221  1E10                     # 12992 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1222                           CLC1POL equ 01E11h ;# 
  1223  1E11                     # 13070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1224                           CLC1SEL0 equ 01E12h ;# 
  1225  1E12                     # 13174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1226                           CLC1SEL1 equ 01E13h ;# 
  1227  1E13                     # 13278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1228                           CLC1SEL2 equ 01E14h ;# 
  1229  1E14                     # 13382 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1230                           CLC1SEL3 equ 01E15h ;# 
  1231  1E15                     # 13486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1232                           CLC1GLS0 equ 01E16h ;# 
  1233  1E16                     # 13598 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1234                           CLC1GLS1 equ 01E17h ;# 
  1235  1E17                     # 13710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1236                           CLC1GLS2 equ 01E18h ;# 
  1237  1E18                     # 13822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1238                           CLC1GLS3 equ 01E19h ;# 
  1239  1E19                     # 13934 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1240                           CLC2CON equ 01E1Ah ;# 
  1241  1E1A                     # 14052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1242                           CLC2POL equ 01E1Bh ;# 
  1243  1E1B                     # 14130 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1244                           CLC2SEL0 equ 01E1Ch ;# 
  1245  1E1C                     # 14234 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1246                           CLC2SEL1 equ 01E1Dh ;# 
  1247  1E1D                     # 14338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1248                           CLC2SEL2 equ 01E1Eh ;# 
  1249  1E1E                     # 14442 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1250                           CLC2SEL3 equ 01E1Fh ;# 
  1251  1E1F                     # 14546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1252                           CLC2GLS0 equ 01E20h ;# 
  1253  1E20                     # 14658 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1254                           CLC2GLS1 equ 01E21h ;# 
  1255  1E21                     # 14770 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1256                           CLC2GLS2 equ 01E22h ;# 
  1257  1E22                     # 14882 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1258                           CLC2GLS3 equ 01E23h ;# 
  1259  1E23                     # 14994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1260                           CLC3CON equ 01E24h ;# 
  1261  1E24                     # 15112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1262                           CLC3POL equ 01E25h ;# 
  1263  1E25                     # 15190 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1264                           CLC3SEL0 equ 01E26h ;# 
  1265  1E26                     # 15294 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1266                           CLC3SEL1 equ 01E27h ;# 
  1267  1E27                     # 15398 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1268                           CLC3SEL2 equ 01E28h ;# 
  1269  1E28                     # 15502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1270                           CLC3SEL3 equ 01E29h ;# 
  1271  1E29                     # 15606 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1272                           CLC3GLS0 equ 01E2Ah ;# 
  1273  1E2A                     # 15718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1274                           CLC3GLS1 equ 01E2Bh ;# 
  1275  1E2B                     # 15830 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1276                           CLC3GLS2 equ 01E2Ch ;# 
  1277  1E2C                     # 15942 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1278                           CLC3GLS3 equ 01E2Dh ;# 
  1279  1E2D                     # 16054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1280                           CLC4CON equ 01E2Eh ;# 
  1281  1E2E                     # 16172 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1282                           CLC4POL equ 01E2Fh ;# 
  1283  1E2F                     # 16250 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1284                           CLC4SEL0 equ 01E30h ;# 
  1285  1E30                     # 16354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1286                           CLC4SEL1 equ 01E31h ;# 
  1287  1E31                     # 16458 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1288                           CLC4SEL2 equ 01E32h ;# 
  1289  1E32                     # 16562 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1290                           CLC4SEL3 equ 01E33h ;# 
  1291  1E33                     # 16666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1292                           CLC4GLS0 equ 01E34h ;# 
  1293  1E34                     # 16778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1294                           CLC4GLS1 equ 01E35h ;# 
  1295  1E35                     # 16890 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1296                           CLC4GLS2 equ 01E36h ;# 
  1297  1E36                     # 17002 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1298                           CLC4GLS3 equ 01E37h ;# 
  1299  1E37                     # 17114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1300                           PPSLOCK equ 01E8Fh ;# 
  1301  1E8F                     # 17134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1302                           INTPPS equ 01E90h ;# 
  1303  1E90                     # 17192 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1304                           T0CKIPPS equ 01E91h ;# 
  1305  1E91                     # 17250 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1306                           T1CKIPPS equ 01E92h ;# 
  1307  1E92                     # 17308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1308                           T1GPPS equ 01E93h ;# 
  1309  1E93                     # 17366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1310                           T2INPPS equ 01E9Ch ;# 
  1311  1E9C                     # 17424 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1312                           CCP1PPS equ 01EA1h ;# 
  1313  1EA1                     # 17482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1314                           CCP2PPS equ 01EA2h ;# 
  1315  1EA2                     # 17540 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1316                           CWG1PPS equ 01EB1h ;# 
  1317  1EB1                     # 17598 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1318                           CLCIN0PPS equ 01EBBh ;# 
  1319  1EBB                     # 17656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1320                           CLCIN1PPS equ 01EBCh ;# 
  1321  1EBC                     # 17714 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1322                           CLCIN2PPS equ 01EBDh ;# 
  1323  1EBD                     # 17772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1324                           CLCIN3PPS equ 01EBEh ;# 
  1325  1EBE                     # 17830 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1326                           ADACTPPS equ 01EC3h ;# 
  1327  1EC3                     # 17888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1328                           SSP1CLKPPS equ 01EC5h ;# 
  1329  1EC5                     # 17946 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1330                           SSP1DATPPS equ 01EC6h ;# 
  1331  1EC6                     # 18004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1332                           SSP1SSPPS equ 01EC7h ;# 
  1333  1EC7                     # 18062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1334                           SSP2CLKPPS equ 01EC8h ;# 
  1335  1EC8                     # 18120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1336                           SSP2DATPPS equ 01EC9h ;# 
  1337  1EC9                     # 18178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1338                           SSP2SSPPS equ 01ECAh ;# 
  1339  1ECA                     # 18236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1340                           RX1DTPPS equ 01ECBh ;# 
  1341  1ECB                     # 18294 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1342                           TX1CKPPS equ 01ECCh ;# 
  1343  1ECC                     # 18352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1344                           RX2DTPPS equ 01ECDh ;# 
  1345  1ECD                     # 18410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1346                           TX2CKPPS equ 01ECEh ;# 
  1347  1ECE                     # 18468 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1348                           RA0PPS equ 01F10h ;# 
  1349  1F10                     # 18512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1350                           RA1PPS equ 01F11h ;# 
  1351  1F11                     # 18556 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1352                           RA2PPS equ 01F12h ;# 
  1353  1F12                     # 18600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1354                           RA3PPS equ 01F13h ;# 
  1355  1F13                     # 18644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1356                           RA4PPS equ 01F14h ;# 
  1357  1F14                     # 18688 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1358                           RA5PPS equ 01F15h ;# 
  1359  1F15                     # 18732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1360                           RA6PPS equ 01F16h ;# 
  1361  1F16                     # 18776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1362                           RA7PPS equ 01F17h ;# 
  1363  1F17                     # 18820 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1364                           RB0PPS equ 01F18h ;# 
  1365  1F18                     # 18864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1366                           RB1PPS equ 01F19h ;# 
  1367  1F19                     # 18908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1368                           RB2PPS equ 01F1Ah ;# 
  1369  1F1A                     # 18952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1370                           RB3PPS equ 01F1Bh ;# 
  1371  1F1B                     # 18996 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1372                           RB4PPS equ 01F1Ch ;# 
  1373  1F1C                     # 19040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1374                           RB5PPS equ 01F1Dh ;# 
  1375  1F1D                     # 19084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1376                           RB6PPS equ 01F1Eh ;# 
  1377  1F1E                     # 19128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1378                           RB7PPS equ 01F1Fh ;# 
  1379  1F1F                     # 19172 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1380                           RC0PPS equ 01F20h ;# 
  1381  1F20                     # 19216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1382                           RC1PPS equ 01F21h ;# 
  1383  1F21                     # 19260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1384                           RC2PPS equ 01F22h ;# 
  1385  1F22                     # 19304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1386                           RC3PPS equ 01F23h ;# 
  1387  1F23                     # 19348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1388                           RC4PPS equ 01F24h ;# 
  1389  1F24                     # 19392 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1390                           RC5PPS equ 01F25h ;# 
  1391  1F25                     # 19436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1392                           RC6PPS equ 01F26h ;# 
  1393  1F26                     # 19480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1394                           RC7PPS equ 01F27h ;# 
  1395  1F27                     # 19524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1396                           ANSELA equ 01F38h ;# 
  1397  1F38                     # 19586 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1398                           WPUA equ 01F39h ;# 
  1399  1F39                     # 19648 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1400                           ODCONA equ 01F3Ah ;# 
  1401  1F3A                     # 19710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1402                           SLRCONA equ 01F3Bh ;# 
  1403  1F3B                     # 19772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1404                           INLVLA equ 01F3Ch ;# 
  1405  1F3C                     # 19834 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1406                           IOCAP equ 01F3Dh ;# 
  1407  1F3D                     # 19896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1408                           IOCAN equ 01F3Eh ;# 
  1409  1F3E                     # 19958 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1410                           IOCAF equ 01F3Fh ;# 
  1411  1F3F                     # 20020 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1412                           ANSELB equ 01F43h ;# 
  1413  1F43                     # 20082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1414                           WPUB equ 01F44h ;# 
  1415  1F44                     # 20144 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1416                           ODCONB equ 01F45h ;# 
  1417  1F45                     # 20206 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1418                           SLRCONB equ 01F46h ;# 
  1419  1F46                     # 20268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1420                           INLVLB equ 01F47h ;# 
  1421  1F47                     # 20330 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1422                           IOCBP equ 01F48h ;# 
  1423  1F48                     # 20392 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1424                           IOCBN equ 01F49h ;# 
  1425  1F49                     # 20454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1426                           IOCBF equ 01F4Ah ;# 
  1427  1F4A                     # 20516 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1428                           ANSELC equ 01F4Eh ;# 
  1429  1F4E                     # 20578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1430                           WPUC equ 01F4Fh ;# 
  1431  1F4F                     # 20640 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1432                           ODCONC equ 01F50h ;# 
  1433  1F50                     # 20702 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1434                           SLRCONC equ 01F51h ;# 
  1435  1F51                     # 20764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1436                           INLVLC equ 01F52h ;# 
  1437  1F52                     # 20826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1438                           IOCCP equ 01F53h ;# 
  1439  1F53                     # 20888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1440                           IOCCN equ 01F54h ;# 
  1441  1F54                     # 20950 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1442                           IOCCF equ 01F55h ;# 
  1443  1F55                     # 21012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1444                           WPUE equ 01F65h ;# 
  1445  1F65                     # 21033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1446                           INLVLE equ 01F68h ;# 
  1447  1F68                     # 21054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1448                           IOCEP equ 01F69h ;# 
  1449  1F69                     # 21075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1450                           IOCEN equ 01F6Ah ;# 
  1451  1F6A                     # 21096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1452                           IOCEF equ 01F6Bh ;# 
  1453  1F6B                     # 21117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1454                           STATUS_SHAD equ 01FE4h ;# 
  1455  1FE4                     # 21137 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1456                           WREG_SHAD equ 01FE5h ;# 
  1457  1FE5                     # 21157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1458                           BSR_SHAD equ 01FE6h ;# 
  1459  1FE6                     # 21177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1460                           PCLATH_SHAD equ 01FE7h ;# 
  1461  1FE7                     # 21197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1462                           FSR0_SHAD equ 01FE8h ;# 
  1463  1FE8                     # 21204 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1464                           FSR0L_SHAD equ 01FE8h ;# 
  1465  1FE8                     # 21224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1466                           FSR0H_SHAD equ 01FE9h ;# 
  1467  1FE9                     # 21244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1468                           FSR1L_SHAD equ 01FEAh ;# 
  1469  1FEA                     # 21264 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1470                           FSR1H_SHAD equ 01FEBh ;# 
  1471  1FEB                     # 21284 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1472                           STKPTR equ 01FEDh ;# 
  1473  1FED                     # 21328 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1474                           TOSL equ 01FEEh ;# 
  1475  1FEE                     # 21398 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1476                           TOSH equ 01FEFh ;# 
  1477  1FEF                     	FNCALL	_main,_OLED_command
  1478                           	FNCALL	_main,_OLED_init
  1479                           	FNCALL	_main,_OLED_returnHome
  1480                           	FNCALL	_main,_checkStatus
  1481                           	FNCALL	_main,_convertAnalogValues
  1482                           	FNCALL	_main,_handleSensorData
  1483                           	FNCALL	_main,_initialize
  1484                           	FNCALL	_main,_showMenu
  1485                           	FNCALL	_main,_timeNow
  1486                           	FNCALL	_main,_timeSince
  1487                           	FNCALL	_main,_uartSendByte
  1488                           	FNCALL	_timeSince,_timeNow
  1489                           	FNCALL	_showMenu,_OLED_print_xy
  1490                           	FNCALL	_showMenu,_getPB
  1491                           	FNCALL	_showMenu,_menuInput
  1492                           	FNCALL	_showMenu,_sprintf
  1493                           	FNCALL	_sprintf,_vfprintf
  1494                           	FNCALL	_vfprintf,_vfpfcnvrt
  1495                           	FNCALL	_vfpfcnvrt,_atoi
  1496                           	FNCALL	_vfpfcnvrt,_efgtoa
  1497                           	FNCALL	_vfpfcnvrt,_fputc
  1498                           	FNCALL	_vfpfcnvrt,_isdigit
  1499                           	FNCALL	_vfpfcnvrt,_isupper
  1500                           	FNCALL	_vfpfcnvrt,_stoa
  1501                           	FNCALL	_vfpfcnvrt,_strncmp
  1502                           	FNCALL	_vfpfcnvrt,_tolower
  1503                           	FNCALL	_stoa,_fputc
  1504                           	FNCALL	_stoa,_strlen
  1505                           	FNCALL	_efgtoa,___awdiv
  1506                           	FNCALL	_efgtoa,___awmod
  1507                           	FNCALL	_efgtoa,___fladd
  1508                           	FNCALL	_efgtoa,___fldiv
  1509                           	FNCALL	_efgtoa,___fleq
  1510                           	FNCALL	_efgtoa,___flge
  1511                           	FNCALL	_efgtoa,___flmul
  1512                           	FNCALL	_efgtoa,___flneg
  1513                           	FNCALL	_efgtoa,___flsub
  1514                           	FNCALL	_efgtoa,___fltol
  1515                           	FNCALL	_efgtoa,___fpclassifyf
  1516                           	FNCALL	_efgtoa,_floorf
  1517                           	FNCALL	_efgtoa,_isupper
  1518                           	FNCALL	_efgtoa,_pad
  1519                           	FNCALL	_efgtoa,_strcpy
  1520                           	FNCALL	_efgtoa,_tolower
  1521                           	FNCALL	_tolower,_isupper
  1522                           	FNCALL	_pad,_fputc
  1523                           	FNCALL	_pad,_fputs
  1524                           	FNCALL	_pad,_strlen
  1525                           	FNCALL	_fputs,_fputc
  1526                           	FNCALL	_fputc,_putch
  1527                           	FNCALL	___flsub,___fladd
  1528                           	FNCALL	_atoi,___wmul
  1529                           	FNCALL	_atoi,_isdigit
  1530                           	FNCALL	_atoi,_isspace
  1531                           	FNCALL	_menuInput,_OLED_returnHome
  1532                           	FNCALL	_menuInput,_OLED_scrollDisplayLeft
  1533                           	FNCALL	_menuInput,_OLED_scrollDisplayRight
  1534                           	FNCALL	_menuInput,_getPB
  1535                           	FNCALL	_menuInput,_getRotDir
  1536                           	FNCALL	_OLED_scrollDisplayRight,_OLED_command
  1537                           	FNCALL	_OLED_scrollDisplayLeft,_OLED_command
  1538                           	FNCALL	_OLED_returnHome,_OLED_command
  1539                           	FNCALL	_OLED_print_xy,_OLED_command
  1540                           	FNCALL	_OLED_print_xy,_OLED_write
  1541                           	FNCALL	_OLED_write,_OLED_send
  1542                           	FNCALL	_OLED_write,_OLED_waitForReady
  1543                           	FNCALL	_handleSensorData,___xxtofl
  1544                           	FNCALL	_convertAnalogValues,___fladd
  1545                           	FNCALL	_convertAnalogValues,___fldiv
  1546                           	FNCALL	_convertAnalogValues,___flmul
  1547                           	FNCALL	_convertAnalogValues,___xxtofl
  1548                           	FNCALL	_convertAnalogValues,_adcGetConversion
  1549                           	FNCALL	_convertAnalogValues,_ema
  1550                           	FNCALL	_ema,___lmul
  1551                           	FNCALL	___flmul,__Umul8_16
  1552                           	FNCALL	_checkStatus,___flge
  1553                           	FNCALL	_OLED_init,_OLED_command
  1554                           	FNCALL	_OLED_init,_OLED_write4bits
  1555                           	FNCALL	_OLED_command,_OLED_send
  1556                           	FNCALL	_OLED_command,_OLED_waitForReady
  1557                           	FNCALL	_OLED_waitForReady,_OLED_pulseEnable
  1558                           	FNCALL	_OLED_send,_OLED_write4bits
  1559                           	FNCALL	_OLED_write4bits,_OLED_pulseEnable
  1560                           	FNROOT	_main
  1561                           	FNCALL	_ISR,___llmod
  1562                           	FNCALL	_ISR,_pushButtonISR
  1563                           	FNCALL	_ISR,_rotISR
  1564                           	FNCALL	_ISR,_uartReceiveISR
  1565                           	FNCALL	_uartReceiveISR,_strncpy
  1566                           	FNCALL	intlevel1,_ISR
  1567                           	global	intlevel1
  1568                           	FNROOT	intlevel1
  1569                           	global	stoa@F1143
  1570                           	global	OLED_print_xy@F7353
  1571                           	global	OLED_setCursor@F7345
  1572                           psect	idataBANK4,class=CODE,space=0,delta=2,noexec
  1573                           global __pidataBANK4
  1574                           __pidataBANK4:
  1575  21B2                     	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  1576                           	line	548
  1577                           
  1578                           ;initializer for stoa@F1143
  1579                           	retlw	028h
  1580  21B2  3428               	retlw	06Eh
  1581  21B3  346E               	retlw	075h
  1582  21B4  3475               	retlw	06Ch
  1583  21B5  346C               	retlw	06Ch
  1584  21B6  346C               	retlw	029h
  1585  21B7  3429               	retlw	low(0)
  1586  21B8  3400               	file	"oled.c"
  1587                           	line	153
  1588                           
  1589                           ;initializer for OLED_print_xy@F7353
  1590                           	retlw	low(0)
  1591  21B9  3400               	retlw	040h
  1592  21BA  3440               	retlw	014h
  1593  21BB  3414               	retlw	054h
  1594  21BC  3454               	line	139
  1595                           
  1596                           ;initializer for OLED_setCursor@F7345
  1597                           	retlw	low(0)
  1598  21BD  3400               	retlw	040h
  1599  21BE  3440               	retlw	014h
  1600  21BF  3414               	retlw	054h
  1601  21C0  3454               	global	_transition_table
  1602                           psect	stringtext1,class=STRCODE,delta=2,noexec
  1603                           global __pstringtext1
  1604                           __pstringtext1:
  1605  2800                     	file	"main.c"
  1606                           	line	54
  1607                           _transition_table:
  1608  2800                     	retlw	low(0)
  1609  2800  3400               	retlw	04h
  1610  2801  3404               	retlw	01h
  1611  2802  3401               	retlw	low(0)
  1612  2803  3400               	retlw	082h
  1613  2804  3482               	retlw	low(0)
  1614  2805  3400               	retlw	01h
  1615  2806  3401               	retlw	low(0)
  1616  2807  3400               	retlw	02h
  1617  2808  3402               	retlw	03h
  1618  2809  3403               	retlw	01h
  1619  280A  3401               	retlw	low(0)
  1620  280B  3400               	retlw	02h
  1621  280C  3402               	retlw	03h
  1622  280D  3403               	retlw	low(0)
  1623  280E  3400               	retlw	080h
  1624  280F  3480               	retlw	045h
  1625  2810  3445               	retlw	04h
  1626  2811  3404               	retlw	low(0)
  1627  2812  3400               	retlw	low(0)
  1628  2813  3400               	retlw	05h
  1629  2814  3405               	retlw	04h
  1630  2815  3404               	retlw	06h
  1631  2816  3406               	retlw	low(0)
  1632  2817  3400               	retlw	05h
  1633  2818  3405               	retlw	low(0)
  1634  2819  3400               	retlw	06h
  1635  281A  3406               	retlw	040h
  1636  281B  3440               	global __end_of_transition_table
  1637                           __end_of_transition_table:
  1638  281C                     	global	_transition_table
  1639                           	global	uartReceiveISR@rxCount
  1640                           	global	_g_curRotState
  1641                           	global	_g_10msTick
  1642                           	global	_g_100msTick
  1643                           	global	_width
  1644                           	global	_prec
  1645                           	global	_flags
  1646                           	global	uartReceiveISR@checksum
  1647                           	global	_g_pbState
  1648                           	global	_g_rotDir
  1649                           	global	_g_dataReady
  1650                           	global	_g_rxFErrCount
  1651                           	global	_g_sensorTimer
  1652                           	global	convertAnalogValues@avgT
  1653                           	global	_g_rxOErrCount
  1654                           	global	_g_status
  1655                           	global	showMenu@page
  1656                           	global	showMenu@menu
  1657                           	global	floorf@F514
  1658                           	global	___fpclassifyf@F453
  1659                           	global	_g_power
  1660                           	global	_g_current
  1661                           	global	_g_voltage
  1662                           	global	_g_tempAux
  1663                           	global	_g_sensorVersion
  1664                           	global	_g_dewPointC
  1665                           	global	_g_relHum
  1666                           	global	_g_tempC
  1667                           	global	_nout
  1668                           	global	convertAnalogValues@avgI
  1669                           	global	convertAnalogValues@avgV
  1670                           	global	_g_dataPacket
  1671                           	global	uartReceiveISR@buffer
  1672                           	global	_dbuf
  1673                           	global	_PORTCbits
  1674                           _PORTCbits	set	0xE
  1675  000E                     	global	_TRISCbits
  1676                           _TRISCbits	set	0x14
  1677  0014                     	global	_PORTAbits
  1678                           _PORTAbits	set	0xC
  1679  000C                     	global	_INTCONbits
  1680                           _INTCONbits	set	0xB
  1681  000B                     	global	_INTCON
  1682                           _INTCON	set	0xB
  1683  000B                     	global	_TRISC
  1684                           _TRISC	set	0x14
  1685  0014                     	global	_TRISB
  1686                           _TRISB	set	0x13
  1687  0013                     	global	_TRISA
  1688                           _TRISA	set	0x12
  1689  0012                     	global	_LATAbits
  1690                           _LATAbits	set	0x18
  1691  0018                     	global	_LATCbits
  1692                           _LATCbits	set	0x1A
  1693  001A                     	global	_LATBbits
  1694                           _LATBbits	set	0x19
  1695  0019                     	global	_ADCON1
  1696                           _ADCON1	set	0x9E
  1697  009E                     	global	_ADRESL
  1698                           _ADRESL	set	0x9B
  1699  009B                     	global	_ADRESH
  1700                           _ADRESH	set	0x9C
  1701  009C                     	global	_ADCON0bits
  1702                           _ADCON0bits	set	0x9D
  1703  009D                     	global	_RC1REG
  1704                           _RC1REG	set	0x119
  1705  0119                     	global	_RC1STAbits
  1706                           _RC1STAbits	set	0x11D
  1707  011D                     	global	_TX1REG
  1708                           _TX1REG	set	0x11A
  1709  011A                     	global	_TX1STA
  1710                           _TX1STA	set	0x11E
  1711  011E                     	global	_RC1STA
  1712                           _RC1STA	set	0x11D
  1713  011D                     	global	_SPBRGL
  1714                           _SPBRGL	set	0x11B
  1715  011B                     	global	_BAUD1CON
  1716                           _BAUD1CON	set	0x11F
  1717  011F                     	global	_TMR1
  1718                           _TMR1	set	0x20C
  1719  020C                     	global	_T1CLK
  1720                           _T1CLK	set	0x211
  1721  0211                     	global	_T1CON
  1722                           _T1CON	set	0x20E
  1723  020E                     	global	_TMR0
  1724                           _TMR0	set	0x59C
  1725  059C                     	global	_T0CON1
  1726                           _T0CON1	set	0x59F
  1727  059F                     	global	_T0CON0
  1728                           _T0CON0	set	0x59E
  1729  059E                     	global	_PIE3bits
  1730                           _PIE3bits	set	0x719
  1731  0719                     	global	_PIR4bits
  1732                           _PIR4bits	set	0x710
  1733  0710                     	global	_PIE4bits
  1734                           _PIE4bits	set	0x71A
  1735  071A                     	global	_PIR0bits
  1736                           _PIR0bits	set	0x70C
  1737  070C                     	global	_PIR3bits
  1738                           _PIR3bits	set	0x70F
  1739  070F                     	global	_PIE4
  1740                           _PIE4	set	0x71A
  1741  071A                     	global	_PIE3
  1742                           _PIE3	set	0x719
  1743  0719                     	global	_PIE0
  1744                           _PIE0	set	0x716
  1745  0716                     	global	_PIE0bits
  1746                           _PIE0bits	set	0x716
  1747  0716                     	global	_OSCCON3bits
  1748                           _OSCCON3bits	set	0x88F
  1749  088F                     	global	_OSCCON1
  1750                           _OSCCON1	set	0x88D
  1751  088D                     	global	_OSCFRQ
  1752                           _OSCFRQ	set	0x893
  1753  0893                     	global	_RX1DTPPSbits
  1754                           _RX1DTPPSbits	set	0x1ECB
  1755  1ECB                     	global	_IOCAFbits
  1756                           _IOCAFbits	set	0x1F3F
  1757  1F3F                     	global	_IOCCN
  1758                           _IOCCN	set	0x1F54
  1759  1F54                     	global	_IOCAN
  1760                           _IOCAN	set	0x1F3E
  1761  1F3E                     	global	_IOCAP
  1762                           _IOCAP	set	0x1F3D
  1763  1F3D                     	global	_ANSELC
  1764                           _ANSELC	set	0x1F4E
  1765  1F4E                     	global	_ANSELB
  1766                           _ANSELB	set	0x1F43
  1767  1F43                     	global	_ANSELA
  1768                           _ANSELA	set	0x1F38
  1769  1F38                     	global	_RC6PPS
  1770                           _RC6PPS	set	0x1F26
  1771  1F26                     	
  1772                           STR_7:	
  1773  281C                     	retlw	67	;'C'
  1774  281C  3443               	retlw	104	;'h'
  1775  281D  3468               	retlw	49	;'1'
  1776  281E  3431               	retlw	58	;':'
  1777  281F  343A               	retlw	32	;' '
  1778  2820  3420               	retlw	120	;'x'
  1779  2821  3478               	retlw	120	;'x'
  1780  2822  3478               	retlw	32	;' '
  1781  2823  3420               	retlw	105	;'i'
  1782  2824  3469               	retlw	110	;'n'
  1783  2825  346E               	retlw	99	;'c'
  1784  2826  3463               	retlw	104	;'h'
  1785  2827  3468               	retlw	67	;'C'
  1786  2828  3443               	retlw	104	;'h'
  1787  2829  3468               	retlw	50	;'2'
  1788  282A  3432               	retlw	58	;':'
  1789  282B  343A               	retlw	32	;' '
  1790  282C  3420               	retlw	120	;'x'
  1791  282D  3478               	retlw	120	;'x'
  1792  282E  3478               	retlw	32	;' '
  1793  282F  3420               	retlw	105	;'i'
  1794  2830  3469               	retlw	110	;'n'
  1795  2831  346E               	retlw	99	;'c'
  1796  2832  3463               	retlw	104	;'h'
  1797  2833  3468               	retlw	67	;'C'
  1798  2834  3443               	retlw	104	;'h'
  1799  2835  3468               	retlw	51	;'3'
  1800  2836  3433               	retlw	58	;':'
  1801  2837  343A               	retlw	32	;' '
  1802  2838  3420               	retlw	120	;'x'
  1803  2839  3478               	retlw	120	;'x'
  1804  283A  3478               	retlw	32	;' '
  1805  283B  3420               	retlw	105	;'i'
  1806  283C  3469               	retlw	110	;'n'
  1807  283D  346E               	retlw	99	;'c'
  1808  283E  3463               	retlw	104	;'h'
  1809  283F  3468               	retlw	67	;'C'
  1810  2840  3443               	retlw	104	;'h'
  1811  2841  3468               	retlw	52	;'4'
  1812  2842  3434               	retlw	58	;':'
  1813  2843  343A               	retlw	32	;' '
  1814  2844  3420               	retlw	120	;'x'
  1815  2845  3478               	retlw	120	;'x'
  1816  2846  3478               	retlw	32	;' '
  1817  2847  3420               	retlw	105	;'i'
  1818  2848  3469               	retlw	110	;'n'
  1819  2849  346E               	retlw	99	;'c'
  1820  284A  3463               	retlw	104	;'h'
  1821  284B  3468               	retlw	0
  1822  284C  3400               psect	stringtext2,class=STRCODE,delta=2,noexec
  1823                           global __pstringtext2
  1824                           __pstringtext2:
  1825  284D                     	
  1826                           STR_3:	
  1827  284D                     	retlw	84	;'T'
  1828  284D  3454               	retlw	101	;'e'
  1829  284E  3465               	retlw	109	;'m'
  1830  284F  346D               	retlw	112	;'p'
  1831  2850  3470               	retlw	101	;'e'
  1832  2851  3465               	retlw	114	;'r'
  1833  2852  3472               	retlw	97	;'a'
  1834  2853  3461               	retlw	116	;'t'
  1835  2854  3474               	retlw	117	;'u'
  1836  2855  3475               	retlw	114	;'r'
  1837  2856  3472               	retlw	101	;'e'
  1838  2857  3465               	retlw	32	;' '
  1839  2858  3420               	retlw	82	;'R'
  1840  2859  3452               	retlw	101	;'e'
  1841  285A  3465               	retlw	108	;'l'
  1842  285B  346C               	retlw	46	;'.'
  1843  285C  342E               	retlw	104	;'h'
  1844  285D  3468               	retlw	117	;'u'
  1845  285E  3475               	retlw	109	;'m'
  1846  285F  346D               	retlw	105	;'i'
  1847  2860  3469               	retlw	100	;'d'
  1848  2861  3464               	retlw	105	;'i'
  1849  2862  3469               	retlw	116	;'t'
  1850  2863  3474               	retlw	121	;'y'
  1851  2864  3479               	retlw	68	;'D'
  1852  2865  3444               	retlw	101	;'e'
  1853  2866  3465               	retlw	119	;'w'
  1854  2867  3477               	retlw	112	;'p'
  1855  2868  3470               	retlw	111	;'o'
  1856  2869  346F               	retlw	105	;'i'
  1857  286A  3469               	retlw	110	;'n'
  1858  286B  346E               	retlw	116	;'t'
  1859  286C  3474               	retlw	32	;' '
  1860  286D  3420               	retlw	32	;' '
  1861  286E  3420               	retlw	32	;' '
  1862  286F  3420               	retlw	32	;' '
  1863  2870  3420               	retlw	66	;'B'
  1864  2871  3442               	retlw	97	;'a'
  1865  2872  3461               	retlw	116	;'t'
  1866  2873  3474               	retlw	46	;'.'
  1867  2874  342E               	retlw	32	;' '
  1868  2875  3420               	retlw	32	;' '
  1869  2876  3420               	retlw	32	;' '
  1870  2877  3420               	retlw	80	;'P'
  1871  2878  3450               	retlw	111	;'o'
  1872  2879  346F               	retlw	119	;'w'
  1873  287A  3477               	retlw	101	;'e'
  1874  287B  3465               	retlw	114	;'r'
  1875  287C  3472               	retlw	0
  1876  287D  3400               psect	stringtext3,class=STRCODE,delta=2,noexec
  1877                           global __pstringtext3
  1878                           __pstringtext3:
  1879  287E                     	
  1880                           STR_6:	
  1881  287E                     	retlw	37	;'%'
  1882  287E  3425               	retlw	115	;'s'
  1883  287F  3473               	retlw	37	;'%'
  1884  2880  3425               	retlw	53	;'5'
  1885  2881  3435               	retlw	46	;'.'
  1886  2882  342E               	retlw	49	;'1'
  1887  2883  3431               	retlw	102	;'f'
  1888  2884  3466               	retlw	32	;' '
  1889  2885  3420               	retlw	37	;'%'
  1890  2886  3425               	retlw	37	;'%'
  1891  2887  3425               	retlw	32	;' '
  1892  2888  3420               	retlw	32	;' '
  1893  2889  3420               	retlw	32	;' '
  1894  288A  3420               	retlw	32	;' '
  1895  288B  3420               	retlw	32	;' '
  1896  288C  3420               	retlw	37	;'%'
  1897  288D  3425               	retlw	53	;'5'
  1898  288E  3435               	retlw	46	;'.'
  1899  288F  342E               	retlw	49	;'1'
  1900  2890  3431               	retlw	102	;'f'
  1901  2891  3466               	retlw	32	;' '
  1902  2892  3420               	retlw	-33
  1903  2893  34DF               	retlw	67	;'C'
  1904  2894  3443               	retlw	32	;' '
  1905  2895  3420               	retlw	32	;' '
  1906  2896  3420               	retlw	32	;' '
  1907  2897  3420               	retlw	32	;' '
  1908  2898  3420               	retlw	37	;'%'
  1909  2899  3425               	retlw	52	;'4'
  1910  289A  3434               	retlw	46	;'.'
  1911  289B  342E               	retlw	49	;'1'
  1912  289C  3431               	retlw	102	;'f'
  1913  289D  3466               	retlw	86	;'V'
  1914  289E  3456               	retlw	32	;' '
  1915  289F  3420               	retlw	32	;' '
  1916  28A0  3420               	retlw	37	;'%'
  1917  28A1  3425               	retlw	52	;'4'
  1918  28A2  3434               	retlw	46	;'.'
  1919  28A3  342E               	retlw	49	;'1'
  1920  28A4  3431               	retlw	102	;'f'
  1921  28A5  3466               	retlw	87	;'W'
  1922  28A6  3457               	retlw	0
  1923  28A7  3400               psect	stringtext4,class=STRCODE,delta=2,noexec
  1924                           global __pstringtext4
  1925                           __pstringtext4:
  1926  28A8                     	
  1927                           STR_5:	
  1928  28A8                     	retlw	37	;'%'
  1929  28A8  3425               	retlw	51	;'3'
  1930  28A9  3433               	retlw	46	;'.'
  1931  28AA  342E               	retlw	48	;'0'
  1932  28AB  3430               	retlw	102	;'f'
  1933  28AC  3466               	retlw	32	;' '
  1934  28AD  3420               	retlw	124	;'|'
  1935  28AE  347C               	retlw	32	;' '
  1936  28AF  3420               	retlw	37	;'%'
  1937  28B0  3425               	retlw	51	;'3'
  1938  28B1  3433               	retlw	46	;'.'
  1939  28B2  342E               	retlw	48	;'0'
  1940  28B3  3430               	retlw	102	;'f'
  1941  28B4  3466               	retlw	32	;' '
  1942  28B5  3420               	retlw	-33
  1943  28B6  34DF               	retlw	67	;'C'
  1944  28B7  3443               	retlw	0
  1945  28B8  3400               psect	stringtext5,class=STRCODE,delta=2,noexec
  1946                           global __pstringtext5
  1947                           __pstringtext5:
  1948  28B9                     	
  1949                           STR_4:	
  1950  28B9                     	retlw	37	;'%'
  1951  28B9  3425               	retlw	53	;'5'
  1952  28BA  3435               	retlw	46	;'.'
  1953  28BB  342E               	retlw	49	;'1'
  1954  28BC  3431               	retlw	102	;'f'
  1955  28BD  3466               	retlw	32	;' '
  1956  28BE  3420               	retlw	-33
  1957  28BF  34DF               	retlw	67	;'C'
  1958  28C0  3443               	retlw	32	;' '
  1959  28C1  3420               	retlw	32	;' '
  1960  28C2  3420               	retlw	32	;' '
  1961  28C3  3420               	retlw	32	;' '
  1962  28C4  3420               	retlw	0
  1963  28C5  3400               psect	stringtext6,class=STRCODE,delta=2,noexec
  1964                           global __pstringtext6
  1965                           __pstringtext6:
  1966  28C6                     	
  1967                           STR_8:	
  1968  28C6                     	retlw	73	;'I'
  1969  28C6  3449               	retlw	78	;'N'
  1970  28C7  344E               	retlw	70	;'F'
  1971  28C8  3446               	retlw	0
  1972  28C9  3400               psect	stringtext7,class=STRCODE,delta=2,noexec
  1973                           global __pstringtext7
  1974                           __pstringtext7:
  1975  28CA                     	
  1976                           STR_12:	
  1977  28CA                     	retlw	78	;'N'
  1978  28CA  344E               	retlw	65	;'A'
  1979  28CB  3441               	retlw	78	;'N'
  1980  28CC  344E               	retlw	0
  1981  28CD  3400               psect	stringtext8,class=STRCODE,delta=2,noexec
  1982                           global __pstringtext8
  1983                           __pstringtext8:
  1984  28CE                     	
  1985                           STR_9:	
  1986  28CE                     	retlw	105	;'i'
  1987  28CE  3469               	retlw	110	;'n'
  1988  28CF  346E               	retlw	102	;'f'
  1989  28D0  3466               	retlw	0
  1990  28D1  3400               psect	stringtext9,class=STRCODE,delta=2,noexec
  1991                           global __pstringtext9
  1992                           __pstringtext9:
  1993  28D2                     	
  1994                           STR_13:	
  1995  28D2                     	retlw	110	;'n'
  1996  28D2  346E               	retlw	97	;'a'
  1997  28D3  3461               	retlw	110	;'n'
  1998  28D4  346E               	retlw	0
  1999  28D5  3400               psect	stringtext10,class=STRCODE,delta=2,noexec
  2000                           global __pstringtext10
  2001                           __pstringtext10:
  2002  28D6                     	
  2003                           STR_16:	
  2004  28D6                     	retlw	108	;'l'
  2005  28D6  346C               	retlw	102	;'f'
  2006  28D7  3466               	retlw	0
  2007  28D8  3400               psect	stringtext11,class=STRCODE,delta=2,noexec
  2008                           global __pstringtext11
  2009                           __pstringtext11:
  2010  0000                     STR_1	equ	STR_3+36
  2011  2871                     STR_10	equ	STR_9+0
  2012  28CE                     STR_11	equ	STR_9+0
  2013  28CE                     STR_14	equ	STR_9+0
  2014  28CE                     STR_15	equ	STR_9+0
  2015  28CE                     STR_17	equ	STR_16+0
  2016  28D6                     STR_18	equ	STR_16+0
  2017  28D6                     STR_19	equ	STR_16+0
  2018  28D6                     STR_20	equ	STR_16+0
  2019  28D6                     STR_2	equ	STR_6+27
  2020  2899                     ; #config settings
  2021                           global __CFG_FEXTOSC$OFF
  2022                           __CFG_FEXTOSC$OFF equ 0x0
  2023  0000                     global __CFG_RSTOSC$HFINT1
  2024                           __CFG_RSTOSC$HFINT1 equ 0x0
  2025  0000                     global __CFG_CLKOUTEN$OFF
  2026                           __CFG_CLKOUTEN$OFF equ 0x0
  2027  0000                     global __CFG_CSWEN$ON
  2028                           __CFG_CSWEN$ON equ 0x0
  2029  0000                     global __CFG_FCMEN$ON
  2030                           __CFG_FCMEN$ON equ 0x0
  2031  0000                     global __CFG_MCLRE$ON
  2032                           __CFG_MCLRE$ON equ 0x0
  2033  0000                     global __CFG_PWRTE$OFF
  2034                           __CFG_PWRTE$OFF equ 0x0
  2035  0000                     global __CFG_LPBOREN$OFF
  2036                           __CFG_LPBOREN$OFF equ 0x0
  2037  0000                     global __CFG_BOREN$ON
  2038                           __CFG_BOREN$ON equ 0x0
  2039  0000                     global __CFG_BORV$LO
  2040                           __CFG_BORV$LO equ 0x0
  2041  0000                     global __CFG_ZCD$OFF
  2042                           __CFG_ZCD$OFF equ 0x0
  2043  0000                     global __CFG_PPS1WAY$ON
  2044                           __CFG_PPS1WAY$ON equ 0x0
  2045  0000                     global __CFG_STVREN$ON
  2046                           __CFG_STVREN$ON equ 0x0
  2047  0000                     global __CFG_WDTCPS$WDTCPS_31
  2048                           __CFG_WDTCPS$WDTCPS_31 equ 0x0
  2049  0000                     global __CFG_WDTE$OFF
  2050                           __CFG_WDTE$OFF equ 0x0
  2051  0000                     global __CFG_WDTCWS$WDTCWS_7
  2052                           __CFG_WDTCWS$WDTCWS_7 equ 0x0
  2053  0000                     global __CFG_WDTCCS$SC
  2054                           __CFG_WDTCCS$SC equ 0x0
  2055  0000                     global __CFG_BBSIZE$BB512
  2056                           __CFG_BBSIZE$BB512 equ 0x0
  2057  0000                     global __CFG_BBEN$OFF
  2058                           __CFG_BBEN$OFF equ 0x0
  2059  0000                     global __CFG_SAFEN$OFF
  2060                           __CFG_SAFEN$OFF equ 0x0
  2061  0000                     global __CFG_WRTAPP$OFF
  2062                           __CFG_WRTAPP$OFF equ 0x0
  2063  0000                     global __CFG_WRTB$OFF
  2064                           __CFG_WRTB$OFF equ 0x0
  2065  0000                     global __CFG_WRTC$OFF
  2066                           __CFG_WRTC$OFF equ 0x0
  2067  0000                     global __CFG_WRTSAF$OFF
  2068                           __CFG_WRTSAF$OFF equ 0x0
  2069  0000                     global __CFG_LVP$ON
  2070                           __CFG_LVP$ON equ 0x0
  2071  0000                     global __CFG_CP$OFF
  2072                           __CFG_CP$OFF equ 0x0
  2073  0000                     	file	"C:\Users\Ondre\AppData\Local\Temp\s67o."
  2074                           	line	#
  2075                           psect cinit,class=CODE,delta=2
  2076                           global start_initialization
  2077                           start_initialization:
  2078  0097                     
  2079                           global __initialization
  2080                           __initialization:
  2081  0097                     psect	bssCOMMON,class=COMMON,space=1,noexec
  2082                           global __pbssCOMMON
  2083                           __pbssCOMMON:
  2084  007B                     uartReceiveISR@rxCount:
  2085  007B                            ds      1
  2086  007B                     
  2087                           _g_curRotState:
  2088  007C                            ds      1
  2089  007C                     
  2090                           _g_10msTick:
  2091  007D                            ds      1
  2092  007D                     
  2093                           psect	bssBANK2,class=BANK2,space=1,noexec
  2094                           global __pbssBANK2
  2095                           __pbssBANK2:
  2096  0160                     _g_100msTick:
  2097  0160                            ds      4
  2098  0160                     
  2099                           _width:
  2100  0164                            ds      2
  2101  0164                     
  2102                           _prec:
  2103  0166                            ds      2
  2104  0166                     
  2105                           _flags:
  2106  0168                            ds      2
  2107  0168                     
  2108                           uartReceiveISR@checksum:
  2109  016A                            ds      1
  2110  016A                     
  2111                           _g_pbState:
  2112  016B                            ds      1
  2113  016B                     
  2114                           _g_rotDir:
  2115  016C                            ds      1
  2116  016C                     
  2117                           _g_dataReady:
  2118  016D                            ds      1
  2119  016D                     
  2120                           _g_rxFErrCount:
  2121  016E                            ds      1
  2122  016E                     
  2123                           _g_sensorTimer:
  2124  016F                            ds      1
  2125  016F                     
  2126                           psect	bssBANK3,class=BANK3,space=1,noexec
  2127                           global __pbssBANK3
  2128                           __pbssBANK3:
  2129  01EA                     convertAnalogValues@avgT:
  2130  01EA                            ds      2
  2131  01EA                     
  2132                           _g_rxOErrCount:
  2133  01EC                            ds      1
  2134  01EC                     
  2135                           _g_status:
  2136  01ED                            ds      1
  2137  01ED                     
  2138                           showMenu@page:
  2139  01EE                            ds      1
  2140  01EE                     
  2141                           showMenu@menu:
  2142  01EF                            ds      1
  2143  01EF                     
  2144                           psect	bssBANK4,class=BANK4,space=1,noexec
  2145                           global __pbssBANK4
  2146                           __pbssBANK4:
  2147  0220                     floorf@F514:
  2148  0220                            ds      4
  2149  0220                     
  2150                           ___fpclassifyf@F453:
  2151  0224                            ds      4
  2152  0224                     
  2153                           _g_power:
  2154  0228                            ds      4
  2155  0228                     
  2156                           _g_current:
  2157  022C                            ds      4
  2158  022C                     
  2159                           _g_voltage:
  2160  0230                            ds      4
  2161  0230                     
  2162                           _g_tempAux:
  2163  0234                            ds      4
  2164  0234                     
  2165                           _g_sensorVersion:
  2166  0238                            ds      4
  2167  0238                     
  2168                           _g_dewPointC:
  2169  023C                            ds      4
  2170  023C                     
  2171                           _g_relHum:
  2172  0240                            ds      4
  2173  0240                     
  2174                           _g_tempC:
  2175  0244                            ds      4
  2176  0244                     
  2177                           _nout:
  2178  0248                            ds      2
  2179  0248                     
  2180                           convertAnalogValues@avgI:
  2181  024A                            ds      2
  2182  024A                     
  2183                           convertAnalogValues@avgV:
  2184  024C                            ds      2
  2185  024C                     
  2186                           _g_dataPacket:
  2187  024E                            ds      15
  2188  024E                     
  2189                           psect	dataBANK4,class=BANK4,space=1,noexec
  2190                           global __pdataBANK4
  2191                           __pdataBANK4:
  2192  025D                     	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  2193                           	line	548
  2194                           stoa@F1143:
  2195  025D                            ds      7
  2196  025D                     
  2197                           psect	dataBANK4
  2198                           	file	"oled.c"
  2199                           	line	153
  2200                           OLED_print_xy@F7353:
  2201  0264                            ds      4
  2202  0264                     
  2203                           psect	dataBANK4
  2204                           	file	"oled.c"
  2205                           	line	139
  2206                           OLED_setCursor@F7345:
  2207  0268                            ds      4
  2208  0268                     
  2209                           psect	bssBANK5,class=BANK5,space=1,noexec
  2210                           global __pbssBANK5
  2211                           __pbssBANK5:
  2212  02A0                     uartReceiveISR@buffer:
  2213  02A0                            ds      20
  2214  02A0                     
  2215                           psect	bssBANK6,class=BANK6,space=1,noexec
  2216                           global __pbssBANK6
  2217                           __pbssBANK6:
  2218  0320                     _dbuf:
  2219  0320                            ds      80
  2220  0320                     
  2221                           	file	"C:\Users\Ondre\AppData\Local\Temp\s67o."
  2222                           	line	#
  2223                           psect inittext,class=CODE,delta=2
  2224                           global init_ram,btemp
  2225                           init_ram:
  2226  2164                     	movwf btemp,f
  2227  2164  00FE               initloop:
  2228  2165                     	moviw fsr0++
  2229  2165  0012               	movwi fsr1++
  2230  2166  001E               	decfsz btemp
  2231  2167  0BFE               	goto initloop
  2232  2168  2965               	retlw 0
  2233  2169  3400               ; Initialize objects allocated to BANK4
  2234                           	global __pidataBANK4,__pdataBANK4
  2235                           psect cinit,class=CODE,delta=2,merge=1
  2236                           	movlw low(__pidataBANK4)
  2237  0097  30B2               	movwf fsr0l
  2238  0098  0084               	movlw high(__pidataBANK4)|80h
  2239  0099  30A1               	movwf fsr0h
  2240  009A  0085               	movlw low(__pdataBANK4)
  2241  009B  305D               	movwf fsr1l
  2242  009C  0086               	movlw high(__pdataBANK4)
  2243  009D  3002               	movwf fsr1h
  2244  009E  0087               	movlw 0Fh
  2245  009F  300F               	fcall init_ram
  2246  00A0  31A1  2164  3180   	line	#
  2247                           psect clrtext,class=CODE,delta=2
  2248                           global clear_ram0
  2249                           ;	Called with FSR0 containing the base address, and
  2250                           ;	WREG with the size to clear
  2251                           clear_ram0:
  2252  215E                     	clrwdt			;clear the watchdog before getting into this loop
  2253  215E  0064               clrloop0:
  2254  215F                     	clrf	indf0		;clear RAM location pointed to by FSR
  2255  215F  0180               	addfsr	0,1
  2256  2160  3101               	decfsz wreg		;Have we reached the end of clearing yet?
  2257  2161  0B89               	goto clrloop0	;have we reached the end yet?
  2258  2162  295F               	retlw	0		;all done for this memory range, return
  2259  2163  3400               ; Clear objects allocated to COMMON
  2260                           psect cinit,class=CODE,delta=2,merge=1
  2261                           	global __pbssCOMMON
  2262                           	clrf	((__pbssCOMMON)+0)&07Fh
  2263  00A3  01FB               	clrf	((__pbssCOMMON)+1)&07Fh
  2264  00A4  01FC               	clrf	((__pbssCOMMON)+2)&07Fh
  2265  00A5  01FD               ; Clear objects allocated to BANK2
  2266                           psect cinit,class=CODE,delta=2,merge=1
  2267                           	global __pbssBANK2
  2268                           	movlw	low(__pbssBANK2)
  2269  00A6  3060               	movwf	fsr0l
  2270  00A7  0084               	movlw	high(__pbssBANK2)
  2271  00A8  3001               	movwf	fsr0h
  2272  00A9  0085               	movlw	010h
  2273  00AA  3010               	fcall	clear_ram0
  2274  00AB  31A1  215E  3180   ; Clear objects allocated to BANK3
  2275                           psect cinit,class=CODE,delta=2,merge=1
  2276                           	global __pbssBANK3
  2277                           	movlb 3	; select bank3
  2278  00AE  0143               	clrf	((__pbssBANK3)+0)&07Fh
  2279  00AF  01EA               	clrf	((__pbssBANK3)+1)&07Fh
  2280  00B0  01EB               	clrf	((__pbssBANK3)+2)&07Fh
  2281  00B1  01EC               	clrf	((__pbssBANK3)+3)&07Fh
  2282  00B2  01ED               	clrf	((__pbssBANK3)+4)&07Fh
  2283  00B3  01EE               	clrf	((__pbssBANK3)+5)&07Fh
  2284  00B4  01EF               ; Clear objects allocated to BANK4
  2285                           psect cinit,class=CODE,delta=2,merge=1
  2286                           	global __pbssBANK4
  2287                           	movlw	low(__pbssBANK4)
  2288  00B5  3020               	movwf	fsr0l
  2289  00B6  0084               	movlw	high(__pbssBANK4)
  2290  00B7  3002               	movwf	fsr0h
  2291  00B8  0085               	movlw	03Dh
  2292  00B9  303D               	fcall	clear_ram0
  2293  00BA  31A1  215E  3180   ; Clear objects allocated to BANK5
  2294                           psect cinit,class=CODE,delta=2,merge=1
  2295                           	global __pbssBANK5
  2296                           	movlw	low(__pbssBANK5)
  2297  00BD  30A0               	movwf	fsr0l
  2298  00BE  0084               	movlw	high(__pbssBANK5)
  2299  00BF  3002               	movwf	fsr0h
  2300  00C0  0085               	movlw	014h
  2301  00C1  3014               	fcall	clear_ram0
  2302  00C2  31A1  215E  3180   ; Clear objects allocated to BANK6
  2303                           psect cinit,class=CODE,delta=2,merge=1
  2304                           	global __pbssBANK6
  2305                           	movlw	low(__pbssBANK6)
  2306  00C5  3020               	movwf	fsr0l
  2307  00C6  0084               	movlw	high(__pbssBANK6)
  2308  00C7  3003               	movwf	fsr0h
  2309  00C8  0085               	movlw	050h
  2310  00C9  3050               	fcall	clear_ram0
  2311  00CA  31A1  215E  3180   psect cinit,class=CODE,delta=2,merge=1
  2312                           global end_of_initialization,__end_of__initialization
  2313                           
  2314                           ;End of C runtime variable initialization code
  2315                           
  2316                           end_of_initialization:
  2317  00CD                     __end_of__initialization:
  2318  00CD                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  2319  00CD  107E               movlb 0
  2320  00CE  0140               ljmp _main	;jump to C main() function
  2321  00CF  319C  2CBB         psect	cstackBANK3,class=BANK3,space=1,noexec
  2322                           global __pcstackBANK3
  2323                           __pcstackBANK3:
  2324  01A0                     	global	showMenu@s
  2325                           showMenu@s:	; 61 bytes @ 0x0
  2326  01A0                     	ds	61
  2327  01A0                     	global	showMenu@s12
  2328                           showMenu@s12:	; 12 bytes @ 0x3D
  2329  01DD                     	ds	12
  2330  01DD                     	global	showMenu@pb
  2331                           showMenu@pb:	; 1 bytes @ 0x49
  2332  01E9                     	ds	1
  2333  01E9                     psect	cstackBANK2,class=BANK2,space=1,noexec
  2334                           global __pcstackBANK2
  2335                           __pcstackBANK2:
  2336  0120                     	global	_vfpfcnvrt$944
  2337                           _vfpfcnvrt$944:	; 2 bytes @ 0x0
  2338  0120                     	ds	2
  2339  0120                     	global	_vfpfcnvrt$945
  2340                           _vfpfcnvrt$945:	; 2 bytes @ 0x2
  2341  0122                     	ds	2
  2342  0122                     	global	_vfpfcnvrt$949
  2343                           _vfpfcnvrt$949:	; 2 bytes @ 0x4
  2344  0124                     	ds	2
  2345  0124                     	global	vfpfcnvrt@cp
  2346                           vfpfcnvrt@cp:	; 1 bytes @ 0x6
  2347  0126                     	ds	1
  2348  0126                     	global	vfpfcnvrt@f
  2349                           vfpfcnvrt@f:	; 4 bytes @ 0x7
  2350  0127                     	ds	4
  2351  0127                     	global	vfpfcnvrt@ct
  2352                           vfpfcnvrt@ct:	; 3 bytes @ 0xB
  2353  012B                     	ds	3
  2354  012B                     	global	vfpfcnvrt@c
  2355                           vfpfcnvrt@c:	; 1 bytes @ 0xE
  2356  012E                     	ds	1
  2357  012E                     	global	vfpfcnvrt@fp
  2358                           vfpfcnvrt@fp:	; 1 bytes @ 0xF
  2359  012F                     	ds	1
  2360  012F                     	global	?_vfprintf
  2361                           ?_vfprintf:	; 2 bytes @ 0x10
  2362  0130                     	global	vfprintf@fmt
  2363                           vfprintf@fmt:	; 2 bytes @ 0x10
  2364  0130                     	ds	2
  2365  0130                     	global	vfprintf@ap
  2366                           vfprintf@ap:	; 1 bytes @ 0x12
  2367  0132                     	ds	1
  2368  0132                     ??_vfprintf:	; 1 bytes @ 0x13
  2369  0133                     	ds	2
  2370  0133                     	global	vfprintf@fp
  2371                           vfprintf@fp:	; 1 bytes @ 0x15
  2372  0135                     	ds	1
  2373  0135                     	global	vfprintf@cfmt
  2374                           vfprintf@cfmt:	; 2 bytes @ 0x16
  2375  0136                     	ds	2
  2376  0136                     	global	?_sprintf
  2377                           ?_sprintf:	; 2 bytes @ 0x18
  2378  0138                     	global	sprintf@fmt
  2379                           sprintf@fmt:	; 2 bytes @ 0x18
  2380  0138                     	ds	19
  2381  0138                     ??_sprintf:	; 1 bytes @ 0x2B
  2382  014B                     	ds	1
  2383  014B                     	global	sprintf@ret
  2384                           sprintf@ret:	; 2 bytes @ 0x2C
  2385  014C                     	ds	2
  2386  014C                     	global	sprintf@s
  2387                           sprintf@s:	; 1 bytes @ 0x2E
  2388  014E                     	ds	1
  2389  014E                     	global	sprintf@ap
  2390                           sprintf@ap:	; 1 bytes @ 0x2F
  2391  014F                     	ds	1
  2392  014F                     	global	sprintf@f
  2393                           sprintf@f:	; 5 bytes @ 0x30
  2394  0150                     	ds	5
  2395  0150                     ??_showMenu:	; 1 bytes @ 0x35
  2396  0155                     	ds	2
  2397  0155                     ??_main:	; 1 bytes @ 0x37
  2398  0157                     	ds	1
  2399  0157                     	global	main@sensorTime
  2400                           main@sensorTime:	; 4 bytes @ 0x38
  2401  0158                     	ds	4
  2402  0158                     	global	main@sensorTimeout
  2403                           main@sensorTimeout:	; 4 bytes @ 0x3C
  2404  015C                     	ds	4
  2405  015C                     psect	cstackBANK1,class=BANK1,space=1,noexec
  2406                           global __pcstackBANK1
  2407                           __pcstackBANK1:
  2408  00A0                     	global	floorf@m
  2409                           floorf@m:	; 4 bytes @ 0x0
  2410  00A0                     	ds	4
  2411  00A0                     	global	floorf@e
  2412                           floorf@e:	; 2 bytes @ 0x4
  2413  00A4                     	ds	2
  2414  00A4                     	global	floorf@u
  2415                           floorf@u:	; 4 bytes @ 0x6
  2416  00A6                     	ds	4
  2417  00A6                     	global	?_efgtoa
  2418                           ?_efgtoa:	; 2 bytes @ 0xA
  2419  00AA                     	global	efgtoa@f
  2420                           efgtoa@f:	; 4 bytes @ 0xA
  2421  00AA                     	ds	4
  2422  00AA                     	global	efgtoa@c
  2423                           efgtoa@c:	; 1 bytes @ 0xE
  2424  00AE                     	ds	1
  2425  00AE                     	global	efgtoa@ou
  2426                           efgtoa@ou:	; 4 bytes @ 0xF
  2427  00AF                     	ds	4
  2428  00AF                     	global	_efgtoa$908
  2429                           _efgtoa$908:	; 2 bytes @ 0x13
  2430  00B3                     	ds	2
  2431  00B3                     	global	_efgtoa$909
  2432                           _efgtoa$909:	; 2 bytes @ 0x15
  2433  00B5                     	ds	2
  2434  00B5                     	global	_efgtoa$914
  2435                           _efgtoa$914:	; 2 bytes @ 0x17
  2436  00B7                     	ds	2
  2437  00B7                     	global	_efgtoa$918
  2438                           _efgtoa$918:	; 2 bytes @ 0x19
  2439  00B9                     	ds	2
  2440  00B9                     	global	_efgtoa$919
  2441                           _efgtoa$919:	; 2 bytes @ 0x1B
  2442  00BB                     	ds	2
  2443  00BB                     	global	_efgtoa$920
  2444                           _efgtoa$920:	; 2 bytes @ 0x1D
  2445  00BD                     	ds	2
  2446  00BD                     	global	efgtoa@t
  2447                           efgtoa@t:	; 2 bytes @ 0x1F
  2448  00BF                     	ds	2
  2449  00BF                     	global	efgtoa@pp
  2450                           efgtoa@pp:	; 2 bytes @ 0x21
  2451  00C1                     	ds	2
  2452  00C1                     	global	efgtoa@m
  2453                           efgtoa@m:	; 2 bytes @ 0x23
  2454  00C3                     	ds	2
  2455  00C3                     	global	efgtoa@ne
  2456                           efgtoa@ne:	; 2 bytes @ 0x25
  2457  00C5                     	ds	2
  2458  00C5                     	global	efgtoa@d
  2459                           efgtoa@d:	; 2 bytes @ 0x27
  2460  00C7                     	ds	2
  2461  00C7                     	global	efgtoa@sign
  2462                           efgtoa@sign:	; 2 bytes @ 0x29
  2463  00C9                     	ds	2
  2464  00C9                     	global	efgtoa@fp
  2465                           efgtoa@fp:	; 1 bytes @ 0x2B
  2466  00CB                     	ds	1
  2467  00CB                     	global	efgtoa@p
  2468                           efgtoa@p:	; 2 bytes @ 0x2C
  2469  00CC                     	ds	2
  2470  00CC                     	global	efgtoa@nmode
  2471                           efgtoa@nmode:	; 1 bytes @ 0x2E
  2472  00CE                     	ds	1
  2473  00CE                     	global	efgtoa@w
  2474                           efgtoa@w:	; 2 bytes @ 0x2F
  2475  00CF                     	ds	2
  2476  00CF                     	global	efgtoa@mode
  2477                           efgtoa@mode:	; 1 bytes @ 0x31
  2478  00D1                     	ds	1
  2479  00D1                     	global	efgtoa@h
  2480                           efgtoa@h:	; 4 bytes @ 0x32
  2481  00D2                     	ds	4
  2482  00D2                     	global	efgtoa@l
  2483                           efgtoa@l:	; 4 bytes @ 0x36
  2484  00D6                     	ds	4
  2485  00D6                     	global	efgtoa@i
  2486                           efgtoa@i:	; 2 bytes @ 0x3A
  2487  00DA                     	ds	2
  2488  00DA                     	global	efgtoa@g
  2489                           efgtoa@g:	; 4 bytes @ 0x3C
  2490  00DC                     	ds	4
  2491  00DC                     	global	efgtoa@e
  2492                           efgtoa@e:	; 2 bytes @ 0x40
  2493  00E0                     	ds	2
  2494  00E0                     	global	efgtoa@n
  2495                           efgtoa@n:	; 2 bytes @ 0x42
  2496  00E2                     	ds	2
  2497  00E2                     	global	efgtoa@u
  2498                           efgtoa@u:	; 4 bytes @ 0x44
  2499  00E4                     	ds	4
  2500  00E4                     	global	?_vfpfcnvrt
  2501                           ?_vfpfcnvrt:	; 2 bytes @ 0x48
  2502  00E8                     	global	vfpfcnvrt@fmt
  2503                           vfpfcnvrt@fmt:	; 1 bytes @ 0x48
  2504  00E8                     	ds	1
  2505  00E8                     	global	vfpfcnvrt@ap
  2506                           vfpfcnvrt@ap:	; 1 bytes @ 0x49
  2507  00E9                     	ds	1
  2508  00E9                     ??_vfpfcnvrt:	; 1 bytes @ 0x4A
  2509  00EA                     	ds	6
  2510  00EA                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  2511                           global __pcstackCOMMON
  2512                           __pcstackCOMMON:
  2513  0070                     ?_initialize:	; 1 bytes @ 0x0
  2514  0070                     ?_OLED_init:	; 1 bytes @ 0x0
  2515  0070                     ?_OLED_returnHome:	; 1 bytes @ 0x0
  2516  0070                     ?_OLED_command:	; 1 bytes @ 0x0
  2517  0070                     ?_convertAnalogValues:	; 1 bytes @ 0x0
  2518  0070                     ?_checkStatus:	; 1 bytes @ 0x0
  2519  0070                     ?_uartSendByte:	; 1 bytes @ 0x0
  2520  0070                     ?_handleSensorData:	; 1 bytes @ 0x0
  2521  0070                     ?_showMenu:	; 1 bytes @ 0x0
  2522  0070                     ?_getPB:	; 1 bytes @ 0x0
  2523  0070                     ?_getRotDir:	; 1 bytes @ 0x0
  2524  0070                     ?_OLED_scrollDisplayLeft:	; 1 bytes @ 0x0
  2525  0070                     ?_OLED_scrollDisplayRight:	; 1 bytes @ 0x0
  2526  0070                     ?_pushButtonISR:	; 1 bytes @ 0x0
  2527  0070                     ??_pushButtonISR:	; 1 bytes @ 0x0
  2528  0070                     ?_rotISR:	; 1 bytes @ 0x0
  2529  0070                     ??_rotISR:	; 1 bytes @ 0x0
  2530  0070                     ?_uartReceiveISR:	; 1 bytes @ 0x0
  2531  0070                     ?_strncpy:	; 1 bytes @ 0x0
  2532  0070                     ?_putch:	; 1 bytes @ 0x0
  2533  0070                     ?_main:	; 1 bytes @ 0x0
  2534  0070                     ?_ISR:	; 1 bytes @ 0x0
  2535  0070                     ?_OLED_pulseEnable:	; 1 bytes @ 0x0
  2536  0070                     ?_OLED_write4bits:	; 1 bytes @ 0x0
  2537  0070                     ?_OLED_waitForReady:	; 1 bytes @ 0x0
  2538  0070                     ?_OLED_write:	; 1 bytes @ 0x0
  2539  0070                     	global	?___llmod
  2540                           ?___llmod:	; 4 bytes @ 0x0
  2541  0070                     putch@c:	; 1 bytes @ 0x0
  2542  0070                     	global	strncpy@s
  2543                           strncpy@s:	; 1 bytes @ 0x0
  2544  0070                     	global	___llmod@divisor
  2545                           ___llmod@divisor:	; 4 bytes @ 0x0
  2546  0070                     	ds	1
  2547  0070                     	global	strncpy@n
  2548                           strncpy@n:	; 2 bytes @ 0x1
  2549  0071                     	ds	2
  2550  0071                     ??_strncpy:	; 1 bytes @ 0x3
  2551  0073                     	ds	1
  2552  0073                     	global	strncpy@d
  2553                           strncpy@d:	; 1 bytes @ 0x4
  2554  0074                     	global	___llmod@dividend
  2555                           ___llmod@dividend:	; 4 bytes @ 0x4
  2556  0074                     	ds	1
  2557  0074                     	global	strncpy@cp
  2558                           strncpy@cp:	; 1 bytes @ 0x5
  2559  0075                     	ds	1
  2560  0075                     ??_uartReceiveISR:	; 1 bytes @ 0x6
  2561  0076                     	ds	1
  2562  0076                     	global	rotISR@input
  2563                           rotISR@input:	; 1 bytes @ 0x7
  2564  0077                     	ds	1
  2565  0077                     ??___llmod:	; 1 bytes @ 0x8
  2566  0078                     	ds	1
  2567  0078                     	global	___llmod@counter
  2568                           ___llmod@counter:	; 1 bytes @ 0x9
  2569  0079                     	ds	1
  2570  0079                     ??_ISR:	; 1 bytes @ 0xA
  2571  007A                     	ds	1
  2572  007A                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2573                           global __pcstackBANK0
  2574                           __pcstackBANK0:
  2575  0020                     ?___fleq:	; 1 bit 
  2576  0020                     ??_initialize:	; 1 bytes @ 0x0
  2577  0020                     ??_uartSendByte:	; 1 bytes @ 0x0
  2578  0020                     ??_getPB:	; 1 bytes @ 0x0
  2579  0020                     ??_getRotDir:	; 1 bytes @ 0x0
  2580  0020                     ?_strcpy:	; 1 bytes @ 0x0
  2581  0020                     ??_putch:	; 1 bytes @ 0x0
  2582  0020                     ??_OLED_pulseEnable:	; 1 bytes @ 0x0
  2583  0020                     ??_OLED_write4bits:	; 1 bytes @ 0x0
  2584  0020                     ??_OLED_waitForReady:	; 1 bytes @ 0x0
  2585  0020                     ?_fputc:	; 2 bytes @ 0x0
  2586  0020                     	global	?_strlen
  2587                           ?_strlen:	; 2 bytes @ 0x0
  2588  0020                     	global	?___fpclassifyf
  2589                           ?___fpclassifyf:	; 2 bytes @ 0x0
  2590  0020                     	global	?_isupper
  2591                           ?_isupper:	; 2 bytes @ 0x0
  2592  0020                     	global	?_isdigit
  2593                           ?_isdigit:	; 2 bytes @ 0x0
  2594  0020                     	global	?_strncmp
  2595                           ?_strncmp:	; 2 bytes @ 0x0
  2596  0020                     	global	?__Umul8_16
  2597                           ?__Umul8_16:	; 2 bytes @ 0x0
  2598  0020                     	global	?_isspace
  2599                           ?_isspace:	; 2 bytes @ 0x0
  2600  0020                     	global	?_adcGetConversion
  2601                           ?_adcGetConversion:	; 2 bytes @ 0x0
  2602  0020                     	global	?___wmul
  2603                           ?___wmul:	; 2 bytes @ 0x0
  2604  0020                     	global	?___awdiv
  2605                           ?___awdiv:	; 2 bytes @ 0x0
  2606  0020                     	global	?___awmod
  2607                           ?___awmod:	; 2 bytes @ 0x0
  2608  0020                     	global	?_timeNow
  2609                           ?_timeNow:	; 4 bytes @ 0x0
  2610  0020                     	global	?___lmul
  2611                           ?___lmul:	; 4 bytes @ 0x0
  2612  0020                     	global	?___flneg
  2613                           ?___flneg:	; 4 bytes @ 0x0
  2614  0020                     	global	?___fltol
  2615                           ?___fltol:	; 4 bytes @ 0x0
  2616  0020                     	global	?___xxtofl
  2617                           ?___xxtofl:	; 4 bytes @ 0x0
  2618  0020                     	global	uartSendByte@s
  2619                           uartSendByte@s:	; 1 bytes @ 0x0
  2620  0020                     	global	OLED_waitForReady@busy
  2621                           OLED_waitForReady@busy:	; 1 bytes @ 0x0
  2622  0020                     	global	__Umul8_16@multiplicand
  2623                           __Umul8_16@multiplicand:	; 1 bytes @ 0x0
  2624  0020                     	global	___wmul@multiplier
  2625                           ___wmul@multiplier:	; 2 bytes @ 0x0
  2626  0020                     	global	___awdiv@divisor
  2627                           ___awdiv@divisor:	; 2 bytes @ 0x0
  2628  0020                     	global	___awmod@divisor
  2629                           ___awmod@divisor:	; 2 bytes @ 0x0
  2630  0020                     	global	isdigit@c
  2631                           isdigit@c:	; 2 bytes @ 0x0
  2632  0020                     	global	isspace@c
  2633                           isspace@c:	; 2 bytes @ 0x0
  2634  0020                     	global	isupper@c
  2635                           isupper@c:	; 2 bytes @ 0x0
  2636  0020                     	global	fputc@c
  2637                           fputc@c:	; 2 bytes @ 0x0
  2638  0020                     	global	strcpy@src
  2639                           strcpy@src:	; 2 bytes @ 0x0
  2640  0020                     	global	strlen@s
  2641                           strlen@s:	; 2 bytes @ 0x0
  2642  0020                     	global	strncmp@_r
  2643                           strncmp@_r:	; 2 bytes @ 0x0
  2644  0020                     	global	___lmul@multiplier
  2645                           ___lmul@multiplier:	; 4 bytes @ 0x0
  2646  0020                     	global	___fleq@ff1
  2647                           ___fleq@ff1:	; 4 bytes @ 0x0
  2648  0020                     	global	___flneg@f1
  2649                           ___flneg@f1:	; 4 bytes @ 0x0
  2650  0020                     	global	___fltol@f1
  2651                           ___fltol@f1:	; 4 bytes @ 0x0
  2652  0020                     	global	___xxtofl@val
  2653                           ___xxtofl@val:	; 4 bytes @ 0x0
  2654  0020                     	global	___fpclassifyf@x
  2655                           ___fpclassifyf@x:	; 4 bytes @ 0x0
  2656  0020                     	ds	1
  2657  0020                     	global	getRotDir@ret
  2658                           getRotDir@ret:	; 1 bytes @ 0x1
  2659  0021                     	global	getPB@ret
  2660                           getPB@ret:	; 1 bytes @ 0x1
  2661  0021                     	ds	1
  2662  0021                     ??_strlen:	; 1 bytes @ 0x2
  2663  0022                     ??_isupper:	; 1 bytes @ 0x2
  2664  0022                     ??_strcpy:	; 1 bytes @ 0x2
  2665  0022                     ??_isdigit:	; 1 bytes @ 0x2
  2666  0022                     ??__Umul8_16:	; 1 bytes @ 0x2
  2667  0022                     ??_isspace:	; 1 bytes @ 0x2
  2668  0022                     ??_adcGetConversion:	; 1 bytes @ 0x2
  2669  0022                     	global	OLED_write4bits@value
  2670                           OLED_write4bits@value:	; 1 bytes @ 0x2
  2671  0022                     	global	fputc@fp
  2672                           fputc@fp:	; 1 bytes @ 0x2
  2673  0022                     	global	___wmul@multiplicand
  2674                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  2675  0022                     	global	___awdiv@dividend
  2676                           ___awdiv@dividend:	; 2 bytes @ 0x2
  2677  0022                     	global	___awmod@dividend
  2678                           ___awmod@dividend:	; 2 bytes @ 0x2
  2679  0022                     	global	strncmp@n
  2680                           strncmp@n:	; 2 bytes @ 0x2
  2681  0022                     	ds	1
  2682  0022                     ??_fputc:	; 1 bytes @ 0x3
  2683  0023                     ?_OLED_send:	; 1 bytes @ 0x3
  2684  0023                     	global	adcGetConversion@channel
  2685                           adcGetConversion@channel:	; 1 bytes @ 0x3
  2686  0023                     	global	OLED_send@mode
  2687                           OLED_send@mode:	; 1 bytes @ 0x3
  2688  0023                     	ds	1
  2689  0023                     ??_timeNow:	; 1 bytes @ 0x4
  2690  0024                     ??___fpclassifyf:	; 1 bytes @ 0x4
  2691  0024                     ??_strncmp:	; 1 bytes @ 0x4
  2692  0024                     ??_OLED_send:	; 1 bytes @ 0x4
  2693  0024                     ??___wmul:	; 1 bytes @ 0x4
  2694  0024                     ??___awdiv:	; 1 bytes @ 0x4
  2695  0024                     ??___awmod:	; 1 bytes @ 0x4
  2696  0024                     ??___flneg:	; 1 bytes @ 0x4
  2697  0024                     ??___fltol:	; 1 bytes @ 0x4
  2698  0024                     ??___xxtofl:	; 1 bytes @ 0x4
  2699  0024                     	global	?_timeSince
  2700                           ?_timeSince:	; 4 bytes @ 0x4
  2701  0024                     	global	_isspace$1285
  2702                           _isspace$1285:	; 1 bytes @ 0x4
  2703  0024                     	global	___wmul@product
  2704                           ___wmul@product:	; 2 bytes @ 0x4
  2705  0024                     	global	strcpy@s
  2706                           strcpy@s:	; 2 bytes @ 0x4
  2707  0024                     	global	strlen@a
  2708                           strlen@a:	; 2 bytes @ 0x4
  2709  0024                     	global	__Umul8_16@product
  2710                           __Umul8_16@product:	; 2 bytes @ 0x4
  2711  0024                     	global	timeSince@since
  2712                           timeSince@since:	; 4 bytes @ 0x4
  2713  0024                     	global	___lmul@multiplicand
  2714                           ___lmul@multiplicand:	; 4 bytes @ 0x4
  2715  0024                     	global	___fleq@ff2
  2716                           ___fleq@ff2:	; 4 bytes @ 0x4
  2717  0024                     	ds	1
  2718  0024                     	global	OLED_send@value
  2719                           OLED_send@value:	; 1 bytes @ 0x5
  2720  0025                     	global	___awdiv@counter
  2721                           ___awdiv@counter:	; 1 bytes @ 0x5
  2722  0025                     	global	___awmod@counter
  2723                           ___awmod@counter:	; 1 bytes @ 0x5
  2724  0025                     	ds	1
  2725  0025                     ??_OLED_command:	; 1 bytes @ 0x6
  2726  0026                     ??_OLED_write:	; 1 bytes @ 0x6
  2727  0026                     	global	?_tolower
  2728                           ?_tolower:	; 2 bytes @ 0x6
  2729  0026                     	global	?_atoi
  2730                           ?_atoi:	; 2 bytes @ 0x6
  2731  0026                     	global	OLED_command@value
  2732                           OLED_command@value:	; 1 bytes @ 0x6
  2733  0026                     	global	OLED_write@value
  2734                           OLED_write@value:	; 1 bytes @ 0x6
  2735  0026                     	global	___awdiv@sign
  2736                           ___awdiv@sign:	; 1 bytes @ 0x6
  2737  0026                     	global	___awmod@sign
  2738                           ___awmod@sign:	; 1 bytes @ 0x6
  2739  0026                     	global	strcpy@d
  2740                           strcpy@d:	; 1 bytes @ 0x6
  2741  0026                     	global	strncmp@_l
  2742                           strncmp@_l:	; 1 bytes @ 0x6
  2743  0026                     	global	atoi@s
  2744                           atoi@s:	; 2 bytes @ 0x6
  2745  0026                     	global	tolower@c
  2746                           tolower@c:	; 2 bytes @ 0x6
  2747  0026                     	global	__Umul8_16@word_mpld
  2748                           __Umul8_16@word_mpld:	; 2 bytes @ 0x6
  2749  0026                     	ds	1
  2750  0026                     ??_OLED_init:	; 1 bytes @ 0x7
  2751  0027                     ??_OLED_returnHome:	; 1 bytes @ 0x7
  2752  0027                     ?_OLED_print_xy:	; 1 bytes @ 0x7
  2753  0027                     ?_menuInput:	; 1 bytes @ 0x7
  2754  0027                     ??_OLED_scrollDisplayLeft:	; 1 bytes @ 0x7
  2755  0027                     ??_OLED_scrollDisplayRight:	; 1 bytes @ 0x7
  2756  0027                     	global	menuInput@numPages
  2757                           menuInput@numPages:	; 1 bytes @ 0x7
  2758  0027                     	global	OLED_print_xy@row
  2759                           OLED_print_xy@row:	; 1 bytes @ 0x7
  2760  0027                     	global	strcpy@dest
  2761                           strcpy@dest:	; 1 bytes @ 0x7
  2762  0027                     	global	___awdiv@quotient
  2763                           ___awdiv@quotient:	; 2 bytes @ 0x7
  2764  0027                     	global	strncmp@r
  2765                           strncmp@r:	; 2 bytes @ 0x7
  2766  0027                     	ds	1
  2767  0027                     ??_timeSince:	; 1 bytes @ 0x8
  2768  0028                     ??_tolower:	; 1 bytes @ 0x8
  2769  0028                     ??_atoi:	; 1 bytes @ 0x8
  2770  0028                     ??___lmul:	; 1 bytes @ 0x8
  2771  0028                     ??___fleq:	; 1 bytes @ 0x8
  2772  0028                     ?_fputs:	; 2 bytes @ 0x8
  2773  0028                     	global	?_stoa
  2774                           ?_stoa:	; 2 bytes @ 0x8
  2775  0028                     	global	menuInput@menu
  2776                           menuInput@menu:	; 1 bytes @ 0x8
  2777  0028                     	global	stoa@s
  2778                           stoa@s:	; 1 bytes @ 0x8
  2779  0028                     	global	___xxtofl@sign
  2780                           ___xxtofl@sign:	; 1 bytes @ 0x8
  2781  0028                     	global	fputs@fp
  2782                           fputs@fp:	; 1 bytes @ 0x8
  2783  0028                     	global	__Umul8_16@multiplier
  2784                           __Umul8_16@multiplier:	; 1 bytes @ 0x8
  2785  0028                     	global	OLED_print_xy@s
  2786                           OLED_print_xy@s:	; 2 bytes @ 0x8
  2787  0028                     	global	___lmul@product
  2788                           ___lmul@product:	; 4 bytes @ 0x8
  2789  0028                     	ds	1
  2790  0028                     ??_fputs:	; 1 bytes @ 0x9
  2791  0029                     	global	menuInput@pbShort
  2792                           menuInput@pbShort:	; 1 bytes @ 0x9
  2793  0029                     	global	___fltol@sign1
  2794                           ___fltol@sign1:	; 1 bytes @ 0x9
  2795  0029                     	global	___xxtofl@exp
  2796                           ___xxtofl@exp:	; 1 bytes @ 0x9
  2797  0029                     	global	strncmp@l
  2798                           strncmp@l:	; 1 bytes @ 0x9
  2799  0029                     	ds	1
  2800  0029                     ??_OLED_print_xy:	; 1 bytes @ 0xA
  2801  002A                     ??_stoa:	; 1 bytes @ 0xA
  2802  002A                     	global	menuInput@pbLong
  2803                           menuInput@pbLong:	; 1 bytes @ 0xA
  2804  002A                     	global	___fltol@exp1
  2805                           ___fltol@exp1:	; 1 bytes @ 0xA
  2806  002A                     	global	___fpclassifyf@e
  2807                           ___fpclassifyf@e:	; 2 bytes @ 0xA
  2808  002A                     	global	___xxtofl@arg
  2809                           ___xxtofl@arg:	; 4 bytes @ 0xA
  2810  002A                     	ds	1
  2811  002A                     	global	menuInput@timeout
  2812                           menuInput@timeout:	; 1 bytes @ 0xB
  2813  002B                     	global	OLED_print_xy@row_offsets
  2814                           OLED_print_xy@row_offsets:	; 4 bytes @ 0xB
  2815  002B                     	ds	1
  2816  002B                     ??_menuInput:	; 1 bytes @ 0xC
  2817  002C                     	global	?_ema
  2818                           ?_ema:	; 2 bytes @ 0xC
  2819  002C                     	global	fputs@c
  2820                           fputs@c:	; 1 bytes @ 0xC
  2821  002C                     	global	ema@in
  2822                           ema@in:	; 2 bytes @ 0xC
  2823  002C                     	global	atoi@neg
  2824                           atoi@neg:	; 2 bytes @ 0xC
  2825  002C                     	global	_tolower$1376
  2826                           _tolower$1376:	; 2 bytes @ 0xC
  2827  002C                     	global	___fpclassifyf@u
  2828                           ___fpclassifyf@u:	; 4 bytes @ 0xC
  2829  002C                     	ds	1
  2830  002C                     	global	fputs@i
  2831                           fputs@i:	; 2 bytes @ 0xD
  2832  002D                     	global	stoa@nuls
  2833                           stoa@nuls:	; 7 bytes @ 0xD
  2834  002D                     	ds	1
  2835  002D                     ??_handleSensorData:	; 1 bytes @ 0xE
  2836  002E                     	global	?___flmul
  2837                           ?___flmul:	; 4 bytes @ 0xE
  2838  002E                     	global	menuInput@dir
  2839                           menuInput@dir:	; 1 bytes @ 0xE
  2840  002E                     	global	ema@average
  2841                           ema@average:	; 2 bytes @ 0xE
  2842  002E                     	global	_atoi$1254
  2843                           _atoi$1254:	; 2 bytes @ 0xE
  2844  002E                     	global	___flmul@b
  2845                           ___flmul@b:	; 4 bytes @ 0xE
  2846  002E                     	ds	1
  2847  002E                     	global	menuInput@pb
  2848                           menuInput@pb:	; 1 bytes @ 0xF
  2849  002F                     	global	OLED_print_xy@col
  2850                           OLED_print_xy@col:	; 1 bytes @ 0xF
  2851  002F                     	global	fputs@s
  2852                           fputs@s:	; 1 bytes @ 0xF
  2853  002F                     	ds	1
  2854  002F                     	global	?_pad
  2855                           ?_pad:	; 2 bytes @ 0x10
  2856  0030                     	global	menuInput@n
  2857                           menuInput@n:	; 1 bytes @ 0x10
  2858  0030                     	global	pad@buf
  2859                           pad@buf:	; 1 bytes @ 0x10
  2860  0030                     	global	_atoi$1256
  2861                           _atoi$1256:	; 2 bytes @ 0x10
  2862  0030                     	global	ema@alpha
  2863                           ema@alpha:	; 4 bytes @ 0x10
  2864  0030                     	ds	1
  2865  0030                     	global	menuInput@page
  2866                           menuInput@page:	; 1 bytes @ 0x11
  2867  0031                     	global	pad@p
  2868                           pad@p:	; 2 bytes @ 0x11
  2869  0031                     	ds	1
  2870  0031                     	global	_atoi$1255
  2871                           _atoi$1255:	; 1 bytes @ 0x12
  2872  0032                     	global	___flmul@a
  2873                           ___flmul@a:	; 4 bytes @ 0x12
  2874  0032                     	ds	1
  2875  0032                     ??_pad:	; 1 bytes @ 0x13
  2876  0033                     	global	atoi@n
  2877                           atoi@n:	; 2 bytes @ 0x13
  2878  0033                     	ds	1
  2879  0033                     ??_ema:	; 1 bytes @ 0x14
  2880  0034                     	global	pad@i
  2881                           pad@i:	; 2 bytes @ 0x14
  2882  0034                     	global	stoa@i
  2883                           stoa@i:	; 2 bytes @ 0x14
  2884  0034                     	global	timeSince@now
  2885                           timeSince@now:	; 4 bytes @ 0x14
  2886  0034                     	ds	2
  2887  0034                     ??___flmul:	; 1 bytes @ 0x16
  2888  0036                     	global	pad@w
  2889                           pad@w:	; 2 bytes @ 0x16
  2890  0036                     	global	stoa@w
  2891                           stoa@w:	; 2 bytes @ 0x16
  2892  0036                     	ds	2
  2893  0036                     	global	pad@fp
  2894                           pad@fp:	; 1 bytes @ 0x18
  2895  0038                     	global	stoa@fp
  2896                           stoa@fp:	; 1 bytes @ 0x18
  2897  0038                     	ds	1
  2898  0038                     	global	stoa@cp
  2899                           stoa@cp:	; 2 bytes @ 0x19
  2900  0039                     	ds	2
  2901  0039                     	global	___flmul@sign
  2902                           ___flmul@sign:	; 1 bytes @ 0x1B
  2903  003B                     	global	stoa@p
  2904                           stoa@p:	; 2 bytes @ 0x1B
  2905  003B                     	ds	1
  2906  003B                     	global	ema@tmp
  2907                           ema@tmp:	; 4 bytes @ 0x1C
  2908  003C                     	global	___flmul@grs
  2909                           ___flmul@grs:	; 4 bytes @ 0x1C
  2910  003C                     	ds	1
  2911  003C                     	global	stoa@l
  2912                           stoa@l:	; 2 bytes @ 0x1D
  2913  003D                     	ds	3
  2914  003D                     	global	___flmul@aexp
  2915                           ___flmul@aexp:	; 1 bytes @ 0x20
  2916  0040                     	ds	1
  2917  0040                     	global	___flmul@bexp
  2918                           ___flmul@bexp:	; 1 bytes @ 0x21
  2919  0041                     	ds	1
  2920  0041                     	global	___flmul@prod
  2921                           ___flmul@prod:	; 4 bytes @ 0x22
  2922  0042                     	ds	4
  2923  0042                     	global	___flmul@temp
  2924                           ___flmul@temp:	; 2 bytes @ 0x26
  2925  0046                     	ds	2
  2926  0046                     ?___flge:	; 1 bit 
  2927  0048                     	global	?___fladd
  2928                           ?___fladd:	; 4 bytes @ 0x28
  2929  0048                     	global	?___fldiv
  2930                           ?___fldiv:	; 4 bytes @ 0x28
  2931  0048                     	global	___flge@ff1
  2932                           ___flge@ff1:	; 4 bytes @ 0x28
  2933  0048                     	global	___fladd@b
  2934                           ___fladd@b:	; 4 bytes @ 0x28
  2935  0048                     	global	___fldiv@a
  2936                           ___fldiv@a:	; 4 bytes @ 0x28
  2937  0048                     	ds	4
  2938  0048                     	global	___flge@ff2
  2939                           ___flge@ff2:	; 4 bytes @ 0x2C
  2940  004C                     	global	___fladd@a
  2941                           ___fladd@a:	; 4 bytes @ 0x2C
  2942  004C                     	global	___fldiv@b
  2943                           ___fldiv@b:	; 4 bytes @ 0x2C
  2944  004C                     	ds	4
  2945  004C                     ??___flge:	; 1 bytes @ 0x30
  2946  0050                     ??___fladd:	; 1 bytes @ 0x30
  2947  0050                     ??___fldiv:	; 1 bytes @ 0x30
  2948  0050                     	ds	5
  2949  0050                     	global	___fldiv@rem
  2950                           ___fldiv@rem:	; 4 bytes @ 0x35
  2951  0055                     	ds	3
  2952  0055                     ??_checkStatus:	; 1 bytes @ 0x38
  2953  0058                     	ds	1
  2954  0058                     	global	___fldiv@sign
  2955                           ___fldiv@sign:	; 1 bytes @ 0x39
  2956  0059                     	ds	1
  2957  0059                     	global	___fldiv@new_exp
  2958                           ___fldiv@new_exp:	; 2 bytes @ 0x3A
  2959  005A                     	ds	2
  2960  005A                     	global	___fladd@signs
  2961                           ___fladd@signs:	; 1 bytes @ 0x3C
  2962  005C                     	global	___fldiv@grs
  2963                           ___fldiv@grs:	; 4 bytes @ 0x3C
  2964  005C                     	ds	1
  2965  005C                     	global	___fladd@aexp
  2966                           ___fladd@aexp:	; 1 bytes @ 0x3D
  2967  005D                     	ds	1
  2968  005D                     	global	___fladd@bexp
  2969                           ___fladd@bexp:	; 1 bytes @ 0x3E
  2970  005E                     	ds	1
  2971  005E                     	global	___fladd@grs
  2972                           ___fladd@grs:	; 1 bytes @ 0x3F
  2973  005F                     	ds	1
  2974  005F                     	global	?___flsub
  2975                           ?___flsub:	; 4 bytes @ 0x40
  2976  0060                     	global	___fldiv@bexp
  2977                           ___fldiv@bexp:	; 1 bytes @ 0x40
  2978  0060                     	global	___flsub@a
  2979                           ___flsub@a:	; 4 bytes @ 0x40
  2980  0060                     	ds	1
  2981  0060                     	global	___fldiv@aexp
  2982                           ___fldiv@aexp:	; 1 bytes @ 0x41
  2983  0061                     	ds	1
  2984  0061                     ??_convertAnalogValues:	; 1 bytes @ 0x42
  2985  0062                     	global	?_floorf
  2986                           ?_floorf:	; 4 bytes @ 0x42
  2987  0062                     	global	floorf@x
  2988                           floorf@x:	; 4 bytes @ 0x42
  2989  0062                     	global	_convertAnalogValues$1540
  2990                           _convertAnalogValues$1540:	; 4 bytes @ 0x42
  2991  0062                     	ds	2
  2992  0062                     	global	___flsub@b
  2993                           ___flsub@b:	; 4 bytes @ 0x44
  2994  0064                     	ds	2
  2995  0064                     ??_floorf:	; 1 bytes @ 0x46
  2996  0066                     	global	convertAnalogValues@adc
  2997                           convertAnalogValues@adc:	; 2 bytes @ 0x46
  2998  0066                     	ds	2
  2999  0066                     ??___flsub:	; 1 bytes @ 0x48
  3000  0068                     	ds	4
  3001  0068                     ??_efgtoa:	; 1 bytes @ 0x4C
  3002  006C                     	ds	4
  3003  006C                     ;!
  3004                           ;!Data Sizes:
  3005                           ;!    Strings     189
  3006                           ;!    Constant    28
  3007                           ;!    Data        15
  3008                           ;!    BSS         186
  3009                           ;!    Persistent  0
  3010                           ;!    Stack       0
  3011                           ;!
  3012                           ;!Auto Spaces:
  3013                           ;!    Space          Size  Autos    Used
  3014                           ;!    COMMON           14     11      14
  3015                           ;!    BANK0            80     80      80
  3016                           ;!    BANK1            80     80      80
  3017                           ;!    BANK2            80     64      80
  3018                           ;!    BANK3            80     74      80
  3019                           ;!    BANK4            80      0      76
  3020                           ;!    BANK5            80      0      20
  3021                           ;!    BANK6            80      0      80
  3022                           ;!    BANK7            80      0       0
  3023                           ;!    BANK8            80      0       0
  3024                           ;!    BANK9            80      0       0
  3025                           ;!    BANK10           80      0       0
  3026                           ;!    BANK11           80      0       0
  3027                           ;!    BANK12           80      0       0
  3028                           ;!    BANK13           80      0       0
  3029                           ;!    BANK14           80      0       0
  3030                           ;!    BANK15           80      0       0
  3031                           ;!    BANK16           80      0       0
  3032                           ;!    BANK17           80      0       0
  3033                           ;!    BANK18           80      0       0
  3034                           ;!    BANK19           80      0       0
  3035                           ;!    BANK20           80      0       0
  3036                           ;!    BANK21           80      0       0
  3037                           ;!    BANK22           80      0       0
  3038                           ;!    BANK23           80      0       0
  3039                           ;!    BANK24           80      0       0
  3040                           ;!    BANK25           32      0       0
  3041                           
  3042                           ;!
  3043                           ;!Pointer List with Targets:
  3044                           ;!
  3045                           ;!    strncpy@s	PTR const unsigned char  size(1) Largest target is 20
  3046                           ;!		 -> uartReceiveISR@buffer(BANK5[20]), 
  3047                           ;!
  3048                           ;!    strncpy@d	PTR unsigned char  size(1) Largest target is 15
  3049                           ;!		 -> g_dataPacket(BANK4[15]), 
  3050                           ;!
  3051                           ;!    strncpy@cp	PTR unsigned char  size(1) Largest target is 15
  3052                           ;!		 -> g_dataPacket(BANK4[15]), 
  3053                           ;!
  3054                           ;!    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
  3055                           ;!		 -> STR_18(CODE[3]), 
  3056                           ;!
  3057                           ;!    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
  3058                           ;!		 -> STR_18(CODE[3]), 
  3059                           ;!
  3060                           ;!    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
  3061                           ;!		 -> vfpfcnvrt@ct(BANK2[3]), 
  3062                           ;!
  3063                           ;!    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
  3064                           ;!		 -> vfpfcnvrt@ct(BANK2[3]), 
  3065                           ;!
  3066                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 80
  3067                           ;!		 -> ?_sprintf(BANK2[2]), stoa@nuls(BANK0[7]), dbuf(BANK6[80]), showMenu@s12(BANK3[12
                                 ]), 
  3068                           ;!
  3069                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 80
  3070                           ;!		 -> ?_sprintf(BANK2[2]), stoa@nuls(BANK0[7]), dbuf(BANK6[80]), showMenu@s12(BANK3[12
                                 ]), 
  3071                           ;!
  3072                           ;!    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
  3073                           ;!		 -> dbuf(BANK6[80]), 
  3074                           ;!
  3075                           ;!    strcpy@d	PTR unsigned char  size(1) Largest target is 80
  3076                           ;!		 -> dbuf(BANK6[80]), 
  3077                           ;!
  3078                           ;!    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
  3079                           ;!		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
  3080                           ;!		 -> dbuf(BANK6[80]), 
  3081                           ;!
  3082                           ;!    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
  3083                           ;!		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
  3084                           ;!		 -> dbuf(BANK6[80]), 
  3085                           ;!
  3086                           ;!    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 42
  3087                           ;!		 -> STR_6(CODE[42]), STR_5(CODE[17]), STR_4(CODE[13]), STR_2(CODE[15]), 
  3088                           ;!
  3089                           ;!    sprintf@s	PTR unsigned char  size(1) Largest target is 61
  3090                           ;!		 -> showMenu@s12(BANK3[12]), showMenu@s(BANK3[61]), 
  3091                           ;!
  3092                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  3093                           ;!		 -> ?_sprintf(BANK2[2]), 
  3094                           ;!
  3095                           ;!    f.buffer	PTR unsigned char  size(1) Largest target is 61
  3096                           ;!		 -> showMenu@s12(BANK3[12]), showMenu@s(BANK3[61]), 
  3097                           ;!
  3098                           ;!    fputs@s	PTR const unsigned char  size(1) Largest target is 80
  3099                           ;!		 -> dbuf(BANK6[80]), 
  3100                           ;!
  3101                           ;!    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
  3102                           ;!		 -> sprintf@f(BANK2[5]), 
  3103                           ;!
  3104                           ;!    S1298_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 61
  3105                           ;!		 -> showMenu@s12(BANK3[12]), showMenu@s(BANK3[61]), 
  3106                           ;!
  3107                           ;!    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 61
  3108                           ;!		 -> showMenu@s12(BANK3[12]), showMenu@s(BANK3[61]), 
  3109                           ;!
  3110                           ;!    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
  3111                           ;!		 -> sprintf@f(BANK2[5]), 
  3112                           ;!
  3113                           ;!    atoi@s	PTR const unsigned char  size(2) Largest target is 42
  3114                           ;!		 -> STR_6(CODE[42]), STR_5(CODE[17]), STR_4(CODE[13]), STR_2(CODE[15]), 
  3115                           ;!
  3116                           ;!    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
  3117                           ;!		 -> sprintf@ap(BANK2[1]), 
  3118                           ;!
  3119                           ;!    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
  3120                           ;!		 -> sprintf@f(BANK2[5]), 
  3121                           ;!
  3122                           ;!    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 42
  3123                           ;!		 -> STR_6(CODE[42]), STR_5(CODE[17]), STR_4(CODE[13]), STR_2(CODE[15]), 
  3124                           ;!
  3125                           ;!    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 42
  3126                           ;!		 -> STR_6(CODE[42]), STR_5(CODE[17]), STR_4(CODE[13]), STR_2(CODE[15]), 
  3127                           ;!
  3128                           ;!    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 12
  3129                           ;!		 -> ?_sprintf(BANK2[2]), showMenu@s12(BANK3[12]), 
  3130                           ;!
  3131                           ;!    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
  3132                           ;!		 -> sprintf@f(BANK2[5]), 
  3133                           ;!
  3134                           ;!    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
  3135                           ;!		 -> sprintf@ap(BANK2[1]), 
  3136                           ;!
  3137                           ;!    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
  3138                           ;!		 -> vfprintf@cfmt(BANK2[2]), 
  3139                           ;!
  3140                           ;!    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
  3141                           ;!		 -> sprintf@f(BANK2[5]), 
  3142                           ;!
  3143                           ;!    stoa@s	PTR unsigned char  size(1) Largest target is 12
  3144                           ;!		 -> ?_sprintf(BANK2[2]), showMenu@s12(BANK3[12]), 
  3145                           ;!
  3146                           ;!    stoa@cp	PTR unsigned char  size(2) Largest target is 12
  3147                           ;!		 -> ?_sprintf(BANK2[2]), stoa@nuls(BANK0[7]), showMenu@s12(BANK3[12]), 
  3148                           ;!
  3149                           ;!    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
  3150                           ;!		 -> sprintf@f(BANK2[5]), 
  3151                           ;!
  3152                           ;!    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
  3153                           ;!		 -> dbuf(BANK6[80]), 
  3154                           ;!
  3155                           ;!    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
  3156                           ;!		 -> sprintf@f(BANK2[5]), 
  3157                           ;!
  3158                           ;!    pad@buf	PTR unsigned char  size(1) Largest target is 80
  3159                           ;!		 -> dbuf(BANK6[80]), 
  3160                           ;!
  3161                           ;!    OLED_print_xy@s	PTR unsigned char  size(2) Largest target is 61
  3162                           ;!		 -> STR_7(CODE[49]), STR_3(CODE[49]), showMenu@s(BANK3[61]), STR_1(CODE[13]), 
  3163                           ;!
  3164                           ;!    sp__strncpy	PTR unsigned char  size(1) Largest target is 15
  3165                           ;!		 -> g_dataPacket(BANK4[15]), 
  3166                           ;!
  3167                           ;!    menuInput@menu	PTR unsigned char  size(1) Largest target is 1
  3168                           ;!		 -> showMenu@menu(BANK3[1]), 
  3169                           ;!
  3170                           ;!    menuInput@page	PTR unsigned char  size(1) Largest target is 1
  3171                           ;!		 -> showMenu@page(BANK3[1]), 
  3172                           ;!
  3173                           
  3174                           
  3175                           ;!
  3176                           ;!Critical Paths under _main in COMMON
  3177                           ;!
  3178                           ;!    None.
  3179                           ;!
  3180                           ;!Critical Paths under _ISR in COMMON
  3181                           ;!
  3182                           ;!    _ISR->___llmod
  3183                           ;!    _uartReceiveISR->_strncpy
  3184                           ;!
  3185                           ;!Critical Paths under _main in BANK0
  3186                           ;!
  3187                           ;!    _timeSince->_timeNow
  3188                           ;!    _vfpfcnvrt->_efgtoa
  3189                           ;!    _stoa->_fputc
  3190                           ;!    _efgtoa->_floorf
  3191                           ;!    _tolower->_isupper
  3192                           ;!    _pad->_fputs
  3193                           ;!    _fputs->_fputc
  3194                           ;!    _floorf->___fldiv
  3195                           ;!    ___flsub->___fladd
  3196                           ;!    _atoi->___wmul
  3197                           ;!    _atoi->_isdigit
  3198                           ;!    _OLED_scrollDisplayRight->_OLED_command
  3199                           ;!    _OLED_scrollDisplayLeft->_OLED_command
  3200                           ;!    _OLED_returnHome->_OLED_command
  3201                           ;!    _OLED_print_xy->_OLED_command
  3202                           ;!    _OLED_print_xy->_OLED_write
  3203                           ;!    _OLED_write->_OLED_send
  3204                           ;!    _handleSensorData->___xxtofl
  3205                           ;!    _convertAnalogValues->___fldiv
  3206                           ;!    _ema->___lmul
  3207                           ;!    ___flmul->___xxtofl
  3208                           ;!    ___fldiv->___flmul
  3209                           ;!    ___fladd->___flmul
  3210                           ;!    _checkStatus->___flge
  3211                           ;!    ___flge->___flmul
  3212                           ;!    _OLED_init->_OLED_command
  3213                           ;!    _OLED_command->_OLED_send
  3214                           ;!    _OLED_send->_OLED_write4bits
  3215                           ;!
  3216                           ;!Critical Paths under _ISR in BANK0
  3217                           ;!
  3218                           ;!    None.
  3219                           ;!
  3220                           ;!Critical Paths under _main in BANK1
  3221                           ;!
  3222                           ;!    _vfprintf->_vfpfcnvrt
  3223                           ;!    _vfpfcnvrt->_efgtoa
  3224                           ;!    _efgtoa->_floorf
  3225                           ;!
  3226                           ;!Critical Paths under _ISR in BANK1
  3227                           ;!
  3228                           ;!    None.
  3229                           ;!
  3230                           ;!Critical Paths under _main in BANK2
  3231                           ;!
  3232                           ;!    _main->_showMenu
  3233                           ;!    _showMenu->_sprintf
  3234                           ;!    _sprintf->_vfprintf
  3235                           ;!    _vfprintf->_vfpfcnvrt
  3236                           ;!
  3237                           ;!Critical Paths under _ISR in BANK2
  3238                           ;!
  3239                           ;!    None.
  3240                           ;!
  3241                           ;!Critical Paths under _main in BANK3
  3242                           ;!
  3243                           ;!    _main->_showMenu
  3244                           ;!
  3245                           ;!Critical Paths under _ISR in BANK3
  3246                           ;!
  3247                           ;!    None.
  3248                           ;!
  3249                           ;!Critical Paths under _main in BANK4
  3250                           ;!
  3251                           ;!    None.
  3252                           ;!
  3253                           ;!Critical Paths under _ISR in BANK4
  3254                           ;!
  3255                           ;!    None.
  3256                           ;!
  3257                           ;!Critical Paths under _main in BANK5
  3258                           ;!
  3259                           ;!    None.
  3260                           ;!
  3261                           ;!Critical Paths under _ISR in BANK5
  3262                           ;!
  3263                           ;!    None.
  3264                           ;!
  3265                           ;!Critical Paths under _main in BANK6
  3266                           ;!
  3267                           ;!    None.
  3268                           ;!
  3269                           ;!Critical Paths under _ISR in BANK6
  3270                           ;!
  3271                           ;!    None.
  3272                           ;!
  3273                           ;!Critical Paths under _main in BANK7
  3274                           ;!
  3275                           ;!    None.
  3276                           ;!
  3277                           ;!Critical Paths under _ISR in BANK7
  3278                           ;!
  3279                           ;!    None.
  3280                           ;!
  3281                           ;!Critical Paths under _main in BANK8
  3282                           ;!
  3283                           ;!    None.
  3284                           ;!
  3285                           ;!Critical Paths under _ISR in BANK8
  3286                           ;!
  3287                           ;!    None.
  3288                           ;!
  3289                           ;!Critical Paths under _main in BANK9
  3290                           ;!
  3291                           ;!    None.
  3292                           ;!
  3293                           ;!Critical Paths under _ISR in BANK9
  3294                           ;!
  3295                           ;!    None.
  3296                           ;!
  3297                           ;!Critical Paths under _main in BANK10
  3298                           ;!
  3299                           ;!    None.
  3300                           ;!
  3301                           ;!Critical Paths under _ISR in BANK10
  3302                           ;!
  3303                           ;!    None.
  3304                           ;!
  3305                           ;!Critical Paths under _main in BANK11
  3306                           ;!
  3307                           ;!    None.
  3308                           ;!
  3309                           ;!Critical Paths under _ISR in BANK11
  3310                           ;!
  3311                           ;!    None.
  3312                           ;!
  3313                           ;!Critical Paths under _main in BANK12
  3314                           ;!
  3315                           ;!    None.
  3316                           ;!
  3317                           ;!Critical Paths under _ISR in BANK12
  3318                           ;!
  3319                           ;!    None.
  3320                           ;!
  3321                           ;!Critical Paths under _main in BANK13
  3322                           ;!
  3323                           ;!    None.
  3324                           ;!
  3325                           ;!Critical Paths under _ISR in BANK13
  3326                           ;!
  3327                           ;!    None.
  3328                           ;!
  3329                           ;!Critical Paths under _main in BANK14
  3330                           ;!
  3331                           ;!    None.
  3332                           ;!
  3333                           ;!Critical Paths under _ISR in BANK14
  3334                           ;!
  3335                           ;!    None.
  3336                           ;!
  3337                           ;!Critical Paths under _main in BANK15
  3338                           ;!
  3339                           ;!    None.
  3340                           ;!
  3341                           ;!Critical Paths under _ISR in BANK15
  3342                           ;!
  3343                           ;!    None.
  3344                           ;!
  3345                           ;!Critical Paths under _main in BANK16
  3346                           ;!
  3347                           ;!    None.
  3348                           ;!
  3349                           ;!Critical Paths under _ISR in BANK16
  3350                           ;!
  3351                           ;!    None.
  3352                           ;!
  3353                           ;!Critical Paths under _main in BANK17
  3354                           ;!
  3355                           ;!    None.
  3356                           ;!
  3357                           ;!Critical Paths under _ISR in BANK17
  3358                           ;!
  3359                           ;!    None.
  3360                           ;!
  3361                           ;!Critical Paths under _main in BANK18
  3362                           ;!
  3363                           ;!    None.
  3364                           ;!
  3365                           ;!Critical Paths under _ISR in BANK18
  3366                           ;!
  3367                           ;!    None.
  3368                           ;!
  3369                           ;!Critical Paths under _main in BANK19
  3370                           ;!
  3371                           ;!    None.
  3372                           ;!
  3373                           ;!Critical Paths under _ISR in BANK19
  3374                           ;!
  3375                           ;!    None.
  3376                           ;!
  3377                           ;!Critical Paths under _main in BANK20
  3378                           ;!
  3379                           ;!    None.
  3380                           ;!
  3381                           ;!Critical Paths under _ISR in BANK20
  3382                           ;!
  3383                           ;!    None.
  3384                           ;!
  3385                           ;!Critical Paths under _main in BANK21
  3386                           ;!
  3387                           ;!    None.
  3388                           ;!
  3389                           ;!Critical Paths under _ISR in BANK21
  3390                           ;!
  3391                           ;!    None.
  3392                           ;!
  3393                           ;!Critical Paths under _main in BANK22
  3394                           ;!
  3395                           ;!    None.
  3396                           ;!
  3397                           ;!Critical Paths under _ISR in BANK22
  3398                           ;!
  3399                           ;!    None.
  3400                           ;!
  3401                           ;!Critical Paths under _main in BANK23
  3402                           ;!
  3403                           ;!    None.
  3404                           ;!
  3405                           ;!Critical Paths under _ISR in BANK23
  3406                           ;!
  3407                           ;!    None.
  3408                           ;!
  3409                           ;!Critical Paths under _main in BANK24
  3410                           ;!
  3411                           ;!    None.
  3412                           ;!
  3413                           ;!Critical Paths under _ISR in BANK24
  3414                           ;!
  3415                           ;!    None.
  3416                           ;!
  3417                           ;!Critical Paths under _main in BANK25
  3418                           ;!
  3419                           ;!    None.
  3420                           ;!
  3421                           ;!Critical Paths under _ISR in BANK25
  3422                           ;!
  3423                           ;!    None.
  3424                           
  3425 ;;
  3426 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3427 ;;
  3428                           
  3429                           ;!
  3430                           ;!Call Graph Tables:
  3431                           ;!
  3432                           ;! ---------------------------------------------------------------------------------
  3433                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3434                           ;! ---------------------------------------------------------------------------------
  3435                           ;! (0) _main                                                 9     9      0   50632
  3436                           ;!                                             55 BANK2      9     9      0
  3437                           ;!                       _OLED_command
  3438                           ;!                          _OLED_init
  3439                           ;!                    _OLED_returnHome
  3440                           ;!                        _checkStatus
  3441                           ;!                _convertAnalogValues
  3442                           ;!                   _handleSensorData
  3443                           ;!                         _initialize
  3444                           ;!                           _showMenu
  3445                           ;!                            _timeNow
  3446                           ;!                          _timeSince
  3447                           ;!                       _uartSendByte
  3448                           ;! ---------------------------------------------------------------------------------
  3449                           ;! (1) _uartSendByte                                         1     1      0      22
  3450                           ;!                                              0 BANK0      1     1      0
  3451                           ;! ---------------------------------------------------------------------------------
  3452                           ;! (1) _timeSince                                           20    16      4     285
  3453                           ;!                                              4 BANK0     20    16      4
  3454                           ;!                            _timeNow
  3455                           ;! ---------------------------------------------------------------------------------
  3456                           ;! (2) _timeNow                                              4     0      4       0
  3457                           ;!                                              0 BANK0      4     0      4
  3458                           ;! ---------------------------------------------------------------------------------
  3459                           ;! (1) _showMenu                                            76    76      0   37224
  3460                           ;!                                             53 BANK2      2     2      0
  3461                           ;!                                              0 BANK3     74    74      0
  3462                           ;!                      _OLED_print_xy
  3463                           ;!                              _getPB
  3464                           ;!                          _menuInput
  3465                           ;!                            _sprintf
  3466                           ;! ---------------------------------------------------------------------------------
  3467                           ;! (2) _sprintf                                             29    10     19   32692
  3468                           ;!                                             24 BANK2     29    10     19
  3469                           ;!                           _vfprintf
  3470                           ;! ---------------------------------------------------------------------------------
  3471                           ;! (3) _vfprintf                                             8     5      3   32047
  3472                           ;!                                             16 BANK2      8     5      3
  3473                           ;!                          _vfpfcnvrt
  3474                           ;! ---------------------------------------------------------------------------------
  3475                           ;! (4) _vfpfcnvrt                                           38    36      2   31707
  3476                           ;!                                             72 BANK1      8     6      2
  3477                           ;!                                              0 BANK2     16    16      0
  3478                           ;!                               _atoi
  3479                           ;!                             _efgtoa
  3480                           ;!                              _fputc
  3481                           ;!                            _isdigit
  3482                           ;!                            _isupper
  3483                           ;!                               _stoa
  3484                           ;!                            _strncmp
  3485                           ;!                            _tolower
  3486                           ;! ---------------------------------------------------------------------------------
  3487                           ;! (5) _strncmp                                             10     6      4     410
  3488                           ;!                                              0 BANK0     10     6      4
  3489                           ;! ---------------------------------------------------------------------------------
  3490                           ;! (5) _stoa                                                23    21      2    2018
  3491                           ;!                                              8 BANK0     23    21      2
  3492                           ;!                              _fputc
  3493                           ;!                             _strlen
  3494                           ;! ---------------------------------------------------------------------------------
  3495                           ;! (5) _efgtoa                                              66    61      5   23524
  3496                           ;!                                             76 BANK0      4     4      0
  3497                           ;!                                             10 BANK1     62    57      5
  3498                           ;!                            ___awdiv
  3499                           ;!                            ___awmod
  3500                           ;!                            ___fladd
  3501                           ;!                            ___fldiv
  3502                           ;!                             ___fleq
  3503                           ;!                             ___flge
  3504                           ;!                            ___flmul
  3505                           ;!                            ___flneg
  3506                           ;!                            ___flsub
  3507                           ;!                            ___fltol
  3508                           ;!                      ___fpclassifyf
  3509                           ;!                             _floorf
  3510                           ;!                            _isupper
  3511                           ;!                                _pad
  3512                           ;!                             _strcpy
  3513                           ;!                            _tolower
  3514                           ;! ---------------------------------------------------------------------------------
  3515                           ;! (5) _tolower                                              8     6      2     944
  3516                           ;!                                              6 BANK0      8     6      2
  3517                           ;!                            _isupper
  3518                           ;! ---------------------------------------------------------------------------------
  3519                           ;! (6) _isupper                                              6     4      2     465
  3520                           ;!                                              0 BANK0      6     4      2
  3521                           ;! ---------------------------------------------------------------------------------
  3522                           ;! (6) _strcpy                                               8     6      2     641
  3523                           ;!                                              0 BANK0      8     6      2
  3524                           ;! ---------------------------------------------------------------------------------
  3525                           ;! (6) _pad                                                  9     6      3    3860
  3526                           ;!                                             16 BANK0      9     6      3
  3527                           ;!                              _fputc
  3528                           ;!                              _fputs
  3529                           ;!                             _strlen
  3530                           ;! ---------------------------------------------------------------------------------
  3531                           ;! (6) _strlen                                               6     4      2     164
  3532                           ;!                                              0 BANK0      6     4      2
  3533                           ;! ---------------------------------------------------------------------------------
  3534                           ;! (7) _fputs                                                8     7      1    1605
  3535                           ;!                                              8 BANK0      8     7      1
  3536                           ;!                              _fputc
  3537                           ;! ---------------------------------------------------------------------------------
  3538                           ;! (6) _fputc                                                8     5      3    1290
  3539                           ;!                                              0 BANK0      8     5      3
  3540                           ;!                              _putch
  3541                           ;! ---------------------------------------------------------------------------------
  3542                           ;! (7) _putch                                                1     1      0       0
  3543                           ;! ---------------------------------------------------------------------------------
  3544                           ;! (6) _floorf                                              20    16      4     490
  3545                           ;!                                             66 BANK0     10     6      4
  3546                           ;!                                              0 BANK1     10    10      0
  3547                           ;!                            ___fldiv (ARG)
  3548                           ;! ---------------------------------------------------------------------------------
  3549                           ;! (6) ___fpclassifyf                                       16    12      4     287
  3550                           ;!                                              0 BANK0     16    12      4
  3551                           ;! ---------------------------------------------------------------------------------
  3552                           ;! (6) ___fltol                                             11     7      4     381
  3553                           ;!                                              0 BANK0     11     7      4
  3554                           ;! ---------------------------------------------------------------------------------
  3555                           ;! (6) ___flsub                                              8     0      8    2789
  3556                           ;!                                             64 BANK0      8     0      8
  3557                           ;!                            ___fladd
  3558                           ;!                            ___flmul (ARG)
  3559                           ;! ---------------------------------------------------------------------------------
  3560                           ;! (6) ___flneg                                              4     0      4     121
  3561                           ;!                                              0 BANK0      4     0      4
  3562                           ;! ---------------------------------------------------------------------------------
  3563                           ;! (6) ___fleq                                              12     4      8     394
  3564                           ;!                                              0 BANK0     12     4      8
  3565                           ;! ---------------------------------------------------------------------------------
  3566                           ;! (6) ___awmod                                              7     3      4     448
  3567                           ;!                                              0 BANK0      7     3      4
  3568                           ;! ---------------------------------------------------------------------------------
  3569                           ;! (6) ___awdiv                                              9     5      4     452
  3570                           ;!                                              0 BANK0      9     5      4
  3571                           ;! ---------------------------------------------------------------------------------
  3572                           ;! (5) _atoi                                                15    13      2    1283
  3573                           ;!                                              6 BANK0     15    13      2
  3574                           ;!                             ___wmul
  3575                           ;!                            _isdigit
  3576                           ;!                            _isspace
  3577                           ;! ---------------------------------------------------------------------------------
  3578                           ;! (6) _isspace                                              5     3      2     207
  3579                           ;!                                              0 BANK0      5     3      2
  3580                           ;! ---------------------------------------------------------------------------------
  3581                           ;! (5) _isdigit                                              6     4      2     313
  3582                           ;!                                              0 BANK0      6     4      2
  3583                           ;! ---------------------------------------------------------------------------------
  3584                           ;! (6) ___wmul                                               6     2      4     290
  3585                           ;!                                              0 BANK0      6     2      4
  3586                           ;! ---------------------------------------------------------------------------------
  3587                           ;! (2) _menuInput                                           11     6      5    2765
  3588                           ;!                                              7 BANK0     11     6      5
  3589                           ;!                    _OLED_returnHome
  3590                           ;!             _OLED_scrollDisplayLeft
  3591                           ;!            _OLED_scrollDisplayRight
  3592                           ;!                              _getPB
  3593                           ;!                          _getRotDir
  3594                           ;! ---------------------------------------------------------------------------------
  3595                           ;! (3) _getRotDir                                            2     2      0      23
  3596                           ;!                                              0 BANK0      2     2      0
  3597                           ;! ---------------------------------------------------------------------------------
  3598                           ;! (3) _getPB                                                2     2      0      23
  3599                           ;!                                              0 BANK0      2     2      0
  3600                           ;! ---------------------------------------------------------------------------------
  3601                           ;! (3) _OLED_scrollDisplayRight                              0     0      0     352
  3602                           ;!                       _OLED_command
  3603                           ;! ---------------------------------------------------------------------------------
  3604                           ;! (3) _OLED_scrollDisplayLeft                               0     0      0     352
  3605                           ;!                       _OLED_command
  3606                           ;! ---------------------------------------------------------------------------------
  3607                           ;! (3) _OLED_returnHome                                      0     0      0     352
  3608                           ;!                       _OLED_command
  3609                           ;! ---------------------------------------------------------------------------------
  3610                           ;! (2) _OLED_print_xy                                        9     6      3    1577
  3611                           ;!                                              7 BANK0      9     6      3
  3612                           ;!                       _OLED_command
  3613                           ;!                         _OLED_write
  3614                           ;! ---------------------------------------------------------------------------------
  3615                           ;! (3) _OLED_write                                           1     1      0     352
  3616                           ;!                                              6 BANK0      1     1      0
  3617                           ;!                          _OLED_send
  3618                           ;!                  _OLED_waitForReady
  3619                           ;! ---------------------------------------------------------------------------------
  3620                           ;! (1) _initialize                                           0     0      0       0
  3621                           ;! ---------------------------------------------------------------------------------
  3622                           ;! (1) _handleSensorData                                     4     4      0     626
  3623                           ;!                                             14 BANK0      4     4      0
  3624                           ;!                           ___xxtofl
  3625                           ;! ---------------------------------------------------------------------------------
  3626                           ;! (1) _convertAnalogValues                                  6     6      0   10341
  3627                           ;!                                             66 BANK0      6     6      0
  3628                           ;!                            ___fladd
  3629                           ;!                            ___fldiv
  3630                           ;!                            ___flmul
  3631                           ;!                           ___xxtofl
  3632                           ;!                   _adcGetConversion
  3633                           ;!                                _ema
  3634                           ;! ---------------------------------------------------------------------------------
  3635                           ;! (2) _ema                                                 20    12      8    1191
  3636                           ;!                                             12 BANK0     20    12      8
  3637                           ;!                             ___lmul
  3638                           ;! ---------------------------------------------------------------------------------
  3639                           ;! (3) ___lmul                                              12     4      8     396
  3640                           ;!                                              0 BANK0     12     4      8
  3641                           ;! ---------------------------------------------------------------------------------
  3642                           ;! (2) _adcGetConversion                                     4     2      2      22
  3643                           ;!                                              0 BANK0      4     2      2
  3644                           ;! ---------------------------------------------------------------------------------
  3645                           ;! (2) ___xxtofl                                            14    10      4     626
  3646                           ;!                                              0 BANK0     14    10      4
  3647                           ;! ---------------------------------------------------------------------------------
  3648                           ;! (6) ___flmul                                             26    18      8    3785
  3649                           ;!                                             14 BANK0     26    18      8
  3650                           ;!                          __Umul8_16
  3651                           ;!                           ___xxtofl (ARG)
  3652                           ;! ---------------------------------------------------------------------------------
  3653                           ;! (7) __Umul8_16                                            9     7      2     799
  3654                           ;!                                              0 BANK0      9     7      2
  3655                           ;! ---------------------------------------------------------------------------------
  3656                           ;! (6) ___fldiv                                             26    18      8    2185
  3657                           ;!                                             40 BANK0     26    18      8
  3658                           ;!                            ___flmul (ARG)
  3659                           ;!                           ___xxtofl (ARG)
  3660                           ;! ---------------------------------------------------------------------------------
  3661                           ;! (7) ___fladd                                             24    16      8    2440
  3662                           ;!                                             40 BANK0     24    16      8
  3663                           ;!                            ___flmul (ARG)
  3664                           ;!                           ___xxtofl (ARG)
  3665                           ;! ---------------------------------------------------------------------------------
  3666                           ;! (1) _checkStatus                                          0     0      0     942
  3667                           ;!                             ___flge
  3668                           ;! ---------------------------------------------------------------------------------
  3669                           ;! (6) ___flge                                              16     8      8     942
  3670                           ;!                                             40 BANK0     16     8      8
  3671                           ;!                            ___flmul (ARG)
  3672                           ;! ---------------------------------------------------------------------------------
  3673                           ;! (1) _OLED_init                                            1     1      0     440
  3674                           ;!                                              7 BANK0      1     1      0
  3675                           ;!                       _OLED_command
  3676                           ;!                    _OLED_write4bits
  3677                           ;! ---------------------------------------------------------------------------------
  3678                           ;! (4) _OLED_command                                         1     1      0     352
  3679                           ;!                                              6 BANK0      1     1      0
  3680                           ;!                          _OLED_send
  3681                           ;!                  _OLED_waitForReady
  3682                           ;! ---------------------------------------------------------------------------------
  3683                           ;! (5) _OLED_waitForReady                                    1     1      0      24
  3684                           ;!                                              0 BANK0      1     1      0
  3685                           ;!                   _OLED_pulseEnable
  3686                           ;! ---------------------------------------------------------------------------------
  3687                           ;! (5) _OLED_send                                            3     2      1     306
  3688                           ;!                                              3 BANK0      3     2      1
  3689                           ;!                    _OLED_write4bits
  3690                           ;! ---------------------------------------------------------------------------------
  3691                           ;! (6) _OLED_write4bits                                      3     3      0      88
  3692                           ;!                                              0 BANK0      3     3      0
  3693                           ;!                   _OLED_pulseEnable
  3694                           ;! ---------------------------------------------------------------------------------
  3695                           ;! (6) _OLED_pulseEnable                                     0     0      0       0
  3696                           ;! ---------------------------------------------------------------------------------
  3697                           ;! Estimated maximum stack depth 7
  3698                           ;! ---------------------------------------------------------------------------------
  3699                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3700                           ;! ---------------------------------------------------------------------------------
  3701                           ;! (10) _ISR                                                 1     1      0     660
  3702                           ;!                                             10 COMMON     1     1      0
  3703                           ;!                            ___llmod
  3704                           ;!                      _pushButtonISR
  3705                           ;!                             _rotISR
  3706                           ;!                     _uartReceiveISR
  3707                           ;! ---------------------------------------------------------------------------------
  3708                           ;! (11) _uartReceiveISR                                      1     1      0     326
  3709                           ;!                                              6 COMMON     1     1      0
  3710                           ;!                            _strncpy
  3711                           ;! ---------------------------------------------------------------------------------
  3712                           ;! (12) _strncpy                                             6     3      3     326
  3713                           ;!                                              0 COMMON     6     3      3
  3714                           ;! ---------------------------------------------------------------------------------
  3715                           ;! (11) _rotISR                                              8     8      0      23
  3716                           ;!                                              0 COMMON     8     8      0
  3717                           ;! ---------------------------------------------------------------------------------
  3718                           ;! (11) _pushButtonISR                                       1     1      0       0
  3719                           ;!                                              0 COMMON     1     1      0
  3720                           ;! ---------------------------------------------------------------------------------
  3721                           ;! (11) ___llmod                                            10     2      8     311
  3722                           ;!                                              0 COMMON    10     2      8
  3723                           ;! ---------------------------------------------------------------------------------
  3724                           ;! Estimated maximum stack depth 12
  3725                           ;! ---------------------------------------------------------------------------------
  3726                           ;!
  3727                           ;! Call Graph Graphs:
  3728                           ;!
  3729                           ;! _main (ROOT)
  3730                           ;!   _OLED_command
  3731                           ;!     _OLED_send
  3732                           ;!       _OLED_write4bits
  3733                           ;!         _OLED_pulseEnable
  3734                           ;!     _OLED_waitForReady
  3735                           ;!       _OLED_pulseEnable
  3736                           ;!   _OLED_init
  3737                           ;!     _OLED_command
  3738                           ;!       _OLED_send
  3739                           ;!         _OLED_write4bits
  3740                           ;!           _OLED_pulseEnable
  3741                           ;!       _OLED_waitForReady
  3742                           ;!         _OLED_pulseEnable
  3743                           ;!     _OLED_write4bits
  3744                           ;!       _OLED_pulseEnable
  3745                           ;!   _OLED_returnHome
  3746                           ;!     _OLED_command
  3747                           ;!       _OLED_send
  3748                           ;!         _OLED_write4bits
  3749                           ;!           _OLED_pulseEnable
  3750                           ;!       _OLED_waitForReady
  3751                           ;!         _OLED_pulseEnable
  3752                           ;!   _checkStatus
  3753                           ;!     ___flge
  3754                           ;!       ___flmul (ARG)
  3755                           ;!         __Umul8_16
  3756                           ;!         ___xxtofl (ARG)
  3757                           ;!   _convertAnalogValues
  3758                           ;!     ___fladd
  3759                           ;!       ___flmul (ARG)
  3760                           ;!         __Umul8_16
  3761                           ;!         ___xxtofl (ARG)
  3762                           ;!       ___xxtofl (ARG)
  3763                           ;!     ___fldiv
  3764                           ;!       ___flmul (ARG)
  3765                           ;!         __Umul8_16
  3766                           ;!         ___xxtofl (ARG)
  3767                           ;!       ___xxtofl (ARG)
  3768                           ;!     ___flmul
  3769                           ;!       __Umul8_16
  3770                           ;!       ___xxtofl (ARG)
  3771                           ;!     ___xxtofl
  3772                           ;!     _adcGetConversion
  3773                           ;!     _ema
  3774                           ;!       ___lmul
  3775                           ;!   _handleSensorData
  3776                           ;!     ___xxtofl
  3777                           ;!   _initialize
  3778                           ;!   _showMenu
  3779                           ;!     _OLED_print_xy
  3780                           ;!       _OLED_command
  3781                           ;!         _OLED_send
  3782                           ;!           _OLED_write4bits
  3783                           ;!             _OLED_pulseEnable
  3784                           ;!         _OLED_waitForReady
  3785                           ;!           _OLED_pulseEnable
  3786                           ;!       _OLED_write
  3787                           ;!         _OLED_send
  3788                           ;!           _OLED_write4bits
  3789                           ;!             _OLED_pulseEnable
  3790                           ;!         _OLED_waitForReady
  3791                           ;!           _OLED_pulseEnable
  3792                           ;!     _getPB
  3793                           ;!     _menuInput
  3794                           ;!       _OLED_returnHome
  3795                           ;!         _OLED_command
  3796                           ;!           _OLED_send
  3797                           ;!             _OLED_write4bits
  3798                           ;!               _OLED_pulseEnable
  3799                           ;!           _OLED_waitForReady
  3800                           ;!             _OLED_pulseEnable
  3801                           ;!       _OLED_scrollDisplayLeft
  3802                           ;!         _OLED_command
  3803                           ;!           _OLED_send
  3804                           ;!             _OLED_write4bits
  3805                           ;!               _OLED_pulseEnable
  3806                           ;!           _OLED_waitForReady
  3807                           ;!             _OLED_pulseEnable
  3808                           ;!       _OLED_scrollDisplayRight
  3809                           ;!         _OLED_command
  3810                           ;!           _OLED_send
  3811                           ;!             _OLED_write4bits
  3812                           ;!               _OLED_pulseEnable
  3813                           ;!           _OLED_waitForReady
  3814                           ;!             _OLED_pulseEnable
  3815                           ;!       _getPB
  3816                           ;!       _getRotDir
  3817                           ;!     _sprintf
  3818                           ;!       _vfprintf
  3819                           ;!         _vfpfcnvrt
  3820                           ;!           _atoi
  3821                           ;!             ___wmul
  3822                           ;!             _isdigit
  3823                           ;!             _isspace
  3824                           ;!           _efgtoa
  3825                           ;!             ___awdiv
  3826                           ;!             ___awmod
  3827                           ;!             ___fladd
  3828                           ;!               ___flmul (ARG)
  3829                           ;!                 __Umul8_16
  3830                           ;!                 ___xxtofl (ARG)
  3831                           ;!               ___xxtofl (ARG)
  3832                           ;!             ___fldiv
  3833                           ;!               ___flmul (ARG)
  3834                           ;!                 __Umul8_16
  3835                           ;!                 ___xxtofl (ARG)
  3836                           ;!               ___xxtofl (ARG)
  3837                           ;!             ___fleq
  3838                           ;!             ___flge
  3839                           ;!               ___flmul (ARG)
  3840                           ;!                 __Umul8_16
  3841                           ;!                 ___xxtofl (ARG)
  3842                           ;!             ___flmul
  3843                           ;!               __Umul8_16
  3844                           ;!               ___xxtofl (ARG)
  3845                           ;!             ___flneg
  3846                           ;!             ___flsub
  3847                           ;!               ___fladd
  3848                           ;!                 ___flmul (ARG)
  3849                           ;!                   __Umul8_16
  3850                           ;!                   ___xxtofl (ARG)
  3851                           ;!                 ___xxtofl (ARG)
  3852                           ;!               ___flmul (ARG)
  3853                           ;!                 __Umul8_16
  3854                           ;!                 ___xxtofl (ARG)
  3855                           ;!             ___fltol
  3856                           ;!             ___fpclassifyf
  3857                           ;!             _floorf
  3858                           ;!               ___fldiv (ARG)
  3859                           ;!                 ___flmul (ARG)
  3860                           ;!                   __Umul8_16
  3861                           ;!                   ___xxtofl (ARG)
  3862                           ;!                 ___xxtofl (ARG)
  3863                           ;!             _isupper
  3864                           ;!             _pad
  3865                           ;!               _fputc
  3866                           ;!                 _putch
  3867                           ;!               _fputs
  3868                           ;!                 _fputc
  3869                           ;!                   _putch
  3870                           ;!               _strlen
  3871                           ;!             _strcpy
  3872                           ;!             _tolower
  3873                           ;!               _isupper
  3874                           ;!           _fputc
  3875                           ;!             _putch
  3876                           ;!           _isdigit
  3877                           ;!           _isupper
  3878                           ;!           _stoa
  3879                           ;!             _fputc
  3880                           ;!               _putch
  3881                           ;!             _strlen
  3882                           ;!           _strncmp
  3883                           ;!           _tolower
  3884                           ;!             _isupper
  3885                           ;!   _timeNow
  3886                           ;!   _timeSince
  3887                           ;!     _timeNow
  3888                           ;!   _uartSendByte
  3889                           ;!
  3890                           ;! _ISR (ROOT)
  3891                           ;!   ___llmod
  3892                           ;!   _pushButtonISR
  3893                           ;!   _rotISR
  3894                           ;!   _uartReceiveISR
  3895                           ;!     _strncpy
  3896                           ;!
  3897                           
  3898                           ;! Address spaces:
  3899                           
  3900                           ;!Name               Size   Autos  Total    Cost      Usage
  3901                           ;!BIGRAM             7F0      0       0       0        0.0%
  3902                           ;!NULL                 0      0       0       0        0.0%
  3903                           ;!CODE                 0      0       0       0        0.0%
  3904                           ;!BITCOMMON            E      0       0       1        0.0%
  3905                           ;!BITSFR0              0      0       0       1        0.0%
  3906                           ;!SFR0                 0      0       0       1        0.0%
  3907                           ;!COMMON               E      B       E       2      100.0%
  3908                           ;!BITSFR1              0      0       0       2        0.0%
  3909                           ;!SFR1                 0      0       0       2        0.0%
  3910                           ;!BITSFR2              0      0       0       3        0.0%
  3911                           ;!SFR2                 0      0       0       3        0.0%
  3912                           ;!STACK                0      0       0       3        0.0%
  3913                           ;!BITBANK0            50      0       0       4        0.0%
  3914                           ;!BITSFR3              0      0       0       4        0.0%
  3915                           ;!SFR3                 0      0       0       4        0.0%
  3916                           ;!BANK0               50     50      50       5      100.0%
  3917                           ;!BITSFR4              0      0       0       5        0.0%
  3918                           ;!SFR4                 0      0       0       5        0.0%
  3919                           ;!BITBANK1            50      0       0       6        0.0%
  3920                           ;!BITSFR5              0      0       0       6        0.0%
  3921                           ;!SFR5                 0      0       0       6        0.0%
  3922                           ;!BANK1               50     50      50       7      100.0%
  3923                           ;!BITSFR6              0      0       0       7        0.0%
  3924                           ;!SFR6                 0      0       0       7        0.0%
  3925                           ;!BITSFR7              0      0       0       8        0.0%
  3926                           ;!SFR7                 0      0       0       8        0.0%
  3927                           ;!ABS                  0      0     1FE       8        0.0%
  3928                           ;!BITBANK2            50      0       0       9        0.0%
  3929                           ;!BITSFR8              0      0       0       9        0.0%
  3930                           ;!SFR8                 0      0       0       9        0.0%
  3931                           ;!BANK2               50     40      50      10      100.0%
  3932                           ;!BITSFR9              0      0       0      10        0.0%
  3933                           ;!SFR9                 0      0       0      10        0.0%
  3934                           ;!BITBANK3            50      0       0      11        0.0%
  3935                           ;!BITSFR10             0      0       0      11        0.0%
  3936                           ;!SFR10                0      0       0      11        0.0%
  3937                           ;!BANK3               50     4A      50      12      100.0%
  3938                           ;!BITSFR11             0      0       0      12        0.0%
  3939                           ;!SFR11                0      0       0      12        0.0%
  3940                           ;!BITBANK4            50      0       0      13        0.0%
  3941                           ;!BITSFR12             0      0       0      13        0.0%
  3942                           ;!SFR12                0      0       0      13        0.0%
  3943                           ;!BANK4               50      0      4C      14       95.0%
  3944                           ;!BITSFR13             0      0       0      14        0.0%
  3945                           ;!SFR13                0      0       0      14        0.0%
  3946                           ;!BITBANK5            50      0       0      15        0.0%
  3947                           ;!BITSFR14             0      0       0      15        0.0%
  3948                           ;!SFR14                0      0       0      15        0.0%
  3949                           ;!BANK5               50      0      14      16       25.0%
  3950                           ;!BITSFR15             0      0       0      16        0.0%
  3951                           ;!SFR15                0      0       0      16        0.0%
  3952                           ;!BITBANK6            50      0       0      17        0.0%
  3953                           ;!BITSFR16             0      0       0      17        0.0%
  3954                           ;!SFR16                0      0       0      17        0.0%
  3955                           ;!BANK6               50      0      50      18      100.0%
  3956                           ;!BITSFR17             0      0       0      18        0.0%
  3957                           ;!SFR17                0      0       0      18        0.0%
  3958                           ;!BITBANK7            50      0       0      19        0.0%
  3959                           ;!BITSFR18             0      0       0      19        0.0%
  3960                           ;!SFR18                0      0       0      19        0.0%
  3961                           ;!BANK7               50      0       0      20        0.0%
  3962                           ;!BITSFR19             0      0       0      20        0.0%
  3963                           ;!SFR19                0      0       0      20        0.0%
  3964                           ;!BITBANK8            50      0       0      21        0.0%
  3965                           ;!BITSFR20             0      0       0      21        0.0%
  3966                           ;!SFR20                0      0       0      21        0.0%
  3967                           ;!BANK8               50      0       0      22        0.0%
  3968                           ;!BITSFR21             0      0       0      22        0.0%
  3969                           ;!SFR21                0      0       0      22        0.0%
  3970                           ;!BITBANK9            50      0       0      23        0.0%
  3971                           ;!BITSFR22             0      0       0      23        0.0%
  3972                           ;!SFR22                0      0       0      23        0.0%
  3973                           ;!BANK9               50      0       0      24        0.0%
  3974                           ;!BITSFR23             0      0       0      24        0.0%
  3975                           ;!SFR23                0      0       0      24        0.0%
  3976                           ;!BITBANK10           50      0       0      25        0.0%
  3977                           ;!BITSFR24             0      0       0      25        0.0%
  3978                           ;!SFR24                0      0       0      25        0.0%
  3979                           ;!BANK10              50      0       0      26        0.0%
  3980                           ;!BITSFR25             0      0       0      26        0.0%
  3981                           ;!SFR25                0      0       0      26        0.0%
  3982                           ;!BITBANK11           50      0       0      27        0.0%
  3983                           ;!BITSFR26             0      0       0      27        0.0%
  3984                           ;!SFR26                0      0       0      27        0.0%
  3985                           ;!BANK11              50      0       0      28        0.0%
  3986                           ;!BITSFR27             0      0       0      28        0.0%
  3987                           ;!SFR27                0      0       0      28        0.0%
  3988                           ;!BITBANK12           50      0       0      29        0.0%
  3989                           ;!BITSFR28             0      0       0      29        0.0%
  3990                           ;!SFR28                0      0       0      29        0.0%
  3991                           ;!BANK12              50      0       0      30        0.0%
  3992                           ;!BITSFR29             0      0       0      30        0.0%
  3993                           ;!SFR29                0      0       0      30        0.0%
  3994                           ;!BITBANK13           50      0       0      31        0.0%
  3995                           ;!BITSFR30             0      0       0      31        0.0%
  3996                           ;!SFR30                0      0       0      31        0.0%
  3997                           ;!BANK13              50      0       0      32        0.0%
  3998                           ;!BITSFR31             0      0       0      32        0.0%
  3999                           ;!SFR31                0      0       0      32        0.0%
  4000                           ;!BITBANK14           50      0       0      33        0.0%
  4001                           ;!BITSFR32             0      0       0      33        0.0%
  4002                           ;!SFR32                0      0       0      33        0.0%
  4003                           ;!BANK14              50      0       0      34        0.0%
  4004                           ;!BITSFR33             0      0       0      34        0.0%
  4005                           ;!SFR33                0      0       0      34        0.0%
  4006                           ;!BITBANK15           50      0       0      35        0.0%
  4007                           ;!BITSFR34             0      0       0      35        0.0%
  4008                           ;!SFR34                0      0       0      35        0.0%
  4009                           ;!BANK15              50      0       0      36        0.0%
  4010                           ;!BITSFR35             0      0       0      36        0.0%
  4011                           ;!SFR35                0      0       0      36        0.0%
  4012                           ;!BITBANK16           50      0       0      37        0.0%
  4013                           ;!BITSFR36             0      0       0      37        0.0%
  4014                           ;!SFR36                0      0       0      37        0.0%
  4015                           ;!BANK16              50      0       0      38        0.0%
  4016                           ;!BITSFR37             0      0       0      38        0.0%
  4017                           ;!SFR37                0      0       0      38        0.0%
  4018                           ;!BITBANK17           50      0       0      39        0.0%
  4019                           ;!BITSFR38             0      0       0      39        0.0%
  4020                           ;!SFR38                0      0       0      39        0.0%
  4021                           ;!BANK17              50      0       0      40        0.0%
  4022                           ;!BITSFR39             0      0       0      40        0.0%
  4023                           ;!SFR39                0      0       0      40        0.0%
  4024                           ;!BITBANK18           50      0       0      41        0.0%
  4025                           ;!BITSFR40             0      0       0      41        0.0%
  4026                           ;!SFR40                0      0       0      41        0.0%
  4027                           ;!BANK18              50      0       0      42        0.0%
  4028                           ;!BITSFR41             0      0       0      42        0.0%
  4029                           ;!SFR41                0      0       0      42        0.0%
  4030                           ;!BITBANK19           50      0       0      43        0.0%
  4031                           ;!BITSFR42             0      0       0      43        0.0%
  4032                           ;!SFR42                0      0       0      43        0.0%
  4033                           ;!BANK19              50      0       0      44        0.0%
  4034                           ;!BITSFR43             0      0       0      44        0.0%
  4035                           ;!SFR43                0      0       0      44        0.0%
  4036                           ;!BITBANK20           50      0       0      45        0.0%
  4037                           ;!BITSFR44             0      0       0      45        0.0%
  4038                           ;!SFR44                0      0       0      45        0.0%
  4039                           ;!BANK20              50      0       0      46        0.0%
  4040                           ;!BITSFR45             0      0       0      46        0.0%
  4041                           ;!SFR45                0      0       0      46        0.0%
  4042                           ;!BITBANK21           50      0       0      47        0.0%
  4043                           ;!BITSFR46             0      0       0      47        0.0%
  4044                           ;!SFR46                0      0       0      47        0.0%
  4045                           ;!BANK21              50      0       0      48        0.0%
  4046                           ;!BITSFR47             0      0       0      48        0.0%
  4047                           ;!SFR47                0      0       0      48        0.0%
  4048                           ;!BITBANK22           50      0       0      49        0.0%
  4049                           ;!BITSFR48             0      0       0      49        0.0%
  4050                           ;!SFR48                0      0       0      49        0.0%
  4051                           ;!BANK22              50      0       0      50        0.0%
  4052                           ;!BITSFR49             0      0       0      50        0.0%
  4053                           ;!SFR49                0      0       0      50        0.0%
  4054                           ;!BITBANK23           50      0       0      51        0.0%
  4055                           ;!BITSFR50             0      0       0      51        0.0%
  4056                           ;!SFR50                0      0       0      51        0.0%
  4057                           ;!BANK23              50      0       0      52        0.0%
  4058                           ;!BITSFR51             0      0       0      52        0.0%
  4059                           ;!SFR51                0      0       0      52        0.0%
  4060                           ;!BITBANK24           50      0       0      53        0.0%
  4061                           ;!BITSFR52             0      0       0      53        0.0%
  4062                           ;!SFR52                0      0       0      53        0.0%
  4063                           ;!BANK24              50      0       0      54        0.0%
  4064                           ;!BITSFR53             0      0       0      54        0.0%
  4065                           ;!SFR53                0      0       0      54        0.0%
  4066                           ;!BITBANK25           20      0       0      55        0.0%
  4067                           ;!BITSFR54             0      0       0      55        0.0%
  4068                           ;!SFR54                0      0       0      55        0.0%
  4069                           ;!BANK25              20      0       0      56        0.0%
  4070                           ;!BITSFR55             0      0       0      56        0.0%
  4071                           ;!SFR55                0      0       0      56        0.0%
  4072                           ;!BITSFR56             0      0       0      57        0.0%
  4073                           ;!SFR56                0      0       0      57        0.0%
  4074                           ;!DATA                 0      0     1FE      57        0.0%
  4075                           ;!BITSFR57             0      0       0      58        0.0%
  4076                           ;!SFR57                0      0       0      58        0.0%
  4077                           ;!BITSFR58             0      0       0      59        0.0%
  4078                           ;!SFR58                0      0       0      59        0.0%
  4079                           ;!BITSFR59             0      0       0      60        0.0%
  4080                           ;!SFR59                0      0       0      60        0.0%
  4081                           ;!BITSFR60             0      0       0      61        0.0%
  4082                           ;!SFR60                0      0       0      61        0.0%
  4083                           ;!BITSFR61             0      0       0      62        0.0%
  4084                           ;!SFR61                0      0       0      62        0.0%
  4085                           ;!BITSFR62             0      0       0      63        0.0%
  4086                           ;!SFR62                0      0       0      63        0.0%
  4087                           ;!BITSFR63             0      0       0      64        0.0%
  4088                           ;!SFR63                0      0       0      64        0.0%
  4089                           
  4090                           	global	_main
  4091                           
  4092 ;; *************** function _main *****************
  4093 ;; Defined at:
  4094 ;;		line 106 in file "main.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;		None
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;  sensorTimeou    4   60[BANK2 ] unsigned long 
  4099 ;;  sensorTime      4   56[BANK2 ] unsigned long 
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  1    wreg      void 
  4102 ;; Registers used:
  4103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4104 ;; Tracked objects:
  4105 ;;		On entry : B3F/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4110 ;;      Locals:         0       0       0       8       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4111 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4112 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4113 ;;Total ram usage:        9 bytes
  4114 ;; Hardware stack levels required when called:   12
  4115 ;; This function calls:
  4116 ;;		_OLED_command
  4117 ;;		_OLED_init
  4118 ;;		_OLED_returnHome
  4119 ;;		_checkStatus
  4120 ;;		_convertAnalogValues
  4121 ;;		_handleSensorData
  4122 ;;		_initialize
  4123 ;;		_showMenu
  4124 ;;		_timeNow
  4125 ;;		_timeSince
  4126 ;;		_uartSendByte
  4127 ;; This function is called by:
  4128 ;;		Startup code after reset
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
  4132                           	file	"main.c"
  4133                           	line	106
  4134                           global __pmaintext
  4135                           __pmaintext:	;psect for function _main
  4136  1CBB                     psect	maintext
  4137                           	file	"main.c"
  4138                           	line	106
  4139                           	global	__size_of_main
  4140                           	__size_of_main	equ	__end_of_main-_main
  4141  00B8                     	
  4142                           _main:	
  4143  1CBB                     ;incstack = 0
  4144                           	opt	stack 4
  4145                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4146                           	line	110
  4147                           	
  4148                           l4965:	
  4149  1CBB                     ;main.c: 108:  uint32_t sensorTime, sensorTimeout;;main.c: 110:  initialize();
  4150                           	fcall	_initialize
  4151  1CBB  31A5  253A  319C   	line	111
  4152                           	
  4153                           l4967:	
  4154  1CBE                     ;main.c: 111:  LATBbits.LATB5 = 1;
  4155                           	movlb 0	; select bank0
  4156  1CBE  0140               	bsf	(25),5	;volatile
  4157  1CBF  1699               	line	112
  4158                           	
  4159                           l4969:	
  4160  1CC0                     ;main.c: 112:  LATCbits.LATC3 = 1;
  4161                           	bsf	(26),3	;volatile
  4162  1CC0  159A               	line	113
  4163                           ;main.c: 113:  OLED_init();
  4164                           	fcall	_OLED_init
  4165  1CC1  319A  2238  319C   	line	114
  4166                           ;main.c: 114:  OLED_returnHome();
  4167                           	fcall	_OLED_returnHome
  4168  1CC4  31A1  214F  319C   	line	115
  4169                           ;main.c: 115:  OLED_command(0x01);
  4170                           	movlw	low(01h)
  4171  1CC7  3001               	fcall	_OLED_command
  4172  1CC8  31A1  2173  319C   	line	117
  4173                           	
  4174                           l4971:	
  4175  1CCB                     ;main.c: 117:  LATAbits.LATA0 = 1;
  4176                           	movlb 0	; select bank0
  4177  1CCB  0140               	bsf	(24),0	;volatile
  4178  1CCC  1418               	line	119
  4179                           	
  4180                           l4973:	
  4181  1CCD                     ;main.c: 119:  sensorTime = sensorTimeout = timeNow();
  4182                           	fcall	_timeNow
  4183  1CCD  3188  2003  319C   	movlb 0	; select bank0
  4184  1CD0  0140               	movf	(3+(?_timeNow)),w
  4185  1CD1  0823               	movlb 2	; select bank2
  4186  1CD2  0142               	movwf	(main@sensorTimeout+3)^0100h
  4187  1CD3  00DF               	movlb 0	; select bank0
  4188  1CD4  0140               	movf	(2+(?_timeNow)),w
  4189  1CD5  0822               	movlb 2	; select bank2
  4190  1CD6  0142               	movwf	(main@sensorTimeout+2)^0100h
  4191  1CD7  00DE               	movlb 0	; select bank0
  4192  1CD8  0140               	movf	(1+(?_timeNow)),w
  4193  1CD9  0821               	movlb 2	; select bank2
  4194  1CDA  0142               	movwf	(main@sensorTimeout+1)^0100h
  4195  1CDB  00DD               	movlb 0	; select bank0
  4196  1CDC  0140               	movf	(0+(?_timeNow)),w
  4197  1CDD  0820               	movlb 2	; select bank2
  4198  1CDE  0142               	movwf	(main@sensorTimeout)^0100h
  4199  1CDF  00DC               
  4200                           	movf	((main@sensorTimeout+3)^0100h),w
  4201  1CE0  085F               	movwf	(main@sensorTime+3)^0100h
  4202  1CE1  00DB               	movf	((main@sensorTimeout+2)^0100h),w
  4203  1CE2  085E               	movwf	(main@sensorTime+2)^0100h
  4204  1CE3  00DA               	movf	((main@sensorTimeout+1)^0100h),w
  4205  1CE4  085D               	movwf	(main@sensorTime+1)^0100h
  4206  1CE5  00D9               	movf	((main@sensorTimeout)^0100h),w
  4207  1CE6  085C               	movwf	(main@sensorTime)^0100h
  4208  1CE7  00D8               
  4209                           	line	121
  4210                           ;main.c: 121:  while (1) {
  4211                           	
  4212                           l187:	
  4213  1CE8                     	line	122
  4214                           # 122 "main.c"
  4215                           clrwdt ;# 
  4216  1CE8  0064               psect	maintext
  4217                           	line	123
  4218                           	
  4219                           l4975:	
  4220  1CE9                     ;main.c: 123:   convertAnalogValues();
  4221                           	fcall	_convertAnalogValues
  4222  1CE9  3188  2015  319C   	line	124
  4223                           	
  4224                           l4977:	
  4225  1CEC                     ;main.c: 124:   checkStatus();
  4226                           	fcall	_checkStatus
  4227  1CEC  31A3  2303  319C   	line	127
  4228                           	
  4229                           l4979:	
  4230  1CEF                     ;main.c: 127:   if (timeSince(sensorTime) >= 5*10) {
  4231                           	movlb 2	; select bank2
  4232  1CEF  0142               	movf	(main@sensorTime+3)^0100h,w
  4233  1CF0  085B               	movlb 0	; select bank0
  4234  1CF1  0140               	movwf	(timeSince@since+3)
  4235  1CF2  00A7               	movlb 2	; select bank2
  4236  1CF3  0142               	movf	(main@sensorTime+2)^0100h,w
  4237  1CF4  085A               	movlb 0	; select bank0
  4238  1CF5  0140               	movwf	(timeSince@since+2)
  4239  1CF6  00A6               	movlb 2	; select bank2
  4240  1CF7  0142               	movf	(main@sensorTime+1)^0100h,w
  4241  1CF8  0859               	movlb 0	; select bank0
  4242  1CF9  0140               	movwf	(timeSince@since+1)
  4243  1CFA  00A5               	movlb 2	; select bank2
  4244  1CFB  0142               	movf	(main@sensorTime)^0100h,w
  4245  1CFC  0858               	movlb 0	; select bank0
  4246  1CFD  0140               	movwf	(timeSince@since)
  4247  1CFE  00A4               
  4248                           	fcall	_timeSince
  4249  1CFF  3199  2135  319C   	movlb 0	; select bank0
  4250  1D02  0140               		movf	(3+(?_timeSince)),w
  4251  1D03  0827               	btfss	status,2
  4252  1D04  1D03               	goto	u7020
  4253  1D05  2D12               	movf	(2+(?_timeSince)),w
  4254  1D06  0826               	btfss	status,2
  4255  1D07  1D03               	goto	u7020
  4256  1D08  2D12               	movf	(1+(?_timeSince)),w
  4257  1D09  0825               	btfss	status,2
  4258  1D0A  1D03               	goto	u7020
  4259  1D0B  2D12               	movlw	50
  4260  1D0C  3032               	subwf	 (0+(?_timeSince)),w
  4261  1D0D  0224               	btfss	status,0
  4262  1D0E  1C03               	goto	u7021
  4263  1D0F  2D11               	goto	u7020
  4264  1D10  2D12               
  4265                           u7021:
  4266  1D11                     	goto	l4985
  4267  1D11  2D32               u7020:
  4268  1D12                     	line	128
  4269                           	
  4270                           l4981:	
  4271  1D12                     ;main.c: 128:    sensorTime = sensorTimeout = timeNow();
  4272                           	fcall	_timeNow
  4273  1D12  3188  2003  319C   	movlb 0	; select bank0
  4274  1D15  0140               	movf	(3+(?_timeNow)),w
  4275  1D16  0823               	movlb 2	; select bank2
  4276  1D17  0142               	movwf	(main@sensorTimeout+3)^0100h
  4277  1D18  00DF               	movlb 0	; select bank0
  4278  1D19  0140               	movf	(2+(?_timeNow)),w
  4279  1D1A  0822               	movlb 2	; select bank2
  4280  1D1B  0142               	movwf	(main@sensorTimeout+2)^0100h
  4281  1D1C  00DE               	movlb 0	; select bank0
  4282  1D1D  0140               	movf	(1+(?_timeNow)),w
  4283  1D1E  0821               	movlb 2	; select bank2
  4284  1D1F  0142               	movwf	(main@sensorTimeout+1)^0100h
  4285  1D20  00DD               	movlb 0	; select bank0
  4286  1D21  0140               	movf	(0+(?_timeNow)),w
  4287  1D22  0820               	movlb 2	; select bank2
  4288  1D23  0142               	movwf	(main@sensorTimeout)^0100h
  4289  1D24  00DC               
  4290                           	movf	((main@sensorTimeout+3)^0100h),w
  4291  1D25  085F               	movwf	(main@sensorTime+3)^0100h
  4292  1D26  00DB               	movf	((main@sensorTimeout+2)^0100h),w
  4293  1D27  085E               	movwf	(main@sensorTime+2)^0100h
  4294  1D28  00DA               	movf	((main@sensorTimeout+1)^0100h),w
  4295  1D29  085D               	movwf	(main@sensorTime+1)^0100h
  4296  1D2A  00D9               	movf	((main@sensorTimeout)^0100h),w
  4297  1D2B  085C               	movwf	(main@sensorTime)^0100h
  4298  1D2C  00D8               
  4299                           	line	130
  4300                           	
  4301                           l4983:	
  4302  1D2D                     ;main.c: 130:    uartSendByte('?');
  4303                           	movlw	low(03Fh)
  4304  1D2D  303F               	fcall	_uartSendByte
  4305  1D2E  31A1  21A4  319C   	goto	l4985
  4306  1D31  2D32               	line	131
  4307                           ;main.c: 131:   }
  4308                           	
  4309                           l188:	
  4310  1D32                     	line	133
  4311                           	
  4312                           l4985:	
  4313  1D32                     ;main.c: 133:   if (timeSince(sensorTimeout) > 50) {
  4314                           	movlb 2	; select bank2
  4315  1D32  0142               	movf	(main@sensorTimeout+3)^0100h,w
  4316  1D33  085F               	movlb 0	; select bank0
  4317  1D34  0140               	movwf	(timeSince@since+3)
  4318  1D35  00A7               	movlb 2	; select bank2
  4319  1D36  0142               	movf	(main@sensorTimeout+2)^0100h,w
  4320  1D37  085E               	movlb 0	; select bank0
  4321  1D38  0140               	movwf	(timeSince@since+2)
  4322  1D39  00A6               	movlb 2	; select bank2
  4323  1D3A  0142               	movf	(main@sensorTimeout+1)^0100h,w
  4324  1D3B  085D               	movlb 0	; select bank0
  4325  1D3C  0140               	movwf	(timeSince@since+1)
  4326  1D3D  00A5               	movlb 2	; select bank2
  4327  1D3E  0142               	movf	(main@sensorTimeout)^0100h,w
  4328  1D3F  085C               	movlb 0	; select bank0
  4329  1D40  0140               	movwf	(timeSince@since)
  4330  1D41  00A4               
  4331                           	fcall	_timeSince
  4332  1D42  3199  2135  319C   	movlb 0	; select bank0
  4333  1D45  0140               		movf	(3+(?_timeSince)),w
  4334  1D46  0827               	btfss	status,2
  4335  1D47  1D03               	goto	u7030
  4336  1D48  2D55               	movf	(2+(?_timeSince)),w
  4337  1D49  0826               	btfss	status,2
  4338  1D4A  1D03               	goto	u7030
  4339  1D4B  2D55               	movf	(1+(?_timeSince)),w
  4340  1D4C  0825               	btfss	status,2
  4341  1D4D  1D03               	goto	u7030
  4342  1D4E  2D55               	movlw	51
  4343  1D4F  3033               	subwf	 (0+(?_timeSince)),w
  4344  1D50  0224               	btfss	status,0
  4345  1D51  1C03               	goto	u7031
  4346  1D52  2D54               	goto	u7030
  4347  1D53  2D55               
  4348                           u7031:
  4349  1D54                     	goto	l4989
  4350  1D54  2D58               u7030:
  4351  1D55                     	line	134
  4352                           	
  4353                           l4987:	
  4354  1D55                     ;main.c: 134:    g_status.NOSENSOR = 1;
  4355                           	movlb 3	; select bank3
  4356  1D55  0143               	bsf	(_g_status)^0180h,1
  4357  1D56  14ED               	goto	l4989
  4358  1D57  2D58               	line	135
  4359                           ;main.c: 135:   }
  4360                           	
  4361                           l189:	
  4362  1D58                     	line	137
  4363                           	
  4364                           l4989:	
  4365  1D58                     ;main.c: 137:   if (g_dataReady == 1) {
  4366                           	movlb 2	; select bank2
  4367  1D58  0142               		decf	((_g_dataReady)^0100h),w	;volatile
  4368  1D59  036D               	btfss	status,2
  4369  1D5A  1D03               	goto	u7041
  4370  1D5B  2D5D               	goto	u7040
  4371  1D5C  2D5E               u7041:
  4372  1D5D                     	goto	l4995
  4373  1D5D  2D63               u7040:
  4374  1D5E                     	line	138
  4375                           	
  4376                           l4991:	
  4377  1D5E                     ;main.c: 138:    g_dataReady = 0;
  4378                           	clrf	(_g_dataReady)^0100h	;volatile
  4379  1D5E  01ED               	line	139
  4380                           	
  4381                           l4993:	
  4382  1D5F                     ;main.c: 139:    handleSensorData();
  4383                           	fcall	_handleSensorData
  4384  1D5F  3198  2001  319C   	goto	l4995
  4385  1D62  2D63               	line	140
  4386                           ;main.c: 140:   }
  4387                           	
  4388                           l190:	
  4389  1D63                     	line	142
  4390                           	
  4391                           l4995:	
  4392  1D63                     ;main.c: 142:   showMenu();
  4393                           	fcall	_showMenu
  4394  1D63  3192  226E  319C   	line	143
  4395                           	
  4396                           l4997:	
  4397  1D66                     ;main.c: 143:   _delay((unsigned long)((10)*(4000000/4000.0)));
  4398                           	opt asmopt_push
  4399                           opt asmopt_off
  4400                           movlw	13
  4401  1D66  300D               	movlb 2	; select bank2
  4402  1D67  0142               movwf	((??_main+0)^0100h+0),f
  4403  1D68  00D7               	movlw	251
  4404  1D69  30FB               u7197:
  4405  1D6A                     decfsz	wreg
  4406  1D6A  0B89               	goto	u7197
  4407  1D6B  2D6A               	decfsz	((??_main+0)^0100h+0),f
  4408  1D6C  0BD7               	goto	u7197
  4409  1D6D  2D6A               	nop2
  4410  1D6E  3200               opt asmopt_pop
  4411                           
  4412                           	goto	l187
  4413  1D6F  2CE8               	line	145
  4414                           ;main.c: 145:  }
  4415                           	
  4416                           l191:	
  4417  1D70                     	goto	l187
  4418  1D70  2CE8               	
  4419                           l192:	
  4420  1D71                     	line	146
  4421                           	
  4422                           l193:	
  4423  1D71                     	global	start
  4424                           	ljmp	start
  4425  1D71  3180  2895         	opt stack 0
  4426                           GLOBAL	__end_of_main
  4427                           	__end_of_main:
  4428  1D73                     	signat	_main,89
  4429                           	global	_uartSendByte
  4430                           
  4431 ;; *************** function _uartSendByte *****************
  4432 ;; Defined at:
  4433 ;;		line 363 in file "main.c"
  4434 ;; Parameters:    Size  Location     Type
  4435 ;;  s               1    wreg     unsigned char 
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;  s               1    0[BANK0 ] unsigned char 
  4438 ;; Return value:  Size  Location     Type
  4439 ;;                  1    wreg      void 
  4440 ;; Registers used:
  4441 ;;		wreg
  4442 ;; Tracked objects:
  4443 ;;		On entry : 0/0
  4444 ;;		On exit  : 0/0
  4445 ;;		Unchanged: 0/0
  4446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4448 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4450 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4451 ;;Total ram usage:        1 bytes
  4452 ;; Hardware stack levels used:    1
  4453 ;; Hardware stack levels required when called:    3
  4454 ;; This function calls:
  4455 ;;		Nothing
  4456 ;; This function is called by:
  4457 ;;		_main
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  4461                           	line	363
  4462                           global __ptext1
  4463                           __ptext1:	;psect for function _uartSendByte
  4464  21A4                     psect	text1
  4465                           	file	"main.c"
  4466                           	line	363
  4467                           	global	__size_of_uartSendByte
  4468                           	__size_of_uartSendByte	equ	__end_of_uartSendByte-_uartSendByte
  4469  000E                     	
  4470                           _uartSendByte:	
  4471  21A4                     ;incstack = 0
  4472                           	opt	stack 12
  4473                           ; Regs used in _uartSendByte: [wreg]
  4474                           ;uartSendByte@s stored from wreg
  4475                           	movlb 0	; select bank0
  4476  21A4  0140               	movwf	(uartSendByte@s)
  4477  21A5  00A0               	line	365
  4478                           	
  4479                           l4845:	
  4480  21A6                     ;main.c: 363: void uartSendByte(char s);main.c: 364: {;main.c: 365:  TX1REG = s;
  4481                           	movf	(uartSendByte@s),w
  4482  21A6  0820               	movlb 2	; select bank2
  4483  21A7  0142               	movwf	(282)^0100h	;volatile
  4484  21A8  009A               	line	366
  4485                           	
  4486                           l4847:	
  4487  21A9                     ;main.c: 366:  __nop();
  4488                           	opt	asmopt_push
  4489                           	opt	asmopt_off
  4490                           	nop
  4491  21A9  0000               	opt	asmopt_pop
  4492                           	line	367
  4493                           ;main.c: 367:  while (!PIR3bits.TX1IF);
  4494                           	goto	l270
  4495  21AA  29AB               	
  4496                           l271:	
  4497  21AB                     	
  4498                           l270:	
  4499  21AB                     	movlb 14	; select bank14
  4500  21AB  014E               	btfss	(1807)^0700h,4	;volatile
  4501  21AC  1E0F               	goto	u6781
  4502  21AD  29AF               	goto	u6780
  4503  21AE  29B0               u6781:
  4504  21AF                     	goto	l270
  4505  21AF  29AB               u6780:
  4506  21B0                     	goto	l273
  4507  21B0  29B1               	
  4508                           l272:	
  4509  21B1                     	line	368
  4510                           	
  4511                           l273:	
  4512  21B1                     	return
  4513  21B1  0008               	opt stack 0
  4514                           GLOBAL	__end_of_uartSendByte
  4515                           	__end_of_uartSendByte:
  4516  21B2                     	signat	_uartSendByte,4217
  4517                           	global	_timeSince
  4518                           
  4519 ;; *************** function _timeSince *****************
  4520 ;; Defined at:
  4521 ;;		line 153 in file "main.c"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;  since           4    4[BANK0 ] unsigned long 
  4524 ;; Auto vars:     Size  Location     Type
  4525 ;;  now             4   20[BANK0 ] unsigned long 
  4526 ;; Return value:  Size  Location     Type
  4527 ;;                  4    4[BANK0 ] unsigned long 
  4528 ;; Registers used:
  4529 ;;		wreg, status,2, status,0, pclath, cstack
  4530 ;; Tracked objects:
  4531 ;;		On entry : 0/0
  4532 ;;		On exit  : 0/0
  4533 ;;		Unchanged: 0/0
  4534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4535 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4536 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4537 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4538 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4539 ;;Total ram usage:       20 bytes
  4540 ;; Hardware stack levels used:    1
  4541 ;; Hardware stack levels required when called:    4
  4542 ;; This function calls:
  4543 ;;		_timeNow
  4544 ;; This function is called by:
  4545 ;;		_main
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  4549                           	line	153
  4550                           global __ptext2
  4551                           __ptext2:	;psect for function _timeSince
  4552  1935                     psect	text2
  4553                           	file	"main.c"
  4554                           	line	153
  4555                           	global	__size_of_timeSince
  4556                           	__size_of_timeSince	equ	__end_of_timeSince-_timeSince
  4557  0080                     	
  4558                           _timeSince:	
  4559  1935                     ;incstack = 0
  4560                           	opt	stack 11
  4561                           ; Regs used in _timeSince: [wreg+status,2+status,0+pclath+cstack]
  4562                           	line	155
  4563                           	
  4564                           l4833:	
  4565  1935                     ;main.c: 153: uint32_t timeSince(uint32_t since);main.c: 154: {;main.c: 155:  uint32_t n
                                 ow = timeNow();
  4566                           	fcall	_timeNow
  4567  1935  3188  2003  3199   	movlb 0	; select bank0
  4568  1938  0140               	movf	(3+(?_timeNow)),w
  4569  1939  0823               	movwf	(timeSince@now+3)
  4570  193A  00B7               	movf	(2+(?_timeNow)),w
  4571  193B  0822               	movwf	(timeSince@now+2)
  4572  193C  00B6               	movf	(1+(?_timeNow)),w
  4573  193D  0821               	movwf	(timeSince@now+1)
  4574  193E  00B5               	movf	(0+(?_timeNow)),w
  4575  193F  0820               	movwf	(timeSince@now)
  4576  1940  00B4               
  4577                           	line	156
  4578                           	
  4579                           l4835:	
  4580  1941                     ;main.c: 156:  if (now >= since)
  4581                           	movf	(timeSince@since+3),w
  4582  1941  0827               	subwf	(timeSince@now+3),w
  4583  1942  0237               	skipz
  4584  1943  1D03               	goto	u6775
  4585  1944  294F               	movf	(timeSince@since+2),w
  4586  1945  0826               	subwf	(timeSince@now+2),w
  4587  1946  0236               	skipz
  4588  1947  1D03               	goto	u6775
  4589  1948  294F               	movf	(timeSince@since+1),w
  4590  1949  0825               	subwf	(timeSince@now+1),w
  4591  194A  0235               	skipz
  4592  194B  1D03               	goto	u6775
  4593  194C  294F               	movf	(timeSince@since),w
  4594  194D  0824               	subwf	(timeSince@now),w
  4595  194E  0234               u6775:
  4596  194F                     	skipc
  4597  194F  1C03               	goto	u6771
  4598  1950  2952               	goto	u6770
  4599  1951  2953               u6771:
  4600  1952                     	goto	l4841
  4601  1952  297C               u6770:
  4602  1953                     	line	157
  4603                           	
  4604                           l4837:	
  4605  1953                     ;main.c: 157:   return (now - since);
  4606                           	movf	(timeSince@now),w
  4607  1953  0834               	movwf	(??_timeSince+0)+0
  4608  1954  00A8               	movf	(timeSince@now+1),w
  4609  1955  0835               	movwf	((??_timeSince+0)+0+1)
  4610  1956  00A9               	movf	(timeSince@now+2),w
  4611  1957  0836               	movwf	((??_timeSince+0)+0+2)
  4612  1958  00AA               	movf	(timeSince@now+3),w
  4613  1959  0837               	movwf	((??_timeSince+0)+0+3)
  4614  195A  00AB               	comf	(timeSince@since),w
  4615  195B  0924               	movwf	(??_timeSince+4)+0
  4616  195C  00AC               	comf	(timeSince@since+1),w
  4617  195D  0925               	movwf	((??_timeSince+4)+0+1)
  4618  195E  00AD               	comf	(timeSince@since+2),w
  4619  195F  0926               	movwf	((??_timeSince+4)+0+2)
  4620  1960  00AE               	comf	(timeSince@since+3),w
  4621  1961  0927               	movwf	((??_timeSince+4)+0+3)
  4622  1962  00AF               	incf	(??_timeSince+4)+0,f
  4623  1963  0AAC               	skipnz
  4624  1964  1903               	incf	((??_timeSince+4)+0+1),f
  4625  1965  0AAD               	skipnz
  4626  1966  1903               	incf	((??_timeSince+4)+0+2),f
  4627  1967  0AAE               	skipnz
  4628  1968  1903               	incf	((??_timeSince+4)+0+3),f
  4629  1969  0AAF               	movf	0+(??_timeSince+4)+0,w
  4630  196A  082C               	addwf	(??_timeSince+0)+0,f
  4631  196B  07A8               	movf	1+(??_timeSince+4)+0,w
  4632  196C  082D               	addwfc	(??_timeSince+0)+1,f
  4633  196D  3DA9               	movf	2+(??_timeSince+4)+0,w
  4634  196E  082E               	addwfc	(??_timeSince+0)+2,f
  4635  196F  3DAA               	movf	3+(??_timeSince+4)+0,w
  4636  1970  082F               	addwfc	(??_timeSince+0)+3,f
  4637  1971  3DAB               	movf	3+(??_timeSince+0)+0,w
  4638  1972  082B               	movwf	(?_timeSince+3)
  4639  1973  00A7               	movf	2+(??_timeSince+0)+0,w
  4640  1974  082A               	movwf	(?_timeSince+2)
  4641  1975  00A6               	movf	1+(??_timeSince+0)+0,w
  4642  1976  0829               	movwf	(?_timeSince+1)
  4643  1977  00A5               	movf	0+(??_timeSince+0)+0,w
  4644  1978  0828               	movwf	(?_timeSince)
  4645  1979  00A4               
  4646                           	goto	l200
  4647  197A  29B4               	
  4648                           l4839:	
  4649  197B                     	goto	l200
  4650  197B  29B4               	
  4651                           l199:	
  4652  197C                     	line	159
  4653                           	
  4654                           l4841:	
  4655  197C                     ;main.c: 159:  return (now + (1 + (0xffffffffu)/2 - since));
  4656                           	movlw	0
  4657  197C  3000               	movwf	((??_timeSince+0)+0)
  4658  197D  00A8               	movlw	0
  4659  197E  3000               	movwf	((??_timeSince+0)+0+1)
  4660  197F  00A9               	movlw	0
  4661  1980  3000               	movwf	((??_timeSince+0)+0+2)
  4662  1981  00AA               	movlw	080h
  4663  1982  3080               	movwf	((??_timeSince+0)+0+3)
  4664  1983  00AB               	movf	(timeSince@now),w
  4665  1984  0834               	movwf	(??_timeSince+4)+0
  4666  1985  00AC               	movf	(timeSince@now+1),w
  4667  1986  0835               	movwf	((??_timeSince+4)+0+1)
  4668  1987  00AD               	movf	(timeSince@now+2),w
  4669  1988  0836               	movwf	((??_timeSince+4)+0+2)
  4670  1989  00AE               	movf	(timeSince@now+3),w
  4671  198A  0837               	movwf	((??_timeSince+4)+0+3)
  4672  198B  00AF               	comf	(timeSince@since),w
  4673  198C  0924               	movwf	(??_timeSince+8)+0
  4674  198D  00B0               	comf	(timeSince@since+1),w
  4675  198E  0925               	movwf	((??_timeSince+8)+0+1)
  4676  198F  00B1               	comf	(timeSince@since+2),w
  4677  1990  0926               	movwf	((??_timeSince+8)+0+2)
  4678  1991  00B2               	comf	(timeSince@since+3),w
  4679  1992  0927               	movwf	((??_timeSince+8)+0+3)
  4680  1993  00B3               	incf	(??_timeSince+8)+0,f
  4681  1994  0AB0               	skipnz
  4682  1995  1903               	incf	((??_timeSince+8)+0+1),f
  4683  1996  0AB1               	skipnz
  4684  1997  1903               	incf	((??_timeSince+8)+0+2),f
  4685  1998  0AB2               	skipnz
  4686  1999  1903               	incf	((??_timeSince+8)+0+3),f
  4687  199A  0AB3               	movf	0+(??_timeSince+8)+0,w
  4688  199B  0830               	addwf	(??_timeSince+4)+0,f
  4689  199C  07AC               	movf	1+(??_timeSince+8)+0,w
  4690  199D  0831               	addwfc	(??_timeSince+4)+1,f
  4691  199E  3DAD               	movf	2+(??_timeSince+8)+0,w
  4692  199F  0832               	addwfc	(??_timeSince+4)+2,f
  4693  19A0  3DAE               	movf	3+(??_timeSince+8)+0,w
  4694  19A1  0833               	addwfc	(??_timeSince+4)+3,f
  4695  19A2  3DAF               	movf	0+(??_timeSince+4)+0,w
  4696  19A3  082C               	addwf	(??_timeSince+0)+0,f
  4697  19A4  07A8               	movf	1+(??_timeSince+4)+0,w
  4698  19A5  082D               	addwfc	(??_timeSince+0)+1,f
  4699  19A6  3DA9               	movf	2+(??_timeSince+4)+0,w
  4700  19A7  082E               	addwfc	(??_timeSince+0)+2,f
  4701  19A8  3DAA               	movf	3+(??_timeSince+4)+0,w
  4702  19A9  082F               	addwfc	(??_timeSince+0)+3,f
  4703  19AA  3DAB               	movf	3+(??_timeSince+0)+0,w
  4704  19AB  082B               	movwf	(?_timeSince+3)
  4705  19AC  00A7               	movf	2+(??_timeSince+0)+0,w
  4706  19AD  082A               	movwf	(?_timeSince+2)
  4707  19AE  00A6               	movf	1+(??_timeSince+0)+0,w
  4708  19AF  0829               	movwf	(?_timeSince+1)
  4709  19B0  00A5               	movf	0+(??_timeSince+0)+0,w
  4710  19B1  0828               	movwf	(?_timeSince)
  4711  19B2  00A4               
  4712                           	goto	l200
  4713  19B3  29B4               	
  4714                           l4843:	
  4715  19B4                     	line	160
  4716                           	
  4717                           l200:	
  4718  19B4                     	return
  4719  19B4  0008               	opt stack 0
  4720                           GLOBAL	__end_of_timeSince
  4721                           	__end_of_timeSince:
  4722  19B5                     	signat	_timeSince,4220
  4723                           	global	_timeNow
  4724                           
  4725 ;; *************** function _timeNow *****************
  4726 ;; Defined at:
  4727 ;;		line 148 in file "main.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;		None
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;		None
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  4    0[BANK0 ] unsigned long 
  4734 ;; Registers used:
  4735 ;;		wreg
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4741 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4744 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4745 ;;Total ram usage:        4 bytes
  4746 ;; Hardware stack levels used:    1
  4747 ;; Hardware stack levels required when called:    3
  4748 ;; This function calls:
  4749 ;;		Nothing
  4750 ;; This function is called by:
  4751 ;;		_main
  4752 ;;		_timeSince
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  4756                           	line	148
  4757                           global __ptext3
  4758                           __ptext3:	;psect for function _timeNow
  4759  0803                     psect	text3
  4760                           	file	"main.c"
  4761                           	line	148
  4762                           	global	__size_of_timeNow
  4763                           	__size_of_timeNow	equ	__end_of_timeNow-_timeNow
  4764  0012                     	
  4765                           _timeNow:	
  4766  0803                     ;incstack = 0
  4767                           	opt	stack 11
  4768                           ; Regs used in _timeNow: [wreg]
  4769                           	line	150
  4770                           	
  4771                           l4567:	
  4772  0803                     ;main.c: 150:  return g_100msTick;
  4773                           	movlb 2	; select bank2
  4774  0803  0142               	movf	(_g_100msTick+3)^0100h,w	;volatile
  4775  0804  0863               	movlb 0	; select bank0
  4776  0805  0140               	movwf	(?_timeNow+3)
  4777  0806  00A3               	movlb 2	; select bank2
  4778  0807  0142               	movf	(_g_100msTick+2)^0100h,w	;volatile
  4779  0808  0862               	movlb 0	; select bank0
  4780  0809  0140               	movwf	(?_timeNow+2)
  4781  080A  00A2               	movlb 2	; select bank2
  4782  080B  0142               	movf	(_g_100msTick+1)^0100h,w	;volatile
  4783  080C  0861               	movlb 0	; select bank0
  4784  080D  0140               	movwf	(?_timeNow+1)
  4785  080E  00A1               	movlb 2	; select bank2
  4786  080F  0142               	movf	(_g_100msTick)^0100h,w	;volatile
  4787  0810  0860               	movlb 0	; select bank0
  4788  0811  0140               	movwf	(?_timeNow)
  4789  0812  00A0               
  4790                           	goto	l196
  4791  0813  2814               	
  4792                           l4569:	
  4793  0814                     	line	151
  4794                           	
  4795                           l196:	
  4796  0814                     	return
  4797  0814  0008               	opt stack 0
  4798                           GLOBAL	__end_of_timeNow
  4799                           	__end_of_timeNow:
  4800  0815                     	signat	_timeNow,92
  4801                           	global	_showMenu
  4802                           
  4803 ;; *************** function _showMenu *****************
  4804 ;; Defined at:
  4805 ;;		line 217 in file "main.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;		None
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;  s              61    0[BANK3 ] unsigned char [61]
  4810 ;;  s12            12   61[BANK3 ] unsigned char [12]
  4811 ;;  pb              1   73[BANK3 ] enum E7840
  4812 ;; Return value:  Size  Location     Type
  4813 ;;                  1    wreg      void 
  4814 ;; Registers used:
  4815 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4816 ;; Tracked objects:
  4817 ;;		On entry : 0/0
  4818 ;;		On exit  : 0/0
  4819 ;;		Unchanged: 0/0
  4820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4822 ;;      Locals:         0       0       0       0      74       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4823 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4824 ;;      Totals:         0       0       0       2      74       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4825 ;;Total ram usage:       76 bytes
  4826 ;; Hardware stack levels used:    1
  4827 ;; Hardware stack levels required when called:   11
  4828 ;; This function calls:
  4829 ;;		_OLED_print_xy
  4830 ;;		_getPB
  4831 ;;		_menuInput
  4832 ;;		_sprintf
  4833 ;; This function is called by:
  4834 ;;		_main
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  4838                           	line	217
  4839                           global __ptext4
  4840                           __ptext4:	;psect for function _showMenu
  4841  126E                     psect	text4
  4842                           	file	"main.c"
  4843                           	line	217
  4844                           	global	__size_of_showMenu
  4845                           	__size_of_showMenu	equ	__end_of_showMenu-_showMenu
  4846  0148                     	
  4847                           _showMenu:	
  4848  126E                     ;incstack = 0
  4849                           	opt	stack 4
  4850                           ; Regs used in _showMenu: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4851                           	line	224
  4852                           	
  4853                           l4859:	
  4854  126E                     ;main.c: 219:  static uint8_t menu = 0;;main.c: 220:  static uint8_t page = 0;;main.c: 2
                                 21:  enum e_buttonPress pb;;main.c: 222:  char s[61], s12[12];;main.c: 224:  pb = getPB(
                                 );
  4855                           	fcall	_getPB
  4856  126E  31A1  218A  3192   	movlb 2	; select bank2
  4857  1271  0142               	movwf	(??_showMenu+0)^0100h+0
  4858  1272  00D5               	movf	(??_showMenu+0)^0100h+0,w
  4859  1273  0855               	movlb 3	; select bank3
  4860  1274  0143               	movwf	(showMenu@pb)^0180h
  4861  1275  00E9               	line	225
  4862                           	
  4863                           l4861:	
  4864  1276                     ;main.c: 225:  if (menu == 0) {
  4865                           	movf	((showMenu@menu)^0180h),w
  4866  1276  086F               	btfss	status,2
  4867  1277  1D03               	goto	u6811
  4868  1278  2A7A               	goto	u6810
  4869  1279  2A7B               u6811:
  4870  127A                     	goto	l4879
  4871  127A  2B8F               u6810:
  4872  127B                     	line	227
  4873                           	
  4874                           l4863:	
  4875  127B                     ;main.c: 227:   if (g_status.NOSENSOR) {
  4876                           	btfss	(_g_status)^0180h,1
  4877  127B  1CED               	goto	u6821
  4878  127C  2A7E               	goto	u6820
  4879  127D  2A7F               u6821:
  4880  127E                     	goto	l4869
  4881  127E  2ACF               u6820:
  4882  127F                     	line	228
  4883                           	
  4884                           l4865:	
  4885  127F                     ;main.c: 228:    OLED_print_xy(0, 0, "Bat.   Power");
  4886                           	movlb 0	; select bank0
  4887  127F  0140               	clrf	(OLED_print_xy@row)
  4888  1280  01A7               	movlw	low(((STR_1)|8000h))
  4889  1281  3071               	movwf	(OLED_print_xy@s)
  4890  1282  00A8               	movlw	high(((STR_1)|8000h))
  4891  1283  30A8               	movwf	((OLED_print_xy@s))+1
  4892  1284  00A9               	movlw	low(0)
  4893  1285  3000               	fcall	_OLED_print_xy
  4894  1286  31A4  2445  3192   	line	229
  4895                           ;main.c: 229:    sprintf(s, "%4.1fV  %4.1fW", g_voltage, g_power);
  4896                           	movlw	low(((STR_2)|8000h))
  4897  1289  3099               	movlb 2	; select bank2
  4898  128A  0142               	movwf	(sprintf@fmt)^0100h
  4899  128B  00B8               	movlw	high(((STR_2)|8000h))
  4900  128C  30A8               	movwf	((sprintf@fmt)^0100h)+1
  4901  128D  00B9               	movlb 4	; select bank4
  4902  128E  0144               	movf	(_g_voltage+3)^0200h,w
  4903  128F  0833               	movlb 2	; select bank2
  4904  1290  0142               	movwf	3+(?_sprintf)^0100h+02h
  4905  1291  00BD               	movlb 4	; select bank4
  4906  1292  0144               	movf	(_g_voltage+2)^0200h,w
  4907  1293  0832               	movlb 2	; select bank2
  4908  1294  0142               	movwf	2+(?_sprintf)^0100h+02h
  4909  1295  00BC               	movlb 4	; select bank4
  4910  1296  0144               	movf	(_g_voltage+1)^0200h,w
  4911  1297  0831               	movlb 2	; select bank2
  4912  1298  0142               	movwf	1+(?_sprintf)^0100h+02h
  4913  1299  00BB               	movlb 4	; select bank4
  4914  129A  0144               	movf	(_g_voltage)^0200h,w
  4915  129B  0830               	movlb 2	; select bank2
  4916  129C  0142               	movwf	0+(?_sprintf)^0100h+02h
  4917  129D  00BA               
  4918                           	movlb 4	; select bank4
  4919  129E  0144               	movf	(_g_power+3)^0200h,w
  4920  129F  082B               	movlb 2	; select bank2
  4921  12A0  0142               	movwf	3+(?_sprintf)^0100h+06h
  4922  12A1  00C1               	movlb 4	; select bank4
  4923  12A2  0144               	movf	(_g_power+2)^0200h,w
  4924  12A3  082A               	movlb 2	; select bank2
  4925  12A4  0142               	movwf	2+(?_sprintf)^0100h+06h
  4926  12A5  00C0               	movlb 4	; select bank4
  4927  12A6  0144               	movf	(_g_power+1)^0200h,w
  4928  12A7  0829               	movlb 2	; select bank2
  4929  12A8  0142               	movwf	1+(?_sprintf)^0100h+06h
  4930  12A9  00BF               	movlb 4	; select bank4
  4931  12AA  0144               	movf	(_g_power)^0200h,w
  4932  12AB  0828               	movlb 2	; select bank2
  4933  12AC  0142               	movwf	0+(?_sprintf)^0100h+06h
  4934  12AD  00BE               
  4935                           	movlw	(low(showMenu@s|((0x1)<<8)))&0ffh
  4936  12AE  30A0               	fcall	_sprintf
  4937  12AF  31A3  2350  3192   	line	230
  4938                           ;main.c: 230:    OLED_print_xy(0, 1, s);
  4939                           	movlb 0	; select bank0
  4940  12B2  0140               	clrf	(OLED_print_xy@row)
  4941  12B3  01A7               	incf	(OLED_print_xy@row),f
  4942  12B4  0AA7               	movlw	low(showMenu@s)
  4943  12B5  30A0               	movwf	(OLED_print_xy@s)
  4944  12B6  00A8               	movlw	high(showMenu@s)
  4945  12B7  3001               	movwf	(OLED_print_xy@s+1)
  4946  12B8  00A9               	movlw	low(0)
  4947  12B9  3000               	fcall	_OLED_print_xy
  4948  12BA  31A4  2445  3192   	line	231
  4949                           	
  4950                           l4867:	
  4951  12BD                     ;main.c: 231:    menuInput(&page, 1, &menu, 1, 0, 0);
  4952                           	movlb 0	; select bank0
  4953  12BD  0140               	clrf	(menuInput@numPages)
  4954  12BE  01A7               	incf	(menuInput@numPages),f
  4955  12BF  0AA7               	movlw	(low(showMenu@menu|((0x1)<<8)))&0ffh
  4956  12C0  30EF               	movlb 2	; select bank2
  4957  12C1  0142               	movwf	(??_showMenu+0)^0100h+0
  4958  12C2  00D5               	movf	(??_showMenu+0)^0100h+0,w
  4959  12C3  0855               	movlb 0	; select bank0
  4960  12C4  0140               	movwf	(menuInput@menu)
  4961  12C5  00A8               	clrf	(menuInput@pbShort)
  4962  12C6  01A9               	incf	(menuInput@pbShort),f
  4963  12C7  0AA9               	clrf	(menuInput@pbLong)
  4964  12C8  01AA               	clrf	(menuInput@timeout)
  4965  12C9  01AB               	movlw	(low(showMenu@page|((0x1)<<8)))&0ffh
  4966  12CA  30EE               	fcall	_menuInput
  4967  12CB  319D  2573  3192   	line	232
  4968                           ;main.c: 232:   } else {
  4969                           	goto	l242
  4970  12CE  2BB5               	
  4971                           l236:	
  4972  12CF                     	line	233
  4973                           	
  4974                           l4869:	
  4975  12CF                     ;main.c: 233:    OLED_print_xy(0, 0, "Temperature Rel.humidityDewpoint    Bat.   Power")
                                 ;
  4976                           	movlb 0	; select bank0
  4977  12CF  0140               	clrf	(OLED_print_xy@row)
  4978  12D0  01A7               	movlw	low(((STR_3)|8000h))
  4979  12D1  304D               	movwf	(OLED_print_xy@s)
  4980  12D2  00A8               	movlw	high(((STR_3)|8000h))
  4981  12D3  30A8               	movwf	((OLED_print_xy@s))+1
  4982  12D4  00A9               	movlw	low(0)
  4983  12D5  3000               	fcall	_OLED_print_xy
  4984  12D6  31A4  2445  3192   	line	234
  4985                           	
  4986                           l4871:	
  4987  12D9                     ;main.c: 234:    if (g_status.NOAUXTEMP)
  4988                           	movlb 3	; select bank3
  4989  12D9  0143               	btfss	(_g_status)^0180h,2
  4990  12DA  1D6D               	goto	u6831
  4991  12DB  2ADD               	goto	u6830
  4992  12DC  2ADE               u6831:
  4993  12DD                     	goto	l4875
  4994  12DD  2AF8               u6830:
  4995  12DE                     	line	235
  4996                           	
  4997                           l4873:	
  4998  12DE                     ;main.c: 235:     sprintf(s12, "%5.1f \337C    ", g_tempC);
  4999                           	movlw	low(((STR_4)|8000h))
  5000  12DE  30B9               	movlb 2	; select bank2
  5001  12DF  0142               	movwf	(sprintf@fmt)^0100h
  5002  12E0  00B8               	movlw	high(((STR_4)|8000h))
  5003  12E1  30A8               	movwf	((sprintf@fmt)^0100h)+1
  5004  12E2  00B9               	movlb 4	; select bank4
  5005  12E3  0144               	movf	(_g_tempC+3)^0200h,w
  5006  12E4  0847               	movlb 2	; select bank2
  5007  12E5  0142               	movwf	3+(?_sprintf)^0100h+02h
  5008  12E6  00BD               	movlb 4	; select bank4
  5009  12E7  0144               	movf	(_g_tempC+2)^0200h,w
  5010  12E8  0846               	movlb 2	; select bank2
  5011  12E9  0142               	movwf	2+(?_sprintf)^0100h+02h
  5012  12EA  00BC               	movlb 4	; select bank4
  5013  12EB  0144               	movf	(_g_tempC+1)^0200h,w
  5014  12EC  0845               	movlb 2	; select bank2
  5015  12ED  0142               	movwf	1+(?_sprintf)^0100h+02h
  5016  12EE  00BB               	movlb 4	; select bank4
  5017  12EF  0144               	movf	(_g_tempC)^0200h,w
  5018  12F0  0844               	movlb 2	; select bank2
  5019  12F1  0142               	movwf	0+(?_sprintf)^0100h+02h
  5020  12F2  00BA               
  5021                           	movlw	(low(showMenu@s12|((0x1)<<8)))&0ffh
  5022  12F3  30DD               	fcall	_sprintf
  5023  12F4  31A3  2350  3192   	goto	l239
  5024  12F7  2B21               	line	236
  5025                           ;main.c: 236:    else
  5026                           	
  5027                           l238:	
  5028  12F8                     	line	237
  5029                           	
  5030                           l4875:	
  5031  12F8                     ;main.c: 237:     sprintf(s12, "%3.0f | %3.0f \337C", g_tempC, g_tempAux);
  5032                           	movlw	low(((STR_5)|8000h))
  5033  12F8  30A8               	movlb 2	; select bank2
  5034  12F9  0142               	movwf	(sprintf@fmt)^0100h
  5035  12FA  00B8               	movlw	high(((STR_5)|8000h))
  5036  12FB  30A8               	movwf	((sprintf@fmt)^0100h)+1
  5037  12FC  00B9               	movlb 4	; select bank4
  5038  12FD  0144               	movf	(_g_tempC+3)^0200h,w
  5039  12FE  0847               	movlb 2	; select bank2
  5040  12FF  0142               	movwf	3+(?_sprintf)^0100h+02h
  5041  1300  00BD               	movlb 4	; select bank4
  5042  1301  0144               	movf	(_g_tempC+2)^0200h,w
  5043  1302  0846               	movlb 2	; select bank2
  5044  1303  0142               	movwf	2+(?_sprintf)^0100h+02h
  5045  1304  00BC               	movlb 4	; select bank4
  5046  1305  0144               	movf	(_g_tempC+1)^0200h,w
  5047  1306  0845               	movlb 2	; select bank2
  5048  1307  0142               	movwf	1+(?_sprintf)^0100h+02h
  5049  1308  00BB               	movlb 4	; select bank4
  5050  1309  0144               	movf	(_g_tempC)^0200h,w
  5051  130A  0844               	movlb 2	; select bank2
  5052  130B  0142               	movwf	0+(?_sprintf)^0100h+02h
  5053  130C  00BA               
  5054                           	movlb 4	; select bank4
  5055  130D  0144               	movf	(_g_tempAux+3)^0200h,w
  5056  130E  0837               	movlb 2	; select bank2
  5057  130F  0142               	movwf	3+(?_sprintf)^0100h+06h
  5058  1310  00C1               	movlb 4	; select bank4
  5059  1311  0144               	movf	(_g_tempAux+2)^0200h,w
  5060  1312  0836               	movlb 2	; select bank2
  5061  1313  0142               	movwf	2+(?_sprintf)^0100h+06h
  5062  1314  00C0               	movlb 4	; select bank4
  5063  1315  0144               	movf	(_g_tempAux+1)^0200h,w
  5064  1316  0835               	movlb 2	; select bank2
  5065  1317  0142               	movwf	1+(?_sprintf)^0100h+06h
  5066  1318  00BF               	movlb 4	; select bank4
  5067  1319  0144               	movf	(_g_tempAux)^0200h,w
  5068  131A  0834               	movlb 2	; select bank2
  5069  131B  0142               	movwf	0+(?_sprintf)^0100h+06h
  5070  131C  00BE               
  5071                           	movlw	(low(showMenu@s12|((0x1)<<8)))&0ffh
  5072  131D  30DD               	fcall	_sprintf
  5073  131E  31A3  2350  3192   	
  5074                           l239:	
  5075  1321                     	line	239
  5076                           ;main.c: 239:    sprintf(s, "%s%5.1f %%     %5.1f \337C    %4.1fV  %4.1fW",
  5077                           	movlw	low(((STR_6)|8000h))
  5078  1321  307E               	movlb 2	; select bank2
  5079  1322  0142               	movwf	(sprintf@fmt)^0100h
  5080  1323  00B8               	movlw	high(((STR_6)|8000h))
  5081  1324  30A8               	movwf	((sprintf@fmt)^0100h)+1
  5082  1325  00B9               	movlw	(low(showMenu@s12|((0x1)<<8)))&0ffh
  5083  1326  30DD               	movwf	(??_showMenu+0)^0100h+0
  5084  1327  00D5               	movf	(??_showMenu+0)^0100h+0,w
  5085  1328  0855               	movwf	(0+low(?_sprintf|((0x1)<<8)+02h))^00h
  5086  1329  00BA               	movlb 4	; select bank4
  5087  132A  0144               	movf	(_g_relHum+3)^0200h,w
  5088  132B  0843               	movlb 2	; select bank2
  5089  132C  0142               	movwf	3+(?_sprintf)^0100h+03h
  5090  132D  00BE               	movlb 4	; select bank4
  5091  132E  0144               	movf	(_g_relHum+2)^0200h,w
  5092  132F  0842               	movlb 2	; select bank2
  5093  1330  0142               	movwf	2+(?_sprintf)^0100h+03h
  5094  1331  00BD               	movlb 4	; select bank4
  5095  1332  0144               	movf	(_g_relHum+1)^0200h,w
  5096  1333  0841               	movlb 2	; select bank2
  5097  1334  0142               	movwf	1+(?_sprintf)^0100h+03h
  5098  1335  00BC               	movlb 4	; select bank4
  5099  1336  0144               	movf	(_g_relHum)^0200h,w
  5100  1337  0840               	movlb 2	; select bank2
  5101  1338  0142               	movwf	0+(?_sprintf)^0100h+03h
  5102  1339  00BB               
  5103                           	movlb 4	; select bank4
  5104  133A  0144               	movf	(_g_dewPointC+3)^0200h,w
  5105  133B  083F               	movlb 2	; select bank2
  5106  133C  0142               	movwf	3+(?_sprintf)^0100h+07h
  5107  133D  00C2               	movlb 4	; select bank4
  5108  133E  0144               	movf	(_g_dewPointC+2)^0200h,w
  5109  133F  083E               	movlb 2	; select bank2
  5110  1340  0142               	movwf	2+(?_sprintf)^0100h+07h
  5111  1341  00C1               	movlb 4	; select bank4
  5112  1342  0144               	movf	(_g_dewPointC+1)^0200h,w
  5113  1343  083D               	movlb 2	; select bank2
  5114  1344  0142               	movwf	1+(?_sprintf)^0100h+07h
  5115  1345  00C0               	movlb 4	; select bank4
  5116  1346  0144               	movf	(_g_dewPointC)^0200h,w
  5117  1347  083C               	movlb 2	; select bank2
  5118  1348  0142               	movwf	0+(?_sprintf)^0100h+07h
  5119  1349  00BF               
  5120                           	movlb 4	; select bank4
  5121  134A  0144               	movf	(_g_voltage+3)^0200h,w
  5122  134B  0833               	movlb 2	; select bank2
  5123  134C  0142               	movwf	3+(?_sprintf)^0100h+0Bh
  5124  134D  00C6               	movlb 4	; select bank4
  5125  134E  0144               	movf	(_g_voltage+2)^0200h,w
  5126  134F  0832               	movlb 2	; select bank2
  5127  1350  0142               	movwf	2+(?_sprintf)^0100h+0Bh
  5128  1351  00C5               	movlb 4	; select bank4
  5129  1352  0144               	movf	(_g_voltage+1)^0200h,w
  5130  1353  0831               	movlb 2	; select bank2
  5131  1354  0142               	movwf	1+(?_sprintf)^0100h+0Bh
  5132  1355  00C4               	movlb 4	; select bank4
  5133  1356  0144               	movf	(_g_voltage)^0200h,w
  5134  1357  0830               	movlb 2	; select bank2
  5135  1358  0142               	movwf	0+(?_sprintf)^0100h+0Bh
  5136  1359  00C3               
  5137                           	movlb 4	; select bank4
  5138  135A  0144               	movf	(_g_power+3)^0200h,w
  5139  135B  082B               	movlb 2	; select bank2
  5140  135C  0142               	movwf	3+(?_sprintf)^0100h+0Fh
  5141  135D  00CA               	movlb 4	; select bank4
  5142  135E  0144               	movf	(_g_power+2)^0200h,w
  5143  135F  082A               	movlb 2	; select bank2
  5144  1360  0142               	movwf	2+(?_sprintf)^0100h+0Fh
  5145  1361  00C9               	movlb 4	; select bank4
  5146  1362  0144               	movf	(_g_power+1)^0200h,w
  5147  1363  0829               	movlb 2	; select bank2
  5148  1364  0142               	movwf	1+(?_sprintf)^0100h+0Fh
  5149  1365  00C8               	movlb 4	; select bank4
  5150  1366  0144               	movf	(_g_power)^0200h,w
  5151  1367  0828               	movlb 2	; select bank2
  5152  1368  0142               	movwf	0+(?_sprintf)^0100h+0Fh
  5153  1369  00C7               
  5154                           	movlw	(low(showMenu@s|((0x1)<<8)))&0ffh
  5155  136A  30A0               	fcall	_sprintf
  5156  136B  31A3  2350  3192   	line	241
  5157                           ;main.c: 241:    OLED_print_xy(0, 1, s);
  5158                           	movlb 0	; select bank0
  5159  136E  0140               	clrf	(OLED_print_xy@row)
  5160  136F  01A7               	incf	(OLED_print_xy@row),f
  5161  1370  0AA7               	movlw	low(showMenu@s)
  5162  1371  30A0               	movwf	(OLED_print_xy@s)
  5163  1372  00A8               	movlw	high(showMenu@s)
  5164  1373  3001               	movwf	(OLED_print_xy@s+1)
  5165  1374  00A9               	movlw	low(0)
  5166  1375  3000               	fcall	_OLED_print_xy
  5167  1376  31A4  2445  3192   	line	242
  5168                           	
  5169                           l4877:	
  5170  1379                     ;main.c: 242:    menuInput(&page, 4, &menu, 1, 0, 0);
  5171                           	movlw	low(04h)
  5172  1379  3004               	movlb 2	; select bank2
  5173  137A  0142               	movwf	(??_showMenu+0)^0100h+0
  5174  137B  00D5               	movf	(??_showMenu+0)^0100h+0,w
  5175  137C  0855               	movlb 0	; select bank0
  5176  137D  0140               	movwf	(menuInput@numPages)
  5177  137E  00A7               	movlw	(low(showMenu@menu|((0x1)<<8)))&0ffh
  5178  137F  30EF               	movlb 2	; select bank2
  5179  1380  0142               	movwf	(??_showMenu+1)^0100h+0
  5180  1381  00D6               	movf	(??_showMenu+1)^0100h+0,w
  5181  1382  0856               	movlb 0	; select bank0
  5182  1383  0140               	movwf	(menuInput@menu)
  5183  1384  00A8               	clrf	(menuInput@pbShort)
  5184  1385  01A9               	incf	(menuInput@pbShort),f
  5185  1386  0AA9               	clrf	(menuInput@pbLong)
  5186  1387  01AA               	clrf	(menuInput@timeout)
  5187  1388  01AB               	movlw	(low(showMenu@page|((0x1)<<8)))&0ffh
  5188  1389  30EE               	fcall	_menuInput
  5189  138A  319D  2573  3192   	goto	l242
  5190  138D  2BB5               	line	243
  5191                           ;main.c: 243:   }
  5192                           	
  5193                           l237:	
  5194  138E                     	line	244
  5195                           ;main.c: 244:  } else if (menu == 1) {
  5196                           	goto	l242
  5197  138E  2BB5               	
  5198                           l235:	
  5199  138F                     	
  5200                           l4879:	
  5201  138F                     	movlb 3	; select bank3
  5202  138F  0143               		decf	((showMenu@menu)^0180h),w
  5203  1390  036F               	btfss	status,2
  5204  1391  1D03               	goto	u6841
  5205  1392  2B94               	goto	u6840
  5206  1393  2B95               u6841:
  5207  1394                     	goto	l242
  5208  1394  2BB5               u6840:
  5209  1395                     	line	246
  5210                           	
  5211                           l4881:	
  5212  1395                     ;main.c: 246:   OLED_print_xy(0, 0, "Ch1: xx inchCh2: xx inchCh3: xx inchCh4: xx inch");
                                 
  5213                           	movlb 0	; select bank0
  5214  1395  0140               	clrf	(OLED_print_xy@row)
  5215  1396  01A7               	movlw	low(((STR_7)|8000h))
  5216  1397  301C               	movwf	(OLED_print_xy@s)
  5217  1398  00A8               	movlw	high(((STR_7)|8000h))
  5218  1399  30A8               	movwf	((OLED_print_xy@s))+1
  5219  139A  00A9               	movlw	low(0)
  5220  139B  3000               	fcall	_OLED_print_xy
  5221  139C  31A4  2445  3192   	line	247
  5222                           	
  5223                           l4883:	
  5224  139F                     ;main.c: 247:   menuInput(&page, 4, &menu, 1, 0, 0);
  5225                           	movlw	low(04h)
  5226  139F  3004               	movlb 2	; select bank2
  5227  13A0  0142               	movwf	(??_showMenu+0)^0100h+0
  5228  13A1  00D5               	movf	(??_showMenu+0)^0100h+0,w
  5229  13A2  0855               	movlb 0	; select bank0
  5230  13A3  0140               	movwf	(menuInput@numPages)
  5231  13A4  00A7               	movlw	(low(showMenu@menu|((0x1)<<8)))&0ffh
  5232  13A5  30EF               	movlb 2	; select bank2
  5233  13A6  0142               	movwf	(??_showMenu+1)^0100h+0
  5234  13A7  00D6               	movf	(??_showMenu+1)^0100h+0,w
  5235  13A8  0856               	movlb 0	; select bank0
  5236  13A9  0140               	movwf	(menuInput@menu)
  5237  13AA  00A8               	clrf	(menuInput@pbShort)
  5238  13AB  01A9               	incf	(menuInput@pbShort),f
  5239  13AC  0AA9               	clrf	(menuInput@pbLong)
  5240  13AD  01AA               	clrf	(menuInput@timeout)
  5241  13AE  01AB               	movlw	(low(showMenu@page|((0x1)<<8)))&0ffh
  5242  13AF  30EE               	fcall	_menuInput
  5243  13B0  319D  2573  3192   	goto	l242
  5244  13B3  2BB5               	line	248
  5245                           ;main.c: 248:  }
  5246                           	
  5247                           l241:	
  5248  13B4                     	goto	l242
  5249  13B4  2BB5               	
  5250                           l240:	
  5251  13B5                     	line	249
  5252                           	
  5253                           l242:	
  5254  13B5                     	return
  5255  13B5  0008               	opt stack 0
  5256                           GLOBAL	__end_of_showMenu
  5257                           	__end_of_showMenu:
  5258  13B6                     	signat	_showMenu,89
  5259                           	global	_sprintf
  5260                           
  5261 ;; *************** function _sprintf *****************
  5262 ;; Defined at:
  5263 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  5264 ;; Parameters:    Size  Location     Type
  5265 ;;  s               1    wreg     PTR unsigned char 
  5266 ;;		 -> showMenu@s12(12), showMenu@s(61), 
  5267 ;;  fmt             2   24[BANK2 ] PTR const unsigned char 
  5268 ;;		 -> STR_6(42), STR_5(17), STR_4(13), STR_2(15), 
  5269 ;; Auto vars:     Size  Location     Type
  5270 ;;  s               1   46[BANK2 ] PTR unsigned char 
  5271 ;;		 -> showMenu@s12(12), showMenu@s(61), 
  5272 ;;  f               5   48[BANK2 ] struct _IO_FILE
  5273 ;;  ret             2   44[BANK2 ] int 
  5274 ;;  ap              1   47[BANK2 ] PTR void [1]
  5275 ;;		 -> ?_sprintf(2), 
  5276 ;; Return value:  Size  Location     Type
  5277 ;;                  2   24[BANK2 ] int 
  5278 ;; Registers used:
  5279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5280 ;; Tracked objects:
  5281 ;;		On entry : 0/0
  5282 ;;		On exit  : 0/0
  5283 ;;		Unchanged: 0/0
  5284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5285 ;;      Params:         0       0       0      19       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5286 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5287 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5288 ;;      Totals:         0       0       0      29       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5289 ;;Total ram usage:       29 bytes
  5290 ;; Hardware stack levels used:    1
  5291 ;; Hardware stack levels required when called:   10
  5292 ;; This function calls:
  5293 ;;		_vfprintf
  5294 ;; This function is called by:
  5295 ;;		_showMenu
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298                           psect	text5,local,class=CODE,delta=2,merge=1,group=2
  5299                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  5300                           	line	9
  5301                           global __ptext5
  5302                           __ptext5:	;psect for function _sprintf
  5303  2350                     psect	text5
  5304                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  5305                           	line	9
  5306                           	global	__size_of_sprintf
  5307                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  5308  0029                     	
  5309                           _sprintf:	
  5310  2350                     ;incstack = 0
  5311                           	opt	stack 4
  5312                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5313                           ;sprintf@s stored from wreg
  5314                           	movlb 2	; select bank2
  5315  2350  0142               	movwf	(sprintf@s)^0100h
  5316  2351  00CE               	line	15
  5317                           	
  5318                           l4597:	
  5319  2352                     	movlw	(low(?_sprintf|((0x1)<<8)+02h))&0ffh
  5320  2352  303A               	movwf	(??_sprintf+0)^0100h+0
  5321  2353  00CB               	movf	(??_sprintf+0)^0100h+0,w
  5322  2354  084B               	movwf	(sprintf@ap)^0100h
  5323  2355  00CF               	line	16
  5324                           	movf	(sprintf@s)^0100h,w
  5325  2356  084E               	movwf	(??_sprintf+0)^0100h+0
  5326  2357  00CB               	movf	(??_sprintf+0)^0100h+0,w
  5327  2358  084B               	movwf	(sprintf@f)^0100h
  5328  2359  00D0               	line	17
  5329                           	
  5330                           l4599:	
  5331  235A                     	clrf	0+(sprintf@f)^0100h+01h
  5332  235A  01D1               	clrf	1+(sprintf@f)^0100h+01h
  5333  235B  01D2               	line	18
  5334                           	
  5335                           l4601:	
  5336  235C                     	clrf	0+(sprintf@f)^0100h+03h
  5337  235C  01D3               	clrf	1+(sprintf@f)^0100h+03h
  5338  235D  01D4               	line	19
  5339                           	
  5340                           l4603:	
  5341  235E                     	movf	(sprintf@fmt+1)^0100h,w
  5342  235E  0839               	movwf	(vfprintf@fmt+1)^0100h
  5343  235F  00B1               	movf	(sprintf@fmt)^0100h,w
  5344  2360  0838               	movwf	(vfprintf@fmt)^0100h
  5345  2361  00B0               	movlw	(low(sprintf@ap|((0x1)<<8)))&0ffh
  5346  2362  304F               	movwf	(??_sprintf+0)^0100h+0
  5347  2363  00CB               	movf	(??_sprintf+0)^0100h+0,w
  5348  2364  084B               	movwf	(vfprintf@ap)^0100h
  5349  2365  00B2               	movlw	(low(sprintf@f|((0x1)<<8)))&0ffh
  5350  2366  3050               	fcall	_vfprintf
  5351  2367  3187  27C5  31A3   	movlb 2	; select bank2
  5352  236A  0142               	movf	(1+(?_vfprintf))^0100h,w
  5353  236B  0831               	movwf	(sprintf@ret+1)^0100h
  5354  236C  00CD               	movf	(0+(?_vfprintf))^0100h,w
  5355  236D  0830               	movwf	(sprintf@ret)^0100h
  5356  236E  00CC               	line	20
  5357                           	
  5358                           l4605:	
  5359  236F                     	movf	0+(sprintf@f)^0100h+01h,w
  5360  236F  0851               	addwf	(sprintf@s)^0100h,w
  5361  2370  074E               	movwf	(??_sprintf+0)^0100h+0
  5362  2371  00CB               	movf	0+(??_sprintf+0)^0100h+0,w
  5363  2372  084B               	movwf	fsr1l
  5364  2373  0086               	movlw 1	; select bank2/3
  5365  2374  3001               	movwf fsr1h	
  5366  2375  0087               	
  5367                           	clrf	indf1
  5368  2376  0181               	goto	l1118
  5369  2377  2B78               	line	22
  5370                           	
  5371                           l4607:	
  5372  2378                     	line	23
  5373                           ;	Return value of _sprintf is never used
  5374                           	
  5375                           l1118:	
  5376  2378                     	return
  5377  2378  0008               	opt stack 0
  5378                           GLOBAL	__end_of_sprintf
  5379                           	__end_of_sprintf:
  5380  2379                     	signat	_sprintf,4698
  5381                           	global	_vfprintf
  5382                           
  5383 ;; *************** function _vfprintf *****************
  5384 ;; Defined at:
  5385 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;  fp              1    wreg     PTR struct _IO_FILE
  5388 ;;		 -> sprintf@f(5), 
  5389 ;;  fmt             2   16[BANK2 ] PTR const unsigned char 
  5390 ;;		 -> STR_6(42), STR_5(17), STR_4(13), STR_2(15), 
  5391 ;;  ap              1   18[BANK2 ] PTR PTR void 
  5392 ;;		 -> sprintf@ap(1), 
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;  fp              1   21[BANK2 ] PTR struct _IO_FILE
  5395 ;;		 -> sprintf@f(5), 
  5396 ;;  cfmt            2   22[BANK2 ] PTR unsigned char 
  5397 ;;		 -> STR_6(42), STR_5(17), STR_4(13), STR_2(15), 
  5398 ;; Return value:  Size  Location     Type
  5399 ;;                  2   16[BANK2 ] int 
  5400 ;; Registers used:
  5401 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5402 ;; Tracked objects:
  5403 ;;		On entry : 0/0
  5404 ;;		On exit  : 0/0
  5405 ;;		Unchanged: 0/0
  5406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5407 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5408 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5409 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5410 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5411 ;;Total ram usage:        8 bytes
  5412 ;; Hardware stack levels used:    1
  5413 ;; Hardware stack levels required when called:    9
  5414 ;; This function calls:
  5415 ;;		_vfpfcnvrt
  5416 ;; This function is called by:
  5417 ;;		_sprintf
  5418 ;; This function uses a non-reentrant model
  5419 ;;
  5420                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  5421                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  5422                           	line	1368
  5423                           global __ptext6
  5424                           __ptext6:	;psect for function _vfprintf
  5425  07C5                     psect	text6
  5426                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  5427                           	line	1368
  5428                           	global	__size_of_vfprintf
  5429                           	__size_of_vfprintf	equ	__end_of_vfprintf-_vfprintf
  5430  0039                     	
  5431                           _vfprintf:	
  5432  07C5                     ;incstack = 0
  5433                           	opt	stack 4
  5434                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5435                           ;vfprintf@fp stored from wreg
  5436                           	movlb 2	; select bank2
  5437  07C5  0142               	movwf	(vfprintf@fp)^0100h
  5438  07C6  00B5               	line	1373
  5439                           	
  5440                           l4541:	
  5441  07C7                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1368: int v
                                 fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
                                 0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pi
                                 c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
                                 8\v2.00\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5442                           	movf	(vfprintf@fmt+1)^0100h,w
  5443  07C7  0831               	movwf	(vfprintf@cfmt+1)^0100h
  5444  07C8  00B7               	movf	(vfprintf@fmt)^0100h,w
  5445  07C9  0830               	movwf	(vfprintf@cfmt)^0100h
  5446  07CA  00B6               	line	1374
  5447                           	
  5448                           l4543:	
  5449  07CB                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1374:     n
                                 out = 0;
  5450                           	movlb 4	; select bank4
  5451  07CB  0144               	clrf	(_nout)^0200h
  5452  07CC  01C8               	clrf	(_nout+1)^0200h
  5453  07CD  01C9               	line	1375
  5454                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
                                 hile (*cfmt) {
  5455                           	goto	l4547
  5456  07CE  2FE9               	
  5457                           l579:	
  5458  07CF                     	line	1376
  5459                           	
  5460                           l4545:	
  5461  07CF                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1376:      
                                    nout += vfpfcnvrt(fp, &cfmt, ap);
  5462                           	movlw	(low(vfprintf@cfmt|((0x1)<<8)))&0ffh
  5463  07CF  3036               	movlb 2	; select bank2
  5464  07D0  0142               	movwf	(??_vfprintf+0)^0100h+0
  5465  07D1  00B3               	movf	(??_vfprintf+0)^0100h+0,w
  5466  07D2  0833               	movlb 1	; select bank1
  5467  07D3  0141               	movwf	(vfpfcnvrt@fmt)^080h
  5468  07D4  00E8               	movlb 2	; select bank2
  5469  07D5  0142               	movf	(vfprintf@ap)^0100h,w
  5470  07D6  0832               	movwf	(??_vfprintf+1)^0100h+0
  5471  07D7  00B4               	movf	(??_vfprintf+1)^0100h+0,w
  5472  07D8  0834               	movlb 1	; select bank1
  5473  07D9  0141               	movwf	(vfpfcnvrt@ap)^080h
  5474  07DA  00E9               	movlb 2	; select bank2
  5475  07DB  0142               	movf	(vfprintf@fp)^0100h,w
  5476  07DC  0835               	fcall	_vfpfcnvrt
  5477  07DD  318C  2423  3187   	movlb 1	; select bank1
  5478  07E0  0141               	movf	(0+(?_vfpfcnvrt))^080h,w
  5479  07E1  0868               	movlb 4	; select bank4
  5480  07E2  0144               	addwf	(_nout)^0200h,f
  5481  07E3  07C8               	movlb 1	; select bank1
  5482  07E4  0141               	movf	(1+(?_vfpfcnvrt))^080h,w
  5483  07E5  0869               	movlb 4	; select bank4
  5484  07E6  0144               	addwfc	(_nout+1)^0200h,f
  5485  07E7  3DC9               	goto	l4547
  5486  07E8  2FE9               	line	1377
  5487                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1377:     }
                                 
  5488                           	
  5489                           l578:	
  5490  07E9                     	line	1375
  5491                           	
  5492                           l4547:	
  5493  07E9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
                                 hile (*cfmt) {
  5494                           	movlb 2	; select bank2
  5495  07E9  0142               	movf	(vfprintf@cfmt)^0100h,w
  5496  07EA  0836               	movwf	fsr0l
  5497  07EB  0084               	movf	((vfprintf@cfmt+1)^0100h),w
  5498  07EC  0837               	movwf	fsr0h
  5499  07ED  0085               	moviw	fsr0++
  5500  07EE  0012               	btfss	status,2
  5501  07EF  1D03               	goto	u6401
  5502  07F0  2FF2               	goto	u6400
  5503  07F1  2FF3               u6401:
  5504  07F2                     	goto	l4545
  5505  07F2  2FCF               u6400:
  5506  07F3                     	goto	l4549
  5507  07F3  2FF4               	
  5508                           l580:	
  5509  07F4                     	line	1378
  5510                           	
  5511                           l4549:	
  5512  07F4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1378:     r
                                 eturn nout;
  5513                           	movlb 4	; select bank4
  5514  07F4  0144               	movf	(_nout+1)^0200h,w
  5515  07F5  0849               	movlb 2	; select bank2
  5516  07F6  0142               	movwf	(?_vfprintf+1)^0100h
  5517  07F7  00B1               	movlb 4	; select bank4
  5518  07F8  0144               	movf	(_nout)^0200h,w
  5519  07F9  0848               	movlb 2	; select bank2
  5520  07FA  0142               	movwf	(?_vfprintf)^0100h
  5521  07FB  00B0               	goto	l581
  5522  07FC  2FFD               	
  5523                           l4551:	
  5524  07FD                     	line	1382
  5525                           	
  5526                           l581:	
  5527  07FD                     	return
  5528  07FD  0008               	opt stack 0
  5529                           GLOBAL	__end_of_vfprintf
  5530                           	__end_of_vfprintf:
  5531  07FE                     	signat	_vfprintf,12410
  5532                           	global	_vfpfcnvrt
  5533                           
  5534 ;; *************** function _vfpfcnvrt *****************
  5535 ;; Defined at:
  5536 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  5537 ;; Parameters:    Size  Location     Type
  5538 ;;  fp              1    wreg     PTR struct _IO_FILE
  5539 ;;		 -> sprintf@f(5), 
  5540 ;;  fmt             1   72[BANK1 ] PTR PTR unsigned char 
  5541 ;;		 -> vfprintf@cfmt(2), 
  5542 ;;  ap              1   73[BANK1 ] PTR PTR void 
  5543 ;;		 -> sprintf@ap(1), 
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;  fp              1   15[BANK2 ] PTR struct _IO_FILE
  5546 ;;		 -> sprintf@f(5), 
  5547 ;;  f               4    7[BANK2 ] PTR struct _IO_FILE
  5548 ;;  llu             4    0        unsigned long 
  5549 ;;  ll              4    0        long 
  5550 ;;  ct              3   11[BANK2 ] unsigned char [3]
  5551 ;;  vp              2    0        PTR void 
  5552 ;;  i               2    0        int 
  5553 ;;  done            2    0        int 
  5554 ;;  c               1   14[BANK2 ] unsigned char 
  5555 ;;  cp              1    6[BANK2 ] PTR unsigned char 
  5556 ;;		 -> ?_sprintf(2), showMenu@s12(12), 
  5557 ;; Return value:  Size  Location     Type
  5558 ;;                  2   72[BANK1 ] int 
  5559 ;; Registers used:
  5560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5566 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5567 ;;      Locals:         0       0       0      16       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5568 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5569 ;;      Totals:         0       0       8      16       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5570 ;;Total ram usage:       24 bytes
  5571 ;; Hardware stack levels used:    1
  5572 ;; Hardware stack levels required when called:    8
  5573 ;; This function calls:
  5574 ;;		_atoi
  5575 ;;		_efgtoa
  5576 ;;		_fputc
  5577 ;;		_isdigit
  5578 ;;		_isupper
  5579 ;;		_stoa
  5580 ;;		_strncmp
  5581 ;;		_tolower
  5582 ;; This function is called by:
  5583 ;;		_vfprintf
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  5587                           	line	670
  5588                           global __ptext7
  5589                           __ptext7:	;psect for function _vfpfcnvrt
  5590  0C23                     psect	text7
  5591                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  5592                           	line	670
  5593                           	global	__size_of_vfpfcnvrt
  5594                           	__size_of_vfpfcnvrt	equ	__end_of_vfpfcnvrt-_vfpfcnvrt
  5595  03DD                     	
  5596                           _vfpfcnvrt:	
  5597  0C23                     ;incstack = 0
  5598                           	opt	stack 4
  5599                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5600                           ;vfpfcnvrt@fp stored from wreg
  5601                           	movlb 2	; select bank2
  5602  0C23  0142               	movwf	(vfpfcnvrt@fp)^0100h
  5603  0C24  00AF               	line	680
  5604                           	
  5605                           l4391:	
  5606  0C25                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 670: static
                                  int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
                                 2.00\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.00\
                                 pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
                                 rochip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
                                  (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5607                           	movlb 1	; select bank1
  5608  0C25  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5609  0C26  0868               	movwf	fsr1l
  5610  0C27  0086               	movlw 1	; select bank2/3
  5611  0C28  3001               	movwf fsr1h	
  5612  0C29  0087               	
  5613                           	moviw	[0]fsr1
  5614  0C2A  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5615  0C2B  00EA               	moviw	[1]fsr1
  5616  0C2C  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5617  0C2D  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5618  0C2E  086A               	movwf	fsr0l
  5619  0C2F  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5620  0C30  086B               	movwf	fsr0h
  5621  0C31  0085               	moviw	fsr0++
  5622  0C32  0012               xorlw	37
  5623  0C33  3A25               	btfss	status,2
  5624  0C34  1D03               	goto	u6201
  5625  0C35  2C37               	goto	u6200
  5626  0C36  2C38               u6201:
  5627  0C37                     	goto	l4509
  5628  0C37  2FD0               u6200:
  5629  0C38                     	line	681
  5630                           	
  5631                           l4393:	
  5632  0C38                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 681:       
                                   ++*fmt;
  5633                           	movf	(vfpfcnvrt@fmt)^080h,w
  5634  0C38  0868               	movwf	fsr1l
  5635  0C39  0086               	movlw 1	; select bank2/3
  5636  0C3A  3001               	movwf fsr1h	
  5637  0C3B  0087               	
  5638                           	movlw	01h
  5639  0C3C  3001               	addwf	indf1,f
  5640  0C3D  0781               	addfsr	fsr1,1
  5641  0C3E  3141               	skipnc
  5642  0C3F  1803               	incf	indf1,f
  5643  0C40  0A81               	line	683
  5644                           	
  5645                           l4395:	
  5646  0C41                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 683:       
                                   flags = width = 0;
  5647                           	movlb 2	; select bank2
  5648  0C41  0142               	clrf	(_width)^0100h
  5649  0C42  01E4               	clrf	(_width+1)^0100h
  5650  0C43  01E5               	clrf	(_flags)^0100h
  5651  0C44  01E8               	clrf	(_flags+1)^0100h
  5652  0C45  01E9               	line	684
  5653                           	
  5654                           l4397:	
  5655  0C46                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 684:       
                                   prec = -1;
  5656                           	movlw	0FFh
  5657  0C46  30FF               	movwf	(_prec)^0100h
  5658  0C47  00E6               	movlw	0FFh
  5659  0C48  30FF               	movwf	((_prec)^0100h)+1
  5660  0C49  00E7               	line	723
  5661                           	
  5662                           l4399:	
  5663  0C4A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 723:       
                                   if ((*fmt)[0] == '*') {
  5664                           	movlb 1	; select bank1
  5665  0C4A  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5666  0C4B  0868               	movwf	fsr1l
  5667  0C4C  0086               	movlw 1	; select bank2/3
  5668  0C4D  3001               	movwf fsr1h	
  5669  0C4E  0087               	
  5670                           	moviw	[0]fsr1
  5671  0C4F  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5672  0C50  00EA               	moviw	[1]fsr1
  5673  0C51  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5674  0C52  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5675  0C53  086A               	movwf	fsr0l
  5676  0C54  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5677  0C55  086B               	movwf	fsr0h
  5678  0C56  0085               	moviw	fsr0++
  5679  0C57  0012               xorlw	42
  5680  0C58  3A2A               	btfss	status,2
  5681  0C59  1D03               	goto	u6211
  5682  0C5A  2C5C               	goto	u6210
  5683  0C5B  2C5D               u6211:
  5684  0C5C                     	goto	l4411
  5685  0C5C  2C81               u6210:
  5686  0C5D                     	line	724
  5687                           	
  5688                           l4401:	
  5689  0C5D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 724:       
                                       ++*fmt;
  5690                           	movf	(vfpfcnvrt@fmt)^080h,w
  5691  0C5D  0868               	movwf	fsr1l
  5692  0C5E  0086               	movlw 1	; select bank2/3
  5693  0C5F  3001               	movwf fsr1h	
  5694  0C60  0087               	
  5695                           	movlw	01h
  5696  0C61  3001               	addwf	indf1,f
  5697  0C62  0781               	addfsr	fsr1,1
  5698  0C63  3141               	skipnc
  5699  0C64  1803               	incf	indf1,f
  5700  0C65  0A81               	line	725
  5701                           	
  5702                           l4403:	
  5703  0C66                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 725:       
                                       width = (*(int *)__va_arg(*(int **)ap, (int)0));
  5704                           	movf	(vfpfcnvrt@ap)^080h,w
  5705  0C66  0869               	movwf	fsr1l
  5706  0C67  0086               	movlw 1	; select bank2/3
  5707  0C68  3001               	movwf fsr1h	
  5708  0C69  0087               	
  5709                           	movf	indf1,w
  5710  0C6A  0801               	movwf	fsr0l
  5711  0C6B  0084               	movlw 1	; select bank2/3
  5712  0C6C  3001               	movwf fsr0h	
  5713  0C6D  0085               	
  5714                           	movlw	02h
  5715  0C6E  3002               	addwf	indf1,f
  5716  0C6F  0781               	moviw	[0]fsr0
  5717  0C70  3F00               	movlb 2	; select bank2
  5718  0C71  0142               	movwf	(_width)^0100h
  5719  0C72  00E4               	moviw	[1]fsr0
  5720  0C73  3F01               	movwf	(_width+1)^0100h
  5721  0C74  00E5               	line	726
  5722                           	
  5723                           l4405:	
  5724  0C75                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 726:       
                                       if (width < 0) {
  5725                           	btfss	(_width+1)^0100h,7
  5726  0C75  1FE5               	goto	u6221
  5727  0C76  2C78               	goto	u6220
  5728  0C77  2C79               u6221:
  5729  0C78                     	goto	l4421
  5730  0C78  2CF6               u6220:
  5731  0C79                     	line	727
  5732                           	
  5733                           l4407:	
  5734  0C79                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 727:       
                                           flags |= (1 << 0);
  5735                           	bsf	(_flags)^0100h+(0/8),(0)&7
  5736  0C79  1468               	line	728
  5737                           	
  5738                           l4409:	
  5739  0C7A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 728:       
                                           width = -width;
  5740                           	comf	(_width)^0100h,f
  5741  0C7A  09E4               	comf	(_width+1)^0100h,f
  5742  0C7B  09E5               	incf	(_width)^0100h,f
  5743  0C7C  0AE4               	skipnz
  5744  0C7D  1903               	incf	(_width+1)^0100h,f
  5745  0C7E  0AE5               	goto	l4421
  5746  0C7F  2CF6               	line	729
  5747                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 729:       
                                       }
  5748                           	
  5749                           l544:	
  5750  0C80                     	line	730
  5751                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 730:       
                                   } else {
  5752                           	goto	l4421
  5753  0C80  2CF6               	
  5754                           l543:	
  5755  0C81                     	line	731
  5756                           	
  5757                           l4411:	
  5758  0C81                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 731:       
                                       width = atoi(*fmt);
  5759                           	movlb 1	; select bank1
  5760  0C81  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5761  0C82  0868               	movwf	fsr1l
  5762  0C83  0086               	movlw 1	; select bank2/3
  5763  0C84  3001               	movwf fsr1h	
  5764  0C85  0087               	
  5765                           	moviw	[0]fsr1
  5766  0C86  3F40               	movlb 0	; select bank0
  5767  0C87  0140               	movwf	(atoi@s)
  5768  0C88  00A6               	moviw	[1]fsr1
  5769  0C89  3F41               	movwf	(atoi@s+1)
  5770  0C8A  00A7               	fcall	_atoi
  5771  0C8B  319F  2719  318C   	movlb 0	; select bank0
  5772  0C8E  0140               	movf	(1+(?_atoi)),w
  5773  0C8F  0827               	movlb 2	; select bank2
  5774  0C90  0142               	movwf	(_width+1)^0100h
  5775  0C91  00E5               	movlb 0	; select bank0
  5776  0C92  0140               	movf	(0+(?_atoi)),w
  5777  0C93  0826               	movlb 2	; select bank2
  5778  0C94  0142               	movwf	(_width)^0100h
  5779  0C95  00E4               	line	732
  5780                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 732:       
                                       while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5781                           	goto	l4415
  5782  0C96  2CA2               	
  5783                           l547:	
  5784  0C97                     	line	733
  5785                           	
  5786                           l4413:	
  5787  0C97                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 733:       
                                           ++*fmt;
  5788                           	movlb 1	; select bank1
  5789  0C97  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5790  0C98  0868               	movwf	fsr1l
  5791  0C99  0086               	movlw 1	; select bank2/3
  5792  0C9A  3001               	movwf fsr1h	
  5793  0C9B  0087               	
  5794                           	movlw	01h
  5795  0C9C  3001               	addwf	indf1,f
  5796  0C9D  0781               	addfsr	fsr1,1
  5797  0C9E  3141               	skipnc
  5798  0C9F  1803               	incf	indf1,f
  5799  0CA0  0A81               	goto	l4415
  5800  0CA1  2CA2               	line	734
  5801                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 732:       
                                       while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5802                           	
  5803                           l546:	
  5804  0CA2                     	line	732
  5805                           	
  5806                           l4415:	
  5807  0CA2                     	movlb 1	; select bank1
  5808  0CA2  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5809  0CA3  0868               	movwf	fsr1l
  5810  0CA4  0086               	movlw 1	; select bank2/3
  5811  0CA5  3001               	movwf fsr1h	
  5812  0CA6  0087               	
  5813                           	moviw	[0]fsr1
  5814  0CA7  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5815  0CA8  00EA               	moviw	[1]fsr1
  5816  0CA9  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5817  0CAA  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5818  0CAB  086A               	movwf	fsr0l
  5819  0CAC  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5820  0CAD  086B               	movwf	fsr0h
  5821  0CAE  0085               	movf	indf0,w ;code access
  5822  0CAF  0800               	addlw	low(0FFD0h)
  5823  0CB0  3ED0               	movwf	(??_vfpfcnvrt+2)^080h+0
  5824  0CB1  00EC               	movlw	high(0FFD0h)
  5825  0CB2  30FF               	skipnc
  5826  0CB3  1803               	movlw	(high(0FFD0h)+1)&0ffh
  5827  0CB4  3000               	movwf	((??_vfpfcnvrt+2)^080h+0)+1
  5828  0CB5  00ED               	movlw	0
  5829  0CB6  3000               	subwf	1+(??_vfpfcnvrt+2)^080h+0,w
  5830  0CB7  026D               	movlw	0Ah
  5831  0CB8  300A               	skipnz
  5832  0CB9  1903               	subwf	0+(??_vfpfcnvrt+2)^080h+0,w
  5833  0CBA  026C               	skipc
  5834  0CBB  1C03               	goto	u6231
  5835  0CBC  2CBE               	goto	u6230
  5836  0CBD  2CC0               u6231:
  5837  0CBE                     	movlw	1
  5838  0CBE  3001               	goto	u6240
  5839  0CBF  2CC1               u6230:
  5840  0CC0                     	movlw	0
  5841  0CC0  3000               u6240:
  5842  0CC1                     	movwf	(??_vfpfcnvrt+4)^080h+0
  5843  0CC1  00EE               	clrf	(??_vfpfcnvrt+4)^080h+0+1
  5844  0CC2  01EF               	movf	0+(??_vfpfcnvrt+4)^080h+0,w
  5845  0CC3  086E               	movlb 2	; select bank2
  5846  0CC4  0142               	movwf	(_vfpfcnvrt$944)^0100h
  5847  0CC5  00A0               	movlb 1	; select bank1
  5848  0CC6  0141               	movf	1+(??_vfpfcnvrt+4)^080h+0,w
  5849  0CC7  086F               	movlb 2	; select bank2
  5850  0CC8  0142               	movwf	(_vfpfcnvrt$944+1)^0100h
  5851  0CC9  00A1               	goto	l4419
  5852  0CCA  2CEE               	
  5853                           l549:	
  5854  0CCB                     	
  5855                           l4417:	
  5856  0CCB                     	movlb 1	; select bank1
  5857  0CCB  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5858  0CCC  0868               	movwf	fsr1l
  5859  0CCD  0086               	movlw 1	; select bank2/3
  5860  0CCE  3001               	movwf fsr1h	
  5861  0CCF  0087               	
  5862                           	moviw	[0]fsr1
  5863  0CD0  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5864  0CD1  00EA               	moviw	[1]fsr1
  5865  0CD2  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5866  0CD3  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5867  0CD4  086A               	movwf	fsr0l
  5868  0CD5  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5869  0CD6  086B               	movwf	fsr0h
  5870  0CD7  0085               	movf	indf0,w ;code access
  5871  0CD8  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  5872  0CD9  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  5873  0CDA  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  5874  0CDB  086C               	movlb 0	; select bank0
  5875  0CDC  0140               	movwf	(isdigit@c)
  5876  0CDD  00A0               	movlb 1	; select bank1
  5877  0CDE  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  5878  0CDF  086D               	movlb 0	; select bank0
  5879  0CE0  0140               	movwf	(isdigit@c+1)
  5880  0CE1  00A1               	fcall	_isdigit
  5881  0CE2  31A1  21D9  318C   	movlb 0	; select bank0
  5882  0CE5  0140               	movf	(1+(?_isdigit)),w
  5883  0CE6  0821               	movlb 2	; select bank2
  5884  0CE7  0142               	movwf	(_vfpfcnvrt$944+1)^0100h
  5885  0CE8  00A1               	movlb 0	; select bank0
  5886  0CE9  0140               	movf	(0+(?_isdigit)),w
  5887  0CEA  0820               	movlb 2	; select bank2
  5888  0CEB  0142               	movwf	(_vfpfcnvrt$944)^0100h
  5889  0CEC  00A0               	goto	l4419
  5890  0CED  2CEE               	
  5891                           l551:	
  5892  0CEE                     	
  5893                           l4419:	
  5894  0CEE                     	movf	((_vfpfcnvrt$944)^0100h),w
  5895  0CEE  0820               iorwf	((_vfpfcnvrt$944+1)^0100h),w
  5896  0CEF  0421               	btfss	status,2
  5897  0CF0  1D03               	goto	u6251
  5898  0CF1  2CF3               	goto	u6250
  5899  0CF2  2CF4               u6251:
  5900  0CF3                     	goto	l4413
  5901  0CF3  2C97               u6250:
  5902  0CF4                     	goto	l4421
  5903  0CF4  2CF6               	
  5904                           l552:	
  5905  0CF5                     	goto	l4421
  5906  0CF5  2CF6               	line	735
  5907                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 735:       
                                   }
  5908                           	
  5909                           l545:	
  5910  0CF6                     	line	740
  5911                           	
  5912                           l4421:	
  5913  0CF6                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 740:       
                                   if ((*fmt)[0] == '.') {
  5914                           	movlb 1	; select bank1
  5915  0CF6  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5916  0CF7  0868               	movwf	fsr1l
  5917  0CF8  0086               	movlw 1	; select bank2/3
  5918  0CF9  3001               	movwf fsr1h	
  5919  0CFA  0087               	
  5920                           	moviw	[0]fsr1
  5921  0CFB  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5922  0CFC  00EA               	moviw	[1]fsr1
  5923  0CFD  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5924  0CFE  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5925  0CFF  086A               	movwf	fsr0l
  5926  0D00  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5927  0D01  086B               	movwf	fsr0h
  5928  0D02  0085               	moviw	fsr0++
  5929  0D03  0012               xorlw	46
  5930  0D04  3A2E               	btfss	status,2
  5931  0D05  1D03               	goto	u6261
  5932  0D06  2D08               	goto	u6260
  5933  0D07  2D09               u6261:
  5934  0D08                     	goto	l4443
  5935  0D08  2DB7               u6260:
  5936  0D09                     	line	741
  5937                           	
  5938                           l4423:	
  5939  0D09                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 741:       
                                       prec = 0;
  5940                           	movlb 2	; select bank2
  5941  0D09  0142               	clrf	(_prec)^0100h
  5942  0D0A  01E6               	clrf	(_prec+1)^0100h
  5943  0D0B  01E7               	line	742
  5944                           	
  5945                           l4425:	
  5946  0D0C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 742:       
                                       ++*fmt;
  5947                           	movlb 1	; select bank1
  5948  0D0C  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5949  0D0D  0868               	movwf	fsr1l
  5950  0D0E  0086               	movlw 1	; select bank2/3
  5951  0D0F  3001               	movwf fsr1h	
  5952  0D10  0087               	
  5953                           	movlw	01h
  5954  0D11  3001               	addwf	indf1,f
  5955  0D12  0781               	addfsr	fsr1,1
  5956  0D13  3141               	skipnc
  5957  0D14  1803               	incf	indf1,f
  5958  0D15  0A81               	line	743
  5959                           	
  5960                           l4427:	
  5961  0D16                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 743:       
                                       if ((*fmt)[0] == '*') {
  5962                           	movf	(vfpfcnvrt@fmt)^080h,w
  5963  0D16  0868               	movwf	fsr1l
  5964  0D17  0086               	movlw 1	; select bank2/3
  5965  0D18  3001               	movwf fsr1h	
  5966  0D19  0087               	
  5967                           	moviw	[0]fsr1
  5968  0D1A  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5969  0D1B  00EA               	moviw	[1]fsr1
  5970  0D1C  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5971  0D1D  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5972  0D1E  086A               	movwf	fsr0l
  5973  0D1F  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5974  0D20  086B               	movwf	fsr0h
  5975  0D21  0085               	moviw	fsr0++
  5976  0D22  0012               xorlw	42
  5977  0D23  3A2A               	btfss	status,2
  5978  0D24  1D03               	goto	u6271
  5979  0D25  2D27               	goto	u6270
  5980  0D26  2D28               u6271:
  5981  0D27                     	goto	l4433
  5982  0D27  2D41               u6270:
  5983  0D28                     	line	744
  5984                           	
  5985                           l4429:	
  5986  0D28                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 744:       
                                           ++*fmt;
  5987                           	movf	(vfpfcnvrt@fmt)^080h,w
  5988  0D28  0868               	movwf	fsr1l
  5989  0D29  0086               	movlw 1	; select bank2/3
  5990  0D2A  3001               	movwf fsr1h	
  5991  0D2B  0087               	
  5992                           	movlw	01h
  5993  0D2C  3001               	addwf	indf1,f
  5994  0D2D  0781               	addfsr	fsr1,1
  5995  0D2E  3141               	skipnc
  5996  0D2F  1803               	incf	indf1,f
  5997  0D30  0A81               	line	745
  5998                           	
  5999                           l4431:	
  6000  0D31                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 745:       
                                           prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6001                           	movf	(vfpfcnvrt@ap)^080h,w
  6002  0D31  0869               	movwf	fsr1l
  6003  0D32  0086               	movlw 1	; select bank2/3
  6004  0D33  3001               	movwf fsr1h	
  6005  0D34  0087               	
  6006                           	movf	indf1,w
  6007  0D35  0801               	movwf	fsr0l
  6008  0D36  0084               	movlw 1	; select bank2/3
  6009  0D37  3001               	movwf fsr0h	
  6010  0D38  0085               	
  6011                           	movlw	02h
  6012  0D39  3002               	addwf	indf1,f
  6013  0D3A  0781               	moviw	[0]fsr0
  6014  0D3B  3F00               	movlb 2	; select bank2
  6015  0D3C  0142               	movwf	(_prec)^0100h
  6016  0D3D  00E6               	moviw	[1]fsr0
  6017  0D3E  3F01               	movwf	(_prec+1)^0100h
  6018  0D3F  00E7               	line	746
  6019                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 746:       
                                       } else {
  6020                           	goto	l4443
  6021  0D40  2DB7               	
  6022                           l554:	
  6023  0D41                     	line	747
  6024                           	
  6025                           l4433:	
  6026  0D41                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 747:       
                                           prec = atoi(*fmt);
  6027                           	movlb 1	; select bank1
  6028  0D41  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6029  0D42  0868               	movwf	fsr1l
  6030  0D43  0086               	movlw 1	; select bank2/3
  6031  0D44  3001               	movwf fsr1h	
  6032  0D45  0087               	
  6033                           	moviw	[0]fsr1
  6034  0D46  3F40               	movlb 0	; select bank0
  6035  0D47  0140               	movwf	(atoi@s)
  6036  0D48  00A6               	moviw	[1]fsr1
  6037  0D49  3F41               	movwf	(atoi@s+1)
  6038  0D4A  00A7               	fcall	_atoi
  6039  0D4B  319F  2719  318C   	movlb 0	; select bank0
  6040  0D4E  0140               	movf	(1+(?_atoi)),w
  6041  0D4F  0827               	movlb 2	; select bank2
  6042  0D50  0142               	movwf	(_prec+1)^0100h
  6043  0D51  00E7               	movlb 0	; select bank0
  6044  0D52  0140               	movf	(0+(?_atoi)),w
  6045  0D53  0826               	movlb 2	; select bank2
  6046  0D54  0142               	movwf	(_prec)^0100h
  6047  0D55  00E6               	line	748
  6048                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 748:       
                                           while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6049                           	goto	l4437
  6050  0D56  2D62               	
  6051                           l557:	
  6052  0D57                     	line	749
  6053                           	
  6054                           l4435:	
  6055  0D57                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 749:       
                                               ++*fmt;
  6056                           	movlb 1	; select bank1
  6057  0D57  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6058  0D58  0868               	movwf	fsr1l
  6059  0D59  0086               	movlw 1	; select bank2/3
  6060  0D5A  3001               	movwf fsr1h	
  6061  0D5B  0087               	
  6062                           	movlw	01h
  6063  0D5C  3001               	addwf	indf1,f
  6064  0D5D  0781               	addfsr	fsr1,1
  6065  0D5E  3141               	skipnc
  6066  0D5F  1803               	incf	indf1,f
  6067  0D60  0A81               	goto	l4437
  6068  0D61  2D62               	line	750
  6069                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 748:       
                                           while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6070                           	
  6071                           l556:	
  6072  0D62                     	line	748
  6073                           	
  6074                           l4437:	
  6075  0D62                     	movlb 1	; select bank1
  6076  0D62  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6077  0D63  0868               	movwf	fsr1l
  6078  0D64  0086               	movlw 1	; select bank2/3
  6079  0D65  3001               	movwf fsr1h	
  6080  0D66  0087               	
  6081                           	moviw	[0]fsr1
  6082  0D67  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  6083  0D68  00EA               	moviw	[1]fsr1
  6084  0D69  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  6085  0D6A  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  6086  0D6B  086A               	movwf	fsr0l
  6087  0D6C  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  6088  0D6D  086B               	movwf	fsr0h
  6089  0D6E  0085               	movf	indf0,w ;code access
  6090  0D6F  0800               	addlw	low(0FFD0h)
  6091  0D70  3ED0               	movwf	(??_vfpfcnvrt+2)^080h+0
  6092  0D71  00EC               	movlw	high(0FFD0h)
  6093  0D72  30FF               	skipnc
  6094  0D73  1803               	movlw	(high(0FFD0h)+1)&0ffh
  6095  0D74  3000               	movwf	((??_vfpfcnvrt+2)^080h+0)+1
  6096  0D75  00ED               	movlw	0
  6097  0D76  3000               	subwf	1+(??_vfpfcnvrt+2)^080h+0,w
  6098  0D77  026D               	movlw	0Ah
  6099  0D78  300A               	skipnz
  6100  0D79  1903               	subwf	0+(??_vfpfcnvrt+2)^080h+0,w
  6101  0D7A  026C               	skipc
  6102  0D7B  1C03               	goto	u6281
  6103  0D7C  2D7E               	goto	u6280
  6104  0D7D  2D80               u6281:
  6105  0D7E                     	movlw	1
  6106  0D7E  3001               	goto	u6290
  6107  0D7F  2D81               u6280:
  6108  0D80                     	movlw	0
  6109  0D80  3000               u6290:
  6110  0D81                     	movwf	(??_vfpfcnvrt+4)^080h+0
  6111  0D81  00EE               	clrf	(??_vfpfcnvrt+4)^080h+0+1
  6112  0D82  01EF               	movf	0+(??_vfpfcnvrt+4)^080h+0,w
  6113  0D83  086E               	movlb 2	; select bank2
  6114  0D84  0142               	movwf	(_vfpfcnvrt$945)^0100h
  6115  0D85  00A2               	movlb 1	; select bank1
  6116  0D86  0141               	movf	1+(??_vfpfcnvrt+4)^080h+0,w
  6117  0D87  086F               	movlb 2	; select bank2
  6118  0D88  0142               	movwf	(_vfpfcnvrt$945+1)^0100h
  6119  0D89  00A3               	goto	l4441
  6120  0D8A  2DAE               	
  6121                           l559:	
  6122  0D8B                     	
  6123                           l4439:	
  6124  0D8B                     	movlb 1	; select bank1
  6125  0D8B  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6126  0D8C  0868               	movwf	fsr1l
  6127  0D8D  0086               	movlw 1	; select bank2/3
  6128  0D8E  3001               	movwf fsr1h	
  6129  0D8F  0087               	
  6130                           	moviw	[0]fsr1
  6131  0D90  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  6132  0D91  00EA               	moviw	[1]fsr1
  6133  0D92  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  6134  0D93  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  6135  0D94  086A               	movwf	fsr0l
  6136  0D95  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  6137  0D96  086B               	movwf	fsr0h
  6138  0D97  0085               	movf	indf0,w ;code access
  6139  0D98  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  6140  0D99  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  6141  0D9A  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  6142  0D9B  086C               	movlb 0	; select bank0
  6143  0D9C  0140               	movwf	(isdigit@c)
  6144  0D9D  00A0               	movlb 1	; select bank1
  6145  0D9E  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  6146  0D9F  086D               	movlb 0	; select bank0
  6147  0DA0  0140               	movwf	(isdigit@c+1)
  6148  0DA1  00A1               	fcall	_isdigit
  6149  0DA2  31A1  21D9  318C   	movlb 0	; select bank0
  6150  0DA5  0140               	movf	(1+(?_isdigit)),w
  6151  0DA6  0821               	movlb 2	; select bank2
  6152  0DA7  0142               	movwf	(_vfpfcnvrt$945+1)^0100h
  6153  0DA8  00A3               	movlb 0	; select bank0
  6154  0DA9  0140               	movf	(0+(?_isdigit)),w
  6155  0DAA  0820               	movlb 2	; select bank2
  6156  0DAB  0142               	movwf	(_vfpfcnvrt$945)^0100h
  6157  0DAC  00A2               	goto	l4441
  6158  0DAD  2DAE               	
  6159                           l561:	
  6160  0DAE                     	
  6161                           l4441:	
  6162  0DAE                     	movf	((_vfpfcnvrt$945)^0100h),w
  6163  0DAE  0822               iorwf	((_vfpfcnvrt$945+1)^0100h),w
  6164  0DAF  0423               	btfss	status,2
  6165  0DB0  1D03               	goto	u6301
  6166  0DB1  2DB3               	goto	u6300
  6167  0DB2  2DB4               u6301:
  6168  0DB3                     	goto	l4435
  6169  0DB3  2D57               u6300:
  6170  0DB4                     	goto	l4443
  6171  0DB4  2DB7               	
  6172                           l562:	
  6173  0DB5                     	goto	l4443
  6174  0DB5  2DB7               	line	751
  6175                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 751:       
                                       }
  6176                           	
  6177                           l555:	
  6178  0DB6                     	goto	l4443
  6179  0DB6  2DB7               	line	752
  6180                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 752:       
                                   }
  6181                           	
  6182                           l553:	
  6183  0DB7                     	line	757
  6184                           	
  6185                           l4443:	
  6186  0DB7                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 757:       
                                   ct[0] = tolower((int)(*fmt)[0]);
  6187                           	movlb 1	; select bank1
  6188  0DB7  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6189  0DB8  0868               	movwf	fsr1l
  6190  0DB9  0086               	movlw 1	; select bank2/3
  6191  0DBA  3001               	movwf fsr1h	
  6192  0DBB  0087               	
  6193                           	moviw	[0]fsr1
  6194  0DBC  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  6195  0DBD  00EA               	moviw	[1]fsr1
  6196  0DBE  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  6197  0DBF  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  6198  0DC0  086A               	movwf	fsr0l
  6199  0DC1  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  6200  0DC2  086B               	movwf	fsr0h
  6201  0DC3  0085               	movf	indf0,w ;code access
  6202  0DC4  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  6203  0DC5  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  6204  0DC6  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  6205  0DC7  086C               	movlb 0	; select bank0
  6206  0DC8  0140               	movwf	(tolower@c)
  6207  0DC9  00A6               	movlb 1	; select bank1
  6208  0DCA  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  6209  0DCB  086D               	movlb 0	; select bank0
  6210  0DCC  0140               	movwf	(tolower@c+1)
  6211  0DCD  00A7               	fcall	_tolower
  6212  0DCE  31A3  23D8  318C   	movlb 0	; select bank0
  6213  0DD1  0140               	movf	(0+(?_tolower)),w
  6214  0DD2  0826               	movlb 1	; select bank1
  6215  0DD3  0141               	movwf	(??_vfpfcnvrt+4)^080h+0
  6216  0DD4  00EE               	movf	(??_vfpfcnvrt+4)^080h+0,w
  6217  0DD5  086E               	movlb 2	; select bank2
  6218  0DD6  0142               	movwf	(vfpfcnvrt@ct)^0100h
  6219  0DD7  00AB               	line	758
  6220                           	
  6221                           l4445:	
  6222  0DD8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 758:       
                                   if (ct[0]) {
  6223                           	movf	((vfpfcnvrt@ct)^0100h),w
  6224  0DD8  082B               	btfsc	status,2
  6225  0DD9  1903               	goto	u6311
  6226  0DDA  2DDC               	goto	u6310
  6227  0DDB  2DDD               u6311:
  6228  0DDC                     	goto	l4453
  6229  0DDC  2E2C               u6310:
  6230  0DDD                     	line	759
  6231                           	
  6232                           l4447:	
  6233  0DDD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 759:       
                                       ct[1] = tolower((int)(*fmt)[1]);
  6234                           	movlb 1	; select bank1
  6235  0DDD  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6236  0DDE  0868               	movwf	fsr1l
  6237  0DDF  0086               	movlw 1	; select bank2/3
  6238  0DE0  3001               	movwf fsr1h	
  6239  0DE1  0087               	
  6240                           	moviw	[0]fsr1
  6241  0DE2  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  6242  0DE3  00EA               	moviw	[1]fsr1
  6243  0DE4  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  6244  0DE5  00EB               	movlw	01h
  6245  0DE6  3001               	addwf	(??_vfpfcnvrt+0)^080h+0,w
  6246  0DE7  076A               	movwf	fsr0l
  6247  0DE8  0084               	movf	(??_vfpfcnvrt+0)^080h+1,w
  6248  0DE9  086B               	skipnc
  6249  0DEA  1803               	incf	(??_vfpfcnvrt+0)^080h+1,w
  6250  0DEB  0A6B               	movwf	fsr0h
  6251  0DEC  0085               
  6252                           	movf	indf0,w ;code access
  6253  0DED  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  6254  0DEE  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  6255  0DEF  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  6256  0DF0  086C               	movlb 0	; select bank0
  6257  0DF1  0140               	movwf	(tolower@c)
  6258  0DF2  00A6               	movlb 1	; select bank1
  6259  0DF3  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  6260  0DF4  086D               	movlb 0	; select bank0
  6261  0DF5  0140               	movwf	(tolower@c+1)
  6262  0DF6  00A7               	fcall	_tolower
  6263  0DF7  31A3  23D8  318C   	movlb 0	; select bank0
  6264  0DFA  0140               	movf	(0+(?_tolower)),w
  6265  0DFB  0826               	movlb 1	; select bank1
  6266  0DFC  0141               	movwf	(??_vfpfcnvrt+4)^080h+0
  6267  0DFD  00EE               	movf	(??_vfpfcnvrt+4)^080h+0,w
  6268  0DFE  086E               	movlb 2	; select bank2
  6269  0DFF  0142               	movwf	0+(vfpfcnvrt@ct)^0100h+01h
  6270  0E00  00AC               	line	760
  6271                           	
  6272                           l4449:	
  6273  0E01                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 760:       
                                       if (ct[1]) {
  6274                           	movf	(0+(vfpfcnvrt@ct)^0100h+01h),w
  6275  0E01  082C               	btfsc	status,2
  6276  0E02  1903               	goto	u6321
  6277  0E03  2E05               	goto	u6320
  6278  0E04  2E06               u6321:
  6279  0E05                     	goto	l4453
  6280  0E05  2E2C               u6320:
  6281  0E06                     	line	761
  6282                           	
  6283                           l4451:	
  6284  0E06                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 761:       
                                           ct[2] = tolower((int)(*fmt)[2]);
  6285                           	movlb 1	; select bank1
  6286  0E06  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6287  0E07  0868               	movwf	fsr1l
  6288  0E08  0086               	movlw 1	; select bank2/3
  6289  0E09  3001               	movwf fsr1h	
  6290  0E0A  0087               	
  6291                           	moviw	[0]fsr1
  6292  0E0B  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  6293  0E0C  00EA               	moviw	[1]fsr1
  6294  0E0D  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  6295  0E0E  00EB               	movlw	02h
  6296  0E0F  3002               	addwf	(??_vfpfcnvrt+0)^080h+0,w
  6297  0E10  076A               	movwf	fsr0l
  6298  0E11  0084               	movf	(??_vfpfcnvrt+0)^080h+1,w
  6299  0E12  086B               	skipnc
  6300  0E13  1803               	incf	(??_vfpfcnvrt+0)^080h+1,w
  6301  0E14  0A6B               	movwf	fsr0h
  6302  0E15  0085               
  6303                           	movf	indf0,w ;code access
  6304  0E16  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  6305  0E17  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  6306  0E18  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  6307  0E19  086C               	movlb 0	; select bank0
  6308  0E1A  0140               	movwf	(tolower@c)
  6309  0E1B  00A6               	movlb 1	; select bank1
  6310  0E1C  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  6311  0E1D  086D               	movlb 0	; select bank0
  6312  0E1E  0140               	movwf	(tolower@c+1)
  6313  0E1F  00A7               	fcall	_tolower
  6314  0E20  31A3  23D8  318C   	movlb 0	; select bank0
  6315  0E23  0140               	movf	(0+(?_tolower)),w
  6316  0E24  0826               	movlb 1	; select bank1
  6317  0E25  0141               	movwf	(??_vfpfcnvrt+4)^080h+0
  6318  0E26  00EE               	movf	(??_vfpfcnvrt+4)^080h+0,w
  6319  0E27  086E               	movlb 2	; select bank2
  6320  0E28  0142               	movwf	0+(vfpfcnvrt@ct)^0100h+02h
  6321  0E29  00AD               	goto	l4453
  6322  0E2A  2E2C               	line	762
  6323                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 762:       
                                       }
  6324                           	
  6325                           l564:	
  6326  0E2B                     	goto	l4453
  6327  0E2B  2E2C               	line	763
  6328                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 763:       
                                   }
  6329                           	
  6330                           l563:	
  6331  0E2C                     	line	920
  6332                           	
  6333                           l4453:	
  6334  0E2C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 920:       
                                   if (ct[0] == 'f') {
  6335                           		movlw	102
  6336  0E2C  3066               	xorwf	((vfpfcnvrt@ct)^0100h),w
  6337  0E2D  062B               	btfss	status,2
  6338  0E2E  1D03               	goto	u6331
  6339  0E2F  2E31               	goto	u6330
  6340  0E30  2E32               u6331:
  6341  0E31                     	goto	l4465
  6342  0E31  2E82               u6330:
  6343  0E32                     	line	922
  6344                           	
  6345                           l4455:	
  6346  0E32                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 922:       
                                       c = (*fmt)[0];
  6347                           	movlb 1	; select bank1
  6348  0E32  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6349  0E33  0868               	movwf	fsr1l
  6350  0E34  0086               	movlw 1	; select bank2/3
  6351  0E35  3001               	movwf fsr1h	
  6352  0E36  0087               	
  6353                           	moviw	[0]fsr1
  6354  0E37  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  6355  0E38  00EA               	moviw	[1]fsr1
  6356  0E39  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  6357  0E3A  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  6358  0E3B  086A               	movwf	fsr0l
  6359  0E3C  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  6360  0E3D  086B               	movwf	fsr0h
  6361  0E3E  0085               	movf	indf0,w ;code access
  6362  0E3F  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  6363  0E40  00EC               	movf	(??_vfpfcnvrt+2)^080h+0,w
  6364  0E41  086C               	movlb 2	; select bank2
  6365  0E42  0142               	movwf	(vfpfcnvrt@c)^0100h
  6366  0E43  00AE               	line	923
  6367                           	
  6368                           l4457:	
  6369  0E44                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 923:       
                                       ++*fmt;
  6370                           	movlb 1	; select bank1
  6371  0E44  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6372  0E45  0868               	movwf	fsr1l
  6373  0E46  0086               	movlw 1	; select bank2/3
  6374  0E47  3001               	movwf fsr1h	
  6375  0E48  0087               	
  6376                           	movlw	01h
  6377  0E49  3001               	addwf	indf1,f
  6378  0E4A  0781               	addfsr	fsr1,1
  6379  0E4B  3141               	skipnc
  6380  0E4C  1803               	incf	indf1,f
  6381  0E4D  0A81               	line	924
  6382                           	
  6383                           l4459:	
  6384  0E4E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 924:       
                                       f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6385                           	movf	(vfpfcnvrt@ap)^080h,w
  6386  0E4E  0869               	movwf	fsr1l
  6387  0E4F  0086               	movlw 1	; select bank2/3
  6388  0E50  3001               	movwf fsr1h	
  6389  0E51  0087               	
  6390                           	movf	indf1,w
  6391  0E52  0801               	movwf	fsr0l
  6392  0E53  0084               	movlw 1	; select bank2/3
  6393  0E54  3001               	movwf fsr0h	
  6394  0E55  0085               	
  6395                           	movlw	04h
  6396  0E56  3004               	addwf	indf1,f
  6397  0E57  0781               	moviw	[0]fsr0
  6398  0E58  3F00               	movlb 2	; select bank2
  6399  0E59  0142               	movwf	(vfpfcnvrt@f)^0100h
  6400  0E5A  00A7               	moviw	[1]fsr0
  6401  0E5B  3F01               	movwf	(vfpfcnvrt@f+1)^0100h
  6402  0E5C  00A8               	moviw	[2]fsr0
  6403  0E5D  3F02               	movwf	(vfpfcnvrt@f+2)^0100h
  6404  0E5E  00A9               	moviw	[3]fsr0
  6405  0E5F  3F03               	movwf	(vfpfcnvrt@f+3)^0100h
  6406  0E60  00AA               	line	926
  6407                           	
  6408                           l4461:	
  6409  0E61                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 926:       
                                       return efgtoa(fp, f, c);
  6410                           	movf	(vfpfcnvrt@f+3)^0100h,w
  6411  0E61  082A               	movlb 1	; select bank1
  6412  0E62  0141               	movwf	(efgtoa@f+3)^080h
  6413  0E63  00AD               	movlb 2	; select bank2
  6414  0E64  0142               	movf	(vfpfcnvrt@f+2)^0100h,w
  6415  0E65  0829               	movlb 1	; select bank1
  6416  0E66  0141               	movwf	(efgtoa@f+2)^080h
  6417  0E67  00AC               	movlb 2	; select bank2
  6418  0E68  0142               	movf	(vfpfcnvrt@f+1)^0100h,w
  6419  0E69  0828               	movlb 1	; select bank1
  6420  0E6A  0141               	movwf	(efgtoa@f+1)^080h
  6421  0E6B  00AB               	movlb 2	; select bank2
  6422  0E6C  0142               	movf	(vfpfcnvrt@f)^0100h,w
  6423  0E6D  0827               	movlb 1	; select bank1
  6424  0E6E  0141               	movwf	(efgtoa@f)^080h
  6425  0E6F  00AA               
  6426                           	movlb 2	; select bank2
  6427  0E70  0142               	movf	(vfpfcnvrt@c)^0100h,w
  6428  0E71  082E               	movlb 1	; select bank1
  6429  0E72  0141               	movwf	(??_vfpfcnvrt+0)^080h+0
  6430  0E73  00EA               	movf	(??_vfpfcnvrt+0)^080h+0,w
  6431  0E74  086A               	movwf	(efgtoa@c)^080h
  6432  0E75  00AE               	movlb 2	; select bank2
  6433  0E76  0142               	movf	(vfpfcnvrt@fp)^0100h,w
  6434  0E77  082F               	fcall	_efgtoa
  6435  0E78  3190  200D  318C   	movlb 1	; select bank1
  6436  0E7B  0141               	movf	(1+(?_efgtoa))^080h,w
  6437  0E7C  082B               	movwf	(?_vfpfcnvrt+1)^080h
  6438  0E7D  00E9               	movf	(0+(?_efgtoa))^080h,w
  6439  0E7E  082A               	movwf	(?_vfpfcnvrt)^080h
  6440  0E7F  00E8               	goto	l566
  6441  0E80  2FFF               	
  6442                           l4463:	
  6443  0E81                     	goto	l566
  6444  0E81  2FFF               	line	927
  6445                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 927:       
                                   }
  6446                           	
  6447                           l565:	
  6448  0E82                     	line	928
  6449                           	
  6450                           l4465:	
  6451  0E82                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 928:       
                                   if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  6452                           	movlw	low(((STR_18)|8000h))
  6453  0E82  30D6               	movlb 0	; select bank0
  6454  0E83  0140               	movwf	(strncmp@_r)
  6455  0E84  00A0               	movlw	high(((STR_18)|8000h))
  6456  0E85  30A8               	movwf	((strncmp@_r))+1
  6457  0E86  00A1               	movlw	02h
  6458  0E87  3002               	movwf	(strncmp@n)
  6459  0E88  00A2               	movlw	0
  6460  0E89  3000               	movwf	((strncmp@n))+1
  6461  0E8A  00A3               	movlw	(low(vfpfcnvrt@ct|((0x1)<<8)))&0ffh
  6462  0E8B  302B               	fcall	_strncmp
  6463  0E8C  3198  205D  318C   	movlb 0	; select bank0
  6464  0E8F  0140               	movf	((0+(?_strncmp))),w
  6465  0E90  0820               iorwf	((1+(?_strncmp))),w
  6466  0E91  0421               	btfss	status,2
  6467  0E92  1D03               	goto	u6341
  6468  0E93  2E95               	goto	u6340
  6469  0E94  2E96               u6341:
  6470  0E95                     	goto	l4483
  6471  0E95  2F53               u6340:
  6472  0E96                     	line	930
  6473                           	
  6474                           l4467:	
  6475  0E96                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 931:       
                                       if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  6476                           	movlb 1	; select bank1
  6477  0E96  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6478  0E97  0868               	movwf	fsr1l
  6479  0E98  0086               	movlw 1	; select bank2/3
  6480  0E99  3001               	movwf fsr1h	
  6481  0E9A  0087               	
  6482                           	moviw	[0]fsr1
  6483  0E9B  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  6484  0E9C  00EA               	moviw	[1]fsr1
  6485  0E9D  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  6486  0E9E  00EB               	movlw	01h
  6487  0E9F  3001               	addwf	(??_vfpfcnvrt+0)^080h+0,w
  6488  0EA0  076A               	movwf	fsr0l
  6489  0EA1  0084               	movf	(??_vfpfcnvrt+0)^080h+1,w
  6490  0EA2  086B               	skipnc
  6491  0EA3  1803               	incf	(??_vfpfcnvrt+0)^080h+1,w
  6492  0EA4  0A6B               	movwf	fsr0h
  6493  0EA5  0085               
  6494                           	movf	indf0,w ;code access
  6495  0EA6  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  6496  0EA7  00EC               	movf	(??_vfpfcnvrt+2)^080h+0,w
  6497  0EA8  086C               	movlb 2	; select bank2
  6498  0EA9  0142               	movwf	(vfpfcnvrt@c)^0100h
  6499  0EAA  00AE               	line	931
  6500                           	movlb 1	; select bank1
  6501  0EAB  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6502  0EAC  0868               	movwf	fsr1l
  6503  0EAD  0086               	movlw 1	; select bank2/3
  6504  0EAE  3001               	movwf fsr1h	
  6505  0EAF  0087               	
  6506                           	moviw	[0]fsr1
  6507  0EB0  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  6508  0EB1  00EA               	moviw	[1]fsr1
  6509  0EB2  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  6510  0EB3  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  6511  0EB4  086A               	movwf	fsr0l
  6512  0EB5  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  6513  0EB6  086B               	movwf	fsr0h
  6514  0EB7  0085               	movf	indf0,w ;code access
  6515  0EB8  0800               	addlw	low(0FFBFh)
  6516  0EB9  3EBF               	movwf	(??_vfpfcnvrt+2)^080h+0
  6517  0EBA  00EC               	movlw	high(0FFBFh)
  6518  0EBB  30FF               	skipnc
  6519  0EBC  1803               	movlw	(high(0FFBFh)+1)&0ffh
  6520  0EBD  3000               	movwf	((??_vfpfcnvrt+2)^080h+0)+1
  6521  0EBE  00ED               	movlw	0
  6522  0EBF  3000               	subwf	1+(??_vfpfcnvrt+2)^080h+0,w
  6523  0EC0  026D               	movlw	01Ah
  6524  0EC1  301A               	skipnz
  6525  0EC2  1903               	subwf	0+(??_vfpfcnvrt+2)^080h+0,w
  6526  0EC3  026C               	skipc
  6527  0EC4  1C03               	goto	u6351
  6528  0EC5  2EC7               	goto	u6350
  6529  0EC6  2EC9               u6351:
  6530  0EC7                     	movlw	1
  6531  0EC7  3001               	goto	u6360
  6532  0EC8  2ECA               u6350:
  6533  0EC9                     	movlw	0
  6534  0EC9  3000               u6360:
  6535  0ECA                     	movwf	(??_vfpfcnvrt+4)^080h+0
  6536  0ECA  00EE               	clrf	(??_vfpfcnvrt+4)^080h+0+1
  6537  0ECB  01EF               	movf	0+(??_vfpfcnvrt+4)^080h+0,w
  6538  0ECC  086E               	movlb 2	; select bank2
  6539  0ECD  0142               	movwf	(_vfpfcnvrt$949)^0100h
  6540  0ECE  00A4               	movlb 1	; select bank1
  6541  0ECF  0141               	movf	1+(??_vfpfcnvrt+4)^080h+0,w
  6542  0ED0  086F               	movlb 2	; select bank2
  6543  0ED1  0142               	movwf	(_vfpfcnvrt$949+1)^0100h
  6544  0ED2  00A5               	goto	l4471
  6545  0ED3  2EF7               	
  6546                           l570:	
  6547  0ED4                     	
  6548                           l4469:	
  6549  0ED4                     	movlb 1	; select bank1
  6550  0ED4  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6551  0ED5  0868               	movwf	fsr1l
  6552  0ED6  0086               	movlw 1	; select bank2/3
  6553  0ED7  3001               	movwf fsr1h	
  6554  0ED8  0087               	
  6555                           	moviw	[0]fsr1
  6556  0ED9  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  6557  0EDA  00EA               	moviw	[1]fsr1
  6558  0EDB  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  6559  0EDC  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  6560  0EDD  086A               	movwf	fsr0l
  6561  0EDE  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  6562  0EDF  086B               	movwf	fsr0h
  6563  0EE0  0085               	movf	indf0,w ;code access
  6564  0EE1  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  6565  0EE2  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  6566  0EE3  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  6567  0EE4  086C               	movlb 0	; select bank0
  6568  0EE5  0140               	movwf	(isupper@c)
  6569  0EE6  00A0               	movlb 1	; select bank1
  6570  0EE7  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  6571  0EE8  086D               	movlb 0	; select bank0
  6572  0EE9  0140               	movwf	(isupper@c+1)
  6573  0EEA  00A1               	fcall	_isupper
  6574  0EEB  31A1  21F3  318C   	movlb 0	; select bank0
  6575  0EEE  0140               	movf	(1+(?_isupper)),w
  6576  0EEF  0821               	movlb 2	; select bank2
  6577  0EF0  0142               	movwf	(_vfpfcnvrt$949+1)^0100h
  6578  0EF1  00A5               	movlb 0	; select bank0
  6579  0EF2  0140               	movf	(0+(?_isupper)),w
  6580  0EF3  0820               	movlb 2	; select bank2
  6581  0EF4  0142               	movwf	(_vfpfcnvrt$949)^0100h
  6582  0EF5  00A4               	goto	l4471
  6583  0EF6  2EF7               	
  6584                           l572:	
  6585  0EF7                     	
  6586                           l4471:	
  6587  0EF7                     	movf	((_vfpfcnvrt$949)^0100h),w
  6588  0EF7  0824               iorwf	((_vfpfcnvrt$949+1)^0100h),w
  6589  0EF8  0425               	btfsc	status,2
  6590  0EF9  1903               	goto	u6371
  6591  0EFA  2EFC               	goto	u6370
  6592  0EFB  2EFD               u6371:
  6593  0EFC                     	goto	l4475
  6594  0EFC  2F12               u6370:
  6595  0EFD                     	line	932
  6596                           	
  6597                           l4473:	
  6598  0EFD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 932:       
                                           f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  6599                           	movlb 1	; select bank1
  6600  0EFD  0141               	movf	(vfpfcnvrt@ap)^080h,w
  6601  0EFE  0869               	movwf	fsr1l
  6602  0EFF  0086               	movlw 1	; select bank2/3
  6603  0F00  3001               	movwf fsr1h	
  6604  0F01  0087               	
  6605                           	movf	indf1,w
  6606  0F02  0801               	movwf	fsr0l
  6607  0F03  0084               	movlw 1	; select bank2/3
  6608  0F04  3001               	movwf fsr0h	
  6609  0F05  0085               	
  6610                           	movlw	04h
  6611  0F06  3004               	addwf	indf1,f
  6612  0F07  0781               	moviw	[0]fsr0
  6613  0F08  3F00               	movlb 2	; select bank2
  6614  0F09  0142               	movwf	(vfpfcnvrt@f)^0100h
  6615  0F0A  00A7               	moviw	[1]fsr0
  6616  0F0B  3F01               	movwf	(vfpfcnvrt@f+1)^0100h
  6617  0F0C  00A8               	moviw	[2]fsr0
  6618  0F0D  3F02               	movwf	(vfpfcnvrt@f+2)^0100h
  6619  0F0E  00A9               	moviw	[3]fsr0
  6620  0F0F  3F03               	movwf	(vfpfcnvrt@f+3)^0100h
  6621  0F10  00AA               	line	933
  6622                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 933:       
                                       } else {
  6623                           	goto	l4477
  6624  0F11  2F27               	
  6625                           l568:	
  6626  0F12                     	line	934
  6627                           	
  6628                           l4475:	
  6629  0F12                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 934:       
                                           f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6630                           	movlb 1	; select bank1
  6631  0F12  0141               	movf	(vfpfcnvrt@ap)^080h,w
  6632  0F13  0869               	movwf	fsr1l
  6633  0F14  0086               	movlw 1	; select bank2/3
  6634  0F15  3001               	movwf fsr1h	
  6635  0F16  0087               	
  6636                           	movf	indf1,w
  6637  0F17  0801               	movwf	fsr0l
  6638  0F18  0084               	movlw 1	; select bank2/3
  6639  0F19  3001               	movwf fsr0h	
  6640  0F1A  0085               	
  6641                           	movlw	04h
  6642  0F1B  3004               	addwf	indf1,f
  6643  0F1C  0781               	moviw	[0]fsr0
  6644  0F1D  3F00               	movlb 2	; select bank2
  6645  0F1E  0142               	movwf	(vfpfcnvrt@f)^0100h
  6646  0F1F  00A7               	moviw	[1]fsr0
  6647  0F20  3F01               	movwf	(vfpfcnvrt@f+1)^0100h
  6648  0F21  00A8               	moviw	[2]fsr0
  6649  0F22  3F02               	movwf	(vfpfcnvrt@f+2)^0100h
  6650  0F23  00A9               	moviw	[3]fsr0
  6651  0F24  3F03               	movwf	(vfpfcnvrt@f+3)^0100h
  6652  0F25  00AA               	goto	l4477
  6653  0F26  2F27               	line	935
  6654                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 935:       
                                       }
  6655                           	
  6656                           l573:	
  6657  0F27                     	line	936
  6658                           	
  6659                           l4477:	
  6660  0F27                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 936:       
                                       *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  6661                           	movlb 1	; select bank1
  6662  0F27  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6663  0F28  0868               	movwf	fsr1l
  6664  0F29  0086               	movlw 1	; select bank2/3
  6665  0F2A  3001               	movwf fsr1h	
  6666  0F2B  0087               	
  6667                           	movlw	02h
  6668  0F2C  3002               	addwf	indf1,f
  6669  0F2D  0781               	addfsr	fsr1,1
  6670  0F2E  3141               	skipnc
  6671  0F2F  1803               	incf	indf1,f
  6672  0F30  0A81               	line	938
  6673                           	
  6674                           l4479:	
  6675  0F31                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 938:       
                                       return efgtoa(fp, f, c);
  6676                           	movlb 2	; select bank2
  6677  0F31  0142               	movf	(vfpfcnvrt@f+3)^0100h,w
  6678  0F32  082A               	movlb 1	; select bank1
  6679  0F33  0141               	movwf	(efgtoa@f+3)^080h
  6680  0F34  00AD               	movlb 2	; select bank2
  6681  0F35  0142               	movf	(vfpfcnvrt@f+2)^0100h,w
  6682  0F36  0829               	movlb 1	; select bank1
  6683  0F37  0141               	movwf	(efgtoa@f+2)^080h
  6684  0F38  00AC               	movlb 2	; select bank2
  6685  0F39  0142               	movf	(vfpfcnvrt@f+1)^0100h,w
  6686  0F3A  0828               	movlb 1	; select bank1
  6687  0F3B  0141               	movwf	(efgtoa@f+1)^080h
  6688  0F3C  00AB               	movlb 2	; select bank2
  6689  0F3D  0142               	movf	(vfpfcnvrt@f)^0100h,w
  6690  0F3E  0827               	movlb 1	; select bank1
  6691  0F3F  0141               	movwf	(efgtoa@f)^080h
  6692  0F40  00AA               
  6693                           	movlb 2	; select bank2
  6694  0F41  0142               	movf	(vfpfcnvrt@c)^0100h,w
  6695  0F42  082E               	movlb 1	; select bank1
  6696  0F43  0141               	movwf	(??_vfpfcnvrt+0)^080h+0
  6697  0F44  00EA               	movf	(??_vfpfcnvrt+0)^080h+0,w
  6698  0F45  086A               	movwf	(efgtoa@c)^080h
  6699  0F46  00AE               	movlb 2	; select bank2
  6700  0F47  0142               	movf	(vfpfcnvrt@fp)^0100h,w
  6701  0F48  082F               	fcall	_efgtoa
  6702  0F49  3190  200D  318C   	movlb 1	; select bank1
  6703  0F4C  0141               	movf	(1+(?_efgtoa))^080h,w
  6704  0F4D  082B               	movwf	(?_vfpfcnvrt+1)^080h
  6705  0F4E  00E9               	movf	(0+(?_efgtoa))^080h,w
  6706  0F4F  082A               	movwf	(?_vfpfcnvrt)^080h
  6707  0F50  00E8               	goto	l566
  6708  0F51  2FFF               	
  6709                           l4481:	
  6710  0F52                     	goto	l566
  6711  0F52  2FFF               	line	939
  6712                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 939:       
                                   }
  6713                           	
  6714                           l567:	
  6715  0F53                     	line	1149
  6716                           	
  6717                           l4483:	
  6718  0F53                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1149:      
                                    if (*fmt[0] == 's') {
  6719                           	movlb 1	; select bank1
  6720  0F53  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6721  0F54  0868               	movwf	fsr1l
  6722  0F55  0086               	movlw 1	; select bank2/3
  6723  0F56  3001               	movwf fsr1h	
  6724  0F57  0087               	
  6725                           	moviw	[0]fsr1
  6726  0F58  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  6727  0F59  00EA               	moviw	[1]fsr1
  6728  0F5A  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  6729  0F5B  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  6730  0F5C  086A               	movwf	fsr0l
  6731  0F5D  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  6732  0F5E  086B               	movwf	fsr0h
  6733  0F5F  0085               	moviw	fsr0++
  6734  0F60  0012               xorlw	115
  6735  0F61  3A73               	btfss	status,2
  6736  0F62  1D03               	goto	u6381
  6737  0F63  2F65               	goto	u6380
  6738  0F64  2F66               u6381:
  6739  0F65                     	goto	l4493
  6740  0F65  2F92               u6380:
  6741  0F66                     	line	1151
  6742                           	
  6743                           l4485:	
  6744  0F66                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1151:      
                                        ++*fmt;
  6745                           	movf	(vfpfcnvrt@fmt)^080h,w
  6746  0F66  0868               	movwf	fsr1l
  6747  0F67  0086               	movlw 1	; select bank2/3
  6748  0F68  3001               	movwf fsr1h	
  6749  0F69  0087               	
  6750                           	movlw	01h
  6751  0F6A  3001               	addwf	indf1,f
  6752  0F6B  0781               	addfsr	fsr1,1
  6753  0F6C  3141               	skipnc
  6754  0F6D  1803               	incf	indf1,f
  6755  0F6E  0A81               	line	1152
  6756                           	
  6757                           l4487:	
  6758  0F6F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1152:      
                                        cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  6759                           	movf	(vfpfcnvrt@ap)^080h,w
  6760  0F6F  0869               	movwf	fsr1l
  6761  0F70  0086               	movlw 1	; select bank2/3
  6762  0F71  3001               	movwf fsr1h	
  6763  0F72  0087               	
  6764                           	moviw	[0]fsr1
  6765  0F73  3F40               	movwf	fsr0l
  6766  0F74  0084               	movlw 1	; select bank2/3
  6767  0F75  3001               	movwf fsr0h	
  6768  0F76  0085               	
  6769                           	incf	indf1,f
  6770  0F77  0A81               	movf	indf0,w
  6771  0F78  0800               	movwf	(??_vfpfcnvrt+0)^080h+0
  6772  0F79  00EA               	movf	(??_vfpfcnvrt+0)^080h+0,w
  6773  0F7A  086A               	movlb 2	; select bank2
  6774  0F7B  0142               	movwf	(vfpfcnvrt@cp)^0100h
  6775  0F7C  00A6               	line	1154
  6776                           	
  6777                           l4489:	
  6778  0F7D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1154:      
                                        return stoa(fp, cp);
  6779                           	movf	(vfpfcnvrt@cp)^0100h,w
  6780  0F7D  0826               	movlb 1	; select bank1
  6781  0F7E  0141               	movwf	(??_vfpfcnvrt+0)^080h+0
  6782  0F7F  00EA               	movf	(??_vfpfcnvrt+0)^080h+0,w
  6783  0F80  086A               	movlb 0	; select bank0
  6784  0F81  0140               	movwf	(stoa@s)
  6785  0F82  00A8               	movlb 2	; select bank2
  6786  0F83  0142               	movf	(vfpfcnvrt@fp)^0100h,w
  6787  0F84  082F               	fcall	_stoa
  6788  0F85  319E  2636  318C   	movlb 0	; select bank0
  6789  0F88  0140               	movf	(1+(?_stoa)),w
  6790  0F89  0829               	movlb 1	; select bank1
  6791  0F8A  0141               	movwf	(?_vfpfcnvrt+1)^080h
  6792  0F8B  00E9               	movlb 0	; select bank0
  6793  0F8C  0140               	movf	(0+(?_stoa)),w
  6794  0F8D  0828               	movlb 1	; select bank1
  6795  0F8E  0141               	movwf	(?_vfpfcnvrt)^080h
  6796  0F8F  00E8               	goto	l566
  6797  0F90  2FFF               	
  6798                           l4491:	
  6799  0F91                     	goto	l566
  6800  0F91  2FFF               	line	1155
  6801                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1155:      
                                    }
  6802                           	
  6803                           l574:	
  6804  0F92                     	line	1350
  6805                           	
  6806                           l4493:	
  6807  0F92                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1350:      
                                    if ((*fmt)[0] == '%') {
  6808                           	movf	(vfpfcnvrt@fmt)^080h,w
  6809  0F92  0868               	movwf	fsr1l
  6810  0F93  0086               	movlw 1	; select bank2/3
  6811  0F94  3001               	movwf fsr1h	
  6812  0F95  0087               	
  6813                           	moviw	[0]fsr1
  6814  0F96  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  6815  0F97  00EA               	moviw	[1]fsr1
  6816  0F98  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  6817  0F99  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  6818  0F9A  086A               	movwf	fsr0l
  6819  0F9B  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  6820  0F9C  086B               	movwf	fsr0h
  6821  0F9D  0085               	moviw	fsr0++
  6822  0F9E  0012               xorlw	37
  6823  0F9F  3A25               	btfss	status,2
  6824  0FA0  1D03               	goto	u6391
  6825  0FA1  2FA3               	goto	u6390
  6826  0FA2  2FA4               u6391:
  6827  0FA3                     	goto	l4503
  6828  0FA3  2FC3               u6390:
  6829  0FA4                     	line	1351
  6830                           	
  6831                           l4495:	
  6832  0FA4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1351:      
                                        ++*fmt;
  6833                           	movf	(vfpfcnvrt@fmt)^080h,w
  6834  0FA4  0868               	movwf	fsr1l
  6835  0FA5  0086               	movlw 1	; select bank2/3
  6836  0FA6  3001               	movwf fsr1h	
  6837  0FA7  0087               	
  6838                           	movlw	01h
  6839  0FA8  3001               	addwf	indf1,f
  6840  0FA9  0781               	addfsr	fsr1,1
  6841  0FAA  3141               	skipnc
  6842  0FAB  1803               	incf	indf1,f
  6843  0FAC  0A81               	line	1352
  6844                           	
  6845                           l4497:	
  6846  0FAD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1352:      
                                        fputc((int)'%', fp);
  6847                           	movlw	025h
  6848  0FAD  3025               	movlb 0	; select bank0
  6849  0FAE  0140               	movwf	(fputc@c)
  6850  0FAF  00A0               	movlw	0
  6851  0FB0  3000               	movwf	((fputc@c))+1
  6852  0FB1  00A1               	movlb 2	; select bank2
  6853  0FB2  0142               	movf	(vfpfcnvrt@fp)^0100h,w
  6854  0FB3  082F               	movlb 1	; select bank1
  6855  0FB4  0141               	movwf	(??_vfpfcnvrt+0)^080h+0
  6856  0FB5  00EA               	movf	(??_vfpfcnvrt+0)^080h+0,w
  6857  0FB6  086A               	movlb 0	; select bank0
  6858  0FB7  0140               	movwf	(fputc@fp)
  6859  0FB8  00A2               	fcall	_fputc
  6860  0FB9  31A6  26D8  318C   	line	1353
  6861                           	
  6862                           l4499:	
  6863  0FBC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1353:      
                                        return 1;
  6864                           	movlw	01h
  6865  0FBC  3001               	movlb 1	; select bank1
  6866  0FBD  0141               	movwf	(?_vfpfcnvrt)^080h
  6867  0FBE  00E8               	movlw	0
  6868  0FBF  3000               	movwf	((?_vfpfcnvrt)^080h)+1
  6869  0FC0  00E9               	goto	l566
  6870  0FC1  2FFF               	
  6871                           l4501:	
  6872  0FC2                     	goto	l566
  6873  0FC2  2FFF               	line	1354
  6874                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1354:      
                                    }
  6875                           	
  6876                           l575:	
  6877  0FC3                     	line	1357
  6878                           	
  6879                           l4503:	
  6880  0FC3                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1357:      
                                    ++*fmt;
  6881                           	movf	(vfpfcnvrt@fmt)^080h,w
  6882  0FC3  0868               	movwf	fsr1l
  6883  0FC4  0086               	movlw 1	; select bank2/3
  6884  0FC5  3001               	movwf fsr1h	
  6885  0FC6  0087               	
  6886                           	movlw	01h
  6887  0FC7  3001               	addwf	indf1,f
  6888  0FC8  0781               	addfsr	fsr1,1
  6889  0FC9  3141               	skipnc
  6890  0FCA  1803               	incf	indf1,f
  6891  0FCB  0A81               	line	1358
  6892                           	
  6893                           l4505:	
  6894  0FCC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1358:      
                                    return 0;
  6895                           	clrf	(?_vfpfcnvrt)^080h
  6896  0FCC  01E8               	clrf	(?_vfpfcnvrt+1)^080h
  6897  0FCD  01E9               	goto	l566
  6898  0FCE  2FFF               	
  6899                           l4507:	
  6900  0FCF                     	goto	l566
  6901  0FCF  2FFF               	line	1359
  6902                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1359:     }
                                 
  6903                           	
  6904                           l542:	
  6905  0FD0                     	line	1362
  6906                           	
  6907                           l4509:	
  6908  0FD0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1362:     f
                                 putc((int)(*fmt)[0], fp);
  6909                           	movf	(vfpfcnvrt@fmt)^080h,w
  6910  0FD0  0868               	movwf	fsr1l
  6911  0FD1  0086               	movlw 1	; select bank2/3
  6912  0FD2  3001               	movwf fsr1h	
  6913  0FD3  0087               	
  6914                           	moviw	[0]fsr1
  6915  0FD4  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  6916  0FD5  00EA               	moviw	[1]fsr1
  6917  0FD6  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  6918  0FD7  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  6919  0FD8  086A               	movwf	fsr0l
  6920  0FD9  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  6921  0FDA  086B               	movwf	fsr0h
  6922  0FDB  0085               	movf	indf0,w ;code access
  6923  0FDC  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  6924  0FDD  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  6925  0FDE  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  6926  0FDF  086C               	movlb 0	; select bank0
  6927  0FE0  0140               	movwf	(fputc@c)
  6928  0FE1  00A0               	movlb 1	; select bank1
  6929  0FE2  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  6930  0FE3  086D               	movlb 0	; select bank0
  6931  0FE4  0140               	movwf	(fputc@c+1)
  6932  0FE5  00A1               	movlb 2	; select bank2
  6933  0FE6  0142               	movf	(vfpfcnvrt@fp)^0100h,w
  6934  0FE7  082F               	movlb 1	; select bank1
  6935  0FE8  0141               	movwf	(??_vfpfcnvrt+4)^080h+0
  6936  0FE9  00EE               	movf	(??_vfpfcnvrt+4)^080h+0,w
  6937  0FEA  086E               	movlb 0	; select bank0
  6938  0FEB  0140               	movwf	(fputc@fp)
  6939  0FEC  00A2               	fcall	_fputc
  6940  0FED  31A6  26D8  318C   	line	1363
  6941                           	
  6942                           l4511:	
  6943  0FF0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1363:     +
                                 +*fmt;
  6944                           	movlb 1	; select bank1
  6945  0FF0  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6946  0FF1  0868               	movwf	fsr1l
  6947  0FF2  0086               	movlw 1	; select bank2/3
  6948  0FF3  3001               	movwf fsr1h	
  6949  0FF4  0087               	
  6950                           	movlw	01h
  6951  0FF5  3001               	addwf	indf1,f
  6952  0FF6  0781               	addfsr	fsr1,1
  6953  0FF7  3141               	skipnc
  6954  0FF8  1803               	incf	indf1,f
  6955  0FF9  0A81               	line	1364
  6956                           	
  6957                           l4513:	
  6958  0FFA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1364:     r
                                 eturn 1;
  6959                           	movlw	01h
  6960  0FFA  3001               	movwf	(?_vfpfcnvrt)^080h
  6961  0FFB  00E8               	movlw	0
  6962  0FFC  3000               	movwf	((?_vfpfcnvrt)^080h)+1
  6963  0FFD  00E9               	goto	l566
  6964  0FFE  2FFF               	
  6965                           l4515:	
  6966  0FFF                     	line	1365
  6967                           	
  6968                           l566:	
  6969  0FFF                     	return
  6970  0FFF  0008               	opt stack 0
  6971                           GLOBAL	__end_of_vfpfcnvrt
  6972                           	__end_of_vfpfcnvrt:
  6973  1000                     	signat	_vfpfcnvrt,12410
  6974                           	global	_strncmp
  6975                           
  6976 ;; *************** function _strncmp *****************
  6977 ;; Defined at:
  6978 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  6979 ;; Parameters:    Size  Location     Type
  6980 ;;  _l              1    wreg     PTR const unsigned char 
  6981 ;;		 -> vfpfcnvrt@ct(3), 
  6982 ;;  _r              2    0[BANK0 ] PTR const unsigned char 
  6983 ;;		 -> STR_18(3), 
  6984 ;;  n               2    2[BANK0 ] unsigned int 
  6985 ;; Auto vars:     Size  Location     Type
  6986 ;;  _l              1    6[BANK0 ] PTR const unsigned char 
  6987 ;;		 -> vfpfcnvrt@ct(3), 
  6988 ;;  r               2    7[BANK0 ] PTR const unsigned char 
  6989 ;;		 -> STR_18(3), 
  6990 ;;  l               1    9[BANK0 ] PTR const unsigned char 
  6991 ;;		 -> vfpfcnvrt@ct(3), 
  6992 ;; Return value:  Size  Location     Type
  6993 ;;                  2    0[BANK0 ] int 
  6994 ;; Registers used:
  6995 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6996 ;; Tracked objects:
  6997 ;;		On entry : 0/0
  6998 ;;		On exit  : 0/0
  6999 ;;		Unchanged: 0/0
  7000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7001 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7002 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7003 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7004 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7005 ;;Total ram usage:       10 bytes
  7006 ;; Hardware stack levels used:    1
  7007 ;; Hardware stack levels required when called:    3
  7008 ;; This function calls:
  7009 ;;		Nothing
  7010 ;; This function is called by:
  7011 ;;		_vfpfcnvrt
  7012 ;; This function uses a non-reentrant model
  7013 ;;
  7014                           psect	text8,local,class=CODE,delta=2,merge=1,group=2
  7015                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  7016                           	line	3
  7017                           global __ptext8
  7018                           __ptext8:	;psect for function _strncmp
  7019  185D                     psect	text8
  7020                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  7021                           	line	3
  7022                           	global	__size_of_strncmp
  7023                           	__size_of_strncmp	equ	__end_of_strncmp-_strncmp
  7024  006B                     	
  7025                           _strncmp:	
  7026  185D                     ;incstack = 0
  7027                           	opt	stack 8
  7028                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  7029                           ;strncmp@_l stored from wreg
  7030                           	movlb 0	; select bank0
  7031  185D  0140               	movwf	(strncmp@_l)
  7032  185E  00A6               	line	5
  7033                           	
  7034                           l4363:	
  7035  185F                     	movf	(strncmp@_l),w
  7036  185F  0826               	movwf	(??_strncmp+0)+0
  7037  1860  00A4               	movf	(??_strncmp+0)+0,w
  7038  1861  0824               	movwf	(strncmp@l)
  7039  1862  00A9               	movf	(strncmp@_r+1),w
  7040  1863  0821               	movwf	(strncmp@r+1)
  7041  1864  00A8               	movf	(strncmp@_r),w
  7042  1865  0820               	movwf	(strncmp@r)
  7043  1866  00A7               	line	6
  7044                           	
  7045                           l4365:	
  7046  1867                     	movlw	01h
  7047  1867  3001               	subwf	(strncmp@n),f
  7048  1868  02A2               	movlw	0
  7049  1869  3000               	subwfb	(strncmp@n+1),f
  7050  186A  3BA3               		incf	(((strncmp@n))),w
  7051  186B  0A22               	skipz
  7052  186C  1D03               	goto	u6151
  7053  186D  2872               	incf	(((strncmp@n+1))),w
  7054  186E  0A23               	btfss	status,2
  7055  186F  1D03               	goto	u6151
  7056  1870  2872               	goto	u6150
  7057  1871  2873               u6151:
  7058  1872                     	goto	l4377
  7059  1872  2885               u6150:
  7060  1873                     	
  7061                           l4367:	
  7062  1873                     	clrf	(?_strncmp)
  7063  1873  01A0               	clrf	(?_strncmp+1)
  7064  1874  01A1               	goto	l1137
  7065  1875  28C7               	
  7066                           l4369:	
  7067  1876                     	goto	l1137
  7068  1876  28C7               	
  7069                           l1136:	
  7070  1877                     	line	7
  7071                           	goto	l4377
  7072  1877  2885               	
  7073                           l1139:	
  7074  1878                     	
  7075                           l4371:	
  7076  1878                     	movlw	low(01h)
  7077  1878  3001               	movwf	(??_strncmp+0)+0
  7078  1879  00A4               	movf	(??_strncmp+0)+0,w
  7079  187A  0824               	addwf	(strncmp@l),f
  7080  187B  07A9               	
  7081                           l4373:	
  7082  187C                     	movlw	01h
  7083  187C  3001               	addwf	(strncmp@r),f
  7084  187D  07A7               	movlw	0
  7085  187E  3000               	addwfc	(strncmp@r+1),f
  7086  187F  3DA8               	
  7087                           l4375:	
  7088  1880                     	movlw	01h
  7089  1880  3001               	subwf	(strncmp@n),f
  7090  1881  02A2               	movlw	0
  7091  1882  3000               	subwfb	(strncmp@n+1),f
  7092  1883  3BA3               	goto	l4377
  7093  1884  2885               	
  7094                           l1138:	
  7095  1885                     	
  7096                           l4377:	
  7097  1885                     	movf	(strncmp@l),w
  7098  1885  0829               	movwf	fsr1l
  7099  1886  0086               	movlw 1	; select bank2/3
  7100  1887  3001               	movwf fsr1h	
  7101  1888  0087               	
  7102                           	movf	(indf1),w
  7103  1889  0801               	btfsc	status,2
  7104  188A  1903               	goto	u6161
  7105  188B  288D               	goto	u6160
  7106  188C  288E               u6161:
  7107  188D                     	goto	l4385
  7108  188D  28AF               u6160:
  7109  188E                     	
  7110                           l4379:	
  7111  188E                     	movf	(strncmp@r),w
  7112  188E  0827               	movwf	fsr0l
  7113  188F  0084               	movf	((strncmp@r+1)),w
  7114  1890  0828               	movwf	fsr0h
  7115  1891  0085               	moviw	fsr0++
  7116  1892  0012               	btfsc	status,2
  7117  1893  1903               	goto	u6171
  7118  1894  2896               	goto	u6170
  7119  1895  2897               u6171:
  7120  1896                     	goto	l4385
  7121  1896  28AF               u6170:
  7122  1897                     	
  7123                           l4381:	
  7124  1897                     	movf	((strncmp@n)),w
  7125  1897  0822               iorwf	((strncmp@n+1)),w
  7126  1898  0423               	btfsc	status,2
  7127  1899  1903               	goto	u6181
  7128  189A  289C               	goto	u6180
  7129  189B  289D               u6181:
  7130  189C                     	goto	l4385
  7131  189C  28AF               u6180:
  7132  189D                     	
  7133                           l4383:	
  7134  189D                     	movf	(strncmp@r),w
  7135  189D  0827               	movwf	fsr0l
  7136  189E  0084               	movf	((strncmp@r+1)),w
  7137  189F  0828               	movwf	fsr0h
  7138  18A0  0085               	movf	indf0,w ;code access
  7139  18A1  0800               	movwf	(??_strncmp+0)+0
  7140  18A2  00A4               	movf	(strncmp@l),w
  7141  18A3  0829               	movwf	fsr1l
  7142  18A4  0086               	movlw 1	; select bank2/3
  7143  18A5  3001               	movwf fsr1h	
  7144  18A6  0087               	
  7145                           	movf	indf1,w
  7146  18A7  0801               	xorwf	(??_strncmp+0)+0,w
  7147  18A8  0624               	skipnz
  7148  18A9  1903               	goto	u6191
  7149  18AA  28AC               	goto	u6190
  7150  18AB  28AD               u6191:
  7151  18AC                     	goto	l4371
  7152  18AC  2878               u6190:
  7153  18AD                     	goto	l4385
  7154  18AD  28AF               	
  7155                           l1141:	
  7156  18AE                     	goto	l4385
  7157  18AE  28AF               	
  7158                           l1142:	
  7159  18AF                     	line	8
  7160                           	
  7161                           l4385:	
  7162  18AF                     	movf	(strncmp@r),w
  7163  18AF  0827               	movwf	fsr0l
  7164  18B0  0084               	movf	((strncmp@r+1)),w
  7165  18B1  0828               	movwf	fsr0h
  7166  18B2  0085               	movf	indf0,w ;code access
  7167  18B3  0800               	movwf	(??_strncmp+0)+0
  7168  18B4  00A4               	clrf	(??_strncmp+0)+0+1
  7169  18B5  01A5               	comf	(??_strncmp+0)+0,f
  7170  18B6  09A4               	comf	(??_strncmp+0)+1,f
  7171  18B7  09A5               	incf	(??_strncmp+0)+0,f
  7172  18B8  0AA4               	skipnz
  7173  18B9  1903               	incf	(??_strncmp+0)+1,f
  7174  18BA  0AA5               	movf	(strncmp@l),w
  7175  18BB  0829               	movwf	fsr1l
  7176  18BC  0086               	movlw 1	; select bank2/3
  7177  18BD  3001               	movwf fsr1h	
  7178  18BE  0087               	
  7179                           	movf	indf1,w
  7180  18BF  0801               	addwf	0+(??_strncmp+0)+0,w
  7181  18C0  0724               	movwf	(?_strncmp)
  7182  18C1  00A0               	movf	1+(??_strncmp+0)+0,w
  7183  18C2  0825               	skipnc
  7184  18C3  1803               	incf	1+(??_strncmp+0)+0,w
  7185  18C4  0A25               	movwf	((?_strncmp))+1
  7186  18C5  00A1               	goto	l1137
  7187  18C6  28C7               	
  7188                           l4387:	
  7189  18C7                     	line	9
  7190                           	
  7191                           l1137:	
  7192  18C7                     	return
  7193  18C7  0008               	opt stack 0
  7194                           GLOBAL	__end_of_strncmp
  7195                           	__end_of_strncmp:
  7196  18C8                     	signat	_strncmp,12410
  7197                           	global	_stoa
  7198                           
  7199 ;; *************** function _stoa *****************
  7200 ;; Defined at:
  7201 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  7202 ;; Parameters:    Size  Location     Type
  7203 ;;  fp              1    wreg     PTR struct _IO_FILE
  7204 ;;		 -> sprintf@f(5), 
  7205 ;;  s               1    8[BANK0 ] PTR unsigned char 
  7206 ;;		 -> ?_sprintf(2), showMenu@s12(12), 
  7207 ;; Auto vars:     Size  Location     Type
  7208 ;;  fp              1   24[BANK0 ] PTR struct _IO_FILE
  7209 ;;		 -> sprintf@f(5), 
  7210 ;;  nuls            7   13[BANK0 ] unsigned char [7]
  7211 ;;  l               2   29[BANK0 ] int 
  7212 ;;  p               2   27[BANK0 ] int 
  7213 ;;  cp              2   25[BANK0 ] PTR unsigned char 
  7214 ;;		 -> ?_sprintf(2), stoa@nuls(7), showMenu@s12(12), 
  7215 ;;  w               2   22[BANK0 ] int 
  7216 ;;  i               2   20[BANK0 ] int 
  7217 ;; Return value:  Size  Location     Type
  7218 ;;                  2    8[BANK0 ] int 
  7219 ;; Registers used:
  7220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7221 ;; Tracked objects:
  7222 ;;		On entry : 0/0
  7223 ;;		On exit  : 0/0
  7224 ;;		Unchanged: 0/0
  7225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7226 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7227 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7228 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7229 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7230 ;;Total ram usage:       23 bytes
  7231 ;; Hardware stack levels used:    1
  7232 ;; Hardware stack levels required when called:    5
  7233 ;; This function calls:
  7234 ;;		_fputc
  7235 ;;		_strlen
  7236 ;; This function is called by:
  7237 ;;		_vfpfcnvrt
  7238 ;; This function uses a non-reentrant model
  7239 ;;
  7240                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  7241                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  7242                           	line	546
  7243                           global __ptext9
  7244                           __ptext9:	;psect for function _stoa
  7245  1E36                     psect	text9
  7246                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  7247                           	line	546
  7248                           	global	__size_of_stoa
  7249                           	__size_of_stoa	equ	__end_of_stoa-_stoa
  7250  00E3                     	
  7251                           _stoa:	
  7252  1E36                     ;incstack = 0
  7253                           	opt	stack 6
  7254                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7255                           ;stoa@fp stored from wreg
  7256                           	movlb 0	; select bank0
  7257  1E36  0140               	movwf	(stoa@fp)
  7258  1E37  00B8               	line	548
  7259                           	
  7260                           l4269:	
  7261  1E38                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 546: static
                                  int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\
                                 common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\commo
                                 n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7262                           	movlw	low(stoa@F1143)
  7263  1E38  305D               	movwf	fsr1l
  7264  1E39  0086               	movlw	high(stoa@F1143)
  7265  1E3A  3002               	movwf	fsr1h
  7266  1E3B  0087               	movlw	low(stoa@nuls)
  7267  1E3C  302D               	movwf	fsr0l
  7268  1E3D  0084               	movlw	high(stoa@nuls)
  7269  1E3E  3000               	movwf	fsr0h
  7270  1E3F  0085               	movlw	7
  7271  1E40  3007               	movwf	(??_stoa+0)+0
  7272  1E41  00AA               u5990:
  7273  1E42                     	moviw	fsr1++
  7274  1E42  0016               	movwi	fsr0++
  7275  1E43  001A               	decfsz	(??_stoa+0)+0,f
  7276  1E44  0BAA               	goto	u5990
  7277  1E45  2E42               	line	552
  7278                           	
  7279                           l4271:	
  7280  1E46                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 549:     in
                                 t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c
                                 : 552:     cp = s;
  7281                           	movf	(stoa@s),w
  7282  1E46  0828               	movwf	(stoa@cp)
  7283  1E47  00B9               	movlw	0x1
  7284  1E48  3001               
  7285                           	movwf	(stoa@cp+1)
  7286  1E49  00BA               	line	553
  7287                           	
  7288                           l4273:	
  7289  1E4A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 553:     if
                                  (!cp) {
  7290                           	movf	((stoa@cp)),w
  7291  1E4A  0839               iorwf	((stoa@cp+1)),w
  7292  1E4B  043A               	btfss	status,2
  7293  1E4C  1D03               	goto	u6001
  7294  1E4D  2E4F               	goto	u6000
  7295  1E4E  2E50               u6001:
  7296  1E4F                     	goto	l4277
  7297  1E4F  2E55               u6000:
  7298  1E50                     	line	554
  7299                           	
  7300                           l4275:	
  7301  1E50                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 554:       
                                   cp = nuls;
  7302                           	movlw	low(stoa@nuls)
  7303  1E50  302D               	movwf	(stoa@cp)
  7304  1E51  00B9               	movlw	high(stoa@nuls)
  7305  1E52  3000               	movwf	(stoa@cp+1)
  7306  1E53  00BA               	goto	l4277
  7307  1E54  2E55               	line	555
  7308                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 555:     }

  7309                           	
  7310                           l521:	
  7311  1E55                     	line	558
  7312                           	
  7313                           l4277:	
  7314  1E55                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 558:     l 
                                 = strlen(cp);
  7315                           	movf	(stoa@cp+1),w
  7316  1E55  083A               	movwf	(strlen@s+1)
  7317  1E56  00A1               	movf	(stoa@cp),w
  7318  1E57  0839               	movwf	(strlen@s)
  7319  1E58  00A0               	fcall	_strlen
  7320  1E59  31A2  22BA  319E   	movlb 0	; select bank0
  7321  1E5C  0140               	movf	(1+(?_strlen)),w
  7322  1E5D  0821               	movwf	(stoa@l+1)
  7323  1E5E  00BE               	movf	(0+(?_strlen)),w
  7324  1E5F  0820               	movwf	(stoa@l)
  7325  1E60  00BD               	line	559
  7326                           	
  7327                           l4279:	
  7328  1E61                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 559:     p 
                                 = prec;
  7329                           	movlb 2	; select bank2
  7330  1E61  0142               	movf	(_prec+1)^0100h,w
  7331  1E62  0867               	movlb 0	; select bank0
  7332  1E63  0140               	movwf	(stoa@p+1)
  7333  1E64  00BC               	movlb 2	; select bank2
  7334  1E65  0142               	movf	(_prec)^0100h,w
  7335  1E66  0866               	movlb 0	; select bank0
  7336  1E67  0140               	movwf	(stoa@p)
  7337  1E68  00BB               	line	560
  7338                           	
  7339                           l4281:	
  7340  1E69                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 560:     l 
                                 = (!(p < 0) && (p < l)) ? p : l;
  7341                           	btfsc	(stoa@p+1),7
  7342  1E69  1BBC               	goto	u6011
  7343  1E6A  2E6C               	goto	u6010
  7344  1E6B  2E6D               u6011:
  7345  1E6C                     	goto	l525
  7346  1E6C  2E82               u6010:
  7347  1E6D                     	
  7348                           l4283:	
  7349  1E6D                     	movf	(stoa@p+1),w
  7350  1E6D  083C               	xorlw	80h
  7351  1E6E  3A80               	movwf	(??_stoa+0)+0
  7352  1E6F  00AA               	movf	(stoa@l+1),w
  7353  1E70  083E               	xorlw	80h
  7354  1E71  3A80               	subwf	(??_stoa+0)+0,w
  7355  1E72  022A               	skipz
  7356  1E73  1D03               	goto	u6025
  7357  1E74  2E77               	movf	(stoa@l),w
  7358  1E75  083D               	subwf	(stoa@p),w
  7359  1E76  023B               u6025:
  7360  1E77                     
  7361                           	skipc
  7362  1E77  1C03               	goto	u6021
  7363  1E78  2E7A               	goto	u6020
  7364  1E79  2E7B               u6021:
  7365  1E7A                     	goto	l4285
  7366  1E7A  2E7D               u6020:
  7367  1E7B                     	goto	l525
  7368  1E7B  2E82               	
  7369                           l527:	
  7370  1E7C                     	goto	l525
  7371  1E7C  2E82               	
  7372                           l523:	
  7373  1E7D                     	
  7374                           l4285:	
  7375  1E7D                     	movlb 0	; select bank0
  7376  1E7D  0140               	movf	(stoa@p+1),w
  7377  1E7E  083C               	movwf	(stoa@l+1)
  7378  1E7F  00BE               	movf	(stoa@p),w
  7379  1E80  083B               	movwf	(stoa@l)
  7380  1E81  00BD               	
  7381                           l525:	
  7382  1E82                     	line	561
  7383                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 561:     p 
                                 = l;
  7384                           	movlb 0	; select bank0
  7385  1E82  0140               	movf	(stoa@l+1),w
  7386  1E83  083E               	movwf	(stoa@p+1)
  7387  1E84  00BC               	movf	(stoa@l),w
  7388  1E85  083D               	movwf	(stoa@p)
  7389  1E86  00BB               	line	562
  7390                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 562:     w 
                                 = width;
  7391                           	movlb 2	; select bank2
  7392  1E87  0142               	movf	(_width+1)^0100h,w
  7393  1E88  0865               	movlb 0	; select bank0
  7394  1E89  0140               	movwf	(stoa@w+1)
  7395  1E8A  00B7               	movlb 2	; select bank2
  7396  1E8B  0142               	movf	(_width)^0100h,w
  7397  1E8C  0864               	movlb 0	; select bank0
  7398  1E8D  0140               	movwf	(stoa@w)
  7399  1E8E  00B6               	line	565
  7400                           	
  7401                           l4287:	
  7402  1E8F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 565:     if
                                  (!(flags & (1 << 0))) {
  7403                           	movlb 2	; select bank2
  7404  1E8F  0142               	btfsc	(_flags)^0100h,(0)&7
  7405  1E90  1868               	goto	u6031
  7406  1E91  2E93               	goto	u6030
  7407  1E92  2E94               u6031:
  7408  1E93                     	goto	l4297
  7409  1E93  2EB9               u6030:
  7410  1E94                     	goto	l4295
  7411  1E94  2EA8               	line	566
  7412                           	
  7413                           l4289:	
  7414  1E95                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 566:       
                                   while (l < w) {
  7415                           	goto	l4295
  7416  1E95  2EA8               	
  7417                           l530:	
  7418  1E96                     	line	567
  7419                           	
  7420                           l4291:	
  7421  1E96                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 567:       
                                       fputc(' ', fp);
  7422                           	movlw	020h
  7423  1E96  3020               	movlb 0	; select bank0
  7424  1E97  0140               	movwf	(fputc@c)
  7425  1E98  00A0               	movlw	0
  7426  1E99  3000               	movwf	((fputc@c))+1
  7427  1E9A  00A1               	movf	(stoa@fp),w
  7428  1E9B  0838               	movwf	(??_stoa+0)+0
  7429  1E9C  00AA               	movf	(??_stoa+0)+0,w
  7430  1E9D  082A               	movwf	(fputc@fp)
  7431  1E9E  00A2               	fcall	_fputc
  7432  1E9F  31A6  26D8  319E   	line	568
  7433                           	
  7434                           l4293:	
  7435  1EA2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 568:       
                                       ++l;
  7436                           	movlw	01h
  7437  1EA2  3001               	movlb 0	; select bank0
  7438  1EA3  0140               	addwf	(stoa@l),f
  7439  1EA4  07BD               	movlw	0
  7440  1EA5  3000               	addwfc	(stoa@l+1),f
  7441  1EA6  3DBE               	goto	l4295
  7442  1EA7  2EA8               	line	569
  7443                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 569:       
                                   }
  7444                           	
  7445                           l529:	
  7446  1EA8                     	line	566
  7447                           	
  7448                           l4295:	
  7449  1EA8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 566:       
                                   while (l < w) {
  7450                           	movlb 0	; select bank0
  7451  1EA8  0140               	movf	(stoa@l+1),w
  7452  1EA9  083E               	xorlw	80h
  7453  1EAA  3A80               	movwf	(??_stoa+0)+0
  7454  1EAB  00AA               	movf	(stoa@w+1),w
  7455  1EAC  0837               	xorlw	80h
  7456  1EAD  3A80               	subwf	(??_stoa+0)+0,w
  7457  1EAE  022A               	skipz
  7458  1EAF  1D03               	goto	u6045
  7459  1EB0  2EB3               	movf	(stoa@w),w
  7460  1EB1  0836               	subwf	(stoa@l),w
  7461  1EB2  023D               u6045:
  7462  1EB3                     
  7463                           	skipc
  7464  1EB3  1C03               	goto	u6041
  7465  1EB4  2EB6               	goto	u6040
  7466  1EB5  2EB7               u6041:
  7467  1EB6                     	goto	l4291
  7468  1EB6  2E96               u6040:
  7469  1EB7                     	goto	l4297
  7470  1EB7  2EB9               	
  7471                           l531:	
  7472  1EB8                     	goto	l4297
  7473  1EB8  2EB9               	line	570
  7474                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 570:     }

  7475                           	
  7476                           l528:	
  7477  1EB9                     	line	573
  7478                           	
  7479                           l4297:	
  7480  1EB9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 573:     i 
                                 = 0;
  7481                           	movlb 0	; select bank0
  7482  1EB9  0140               	clrf	(stoa@i)
  7483  1EBA  01B4               	clrf	(stoa@i+1)
  7484  1EBB  01B5               	line	574
  7485                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 574:     wh
                                 ile (i < p) {
  7486                           	goto	l4305
  7487  1EBC  2EDA               	
  7488                           l533:	
  7489  1EBD                     	line	575
  7490                           	
  7491                           l4299:	
  7492  1EBD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 575:       
                                   fputc(*cp, fp);
  7493                           	movlb 0	; select bank0
  7494  1EBD  0140               	movf	(stoa@cp),w
  7495  1EBE  0839               	movwf	fsr1l
  7496  1EBF  0086               	movf	(stoa@cp+1),w
  7497  1EC0  083A               	movwf	fsr1h
  7498  1EC1  0087               
  7499                           	movf	indf1,w
  7500  1EC2  0801               	movwf	(??_stoa+0)+0
  7501  1EC3  00AA               	clrf	(??_stoa+0)+0+1
  7502  1EC4  01AB               	movf	0+(??_stoa+0)+0,w
  7503  1EC5  082A               	movwf	(fputc@c)
  7504  1EC6  00A0               	movf	1+(??_stoa+0)+0,w
  7505  1EC7  082B               	movwf	(fputc@c+1)
  7506  1EC8  00A1               	movf	(stoa@fp),w
  7507  1EC9  0838               	movwf	(??_stoa+2)+0
  7508  1ECA  00AC               	movf	(??_stoa+2)+0,w
  7509  1ECB  082C               	movwf	(fputc@fp)
  7510  1ECC  00A2               	fcall	_fputc
  7511  1ECD  31A6  26D8  319E   	line	576
  7512                           	
  7513                           l4301:	
  7514  1ED0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 576:       
                                   ++cp;
  7515                           	movlw	01h
  7516  1ED0  3001               	movlb 0	; select bank0
  7517  1ED1  0140               	addwf	(stoa@cp),f
  7518  1ED2  07B9               	movlw	0
  7519  1ED3  3000               	addwfc	(stoa@cp+1),f
  7520  1ED4  3DBA               	line	577
  7521                           	
  7522                           l4303:	
  7523  1ED5                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 577:       
                                   ++i;
  7524                           	movlw	01h
  7525  1ED5  3001               	addwf	(stoa@i),f
  7526  1ED6  07B4               	movlw	0
  7527  1ED7  3000               	addwfc	(stoa@i+1),f
  7528  1ED8  3DB5               	goto	l4305
  7529  1ED9  2EDA               	line	578
  7530                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 578:     }

  7531                           	
  7532                           l532:	
  7533  1EDA                     	line	574
  7534                           	
  7535                           l4305:	
  7536  1EDA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 574:     wh
                                 ile (i < p) {
  7537                           	movf	(stoa@i+1),w
  7538  1EDA  0835               	xorlw	80h
  7539  1EDB  3A80               	movwf	(??_stoa+0)+0
  7540  1EDC  00AA               	movf	(stoa@p+1),w
  7541  1EDD  083C               	xorlw	80h
  7542  1EDE  3A80               	subwf	(??_stoa+0)+0,w
  7543  1EDF  022A               	skipz
  7544  1EE0  1D03               	goto	u6055
  7545  1EE1  2EE4               	movf	(stoa@p),w
  7546  1EE2  083B               	subwf	(stoa@i),w
  7547  1EE3  0234               u6055:
  7548  1EE4                     
  7549                           	skipc
  7550  1EE4  1C03               	goto	u6051
  7551  1EE5  2EE7               	goto	u6050
  7552  1EE6  2EE8               u6051:
  7553  1EE7                     	goto	l4299
  7554  1EE7  2EBD               u6050:
  7555  1EE8                     	
  7556                           l534:	
  7557  1EE8                     	line	581
  7558                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 581:     if
                                  (flags & (1 << 0)) {
  7559                           	movlb 2	; select bank2
  7560  1EE8  0142               	btfss	(_flags)^0100h,(0)&7
  7561  1EE9  1C68               	goto	u6061
  7562  1EEA  2EEC               	goto	u6060
  7563  1EEB  2EED               u6061:
  7564  1EEC                     	goto	l4315
  7565  1EEC  2F12               u6060:
  7566  1EED                     	goto	l4313
  7567  1EED  2F01               	line	582
  7568                           	
  7569                           l4307:	
  7570  1EEE                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 582:       
                                   while (l < w) {
  7571                           	goto	l4313
  7572  1EEE  2F01               	
  7573                           l537:	
  7574  1EEF                     	line	583
  7575                           	
  7576                           l4309:	
  7577  1EEF                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 583:       
                                       fputc(' ', fp);
  7578                           	movlw	020h
  7579  1EEF  3020               	movlb 0	; select bank0
  7580  1EF0  0140               	movwf	(fputc@c)
  7581  1EF1  00A0               	movlw	0
  7582  1EF2  3000               	movwf	((fputc@c))+1
  7583  1EF3  00A1               	movf	(stoa@fp),w
  7584  1EF4  0838               	movwf	(??_stoa+0)+0
  7585  1EF5  00AA               	movf	(??_stoa+0)+0,w
  7586  1EF6  082A               	movwf	(fputc@fp)
  7587  1EF7  00A2               	fcall	_fputc
  7588  1EF8  31A6  26D8  319E   	line	584
  7589                           	
  7590                           l4311:	
  7591  1EFB                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 584:       
                                       ++l;
  7592                           	movlw	01h
  7593  1EFB  3001               	movlb 0	; select bank0
  7594  1EFC  0140               	addwf	(stoa@l),f
  7595  1EFD  07BD               	movlw	0
  7596  1EFE  3000               	addwfc	(stoa@l+1),f
  7597  1EFF  3DBE               	goto	l4313
  7598  1F00  2F01               	line	585
  7599                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 585:       
                                   }
  7600                           	
  7601                           l536:	
  7602  1F01                     	line	582
  7603                           	
  7604                           l4313:	
  7605  1F01                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 582:       
                                   while (l < w) {
  7606                           	movlb 0	; select bank0
  7607  1F01  0140               	movf	(stoa@l+1),w
  7608  1F02  083E               	xorlw	80h
  7609  1F03  3A80               	movwf	(??_stoa+0)+0
  7610  1F04  00AA               	movf	(stoa@w+1),w
  7611  1F05  0837               	xorlw	80h
  7612  1F06  3A80               	subwf	(??_stoa+0)+0,w
  7613  1F07  022A               	skipz
  7614  1F08  1D03               	goto	u6075
  7615  1F09  2F0C               	movf	(stoa@w),w
  7616  1F0A  0836               	subwf	(stoa@l),w
  7617  1F0B  023D               u6075:
  7618  1F0C                     
  7619                           	skipc
  7620  1F0C  1C03               	goto	u6071
  7621  1F0D  2F0F               	goto	u6070
  7622  1F0E  2F10               u6071:
  7623  1F0F                     	goto	l4309
  7624  1F0F  2EEF               u6070:
  7625  1F10                     	goto	l4315
  7626  1F10  2F12               	
  7627                           l538:	
  7628  1F11                     	goto	l4315
  7629  1F11  2F12               	line	586
  7630                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 586:     }

  7631                           	
  7632                           l535:	
  7633  1F12                     	line	588
  7634                           	
  7635                           l4315:	
  7636  1F12                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 588:     re
                                 turn l;
  7637                           	movlb 0	; select bank0
  7638  1F12  0140               	movf	(stoa@l+1),w
  7639  1F13  083E               	movwf	(?_stoa+1)
  7640  1F14  00A9               	movf	(stoa@l),w
  7641  1F15  083D               	movwf	(?_stoa)
  7642  1F16  00A8               	goto	l539
  7643  1F17  2F18               	
  7644                           l4317:	
  7645  1F18                     	line	589
  7646                           	
  7647                           l539:	
  7648  1F18                     	return
  7649  1F18  0008               	opt stack 0
  7650                           GLOBAL	__end_of_stoa
  7651                           	__end_of_stoa:
  7652  1F19                     	signat	_stoa,8314
  7653                           	global	_efgtoa
  7654                           
  7655 ;; *************** function _efgtoa *****************
  7656 ;; Defined at:
  7657 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  7658 ;; Parameters:    Size  Location     Type
  7659 ;;  fp              1    wreg     PTR struct _IO_FILE
  7660 ;;		 -> sprintf@f(5), 
  7661 ;;  f               4   10[BANK1 ] PTR struct _IO_FILE
  7662 ;;  c               1   14[BANK1 ] unsigned char 
  7663 ;; Auto vars:     Size  Location     Type
  7664 ;;  fp              1   43[BANK1 ] PTR struct _IO_FILE
  7665 ;;		 -> sprintf@f(5), 
  7666 ;;  u               4   68[BANK1 ] PTR struct _IO_FILE
  7667 ;;  g               4   60[BANK1 ] PTR struct _IO_FILE
  7668 ;;  l               4   54[BANK1 ] PTR struct _IO_FILE
  7669 ;;  h               4   50[BANK1 ] PTR struct _IO_FILE
  7670 ;;  ou              4   15[BANK1 ] PTR struct _IO_FILE
  7671 ;;  n               2   66[BANK1 ] int 
  7672 ;;  e               2   64[BANK1 ] int 
  7673 ;;  i               2   58[BANK1 ] int 
  7674 ;;  w               2   47[BANK1 ] int 
  7675 ;;  p               2   44[BANK1 ] int 
  7676 ;;  sign            2   41[BANK1 ] int 
  7677 ;;  d               2   39[BANK1 ] int 
  7678 ;;  ne              2   37[BANK1 ] int 
  7679 ;;  m               2   35[BANK1 ] int 
  7680 ;;  pp              2   33[BANK1 ] int 
  7681 ;;  t               2   31[BANK1 ] int 
  7682 ;;  mode            1   49[BANK1 ] unsigned char 
  7683 ;;  nmode           1   46[BANK1 ] unsigned char 
  7684 ;; Return value:  Size  Location     Type
  7685 ;;                  2   10[BANK1 ] int 
  7686 ;; Registers used:
  7687 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7688 ;; Tracked objects:
  7689 ;;		On entry : 0/0
  7690 ;;		On exit  : 0/0
  7691 ;;		Unchanged: 0/0
  7692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7693 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7694 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7695 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7696 ;;      Totals:         0       4      62       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7697 ;;Total ram usage:       66 bytes
  7698 ;; Hardware stack levels used:    1
  7699 ;; Hardware stack levels required when called:    7
  7700 ;; This function calls:
  7701 ;;		___awdiv
  7702 ;;		___awmod
  7703 ;;		___fladd
  7704 ;;		___fldiv
  7705 ;;		___fleq
  7706 ;;		___flge
  7707 ;;		___flmul
  7708 ;;		___flneg
  7709 ;;		___flsub
  7710 ;;		___fltol
  7711 ;;		___fpclassifyf
  7712 ;;		_floorf
  7713 ;;		_isupper
  7714 ;;		_pad
  7715 ;;		_strcpy
  7716 ;;		_tolower
  7717 ;; This function is called by:
  7718 ;;		_vfpfcnvrt
  7719 ;; This function uses a non-reentrant model
  7720 ;;
  7721                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  7722                           	line	319
  7723                           global __ptext10
  7724                           __ptext10:	;psect for function _efgtoa
  7725  100D                     psect	text10
  7726                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  7727                           	line	319
  7728                           	global	__size_of_efgtoa
  7729                           	__size_of_efgtoa	equ	__end_of_efgtoa-_efgtoa
  7730  F7B8                     	
  7731                           _efgtoa:	
  7732  100D                     ;incstack = 0
  7733                           	opt	stack 4
  7734                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7735                           ;efgtoa@fp stored from wreg
  7736                           	movlb 1	; select bank1
  7737  100D  0141               	movwf	(efgtoa@fp)^080h
  7738  100E  00CB               	line	326
  7739                           	
  7740                           l3977:	
  7741  100F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 319: static
                                  int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.00\
                                 pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\s
                                 ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
                                 xc8\v2.00\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
                                 t, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 323:  
                                    long double g, h, l, ou, u;
  7742                           	clrf	(efgtoa@sign)^080h
  7743  100F  01C9               	clrf	(efgtoa@sign+1)^080h
  7744  1010  01CA               	line	327
  7745                           	
  7746                           l3979:	
  7747  1011                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 327:     g 
                                 = f;
  7748                           	movf	(efgtoa@f+3)^080h,w
  7749  1011  082D               	movwf	(efgtoa@g+3)^080h
  7750  1012  00DF               	movf	(efgtoa@f+2)^080h,w
  7751  1013  082C               	movwf	(efgtoa@g+2)^080h
  7752  1014  00DE               	movf	(efgtoa@f+1)^080h,w
  7753  1015  082B               	movwf	(efgtoa@g+1)^080h
  7754  1016  00DD               	movf	(efgtoa@f)^080h,w
  7755  1017  082A               	movwf	(efgtoa@g)^080h
  7756  1018  00DC               
  7757                           	line	328
  7758                           	
  7759                           l3981:	
  7760  1019                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 328:     if
                                  (g < 0.0) {
  7761                           	movf	(efgtoa@g+3)^080h,w
  7762  1019  085F               	movlb 0	; select bank0
  7763  101A  0140               	movwf	(___flge@ff1+3)
  7764  101B  00CB               	movlb 1	; select bank1
  7765  101C  0141               	movf	(efgtoa@g+2)^080h,w
  7766  101D  085E               	movlb 0	; select bank0
  7767  101E  0140               	movwf	(___flge@ff1+2)
  7768  101F  00CA               	movlb 1	; select bank1
  7769  1020  0141               	movf	(efgtoa@g+1)^080h,w
  7770  1021  085D               	movlb 0	; select bank0
  7771  1022  0140               	movwf	(___flge@ff1+1)
  7772  1023  00C9               	movlb 1	; select bank1
  7773  1024  0141               	movf	(efgtoa@g)^080h,w
  7774  1025  085C               	movlb 0	; select bank0
  7775  1026  0140               	movwf	(___flge@ff1)
  7776  1027  00C8               
  7777                           	movlw	0x0
  7778  1028  3000               	movwf	(___flge@ff2+3)
  7779  1029  00CF               	movlw	0x0
  7780  102A  3000               	movwf	(___flge@ff2+2)
  7781  102B  00CE               	movlw	0x0
  7782  102C  3000               	movwf	(___flge@ff2+1)
  7783  102D  00CD               	movlw	0x0
  7784  102E  3000               	movwf	(___flge@ff2)
  7785  102F  00CC               
  7786                           	fcall	___flge
  7787  1030  319B  2358  3190   	btfsc	status,0
  7788  1033  1803               	goto	u5471
  7789  1034  2836               	goto	u5470
  7790  1035  2837               u5471:
  7791  1036                     	goto	l3987
  7792  1036  285F               u5470:
  7793  1037                     	line	329
  7794                           	
  7795                           l3983:	
  7796  1037                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 329:       
                                   sign = 1;
  7797                           	movlw	01h
  7798  1037  3001               	movlb 1	; select bank1
  7799  1038  0141               	movwf	(efgtoa@sign)^080h
  7800  1039  00C9               	movlw	0
  7801  103A  3000               	movwf	((efgtoa@sign)^080h)+1
  7802  103B  00CA               	line	330
  7803                           	
  7804                           l3985:	
  7805  103C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 330:       
                                   g = -g;
  7806                           	movf	(efgtoa@g+3)^080h,w
  7807  103C  085F               	movlb 0	; select bank0
  7808  103D  0140               	movwf	(___flneg@f1+3)
  7809  103E  00A3               	movlb 1	; select bank1
  7810  103F  0141               	movf	(efgtoa@g+2)^080h,w
  7811  1040  085E               	movlb 0	; select bank0
  7812  1041  0140               	movwf	(___flneg@f1+2)
  7813  1042  00A2               	movlb 1	; select bank1
  7814  1043  0141               	movf	(efgtoa@g+1)^080h,w
  7815  1044  085D               	movlb 0	; select bank0
  7816  1045  0140               	movwf	(___flneg@f1+1)
  7817  1046  00A1               	movlb 1	; select bank1
  7818  1047  0141               	movf	(efgtoa@g)^080h,w
  7819  1048  085C               	movlb 0	; select bank0
  7820  1049  0140               	movwf	(___flneg@f1)
  7821  104A  00A0               
  7822                           	fcall	___flneg
  7823  104B  31A1  2196  3190   	movlb 0	; select bank0
  7824  104E  0140               	movf	(3+(?___flneg)),w
  7825  104F  0823               	movlb 1	; select bank1
  7826  1050  0141               	movwf	(efgtoa@g+3)^080h
  7827  1051  00DF               	movlb 0	; select bank0
  7828  1052  0140               	movf	(2+(?___flneg)),w
  7829  1053  0822               	movlb 1	; select bank1
  7830  1054  0141               	movwf	(efgtoa@g+2)^080h
  7831  1055  00DE               	movlb 0	; select bank0
  7832  1056  0140               	movf	(1+(?___flneg)),w
  7833  1057  0821               	movlb 1	; select bank1
  7834  1058  0141               	movwf	(efgtoa@g+1)^080h
  7835  1059  00DD               	movlb 0	; select bank0
  7836  105A  0140               	movf	(0+(?___flneg)),w
  7837  105B  0820               	movlb 1	; select bank1
  7838  105C  0141               	movwf	(efgtoa@g)^080h
  7839  105D  00DC               
  7840                           	goto	l3987
  7841  105E  285F               	line	331
  7842                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 331:     }

  7843                           	
  7844                           l428:	
  7845  105F                     	line	334
  7846                           	
  7847                           l3987:	
  7848  105F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 334:     n 
                                 = 0;
  7849                           	movlb 1	; select bank1
  7850  105F  0141               	clrf	(efgtoa@n)^080h
  7851  1060  01E2               	clrf	(efgtoa@n+1)^080h
  7852  1061  01E3               	line	335
  7853                           	
  7854                           l3989:	
  7855  1062                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 335:     w 
                                 = width;
  7856                           	movlb 2	; select bank2
  7857  1062  0142               	movf	(_width+1)^0100h,w
  7858  1063  0865               	movlb 1	; select bank1
  7859  1064  0141               	movwf	(efgtoa@w+1)^080h
  7860  1065  00D0               	movlb 2	; select bank2
  7861  1066  0142               	movf	(_width)^0100h,w
  7862  1067  0864               	movlb 1	; select bank1
  7863  1068  0141               	movwf	(efgtoa@w)^080h
  7864  1069  00CF               	line	336
  7865                           	
  7866                           l3991:	
  7867  106A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 336:     if
                                  (sign || (flags & (1 << 2))) {
  7868                           	movf	((efgtoa@sign)^080h),w
  7869  106A  0849               iorwf	((efgtoa@sign+1)^080h),w
  7870  106B  044A               	btfss	status,2
  7871  106C  1D03               	goto	u5481
  7872  106D  286F               	goto	u5480
  7873  106E  2870               u5481:
  7874  106F                     	goto	l3995
  7875  106F  2876               u5480:
  7876  1070                     	
  7877                           l3993:	
  7878  1070                     	movlb 2	; select bank2
  7879  1070  0142               	btfss	(_flags)^0100h,(2)&7
  7880  1071  1D68               	goto	u5491
  7881  1072  2874               	goto	u5490
  7882  1073  2875               u5491:
  7883  1074                     	goto	l4007
  7884  1074  289D               u5490:
  7885  1075                     	goto	l3995
  7886  1075  2876               	
  7887                           l431:	
  7888  1076                     	line	337
  7889                           	
  7890                           l3995:	
  7891  1076                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 337:       
                                   dbuf[n] = sign ? '-' : '+';
  7892                           	movlb 1	; select bank1
  7893  1076  0141               	movf	((efgtoa@sign)^080h),w
  7894  1077  0849               iorwf	((efgtoa@sign+1)^080h),w
  7895  1078  044A               	btfss	status,2
  7896  1079  1D03               	goto	u5501
  7897  107A  287C               	goto	u5500
  7898  107B  287D               u5501:
  7899  107C                     	goto	l3999
  7900  107C  2882               u5500:
  7901  107D                     	
  7902                           l3997:	
  7903  107D                     	movlw	02Bh
  7904  107D  302B               	movwf	(_efgtoa$908)^080h
  7905  107E  00B3               	movlw	0
  7906  107F  3000               	movwf	((_efgtoa$908)^080h)+1
  7907  1080  00B4               	goto	l4001
  7908  1081  2887               	
  7909                           l433:	
  7910  1082                     	
  7911                           l3999:	
  7912  1082                     	movlw	02Dh
  7913  1082  302D               	movwf	(_efgtoa$908)^080h
  7914  1083  00B3               	movlw	0
  7915  1084  3000               	movwf	((_efgtoa$908)^080h)+1
  7916  1085  00B4               	goto	l4001
  7917  1086  2887               	
  7918                           l435:	
  7919  1087                     	
  7920                           l4001:	
  7921  1087                     	movf	(_efgtoa$908)^080h,w
  7922  1087  0833               	movlb 0	; select bank0
  7923  1088  0140               	movwf	(??_efgtoa+0)+0
  7924  1089  00EC               	movlb 1	; select bank1
  7925  108A  0141               	movf	(efgtoa@n)^080h,w
  7926  108B  0862               	addlw	low(_dbuf|((0x3)<<8))&0ffh
  7927  108C  3E20               	movwf	fsr1l
  7928  108D  0086               	movlw 3	; select bank6/7
  7929  108E  3003               	movwf fsr1h	
  7930  108F  0087               	
  7931                           	movlb 0	; select bank0
  7932  1090  0140               	movf	(??_efgtoa+0)+0,w
  7933  1091  086C               	movwf	indf1
  7934  1092  0081               	line	338
  7935                           	
  7936                           l4003:	
  7937  1093                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 338:       
                                   ++n;
  7938                           	movlw	01h
  7939  1093  3001               	movlb 1	; select bank1
  7940  1094  0141               	addwf	(efgtoa@n)^080h,f
  7941  1095  07E2               	movlw	0
  7942  1096  3000               	addwfc	(efgtoa@n+1)^080h,f
  7943  1097  3DE3               	line	339
  7944                           	
  7945                           l4005:	
  7946  1098                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 339:       
                                   --w;
  7947                           	movlw	0FFh
  7948  1098  30FF               	addwf	(efgtoa@w)^080h,f
  7949  1099  07CF               	movlw	0FFh
  7950  109A  30FF               	addwfc	(efgtoa@w+1)^080h,f
  7951  109B  3DD0               	goto	l4007
  7952  109C  289D               	line	340
  7953                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 340:     }

  7954                           	
  7955                           l429:	
  7956  109D                     	line	343
  7957                           	
  7958                           l4007:	
  7959  109D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 344:       
                                   if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7960                           	movlb 1	; select bank1
  7961  109D  0141               	movf	(efgtoa@g+3)^080h,w
  7962  109E  085F               	movlb 0	; select bank0
  7963  109F  0140               	movwf	(___fpclassifyf@x+3)
  7964  10A0  00A3               	movlb 1	; select bank1
  7965  10A1  0141               	movf	(efgtoa@g+2)^080h,w
  7966  10A2  085E               	movlb 0	; select bank0
  7967  10A3  0140               	movwf	(___fpclassifyf@x+2)
  7968  10A4  00A2               	movlb 1	; select bank1
  7969  10A5  0141               	movf	(efgtoa@g+1)^080h,w
  7970  10A6  085D               	movlb 0	; select bank0
  7971  10A7  0140               	movwf	(___fpclassifyf@x+1)
  7972  10A8  00A1               	movlb 1	; select bank1
  7973  10A9  0141               	movf	(efgtoa@g)^080h,w
  7974  10AA  085C               	movlb 0	; select bank0
  7975  10AB  0140               	movwf	(___fpclassifyf@x)
  7976  10AC  00A0               
  7977                           	fcall	___fpclassifyf
  7978  10AD  3199  21B5  3190   	movlb 0	; select bank0
  7979  10B0  0140               		decf	((0+(?___fpclassifyf))),w
  7980  10B1  0320               iorwf	((1+(?___fpclassifyf))),w
  7981  10B2  0421               	btfss	status,2
  7982  10B3  1D03               	goto	u5511
  7983  10B4  28B6               	goto	u5510
  7984  10B5  28B8               u5511:
  7985  10B6                     	goto	l4025
  7986  10B6  3180  28D2         u5510:
  7987  10B8                     	line	344
  7988                           	
  7989                           l4009:	
  7990  10B8                     	movlb 1	; select bank1
  7991  10B8  0141               	movf	(efgtoa@c)^080h,w
  7992  10B9  082E               	addlw	low(0FFBFh)
  7993  10BA  3EBF               	movlb 0	; select bank0
  7994  10BB  0140               	movwf	(??_efgtoa+0)+0
  7995  10BC  00EC               	movlw	high(0FFBFh)
  7996  10BD  30FF               	skipnc
  7997  10BE  1803               	movlw	(high(0FFBFh)+1)&0ffh
  7998  10BF  3000               	movwf	((??_efgtoa+0)+0)+1
  7999  10C0  00ED               	movlw	0
  8000  10C1  3000               	subwf	1+(??_efgtoa+0)+0,w
  8001  10C2  026D               	movlw	01Ah
  8002  10C3  301A               	skipnz
  8003  10C4  1903               	subwf	0+(??_efgtoa+0)+0,w
  8004  10C5  026C               	skipc
  8005  10C6  1C03               	goto	u5521
  8006  10C7  28C9               	goto	u5520
  8007  10C8  28CB               u5521:
  8008  10C9                     	movlw	1
  8009  10C9  3001               	goto	u5530
  8010  10CA  28CC               u5520:
  8011  10CB                     	movlw	0
  8012  10CB  3000               u5530:
  8013  10CC                     	movwf	(??_efgtoa+2)+0
  8014  10CC  00EE               	clrf	(??_efgtoa+2)+0+1
  8015  10CD  01EF               	movf	0+(??_efgtoa+2)+0,w
  8016  10CE  086E               	movlb 1	; select bank1
  8017  10CF  0141               	movwf	(_efgtoa$909)^080h
  8018  10D0  00B5               	movlb 0	; select bank0
  8019  10D1  0140               	movf	1+(??_efgtoa+2)+0,w
  8020  10D2  086F               	movlb 1	; select bank1
  8021  10D3  0141               	movwf	(_efgtoa$909+1)^080h
  8022  10D4  00B6               	goto	l4013
  8023  10D5  28EA               	
  8024                           l439:	
  8025  10D6                     	
  8026                           l4011:	
  8027  10D6                     	movf	(efgtoa@c)^080h,w
  8028  10D6  082E               	movlb 0	; select bank0
  8029  10D7  0140               	movwf	(??_efgtoa+0)+0
  8030  10D8  00EC               	clrf	(??_efgtoa+0)+0+1
  8031  10D9  01ED               	movf	0+(??_efgtoa+0)+0,w
  8032  10DA  086C               	movwf	(isupper@c)
  8033  10DB  00A0               	movf	1+(??_efgtoa+0)+0,w
  8034  10DC  086D               	movwf	(isupper@c+1)
  8035  10DD  00A1               	fcall	_isupper
  8036  10DE  31A1  21F3  3190   	movlb 0	; select bank0
  8037  10E1  0140               	movf	(1+(?_isupper)),w
  8038  10E2  0821               	movlb 1	; select bank1
  8039  10E3  0141               	movwf	(_efgtoa$909+1)^080h
  8040  10E4  00B6               	movlb 0	; select bank0
  8041  10E5  0140               	movf	(0+(?_isupper)),w
  8042  10E6  0820               	movlb 1	; select bank1
  8043  10E7  0141               	movwf	(_efgtoa$909)^080h
  8044  10E8  00B5               	goto	l4013
  8045  10E9  28EA               	
  8046                           l441:	
  8047  10EA                     	
  8048                           l4013:	
  8049  10EA                     	movf	((_efgtoa$909)^080h),w
  8050  10EA  0835               iorwf	((_efgtoa$909+1)^080h),w
  8051  10EB  0436               	btfsc	status,2
  8052  10EC  1903               	goto	u5541
  8053  10ED  28EF               	goto	u5540
  8054  10EE  28F0               u5541:
  8055  10EF                     	goto	l4017
  8056  10EF  28FC               u5540:
  8057  10F0                     	line	345
  8058                           	
  8059                           l4015:	
  8060  10F0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 345:       
                                       strcpy(&dbuf[n], "INF");
  8061                           	movlw	low(((STR_8)|8000h))
  8062  10F0  30C6               	movlb 0	; select bank0
  8063  10F1  0140               	movwf	(strcpy@src)
  8064  10F2  00A0               	movlw	high(((STR_8)|8000h))
  8065  10F3  30A8               	movwf	((strcpy@src))+1
  8066  10F4  00A1               	movlb 1	; select bank1
  8067  10F5  0141               	movf	(efgtoa@n)^080h,w
  8068  10F6  0862               	addlw	low(_dbuf|((0x3)<<8))&0ffh
  8069  10F7  3E20               	fcall	_strcpy
  8070  10F8  31A2  22DE  3190   	line	346
  8071                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 346:       
                                   } else {
  8072                           	goto	l4019
  8073  10FB  2908               	
  8074                           l437:	
  8075  10FC                     	line	347
  8076                           	
  8077                           l4017:	
  8078  10FC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 347:       
                                       strcpy(&dbuf[n], "inf");
  8079                           	movlw	low(((STR_9)|8000h))
  8080  10FC  30CE               	movlb 0	; select bank0
  8081  10FD  0140               	movwf	(strcpy@src)
  8082  10FE  00A0               	movlw	high(((STR_9)|8000h))
  8083  10FF  30A8               	movwf	((strcpy@src))+1
  8084  1100  00A1               	movlb 1	; select bank1
  8085  1101  0141               	movf	(efgtoa@n)^080h,w
  8086  1102  0862               	addlw	low(_dbuf|((0x3)<<8))&0ffh
  8087  1103  3E20               	fcall	_strcpy
  8088  1104  31A2  22DE  3190   	goto	l4019
  8089  1107  2908               	line	348
  8090                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 348:       
                                   }
  8091                           	
  8092                           l442:	
  8093  1108                     	line	349
  8094                           	
  8095                           l4019:	
  8096  1108                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 349:       
                                   w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  8097                           	movlw	0FDh
  8098  1108  30FD               	movlb 1	; select bank1
  8099  1109  0141               	addwf	(efgtoa@w)^080h,f
  8100  110A  07CF               	movlw	0FFh
  8101  110B  30FF               	addwfc	(efgtoa@w+1)^080h,f
  8102  110C  3DD0               	line	350
  8103                           	
  8104                           l4021:	
  8105  110D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 350:       
                                   return pad(fp, &dbuf[0], w);
  8106                           	movlw	(low(_dbuf|((0x3)<<8)))&0ffh
  8107  110D  3020               	movlb 0	; select bank0
  8108  110E  0140               	movwf	(??_efgtoa+0)+0
  8109  110F  00EC               	movf	(??_efgtoa+0)+0,w
  8110  1110  086C               	movwf	(pad@buf)
  8111  1111  00B0               	movlb 1	; select bank1
  8112  1112  0141               	movf	(efgtoa@w+1)^080h,w
  8113  1113  0850               	movlb 0	; select bank0
  8114  1114  0140               	movwf	(pad@p+1)
  8115  1115  00B2               	movlb 1	; select bank1
  8116  1116  0141               	movf	(efgtoa@w)^080h,w
  8117  1117  084F               	movlb 0	; select bank0
  8118  1118  0140               	movwf	(pad@p)
  8119  1119  00B1               	movlb 1	; select bank1
  8120  111A  0141               	movf	(efgtoa@fp)^080h,w
  8121  111B  084B               	fcall	_pad
  8122  111C  31A7  2736  3190   	movlb 0	; select bank0
  8123  111F  0140               	movf	(1+(?_pad)),w
  8124  1120  0831               	movlb 1	; select bank1
  8125  1121  0141               	movwf	(?_efgtoa+1)^080h
  8126  1122  00AB               	movlb 0	; select bank0
  8127  1123  0140               	movf	(0+(?_pad)),w
  8128  1124  0830               	movlb 1	; select bank1
  8129  1125  0141               	movwf	(?_efgtoa)^080h
  8130  1126  00AA               	goto	l443
  8131  1127  3187  2FC4         	
  8132                           l4023:	
  8133  00D1                     	goto	l443
  8134  00D1  2FC4               	line	351
  8135                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 351:     }

  8136                           	
  8137                           l436:	
  8138  00D2                     	line	352
  8139                           	
  8140                           l4025:	
  8141  00D2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 353:       
                                   if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8142                           	movlb 1	; select bank1
  8143  00D2  0141               	movf	(efgtoa@g+3)^080h,w
  8144  00D3  085F               	movlb 0	; select bank0
  8145  00D4  0140               	movwf	(___fpclassifyf@x+3)
  8146  00D5  00A3               	movlb 1	; select bank1
  8147  00D6  0141               	movf	(efgtoa@g+2)^080h,w
  8148  00D7  085E               	movlb 0	; select bank0
  8149  00D8  0140               	movwf	(___fpclassifyf@x+2)
  8150  00D9  00A2               	movlb 1	; select bank1
  8151  00DA  0141               	movf	(efgtoa@g+1)^080h,w
  8152  00DB  085D               	movlb 0	; select bank0
  8153  00DC  0140               	movwf	(___fpclassifyf@x+1)
  8154  00DD  00A1               	movlb 1	; select bank1
  8155  00DE  0141               	movf	(efgtoa@g)^080h,w
  8156  00DF  085C               	movlb 0	; select bank0
  8157  00E0  0140               	movwf	(___fpclassifyf@x)
  8158  00E1  00A0               
  8159                           	fcall	___fpclassifyf
  8160  00E2  3199  21B5  3180   	movlb 0	; select bank0
  8161  00E5  0140               	movf	((0+(?___fpclassifyf))),w
  8162  00E6  0820               iorwf	((1+(?___fpclassifyf))),w
  8163  00E7  0421               	btfss	status,2
  8164  00E8  1D03               	goto	u5551
  8165  00E9  28EB               	goto	u5550
  8166  00EA  28EC               u5551:
  8167  00EB                     	goto	l4043
  8168  00EB  295D               u5550:
  8169  00EC                     	line	353
  8170                           	
  8171                           l4027:	
  8172  00EC                     	movlb 1	; select bank1
  8173  00EC  0141               	movf	(efgtoa@c)^080h,w
  8174  00ED  082E               	addlw	low(0FFBFh)
  8175  00EE  3EBF               	movlb 0	; select bank0
  8176  00EF  0140               	movwf	(??_efgtoa+0)+0
  8177  00F0  00EC               	movlw	high(0FFBFh)
  8178  00F1  30FF               	skipnc
  8179  00F2  1803               	movlw	(high(0FFBFh)+1)&0ffh
  8180  00F3  3000               	movwf	((??_efgtoa+0)+0)+1
  8181  00F4  00ED               	movlw	0
  8182  00F5  3000               	subwf	1+(??_efgtoa+0)+0,w
  8183  00F6  026D               	movlw	01Ah
  8184  00F7  301A               	skipnz
  8185  00F8  1903               	subwf	0+(??_efgtoa+0)+0,w
  8186  00F9  026C               	skipc
  8187  00FA  1C03               	goto	u5561
  8188  00FB  28FD               	goto	u5560
  8189  00FC  28FF               u5561:
  8190  00FD                     	movlw	1
  8191  00FD  3001               	goto	u5570
  8192  00FE  2900               u5560:
  8193  00FF                     	movlw	0
  8194  00FF  3000               u5570:
  8195  0100                     	movwf	(??_efgtoa+2)+0
  8196  0100  00EE               	clrf	(??_efgtoa+2)+0+1
  8197  0101  01EF               	movf	0+(??_efgtoa+2)+0,w
  8198  0102  086E               	movlb 1	; select bank1
  8199  0103  0141               	movwf	(_efgtoa$914)^080h
  8200  0104  00B7               	movlb 0	; select bank0
  8201  0105  0140               	movf	1+(??_efgtoa+2)+0,w
  8202  0106  086F               	movlb 1	; select bank1
  8203  0107  0141               	movwf	(_efgtoa$914+1)^080h
  8204  0108  00B8               	goto	l4031
  8205  0109  291E               	
  8206                           l447:	
  8207  010A                     	
  8208                           l4029:	
  8209  010A                     	movf	(efgtoa@c)^080h,w
  8210  010A  082E               	movlb 0	; select bank0
  8211  010B  0140               	movwf	(??_efgtoa+0)+0
  8212  010C  00EC               	clrf	(??_efgtoa+0)+0+1
  8213  010D  01ED               	movf	0+(??_efgtoa+0)+0,w
  8214  010E  086C               	movwf	(isupper@c)
  8215  010F  00A0               	movf	1+(??_efgtoa+0)+0,w
  8216  0110  086D               	movwf	(isupper@c+1)
  8217  0111  00A1               	fcall	_isupper
  8218  0112  31A1  21F3  3180   	movlb 0	; select bank0
  8219  0115  0140               	movf	(1+(?_isupper)),w
  8220  0116  0821               	movlb 1	; select bank1
  8221  0117  0141               	movwf	(_efgtoa$914+1)^080h
  8222  0118  00B8               	movlb 0	; select bank0
  8223  0119  0140               	movf	(0+(?_isupper)),w
  8224  011A  0820               	movlb 1	; select bank1
  8225  011B  0141               	movwf	(_efgtoa$914)^080h
  8226  011C  00B7               	goto	l4031
  8227  011D  291E               	
  8228                           l449:	
  8229  011E                     	
  8230                           l4031:	
  8231  011E                     	movf	((_efgtoa$914)^080h),w
  8232  011E  0837               iorwf	((_efgtoa$914+1)^080h),w
  8233  011F  0438               	btfsc	status,2
  8234  0120  1903               	goto	u5581
  8235  0121  2923               	goto	u5580
  8236  0122  2924               u5581:
  8237  0123                     	goto	l4035
  8238  0123  2930               u5580:
  8239  0124                     	line	354
  8240                           	
  8241                           l4033:	
  8242  0124                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 354:       
                                       strcpy(&dbuf[n], "NAN");
  8243                           	movlw	low(((STR_12)|8000h))
  8244  0124  30CA               	movlb 0	; select bank0
  8245  0125  0140               	movwf	(strcpy@src)
  8246  0126  00A0               	movlw	high(((STR_12)|8000h))
  8247  0127  30A8               	movwf	((strcpy@src))+1
  8248  0128  00A1               	movlb 1	; select bank1
  8249  0129  0141               	movf	(efgtoa@n)^080h,w
  8250  012A  0862               	addlw	low(_dbuf|((0x3)<<8))&0ffh
  8251  012B  3E20               	fcall	_strcpy
  8252  012C  31A2  22DE  3180   	line	355
  8253                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 355:       
                                   } else {
  8254                           	goto	l4037
  8255  012F  293C               	
  8256                           l445:	
  8257  0130                     	line	356
  8258                           	
  8259                           l4035:	
  8260  0130                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 356:       
                                       strcpy(&dbuf[n], "nan");
  8261                           	movlw	low(((STR_13)|8000h))
  8262  0130  30D2               	movlb 0	; select bank0
  8263  0131  0140               	movwf	(strcpy@src)
  8264  0132  00A0               	movlw	high(((STR_13)|8000h))
  8265  0133  30A8               	movwf	((strcpy@src))+1
  8266  0134  00A1               	movlb 1	; select bank1
  8267  0135  0141               	movf	(efgtoa@n)^080h,w
  8268  0136  0862               	addlw	low(_dbuf|((0x3)<<8))&0ffh
  8269  0137  3E20               	fcall	_strcpy
  8270  0138  31A2  22DE  3180   	goto	l4037
  8271  013B  293C               	line	357
  8272                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 357:       
                                   }
  8273                           	
  8274                           l450:	
  8275  013C                     	line	358
  8276                           	
  8277                           l4037:	
  8278  013C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 358:       
                                   w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  8279                           	movlw	0FDh
  8280  013C  30FD               	movlb 1	; select bank1
  8281  013D  0141               	addwf	(efgtoa@w)^080h,f
  8282  013E  07CF               	movlw	0FFh
  8283  013F  30FF               	addwfc	(efgtoa@w+1)^080h,f
  8284  0140  3DD0               	line	359
  8285                           	
  8286                           l4039:	
  8287  0141                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 359:       
                                   return pad(fp, &dbuf[0], w);
  8288                           	movlw	(low(_dbuf|((0x3)<<8)))&0ffh
  8289  0141  3020               	movlb 0	; select bank0
  8290  0142  0140               	movwf	(??_efgtoa+0)+0
  8291  0143  00EC               	movf	(??_efgtoa+0)+0,w
  8292  0144  086C               	movwf	(pad@buf)
  8293  0145  00B0               	movlb 1	; select bank1
  8294  0146  0141               	movf	(efgtoa@w+1)^080h,w
  8295  0147  0850               	movlb 0	; select bank0
  8296  0148  0140               	movwf	(pad@p+1)
  8297  0149  00B2               	movlb 1	; select bank1
  8298  014A  0141               	movf	(efgtoa@w)^080h,w
  8299  014B  084F               	movlb 0	; select bank0
  8300  014C  0140               	movwf	(pad@p)
  8301  014D  00B1               	movlb 1	; select bank1
  8302  014E  0141               	movf	(efgtoa@fp)^080h,w
  8303  014F  084B               	fcall	_pad
  8304  0150  31A7  2736  3180   	movlb 0	; select bank0
  8305  0153  0140               	movf	(1+(?_pad)),w
  8306  0154  0831               	movlb 1	; select bank1
  8307  0155  0141               	movwf	(?_efgtoa+1)^080h
  8308  0156  00AB               	movlb 0	; select bank0
  8309  0157  0140               	movf	(0+(?_pad)),w
  8310  0158  0830               	movlb 1	; select bank1
  8311  0159  0141               	movwf	(?_efgtoa)^080h
  8312  015A  00AA               	goto	l443
  8313  015B  2FC4               	
  8314                           l4041:	
  8315  015C                     	goto	l443
  8316  015C  2FC4               	line	360
  8317                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 360:     }

  8318                           	
  8319                           l444:	
  8320  015D                     	line	363
  8321                           	
  8322                           l4043:	
  8323  015D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 363:     u 
                                 = 1.0;
  8324                           	movlw	0x3f
  8325  015D  303F               	movlb 1	; select bank1
  8326  015E  0141               	movwf	(efgtoa@u+3)^080h
  8327  015F  00E7               	movlw	0x80
  8328  0160  3080               	movwf	(efgtoa@u+2)^080h
  8329  0161  00E6               	movlw	0x0
  8330  0162  3000               	movwf	(efgtoa@u+1)^080h
  8331  0163  00E5               	movlw	0x0
  8332  0164  3000               	movwf	(efgtoa@u)^080h
  8333  0165  00E4               
  8334                           	line	364
  8335                           	
  8336                           l4045:	
  8337  0166                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 364:     e 
                                 = 0;
  8338                           	clrf	(efgtoa@e)^080h
  8339  0166  01E0               	clrf	(efgtoa@e+1)^080h
  8340  0167  01E1               	line	365
  8341                           	
  8342                           l4047:	
  8343  0168                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 365:     if
                                  (!(g == 0.0)) {
  8344                           	movf	(efgtoa@g+3)^080h,w
  8345  0168  085F               	movlb 0	; select bank0
  8346  0169  0140               	movwf	(___fleq@ff1+3)
  8347  016A  00A3               	movlb 1	; select bank1
  8348  016B  0141               	movf	(efgtoa@g+2)^080h,w
  8349  016C  085E               	movlb 0	; select bank0
  8350  016D  0140               	movwf	(___fleq@ff1+2)
  8351  016E  00A2               	movlb 1	; select bank1
  8352  016F  0141               	movf	(efgtoa@g+1)^080h,w
  8353  0170  085D               	movlb 0	; select bank0
  8354  0171  0140               	movwf	(___fleq@ff1+1)
  8355  0172  00A1               	movlb 1	; select bank1
  8356  0173  0141               	movf	(efgtoa@g)^080h,w
  8357  0174  085C               	movlb 0	; select bank0
  8358  0175  0140               	movwf	(___fleq@ff1)
  8359  0176  00A0               
  8360                           	movlw	0x0
  8361  0177  3000               	movwf	(___fleq@ff2+3)
  8362  0178  00A7               	movlw	0x0
  8363  0179  3000               	movwf	(___fleq@ff2+2)
  8364  017A  00A6               	movlw	0x0
  8365  017B  3000               	movwf	(___fleq@ff2+1)
  8366  017C  00A5               	movlw	0x0
  8367  017D  3000               	movwf	(___fleq@ff2)
  8368  017E  00A4               
  8369                           	fcall	___fleq
  8370  017F  31A5  25D7  3180   	btfsc	status,0
  8371  0182  1803               	goto	u5591
  8372  0183  2985               	goto	u5590
  8373  0184  2986               u5591:
  8374  0185                     	goto	l4063
  8375  0185  2A50               u5590:
  8376  0186                     	goto	l4055
  8377  0186  29B9               	line	366
  8378                           	
  8379                           l4049:	
  8380  0187                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 366:       
                                   while (!(g < (u*10.0))) {
  8381                           	goto	l4055
  8382  0187  29B9               	
  8383                           l453:	
  8384  0188                     	line	367
  8385                           	
  8386                           l4051:	
  8387  0188                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 367:       
                                       u = u*10.0;
  8388                           	movlw	0x41
  8389  0188  3041               	movlb 0	; select bank0
  8390  0189  0140               	movwf	(___flmul@b+3)
  8391  018A  00B1               	movlw	0x20
  8392  018B  3020               	movwf	(___flmul@b+2)
  8393  018C  00B0               	movlw	0x0
  8394  018D  3000               	movwf	(___flmul@b+1)
  8395  018E  00AF               	movlw	0x0
  8396  018F  3000               	movwf	(___flmul@b)
  8397  0190  00AE               
  8398                           	movlb 1	; select bank1
  8399  0191  0141               	movf	(efgtoa@u+3)^080h,w
  8400  0192  0867               	movlb 0	; select bank0
  8401  0193  0140               	movwf	(___flmul@a+3)
  8402  0194  00B5               	movlb 1	; select bank1
  8403  0195  0141               	movf	(efgtoa@u+2)^080h,w
  8404  0196  0866               	movlb 0	; select bank0
  8405  0197  0140               	movwf	(___flmul@a+2)
  8406  0198  00B4               	movlb 1	; select bank1
  8407  0199  0141               	movf	(efgtoa@u+1)^080h,w
  8408  019A  0865               	movlb 0	; select bank0
  8409  019B  0140               	movwf	(___flmul@a+1)
  8410  019C  00B3               	movlb 1	; select bank1
  8411  019D  0141               	movf	(efgtoa@u)^080h,w
  8412  019E  0864               	movlb 0	; select bank0
  8413  019F  0140               	movwf	(___flmul@a)
  8414  01A0  00B2               
  8415                           	fcall	___flmul
  8416  01A1  3195  2595  3180   	movlb 0	; select bank0
  8417  01A4  0140               	movf	(3+(?___flmul)),w
  8418  01A5  0831               	movlb 1	; select bank1
  8419  01A6  0141               	movwf	(efgtoa@u+3)^080h
  8420  01A7  00E7               	movlb 0	; select bank0
  8421  01A8  0140               	movf	(2+(?___flmul)),w
  8422  01A9  0830               	movlb 1	; select bank1
  8423  01AA  0141               	movwf	(efgtoa@u+2)^080h
  8424  01AB  00E6               	movlb 0	; select bank0
  8425  01AC  0140               	movf	(1+(?___flmul)),w
  8426  01AD  082F               	movlb 1	; select bank1
  8427  01AE  0141               	movwf	(efgtoa@u+1)^080h
  8428  01AF  00E5               	movlb 0	; select bank0
  8429  01B0  0140               	movf	(0+(?___flmul)),w
  8430  01B1  082E               	movlb 1	; select bank1
  8431  01B2  0141               	movwf	(efgtoa@u)^080h
  8432  01B3  00E4               
  8433                           	line	368
  8434                           	
  8435                           l4053:	
  8436  01B4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 368:       
                                       ++e;
  8437                           	movlw	01h
  8438  01B4  3001               	addwf	(efgtoa@e)^080h,f
  8439  01B5  07E0               	movlw	0
  8440  01B6  3000               	addwfc	(efgtoa@e+1)^080h,f
  8441  01B7  3DE1               	goto	l4055
  8442  01B8  29B9               	line	369
  8443                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 369:       
                                   }
  8444                           	
  8445                           l452:	
  8446  01B9                     	line	366
  8447                           	
  8448                           l4055:	
  8449  01B9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 366:       
                                   while (!(g < (u*10.0))) {
  8450                           	movlb 1	; select bank1
  8451  01B9  0141               	movf	(efgtoa@g+3)^080h,w
  8452  01BA  085F               	movlb 0	; select bank0
  8453  01BB  0140               	movwf	(___flge@ff1+3)
  8454  01BC  00CB               	movlb 1	; select bank1
  8455  01BD  0141               	movf	(efgtoa@g+2)^080h,w
  8456  01BE  085E               	movlb 0	; select bank0
  8457  01BF  0140               	movwf	(___flge@ff1+2)
  8458  01C0  00CA               	movlb 1	; select bank1
  8459  01C1  0141               	movf	(efgtoa@g+1)^080h,w
  8460  01C2  085D               	movlb 0	; select bank0
  8461  01C3  0140               	movwf	(___flge@ff1+1)
  8462  01C4  00C9               	movlb 1	; select bank1
  8463  01C5  0141               	movf	(efgtoa@g)^080h,w
  8464  01C6  085C               	movlb 0	; select bank0
  8465  01C7  0140               	movwf	(___flge@ff1)
  8466  01C8  00C8               
  8467                           	movlw	0x41
  8468  01C9  3041               	movwf	(___flmul@b+3)
  8469  01CA  00B1               	movlw	0x20
  8470  01CB  3020               	movwf	(___flmul@b+2)
  8471  01CC  00B0               	movlw	0x0
  8472  01CD  3000               	movwf	(___flmul@b+1)
  8473  01CE  00AF               	movlw	0x0
  8474  01CF  3000               	movwf	(___flmul@b)
  8475  01D0  00AE               
  8476                           	movlb 1	; select bank1
  8477  01D1  0141               	movf	(efgtoa@u+3)^080h,w
  8478  01D2  0867               	movlb 0	; select bank0
  8479  01D3  0140               	movwf	(___flmul@a+3)
  8480  01D4  00B5               	movlb 1	; select bank1
  8481  01D5  0141               	movf	(efgtoa@u+2)^080h,w
  8482  01D6  0866               	movlb 0	; select bank0
  8483  01D7  0140               	movwf	(___flmul@a+2)
  8484  01D8  00B4               	movlb 1	; select bank1
  8485  01D9  0141               	movf	(efgtoa@u+1)^080h,w
  8486  01DA  0865               	movlb 0	; select bank0
  8487  01DB  0140               	movwf	(___flmul@a+1)
  8488  01DC  00B3               	movlb 1	; select bank1
  8489  01DD  0141               	movf	(efgtoa@u)^080h,w
  8490  01DE  0864               	movlb 0	; select bank0
  8491  01DF  0140               	movwf	(___flmul@a)
  8492  01E0  00B2               
  8493                           	fcall	___flmul
  8494  01E1  3195  2595  3180   	movlb 0	; select bank0
  8495  01E4  0140               	movf	(3+(?___flmul)),w
  8496  01E5  0831               	movwf	(___flge@ff2+3)
  8497  01E6  00CF               	movf	(2+(?___flmul)),w
  8498  01E7  0830               	movwf	(___flge@ff2+2)
  8499  01E8  00CE               	movf	(1+(?___flmul)),w
  8500  01E9  082F               	movwf	(___flge@ff2+1)
  8501  01EA  00CD               	movf	(0+(?___flmul)),w
  8502  01EB  082E               	movwf	(___flge@ff2)
  8503  01EC  00CC               
  8504                           	fcall	___flge
  8505  01ED  319B  2358  3180   	btfsc	status,0
  8506  01F0  1803               	goto	u5601
  8507  01F1  29F3               	goto	u5600
  8508  01F2  29F4               u5601:
  8509  01F3                     	goto	l4051
  8510  01F3  2988               u5600:
  8511  01F4                     	goto	l4061
  8512  01F4  2A27               	
  8513                           l454:	
  8514  01F5                     	line	370
  8515                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 370:       
                                   while (g < u) {
  8516                           	goto	l4061
  8517  01F5  2A27               	
  8518                           l456:	
  8519  01F6                     	line	371
  8520                           	
  8521                           l4057:	
  8522  01F6                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 371:       
                                       u = u/10.0;
  8523                           	movlw	0x41
  8524  01F6  3041               	movlb 0	; select bank0
  8525  01F7  0140               	movwf	(___fldiv@a+3)
  8526  01F8  00CB               	movlw	0x20
  8527  01F9  3020               	movwf	(___fldiv@a+2)
  8528  01FA  00CA               	movlw	0x0
  8529  01FB  3000               	movwf	(___fldiv@a+1)
  8530  01FC  00C9               	movlw	0x0
  8531  01FD  3000               	movwf	(___fldiv@a)
  8532  01FE  00C8               
  8533                           	movlb 1	; select bank1
  8534  01FF  0141               	movf	(efgtoa@u+3)^080h,w
  8535  0200  0867               	movlb 0	; select bank0
  8536  0201  0140               	movwf	(___fldiv@b+3)
  8537  0202  00CF               	movlb 1	; select bank1
  8538  0203  0141               	movf	(efgtoa@u+2)^080h,w
  8539  0204  0866               	movlb 0	; select bank0
  8540  0205  0140               	movwf	(___fldiv@b+2)
  8541  0206  00CE               	movlb 1	; select bank1
  8542  0207  0141               	movf	(efgtoa@u+1)^080h,w
  8543  0208  0865               	movlb 0	; select bank0
  8544  0209  0140               	movwf	(___fldiv@b+1)
  8545  020A  00CD               	movlb 1	; select bank1
  8546  020B  0141               	movf	(efgtoa@u)^080h,w
  8547  020C  0864               	movlb 0	; select bank0
  8548  020D  0140               	movwf	(___fldiv@b)
  8549  020E  00CC               
  8550                           	fcall	___fldiv
  8551  020F  3193  23B6  3180   	movlb 0	; select bank0
  8552  0212  0140               	movf	(3+(?___fldiv)),w
  8553  0213  084B               	movlb 1	; select bank1
  8554  0214  0141               	movwf	(efgtoa@u+3)^080h
  8555  0215  00E7               	movlb 0	; select bank0
  8556  0216  0140               	movf	(2+(?___fldiv)),w
  8557  0217  084A               	movlb 1	; select bank1
  8558  0218  0141               	movwf	(efgtoa@u+2)^080h
  8559  0219  00E6               	movlb 0	; select bank0
  8560  021A  0140               	movf	(1+(?___fldiv)),w
  8561  021B  0849               	movlb 1	; select bank1
  8562  021C  0141               	movwf	(efgtoa@u+1)^080h
  8563  021D  00E5               	movlb 0	; select bank0
  8564  021E  0140               	movf	(0+(?___fldiv)),w
  8565  021F  0848               	movlb 1	; select bank1
  8566  0220  0141               	movwf	(efgtoa@u)^080h
  8567  0221  00E4               
  8568                           	line	372
  8569                           	
  8570                           l4059:	
  8571  0222                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 372:       
                                       --e;
  8572                           	movlw	0FFh
  8573  0222  30FF               	addwf	(efgtoa@e)^080h,f
  8574  0223  07E0               	movlw	0FFh
  8575  0224  30FF               	addwfc	(efgtoa@e+1)^080h,f
  8576  0225  3DE1               	goto	l4061
  8577  0226  2A27               	line	373
  8578                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 373:       
                                   }
  8579                           	
  8580                           l455:	
  8581  0227                     	line	370
  8582                           	
  8583                           l4061:	
  8584  0227                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 370:       
                                   while (g < u) {
  8585                           	movlb 1	; select bank1
  8586  0227  0141               	movf	(efgtoa@g+3)^080h,w
  8587  0228  085F               	movlb 0	; select bank0
  8588  0229  0140               	movwf	(___flge@ff1+3)
  8589  022A  00CB               	movlb 1	; select bank1
  8590  022B  0141               	movf	(efgtoa@g+2)^080h,w
  8591  022C  085E               	movlb 0	; select bank0
  8592  022D  0140               	movwf	(___flge@ff1+2)
  8593  022E  00CA               	movlb 1	; select bank1
  8594  022F  0141               	movf	(efgtoa@g+1)^080h,w
  8595  0230  085D               	movlb 0	; select bank0
  8596  0231  0140               	movwf	(___flge@ff1+1)
  8597  0232  00C9               	movlb 1	; select bank1
  8598  0233  0141               	movf	(efgtoa@g)^080h,w
  8599  0234  085C               	movlb 0	; select bank0
  8600  0235  0140               	movwf	(___flge@ff1)
  8601  0236  00C8               
  8602                           	movlb 1	; select bank1
  8603  0237  0141               	movf	(efgtoa@u+3)^080h,w
  8604  0238  0867               	movlb 0	; select bank0
  8605  0239  0140               	movwf	(___flge@ff2+3)
  8606  023A  00CF               	movlb 1	; select bank1
  8607  023B  0141               	movf	(efgtoa@u+2)^080h,w
  8608  023C  0866               	movlb 0	; select bank0
  8609  023D  0140               	movwf	(___flge@ff2+2)
  8610  023E  00CE               	movlb 1	; select bank1
  8611  023F  0141               	movf	(efgtoa@u+1)^080h,w
  8612  0240  0865               	movlb 0	; select bank0
  8613  0241  0140               	movwf	(___flge@ff2+1)
  8614  0242  00CD               	movlb 1	; select bank1
  8615  0243  0141               	movf	(efgtoa@u)^080h,w
  8616  0244  0864               	movlb 0	; select bank0
  8617  0245  0140               	movwf	(___flge@ff2)
  8618  0246  00CC               
  8619                           	fcall	___flge
  8620  0247  319B  2358  3180   	btfss	status,0
  8621  024A  1C03               	goto	u5611
  8622  024B  2A4D               	goto	u5610
  8623  024C  2A4E               u5611:
  8624  024D                     	goto	l4057
  8625  024D  29F6               u5610:
  8626  024E                     	goto	l4063
  8627  024E  2A50               	
  8628                           l457:	
  8629  024F                     	goto	l4063
  8630  024F  2A50               	line	374
  8631                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 374:     }

  8632                           	
  8633                           l451:	
  8634  0250                     	line	377
  8635                           	
  8636                           l4063:	
  8637  0250                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 377:     mo
                                 de = tolower((int)c);
  8638                           	movlb 1	; select bank1
  8639  0250  0141               	movf	(efgtoa@c)^080h,w
  8640  0251  082E               	movlb 0	; select bank0
  8641  0252  0140               	movwf	(??_efgtoa+0)+0
  8642  0253  00EC               	clrf	(??_efgtoa+0)+0+1
  8643  0254  01ED               	movf	0+(??_efgtoa+0)+0,w
  8644  0255  086C               	movwf	(tolower@c)
  8645  0256  00A6               	movf	1+(??_efgtoa+0)+0,w
  8646  0257  086D               	movwf	(tolower@c+1)
  8647  0258  00A7               	fcall	_tolower
  8648  0259  31A3  23D8  3180   	movlb 0	; select bank0
  8649  025C  0140               	movf	(0+(?_tolower)),w
  8650  025D  0826               	movwf	(??_efgtoa+2)+0
  8651  025E  00EE               	movf	(??_efgtoa+2)+0,w
  8652  025F  086E               	movlb 1	; select bank1
  8653  0260  0141               	movwf	(efgtoa@mode)^080h
  8654  0261  00D1               	line	378
  8655                           	
  8656                           l4065:	
  8657  0262                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 378:     nm
                                 ode = mode;
  8658                           	movf	(efgtoa@mode)^080h,w
  8659  0262  0851               	movlb 0	; select bank0
  8660  0263  0140               	movwf	(??_efgtoa+0)+0
  8661  0264  00EC               	movf	(??_efgtoa+0)+0,w
  8662  0265  086C               	movlb 1	; select bank1
  8663  0266  0141               	movwf	(efgtoa@nmode)^080h
  8664  0267  00CE               	line	379
  8665                           	
  8666                           l4067:	
  8667  0268                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 379:     if
                                  (mode == 'g') {
  8668                           		movlw	103
  8669  0268  3067               	xorwf	((efgtoa@mode)^080h),w
  8670  0269  0651               	btfss	status,2
  8671  026A  1D03               	goto	u5621
  8672  026B  2A6D               	goto	u5620
  8673  026C  2A6E               u5621:
  8674  026D                     	goto	l458
  8675  026D  2A98               u5620:
  8676  026E                     	line	380
  8677                           	
  8678                           l4069:	
  8679  026E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 380:   if (
                                 prec == 0) {
  8680                           	movlb 2	; select bank2
  8681  026E  0142               	movf	((_prec)^0100h),w
  8682  026F  0866               iorwf	((_prec+1)^0100h),w
  8683  0270  0467               	btfss	status,2
  8684  0271  1D03               	goto	u5631
  8685  0272  2A74               	goto	u5630
  8686  0273  2A75               u5631:
  8687  0274                     	goto	l459
  8688  0274  2A79               u5630:
  8689  0275                     	line	381
  8690                           	
  8691                           l4071:	
  8692  0275                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 381:    pre
                                 c = 1;
  8693                           	movlw	01h
  8694  0275  3001               	movwf	(_prec)^0100h
  8695  0276  00E6               	movlw	0
  8696  0277  3000               	movwf	((_prec)^0100h)+1
  8697  0278  00E7               	line	382
  8698                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 382:   }
  8699                           	
  8700                           l459:	
  8701  0279                     	line	383
  8702                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 383:       
                                   p = (0 < prec) ? prec : 6;
  8703                           	movf	(_prec+1)^0100h,w
  8704  0279  0867               	xorlw	80h
  8705  027A  3A80               	movlb 0	; select bank0
  8706  027B  0140               	movwf	(??_efgtoa+0)+0
  8707  027C  00EC               	movlw	(0)^80h
  8708  027D  3080               	subwf	(??_efgtoa+0)+0,w
  8709  027E  026C               	skipz
  8710  027F  1D03               	goto	u5645
  8711  0280  2A84               	movlw	01h
  8712  0281  3001               	movlb 2	; select bank2
  8713  0282  0142               	subwf	(_prec)^0100h,w
  8714  0283  0266               u5645:
  8715  0284                     
  8716                           	skipnc
  8717  0284  1803               	goto	u5641
  8718  0285  2A87               	goto	u5640
  8719  0286  2A88               u5641:
  8720  0287                     	goto	l4075
  8721  0287  2A8E               u5640:
  8722  0288                     	
  8723                           l4073:	
  8724  0288                     	movlw	06h
  8725  0288  3006               	movlb 1	; select bank1
  8726  0289  0141               	movwf	(efgtoa@p)^080h
  8727  028A  00CC               	movlw	0
  8728  028B  3000               	movwf	((efgtoa@p)^080h)+1
  8729  028C  00CD               	goto	l4081
  8730  028D  2AAC               	
  8731                           l461:	
  8732  028E                     	
  8733                           l4075:	
  8734  028E                     	movlb 2	; select bank2
  8735  028E  0142               	movf	(_prec+1)^0100h,w
  8736  028F  0867               	movlb 1	; select bank1
  8737  0290  0141               	movwf	(efgtoa@p+1)^080h
  8738  0291  00CD               	movlb 2	; select bank2
  8739  0292  0142               	movf	(_prec)^0100h,w
  8740  0293  0866               	movlb 1	; select bank1
  8741  0294  0141               	movwf	(efgtoa@p)^080h
  8742  0295  00CC               	goto	l4081
  8743  0296  2AAC               	
  8744                           l463:	
  8745  0297                     	line	384
  8746                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 384:     } 
                                 else {
  8747                           	goto	l4081
  8748  0297  2AAC               	
  8749                           l458:	
  8750  0298                     	line	385
  8751                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 385:       
                                   p = (prec < 0) ? 6 : prec;
  8752                           	movlb 2	; select bank2
  8753  0298  0142               	btfsc	(_prec+1)^0100h,7
  8754  0299  1BE7               	goto	u5651
  8755  029A  2A9C               	goto	u5650
  8756  029B  2A9D               u5651:
  8757  029C                     	goto	l4079
  8758  029C  2AA5               u5650:
  8759  029D                     	
  8760                           l4077:	
  8761  029D                     	movf	(_prec+1)^0100h,w
  8762  029D  0867               	movlb 1	; select bank1
  8763  029E  0141               	movwf	(efgtoa@p+1)^080h
  8764  029F  00CD               	movlb 2	; select bank2
  8765  02A0  0142               	movf	(_prec)^0100h,w
  8766  02A1  0866               	movlb 1	; select bank1
  8767  02A2  0141               	movwf	(efgtoa@p)^080h
  8768  02A3  00CC               	goto	l4081
  8769  02A4  2AAC               	
  8770                           l466:	
  8771  02A5                     	
  8772                           l4079:	
  8773  02A5                     	movlw	06h
  8774  02A5  3006               	movlb 1	; select bank1
  8775  02A6  0141               	movwf	(efgtoa@p)^080h
  8776  02A7  00CC               	movlw	0
  8777  02A8  3000               	movwf	((efgtoa@p)^080h)+1
  8778  02A9  00CD               	goto	l4081
  8779  02AA  2AAC               	
  8780                           l468:	
  8781  02AB                     	goto	l4081
  8782  02AB  2AAC               	line	386
  8783                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 386:     }

  8784                           	
  8785                           l464:	
  8786  02AC                     	line	389
  8787                           	
  8788                           l4081:	
  8789  02AC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 389:     if
                                  (mode == 'g') {
  8790                           		movlw	103
  8791  02AC  3067               	xorwf	((efgtoa@mode)^080h),w
  8792  02AD  0651               	btfss	status,2
  8793  02AE  1D03               	goto	u5661
  8794  02AF  2AB1               	goto	u5660
  8795  02B0  2AB2               u5661:
  8796  02B1                     	goto	l469
  8797  02B1  2AEB               u5660:
  8798  02B2                     	line	390
  8799                           	
  8800                           l4083:	
  8801  02B2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 390:       
                                   if (!(e < -4) && !((p - 1) < e)) {
  8802                           	movf	(efgtoa@e+1)^080h,w
  8803  02B2  0861               	xorlw	80h
  8804  02B3  3A80               	movlb 0	; select bank0
  8805  02B4  0140               	movwf	(??_efgtoa+0)+0
  8806  02B5  00EC               	movlw	(0FFh)^80h
  8807  02B6  307F               	subwf	(??_efgtoa+0)+0,w
  8808  02B7  026C               	skipz
  8809  02B8  1D03               	goto	u5675
  8810  02B9  2ABD               	movlw	0FCh
  8811  02BA  30FC               	movlb 1	; select bank1
  8812  02BB  0141               	subwf	(efgtoa@e)^080h,w
  8813  02BC  0260               u5675:
  8814  02BD                     
  8815                           	skipc
  8816  02BD  1C03               	goto	u5671
  8817  02BE  2AC0               	goto	u5670
  8818  02BF  2AC1               u5671:
  8819  02C0                     	goto	l4089
  8820  02C0  2AE4               u5670:
  8821  02C1                     	
  8822                           l4085:	
  8823  02C1                     	movlb 1	; select bank1
  8824  02C1  0141               	movf	(efgtoa@p)^080h,w
  8825  02C2  084C               	addlw	0FFh
  8826  02C3  3EFF               	movlb 0	; select bank0
  8827  02C4  0140               	movwf	(??_efgtoa+0)+0
  8828  02C5  00EC               	movlw	0FFh
  8829  02C6  30FF               	movlb 1	; select bank1
  8830  02C7  0141               	addwfc	(efgtoa@p+1)^080h,w
  8831  02C8  3D4D               	movlb 0	; select bank0
  8832  02C9  0140               	movwf	1+(??_efgtoa+0)+0
  8833  02CA  00ED               	movf	1+(??_efgtoa+0)+0,w
  8834  02CB  086D               	xorlw	80h
  8835  02CC  3A80               	movwf	(??_efgtoa+2)+0
  8836  02CD  00EE               	movlb 1	; select bank1
  8837  02CE  0141               	movf	(efgtoa@e+1)^080h,w
  8838  02CF  0861               	xorlw	80h
  8839  02D0  3A80               	movlb 0	; select bank0
  8840  02D1  0140               	subwf	(??_efgtoa+2)+0,w
  8841  02D2  026E               	skipz
  8842  02D3  1D03               	goto	u5685
  8843  02D4  2AD9               	movlb 1	; select bank1
  8844  02D5  0141               	movf	(efgtoa@e)^080h,w
  8845  02D6  0860               	movlb 0	; select bank0
  8846  02D7  0140               	subwf	0+(??_efgtoa+0)+0,w
  8847  02D8  026C               u5685:
  8848  02D9                     
  8849                           	skipc
  8850  02D9  1C03               	goto	u5681
  8851  02DA  2ADC               	goto	u5680
  8852  02DB  2ADD               u5681:
  8853  02DC                     	goto	l4089
  8854  02DC  2AE4               u5680:
  8855  02DD                     	line	391
  8856                           	
  8857                           l4087:	
  8858  02DD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 391:       
                                       nmode = 'f';
  8859                           	movlw	low(066h)
  8860  02DD  3066               	movlb 0	; select bank0
  8861  02DE  0140               	movwf	(??_efgtoa+0)+0
  8862  02DF  00EC               	movf	(??_efgtoa+0)+0,w
  8863  02E0  086C               	movlb 1	; select bank1
  8864  02E1  0141               	movwf	(efgtoa@nmode)^080h
  8865  02E2  00CE               	line	392
  8866                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 392:       
                                   } else {
  8867                           	goto	l469
  8868  02E3  2AEB               	
  8869                           l470:	
  8870  02E4                     	line	393
  8871                           	
  8872                           l4089:	
  8873  02E4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 393:       
                                       nmode = 'e';
  8874                           	movlw	low(065h)
  8875  02E4  3065               	movlb 0	; select bank0
  8876  02E5  0140               	movwf	(??_efgtoa+0)+0
  8877  02E6  00EC               	movf	(??_efgtoa+0)+0,w
  8878  02E7  086C               	movlb 1	; select bank1
  8879  02E8  0141               	movwf	(efgtoa@nmode)^080h
  8880  02E9  00CE               	goto	l469
  8881  02EA  2AEB               	line	394
  8882                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 394:       
                                   }
  8883                           	
  8884                           l471:	
  8885  02EB                     	line	395
  8886                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 395:     }

  8887                           	
  8888                           l469:	
  8889  02EB                     	line	398
  8890                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 398:     m 
                                 = p;
  8891                           	movf	(efgtoa@p+1)^080h,w
  8892  02EB  084D               	movwf	(efgtoa@m+1)^080h
  8893  02EC  00C4               	movf	(efgtoa@p)^080h,w
  8894  02ED  084C               	movwf	(efgtoa@m)^080h
  8895  02EE  00C3               	line	399
  8896                           	
  8897                           l4091:	
  8898  02EF                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 399:     if
                                  (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  8899                           		movlw	103
  8900  02EF  3067               	xorwf	((efgtoa@mode)^080h),w
  8901  02F0  0651               	btfss	status,2
  8902  02F1  1D03               	goto	u5691
  8903  02F2  2AF4               	goto	u5690
  8904  02F3  2AF5               u5691:
  8905  02F4                     	goto	l4097
  8906  02F4  2B00               u5690:
  8907  02F5                     	
  8908                           l4093:	
  8909  02F5                     		movlw	102
  8910  02F5  3066               	xorwf	((efgtoa@nmode)^080h),w
  8911  02F6  064E               	btfss	status,2
  8912  02F7  1D03               	goto	u5701
  8913  02F8  2AFA               	goto	u5700
  8914  02F9  2AFB               u5701:
  8915  02FA                     	goto	l4099
  8916  02FA  2B05               u5700:
  8917  02FB                     	
  8918                           l4095:	
  8919  02FB                     	btfss	(efgtoa@e+1)^080h,7
  8920  02FB  1FE1               	goto	u5711
  8921  02FC  2AFE               	goto	u5710
  8922  02FD  2AFF               u5711:
  8923  02FE                     	goto	l4099
  8924  02FE  2B05               u5710:
  8925  02FF                     	goto	l4097
  8926  02FF  2B00               	
  8927                           l474:	
  8928  0300                     	line	400
  8929                           	
  8930                           l4097:	
  8931  0300                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 400:       
                                   ++m;
  8932                           	movlw	01h
  8933  0300  3001               	addwf	(efgtoa@m)^080h,f
  8934  0301  07C3               	movlw	0
  8935  0302  3000               	addwfc	(efgtoa@m+1)^080h,f
  8936  0303  3DC4               	goto	l4099
  8937  0304  2B05               	line	401
  8938                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 401:     }

  8939                           	
  8940                           l472:	
  8941  0305                     	line	404
  8942                           	
  8943                           l4099:	
  8944  0305                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 404:     if
                                  (nmode == 'f') {
  8945                           		movlw	102
  8946  0305  3066               	xorwf	((efgtoa@nmode)^080h),w
  8947  0306  064E               	btfss	status,2
  8948  0307  1D03               	goto	u5721
  8949  0308  2B0A               	goto	u5720
  8950  0309  2B0B               u5721:
  8951  030A                     	goto	l4111
  8952  030A  2B26               u5720:
  8953  030B                     	line	405
  8954                           	
  8955                           l4101:	
  8956  030B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 405:       
                                   if (e < 0) {
  8957                           	btfss	(efgtoa@e+1)^080h,7
  8958  030B  1FE1               	goto	u5731
  8959  030C  2B0E               	goto	u5730
  8960  030D  2B0F               u5731:
  8961  030E                     	goto	l4107
  8962  030E  2B1A               u5730:
  8963  030F                     	line	406
  8964                           	
  8965                           l4103:	
  8966  030F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 406:       
                                       u = 1.0;
  8967                           	movlw	0x3f
  8968  030F  303F               	movwf	(efgtoa@u+3)^080h
  8969  0310  00E7               	movlw	0x80
  8970  0311  3080               	movwf	(efgtoa@u+2)^080h
  8971  0312  00E6               	movlw	0x0
  8972  0313  3000               	movwf	(efgtoa@u+1)^080h
  8973  0314  00E5               	movlw	0x0
  8974  0315  3000               	movwf	(efgtoa@u)^080h
  8975  0316  00E4               
  8976                           	line	407
  8977                           	
  8978                           l4105:	
  8979  0317                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 407:       
                                       e = 0;
  8980                           	clrf	(efgtoa@e)^080h
  8981  0317  01E0               	clrf	(efgtoa@e+1)^080h
  8982  0318  01E1               	goto	l4107
  8983  0319  2B1A               	line	408
  8984                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 408:       
                                   }
  8985                           	
  8986                           l476:	
  8987  031A                     	line	409
  8988                           	
  8989                           l4107:	
  8990  031A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 409:       
                                   if (!(mode == 'g')) {
  8991                           		movlw	103
  8992  031A  3067               	xorwf	((efgtoa@mode)^080h),w
  8993  031B  0651               	btfsc	status,2
  8994  031C  1903               	goto	u5741
  8995  031D  2B1F               	goto	u5740
  8996  031E  2B20               u5741:
  8997  031F                     	goto	l4111
  8998  031F  2B26               u5740:
  8999  0320                     	line	410
  9000                           	
  9001                           l4109:	
  9002  0320                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 410:       
                                       m += e;
  9003                           	movf	(efgtoa@e)^080h,w
  9004  0320  0860               	addwf	(efgtoa@m)^080h,f
  9005  0321  07C3               	movf	(efgtoa@e+1)^080h,w
  9006  0322  0861               	addwfc	(efgtoa@m+1)^080h,f
  9007  0323  3DC4               	goto	l4111
  9008  0324  2B26               	line	411
  9009                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 411:       
                                   }
  9010                           	
  9011                           l477:	
  9012  0325                     	goto	l4111
  9013  0325  2B26               	line	412
  9014                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 412:     }

  9015                           	
  9016                           l475:	
  9017  0326                     	line	415
  9018                           	
  9019                           l4111:	
  9020  0326                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 415:     i 
                                 = 0;
  9021                           	clrf	(efgtoa@i)^080h
  9022  0326  01DA               	clrf	(efgtoa@i+1)^080h
  9023  0327  01DB               	line	416
  9024                           	
  9025                           l4113:	
  9026  0328                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 416:     h 
                                 = g;
  9027                           	movf	(efgtoa@g+3)^080h,w
  9028  0328  085F               	movwf	(efgtoa@h+3)^080h
  9029  0329  00D5               	movf	(efgtoa@g+2)^080h,w
  9030  032A  085E               	movwf	(efgtoa@h+2)^080h
  9031  032B  00D4               	movf	(efgtoa@g+1)^080h,w
  9032  032C  085D               	movwf	(efgtoa@h+1)^080h
  9033  032D  00D3               	movf	(efgtoa@g)^080h,w
  9034  032E  085C               	movwf	(efgtoa@h)^080h
  9035  032F  00D2               
  9036                           	line	417
  9037                           	
  9038                           l4115:	
  9039  0330                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 417:     ou
                                  = u;
  9040                           	movf	(efgtoa@u+3)^080h,w
  9041  0330  0867               	movwf	(efgtoa@ou+3)^080h
  9042  0331  00B2               	movf	(efgtoa@u+2)^080h,w
  9043  0332  0866               	movwf	(efgtoa@ou+2)^080h
  9044  0333  00B1               	movf	(efgtoa@u+1)^080h,w
  9045  0334  0865               	movwf	(efgtoa@ou+1)^080h
  9046  0335  00B0               	movf	(efgtoa@u)^080h,w
  9047  0336  0864               	movwf	(efgtoa@ou)^080h
  9048  0337  00AF               
  9049                           	line	418
  9050                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 418:     wh
                                 ile (i < m) {
  9051                           	goto	l4121
  9052  0338  2C11               	
  9053                           l479:	
  9054  0339                     	line	419
  9055                           	
  9056                           l4117:	
  9057  0339                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 419:       
                                   l = floorf(h/u);
  9058                           	movlb 1	; select bank1
  9059  0339  0141               	movf	(efgtoa@u+3)^080h,w
  9060  033A  0867               	movlb 0	; select bank0
  9061  033B  0140               	movwf	(___fldiv@a+3)
  9062  033C  00CB               	movlb 1	; select bank1
  9063  033D  0141               	movf	(efgtoa@u+2)^080h,w
  9064  033E  0866               	movlb 0	; select bank0
  9065  033F  0140               	movwf	(___fldiv@a+2)
  9066  0340  00CA               	movlb 1	; select bank1
  9067  0341  0141               	movf	(efgtoa@u+1)^080h,w
  9068  0342  0865               	movlb 0	; select bank0
  9069  0343  0140               	movwf	(___fldiv@a+1)
  9070  0344  00C9               	movlb 1	; select bank1
  9071  0345  0141               	movf	(efgtoa@u)^080h,w
  9072  0346  0864               	movlb 0	; select bank0
  9073  0347  0140               	movwf	(___fldiv@a)
  9074  0348  00C8               
  9075                           	movlb 1	; select bank1
  9076  0349  0141               	movf	(efgtoa@h+3)^080h,w
  9077  034A  0855               	movlb 0	; select bank0
  9078  034B  0140               	movwf	(___fldiv@b+3)
  9079  034C  00CF               	movlb 1	; select bank1
  9080  034D  0141               	movf	(efgtoa@h+2)^080h,w
  9081  034E  0854               	movlb 0	; select bank0
  9082  034F  0140               	movwf	(___fldiv@b+2)
  9083  0350  00CE               	movlb 1	; select bank1
  9084  0351  0141               	movf	(efgtoa@h+1)^080h,w
  9085  0352  0853               	movlb 0	; select bank0
  9086  0353  0140               	movwf	(___fldiv@b+1)
  9087  0354  00CD               	movlb 1	; select bank1
  9088  0355  0141               	movf	(efgtoa@h)^080h,w
  9089  0356  0852               	movlb 0	; select bank0
  9090  0357  0140               	movwf	(___fldiv@b)
  9091  0358  00CC               
  9092                           	fcall	___fldiv
  9093  0359  3193  23B6  3180   	movlb 0	; select bank0
  9094  035C  0140               	movf	(3+(?___fldiv)),w
  9095  035D  084B               	movwf	(floorf@x+3)
  9096  035E  00E5               	movf	(2+(?___fldiv)),w
  9097  035F  084A               	movwf	(floorf@x+2)
  9098  0360  00E4               	movf	(1+(?___fldiv)),w
  9099  0361  0849               	movwf	(floorf@x+1)
  9100  0362  00E3               	movf	(0+(?___fldiv)),w
  9101  0363  0848               	movwf	(floorf@x)
  9102  0364  00E2               
  9103                           	fcall	_floorf
  9104  0365  3191  2129  3180   	movlb 0	; select bank0
  9105  0368  0140               	movf	(3+(?_floorf)),w
  9106  0369  0865               	movlb 1	; select bank1
  9107  036A  0141               	movwf	(efgtoa@l+3)^080h
  9108  036B  00D9               	movlb 0	; select bank0
  9109  036C  0140               	movf	(2+(?_floorf)),w
  9110  036D  0864               	movlb 1	; select bank1
  9111  036E  0141               	movwf	(efgtoa@l+2)^080h
  9112  036F  00D8               	movlb 0	; select bank0
  9113  0370  0140               	movf	(1+(?_floorf)),w
  9114  0371  0863               	movlb 1	; select bank1
  9115  0372  0141               	movwf	(efgtoa@l+1)^080h
  9116  0373  00D7               	movlb 0	; select bank0
  9117  0374  0140               	movf	(0+(?_floorf)),w
  9118  0375  0862               	movlb 1	; select bank1
  9119  0376  0141               	movwf	(efgtoa@l)^080h
  9120  0377  00D6               
  9121                           	line	420
  9122                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 420:       
                                   d = (int)l;
  9123                           	movf	(efgtoa@l+3)^080h,w
  9124  0378  0859               	movlb 0	; select bank0
  9125  0379  0140               	movwf	(___fltol@f1+3)
  9126  037A  00A3               	movlb 1	; select bank1
  9127  037B  0141               	movf	(efgtoa@l+2)^080h,w
  9128  037C  0858               	movlb 0	; select bank0
  9129  037D  0140               	movwf	(___fltol@f1+2)
  9130  037E  00A2               	movlb 1	; select bank1
  9131  037F  0141               	movf	(efgtoa@l+1)^080h,w
  9132  0380  0857               	movlb 0	; select bank0
  9133  0381  0140               	movwf	(___fltol@f1+1)
  9134  0382  00A1               	movlb 1	; select bank1
  9135  0383  0141               	movf	(efgtoa@l)^080h,w
  9136  0384  0856               	movlb 0	; select bank0
  9137  0385  0140               	movwf	(___fltol@f1)
  9138  0386  00A0               
  9139                           	fcall	___fltol
  9140  0387  319A  22C3  3180   	movlb 0	; select bank0
  9141  038A  0140               	movf	(1+(?___fltol)),w
  9142  038B  0821               	movlb 1	; select bank1
  9143  038C  0141               	movwf	(efgtoa@d+1)^080h
  9144  038D  00C8               	movlb 0	; select bank0
  9145  038E  0140               	movf	(0+(?___fltol)),w
  9146  038F  0820               	movlb 1	; select bank1
  9147  0390  0141               	movwf	(efgtoa@d)^080h
  9148  0391  00C7               	line	421
  9149                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 421:       
                                   h -= l*u;
  9150                           	movf	(efgtoa@l+3)^080h,w
  9151  0392  0859               	movlb 0	; select bank0
  9152  0393  0140               	movwf	(___flmul@a+3)
  9153  0394  00B5               	movlb 1	; select bank1
  9154  0395  0141               	movf	(efgtoa@l+2)^080h,w
  9155  0396  0858               	movlb 0	; select bank0
  9156  0397  0140               	movwf	(___flmul@a+2)
  9157  0398  00B4               	movlb 1	; select bank1
  9158  0399  0141               	movf	(efgtoa@l+1)^080h,w
  9159  039A  0857               	movlb 0	; select bank0
  9160  039B  0140               	movwf	(___flmul@a+1)
  9161  039C  00B3               	movlb 1	; select bank1
  9162  039D  0141               	movf	(efgtoa@l)^080h,w
  9163  039E  0856               	movlb 0	; select bank0
  9164  039F  0140               	movwf	(___flmul@a)
  9165  03A0  00B2               
  9166                           	movlb 1	; select bank1
  9167  03A1  0141               	movf	(efgtoa@u+3)^080h,w
  9168  03A2  0867               	movlb 0	; select bank0
  9169  03A3  0140               	movwf	(___flmul@b+3)
  9170  03A4  00B1               	movlb 1	; select bank1
  9171  03A5  0141               	movf	(efgtoa@u+2)^080h,w
  9172  03A6  0866               	movlb 0	; select bank0
  9173  03A7  0140               	movwf	(___flmul@b+2)
  9174  03A8  00B0               	movlb 1	; select bank1
  9175  03A9  0141               	movf	(efgtoa@u+1)^080h,w
  9176  03AA  0865               	movlb 0	; select bank0
  9177  03AB  0140               	movwf	(___flmul@b+1)
  9178  03AC  00AF               	movlb 1	; select bank1
  9179  03AD  0141               	movf	(efgtoa@u)^080h,w
  9180  03AE  0864               	movlb 0	; select bank0
  9181  03AF  0140               	movwf	(___flmul@b)
  9182  03B0  00AE               
  9183                           	fcall	___flmul
  9184  03B1  3195  2595  3180   	movlb 0	; select bank0
  9185  03B4  0140               	movf	(3+(?___flmul)),w
  9186  03B5  0831               	movwf	(___flsub@a+3)
  9187  03B6  00E3               	movf	(2+(?___flmul)),w
  9188  03B7  0830               	movwf	(___flsub@a+2)
  9189  03B8  00E2               	movf	(1+(?___flmul)),w
  9190  03B9  082F               	movwf	(___flsub@a+1)
  9191  03BA  00E1               	movf	(0+(?___flmul)),w
  9192  03BB  082E               	movwf	(___flsub@a)
  9193  03BC  00E0               
  9194                           	movlb 1	; select bank1
  9195  03BD  0141               	movf	(efgtoa@h+3)^080h,w
  9196  03BE  0855               	movlb 0	; select bank0
  9197  03BF  0140               	movwf	(___flsub@b+3)
  9198  03C0  00E7               	movlb 1	; select bank1
  9199  03C1  0141               	movf	(efgtoa@h+2)^080h,w
  9200  03C2  0854               	movlb 0	; select bank0
  9201  03C3  0140               	movwf	(___flsub@b+2)
  9202  03C4  00E6               	movlb 1	; select bank1
  9203  03C5  0141               	movf	(efgtoa@h+1)^080h,w
  9204  03C6  0853               	movlb 0	; select bank0
  9205  03C7  0140               	movwf	(___flsub@b+1)
  9206  03C8  00E5               	movlb 1	; select bank1
  9207  03C9  0141               	movf	(efgtoa@h)^080h,w
  9208  03CA  0852               	movlb 0	; select bank0
  9209  03CB  0140               	movwf	(___flsub@b)
  9210  03CC  00E4               
  9211                           	fcall	___flsub
  9212  03CD  31A2  220D  3180   	movlb 0	; select bank0
  9213  03D0  0140               	movf	(3+(?___flsub)),w
  9214  03D1  0863               	movlb 1	; select bank1
  9215  03D2  0141               	movwf	(efgtoa@h+3)^080h
  9216  03D3  00D5               	movlb 0	; select bank0
  9217  03D4  0140               	movf	(2+(?___flsub)),w
  9218  03D5  0862               	movlb 1	; select bank1
  9219  03D6  0141               	movwf	(efgtoa@h+2)^080h
  9220  03D7  00D4               	movlb 0	; select bank0
  9221  03D8  0140               	movf	(1+(?___flsub)),w
  9222  03D9  0861               	movlb 1	; select bank1
  9223  03DA  0141               	movwf	(efgtoa@h+1)^080h
  9224  03DB  00D3               	movlb 0	; select bank0
  9225  03DC  0140               	movf	(0+(?___flsub)),w
  9226  03DD  0860               	movlb 1	; select bank1
  9227  03DE  0141               	movwf	(efgtoa@h)^080h
  9228  03DF  00D2               
  9229                           	line	422
  9230                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 422:       
                                   u = u/10.0;
  9231                           	movlw	0x41
  9232  03E0  3041               	movlb 0	; select bank0
  9233  03E1  0140               	movwf	(___fldiv@a+3)
  9234  03E2  00CB               	movlw	0x20
  9235  03E3  3020               	movwf	(___fldiv@a+2)
  9236  03E4  00CA               	movlw	0x0
  9237  03E5  3000               	movwf	(___fldiv@a+1)
  9238  03E6  00C9               	movlw	0x0
  9239  03E7  3000               	movwf	(___fldiv@a)
  9240  03E8  00C8               
  9241                           	movlb 1	; select bank1
  9242  03E9  0141               	movf	(efgtoa@u+3)^080h,w
  9243  03EA  0867               	movlb 0	; select bank0
  9244  03EB  0140               	movwf	(___fldiv@b+3)
  9245  03EC  00CF               	movlb 1	; select bank1
  9246  03ED  0141               	movf	(efgtoa@u+2)^080h,w
  9247  03EE  0866               	movlb 0	; select bank0
  9248  03EF  0140               	movwf	(___fldiv@b+2)
  9249  03F0  00CE               	movlb 1	; select bank1
  9250  03F1  0141               	movf	(efgtoa@u+1)^080h,w
  9251  03F2  0865               	movlb 0	; select bank0
  9252  03F3  0140               	movwf	(___fldiv@b+1)
  9253  03F4  00CD               	movlb 1	; select bank1
  9254  03F5  0141               	movf	(efgtoa@u)^080h,w
  9255  03F6  0864               	movlb 0	; select bank0
  9256  03F7  0140               	movwf	(___fldiv@b)
  9257  03F8  00CC               
  9258                           	fcall	___fldiv
  9259  03F9  3193  23B6  3180   	movlb 0	; select bank0
  9260  03FC  0140               	movf	(3+(?___fldiv)),w
  9261  03FD  084B               	movlb 1	; select bank1
  9262  03FE  0141               	movwf	(efgtoa@u+3)^080h
  9263  03FF  00E7               	movlb 0	; select bank0
  9264  0400  0140               	movf	(2+(?___fldiv)),w
  9265  0401  084A               	movlb 1	; select bank1
  9266  0402  0141               	movwf	(efgtoa@u+2)^080h
  9267  0403  00E6               	movlb 0	; select bank0
  9268  0404  0140               	movf	(1+(?___fldiv)),w
  9269  0405  0849               	movlb 1	; select bank1
  9270  0406  0141               	movwf	(efgtoa@u+1)^080h
  9271  0407  00E5               	movlb 0	; select bank0
  9272  0408  0140               	movf	(0+(?___fldiv)),w
  9273  0409  0848               	movlb 1	; select bank1
  9274  040A  0141               	movwf	(efgtoa@u)^080h
  9275  040B  00E4               
  9276                           	line	423
  9277                           	
  9278                           l4119:	
  9279  040C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 423:       
                                   ++i;
  9280                           	movlw	01h
  9281  040C  3001               	addwf	(efgtoa@i)^080h,f
  9282  040D  07DA               	movlw	0
  9283  040E  3000               	addwfc	(efgtoa@i+1)^080h,f
  9284  040F  3DDB               	goto	l4121
  9285  0410  2C11               	line	424
  9286                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 424:     }

  9287                           	
  9288                           l478:	
  9289  0411                     	line	418
  9290                           	
  9291                           l4121:	
  9292  0411                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 418:     wh
                                 ile (i < m) {
  9293                           	movf	(efgtoa@i+1)^080h,w
  9294  0411  085B               	xorlw	80h
  9295  0412  3A80               	movlb 0	; select bank0
  9296  0413  0140               	movwf	(??_efgtoa+0)+0
  9297  0414  00EC               	movlb 1	; select bank1
  9298  0415  0141               	movf	(efgtoa@m+1)^080h,w
  9299  0416  0844               	xorlw	80h
  9300  0417  3A80               	movlb 0	; select bank0
  9301  0418  0140               	subwf	(??_efgtoa+0)+0,w
  9302  0419  026C               	skipz
  9303  041A  1D03               	goto	u5755
  9304  041B  2C1F               	movlb 1	; select bank1
  9305  041C  0141               	movf	(efgtoa@m)^080h,w
  9306  041D  0843               	subwf	(efgtoa@i)^080h,w
  9307  041E  025A               u5755:
  9308  041F                     
  9309                           	skipc
  9310  041F  1C03               	goto	u5751
  9311  0420  2C22               	goto	u5750
  9312  0421  2C23               u5751:
  9313  0422                     	goto	l4117
  9314  0422  2B39               u5750:
  9315  0423                     	goto	l4123
  9316  0423  2C24               	
  9317                           l480:	
  9318  0424                     	line	427
  9319                           	
  9320                           l4123:	
  9321  0424                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 427:     l 
                                 = u*5.0;
  9322                           	movlw	0x40
  9323  0424  3040               	movlb 0	; select bank0
  9324  0425  0140               	movwf	(___flmul@b+3)
  9325  0426  00B1               	movlw	0xa0
  9326  0427  30A0               	movwf	(___flmul@b+2)
  9327  0428  00B0               	movlw	0x0
  9328  0429  3000               	movwf	(___flmul@b+1)
  9329  042A  00AF               	movlw	0x0
  9330  042B  3000               	movwf	(___flmul@b)
  9331  042C  00AE               
  9332                           	movlb 1	; select bank1
  9333  042D  0141               	movf	(efgtoa@u+3)^080h,w
  9334  042E  0867               	movlb 0	; select bank0
  9335  042F  0140               	movwf	(___flmul@a+3)
  9336  0430  00B5               	movlb 1	; select bank1
  9337  0431  0141               	movf	(efgtoa@u+2)^080h,w
  9338  0432  0866               	movlb 0	; select bank0
  9339  0433  0140               	movwf	(___flmul@a+2)
  9340  0434  00B4               	movlb 1	; select bank1
  9341  0435  0141               	movf	(efgtoa@u+1)^080h,w
  9342  0436  0865               	movlb 0	; select bank0
  9343  0437  0140               	movwf	(___flmul@a+1)
  9344  0438  00B3               	movlb 1	; select bank1
  9345  0439  0141               	movf	(efgtoa@u)^080h,w
  9346  043A  0864               	movlb 0	; select bank0
  9347  043B  0140               	movwf	(___flmul@a)
  9348  043C  00B2               
  9349                           	fcall	___flmul
  9350  043D  3195  2595  3180   	movlb 0	; select bank0
  9351  0440  0140               	movf	(3+(?___flmul)),w
  9352  0441  0831               	movlb 1	; select bank1
  9353  0442  0141               	movwf	(efgtoa@l+3)^080h
  9354  0443  00D9               	movlb 0	; select bank0
  9355  0444  0140               	movf	(2+(?___flmul)),w
  9356  0445  0830               	movlb 1	; select bank1
  9357  0446  0141               	movwf	(efgtoa@l+2)^080h
  9358  0447  00D8               	movlb 0	; select bank0
  9359  0448  0140               	movf	(1+(?___flmul)),w
  9360  0449  082F               	movlb 1	; select bank1
  9361  044A  0141               	movwf	(efgtoa@l+1)^080h
  9362  044B  00D7               	movlb 0	; select bank0
  9363  044C  0140               	movf	(0+(?___flmul)),w
  9364  044D  082E               	movlb 1	; select bank1
  9365  044E  0141               	movwf	(efgtoa@l)^080h
  9366  044F  00D6               
  9367                           	line	428
  9368                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 428:     if
                                  (h < l) {
  9369                           	movf	(efgtoa@h+3)^080h,w
  9370  0450  0855               	movlb 0	; select bank0
  9371  0451  0140               	movwf	(___flge@ff1+3)
  9372  0452  00CB               	movlb 1	; select bank1
  9373  0453  0141               	movf	(efgtoa@h+2)^080h,w
  9374  0454  0854               	movlb 0	; select bank0
  9375  0455  0140               	movwf	(___flge@ff1+2)
  9376  0456  00CA               	movlb 1	; select bank1
  9377  0457  0141               	movf	(efgtoa@h+1)^080h,w
  9378  0458  0853               	movlb 0	; select bank0
  9379  0459  0140               	movwf	(___flge@ff1+1)
  9380  045A  00C9               	movlb 1	; select bank1
  9381  045B  0141               	movf	(efgtoa@h)^080h,w
  9382  045C  0852               	movlb 0	; select bank0
  9383  045D  0140               	movwf	(___flge@ff1)
  9384  045E  00C8               
  9385                           	movlb 1	; select bank1
  9386  045F  0141               	movf	(efgtoa@l+3)^080h,w
  9387  0460  0859               	movlb 0	; select bank0
  9388  0461  0140               	movwf	(___flge@ff2+3)
  9389  0462  00CF               	movlb 1	; select bank1
  9390  0463  0141               	movf	(efgtoa@l+2)^080h,w
  9391  0464  0858               	movlb 0	; select bank0
  9392  0465  0140               	movwf	(___flge@ff2+2)
  9393  0466  00CE               	movlb 1	; select bank1
  9394  0467  0141               	movf	(efgtoa@l+1)^080h,w
  9395  0468  0857               	movlb 0	; select bank0
  9396  0469  0140               	movwf	(___flge@ff2+1)
  9397  046A  00CD               	movlb 1	; select bank1
  9398  046B  0141               	movf	(efgtoa@l)^080h,w
  9399  046C  0856               	movlb 0	; select bank0
  9400  046D  0140               	movwf	(___flge@ff2)
  9401  046E  00CC               
  9402                           	fcall	___flge
  9403  046F  319B  2358  3180   	btfsc	status,0
  9404  0472  1803               	goto	u5761
  9405  0473  2C75               	goto	u5760
  9406  0474  2C76               u5761:
  9407  0475                     	goto	l4127
  9408  0475  2C80               u5760:
  9409  0476                     	line	429
  9410                           	
  9411                           l4125:	
  9412  0476                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 429:       
                                   l = 0.0;
  9413                           	movlw	0x0
  9414  0476  3000               	movlb 1	; select bank1
  9415  0477  0141               	movwf	(efgtoa@l+3)^080h
  9416  0478  00D9               	movlw	0x0
  9417  0479  3000               	movwf	(efgtoa@l+2)^080h
  9418  047A  00D8               	movlw	0x0
  9419  047B  3000               	movwf	(efgtoa@l+1)^080h
  9420  047C  00D7               	movlw	0x0
  9421  047D  3000               	movwf	(efgtoa@l)^080h
  9422  047E  00D6               
  9423                           	line	430
  9424                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 430:     } 
                                 else {
  9425                           	goto	l4133
  9426  047F  2CB6               	
  9427                           l481:	
  9428  0480                     	line	432
  9429                           	
  9430                           l4127:	
  9431  0480                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 432:       
                                   if ((h == l) && !(d % 2)) {
  9432                           	movlb 1	; select bank1
  9433  0480  0141               	movf	(efgtoa@h+3)^080h,w
  9434  0481  0855               	movlb 0	; select bank0
  9435  0482  0140               	movwf	(___fleq@ff1+3)
  9436  0483  00A3               	movlb 1	; select bank1
  9437  0484  0141               	movf	(efgtoa@h+2)^080h,w
  9438  0485  0854               	movlb 0	; select bank0
  9439  0486  0140               	movwf	(___fleq@ff1+2)
  9440  0487  00A2               	movlb 1	; select bank1
  9441  0488  0141               	movf	(efgtoa@h+1)^080h,w
  9442  0489  0853               	movlb 0	; select bank0
  9443  048A  0140               	movwf	(___fleq@ff1+1)
  9444  048B  00A1               	movlb 1	; select bank1
  9445  048C  0141               	movf	(efgtoa@h)^080h,w
  9446  048D  0852               	movlb 0	; select bank0
  9447  048E  0140               	movwf	(___fleq@ff1)
  9448  048F  00A0               
  9449                           	movlb 1	; select bank1
  9450  0490  0141               	movf	(efgtoa@l+3)^080h,w
  9451  0491  0859               	movlb 0	; select bank0
  9452  0492  0140               	movwf	(___fleq@ff2+3)
  9453  0493  00A7               	movlb 1	; select bank1
  9454  0494  0141               	movf	(efgtoa@l+2)^080h,w
  9455  0495  0858               	movlb 0	; select bank0
  9456  0496  0140               	movwf	(___fleq@ff2+2)
  9457  0497  00A6               	movlb 1	; select bank1
  9458  0498  0141               	movf	(efgtoa@l+1)^080h,w
  9459  0499  0857               	movlb 0	; select bank0
  9460  049A  0140               	movwf	(___fleq@ff2+1)
  9461  049B  00A5               	movlb 1	; select bank1
  9462  049C  0141               	movf	(efgtoa@l)^080h,w
  9463  049D  0856               	movlb 0	; select bank0
  9464  049E  0140               	movwf	(___fleq@ff2)
  9465  049F  00A4               
  9466                           	fcall	___fleq
  9467  04A0  31A5  25D7  3180   	btfss	status,0
  9468  04A3  1C03               	goto	u5771
  9469  04A4  2CA6               	goto	u5770
  9470  04A5  2CA7               u5771:
  9471  04A6                     	goto	l4133
  9472  04A6  2CB6               u5770:
  9473  04A7                     	
  9474                           l4129:	
  9475  04A7                     	movlb 1	; select bank1
  9476  04A7  0141               	btfsc	(efgtoa@d)^080h,(0)&7
  9477  04A8  1847               	goto	u5781
  9478  04A9  2CAB               	goto	u5780
  9479  04AA  2CAC               u5781:
  9480  04AB                     	goto	l4133
  9481  04AB  2CB6               u5780:
  9482  04AC                     	line	433
  9483                           	
  9484                           l4131:	
  9485  04AC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 433:       
                                       l = 0.0;
  9486                           	movlw	0x0
  9487  04AC  3000               	movwf	(efgtoa@l+3)^080h
  9488  04AD  00D9               	movlw	0x0
  9489  04AE  3000               	movwf	(efgtoa@l+2)^080h
  9490  04AF  00D8               	movlw	0x0
  9491  04B0  3000               	movwf	(efgtoa@l+1)^080h
  9492  04B1  00D7               	movlw	0x0
  9493  04B2  3000               	movwf	(efgtoa@l)^080h
  9494  04B3  00D6               
  9495                           	goto	l4133
  9496  04B4  2CB6               	line	434
  9497                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 434:       
                                   }
  9498                           	
  9499                           l483:	
  9500  04B5                     	goto	l4133
  9501  04B5  2CB6               	line	435
  9502                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 435:     }

  9503                           	
  9504                           l482:	
  9505  04B6                     	line	438
  9506                           	
  9507                           l4133:	
  9508  04B6                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 438:     h 
                                 = g + l;
  9509                           	movlb 1	; select bank1
  9510  04B6  0141               	movf	(efgtoa@l+3)^080h,w
  9511  04B7  0859               	movlb 0	; select bank0
  9512  04B8  0140               	movwf	(___fladd@b+3)
  9513  04B9  00CB               	movlb 1	; select bank1
  9514  04BA  0141               	movf	(efgtoa@l+2)^080h,w
  9515  04BB  0858               	movlb 0	; select bank0
  9516  04BC  0140               	movwf	(___fladd@b+2)
  9517  04BD  00CA               	movlb 1	; select bank1
  9518  04BE  0141               	movf	(efgtoa@l+1)^080h,w
  9519  04BF  0857               	movlb 0	; select bank0
  9520  04C0  0140               	movwf	(___fladd@b+1)
  9521  04C1  00C9               	movlb 1	; select bank1
  9522  04C2  0141               	movf	(efgtoa@l)^080h,w
  9523  04C3  0856               	movlb 0	; select bank0
  9524  04C4  0140               	movwf	(___fladd@b)
  9525  04C5  00C8               
  9526                           	movlb 1	; select bank1
  9527  04C6  0141               	movf	(efgtoa@g+3)^080h,w
  9528  04C7  085F               	movlb 0	; select bank0
  9529  04C8  0140               	movwf	(___fladd@a+3)
  9530  04C9  00CF               	movlb 1	; select bank1
  9531  04CA  0141               	movf	(efgtoa@g+2)^080h,w
  9532  04CB  085E               	movlb 0	; select bank0
  9533  04CC  0140               	movwf	(___fladd@a+2)
  9534  04CD  00CE               	movlb 1	; select bank1
  9535  04CE  0141               	movf	(efgtoa@g+1)^080h,w
  9536  04CF  085D               	movlb 0	; select bank0
  9537  04D0  0140               	movwf	(___fladd@a+1)
  9538  04D1  00CD               	movlb 1	; select bank1
  9539  04D2  0141               	movf	(efgtoa@g)^080h,w
  9540  04D3  085C               	movlb 0	; select bank0
  9541  04D4  0140               	movwf	(___fladd@a)
  9542  04D5  00CC               
  9543                           	fcall	___fladd
  9544  04D6  3189  21B1  3180   	movlb 0	; select bank0
  9545  04D9  0140               	movf	(3+(?___fladd)),w
  9546  04DA  084B               	movlb 1	; select bank1
  9547  04DB  0141               	movwf	(efgtoa@h+3)^080h
  9548  04DC  00D5               	movlb 0	; select bank0
  9549  04DD  0140               	movf	(2+(?___fladd)),w
  9550  04DE  084A               	movlb 1	; select bank1
  9551  04DF  0141               	movwf	(efgtoa@h+2)^080h
  9552  04E0  00D4               	movlb 0	; select bank0
  9553  04E1  0140               	movf	(1+(?___fladd)),w
  9554  04E2  0849               	movlb 1	; select bank1
  9555  04E3  0141               	movwf	(efgtoa@h+1)^080h
  9556  04E4  00D3               	movlb 0	; select bank0
  9557  04E5  0140               	movf	(0+(?___fladd)),w
  9558  04E6  0848               	movlb 1	; select bank1
  9559  04E7  0141               	movwf	(efgtoa@h)^080h
  9560  04E8  00D2               
  9561                           	line	441
  9562                           	
  9563                           l4135:	
  9564  04E9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 441:     u 
                                 = ou;
  9565                           	movf	(efgtoa@ou+3)^080h,w
  9566  04E9  0832               	movwf	(efgtoa@u+3)^080h
  9567  04EA  00E7               	movf	(efgtoa@ou+2)^080h,w
  9568  04EB  0831               	movwf	(efgtoa@u+2)^080h
  9569  04EC  00E6               	movf	(efgtoa@ou+1)^080h,w
  9570  04ED  0830               	movwf	(efgtoa@u+1)^080h
  9571  04EE  00E5               	movf	(efgtoa@ou)^080h,w
  9572  04EF  082F               	movwf	(efgtoa@u)^080h
  9573  04F0  00E4               
  9574                           	line	442
  9575                           	
  9576                           l4137:	
  9577  04F1                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 442:     ne
                                  = (nmode == 'e') ? 0 : e;
  9578                           		movlw	101
  9579  04F1  3065               	xorwf	((efgtoa@nmode)^080h),w
  9580  04F2  064E               	btfsc	status,2
  9581  04F3  1903               	goto	u5791
  9582  04F4  2CF6               	goto	u5790
  9583  04F5  2CF7               u5791:
  9584  04F6                     	goto	l4141
  9585  04F6  2CFC               u5790:
  9586  04F7                     	
  9587                           l4139:	
  9588  04F7                     	movf	(efgtoa@e+1)^080h,w
  9589  04F7  0861               	movwf	(efgtoa@ne+1)^080h
  9590  04F8  00C6               	movf	(efgtoa@e)^080h,w
  9591  04F9  0860               	movwf	(efgtoa@ne)^080h
  9592  04FA  00C5               	goto	l487
  9593  04FB  2CFE               	
  9594                           l485:	
  9595  04FC                     	
  9596                           l4141:	
  9597  04FC                     	clrf	(efgtoa@ne)^080h
  9598  04FC  01C5               	clrf	(efgtoa@ne+1)^080h
  9599  04FD  01C6               	
  9600                           l487:	
  9601  04FE                     	line	443
  9602                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 443:     pp
                                  = 0;
  9603                           	clrf	(efgtoa@pp)^080h
  9604  04FE  01C1               	clrf	(efgtoa@pp+1)^080h
  9605  04FF  01C2               	line	444
  9606                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 444:     t 
                                 = 0;
  9607                           	clrf	(efgtoa@t)^080h
  9608  0500  01BF               	clrf	(efgtoa@t+1)^080h
  9609  0501  01C0               	line	445
  9610                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 445:     i 
                                 = 0;
  9611                           	clrf	(efgtoa@i)^080h
  9612  0502  01DA               	clrf	(efgtoa@i+1)^080h
  9613  0503  01DB               	line	446
  9614                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 446:     wh
                                 ile ((i < m) && (n < (80 - 5))) {
  9615                           	goto	l4191
  9616  0504  2E5A               	
  9617                           l489:	
  9618  0505                     	line	447
  9619                           	
  9620                           l4143:	
  9621  0505                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 447:       
                                   l = floorf(h/u);
  9622                           	movlb 1	; select bank1
  9623  0505  0141               	movf	(efgtoa@u+3)^080h,w
  9624  0506  0867               	movlb 0	; select bank0
  9625  0507  0140               	movwf	(___fldiv@a+3)
  9626  0508  00CB               	movlb 1	; select bank1
  9627  0509  0141               	movf	(efgtoa@u+2)^080h,w
  9628  050A  0866               	movlb 0	; select bank0
  9629  050B  0140               	movwf	(___fldiv@a+2)
  9630  050C  00CA               	movlb 1	; select bank1
  9631  050D  0141               	movf	(efgtoa@u+1)^080h,w
  9632  050E  0865               	movlb 0	; select bank0
  9633  050F  0140               	movwf	(___fldiv@a+1)
  9634  0510  00C9               	movlb 1	; select bank1
  9635  0511  0141               	movf	(efgtoa@u)^080h,w
  9636  0512  0864               	movlb 0	; select bank0
  9637  0513  0140               	movwf	(___fldiv@a)
  9638  0514  00C8               
  9639                           	movlb 1	; select bank1
  9640  0515  0141               	movf	(efgtoa@h+3)^080h,w
  9641  0516  0855               	movlb 0	; select bank0
  9642  0517  0140               	movwf	(___fldiv@b+3)
  9643  0518  00CF               	movlb 1	; select bank1
  9644  0519  0141               	movf	(efgtoa@h+2)^080h,w
  9645  051A  0854               	movlb 0	; select bank0
  9646  051B  0140               	movwf	(___fldiv@b+2)
  9647  051C  00CE               	movlb 1	; select bank1
  9648  051D  0141               	movf	(efgtoa@h+1)^080h,w
  9649  051E  0853               	movlb 0	; select bank0
  9650  051F  0140               	movwf	(___fldiv@b+1)
  9651  0520  00CD               	movlb 1	; select bank1
  9652  0521  0141               	movf	(efgtoa@h)^080h,w
  9653  0522  0852               	movlb 0	; select bank0
  9654  0523  0140               	movwf	(___fldiv@b)
  9655  0524  00CC               
  9656                           	fcall	___fldiv
  9657  0525  3193  23B6  3180   	movlb 0	; select bank0
  9658  0528  0140               	movf	(3+(?___fldiv)),w
  9659  0529  084B               	movwf	(floorf@x+3)
  9660  052A  00E5               	movf	(2+(?___fldiv)),w
  9661  052B  084A               	movwf	(floorf@x+2)
  9662  052C  00E4               	movf	(1+(?___fldiv)),w
  9663  052D  0849               	movwf	(floorf@x+1)
  9664  052E  00E3               	movf	(0+(?___fldiv)),w
  9665  052F  0848               	movwf	(floorf@x)
  9666  0530  00E2               
  9667                           	fcall	_floorf
  9668  0531  3191  2129  3180   	movlb 0	; select bank0
  9669  0534  0140               	movf	(3+(?_floorf)),w
  9670  0535  0865               	movlb 1	; select bank1
  9671  0536  0141               	movwf	(efgtoa@l+3)^080h
  9672  0537  00D9               	movlb 0	; select bank0
  9673  0538  0140               	movf	(2+(?_floorf)),w
  9674  0539  0864               	movlb 1	; select bank1
  9675  053A  0141               	movwf	(efgtoa@l+2)^080h
  9676  053B  00D8               	movlb 0	; select bank0
  9677  053C  0140               	movf	(1+(?_floorf)),w
  9678  053D  0863               	movlb 1	; select bank1
  9679  053E  0141               	movwf	(efgtoa@l+1)^080h
  9680  053F  00D7               	movlb 0	; select bank0
  9681  0540  0140               	movf	(0+(?_floorf)),w
  9682  0541  0862               	movlb 1	; select bank1
  9683  0542  0141               	movwf	(efgtoa@l)^080h
  9684  0543  00D6               
  9685                           	line	448
  9686                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 448:       
                                   d = (int)l;
  9687                           	movf	(efgtoa@l+3)^080h,w
  9688  0544  0859               	movlb 0	; select bank0
  9689  0545  0140               	movwf	(___fltol@f1+3)
  9690  0546  00A3               	movlb 1	; select bank1
  9691  0547  0141               	movf	(efgtoa@l+2)^080h,w
  9692  0548  0858               	movlb 0	; select bank0
  9693  0549  0140               	movwf	(___fltol@f1+2)
  9694  054A  00A2               	movlb 1	; select bank1
  9695  054B  0141               	movf	(efgtoa@l+1)^080h,w
  9696  054C  0857               	movlb 0	; select bank0
  9697  054D  0140               	movwf	(___fltol@f1+1)
  9698  054E  00A1               	movlb 1	; select bank1
  9699  054F  0141               	movf	(efgtoa@l)^080h,w
  9700  0550  0856               	movlb 0	; select bank0
  9701  0551  0140               	movwf	(___fltol@f1)
  9702  0552  00A0               
  9703                           	fcall	___fltol
  9704  0553  319A  22C3  3180   	movlb 0	; select bank0
  9705  0556  0140               	movf	(1+(?___fltol)),w
  9706  0557  0821               	movlb 1	; select bank1
  9707  0558  0141               	movwf	(efgtoa@d+1)^080h
  9708  0559  00C8               	movlb 0	; select bank0
  9709  055A  0140               	movf	(0+(?___fltol)),w
  9710  055B  0820               	movlb 1	; select bank1
  9711  055C  0141               	movwf	(efgtoa@d)^080h
  9712  055D  00C7               	line	449
  9713                           	
  9714                           l4145:	
  9715  055E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 449:       
                                   if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  9716                           	movlb 2	; select bank2
  9717  055E  0142               	btfsc	(_flags)^0100h,(4)&7
  9718  055F  1A68               	goto	u5801
  9719  0560  2D62               	goto	u5800
  9720  0561  2D63               u5801:
  9721  0562                     	goto	l4155
  9722  0562  2D79               u5800:
  9723  0563                     	
  9724                           l4147:	
  9725  0563                     	movlb 1	; select bank1
  9726  0563  0141               	movf	((efgtoa@d)^080h),w
  9727  0564  0847               iorwf	((efgtoa@d+1)^080h),w
  9728  0565  0448               	btfss	status,2
  9729  0566  1D03               	goto	u5811
  9730  0567  2D69               	goto	u5810
  9731  0568  2D6A               u5811:
  9732  0569                     	goto	l4155
  9733  0569  2D79               u5810:
  9734  056A                     	
  9735                           l4149:	
  9736  056A                     		movlw	103
  9737  056A  3067               	xorwf	((efgtoa@mode)^080h),w
  9738  056B  0651               	btfss	status,2
  9739  056C  1D03               	goto	u5821
  9740  056D  2D6F               	goto	u5820
  9741  056E  2D70               u5821:
  9742  056F                     	goto	l4155
  9743  056F  2D79               u5820:
  9744  0570                     	
  9745                           l4151:	
  9746  0570                     	btfss	(efgtoa@ne+1)^080h,7
  9747  0570  1FC6               	goto	u5831
  9748  0571  2D73               	goto	u5830
  9749  0572  2D74               u5831:
  9750  0573                     	goto	l4155
  9751  0573  2D79               u5830:
  9752  0574                     	line	450
  9753                           	
  9754                           l4153:	
  9755  0574                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 450:       
                                       ++t;
  9756                           	movlw	01h
  9757  0574  3001               	addwf	(efgtoa@t)^080h,f
  9758  0575  07BF               	movlw	0
  9759  0576  3000               	addwfc	(efgtoa@t+1)^080h,f
  9760  0577  3DC0               	line	451
  9761                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 451:       
                                   } else {
  9762                           	goto	l4183
  9763  0578  2DD7               	
  9764                           l490:	
  9765  0579                     	line	452
  9766                           	
  9767                           l4155:	
  9768  0579                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 452:       
                                       if (!pp && (ne < 0)) {
  9769                           	movlb 1	; select bank1
  9770  0579  0141               	movf	((efgtoa@pp)^080h),w
  9771  057A  0841               iorwf	((efgtoa@pp+1)^080h),w
  9772  057B  0442               	btfss	status,2
  9773  057C  1D03               	goto	u5841
  9774  057D  2D7F               	goto	u5840
  9775  057E  2D80               u5841:
  9776  057F                     	goto	l4175
  9777  057F  2DB9               u5840:
  9778  0580                     	
  9779                           l4157:	
  9780  0580                     	btfss	(efgtoa@ne+1)^080h,7
  9781  0580  1FC6               	goto	u5851
  9782  0581  2D83               	goto	u5850
  9783  0582  2D84               u5851:
  9784  0583                     	goto	l4175
  9785  0583  2DB9               u5850:
  9786  0584                     	line	453
  9787                           	
  9788                           l4159:	
  9789  0584                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 453:       
                                           dbuf[n++] = '.';
  9790                           	movlw	low(02Eh)
  9791  0584  302E               	movlb 0	; select bank0
  9792  0585  0140               	movwf	(??_efgtoa+0)+0
  9793  0586  00EC               	movlb 1	; select bank1
  9794  0587  0141               	movf	(efgtoa@n)^080h,w
  9795  0588  0862               	addlw	low(_dbuf|((0x3)<<8))&0ffh
  9796  0589  3E20               	movwf	fsr1l
  9797  058A  0086               	movlw 3	; select bank6/7
  9798  058B  3003               	movwf fsr1h	
  9799  058C  0087               	
  9800                           	movlb 0	; select bank0
  9801  058D  0140               	movf	(??_efgtoa+0)+0,w
  9802  058E  086C               	movwf	indf1
  9803  058F  0081               	
  9804                           l4161:	
  9805  0590                     	movlw	01h
  9806  0590  3001               	movlb 1	; select bank1
  9807  0591  0141               	addwf	(efgtoa@n)^080h,f
  9808  0592  07E2               	movlw	0
  9809  0593  3000               	addwfc	(efgtoa@n+1)^080h,f
  9810  0594  3DE3               	line	454
  9811                           	
  9812                           l4163:	
  9813  0595                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 454:       
                                           --w;
  9814                           	movlw	0FFh
  9815  0595  30FF               	addwf	(efgtoa@w)^080h,f
  9816  0596  07CF               	movlw	0FFh
  9817  0597  30FF               	addwfc	(efgtoa@w+1)^080h,f
  9818  0598  3DD0               	line	455
  9819                           	
  9820                           l4165:	
  9821  0599                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 455:       
                                           pp = 1;
  9822                           	movlw	01h
  9823  0599  3001               	movwf	(efgtoa@pp)^080h
  9824  059A  00C1               	movlw	0
  9825  059B  3000               	movwf	((efgtoa@pp)^080h)+1
  9826  059C  00C2               	goto	l4175
  9827  059D  2DB9               	line	456
  9828                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 456:       
                                       }
  9829                           	
  9830                           l492:	
  9831  059E                     	line	457
  9832                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 457:       
                                       while (t) {
  9833                           	goto	l4175
  9834  059E  2DB9               	
  9835                           l494:	
  9836  059F                     	line	458
  9837                           	
  9838                           l4167:	
  9839  059F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 458:       
                                           dbuf[n++] = '0';
  9840                           	movlw	low(030h)
  9841  059F  3030               	movlb 0	; select bank0
  9842  05A0  0140               	movwf	(??_efgtoa+0)+0
  9843  05A1  00EC               	movlb 1	; select bank1
  9844  05A2  0141               	movf	(efgtoa@n)^080h,w
  9845  05A3  0862               	addlw	low(_dbuf|((0x3)<<8))&0ffh
  9846  05A4  3E20               	movwf	fsr1l
  9847  05A5  0086               	movlw 3	; select bank6/7
  9848  05A6  3003               	movwf fsr1h	
  9849  05A7  0087               	
  9850                           	movlb 0	; select bank0
  9851  05A8  0140               	movf	(??_efgtoa+0)+0,w
  9852  05A9  086C               	movwf	indf1
  9853  05AA  0081               	
  9854                           l4169:	
  9855  05AB                     	movlw	01h
  9856  05AB  3001               	movlb 1	; select bank1
  9857  05AC  0141               	addwf	(efgtoa@n)^080h,f
  9858  05AD  07E2               	movlw	0
  9859  05AE  3000               	addwfc	(efgtoa@n+1)^080h,f
  9860  05AF  3DE3               	line	459
  9861                           	
  9862                           l4171:	
  9863  05B0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 459:       
                                           --w;
  9864                           	movlw	0FFh
  9865  05B0  30FF               	addwf	(efgtoa@w)^080h,f
  9866  05B1  07CF               	movlw	0FFh
  9867  05B2  30FF               	addwfc	(efgtoa@w+1)^080h,f
  9868  05B3  3DD0               	line	460
  9869                           	
  9870                           l4173:	
  9871  05B4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 460:       
                                           --t;
  9872                           	movlw	0FFh
  9873  05B4  30FF               	addwf	(efgtoa@t)^080h,f
  9874  05B5  07BF               	movlw	0FFh
  9875  05B6  30FF               	addwfc	(efgtoa@t+1)^080h,f
  9876  05B7  3DC0               	goto	l4175
  9877  05B8  2DB9               	line	461
  9878                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 461:       
                                       }
  9879                           	
  9880                           l493:	
  9881  05B9                     	line	457
  9882                           	
  9883                           l4175:	
  9884  05B9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 457:       
                                       while (t) {
  9885                           	movf	((efgtoa@t)^080h),w
  9886  05B9  083F               iorwf	((efgtoa@t+1)^080h),w
  9887  05BA  0440               	btfss	status,2
  9888  05BB  1D03               	goto	u5861
  9889  05BC  2DBE               	goto	u5860
  9890  05BD  2DBF               u5861:
  9891  05BE                     	goto	l4167
  9892  05BE  2D9F               u5860:
  9893  05BF                     	goto	l4177
  9894  05BF  2DC0               	
  9895                           l495:	
  9896  05C0                     	line	462
  9897                           	
  9898                           l4177:	
  9899  05C0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 462:       
                                       dbuf[n++] = '0' + d;
  9900                           	movf	(efgtoa@d)^080h,w
  9901  05C0  0847               	addlw	030h
  9902  05C1  3E30               	movlb 0	; select bank0
  9903  05C2  0140               	movwf	(??_efgtoa+0)+0
  9904  05C3  00EC               	movlb 1	; select bank1
  9905  05C4  0141               	movf	(efgtoa@n)^080h,w
  9906  05C5  0862               	addlw	low(_dbuf|((0x3)<<8))&0ffh
  9907  05C6  3E20               	movwf	fsr1l
  9908  05C7  0086               	movlw 3	; select bank6/7
  9909  05C8  3003               	movwf fsr1h	
  9910  05C9  0087               	
  9911                           	movlb 0	; select bank0
  9912  05CA  0140               	movf	(??_efgtoa+0)+0,w
  9913  05CB  086C               	movwf	indf1
  9914  05CC  0081               	
  9915                           l4179:	
  9916  05CD                     	movlw	01h
  9917  05CD  3001               	movlb 1	; select bank1
  9918  05CE  0141               	addwf	(efgtoa@n)^080h,f
  9919  05CF  07E2               	movlw	0
  9920  05D0  3000               	addwfc	(efgtoa@n+1)^080h,f
  9921  05D1  3DE3               	line	463
  9922                           	
  9923                           l4181:	
  9924  05D2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 463:       
                                       --w;
  9925                           	movlw	0FFh
  9926  05D2  30FF               	addwf	(efgtoa@w)^080h,f
  9927  05D3  07CF               	movlw	0FFh
  9928  05D4  30FF               	addwfc	(efgtoa@w+1)^080h,f
  9929  05D5  3DD0               	goto	l4183
  9930  05D6  2DD7               	line	464
  9931                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 464:       
                                   }
  9932                           	
  9933                           l491:	
  9934  05D7                     	line	465
  9935                           	
  9936                           l4183:	
  9937  05D7                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 465:       
                                   h -= l*u;
  9938                           	movf	(efgtoa@l+3)^080h,w
  9939  05D7  0859               	movlb 0	; select bank0
  9940  05D8  0140               	movwf	(___flmul@a+3)
  9941  05D9  00B5               	movlb 1	; select bank1
  9942  05DA  0141               	movf	(efgtoa@l+2)^080h,w
  9943  05DB  0858               	movlb 0	; select bank0
  9944  05DC  0140               	movwf	(___flmul@a+2)
  9945  05DD  00B4               	movlb 1	; select bank1
  9946  05DE  0141               	movf	(efgtoa@l+1)^080h,w
  9947  05DF  0857               	movlb 0	; select bank0
  9948  05E0  0140               	movwf	(___flmul@a+1)
  9949  05E1  00B3               	movlb 1	; select bank1
  9950  05E2  0141               	movf	(efgtoa@l)^080h,w
  9951  05E3  0856               	movlb 0	; select bank0
  9952  05E4  0140               	movwf	(___flmul@a)
  9953  05E5  00B2               
  9954                           	movlb 1	; select bank1
  9955  05E6  0141               	movf	(efgtoa@u+3)^080h,w
  9956  05E7  0867               	movlb 0	; select bank0
  9957  05E8  0140               	movwf	(___flmul@b+3)
  9958  05E9  00B1               	movlb 1	; select bank1
  9959  05EA  0141               	movf	(efgtoa@u+2)^080h,w
  9960  05EB  0866               	movlb 0	; select bank0
  9961  05EC  0140               	movwf	(___flmul@b+2)
  9962  05ED  00B0               	movlb 1	; select bank1
  9963  05EE  0141               	movf	(efgtoa@u+1)^080h,w
  9964  05EF  0865               	movlb 0	; select bank0
  9965  05F0  0140               	movwf	(___flmul@b+1)
  9966  05F1  00AF               	movlb 1	; select bank1
  9967  05F2  0141               	movf	(efgtoa@u)^080h,w
  9968  05F3  0864               	movlb 0	; select bank0
  9969  05F4  0140               	movwf	(___flmul@b)
  9970  05F5  00AE               
  9971                           	fcall	___flmul
  9972  05F6  3195  2595  3180   	movlb 0	; select bank0
  9973  05F9  0140               	movf	(3+(?___flmul)),w
  9974  05FA  0831               	movwf	(___flsub@a+3)
  9975  05FB  00E3               	movf	(2+(?___flmul)),w
  9976  05FC  0830               	movwf	(___flsub@a+2)
  9977  05FD  00E2               	movf	(1+(?___flmul)),w
  9978  05FE  082F               	movwf	(___flsub@a+1)
  9979  05FF  00E1               	movf	(0+(?___flmul)),w
  9980  0600  082E               	movwf	(___flsub@a)
  9981  0601  00E0               
  9982                           	movlb 1	; select bank1
  9983  0602  0141               	movf	(efgtoa@h+3)^080h,w
  9984  0603  0855               	movlb 0	; select bank0
  9985  0604  0140               	movwf	(___flsub@b+3)
  9986  0605  00E7               	movlb 1	; select bank1
  9987  0606  0141               	movf	(efgtoa@h+2)^080h,w
  9988  0607  0854               	movlb 0	; select bank0
  9989  0608  0140               	movwf	(___flsub@b+2)
  9990  0609  00E6               	movlb 1	; select bank1
  9991  060A  0141               	movf	(efgtoa@h+1)^080h,w
  9992  060B  0853               	movlb 0	; select bank0
  9993  060C  0140               	movwf	(___flsub@b+1)
  9994  060D  00E5               	movlb 1	; select bank1
  9995  060E  0141               	movf	(efgtoa@h)^080h,w
  9996  060F  0852               	movlb 0	; select bank0
  9997  0610  0140               	movwf	(___flsub@b)
  9998  0611  00E4               
  9999                           	fcall	___flsub
 10000  0612  31A2  220D  3180   	movlb 0	; select bank0
 10001  0615  0140               	movf	(3+(?___flsub)),w
 10002  0616  0863               	movlb 1	; select bank1
 10003  0617  0141               	movwf	(efgtoa@h+3)^080h
 10004  0618  00D5               	movlb 0	; select bank0
 10005  0619  0140               	movf	(2+(?___flsub)),w
 10006  061A  0862               	movlb 1	; select bank1
 10007  061B  0141               	movwf	(efgtoa@h+2)^080h
 10008  061C  00D4               	movlb 0	; select bank0
 10009  061D  0140               	movf	(1+(?___flsub)),w
 10010  061E  0861               	movlb 1	; select bank1
 10011  061F  0141               	movwf	(efgtoa@h+1)^080h
 10012  0620  00D3               	movlb 0	; select bank0
 10013  0621  0140               	movf	(0+(?___flsub)),w
 10014  0622  0860               	movlb 1	; select bank1
 10015  0623  0141               	movwf	(efgtoa@h)^080h
 10016  0624  00D2               
 10017                           	line	466
 10018                           	
 10019                           l4185:	
 10020  0625                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 466:       
                                   u = u/10.0;
 10021                           	movlw	0x41
 10022  0625  3041               	movlb 0	; select bank0
 10023  0626  0140               	movwf	(___fldiv@a+3)
 10024  0627  00CB               	movlw	0x20
 10025  0628  3020               	movwf	(___fldiv@a+2)
 10026  0629  00CA               	movlw	0x0
 10027  062A  3000               	movwf	(___fldiv@a+1)
 10028  062B  00C9               	movlw	0x0
 10029  062C  3000               	movwf	(___fldiv@a)
 10030  062D  00C8               
 10031                           	movlb 1	; select bank1
 10032  062E  0141               	movf	(efgtoa@u+3)^080h,w
 10033  062F  0867               	movlb 0	; select bank0
 10034  0630  0140               	movwf	(___fldiv@b+3)
 10035  0631  00CF               	movlb 1	; select bank1
 10036  0632  0141               	movf	(efgtoa@u+2)^080h,w
 10037  0633  0866               	movlb 0	; select bank0
 10038  0634  0140               	movwf	(___fldiv@b+2)
 10039  0635  00CE               	movlb 1	; select bank1
 10040  0636  0141               	movf	(efgtoa@u+1)^080h,w
 10041  0637  0865               	movlb 0	; select bank0
 10042  0638  0140               	movwf	(___fldiv@b+1)
 10043  0639  00CD               	movlb 1	; select bank1
 10044  063A  0141               	movf	(efgtoa@u)^080h,w
 10045  063B  0864               	movlb 0	; select bank0
 10046  063C  0140               	movwf	(___fldiv@b)
 10047  063D  00CC               
 10048                           	fcall	___fldiv
 10049  063E  3193  23B6  3180   	movlb 0	; select bank0
 10050  0641  0140               	movf	(3+(?___fldiv)),w
 10051  0642  084B               	movlb 1	; select bank1
 10052  0643  0141               	movwf	(efgtoa@u+3)^080h
 10053  0644  00E7               	movlb 0	; select bank0
 10054  0645  0140               	movf	(2+(?___fldiv)),w
 10055  0646  084A               	movlb 1	; select bank1
 10056  0647  0141               	movwf	(efgtoa@u+2)^080h
 10057  0648  00E6               	movlb 0	; select bank0
 10058  0649  0140               	movf	(1+(?___fldiv)),w
 10059  064A  0849               	movlb 1	; select bank1
 10060  064B  0141               	movwf	(efgtoa@u+1)^080h
 10061  064C  00E5               	movlb 0	; select bank0
 10062  064D  0140               	movf	(0+(?___fldiv)),w
 10063  064E  0848               	movlb 1	; select bank1
 10064  064F  0141               	movwf	(efgtoa@u)^080h
 10065  0650  00E4               
 10066                           	line	467
 10067                           	
 10068                           l4187:	
 10069  0651                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 467:       
                                   --ne;
 10070                           	movlw	0FFh
 10071  0651  30FF               	addwf	(efgtoa@ne)^080h,f
 10072  0652  07C5               	movlw	0FFh
 10073  0653  30FF               	addwfc	(efgtoa@ne+1)^080h,f
 10074  0654  3DC6               	line	468
 10075                           	
 10076                           l4189:	
 10077  0655                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 468:       
                                   ++i;
 10078                           	movlw	01h
 10079  0655  3001               	addwf	(efgtoa@i)^080h,f
 10080  0656  07DA               	movlw	0
 10081  0657  3000               	addwfc	(efgtoa@i+1)^080h,f
 10082  0658  3DDB               	goto	l4191
 10083  0659  2E5A               	line	469
 10084                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 469:     }

 10085                           	
 10086                           l488:	
 10087  065A                     	line	446
 10088                           	
 10089                           l4191:	
 10090  065A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 446:     wh
                                 ile ((i < m) && (n < (80 - 5))) {
 10091                           	movf	(efgtoa@i+1)^080h,w
 10092  065A  085B               	xorlw	80h
 10093  065B  3A80               	movlb 0	; select bank0
 10094  065C  0140               	movwf	(??_efgtoa+0)+0
 10095  065D  00EC               	movlb 1	; select bank1
 10096  065E  0141               	movf	(efgtoa@m+1)^080h,w
 10097  065F  0844               	xorlw	80h
 10098  0660  3A80               	movlb 0	; select bank0
 10099  0661  0140               	subwf	(??_efgtoa+0)+0,w
 10100  0662  026C               	skipz
 10101  0663  1D03               	goto	u5875
 10102  0664  2E68               	movlb 1	; select bank1
 10103  0665  0141               	movf	(efgtoa@m)^080h,w
 10104  0666  0843               	subwf	(efgtoa@i)^080h,w
 10105  0667  025A               u5875:
 10106  0668                     
 10107                           	skipnc
 10108  0668  1803               	goto	u5871
 10109  0669  2E6B               	goto	u5870
 10110  066A  2E6C               u5871:
 10111  066B                     	goto	l4195
 10112  066B  2E7E               u5870:
 10113  066C                     	
 10114                           l4193:	
 10115  066C                     	movlb 1	; select bank1
 10116  066C  0141               	movf	(efgtoa@n+1)^080h,w
 10117  066D  0863               	xorlw	80h
 10118  066E  3A80               	movlb 0	; select bank0
 10119  066F  0140               	movwf	(??_efgtoa+0)+0
 10120  0670  00EC               	movlw	(0)^80h
 10121  0671  3080               	subwf	(??_efgtoa+0)+0,w
 10122  0672  026C               	skipz
 10123  0673  1D03               	goto	u5885
 10124  0674  2E78               	movlw	04Bh
 10125  0675  304B               	movlb 1	; select bank1
 10126  0676  0141               	subwf	(efgtoa@n)^080h,w
 10127  0677  0262               u5885:
 10128  0678                     
 10129                           	skipc
 10130  0678  1C03               	goto	u5881
 10131  0679  2E7B               	goto	u5880
 10132  067A  2E7C               u5881:
 10133  067B                     	goto	l4143
 10134  067B  2D05               u5880:
 10135  067C                     	goto	l4195
 10136  067C  2E7E               	
 10137                           l497:	
 10138  067D                     	goto	l4195
 10139  067D  2E7E               	
 10140                           l498:	
 10141  067E                     	line	470
 10142                           	
 10143                           l4195:	
 10144  067E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 470:     if
                                  (!pp && (flags & (1 << 4))) {
 10145                           	movlb 1	; select bank1
 10146  067E  0141               	movf	((efgtoa@pp)^080h),w
 10147  067F  0841               iorwf	((efgtoa@pp+1)^080h),w
 10148  0680  0442               	btfss	status,2
 10149  0681  1D03               	goto	u5891
 10150  0682  2E84               	goto	u5890
 10151  0683  2E85               u5891:
 10152  0684                     	goto	l4203
 10153  0684  2E9C               u5890:
 10154  0685                     	
 10155                           l4197:	
 10156  0685                     	movlb 2	; select bank2
 10157  0685  0142               	btfss	(_flags)^0100h,(4)&7
 10158  0686  1E68               	goto	u5901
 10159  0687  2E89               	goto	u5900
 10160  0688  2E8A               u5901:
 10161  0689                     	goto	l4203
 10162  0689  2E9C               u5900:
 10163  068A                     	line	471
 10164                           	
 10165                           l4199:	
 10166  068A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 471:       
                                   dbuf[n++] = '.';
 10167                           	movlw	low(02Eh)
 10168  068A  302E               	movlb 0	; select bank0
 10169  068B  0140               	movwf	(??_efgtoa+0)+0
 10170  068C  00EC               	movlb 1	; select bank1
 10171  068D  0141               	movf	(efgtoa@n)^080h,w
 10172  068E  0862               	addlw	low(_dbuf|((0x3)<<8))&0ffh
 10173  068F  3E20               	movwf	fsr1l
 10174  0690  0086               	movlw 3	; select bank6/7
 10175  0691  3003               	movwf fsr1h	
 10176  0692  0087               	
 10177                           	movlb 0	; select bank0
 10178  0693  0140               	movf	(??_efgtoa+0)+0,w
 10179  0694  086C               	movwf	indf1
 10180  0695  0081               	
 10181                           l4201:	
 10182  0696                     	movlw	01h
 10183  0696  3001               	movlb 1	; select bank1
 10184  0697  0141               	addwf	(efgtoa@n)^080h,f
 10185  0698  07E2               	movlw	0
 10186  0699  3000               	addwfc	(efgtoa@n+1)^080h,f
 10187  069A  3DE3               	goto	l4203
 10188  069B  2E9C               	line	472
 10189                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 472:     }

 10190                           	
 10191                           l499:	
 10192  069C                     	line	473
 10193                           	
 10194                           l4203:	
 10195  069C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 473:     db
                                 uf[n] = '\0';
 10196                           	movlb 1	; select bank1
 10197  069C  0141               	movf	(efgtoa@n)^080h,w
 10198  069D  0862               	addlw	low(_dbuf|((0x3)<<8))&0ffh
 10199  069E  3E20               	movwf	fsr1l
 10200  069F  0086               	movlw 3	; select bank6/7
 10201  06A0  3003               	movwf fsr1h	
 10202  06A1  0087               	
 10203                           	clrf	indf1
 10204  06A2  0181               	line	476
 10205                           	
 10206                           l4205:	
 10207  06A3                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 476:     if
                                  (nmode == 'e') {
 10208                           		movlw	101
 10209  06A3  3065               	xorwf	((efgtoa@nmode)^080h),w
 10210  06A4  064E               	btfss	status,2
 10211  06A5  1D03               	goto	u5911
 10212  06A6  2EA8               	goto	u5910
 10213  06A7  2EA9               u5911:
 10214  06A8                     	goto	l4265
 10215  06A8  2FA9               u5910:
 10216  06A9                     	line	477
 10217                           	
 10218                           l4207:	
 10219  06A9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 477:       
                                   i = sizeof(dbuf) - 1;
 10220                           	movlw	04Fh
 10221  06A9  304F               	movwf	(efgtoa@i)^080h
 10222  06AA  00DA               	movlw	0
 10223  06AB  3000               	movwf	((efgtoa@i)^080h)+1
 10224  06AC  00DB               	line	478
 10225                           	
 10226                           l4209:	
 10227  06AD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 478:       
                                   dbuf[i] = '\0';
 10228                           	movf	(efgtoa@i)^080h,w
 10229  06AD  085A               	addlw	low(_dbuf|((0x3)<<8))&0ffh
 10230  06AE  3E20               	movwf	fsr1l
 10231  06AF  0086               	movlw 3	; select bank6/7
 10232  06B0  3003               	movwf fsr1h	
 10233  06B1  0087               	
 10234                           	clrf	indf1
 10235  06B2  0181               	line	479
 10236                           	
 10237                           l4211:	
 10238  06B3                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 479:       
                                   sign = 0;
 10239                           	clrf	(efgtoa@sign)^080h
 10240  06B3  01C9               	clrf	(efgtoa@sign+1)^080h
 10241  06B4  01CA               	line	480
 10242                           	
 10243                           l4213:	
 10244  06B5                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 480:       
                                   if (e < 0) {
 10245                           	btfss	(efgtoa@e+1)^080h,7
 10246  06B5  1FE1               	goto	u5921
 10247  06B6  2EB8               	goto	u5920
 10248  06B7  2EB9               u5921:
 10249  06B8                     	goto	l4219
 10250  06B8  2EC3               u5920:
 10251  06B9                     	line	481
 10252                           	
 10253                           l4215:	
 10254  06B9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 481:       
                                       sign = 1;
 10255                           	movlw	01h
 10256  06B9  3001               	movwf	(efgtoa@sign)^080h
 10257  06BA  00C9               	movlw	0
 10258  06BB  3000               	movwf	((efgtoa@sign)^080h)+1
 10259  06BC  00CA               	line	482
 10260                           	
 10261                           l4217:	
 10262  06BD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 482:       
                                       e = -e;
 10263                           	comf	(efgtoa@e)^080h,f
 10264  06BD  09E0               	comf	(efgtoa@e+1)^080h,f
 10265  06BE  09E1               	incf	(efgtoa@e)^080h,f
 10266  06BF  0AE0               	skipnz
 10267  06C0  1903               	incf	(efgtoa@e+1)^080h,f
 10268  06C1  0AE1               	goto	l4219
 10269  06C2  2EC3               	line	483
 10270                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 483:       
                                   }
 10271                           	
 10272                           l501:	
 10273  06C3                     	line	484
 10274                           	
 10275                           l4219:	
 10276  06C3                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 484:       
                                   p = 2;
 10277                           	movlw	02h
 10278  06C3  3002               	movwf	(efgtoa@p)^080h
 10279  06C4  00CC               	movlw	0
 10280  06C5  3000               	movwf	((efgtoa@p)^080h)+1
 10281  06C6  00CD               	line	485
 10282                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 485:       
                                   while (e || (0 < p)) {
 10283                           	goto	l4231
 10284  06C7  2F0A               	
 10285                           l503:	
 10286  06C8                     	line	486
 10287                           	
 10288                           l4221:	
 10289  06C8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 486:       
                                       --i;
 10290                           	movlw	0FFh
 10291  06C8  30FF               	movlb 1	; select bank1
 10292  06C9  0141               	addwf	(efgtoa@i)^080h,f
 10293  06CA  07DA               	movlw	0FFh
 10294  06CB  30FF               	addwfc	(efgtoa@i+1)^080h,f
 10295  06CC  3DDB               	line	487
 10296                           	
 10297                           l4223:	
 10298  06CD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 487:       
                                       dbuf[i] = '0' + (e % 10);
 10299                           	movlw	0Ah
 10300  06CD  300A               	movlb 0	; select bank0
 10301  06CE  0140               	movwf	(___awmod@divisor)
 10302  06CF  00A0               	movlw	0
 10303  06D0  3000               	movwf	((___awmod@divisor))+1
 10304  06D1  00A1               	movlb 1	; select bank1
 10305  06D2  0141               	movf	(efgtoa@e+1)^080h,w
 10306  06D3  0861               	movlb 0	; select bank0
 10307  06D4  0140               	movwf	(___awmod@dividend+1)
 10308  06D5  00A3               	movlb 1	; select bank1
 10309  06D6  0141               	movf	(efgtoa@e)^080h,w
 10310  06D7  0860               	movlb 0	; select bank0
 10311  06D8  0140               	movwf	(___awmod@dividend)
 10312  06D9  00A2               	fcall	___awmod
 10313  06DA  31A6  267A  3180   	movlb 0	; select bank0
 10314  06DD  0140               	movf	(0+(?___awmod)),w
 10315  06DE  0820               	addlw	030h
 10316  06DF  3E30               	movwf	(??_efgtoa+0)+0
 10317  06E0  00EC               	movlb 1	; select bank1
 10318  06E1  0141               	movf	(efgtoa@i)^080h,w
 10319  06E2  085A               	addlw	low(_dbuf|((0x3)<<8))&0ffh
 10320  06E3  3E20               	movwf	fsr1l
 10321  06E4  0086               	movlw 3	; select bank6/7
 10322  06E5  3003               	movwf fsr1h	
 10323  06E6  0087               	
 10324                           	movlb 0	; select bank0
 10325  06E7  0140               	movf	(??_efgtoa+0)+0,w
 10326  06E8  086C               	movwf	indf1
 10327  06E9  0081               	line	488
 10328                           	
 10329                           l4225:	
 10330  06EA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 488:       
                                       e = e / 10;
 10331                           	movlw	0Ah
 10332  06EA  300A               	movwf	(___awdiv@divisor)
 10333  06EB  00A0               	movlw	0
 10334  06EC  3000               	movwf	((___awdiv@divisor))+1
 10335  06ED  00A1               	movlb 1	; select bank1
 10336  06EE  0141               	movf	(efgtoa@e+1)^080h,w
 10337  06EF  0861               	movlb 0	; select bank0
 10338  06F0  0140               	movwf	(___awdiv@dividend+1)
 10339  06F1  00A3               	movlb 1	; select bank1
 10340  06F2  0141               	movf	(efgtoa@e)^080h,w
 10341  06F3  0860               	movlb 0	; select bank0
 10342  06F4  0140               	movwf	(___awdiv@dividend)
 10343  06F5  00A2               	fcall	___awdiv
 10344  06F6  31A7  2796  3180   	movlb 0	; select bank0
 10345  06F9  0140               	movf	(1+(?___awdiv)),w
 10346  06FA  0821               	movlb 1	; select bank1
 10347  06FB  0141               	movwf	(efgtoa@e+1)^080h
 10348  06FC  00E1               	movlb 0	; select bank0
 10349  06FD  0140               	movf	(0+(?___awdiv)),w
 10350  06FE  0820               	movlb 1	; select bank1
 10351  06FF  0141               	movwf	(efgtoa@e)^080h
 10352  0700  00E0               	line	489
 10353                           	
 10354                           l4227:	
 10355  0701                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 489:       
                                       --p;
 10356                           	movlw	0FFh
 10357  0701  30FF               	addwf	(efgtoa@p)^080h,f
 10358  0702  07CC               	movlw	0FFh
 10359  0703  30FF               	addwfc	(efgtoa@p+1)^080h,f
 10360  0704  3DCD               	line	490
 10361                           	
 10362                           l4229:	
 10363  0705                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 490:       
                                       --w;
 10364                           	movlw	0FFh
 10365  0705  30FF               	addwf	(efgtoa@w)^080h,f
 10366  0706  07CF               	movlw	0FFh
 10367  0707  30FF               	addwfc	(efgtoa@w+1)^080h,f
 10368  0708  3DD0               	goto	l4231
 10369  0709  2F0A               	line	491
 10370                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 491:       
                                   }
 10371                           	
 10372                           l502:	
 10373  070A                     	line	485
 10374                           	
 10375                           l4231:	
 10376  070A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 485:       
                                   while (e || (0 < p)) {
 10377                           	movf	((efgtoa@e)^080h),w
 10378  070A  0860               iorwf	((efgtoa@e+1)^080h),w
 10379  070B  0461               	btfss	status,2
 10380  070C  1D03               	goto	u5931
 10381  070D  2F0F               	goto	u5930
 10382  070E  2F10               u5931:
 10383  070F                     	goto	l4221
 10384  070F  2EC8               u5930:
 10385  0710                     	
 10386                           l4233:	
 10387  0710                     	movf	(efgtoa@p+1)^080h,w
 10388  0710  084D               	xorlw	80h
 10389  0711  3A80               	movlb 0	; select bank0
 10390  0712  0140               	movwf	(??_efgtoa+0)+0
 10391  0713  00EC               	movlw	(0)^80h
 10392  0714  3080               	subwf	(??_efgtoa+0)+0,w
 10393  0715  026C               	skipz
 10394  0716  1D03               	goto	u5945
 10395  0717  2F1B               	movlw	01h
 10396  0718  3001               	movlb 1	; select bank1
 10397  0719  0141               	subwf	(efgtoa@p)^080h,w
 10398  071A  024C               u5945:
 10399  071B                     
 10400                           	skipnc
 10401  071B  1803               	goto	u5941
 10402  071C  2F1E               	goto	u5940
 10403  071D  2F1F               u5941:
 10404  071E                     	goto	l4221
 10405  071E  2EC8               u5940:
 10406  071F                     	goto	l4235
 10407  071F  2F20               	
 10408                           l504:	
 10409  0720                     	line	492
 10410                           	
 10411                           l4235:	
 10412  0720                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 492:       
                                   --i;
 10413                           	movlw	0FFh
 10414  0720  30FF               	movlb 1	; select bank1
 10415  0721  0141               	addwf	(efgtoa@i)^080h,f
 10416  0722  07DA               	movlw	0FFh
 10417  0723  30FF               	addwfc	(efgtoa@i+1)^080h,f
 10418  0724  3DDB               	line	493
 10419                           	
 10420                           l4237:	
 10421  0725                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 493:       
                                   dbuf[i] = sign ? '-' : '+';
 10422                           	movf	((efgtoa@sign)^080h),w
 10423  0725  0849               iorwf	((efgtoa@sign+1)^080h),w
 10424  0726  044A               	btfss	status,2
 10425  0727  1D03               	goto	u5951
 10426  0728  2F2A               	goto	u5950
 10427  0729  2F2B               u5951:
 10428  072A                     	goto	l4241
 10429  072A  2F30               u5950:
 10430  072B                     	
 10431                           l4239:	
 10432  072B                     	movlw	02Bh
 10433  072B  302B               	movwf	(_efgtoa$918)^080h
 10434  072C  00B9               	movlw	0
 10435  072D  3000               	movwf	((_efgtoa$918)^080h)+1
 10436  072E  00BA               	goto	l4243
 10437  072F  2F35               	
 10438                           l506:	
 10439  0730                     	
 10440                           l4241:	
 10441  0730                     	movlw	02Dh
 10442  0730  302D               	movwf	(_efgtoa$918)^080h
 10443  0731  00B9               	movlw	0
 10444  0732  3000               	movwf	((_efgtoa$918)^080h)+1
 10445  0733  00BA               	goto	l4243
 10446  0734  2F35               	
 10447                           l508:	
 10448  0735                     	
 10449                           l4243:	
 10450  0735                     	movf	(_efgtoa$918)^080h,w
 10451  0735  0839               	movlb 0	; select bank0
 10452  0736  0140               	movwf	(??_efgtoa+0)+0
 10453  0737  00EC               	movlb 1	; select bank1
 10454  0738  0141               	movf	(efgtoa@i)^080h,w
 10455  0739  085A               	addlw	low(_dbuf|((0x3)<<8))&0ffh
 10456  073A  3E20               	movwf	fsr1l
 10457  073B  0086               	movlw 3	; select bank6/7
 10458  073C  3003               	movwf fsr1h	
 10459  073D  0087               	
 10460                           	movlb 0	; select bank0
 10461  073E  0140               	movf	(??_efgtoa+0)+0,w
 10462  073F  086C               	movwf	indf1
 10463  0740  0081               	line	494
 10464                           	
 10465                           l4245:	
 10466  0741                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 494:       
                                   --w;
 10467                           	movlw	0FFh
 10468  0741  30FF               	movlb 1	; select bank1
 10469  0742  0141               	addwf	(efgtoa@w)^080h,f
 10470  0743  07CF               	movlw	0FFh
 10471  0744  30FF               	addwfc	(efgtoa@w+1)^080h,f
 10472  0745  3DD0               	line	495
 10473                           	
 10474                           l4247:	
 10475  0746                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 496:       
                                   dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 10476                           	movlw	0FFh
 10477  0746  30FF               	addwf	(efgtoa@i)^080h,f
 10478  0747  07DA               	movlw	0FFh
 10479  0748  30FF               	addwfc	(efgtoa@i+1)^080h,f
 10480  0749  3DDB               	line	496
 10481                           	
 10482                           l4249:	
 10483  074A                     	movf	(efgtoa@c)^080h,w
 10484  074A  082E               	addlw	low(0FFBFh)
 10485  074B  3EBF               	movlb 0	; select bank0
 10486  074C  0140               	movwf	(??_efgtoa+0)+0
 10487  074D  00EC               	movlw	high(0FFBFh)
 10488  074E  30FF               	skipnc
 10489  074F  1803               	movlw	(high(0FFBFh)+1)&0ffh
 10490  0750  3000               	movwf	((??_efgtoa+0)+0)+1
 10491  0751  00ED               	movlw	0
 10492  0752  3000               	subwf	1+(??_efgtoa+0)+0,w
 10493  0753  026D               	movlw	01Ah
 10494  0754  301A               	skipnz
 10495  0755  1903               	subwf	0+(??_efgtoa+0)+0,w
 10496  0756  026C               	skipc
 10497  0757  1C03               	goto	u5961
 10498  0758  2F5A               	goto	u5960
 10499  0759  2F5C               u5961:
 10500  075A                     	movlw	1
 10501  075A  3001               	goto	u5970
 10502  075B  2F5D               u5960:
 10503  075C                     	movlw	0
 10504  075C  3000               u5970:
 10505  075D                     	movwf	(??_efgtoa+2)+0
 10506  075D  00EE               	clrf	(??_efgtoa+2)+0+1
 10507  075E  01EF               	movf	0+(??_efgtoa+2)+0,w
 10508  075F  086E               	movlb 1	; select bank1
 10509  0760  0141               	movwf	(_efgtoa$920)^080h
 10510  0761  00BD               	movlb 0	; select bank0
 10511  0762  0140               	movf	1+(??_efgtoa+2)+0,w
 10512  0763  086F               	movlb 1	; select bank1
 10513  0764  0141               	movwf	(_efgtoa$920+1)^080h
 10514  0765  00BE               	goto	l4253
 10515  0766  2F7B               	
 10516                           l514:	
 10517  0767                     	
 10518                           l4251:	
 10519  0767                     	movf	(efgtoa@c)^080h,w
 10520  0767  082E               	movlb 0	; select bank0
 10521  0768  0140               	movwf	(??_efgtoa+0)+0
 10522  0769  00EC               	clrf	(??_efgtoa+0)+0+1
 10523  076A  01ED               	movf	0+(??_efgtoa+0)+0,w
 10524  076B  086C               	movwf	(isupper@c)
 10525  076C  00A0               	movf	1+(??_efgtoa+0)+0,w
 10526  076D  086D               	movwf	(isupper@c+1)
 10527  076E  00A1               	fcall	_isupper
 10528  076F  31A1  21F3  3180   	movlb 0	; select bank0
 10529  0772  0140               	movf	(1+(?_isupper)),w
 10530  0773  0821               	movlb 1	; select bank1
 10531  0774  0141               	movwf	(_efgtoa$920+1)^080h
 10532  0775  00BE               	movlb 0	; select bank0
 10533  0776  0140               	movf	(0+(?_isupper)),w
 10534  0777  0820               	movlb 1	; select bank1
 10535  0778  0141               	movwf	(_efgtoa$920)^080h
 10536  0779  00BD               	goto	l4253
 10537  077A  2F7B               	
 10538                           l516:	
 10539  077B                     	
 10540                           l4253:	
 10541  077B                     	movf	((_efgtoa$920)^080h),w
 10542  077B  083D               iorwf	((_efgtoa$920+1)^080h),w
 10543  077C  043E               	btfss	status,2
 10544  077D  1D03               	goto	u5981
 10545  077E  2F80               	goto	u5980
 10546  077F  2F81               u5981:
 10547  0780                     	goto	l4257
 10548  0780  2F86               u5980:
 10549  0781                     	
 10550                           l4255:	
 10551  0781                     	movlw	065h
 10552  0781  3065               	movwf	(_efgtoa$919)^080h
 10553  0782  00BB               	movlw	0
 10554  0783  3000               	movwf	((_efgtoa$919)^080h)+1
 10555  0784  00BC               	goto	l4259
 10556  0785  2F8B               	
 10557                           l510:	
 10558  0786                     	
 10559                           l4257:	
 10560  0786                     	movlw	045h
 10561  0786  3045               	movwf	(_efgtoa$919)^080h
 10562  0787  00BB               	movlw	0
 10563  0788  3000               	movwf	((_efgtoa$919)^080h)+1
 10564  0789  00BC               	goto	l4259
 10565  078A  2F8B               	
 10566                           l512:	
 10567  078B                     	
 10568                           l4259:	
 10569  078B                     	movf	(_efgtoa$919)^080h,w
 10570  078B  083B               	movlb 0	; select bank0
 10571  078C  0140               	movwf	(??_efgtoa+0)+0
 10572  078D  00EC               	movlb 1	; select bank1
 10573  078E  0141               	movf	(efgtoa@i)^080h,w
 10574  078F  085A               	addlw	low(_dbuf|((0x3)<<8))&0ffh
 10575  0790  3E20               	movwf	fsr1l
 10576  0791  0086               	movlw 3	; select bank6/7
 10577  0792  3003               	movwf fsr1h	
 10578  0793  0087               	
 10579                           	movlb 0	; select bank0
 10580  0794  0140               	movf	(??_efgtoa+0)+0,w
 10581  0795  086C               	movwf	indf1
 10582  0796  0081               	line	497
 10583                           	
 10584                           l4261:	
 10585  0797                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 497:       
                                   --w;
 10586                           	movlw	0FFh
 10587  0797  30FF               	movlb 1	; select bank1
 10588  0798  0141               	addwf	(efgtoa@w)^080h,f
 10589  0799  07CF               	movlw	0FFh
 10590  079A  30FF               	addwfc	(efgtoa@w+1)^080h,f
 10591  079B  3DD0               	line	498
 10592                           	
 10593                           l4263:	
 10594  079C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 498:       
                                   strcpy(&dbuf[n], &dbuf[i]);
 10595                           	movf	(efgtoa@i)^080h,w
 10596  079C  085A               	addlw	low(_dbuf|((0x3)<<8))&0ffh
 10597  079D  3E20               	movlb 0	; select bank0
 10598  079E  0140               	movwf	(strcpy@src)
 10599  079F  00A0               	movlw	0x3
 10600  07A0  3003               
 10601                           	movwf	(strcpy@src+1)
 10602  07A1  00A1               	movlb 1	; select bank1
 10603  07A2  0141               	movf	(efgtoa@n)^080h,w
 10604  07A3  0862               	addlw	low(_dbuf|((0x3)<<8))&0ffh
 10605  07A4  3E20               	fcall	_strcpy
 10606  07A5  31A2  22DE  3180   	goto	l4265
 10607  07A8  2FA9               	line	499
 10608                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 499:     }

 10609                           	
 10610                           l500:	
 10611  07A9                     	line	502
 10612                           	
 10613                           l4265:	
 10614  07A9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 502:     re
                                 turn pad(fp, &dbuf[0], w);
 10615                           	movlw	(low(_dbuf|((0x3)<<8)))&0ffh
 10616  07A9  3020               	movlb 0	; select bank0
 10617  07AA  0140               	movwf	(??_efgtoa+0)+0
 10618  07AB  00EC               	movf	(??_efgtoa+0)+0,w
 10619  07AC  086C               	movwf	(pad@buf)
 10620  07AD  00B0               	movlb 1	; select bank1
 10621  07AE  0141               	movf	(efgtoa@w+1)^080h,w
 10622  07AF  0850               	movlb 0	; select bank0
 10623  07B0  0140               	movwf	(pad@p+1)
 10624  07B1  00B2               	movlb 1	; select bank1
 10625  07B2  0141               	movf	(efgtoa@w)^080h,w
 10626  07B3  084F               	movlb 0	; select bank0
 10627  07B4  0140               	movwf	(pad@p)
 10628  07B5  00B1               	movlb 1	; select bank1
 10629  07B6  0141               	movf	(efgtoa@fp)^080h,w
 10630  07B7  084B               	fcall	_pad
 10631  07B8  31A7  2736  3180   	movlb 0	; select bank0
 10632  07BB  0140               	movf	(1+(?_pad)),w
 10633  07BC  0831               	movlb 1	; select bank1
 10634  07BD  0141               	movwf	(?_efgtoa+1)^080h
 10635  07BE  00AB               	movlb 0	; select bank0
 10636  07BF  0140               	movf	(0+(?_pad)),w
 10637  07C0  0830               	movlb 1	; select bank1
 10638  07C1  0141               	movwf	(?_efgtoa)^080h
 10639  07C2  00AA               	goto	l443
 10640  07C3  2FC4               	
 10641                           l4267:	
 10642  07C4                     	line	503
 10643                           	
 10644                           l443:	
 10645  07C4                     	return
 10646  07C4  0008               	opt stack 0
 10647                           GLOBAL	__end_of_efgtoa
 10648                           	__end_of_efgtoa:
 10649  07C5                     	signat	_efgtoa,12410
 10650                           	global	_tolower
 10651                           
 10652 ;; *************** function _tolower *****************
 10653 ;; Defined at:
 10654 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\tolower.c"
 10655 ;; Parameters:    Size  Location     Type
 10656 ;;  c               2    6[BANK0 ] int 
 10657 ;; Auto vars:     Size  Location     Type
 10658 ;;		None
 10659 ;; Return value:  Size  Location     Type
 10660 ;;                  2    6[BANK0 ] int 
 10661 ;; Registers used:
 10662 ;;		wreg, status,2, status,0, pclath, cstack
 10663 ;; Tracked objects:
 10664 ;;		On entry : 0/0
 10665 ;;		On exit  : 0/0
 10666 ;;		Unchanged: 0/0
 10667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10668 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10669 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10670 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10671 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10672 ;;Total ram usage:        8 bytes
 10673 ;; Hardware stack levels used:    1
 10674 ;; Hardware stack levels required when called:    4
 10675 ;; This function calls:
 10676 ;;		_isupper
 10677 ;; This function is called by:
 10678 ;;		_efgtoa
 10679 ;;		_vfpfcnvrt
 10680 ;; This function uses a non-reentrant model
 10681 ;;
 10682                           psect	text11,local,class=CODE,delta=2,merge=1,group=2
 10683                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\tolower.c"
 10684                           	line	4
 10685                           global __ptext11
 10686                           __ptext11:	;psect for function _tolower
 10687  23D8                     psect	text11
 10688                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\tolower.c"
 10689                           	line	4
 10690                           	global	__size_of_tolower
 10691                           	__size_of_tolower	equ	__end_of_tolower-_tolower
 10692  0035                     	
 10693                           _tolower:	
 10694  23D8                     ;incstack = 0
 10695                           	opt	stack 7
 10696                           ; Regs used in _tolower: [wreg+status,2+status,0+pclath+cstack]
 10697                           	line	6
 10698                           	
 10699                           l3435:	
 10700  23D8                     	movlb 0	; select bank0
 10701  23D8  0140               	movf	(tolower@c),w
 10702  23D9  0826               	addlw	0BFh
 10703  23DA  3EBF               	movwf	(??_tolower+0)+0
 10704  23DB  00A8               	movlw	0FFh
 10705  23DC  30FF               	addwfc	(tolower@c+1),w
 10706  23DD  3D27               	movwf	1+(??_tolower+0)+0
 10707  23DE  00A9               	movlw	0
 10708  23DF  3000               	subwf	1+(??_tolower+0)+0,w
 10709  23E0  0229               	movlw	01Ah
 10710  23E1  301A               	skipnz
 10711  23E2  1903               	subwf	0+(??_tolower+0)+0,w
 10712  23E3  0228               	skipc
 10713  23E4  1C03               	goto	u4301
 10714  23E5  2BE7               	goto	u4300
 10715  23E6  2BE9               u4301:
 10716  23E7                     	movlw	1
 10717  23E7  3001               	goto	u4310
 10718  23E8  2BEA               u4300:
 10719  23E9                     	movlw	0
 10720  23E9  3000               u4310:
 10721  23EA                     	movwf	(??_tolower+2)+0
 10722  23EA  00AA               	clrf	(??_tolower+2)+0+1
 10723  23EB  01AB               	movf	0+(??_tolower+2)+0,w
 10724  23EC  082A               	movwf	(_tolower$1376)
 10725  23ED  00AC               	movf	1+(??_tolower+2)+0,w
 10726  23EE  082B               	movwf	(_tolower$1376+1)
 10727  23EF  00AD               	goto	l3439
 10728  23F0  2BFE               	
 10729                           l1159:	
 10730  23F1                     	
 10731                           l3437:	
 10732  23F1                     	movf	(tolower@c+1),w
 10733  23F1  0827               	movwf	(isupper@c+1)
 10734  23F2  00A1               	movf	(tolower@c),w
 10735  23F3  0826               	movwf	(isupper@c)
 10736  23F4  00A0               	fcall	_isupper
 10737  23F5  31A1  21F3  31A3   	movlb 0	; select bank0
 10738  23F8  0140               	movf	(1+(?_isupper)),w
 10739  23F9  0821               	movwf	(_tolower$1376+1)
 10740  23FA  00AD               	movf	(0+(?_isupper)),w
 10741  23FB  0820               	movwf	(_tolower$1376)
 10742  23FC  00AC               	goto	l3439
 10743  23FD  2BFE               	
 10744                           l1161:	
 10745  23FE                     	
 10746                           l3439:	
 10747  23FE                     	movf	((_tolower$1376)),w
 10748  23FE  082C               iorwf	((_tolower$1376+1)),w
 10749  23FF  042D               	btfsc	status,2
 10750  2400  1903               	goto	u4321
 10751  2401  2C03               	goto	u4320
 10752  2402  2C04               u4321:
 10753  2403                     	goto	l1157
 10754  2403  2C0C               u4320:
 10755  2404                     	
 10756                           l3441:	
 10757  2404                     	movlw	020h
 10758  2404  3020               	iorwf	(tolower@c),w
 10759  2405  0426               	movwf	(?_tolower)
 10760  2406  00A6               	movlw	0
 10761  2407  3000               	iorwf	(tolower@c+1),w
 10762  2408  0427               	movwf	1+(?_tolower)
 10763  2409  00A7               	goto	l1162
 10764  240A  2C0C               	
 10765                           l3443:	
 10766  240B                     	goto	l1162
 10767  240B  2C0C               	
 10768                           l1157:	
 10769  240C                     	line	7
 10770                           	line	8
 10771                           	
 10772                           l1162:	
 10773  240C                     	return
 10774  240C  0008               	opt stack 0
 10775                           GLOBAL	__end_of_tolower
 10776                           	__end_of_tolower:
 10777  240D                     	signat	_tolower,4218
 10778                           	global	_isupper
 10779                           
 10780 ;; *************** function _isupper *****************
 10781 ;; Defined at:
 10782 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isupper.c"
 10783 ;; Parameters:    Size  Location     Type
 10784 ;;  c               2    0[BANK0 ] int 
 10785 ;; Auto vars:     Size  Location     Type
 10786 ;;		None
 10787 ;; Return value:  Size  Location     Type
 10788 ;;                  2    0[BANK0 ] int 
 10789 ;; Registers used:
 10790 ;;		wreg, status,2, status,0
 10791 ;; Tracked objects:
 10792 ;;		On entry : 0/0
 10793 ;;		On exit  : 0/0
 10794 ;;		Unchanged: 0/0
 10795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10796 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10798 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10799 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10800 ;;Total ram usage:        6 bytes
 10801 ;; Hardware stack levels used:    1
 10802 ;; Hardware stack levels required when called:    3
 10803 ;; This function calls:
 10804 ;;		Nothing
 10805 ;; This function is called by:
 10806 ;;		_efgtoa
 10807 ;;		_vfpfcnvrt
 10808 ;;		_tolower
 10809 ;; This function uses a non-reentrant model
 10810 ;;
 10811                           psect	text12,local,class=CODE,delta=2,merge=1,group=2
 10812                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isupper.c"
 10813                           	line	5
 10814                           global __ptext12
 10815                           __ptext12:	;psect for function _isupper
 10816  21F3                     psect	text12
 10817                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isupper.c"
 10818                           	line	5
 10819                           	global	__size_of_isupper
 10820                           	__size_of_isupper	equ	__end_of_isupper-_isupper
 10821  001A                     	
 10822                           _isupper:	
 10823  21F3                     ;incstack = 0
 10824                           	opt	stack 7
 10825                           ; Regs used in _isupper: [wreg+status,2+status,0]
 10826                           	line	7
 10827                           	
 10828                           l3167:	
 10829  21F3                     	movlb 0	; select bank0
 10830  21F3  0140               	movf	(isupper@c),w
 10831  21F4  0820               	addlw	0BFh
 10832  21F5  3EBF               	movwf	(??_isupper+0)+0
 10833  21F6  00A2               	movlw	0FFh
 10834  21F7  30FF               	addwfc	(isupper@c+1),w
 10835  21F8  3D21               	movwf	1+(??_isupper+0)+0
 10836  21F9  00A3               	movlw	0
 10837  21FA  3000               	subwf	1+(??_isupper+0)+0,w
 10838  21FB  0223               	movlw	01Ah
 10839  21FC  301A               	skipnz
 10840  21FD  1903               	subwf	0+(??_isupper+0)+0,w
 10841  21FE  0222               	skipc
 10842  21FF  1C03               	goto	u3661
 10843  2200  2A02               	goto	u3660
 10844  2201  2A04               u3661:
 10845  2202                     	movlw	1
 10846  2202  3001               	goto	u3670
 10847  2203  2A05               u3660:
 10848  2204                     	movlw	0
 10849  2204  3000               u3670:
 10850  2205                     	movwf	(??_isupper+2)+0
 10851  2205  00A4               	clrf	(??_isupper+2)+0+1
 10852  2206  01A5               	movf	0+(??_isupper+2)+0,w
 10853  2207  0824               	movwf	(?_isupper)
 10854  2208  00A0               	movf	1+(??_isupper+2)+0,w
 10855  2209  0825               	movwf	(?_isupper+1)
 10856  220A  00A1               	goto	l1088
 10857  220B  2A0C               	
 10858                           l3169:	
 10859  220C                     	line	8
 10860                           	
 10861                           l1088:	
 10862  220C                     	return
 10863  220C  0008               	opt stack 0
 10864                           GLOBAL	__end_of_isupper
 10865                           	__end_of_isupper:
 10866  220D                     	signat	_isupper,4218
 10867                           	global	_strcpy
 10868                           
 10869 ;; *************** function _strcpy *****************
 10870 ;; Defined at:
 10871 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
 10872 ;; Parameters:    Size  Location     Type
 10873 ;;  dest            1    wreg     PTR unsigned char 
 10874 ;;		 -> dbuf(80), 
 10875 ;;  src             2    0[BANK0 ] PTR const unsigned char 
 10876 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
 10877 ;;		 -> dbuf(80), 
 10878 ;; Auto vars:     Size  Location     Type
 10879 ;;  dest            1    7[BANK0 ] PTR unsigned char 
 10880 ;;		 -> dbuf(80), 
 10881 ;;  s               2    4[BANK0 ] PTR const unsigned char 
 10882 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
 10883 ;;		 -> dbuf(80), 
 10884 ;;  d               1    6[BANK0 ] PTR unsigned char 
 10885 ;;		 -> dbuf(80), 
 10886 ;; Return value:  Size  Location     Type
 10887 ;;                  1    wreg      PTR unsigned char 
 10888 ;; Registers used:
 10889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 10890 ;; Tracked objects:
 10891 ;;		On entry : 0/0
 10892 ;;		On exit  : 0/0
 10893 ;;		Unchanged: 0/0
 10894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10895 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10896 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10897 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10898 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10899 ;;Total ram usage:        8 bytes
 10900 ;; Hardware stack levels used:    1
 10901 ;; Hardware stack levels required when called:    3
 10902 ;; This function calls:
 10903 ;;		Nothing
 10904 ;; This function is called by:
 10905 ;;		_efgtoa
 10906 ;; This function uses a non-reentrant model
 10907 ;;
 10908                           psect	text13,local,class=CODE,delta=2,merge=1,group=2
 10909                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
 10910                           	line	7
 10911                           global __ptext13
 10912                           __ptext13:	;psect for function _strcpy
 10913  22DE                     psect	text13
 10914                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
 10915                           	line	7
 10916                           	global	__size_of_strcpy
 10917                           	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
 10918  0025                     	
 10919                           _strcpy:	
 10920  22DE                     ;incstack = 0
 10921                           	opt	stack 7
 10922                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
 10923                           ;strcpy@dest stored from wreg
 10924                           	movlb 0	; select bank0
 10925  22DE  0140               	movwf	(strcpy@dest)
 10926  22DF  00A7               	line	13
 10927                           	
 10928                           l3431:	
 10929  22E0                     	movf	(strcpy@src+1),w
 10930  22E0  0821               	movwf	(strcpy@s+1)
 10931  22E1  00A5               	movf	(strcpy@src),w
 10932  22E2  0820               	movwf	(strcpy@s)
 10933  22E3  00A4               	line	14
 10934                           	movf	(strcpy@dest),w
 10935  22E4  0827               	movwf	(??_strcpy+0)+0
 10936  22E5  00A2               	movf	(??_strcpy+0)+0,w
 10937  22E6  0822               	movwf	(strcpy@d)
 10938  22E7  00A6               	line	15
 10939                           	goto	l3433
 10940  22E8  2AEA               	
 10941                           l1125:	
 10942  22E9                     	goto	l3433
 10943  22E9  2AEA               	
 10944                           l1124:	
 10945  22EA                     	
 10946                           l3433:	
 10947  22EA                     	movf	(strcpy@d),w
 10948  22EA  0826               	movwf	fsr1l
 10949  22EB  0086               	movlw 3	; select bank6/7
 10950  22EC  3003               	movwf fsr1h	
 10951  22ED  0087               	
 10952                           	incf	(strcpy@d),f
 10953  22EE  0AA6               	movf	(strcpy@s+1),w
 10954  22EF  0825               	movwf	(??_strcpy+0)+0+1
 10955  22F0  00A3               	movf	(strcpy@s),w
 10956  22F1  0824               	movwf	(??_strcpy+0)+0
 10957  22F2  00A2               	incf	(strcpy@s),f
 10958  22F3  0AA4               	skipnz
 10959  22F4  1903               	incf	(strcpy@s+1),f
 10960  22F5  0AA5               	movf	0+(??_strcpy+0)+0,w
 10961  22F6  0822               	movwf	fsr0l
 10962  22F7  0084               	movf	(1+(??_strcpy+0)+0),w
 10963  22F8  0823               	movwf	fsr0h
 10964  22F9  0085               	movf	indf0,w ;code access
 10965  22FA  0800               	movwi	[0]fsr1
 10966  22FB  3FC0               	movf	wreg
 10967  22FC  0889               	btfss	status,2
 10968  22FD  1D03               	goto	u4291
 10969  22FE  2B00               	goto	u4290
 10970  22FF  2B01               u4291:
 10971  2300                     	goto	l3433
 10972  2300  2AEA               u4290:
 10973  2301                     	goto	l1127
 10974  2301  2B02               	
 10975                           l1126:	
 10976  2302                     	line	18
 10977                           ;	Return value of _strcpy is never used
 10978                           	
 10979                           l1127:	
 10980  2302                     	return
 10981  2302  0008               	opt stack 0
 10982                           GLOBAL	__end_of_strcpy
 10983                           	__end_of_strcpy:
 10984  2303                     	signat	_strcpy,8313
 10985                           	global	_pad
 10986                           
 10987 ;; *************** function _pad *****************
 10988 ;; Defined at:
 10989 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
 10990 ;; Parameters:    Size  Location     Type
 10991 ;;  fp              1    wreg     PTR struct _IO_FILE
 10992 ;;		 -> sprintf@f(5), 
 10993 ;;  buf             1   16[BANK0 ] PTR unsigned char 
 10994 ;;		 -> dbuf(80), 
 10995 ;;  p               2   17[BANK0 ] int 
 10996 ;; Auto vars:     Size  Location     Type
 10997 ;;  fp              1   24[BANK0 ] PTR struct _IO_FILE
 10998 ;;		 -> sprintf@f(5), 
 10999 ;;  w               2   22[BANK0 ] int 
 11000 ;;  i               2   20[BANK0 ] int 
 11001 ;; Return value:  Size  Location     Type
 11002 ;;                  2   16[BANK0 ] int 
 11003 ;; Registers used:
 11004 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11005 ;; Tracked objects:
 11006 ;;		On entry : 0/0
 11007 ;;		On exit  : 0/0
 11008 ;;		Unchanged: 0/0
 11009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11010 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11011 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11012 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11013 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11014 ;;Total ram usage:        9 bytes
 11015 ;; Hardware stack levels used:    1
 11016 ;; Hardware stack levels required when called:    6
 11017 ;; This function calls:
 11018 ;;		_fputc
 11019 ;;		_fputs
 11020 ;;		_strlen
 11021 ;; This function is called by:
 11022 ;;		_efgtoa
 11023 ;; This function uses a non-reentrant model
 11024 ;;
 11025                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
 11026                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
 11027                           	line	72
 11028                           global __ptext14
 11029                           __ptext14:	;psect for function _pad
 11030  2736                     psect	text14
 11031                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
 11032                           	line	72
 11033                           	global	__size_of_pad
 11034                           	__size_of_pad	equ	__end_of_pad-_pad
 11035  0060                     	
 11036                           _pad:	
 11037  2736                     ;incstack = 0
 11038                           	opt	stack 4
 11039                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11040                           ;pad@fp stored from wreg
 11041                           	movlb 0	; select bank0
 11042  2736  0140               	movwf	(pad@fp)
 11043  2737  00B8               	line	77
 11044                           	
 11045                           l3385:	
 11046  2738                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 72: static 
                                 int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
                                 es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99
                                 \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
                                 es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 11047                           	movlb 2	; select bank2
 11048  2738  0142               	btfss	(_flags)^0100h,(0)&7
 11049  2739  1C68               	goto	u4171
 11050  273A  2F3C               	goto	u4170
 11051  273B  2F3D               u4171:
 11052  273C                     	goto	l3389
 11053  273C  2F47               u4170:
 11054  273D                     	line	78
 11055                           	
 11056                           l3387:	
 11057  273D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 78:        
                                  fputs((const char *)buf, fp);
 11058                           	movlb 0	; select bank0
 11059  273D  0140               	movf	(pad@fp),w
 11060  273E  0838               	movwf	(??_pad+0)+0
 11061  273F  00B3               	movf	(??_pad+0)+0,w
 11062  2740  0833               	movwf	(fputs@fp)
 11063  2741  00A8               	movf	(pad@buf),w
 11064  2742  0830               	fcall	_fputs
 11065  2743  31A3  2379  31A7   	goto	l3389
 11066  2746  2F47               	line	79
 11067                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 79:     }
 11068                           	
 11069                           l416:	
 11070  2747                     	line	82
 11071                           	
 11072                           l3389:	
 11073  2747                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 82:     w =
                                  (p < 0) ? 0 : p;
 11074                           	movlb 0	; select bank0
 11075  2747  0140               	btfsc	(pad@p+1),7
 11076  2748  1BB2               	goto	u4181
 11077  2749  2F4B               	goto	u4180
 11078  274A  2F4C               u4181:
 11079  274B                     	goto	l3393
 11080  274B  2F51               u4180:
 11081  274C                     	
 11082                           l3391:	
 11083  274C                     	movf	(pad@p+1),w
 11084  274C  0832               	movwf	(pad@w+1)
 11085  274D  00B7               	movf	(pad@p),w
 11086  274E  0831               	movwf	(pad@w)
 11087  274F  00B6               	goto	l420
 11088  2750  2F53               	
 11089                           l418:	
 11090  2751                     	
 11091                           l3393:	
 11092  2751                     	clrf	(pad@w)
 11093  2751  01B6               	clrf	(pad@w+1)
 11094  2752  01B7               	
 11095                           l420:	
 11096  2753                     	line	83
 11097                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 83:     i =
                                  0;
 11098                           	clrf	(pad@i)
 11099  2753  01B4               	clrf	(pad@i+1)
 11100  2754  01B5               	line	84
 11101                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
                                 le (i < w) {
 11102                           	goto	l3399
 11103  2755  2F68               	
 11104                           l422:	
 11105  2756                     	line	85
 11106                           	
 11107                           l3395:	
 11108  2756                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 85:        
                                  fputc(' ', fp);
 11109                           	movlw	020h
 11110  2756  3020               	movlb 0	; select bank0
 11111  2757  0140               	movwf	(fputc@c)
 11112  2758  00A0               	movlw	0
 11113  2759  3000               	movwf	((fputc@c))+1
 11114  275A  00A1               	movf	(pad@fp),w
 11115  275B  0838               	movwf	(??_pad+0)+0
 11116  275C  00B3               	movf	(??_pad+0)+0,w
 11117  275D  0833               	movwf	(fputc@fp)
 11118  275E  00A2               	fcall	_fputc
 11119  275F  31A6  26D8  31A7   	line	86
 11120                           	
 11121                           l3397:	
 11122  2762                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 86:        
                                  ++i;
 11123                           	movlw	01h
 11124  2762  3001               	movlb 0	; select bank0
 11125  2763  0140               	addwf	(pad@i),f
 11126  2764  07B4               	movlw	0
 11127  2765  3000               	addwfc	(pad@i+1),f
 11128  2766  3DB5               	goto	l3399
 11129  2767  2F68               	line	87
 11130                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 87:     }
 11131                           	
 11132                           l421:	
 11133  2768                     	line	84
 11134                           	
 11135                           l3399:	
 11136  2768                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
                                 le (i < w) {
 11137                           	movf	(pad@i+1),w
 11138  2768  0835               	xorlw	80h
 11139  2769  3A80               	movwf	(??_pad+0)+0
 11140  276A  00B3               	movf	(pad@w+1),w
 11141  276B  0837               	xorlw	80h
 11142  276C  3A80               	subwf	(??_pad+0)+0,w
 11143  276D  0233               	skipz
 11144  276E  1D03               	goto	u4195
 11145  276F  2F72               	movf	(pad@w),w
 11146  2770  0836               	subwf	(pad@i),w
 11147  2771  0234               u4195:
 11148  2772                     
 11149                           	skipc
 11150  2772  1C03               	goto	u4191
 11151  2773  2F75               	goto	u4190
 11152  2774  2F76               u4191:
 11153  2775                     	goto	l3395
 11154  2775  2F56               u4190:
 11155  2776                     	
 11156                           l423:	
 11157  2776                     	line	90
 11158                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 90:     if 
                                 (!(flags & (1 << 0))) {
 11159                           	movlb 2	; select bank2
 11160  2776  0142               	btfsc	(_flags)^0100h,(0)&7
 11161  2777  1868               	goto	u4201
 11162  2778  2F7A               	goto	u4200
 11163  2779  2F7B               u4201:
 11164  277A                     	goto	l3403
 11165  277A  2F85               u4200:
 11166  277B                     	line	91
 11167                           	
 11168                           l3401:	
 11169  277B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 91:        
                                  fputs((const char *)buf, fp);
 11170                           	movlb 0	; select bank0
 11171  277B  0140               	movf	(pad@fp),w
 11172  277C  0838               	movwf	(??_pad+0)+0
 11173  277D  00B3               	movf	(??_pad+0)+0,w
 11174  277E  0833               	movwf	(fputs@fp)
 11175  277F  00A8               	movf	(pad@buf),w
 11176  2780  0830               	fcall	_fputs
 11177  2781  31A3  2379  31A7   	goto	l3403
 11178  2784  2F85               	line	92
 11179                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 92:     }
 11180                           	
 11181                           l424:	
 11182  2785                     	line	94
 11183                           	
 11184                           l3403:	
 11185  2785                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 94:     ret
                                 urn strlen(buf) + w;
 11186                           	movlb 0	; select bank0
 11187  2785  0140               	movf	(pad@buf),w
 11188  2786  0830               	movwf	(strlen@s)
 11189  2787  00A0               	movlw	0x3
 11190  2788  3003               
 11191                           	movwf	(strlen@s+1)
 11192  2789  00A1               	fcall	_strlen
 11193  278A  31A2  22BA  31A7   	movlb 0	; select bank0
 11194  278D  0140               	movf	(pad@w),w
 11195  278E  0836               	addwf	(0+(?_strlen)),w
 11196  278F  0720               	movwf	(?_pad)
 11197  2790  00B0               	movf	(pad@w+1),w
 11198  2791  0837               	addwfc	(1+(?_strlen)),w
 11199  2792  3D21               	movwf	1+(?_pad)
 11200  2793  00B1               	goto	l425
 11201  2794  2F95               	
 11202                           l3405:	
 11203  2795                     	line	95
 11204                           	
 11205                           l425:	
 11206  2795                     	return
 11207  2795  0008               	opt stack 0
 11208                           GLOBAL	__end_of_pad
 11209                           	__end_of_pad:
 11210  2796                     	signat	_pad,12410
 11211                           	global	_strlen
 11212                           
 11213 ;; *************** function _strlen *****************
 11214 ;; Defined at:
 11215 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 11216 ;; Parameters:    Size  Location     Type
 11217 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 11218 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(80), showMenu@s12(12), 
 11219 ;; Auto vars:     Size  Location     Type
 11220 ;;  a               2    4[BANK0 ] PTR const unsigned char 
 11221 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(80), showMenu@s12(12), 
 11222 ;; Return value:  Size  Location     Type
 11223 ;;                  2    0[BANK0 ] unsigned int 
 11224 ;; Registers used:
 11225 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11226 ;; Tracked objects:
 11227 ;;		On entry : 0/0
 11228 ;;		On exit  : 0/0
 11229 ;;		Unchanged: 0/0
 11230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11231 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11232 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11233 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11234 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11235 ;;Total ram usage:        6 bytes
 11236 ;; Hardware stack levels used:    1
 11237 ;; Hardware stack levels required when called:    3
 11238 ;; This function calls:
 11239 ;;		Nothing
 11240 ;; This function is called by:
 11241 ;;		_pad
 11242 ;;		_stoa
 11243 ;; This function uses a non-reentrant model
 11244 ;;
 11245                           psect	text15,local,class=CODE,delta=2,merge=1,group=2
 11246                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 11247                           	line	12
 11248                           global __ptext15
 11249                           __ptext15:	;psect for function _strlen
 11250  22BA                     psect	text15
 11251                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 11252                           	line	12
 11253                           	global	__size_of_strlen
 11254                           	__size_of_strlen	equ	__end_of_strlen-_strlen
 11255  0024                     	
 11256                           _strlen:	
 11257  22BA                     ;incstack = 0
 11258                           	opt	stack 7
 11259                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 11260                           	line	14
 11261                           	
 11262                           l3157:	
 11263  22BA                     	movlb 0	; select bank0
 11264  22BA  0140               	movf	(strlen@s+1),w
 11265  22BB  0821               	movwf	(strlen@a+1)
 11266  22BC  00A5               	movf	(strlen@s),w
 11267  22BD  0820               	movwf	(strlen@a)
 11268  22BE  00A4               	line	16
 11269                           	goto	l3161
 11270  22BF  2AC5               	
 11271                           l1131:	
 11272  22C0                     	line	17
 11273                           	
 11274                           l3159:	
 11275  22C0                     	movlw	01h
 11276  22C0  3001               	addwf	(strlen@s),f
 11277  22C1  07A0               	movlw	0
 11278  22C2  3000               	addwfc	(strlen@s+1),f
 11279  22C3  3DA1               	goto	l3161
 11280  22C4  2AC5               	line	18
 11281                           	
 11282                           l1130:	
 11283  22C5                     	line	16
 11284                           	
 11285                           l3161:	
 11286  22C5                     	movf	(strlen@s),w
 11287  22C5  0820               	movwf	fsr1l
 11288  22C6  0086               	movf	(strlen@s+1),w
 11289  22C7  0821               	movwf	fsr1h
 11290  22C8  0087               
 11291                           	movf	(indf1),w
 11292  22C9  0801               	btfss	status,2
 11293  22CA  1D03               	goto	u3651
 11294  22CB  2ACD               	goto	u3650
 11295  22CC  2ACE               u3651:
 11296  22CD                     	goto	l3159
 11297  22CD  2AC0               u3650:
 11298  22CE                     	goto	l3163
 11299  22CE  2ACF               	
 11300                           l1132:	
 11301  22CF                     	line	25
 11302                           	
 11303                           l3163:	
 11304  22CF                     	comf	(strlen@a),w
 11305  22CF  0924               	movwf	(??_strlen+0)+0
 11306  22D0  00A2               	comf	(strlen@a+1),w
 11307  22D1  0925               	movwf	((??_strlen+0)+0+1)
 11308  22D2  00A3               	incf	(??_strlen+0)+0,f
 11309  22D3  0AA2               	skipnz
 11310  22D4  1903               	incf	((??_strlen+0)+0+1),f
 11311  22D5  0AA3               	movf	(strlen@s),w
 11312  22D6  0820               	addwf	0+(??_strlen+0)+0,w
 11313  22D7  0722               	movwf	(?_strlen)
 11314  22D8  00A0               	movf	(strlen@s+1),w
 11315  22D9  0821               	addwfc	1+(??_strlen+0)+0,w
 11316  22DA  3D23               	movwf	1+(?_strlen)
 11317  22DB  00A1               	goto	l1133
 11318  22DC  2ADD               	
 11319                           l3165:	
 11320  22DD                     	line	26
 11321                           	
 11322                           l1133:	
 11323  22DD                     	return
 11324  22DD  0008               	opt stack 0
 11325                           GLOBAL	__end_of_strlen
 11326                           	__end_of_strlen:
 11327  22DE                     	signat	_strlen,4218
 11328                           	global	_fputs
 11329                           
 11330 ;; *************** function _fputs *****************
 11331 ;; Defined at:
 11332 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
 11333 ;; Parameters:    Size  Location     Type
 11334 ;;  s               1    wreg     PTR const unsigned char 
 11335 ;;		 -> dbuf(80), 
 11336 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
 11337 ;;		 -> sprintf@f(5), 
 11338 ;; Auto vars:     Size  Location     Type
 11339 ;;  s               1   15[BANK0 ] PTR const unsigned char 
 11340 ;;		 -> dbuf(80), 
 11341 ;;  i               2   13[BANK0 ] int 
 11342 ;;  c               1   12[BANK0 ] unsigned char 
 11343 ;; Return value:  Size  Location     Type
 11344 ;;                  2    8[BANK0 ] int 
 11345 ;; Registers used:
 11346 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11347 ;; Tracked objects:
 11348 ;;		On entry : 0/0
 11349 ;;		On exit  : 0/0
 11350 ;;		Unchanged: 0/0
 11351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11352 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11353 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11354 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11355 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11356 ;;Total ram usage:        8 bytes
 11357 ;; Hardware stack levels used:    1
 11358 ;; Hardware stack levels required when called:    5
 11359 ;; This function calls:
 11360 ;;		_fputc
 11361 ;; This function is called by:
 11362 ;;		_pad
 11363 ;; This function uses a non-reentrant model
 11364 ;;
 11365                           psect	text16,local,class=CODE,delta=2,merge=1,group=2
 11366                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
 11367                           	line	8
 11368                           global __ptext16
 11369                           __ptext16:	;psect for function _fputs
 11370  2379                     psect	text16
 11371                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
 11372                           	line	8
 11373                           	global	__size_of_fputs
 11374                           	__size_of_fputs	equ	__end_of_fputs-_fputs
 11375  002B                     	
 11376                           _fputs:	
 11377  2379                     ;incstack = 0
 11378                           	opt	stack 4
 11379                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11380                           ;fputs@s stored from wreg
 11381                           	movlb 0	; select bank0
 11382  2379  0140               	movwf	(fputs@s)
 11383  237A  00AF               	line	13
 11384                           	
 11385                           l3149:	
 11386  237B                     	clrf	(fputs@i)
 11387  237B  01AD               	clrf	(fputs@i+1)
 11388  237C  01AE               	line	14
 11389                           	goto	l3155
 11390  237D  2B92               	
 11391                           l1109:	
 11392  237E                     	line	15
 11393                           	
 11394                           l3151:	
 11395  237E                     	movf	(fputs@c),w
 11396  237E  082C               	movwf	(??_fputs+0)+0
 11397  237F  00A9               	clrf	(??_fputs+0)+0+1
 11398  2380  01AA               	movf	0+(??_fputs+0)+0,w
 11399  2381  0829               	movwf	(fputc@c)
 11400  2382  00A0               	movf	1+(??_fputs+0)+0,w
 11401  2383  082A               	movwf	(fputc@c+1)
 11402  2384  00A1               	movf	(fputs@fp),w
 11403  2385  0828               	movwf	(??_fputs+2)+0
 11404  2386  00AB               	movf	(??_fputs+2)+0,w
 11405  2387  082B               	movwf	(fputc@fp)
 11406  2388  00A2               	fcall	_fputc
 11407  2389  31A6  26D8  31A3   	line	16
 11408                           	
 11409                           l3153:	
 11410  238C                     	movlw	01h
 11411  238C  3001               	movlb 0	; select bank0
 11412  238D  0140               	addwf	(fputs@i),f
 11413  238E  07AD               	movlw	0
 11414  238F  3000               	addwfc	(fputs@i+1),f
 11415  2390  3DAE               	goto	l3155
 11416  2391  2B92               	line	17
 11417                           	
 11418                           l1108:	
 11419  2392                     	line	14
 11420                           	
 11421                           l3155:	
 11422  2392                     	movf	(fputs@i),w
 11423  2392  082D               	addwf	(fputs@s),w
 11424  2393  072F               	movwf	(??_fputs+0)+0
 11425  2394  00A9               	movf	0+(??_fputs+0)+0,w
 11426  2395  0829               	movwf	fsr1l
 11427  2396  0086               	movlw 3	; select bank6/7
 11428  2397  3003               	movwf fsr1h	
 11429  2398  0087               	
 11430                           	movf	indf1,w
 11431  2399  0801               	movwf	(??_fputs+1)+0
 11432  239A  00AA               	movf	(??_fputs+1)+0,w
 11433  239B  082A               	movwf	(fputs@c)
 11434  239C  00AC               	movf	(((fputs@c))),w
 11435  239D  082C               	btfss	status,2
 11436  239E  1D03               	goto	u3641
 11437  239F  2BA1               	goto	u3640
 11438  23A0  2BA2               u3641:
 11439  23A1                     	goto	l3151
 11440  23A1  2B7E               u3640:
 11441  23A2                     	goto	l1111
 11442  23A2  2BA3               	
 11443                           l1110:	
 11444  23A3                     	line	19
 11445                           ;	Return value of _fputs is never used
 11446                           	
 11447                           l1111:	
 11448  23A3                     	return
 11449  23A3  0008               	opt stack 0
 11450                           GLOBAL	__end_of_fputs
 11451                           	__end_of_fputs:
 11452  23A4                     	signat	_fputs,8314
 11453                           	global	_fputc
 11454                           
 11455 ;; *************** function _fputc *****************
 11456 ;; Defined at:
 11457 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
 11458 ;; Parameters:    Size  Location     Type
 11459 ;;  c               2    0[BANK0 ] int 
 11460 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
 11461 ;;		 -> sprintf@f(5), 
 11462 ;; Auto vars:     Size  Location     Type
 11463 ;;		None
 11464 ;; Return value:  Size  Location     Type
 11465 ;;                  2    0[BANK0 ] int 
 11466 ;; Registers used:
 11467 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11468 ;; Tracked objects:
 11469 ;;		On entry : 0/0
 11470 ;;		On exit  : 0/0
 11471 ;;		Unchanged: 0/0
 11472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11473 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11475 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11476 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11477 ;;Total ram usage:        8 bytes
 11478 ;; Hardware stack levels used:    1
 11479 ;; Hardware stack levels required when called:    4
 11480 ;; This function calls:
 11481 ;;		_putch
 11482 ;; This function is called by:
 11483 ;;		_pad
 11484 ;;		_stoa
 11485 ;;		_vfpfcnvrt
 11486 ;;		_fputs
 11487 ;; This function uses a non-reentrant model
 11488 ;;
 11489                           psect	text17,local,class=CODE,delta=2,merge=1,group=2
 11490                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
 11491                           	line	8
 11492                           global __ptext17
 11493                           __ptext17:	;psect for function _fputc
 11494  26D8                     psect	text17
 11495                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
 11496                           	line	8
 11497                           	global	__size_of_fputc
 11498                           	__size_of_fputc	equ	__end_of_fputc-_fputc
 11499  005E                     	
 11500                           _fputc:	
 11501  26D8                     ;incstack = 0
 11502                           	opt	stack 6
 11503                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11504                           	line	12
 11505                           	
 11506                           l3127:	
 11507  26D8                     	movlb 0	; select bank0
 11508  26D8  0140               	movf	((fputc@fp)),w
 11509  26D9  0822               	btfsc	status,2
 11510  26DA  1903               	goto	u3601
 11511  26DB  2EDD               	goto	u3600
 11512  26DC  2EDE               u3601:
 11513  26DD                     	goto	l3131
 11514  26DD  2EE4               u3600:
 11515  26DE                     	
 11516                           l3129:	
 11517  26DE                     	movf	((fputc@fp)),w
 11518  26DE  0822               	btfss	status,2
 11519  26DF  1D03               	goto	u3611
 11520  26E0  2EE2               	goto	u3610
 11521  26E1  2EE3               u3611:
 11522  26E2                     	goto	l3133
 11523  26E2  2EE9               u3610:
 11524  26E3                     	goto	l3131
 11525  26E3  2EE4               	
 11526                           l1098:	
 11527  26E4                     	line	13
 11528                           	
 11529                           l3131:	
 11530  26E4                     	movf	(fputc@c),w
 11531  26E4  0820               	fcall	_putch
 11532  26E5  3187  27FE  31A6   	line	14
 11533                           	goto	l1103
 11534  26E8  2F35               	
 11535                           l1096:	
 11536  26E9                     	line	15
 11537                           	
 11538                           l3133:	
 11539  26E9                     	movlb 0	; select bank0
 11540  26E9  0140               	movf	(fputc@fp),w
 11541  26EA  0822               	addlw	03h
 11542  26EB  3E03               	movwf	fsr1l
 11543  26EC  0086               	movlw 1	; select bank2/3
 11544  26ED  3001               	movwf fsr1h	
 11545  26EE  0087               	
 11546                           		moviw	fsr1++
 11547  26EF  0016               	iorwf	indf1,w
 11548  26F0  0401               	btfsc	status,2
 11549  26F1  1903               	goto	u3621
 11550  26F2  2EF4               	goto	u3620
 11551  26F3  2EF5               
 11552                           u3621:
 11553  26F4                     	goto	l3137
 11554  26F4  2F15               u3620:
 11555  26F5                     	
 11556                           l3135:	
 11557  26F5                     	movf	(fputc@fp),w
 11558  26F5  0822               	addlw	03h
 11559  26F6  3E03               	movwf	fsr1l
 11560  26F7  0086               	movlw 1	; select bank2/3
 11561  26F8  3001               	movwf fsr1h	
 11562  26F9  0087               	
 11563                           	moviw	[0]fsr1
 11564  26FA  3F40               	movwf	(??_fputc+0)+0
 11565  26FB  00A3               	moviw	[1]fsr1
 11566  26FC  3F41               	movwf	(??_fputc+0)+0+1
 11567  26FD  00A4               	incf	(fputc@fp),w
 11568  26FE  0A22               	movwf	fsr1l
 11569  26FF  0086               	movlw 1	; select bank2/3
 11570  2700  3001               	movwf fsr1h	
 11571  2701  0087               	
 11572                           	moviw	[0]fsr1
 11573  2702  3F40               	movwf	(??_fputc+2)+0
 11574  2703  00A5               	moviw	[1]fsr1
 11575  2704  3F41               	movwf	(??_fputc+2)+0+1
 11576  2705  00A6               	movf	1+(??_fputc+2)+0,w
 11577  2706  0826               	xorlw	80h
 11578  2707  3A80               	movwf	(??_fputc+4)+0
 11579  2708  00A7               	movf	1+(??_fputc+0)+0,w
 11580  2709  0824               	xorlw	80h
 11581  270A  3A80               	subwf	(??_fputc+4)+0,w
 11582  270B  0227               	skipz
 11583  270C  1D03               	goto	u3635
 11584  270D  2F10               	movf	0+(??_fputc+0)+0,w
 11585  270E  0823               	subwf	0+(??_fputc+2)+0,w
 11586  270F  0225               u3635:
 11587  2710                     
 11588                           	skipnc
 11589  2710  1803               	goto	u3631
 11590  2711  2F13               	goto	u3630
 11591  2712  2F14               u3631:
 11592  2713                     	goto	l1103
 11593  2713  2F35               u3630:
 11594  2714                     	goto	l3137
 11595  2714  2F15               	
 11596                           l1102:	
 11597  2715                     	line	16
 11598                           	
 11599                           l3137:	
 11600  2715                     	movlb 0	; select bank0
 11601  2715  0140               	movf	(fputc@c),w
 11602  2716  0820               	movwf	(??_fputc+0)+0
 11603  2717  00A3               	movf	(fputc@fp),w
 11604  2718  0822               	movwf	fsr1l
 11605  2719  0086               	movlw 1	; select bank2/3
 11606  271A  3001               	movwf fsr1h	
 11607  271B  0087               	
 11608                           	incf	(fputc@fp),w
 11609  271C  0A22               	movwf	fsr0l
 11610  271D  0084               	movlw 1	; select bank2/3
 11611  271E  3001               	movwf fsr0h	
 11612  271F  0085               	
 11613                           	movf	indf0,w
 11614  2720  0800               	addwf	indf1,w
 11615  2721  0701               	movwf	(??_fputc+1)+0
 11616  2722  00A4               	movf	0+(??_fputc+1)+0,w
 11617  2723  0824               	movwf	fsr1l
 11618  2724  0086               	movlw 1	; select bank2/3
 11619  2725  3001               	movwf fsr1h	
 11620  2726  0087               	
 11621                           	movf	(??_fputc+0)+0,w
 11622  2727  0823               	movwf	indf1
 11623  2728  0081               	line	17
 11624                           	
 11625                           l3139:	
 11626  2729                     	incf	(fputc@fp),w
 11627  2729  0A22               	movwf	fsr1l
 11628  272A  0086               	movlw 1	; select bank2/3
 11629  272B  3001               	movwf fsr1h	
 11630  272C  0087               	
 11631                           	movlw	01h
 11632  272D  3001               	addwf	indf1,f
 11633  272E  0781               	addfsr	fsr1,1
 11634  272F  3141               	skipnc
 11635  2730  1803               	incf	indf1,f
 11636  2731  0A81               	goto	l1103
 11637  2732  2F35               	line	18
 11638                           	
 11639                           l1100:	
 11640  2733                     	goto	l1103
 11641  2733  2F35               	line	19
 11642                           	
 11643                           l1099:	
 11644  2734                     	goto	l1103
 11645  2734  2F35               	line	20
 11646                           	
 11647                           l3141:	
 11648  2735                     	line	21
 11649                           ;	Return value of _fputc is never used
 11650                           	
 11651                           l1103:	
 11652  2735                     	return
 11653  2735  0008               	opt stack 0
 11654                           GLOBAL	__end_of_fputc
 11655                           	__end_of_fputc:
 11656  2736                     	signat	_fputc,8314
 11657                           	global	_putch
 11658                           
 11659 ;; *************** function _putch *****************
 11660 ;; Defined at:
 11661 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
 11662 ;; Parameters:    Size  Location     Type
 11663 ;;  c               1    wreg     unsigned char 
 11664 ;; Auto vars:     Size  Location     Type
 11665 ;;  c               1    0[COMMON] unsigned char 
 11666 ;; Return value:  Size  Location     Type
 11667 ;;                  1    wreg      void 
 11668 ;; Registers used:
 11669 ;;		wreg
 11670 ;; Tracked objects:
 11671 ;;		On entry : 0/0
 11672 ;;		On exit  : 0/0
 11673 ;;		Unchanged: 0/0
 11674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11679 ;;Total ram usage:        0 bytes
 11680 ;; Hardware stack levels used:    1
 11681 ;; Hardware stack levels required when called:    3
 11682 ;; This function calls:
 11683 ;;		Nothing
 11684 ;; This function is called by:
 11685 ;;		_fputc
 11686 ;; This function uses a non-reentrant model
 11687 ;;
 11688                           psect	text18,local,class=CODE,delta=2,merge=1,group=2
 11689                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
 11690                           	line	7
 11691                           global __ptext18
 11692                           __ptext18:	;psect for function _putch
 11693  07FE                     psect	text18
 11694                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
 11695                           	line	7
 11696                           	global	__size_of_putch
 11697                           	__size_of_putch	equ	__end_of_putch-_putch
 11698  0001                     	
 11699                           _putch:	
 11700  07FE                     ;incstack = 0
 11701                           	opt	stack 6
 11702                           ; Regs used in _putch: [wreg]
 11703                           	line	9
 11704                           	
 11705                           l1121:	
 11706  07FE                     	return
 11707  07FE  0008               	opt stack 0
 11708                           GLOBAL	__end_of_putch
 11709                           	__end_of_putch:
 11710  07FF                     	signat	_putch,4217
 11711                           	global	_floorf
 11712                           
 11713 ;; *************** function _floorf *****************
 11714 ;; Defined at:
 11715 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\floorf.c"
 11716 ;; Parameters:    Size  Location     Type
 11717 ;;  x               4   66[BANK0 ] float 
 11718 ;; Auto vars:     Size  Location     Type
 11719 ;;  u               4    6[BANK1 ] struct .
 11720 ;;  m               4    0[BANK1 ] unsigned long 
 11721 ;;  e               2    4[BANK1 ] int 
 11722 ;; Return value:  Size  Location     Type
 11723 ;;                  4   66[BANK0 ] float 
 11724 ;; Registers used:
 11725 ;;		wreg, status,2, status,0
 11726 ;; Tracked objects:
 11727 ;;		On entry : 0/0
 11728 ;;		On exit  : 0/0
 11729 ;;		Unchanged: 0/0
 11730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11731 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11732 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11733 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11734 ;;      Totals:         0      10      10       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11735 ;;Total ram usage:       20 bytes
 11736 ;; Hardware stack levels used:    1
 11737 ;; Hardware stack levels required when called:    3
 11738 ;; This function calls:
 11739 ;;		Nothing
 11740 ;; This function is called by:
 11741 ;;		_efgtoa
 11742 ;; This function uses a non-reentrant model
 11743 ;;
 11744                           psect	text19,local,class=CODE,delta=2,merge=1,group=2
 11745                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\floorf.c"
 11746                           	line	3
 11747                           global __ptext19
 11748                           __ptext19:	;psect for function _floorf
 11749  1129                     psect	text19
 11750                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\floorf.c"
 11751                           	line	3
 11752                           	global	__size_of_floorf
 11753                           	__size_of_floorf	equ	__end_of_floorf-_floorf
 11754  0145                     	
 11755                           _floorf:	
 11756  1129                     ;incstack = 0
 11757                           	opt	stack 7
 11758                           ; Regs used in _floorf: [wreg+status,2+status,0]
 11759                           	line	5
 11760                           	
 11761                           l3445:	
 11762  1129                     	movlb 4	; select bank4
 11763  1129  0144               	movf	(floorf@F514+3)^0200h,w
 11764  112A  0823               	movlb 1	; select bank1
 11765  112B  0141               	movwf	(floorf@u+3)^080h
 11766  112C  00A9               	movlb 4	; select bank4
 11767  112D  0144               	movf	(floorf@F514+2)^0200h,w
 11768  112E  0822               	movlb 1	; select bank1
 11769  112F  0141               	movwf	(floorf@u+2)^080h
 11770  1130  00A8               	movlb 4	; select bank4
 11771  1131  0144               	movf	(floorf@F514+1)^0200h,w
 11772  1132  0821               	movlb 1	; select bank1
 11773  1133  0141               	movwf	(floorf@u+1)^080h
 11774  1134  00A7               	movlb 4	; select bank4
 11775  1135  0144               	movf	(floorf@F514)^0200h,w
 11776  1136  0820               	movlb 1	; select bank1
 11777  1137  0141               	movwf	(floorf@u)^080h
 11778  1138  00A6               
 11779                           	movlb 0	; select bank0
 11780  1139  0140               	movf	(floorf@x+3),w
 11781  113A  0865               	movlb 1	; select bank1
 11782  113B  0141               	movwf	(floorf@u+3)^080h
 11783  113C  00A9               	movlb 0	; select bank0
 11784  113D  0140               	movf	(floorf@x+2),w
 11785  113E  0864               	movlb 1	; select bank1
 11786  113F  0141               	movwf	(floorf@u+2)^080h
 11787  1140  00A8               	movlb 0	; select bank0
 11788  1141  0140               	movf	(floorf@x+1),w
 11789  1142  0863               	movlb 1	; select bank1
 11790  1143  0141               	movwf	(floorf@u+1)^080h
 11791  1144  00A7               	movlb 0	; select bank0
 11792  1145  0140               	movf	(floorf@x),w
 11793  1146  0862               	movlb 1	; select bank1
 11794  1147  0141               	movwf	(floorf@u)^080h
 11795  1148  00A6               
 11796                           	line	6
 11797                           	
 11798                           l3447:	
 11799  1149                     	movf	(floorf@u)^080h,w
 11800  1149  0826               	movlb 0	; select bank0
 11801  114A  0140               	movwf	(??_floorf+0)+0
 11802  114B  00E6               	movlb 1	; select bank1
 11803  114C  0141               	movf	(floorf@u+1)^080h,w
 11804  114D  0827               	movlb 0	; select bank0
 11805  114E  0140               	movwf	((??_floorf+0)+0+1)
 11806  114F  00E7               	movlb 1	; select bank1
 11807  1150  0141               	movf	(floorf@u+2)^080h,w
 11808  1151  0828               	movlb 0	; select bank0
 11809  1152  0140               	movwf	((??_floorf+0)+0+2)
 11810  1153  00E8               	movlb 1	; select bank1
 11811  1154  0141               	movf	(floorf@u+3)^080h,w
 11812  1155  0829               	movlb 0	; select bank0
 11813  1156  0140               	movwf	((??_floorf+0)+0+3)
 11814  1157  00E9               	movlw	017h
 11815  1158  3017               u4335:
 11816  1159                     	lsrf	(??_floorf+0)+3,f
 11817  1159  36E9               	rrf	(??_floorf+0)+2,f
 11818  115A  0CE8               	rrf	(??_floorf+0)+1,f
 11819  115B  0CE7               	rrf	(??_floorf+0)+0,f
 11820  115C  0CE6               u4330:
 11821  115D                     	decfsz	wreg,f
 11822  115D  0B89               	goto	u4335
 11823  115E  2959               	movlw	0FFh
 11824  115F  30FF               	andwf	0+(??_floorf+0)+0,w
 11825  1160  0566               	movwf	(??_floorf+4)+0
 11826  1161  00EA               	movlw	0
 11827  1162  3000               	andwf	1+(??_floorf+0)+0,w
 11828  1163  0567               	movwf	1+(??_floorf+4)+0
 11829  1164  00EB               	movf	0+(??_floorf+4)+0,w
 11830  1165  086A               	addlw	081h
 11831  1166  3E81               	movlb 1	; select bank1
 11832  1167  0141               	movwf	(floorf@e)^080h
 11833  1168  00A4               	movlw	0FFh
 11834  1169  30FF               	movlb 0	; select bank0
 11835  116A  0140               	addwfc	1+(??_floorf+4)+0,w
 11836  116B  3D6B               	movlb 1	; select bank1
 11837  116C  0141               	movwf	1+(floorf@e)^080h
 11838  116D  00A5               	line	9
 11839                           	
 11840                           l3449:	
 11841  116E                     	movf	(floorf@e+1)^080h,w
 11842  116E  0825               	xorlw	80h
 11843  116F  3A80               	movlb 0	; select bank0
 11844  1170  0140               	movwf	(??_floorf+0)+0
 11845  1171  00E6               	movlw	(0)^80h
 11846  1172  3080               	subwf	(??_floorf+0)+0,w
 11847  1173  0266               	skipz
 11848  1174  1D03               	goto	u4345
 11849  1175  2979               	movlw	017h
 11850  1176  3017               	movlb 1	; select bank1
 11851  1177  0141               	subwf	(floorf@e)^080h,w
 11852  1178  0224               u4345:
 11853  1179                     
 11854                           	skipc
 11855  1179  1C03               	goto	u4341
 11856  117A  297C               	goto	u4340
 11857  117B  297D               u4341:
 11858  117C                     	goto	l1063
 11859  117C  297E               u4340:
 11860  117D                     	line	10
 11861                           	
 11862                           l3451:	
 11863  117D                     	goto	l1064
 11864  117D  2A6D               	
 11865                           l1063:	
 11866  117E                     	line	11
 11867                           	movlb 1	; select bank1
 11868  117E  0141               	btfsc	(floorf@e+1)^080h,7
 11869  117F  1BA5               	goto	u4351
 11870  1180  2982               	goto	u4350
 11871  1181  2983               u4351:
 11872  1182                     	goto	l3465
 11873  1182  2A0A               u4350:
 11874  1183                     	line	12
 11875                           	
 11876                           l3453:	
 11877  1183                     	movlw	0FFh
 11878  1183  30FF               	movlb 0	; select bank0
 11879  1184  0140               	movwf	((??_floorf+0)+0)
 11880  1185  00E6               	movlw	0FFh
 11881  1186  30FF               	movwf	((??_floorf+0)+0+1)
 11882  1187  00E7               	movlw	07Fh
 11883  1188  307F               	movwf	((??_floorf+0)+0+2)
 11884  1189  00E8               	movlw	0
 11885  118A  3000               	movwf	((??_floorf+0)+0+3)
 11886  118B  00E9               	movlb 1	; select bank1
 11887  118C  0141               	incf	(floorf@e)^080h,w
 11888  118D  0A24               	movlb 0	; select bank0
 11889  118E  0140               	goto	u4360
 11890  118F  2994               u4365:
 11891  1190                     	asrf	(??_floorf+0)+3,f
 11892  1190  37E9               	rrf	(??_floorf+0)+2,f
 11893  1191  0CE8               	rrf	(??_floorf+0)+1,f
 11894  1192  0CE7               	rrf	(??_floorf+0)+0,f
 11895  1193  0CE6               u4360:
 11896  1194                     	decfsz	wreg,f
 11897  1194  0B89               	goto	u4365
 11898  1195  2990               	movf	3+(??_floorf+0)+0,w
 11899  1196  0869               	movlb 1	; select bank1
 11900  1197  0141               	movwf	(floorf@m+3)^080h
 11901  1198  00A3               	movlb 0	; select bank0
 11902  1199  0140               	movf	2+(??_floorf+0)+0,w
 11903  119A  0868               	movlb 1	; select bank1
 11904  119B  0141               	movwf	(floorf@m+2)^080h
 11905  119C  00A2               	movlb 0	; select bank0
 11906  119D  0140               	movf	1+(??_floorf+0)+0,w
 11907  119E  0867               	movlb 1	; select bank1
 11908  119F  0141               	movwf	(floorf@m+1)^080h
 11909  11A0  00A1               	movlb 0	; select bank0
 11910  11A1  0140               	movf	0+(??_floorf+0)+0,w
 11911  11A2  0866               	movlb 1	; select bank1
 11912  11A3  0141               	movwf	(floorf@m)^080h
 11913  11A4  00A0               
 11914                           	line	13
 11915                           	
 11916                           l3455:	
 11917  11A5                     	movf	(floorf@u)^080h,w
 11918  11A5  0826               	andwf	(floorf@m)^080h,w
 11919  11A6  0520               	movlb 0	; select bank0
 11920  11A7  0140               	movwf	((??_floorf+0)+0+0)
 11921  11A8  00E6               	movlb 1	; select bank1
 11922  11A9  0141               	movf	(floorf@u+1)^080h,w
 11923  11AA  0827               	andwf	(floorf@m+1)^080h,w
 11924  11AB  0521               	movlb 0	; select bank0
 11925  11AC  0140               	movwf	((??_floorf+0)+0+1)
 11926  11AD  00E7               	movlb 1	; select bank1
 11927  11AE  0141               	movf	(floorf@u+2)^080h,w
 11928  11AF  0828               	andwf	(floorf@m+2)^080h,w
 11929  11B0  0522               	movlb 0	; select bank0
 11930  11B1  0140               	movwf	((??_floorf+0)+0+2)
 11931  11B2  00E8               	movlb 1	; select bank1
 11932  11B3  0141               	movf	(floorf@u+3)^080h,w
 11933  11B4  0829               	andwf	(floorf@m+3)^080h,w
 11934  11B5  0523               	movlb 0	; select bank0
 11935  11B6  0140               	movwf	((??_floorf+0)+0+3)
 11936  11B7  00E9               	movf	3+(??_floorf+0)+0,w
 11937  11B8  0869               	iorwf	2+(??_floorf+0)+0,w
 11938  11B9  0468               	iorwf	1+(??_floorf+0)+0,w
 11939  11BA  0467               	iorwf	0+(??_floorf+0)+0,w
 11940  11BB  0466               	skipz
 11941  11BC  1D03               	goto	u4371
 11942  11BD  29BF               	goto	u4370
 11943  11BE  29C0               u4371:
 11944  11BF                     	goto	l3459
 11945  11BF  29C1               u4370:
 11946  11C0                     	line	14
 11947                           	
 11948                           l3457:	
 11949  11C0                     	goto	l1064
 11950  11C0  2A6D               	
 11951                           l1066:	
 11952  11C1                     	line	16
 11953                           	
 11954                           l3459:	
 11955  11C1                     	movlb 1	; select bank1
 11956  11C1  0141               	movf	(floorf@u)^080h,w
 11957  11C2  0826               	movlb 0	; select bank0
 11958  11C3  0140               	movwf	(??_floorf+0)+0
 11959  11C4  00E6               	movlb 1	; select bank1
 11960  11C5  0141               	movf	(floorf@u+1)^080h,w
 11961  11C6  0827               	movlb 0	; select bank0
 11962  11C7  0140               	movwf	((??_floorf+0)+0+1)
 11963  11C8  00E7               	movlb 1	; select bank1
 11964  11C9  0141               	movf	(floorf@u+2)^080h,w
 11965  11CA  0828               	movlb 0	; select bank0
 11966  11CB  0140               	movwf	((??_floorf+0)+0+2)
 11967  11CC  00E8               	movlb 1	; select bank1
 11968  11CD  0141               	movf	(floorf@u+3)^080h,w
 11969  11CE  0829               	movlb 0	; select bank0
 11970  11CF  0140               	movwf	((??_floorf+0)+0+3)
 11971  11D0  00E9               	movlw	01Fh
 11972  11D1  301F               u4385:
 11973  11D2                     	lsrf	(??_floorf+0)+3,f
 11974  11D2  36E9               	rrf	(??_floorf+0)+2,f
 11975  11D3  0CE8               	rrf	(??_floorf+0)+1,f
 11976  11D4  0CE7               	rrf	(??_floorf+0)+0,f
 11977  11D5  0CE6               u4380:
 11978  11D6                     	decfsz	wreg,f
 11979  11D6  0B89               	goto	u4385
 11980  11D7  29D2               	movf	3+(??_floorf+0)+0,w
 11981  11D8  0869               	iorwf	2+(??_floorf+0)+0,w
 11982  11D9  0468               	iorwf	1+(??_floorf+0)+0,w
 11983  11DA  0467               	iorwf	0+(??_floorf+0)+0,w
 11984  11DB  0466               	skipnz
 11985  11DC  1903               	goto	u4391
 11986  11DD  29DF               	goto	u4390
 11987  11DE  29E0               u4391:
 11988  11DF                     	goto	l3463
 11989  11DF  29EA               u4390:
 11990  11E0                     	line	17
 11991                           	
 11992                           l3461:	
 11993  11E0                     	movlb 1	; select bank1
 11994  11E0  0141               	movf	(floorf@m)^080h,w
 11995  11E1  0820               	addwf	(floorf@u)^080h,f
 11996  11E2  07A6               	movf	(floorf@m+1)^080h,w
 11997  11E3  0821               	addwfc	(floorf@u+1)^080h,f
 11998  11E4  3DA7               	movf	(floorf@m+2)^080h,w
 11999  11E5  0822               	addwfc	(floorf@u+2)^080h,f
 12000  11E6  3DA8               	movf	(floorf@m+3)^080h,w
 12001  11E7  0823               	addwfc	(floorf@u+3)^080h,f
 12002  11E8  3DA9               	goto	l3463
 12003  11E9  29EA               	
 12004                           l1067:	
 12005  11EA                     	line	18
 12006                           	
 12007                           l3463:	
 12008  11EA                     	movlb 1	; select bank1
 12009  11EA  0141               	comf	(floorf@m)^080h,w
 12010  11EB  0920               	movlb 0	; select bank0
 12011  11EC  0140               	movwf	(??_floorf+0)+0
 12012  11ED  00E6               	movlb 1	; select bank1
 12013  11EE  0141               	comf	(floorf@m+1)^080h,w
 12014  11EF  0921               	movlb 0	; select bank0
 12015  11F0  0140               	movwf	((??_floorf+0)+0+1)
 12016  11F1  00E7               	movlb 1	; select bank1
 12017  11F2  0141               	comf	(floorf@m+2)^080h,w
 12018  11F3  0922               	movlb 0	; select bank0
 12019  11F4  0140               	movwf	((??_floorf+0)+0+2)
 12020  11F5  00E8               	movlb 1	; select bank1
 12021  11F6  0141               	comf	(floorf@m+3)^080h,w
 12022  11F7  0923               	movlb 0	; select bank0
 12023  11F8  0140               	movwf	((??_floorf+0)+0+3)
 12024  11F9  00E9               
 12025                           	movf	0+(??_floorf+0)+0,w
 12026  11FA  0866               	movlb 1	; select bank1
 12027  11FB  0141               	andwf	(floorf@u)^080h,f
 12028  11FC  05A6               	movlb 0	; select bank0
 12029  11FD  0140               	movf	1+(??_floorf+0)+0,w
 12030  11FE  0867               	movlb 1	; select bank1
 12031  11FF  0141               	andwf	(floorf@u+1)^080h,f
 12032  1200  05A7               	movlb 0	; select bank0
 12033  1201  0140               	movf	2+(??_floorf+0)+0,w
 12034  1202  0868               	movlb 1	; select bank1
 12035  1203  0141               	andwf	(floorf@u+2)^080h,f
 12036  1204  05A8               	movlb 0	; select bank0
 12037  1205  0140               	movf	3+(??_floorf+0)+0,w
 12038  1206  0869               	movlb 1	; select bank1
 12039  1207  0141               	andwf	(floorf@u+3)^080h,f
 12040  1208  05A9               	line	19
 12041                           	goto	l1068
 12042  1209  2A5C               	
 12043                           l1065:	
 12044  120A                     	line	21
 12045                           	
 12046                           l3465:	
 12047  120A                     	movf	(floorf@u)^080h,w
 12048  120A  0826               	movlb 0	; select bank0
 12049  120B  0140               	movwf	(??_floorf+0)+0
 12050  120C  00E6               	movlb 1	; select bank1
 12051  120D  0141               	movf	(floorf@u+1)^080h,w
 12052  120E  0827               	movlb 0	; select bank0
 12053  120F  0140               	movwf	((??_floorf+0)+0+1)
 12054  1210  00E7               	movlb 1	; select bank1
 12055  1211  0141               	movf	(floorf@u+2)^080h,w
 12056  1212  0828               	movlb 0	; select bank0
 12057  1213  0140               	movwf	((??_floorf+0)+0+2)
 12058  1214  00E8               	movlb 1	; select bank1
 12059  1215  0141               	movf	(floorf@u+3)^080h,w
 12060  1216  0829               	movlb 0	; select bank0
 12061  1217  0140               	movwf	((??_floorf+0)+0+3)
 12062  1218  00E9               	movlw	01Fh
 12063  1219  301F               u4405:
 12064  121A                     	lsrf	(??_floorf+0)+3,f
 12065  121A  36E9               	rrf	(??_floorf+0)+2,f
 12066  121B  0CE8               	rrf	(??_floorf+0)+1,f
 12067  121C  0CE7               	rrf	(??_floorf+0)+0,f
 12068  121D  0CE6               u4400:
 12069  121E                     	decfsz	wreg,f
 12070  121E  0B89               	goto	u4405
 12071  121F  2A1A               	movf	3+(??_floorf+0)+0,w
 12072  1220  0869               	iorwf	2+(??_floorf+0)+0,w
 12073  1221  0468               	iorwf	1+(??_floorf+0)+0,w
 12074  1222  0467               	iorwf	0+(??_floorf+0)+0,w
 12075  1223  0466               	skipz
 12076  1224  1D03               	goto	u4411
 12077  1225  2A27               	goto	u4410
 12078  1226  2A28               u4411:
 12079  1227                     	goto	l3469
 12080  1227  2A32               u4410:
 12081  1228                     	line	22
 12082                           	
 12083                           l3467:	
 12084  1228                     	movlw	high highword(0)
 12085  1228  3000               	movlb 1	; select bank1
 12086  1229  0141               	movwf	(floorf@u+3)^080h
 12087  122A  00A9               	movlw	low highword(0)
 12088  122B  3000               	movwf	(floorf@u+2)^080h
 12089  122C  00A8               	movlw	high(0)
 12090  122D  3000               	movwf	(floorf@u+1)^080h
 12091  122E  00A7               	movlw	low(0)
 12092  122F  3000               	movwf	(floorf@u)^080h
 12093  1230  00A6               
 12094                           	goto	l1068
 12095  1231  2A5C               	line	23
 12096                           	
 12097                           l1069:	
 12098  1232                     	
 12099                           l3469:	
 12100  1232                     	movlb 1	; select bank1
 12101  1232  0141               	movf	(floorf@u)^080h,w
 12102  1233  0826               	movlb 0	; select bank0
 12103  1234  0140               	movwf	(??_floorf+0)+0
 12104  1235  00E6               	movlb 1	; select bank1
 12105  1236  0141               	movf	(floorf@u+1)^080h,w
 12106  1237  0827               	movlb 0	; select bank0
 12107  1238  0140               	movwf	((??_floorf+0)+0+1)
 12108  1239  00E7               	movlb 1	; select bank1
 12109  123A  0141               	movf	(floorf@u+2)^080h,w
 12110  123B  0828               	movlb 0	; select bank0
 12111  123C  0140               	movwf	((??_floorf+0)+0+2)
 12112  123D  00E8               	movlb 1	; select bank1
 12113  123E  0141               	movf	(floorf@u+3)^080h,w
 12114  123F  0829               	movlb 0	; select bank0
 12115  1240  0140               	movwf	((??_floorf+0)+0+3)
 12116  1241  00E9               	movlw	01h
 12117  1242  3001               u4425:
 12118  1243                     	lslf	(??_floorf+0)+0,f
 12119  1243  35E6               	rlf	(??_floorf+0)+1,f
 12120  1244  0DE7               	rlf	(??_floorf+0)+2,f
 12121  1245  0DE8               	rlf	(??_floorf+0)+3,f
 12122  1246  0DE9               u4420:
 12123  1247                     	decfsz	wreg,f
 12124  1247  0B89               	goto	u4425
 12125  1248  2A43               	movf	3+(??_floorf+0)+0,w
 12126  1249  0869               	iorwf	2+(??_floorf+0)+0,w
 12127  124A  0468               	iorwf	1+(??_floorf+0)+0,w
 12128  124B  0467               	iorwf	0+(??_floorf+0)+0,w
 12129  124C  0466               	skipnz
 12130  124D  1903               	goto	u4431
 12131  124E  2A50               	goto	u4430
 12132  124F  2A51               u4431:
 12133  1250                     	goto	l1068
 12134  1250  2A5C               u4430:
 12135  1251                     	line	24
 12136                           	
 12137                           l3471:	
 12138  1251                     	movlw	0xbf
 12139  1251  30BF               	movlb 1	; select bank1
 12140  1252  0141               	movwf	(floorf@u+3)^080h
 12141  1253  00A9               	movlw	0x80
 12142  1254  3080               	movwf	(floorf@u+2)^080h
 12143  1255  00A8               	movlw	0x0
 12144  1256  3000               	movwf	(floorf@u+1)^080h
 12145  1257  00A7               	movlw	0x0
 12146  1258  3000               	movwf	(floorf@u)^080h
 12147  1259  00A6               
 12148                           	goto	l1068
 12149  125A  2A5C               	
 12150                           l1071:	
 12151  125B                     	goto	l1068
 12152  125B  2A5C               	
 12153                           l1070:	
 12154  125C                     	line	25
 12155                           	
 12156                           l1068:	
 12157  125C                     	line	26
 12158                           	movlb 1	; select bank1
 12159  125C  0141               	movf	(floorf@u+3)^080h,w
 12160  125D  0829               	movlb 0	; select bank0
 12161  125E  0140               	movwf	(?_floorf+3)
 12162  125F  00E5               	movlb 1	; select bank1
 12163  1260  0141               	movf	(floorf@u+2)^080h,w
 12164  1261  0828               	movlb 0	; select bank0
 12165  1262  0140               	movwf	(?_floorf+2)
 12166  1263  00E4               	movlb 1	; select bank1
 12167  1264  0141               	movf	(floorf@u+1)^080h,w
 12168  1265  0827               	movlb 0	; select bank0
 12169  1266  0140               	movwf	(?_floorf+1)
 12170  1267  00E3               	movlb 1	; select bank1
 12171  1268  0141               	movf	(floorf@u)^080h,w
 12172  1269  0826               	movlb 0	; select bank0
 12173  126A  0140               	movwf	(?_floorf)
 12174  126B  00E2               
 12175                           	goto	l1064
 12176  126C  2A6D               	
 12177                           l3473:	
 12178  126D                     	line	27
 12179                           	
 12180                           l1064:	
 12181  126D                     	return
 12182  126D  0008               	opt stack 0
 12183                           GLOBAL	__end_of_floorf
 12184                           	__end_of_floorf:
 12185  126E                     	signat	_floorf,4220
 12186                           	global	___fpclassifyf
 12187                           
 12188 ;; *************** function ___fpclassifyf *****************
 12189 ;; Defined at:
 12190 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__fpclassifyf.c"
 12191 ;; Parameters:    Size  Location     Type
 12192 ;;  x               4    0[BANK0 ] float 
 12193 ;; Auto vars:     Size  Location     Type
 12194 ;;  u               4   12[BANK0 ] struct .
 12195 ;;  e               2   10[BANK0 ] int 
 12196 ;; Return value:  Size  Location     Type
 12197 ;;                  2    0[BANK0 ] int 
 12198 ;; Registers used:
 12199 ;;		wreg, status,2, status,0
 12200 ;; Tracked objects:
 12201 ;;		On entry : 0/0
 12202 ;;		On exit  : 0/0
 12203 ;;		Unchanged: 0/0
 12204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12205 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12206 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12207 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12208 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12209 ;;Total ram usage:       16 bytes
 12210 ;; Hardware stack levels used:    1
 12211 ;; Hardware stack levels required when called:    3
 12212 ;; This function calls:
 12213 ;;		Nothing
 12214 ;; This function is called by:
 12215 ;;		_efgtoa
 12216 ;; This function uses a non-reentrant model
 12217 ;;
 12218                           psect	text20,local,class=CODE,delta=2,merge=1,group=2
 12219                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__fpclassifyf.c
                                 "
 12220                           	line	4
 12221                           global __ptext20
 12222                           __ptext20:	;psect for function ___fpclassifyf
 12223  19B5                     psect	text20
 12224                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__fpclassifyf.c
                                 "
 12225                           	line	4
 12226                           	global	__size_of___fpclassifyf
 12227                           	__size_of___fpclassifyf	equ	__end_of___fpclassifyf-___fpclassifyf
 12228  0083                     	
 12229                           ___fpclassifyf:	
 12230  19B5                     ;incstack = 0
 12231                           	opt	stack 7
 12232                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
 12233                           	line	6
 12234                           	
 12235                           l3407:	
 12236  19B5                     	movlb 4	; select bank4
 12237  19B5  0144               	movf	(___fpclassifyf@F453+3)^0200h,w
 12238  19B6  0827               	movlb 0	; select bank0
 12239  19B7  0140               	movwf	(___fpclassifyf@u+3)
 12240  19B8  00AF               	movlb 4	; select bank4
 12241  19B9  0144               	movf	(___fpclassifyf@F453+2)^0200h,w
 12242  19BA  0826               	movlb 0	; select bank0
 12243  19BB  0140               	movwf	(___fpclassifyf@u+2)
 12244  19BC  00AE               	movlb 4	; select bank4
 12245  19BD  0144               	movf	(___fpclassifyf@F453+1)^0200h,w
 12246  19BE  0825               	movlb 0	; select bank0
 12247  19BF  0140               	movwf	(___fpclassifyf@u+1)
 12248  19C0  00AD               	movlb 4	; select bank4
 12249  19C1  0144               	movf	(___fpclassifyf@F453)^0200h,w
 12250  19C2  0824               	movlb 0	; select bank0
 12251  19C3  0140               	movwf	(___fpclassifyf@u)
 12252  19C4  00AC               
 12253                           	movf	(___fpclassifyf@x+3),w
 12254  19C5  0823               	movwf	(___fpclassifyf@u+3)
 12255  19C6  00AF               	movf	(___fpclassifyf@x+2),w
 12256  19C7  0822               	movwf	(___fpclassifyf@u+2)
 12257  19C8  00AE               	movf	(___fpclassifyf@x+1),w
 12258  19C9  0821               	movwf	(___fpclassifyf@u+1)
 12259  19CA  00AD               	movf	(___fpclassifyf@x),w
 12260  19CB  0820               	movwf	(___fpclassifyf@u)
 12261  19CC  00AC               
 12262                           	line	7
 12263                           	
 12264                           l3409:	
 12265  19CD                     	movf	(___fpclassifyf@u),w
 12266  19CD  082C               	movwf	(??___fpclassifyf+0)+0
 12267  19CE  00A4               	movf	(___fpclassifyf@u+1),w
 12268  19CF  082D               	movwf	((??___fpclassifyf+0)+0+1)
 12269  19D0  00A5               	movf	(___fpclassifyf@u+2),w
 12270  19D1  082E               	movwf	((??___fpclassifyf+0)+0+2)
 12271  19D2  00A6               	movf	(___fpclassifyf@u+3),w
 12272  19D3  082F               	movwf	((??___fpclassifyf+0)+0+3)
 12273  19D4  00A7               	movlw	017h
 12274  19D5  3017               u4215:
 12275  19D6                     	lsrf	(??___fpclassifyf+0)+3,f
 12276  19D6  36A7               	rrf	(??___fpclassifyf+0)+2,f
 12277  19D7  0CA6               	rrf	(??___fpclassifyf+0)+1,f
 12278  19D8  0CA5               	rrf	(??___fpclassifyf+0)+0,f
 12279  19D9  0CA4               u4210:
 12280  19DA                     	decfsz	wreg,f
 12281  19DA  0B89               	goto	u4215
 12282  19DB  29D6               	movlw	0FFh
 12283  19DC  30FF               	andwf	0+(??___fpclassifyf+0)+0,w
 12284  19DD  0524               	movwf	(___fpclassifyf@e)
 12285  19DE  00AA               	movlw	0
 12286  19DF  3000               	andwf	1+(??___fpclassifyf+0)+0,w
 12287  19E0  0525               	movwf	1+(___fpclassifyf@e)
 12288  19E1  00AB               	line	8
 12289                           	
 12290                           l3411:	
 12291  19E2                     	movf	((___fpclassifyf@e)),w
 12292  19E2  082A               iorwf	((___fpclassifyf@e+1)),w
 12293  19E3  042B               	btfss	status,2
 12294  19E4  1D03               	goto	u4221
 12295  19E5  29E7               	goto	u4220
 12296  19E6  29E8               u4221:
 12297  19E7                     	goto	l3421
 12298  19E7  2A0B               u4220:
 12299  19E8                     	
 12300                           l3413:	
 12301  19E8                     	movf	(___fpclassifyf@u),w
 12302  19E8  082C               	movwf	(??___fpclassifyf+0)+0
 12303  19E9  00A4               	movf	(___fpclassifyf@u+1),w
 12304  19EA  082D               	movwf	((??___fpclassifyf+0)+0+1)
 12305  19EB  00A5               	movf	(___fpclassifyf@u+2),w
 12306  19EC  082E               	movwf	((??___fpclassifyf+0)+0+2)
 12307  19ED  00A6               	movf	(___fpclassifyf@u+3),w
 12308  19EE  082F               	movwf	((??___fpclassifyf+0)+0+3)
 12309  19EF  00A7               	movlw	01h
 12310  19F0  3001               u4235:
 12311  19F1                     	lslf	(??___fpclassifyf+0)+0,f
 12312  19F1  35A4               	rlf	(??___fpclassifyf+0)+1,f
 12313  19F2  0DA5               	rlf	(??___fpclassifyf+0)+2,f
 12314  19F3  0DA6               	rlf	(??___fpclassifyf+0)+3,f
 12315  19F4  0DA7               u4230:
 12316  19F5                     	decfsz	wreg,f
 12317  19F5  0B89               	goto	u4235
 12318  19F6  29F1               	movf	3+(??___fpclassifyf+0)+0,w
 12319  19F7  0827               	iorwf	2+(??___fpclassifyf+0)+0,w
 12320  19F8  0426               	iorwf	1+(??___fpclassifyf+0)+0,w
 12321  19F9  0425               	iorwf	0+(??___fpclassifyf+0)+0,w
 12322  19FA  0424               	skipz
 12323  19FB  1D03               	goto	u4241
 12324  19FC  29FE               	goto	u4240
 12325  19FD  29FF               u4241:
 12326  19FE                     	goto	l3417
 12327  19FE  2A04               u4240:
 12328  19FF                     	
 12329                           l3415:	
 12330  19FF                     	movlw	02h
 12331  19FF  3002               	movwf	(?___fpclassifyf)
 12332  1A00  00A0               	movlw	0
 12333  1A01  3000               	movwf	((?___fpclassifyf))+1
 12334  1A02  00A1               	goto	l1026
 12335  1A03  2A37               	
 12336                           l1023:	
 12337  1A04                     	
 12338                           l3417:	
 12339  1A04                     	movlw	03h
 12340  1A04  3003               	movwf	(?___fpclassifyf)
 12341  1A05  00A0               	movlw	0
 12342  1A06  3000               	movwf	((?___fpclassifyf))+1
 12343  1A07  00A1               	goto	l1026
 12344  1A08  2A37               	
 12345                           l1025:	
 12346  1A09                     	goto	l1026
 12347  1A09  2A37               	
 12348                           l3419:	
 12349  1A0A                     	goto	l1026
 12350  1A0A  2A37               	
 12351                           l1021:	
 12352  1A0B                     	line	9
 12353                           	
 12354                           l3421:	
 12355  1A0B                     		incf	((___fpclassifyf@e)),w
 12356  1A0B  0A2A               iorwf	((___fpclassifyf@e+1)),w
 12357  1A0C  042B               	btfss	status,2
 12358  1A0D  1D03               	goto	u4251
 12359  1A0E  2A10               	goto	u4250
 12360  1A0F  2A11               u4251:
 12361  1A10                     	goto	l3427
 12362  1A10  2A32               u4250:
 12363  1A11                     	
 12364                           l3423:	
 12365  1A11                     	movf	(___fpclassifyf@u),w
 12366  1A11  082C               	movwf	(??___fpclassifyf+0)+0
 12367  1A12  00A4               	movf	(___fpclassifyf@u+1),w
 12368  1A13  082D               	movwf	((??___fpclassifyf+0)+0+1)
 12369  1A14  00A5               	movf	(___fpclassifyf@u+2),w
 12370  1A15  082E               	movwf	((??___fpclassifyf+0)+0+2)
 12371  1A16  00A6               	movf	(___fpclassifyf@u+3),w
 12372  1A17  082F               	movwf	((??___fpclassifyf+0)+0+3)
 12373  1A18  00A7               	movlw	09h
 12374  1A19  3009               u4265:
 12375  1A1A                     	lslf	(??___fpclassifyf+0)+0,f
 12376  1A1A  35A4               	rlf	(??___fpclassifyf+0)+1,f
 12377  1A1B  0DA5               	rlf	(??___fpclassifyf+0)+2,f
 12378  1A1C  0DA6               	rlf	(??___fpclassifyf+0)+3,f
 12379  1A1D  0DA7               u4260:
 12380  1A1E                     	decfsz	wreg,f
 12381  1A1E  0B89               	goto	u4265
 12382  1A1F  2A1A               	movf	3+(??___fpclassifyf+0)+0,w
 12383  1A20  0827               	iorwf	2+(??___fpclassifyf+0)+0,w
 12384  1A21  0426               	iorwf	1+(??___fpclassifyf+0)+0,w
 12385  1A22  0425               	iorwf	0+(??___fpclassifyf+0)+0,w
 12386  1A23  0424               	skipnz
 12387  1A24  1903               	goto	u4271
 12388  1A25  2A27               	goto	u4270
 12389  1A26  2A29               u4271:
 12390  1A27                     	movlw	1
 12391  1A27  3001               	goto	u4280
 12392  1A28  2A2A               u4270:
 12393  1A29                     	movlw	0
 12394  1A29  3000               u4280:
 12395  1A2A                     	movwf	(??___fpclassifyf+4)+0
 12396  1A2A  00A8               	clrf	(??___fpclassifyf+4)+0+1
 12397  1A2B  01A9               	movf	0+(??___fpclassifyf+4)+0,w
 12398  1A2C  0828               	movwf	(?___fpclassifyf)
 12399  1A2D  00A0               	movf	1+(??___fpclassifyf+4)+0,w
 12400  1A2E  0829               	movwf	(?___fpclassifyf+1)
 12401  1A2F  00A1               	goto	l1026
 12402  1A30  2A37               	
 12403                           l3425:	
 12404  1A31                     	goto	l1026
 12405  1A31  2A37               	
 12406                           l1027:	
 12407  1A32                     	line	10
 12408                           	
 12409                           l3427:	
 12410  1A32                     	movlw	04h
 12411  1A32  3004               	movwf	(?___fpclassifyf)
 12412  1A33  00A0               	movlw	0
 12413  1A34  3000               	movwf	((?___fpclassifyf))+1
 12414  1A35  00A1               	goto	l1026
 12415  1A36  2A37               	
 12416                           l3429:	
 12417  1A37                     	line	11
 12418                           	
 12419                           l1026:	
 12420  1A37                     	return
 12421  1A37  0008               	opt stack 0
 12422                           GLOBAL	__end_of___fpclassifyf
 12423                           	__end_of___fpclassifyf:
 12424  1A38                     	signat	___fpclassifyf,4218
 12425                           	global	___fltol
 12426                           
 12427 ;; *************** function ___fltol *****************
 12428 ;; Defined at:
 12429 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
 12430 ;; Parameters:    Size  Location     Type
 12431 ;;  f1              4    0[BANK0 ] int 
 12432 ;; Auto vars:     Size  Location     Type
 12433 ;;  exp1            1   10[BANK0 ] unsigned char 
 12434 ;;  sign1           1    9[BANK0 ] unsigned char 
 12435 ;; Return value:  Size  Location     Type
 12436 ;;                  4    0[BANK0 ] long 
 12437 ;; Registers used:
 12438 ;;		wreg, status,2, status,0
 12439 ;; Tracked objects:
 12440 ;;		On entry : 0/0
 12441 ;;		On exit  : 0/0
 12442 ;;		Unchanged: 0/0
 12443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12444 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12445 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12446 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12447 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12448 ;;Total ram usage:       11 bytes
 12449 ;; Hardware stack levels used:    1
 12450 ;; Hardware stack levels required when called:    3
 12451 ;; This function calls:
 12452 ;;		Nothing
 12453 ;; This function is called by:
 12454 ;;		_efgtoa
 12455 ;; This function uses a non-reentrant model
 12456 ;;
 12457                           psect	text21,local,class=CODE,delta=2,merge=1,group=1
 12458                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
 12459                           	line	43
 12460                           global __ptext21
 12461                           __ptext21:	;psect for function ___fltol
 12462  1AC3                     psect	text21
 12463                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
 12464                           	line	43
 12465                           	global	__size_of___fltol
 12466                           	__size_of___fltol	equ	__end_of___fltol-___fltol
 12467  0095                     	
 12468                           ___fltol:	
 12469  1AC3                     ;incstack = 0
 12470                           	opt	stack 7
 12471                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 12472                           	line	47
 12473                           	
 12474                           l3621:	
 12475  1AC3                     	movlb 0	; select bank0
 12476  1AC3  0140               	movf	(___fltol@f1),w
 12477  1AC4  0820               	movwf	(??___fltol+0)+0
 12478  1AC5  00A4               	movf	(___fltol@f1+1),w
 12479  1AC6  0821               	movwf	((??___fltol+0)+0+1)
 12480  1AC7  00A5               	movf	(___fltol@f1+2),w
 12481  1AC8  0822               	movwf	((??___fltol+0)+0+2)
 12482  1AC9  00A6               	movf	(___fltol@f1+3),w
 12483  1ACA  0823               	movwf	((??___fltol+0)+0+3)
 12484  1ACB  00A7               	clrc
 12485  1ACC  1003               	rlf	(??___fltol+0)+2,w
 12486  1ACD  0D26               	rlf	(??___fltol+0)+3,w
 12487  1ACE  0D27               	movwf	(??___fltol+4)+0
 12488  1ACF  00A8               	movf	(??___fltol+4)+0,w
 12489  1AD0  0828               	movwf	(___fltol@exp1)
 12490  1AD1  00AA               	movf	(((___fltol@exp1))),w
 12491  1AD2  082A               	btfss	status,2
 12492  1AD3  1D03               	goto	u4781
 12493  1AD4  2AD6               	goto	u4780
 12494  1AD5  2AD7               u4781:
 12495  1AD6                     	goto	l3627
 12496  1AD6  2AE1               u4780:
 12497  1AD7                     	line	48
 12498                           	
 12499                           l3623:	
 12500  1AD7                     	movlw	high highword(0)
 12501  1AD7  3000               	movwf	(?___fltol+3)
 12502  1AD8  00A3               	movlw	low highword(0)
 12503  1AD9  3000               	movwf	(?___fltol+2)
 12504  1ADA  00A2               	movlw	high(0)
 12505  1ADB  3000               	movwf	(?___fltol+1)
 12506  1ADC  00A1               	movlw	low(0)
 12507  1ADD  3000               	movwf	(?___fltol)
 12508  1ADE  00A0               
 12509                           	goto	l779
 12510  1ADF  2B57               	
 12511                           l3625:	
 12512  1AE0                     	goto	l779
 12513  1AE0  2B57               	
 12514                           l778:	
 12515  1AE1                     	line	49
 12516                           	
 12517                           l3627:	
 12518  1AE1                     	movf	(___fltol@f1),w
 12519  1AE1  0820               	movwf	(??___fltol+0)+0
 12520  1AE2  00A4               	movf	(___fltol@f1+1),w
 12521  1AE3  0821               	movwf	((??___fltol+0)+0+1)
 12522  1AE4  00A5               	movf	(___fltol@f1+2),w
 12523  1AE5  0822               	movwf	((??___fltol+0)+0+2)
 12524  1AE6  00A6               	movf	(___fltol@f1+3),w
 12525  1AE7  0823               	movwf	((??___fltol+0)+0+3)
 12526  1AE8  00A7               	movlw	01Fh
 12527  1AE9  301F               u4795:
 12528  1AEA                     	lsrf	(??___fltol+0)+3,f
 12529  1AEA  36A7               	rrf	(??___fltol+0)+2,f
 12530  1AEB  0CA6               	rrf	(??___fltol+0)+1,f
 12531  1AEC  0CA5               	rrf	(??___fltol+0)+0,f
 12532  1AED  0CA4               u4790:
 12533  1AEE                     	decfsz	wreg,f
 12534  1AEE  0B89               	goto	u4795
 12535  1AEF  2AEA               	movf	0+(??___fltol+0)+0,w
 12536  1AF0  0824               	movwf	(??___fltol+4)+0
 12537  1AF1  00A8               	movf	(??___fltol+4)+0,w
 12538  1AF2  0828               	movwf	(___fltol@sign1)
 12539  1AF3  00A9               	line	50
 12540                           	
 12541                           l3629:	
 12542  1AF4                     	bsf	(___fltol@f1)+(23/8),(23)&7
 12543  1AF4  17A2               	line	51
 12544                           	
 12545                           l3631:	
 12546  1AF5                     	movlw	0FFh
 12547  1AF5  30FF               	andwf	(___fltol@f1),f
 12548  1AF6  05A0               	movlw	0FFh
 12549  1AF7  30FF               	andwf	(___fltol@f1+1),f
 12550  1AF8  05A1               	movlw	0FFh
 12551  1AF9  30FF               	andwf	(___fltol@f1+2),f
 12552  1AFA  05A2               	movlw	0
 12553  1AFB  3000               	andwf	(___fltol@f1+3),f
 12554  1AFC  05A3               	line	52
 12555                           	
 12556                           l3633:	
 12557  1AFD                     	movlw	096h
 12558  1AFD  3096               	subwf	(___fltol@exp1),f
 12559  1AFE  02AA               	line	53
 12560                           	
 12561                           l3635:	
 12562  1AFF                     	btfss	(___fltol@exp1),7
 12563  1AFF  1FAA               	goto	u4801
 12564  1B00  2B02               	goto	u4800
 12565  1B01  2B03               u4801:
 12566  1B02                     	goto	l3645
 12567  1B02  2B26               u4800:
 12568  1B03                     	line	54
 12569                           	
 12570                           l3637:	
 12571  1B03                     	movf	(___fltol@exp1),w
 12572  1B03  082A               	xorlw	80h
 12573  1B04  3A80               	addlw	-((-23)^80h)
 12574  1B05  3E97               	skipnc
 12575  1B06  1803               	goto	u4811
 12576  1B07  2B09               	goto	u4810
 12577  1B08  2B0A               u4811:
 12578  1B09                     	goto	l3643
 12579  1B09  2B15               u4810:
 12580  1B0A                     	line	55
 12581                           	
 12582                           l3639:	
 12583  1B0A                     	movlw	high highword(0)
 12584  1B0A  3000               	movwf	(?___fltol+3)
 12585  1B0B  00A3               	movlw	low highword(0)
 12586  1B0C  3000               	movwf	(?___fltol+2)
 12587  1B0D  00A2               	movlw	high(0)
 12588  1B0E  3000               	movwf	(?___fltol+1)
 12589  1B0F  00A1               	movlw	low(0)
 12590  1B10  3000               	movwf	(?___fltol)
 12591  1B11  00A0               
 12592                           	goto	l779
 12593  1B12  2B57               	
 12594                           l3641:	
 12595  1B13                     	goto	l779
 12596  1B13  2B57               	
 12597                           l781:	
 12598  1B14                     	goto	l3643
 12599  1B14  2B15               	line	56
 12600                           	
 12601                           l782:	
 12602  1B15                     	line	57
 12603                           	
 12604                           l3643:	
 12605  1B15                     	movlw	01h
 12606  1B15  3001               u4825:
 12607  1B16                     	lsrf	(___fltol@f1+3),f
 12608  1B16  36A3               	rrf	(___fltol@f1+2),f
 12609  1B17  0CA2               	rrf	(___fltol@f1+1),f
 12610  1B18  0CA1               	rrf	(___fltol@f1),f
 12611  1B19  0CA0               	decfsz	wreg,f
 12612  1B1A  0B89               	goto	u4825
 12613  1B1B  2B16               
 12614                           	movlw	low(01h)
 12615  1B1C  3001               	movwf	(??___fltol+0)+0
 12616  1B1D  00A4               	movf	(??___fltol+0)+0,w
 12617  1B1E  0824               	addwf	(___fltol@exp1),f
 12618  1B1F  07AA               	btfss	status,2
 12619  1B20  1D03               	goto	u4831
 12620  1B21  2B23               	goto	u4830
 12621  1B22  2B24               u4831:
 12622  1B23                     	goto	l3643
 12623  1B23  2B15               u4830:
 12624  1B24                     	goto	l3653
 12625  1B24  2B47               	
 12626                           l783:	
 12627  1B25                     	line	59
 12628                           	goto	l3653
 12629  1B25  2B47               	
 12630                           l780:	
 12631  1B26                     	line	60
 12632                           	
 12633                           l3645:	
 12634  1B26                     	movlw	low(020h)
 12635  1B26  3020               	subwf	(___fltol@exp1),w
 12636  1B27  022A               	skipc
 12637  1B28  1C03               	goto	u4841
 12638  1B29  2B2B               	goto	u4840
 12639  1B2A  2B2C               u4841:
 12640  1B2B                     	goto	l786
 12641  1B2B  2B40               u4840:
 12642  1B2C                     	line	61
 12643                           	
 12644                           l3647:	
 12645  1B2C                     	movlw	high highword(0)
 12646  1B2C  3000               	movwf	(?___fltol+3)
 12647  1B2D  00A3               	movlw	low highword(0)
 12648  1B2E  3000               	movwf	(?___fltol+2)
 12649  1B2F  00A2               	movlw	high(0)
 12650  1B30  3000               	movwf	(?___fltol+1)
 12651  1B31  00A1               	movlw	low(0)
 12652  1B32  3000               	movwf	(?___fltol)
 12653  1B33  00A0               
 12654                           	goto	l779
 12655  1B34  2B57               	
 12656                           l3649:	
 12657  1B35                     	goto	l779
 12658  1B35  2B57               	
 12659                           l785:	
 12660  1B36                     	line	62
 12661                           	goto	l786
 12662  1B36  2B40               	
 12663                           l787:	
 12664  1B37                     	line	63
 12665                           	
 12666                           l3651:	
 12667  1B37                     	movlw	01h
 12668  1B37  3001               u4855:
 12669  1B38                     	lslf	(___fltol@f1),f
 12670  1B38  35A0               	rlf	(___fltol@f1+1),f
 12671  1B39  0DA1               	rlf	(___fltol@f1+2),f
 12672  1B3A  0DA2               	rlf	(___fltol@f1+3),f
 12673  1B3B  0DA3               	decfsz	wreg,f
 12674  1B3C  0B89               	goto	u4855
 12675  1B3D  2B38               	line	64
 12676                           	movlw	01h
 12677  1B3E  3001               	subwf	(___fltol@exp1),f
 12678  1B3F  02AA               	line	65
 12679                           	
 12680                           l786:	
 12681  1B40                     	line	62
 12682                           	movf	((___fltol@exp1)),w
 12683  1B40  082A               	btfss	status,2
 12684  1B41  1D03               	goto	u4861
 12685  1B42  2B44               	goto	u4860
 12686  1B43  2B45               u4861:
 12687  1B44                     	goto	l3651
 12688  1B44  2B37               u4860:
 12689  1B45                     	goto	l3653
 12690  1B45  2B47               	
 12691                           l788:	
 12692  1B46                     	goto	l3653
 12693  1B46  2B47               	line	66
 12694                           	
 12695                           l784:	
 12696  1B47                     	line	67
 12697                           	
 12698                           l3653:	
 12699  1B47                     	movf	((___fltol@sign1)),w
 12700  1B47  0829               	btfsc	status,2
 12701  1B48  1903               	goto	u4871
 12702  1B49  2B4B               	goto	u4870
 12703  1B4A  2B4C               u4871:
 12704  1B4B                     	goto	l789
 12705  1B4B  2B57               u4870:
 12706  1B4C                     	line	68
 12707                           	
 12708                           l3655:	
 12709  1B4C                     	comf	(___fltol@f1),f
 12710  1B4C  09A0               	comf	(___fltol@f1+1),f
 12711  1B4D  09A1               	comf	(___fltol@f1+2),f
 12712  1B4E  09A2               	comf	(___fltol@f1+3),f
 12713  1B4F  09A3               	incf	(___fltol@f1),f
 12714  1B50  0AA0               	skipnz
 12715  1B51  1903               	incf	(___fltol@f1+1),f
 12716  1B52  0AA1               	skipnz
 12717  1B53  1903               	incf	(___fltol@f1+2),f
 12718  1B54  0AA2               	skipnz
 12719  1B55  1903               	incf	(___fltol@f1+3),f
 12720  1B56  0AA3               	
 12721                           l789:	
 12722  1B57                     	line	69
 12723                           	line	70
 12724                           	
 12725                           l779:	
 12726  1B57                     	return
 12727  1B57  0008               	opt stack 0
 12728                           GLOBAL	__end_of___fltol
 12729                           	__end_of___fltol:
 12730  1B58                     	signat	___fltol,4220
 12731                           	global	___flsub
 12732                           
 12733 ;; *************** function ___flsub *****************
 12734 ;; Defined at:
 12735 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
 12736 ;; Parameters:    Size  Location     Type
 12737 ;;  a               4   64[BANK0 ] long 
 12738 ;;  b               4   68[BANK0 ] long 
 12739 ;; Auto vars:     Size  Location     Type
 12740 ;;		None
 12741 ;; Return value:  Size  Location     Type
 12742 ;;                  4   64[BANK0 ] long 
 12743 ;; Registers used:
 12744 ;;		wreg, status,2, status,0, pclath, cstack
 12745 ;; Tracked objects:
 12746 ;;		On entry : 0/0
 12747 ;;		On exit  : 0/0
 12748 ;;		Unchanged: 0/0
 12749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12750 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12753 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12754 ;;Total ram usage:        8 bytes
 12755 ;; Hardware stack levels used:    1
 12756 ;; Hardware stack levels required when called:    4
 12757 ;; This function calls:
 12758 ;;		___fladd
 12759 ;; This function is called by:
 12760 ;;		_efgtoa
 12761 ;; This function uses a non-reentrant model
 12762 ;;
 12763                           psect	text22,local,class=CODE,delta=2,merge=1,group=1
 12764                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
 12765                           	line	242
 12766                           global __ptext22
 12767                           __ptext22:	;psect for function ___flsub
 12768  220D                     psect	text22
 12769                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
 12770                           	line	242
 12771                           	global	__size_of___flsub
 12772                           	__size_of___flsub	equ	__end_of___flsub-___flsub
 12773  0021                     	
 12774                           ___flsub:	
 12775  220D                     ;incstack = 0
 12776                           	opt	stack 6
 12777                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 12778                           	line	248
 12779                           	
 12780                           l3657:	
 12781  220D                     	movlw	080h
 12782  220D  3080               	movlb 0	; select bank0
 12783  220E  0140               	xorwf	(___flsub@a+3),f
 12784  220F  06E3               	line	249
 12785                           	
 12786                           l3659:	
 12787  2210                     	movf	(___flsub@b+3),w
 12788  2210  0867               	movwf	(___fladd@b+3)
 12789  2211  00CB               	movf	(___flsub@b+2),w
 12790  2212  0866               	movwf	(___fladd@b+2)
 12791  2213  00CA               	movf	(___flsub@b+1),w
 12792  2214  0865               	movwf	(___fladd@b+1)
 12793  2215  00C9               	movf	(___flsub@b),w
 12794  2216  0864               	movwf	(___fladd@b)
 12795  2217  00C8               
 12796                           	movf	(___flsub@a+3),w
 12797  2218  0863               	movwf	(___fladd@a+3)
 12798  2219  00CF               	movf	(___flsub@a+2),w
 12799  221A  0862               	movwf	(___fladd@a+2)
 12800  221B  00CE               	movf	(___flsub@a+1),w
 12801  221C  0861               	movwf	(___fladd@a+1)
 12802  221D  00CD               	movf	(___flsub@a),w
 12803  221E  0860               	movwf	(___fladd@a)
 12804  221F  00CC               
 12805                           	fcall	___fladd
 12806  2220  3189  21B1  31A2   	movlb 0	; select bank0
 12807  2223  0140               	movf	(3+(?___fladd)),w
 12808  2224  084B               	movwf	(?___flsub+3)
 12809  2225  00E3               	movf	(2+(?___fladd)),w
 12810  2226  084A               	movwf	(?___flsub+2)
 12811  2227  00E2               	movf	(1+(?___fladd)),w
 12812  2228  0849               	movwf	(?___flsub+1)
 12813  2229  00E1               	movf	(0+(?___fladd)),w
 12814  222A  0848               	movwf	(?___flsub)
 12815  222B  00E0               
 12816                           	goto	l932
 12817  222C  2A2D               	
 12818                           l3661:	
 12819  222D                     	line	250
 12820                           	
 12821                           l932:	
 12822  222D                     	return
 12823  222D  0008               	opt stack 0
 12824                           GLOBAL	__end_of___flsub
 12825                           	__end_of___flsub:
 12826  222E                     	signat	___flsub,8316
 12827                           	global	___flneg
 12828                           
 12829 ;; *************** function ___flneg *****************
 12830 ;; Defined at:
 12831 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flneg.c"
 12832 ;; Parameters:    Size  Location     Type
 12833 ;;  f1              4    0[BANK0 ] long 
 12834 ;; Auto vars:     Size  Location     Type
 12835 ;;		None
 12836 ;; Return value:  Size  Location     Type
 12837 ;;                  4    0[BANK0 ] long 
 12838 ;; Registers used:
 12839 ;;		wreg
 12840 ;; Tracked objects:
 12841 ;;		On entry : 0/0
 12842 ;;		On exit  : 0/0
 12843 ;;		Unchanged: 0/0
 12844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12845 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12848 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12849 ;;Total ram usage:        4 bytes
 12850 ;; Hardware stack levels used:    1
 12851 ;; Hardware stack levels required when called:    3
 12852 ;; This function calls:
 12853 ;;		Nothing
 12854 ;; This function is called by:
 12855 ;;		_efgtoa
 12856 ;; This function uses a non-reentrant model
 12857 ;;
 12858                           psect	text23,local,class=CODE,delta=2,merge=1,group=1
 12859                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flneg.c"
 12860                           	line	15
 12861                           global __ptext23
 12862                           __ptext23:	;psect for function ___flneg
 12863  2196                     psect	text23
 12864                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flneg.c"
 12865                           	line	15
 12866                           	global	__size_of___flneg
 12867                           	__size_of___flneg	equ	__end_of___flneg-___flneg
 12868  000E                     	
 12869                           ___flneg:	
 12870  2196                     ;incstack = 0
 12871                           	opt	stack 7
 12872                           ; Regs used in ___flneg: [wreg]
 12873                           	line	17
 12874                           	
 12875                           l3613:	
 12876  2196                     	movlb 0	; select bank0
 12877  2196  0140               	movf	(___flneg@f1+3),w
 12878  2197  0823               	iorwf	(___flneg@f1+2),w
 12879  2198  0422               	iorwf	(___flneg@f1+1),w
 12880  2199  0421               	iorwf	(___flneg@f1),w
 12881  219A  0420               	skipnz
 12882  219B  1903               	goto	u4771
 12883  219C  299E               	goto	u4770
 12884  219D  299F               u4771:
 12885  219E                     	goto	l3617
 12886  219E  29A2               u4770:
 12887  219F                     	line	18
 12888                           	
 12889                           l3615:	
 12890  219F                     	movlw	080h
 12891  219F  3080               	xorwf	(___flneg@f1+3),f
 12892  21A0  06A3               	goto	l3617
 12893  21A1  29A2               	
 12894                           l774:	
 12895  21A2                     	line	19
 12896                           	
 12897                           l3617:	
 12898  21A2                     	goto	l775
 12899  21A2  29A3               	
 12900                           l3619:	
 12901  21A3                     	line	20
 12902                           	
 12903                           l775:	
 12904  21A3                     	return
 12905  21A3  0008               	opt stack 0
 12906                           GLOBAL	__end_of___flneg
 12907                           	__end_of___flneg:
 12908  21A4                     	signat	___flneg,4220
 12909                           	global	___fleq
 12910                           
 12911 ;; *************** function ___fleq *****************
 12912 ;; Defined at:
 12913 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fleq.c"
 12914 ;; Parameters:    Size  Location     Type
 12915 ;;  ff1             4    0[BANK0 ] long 
 12916 ;;  ff2             4    4[BANK0 ] long 
 12917 ;; Auto vars:     Size  Location     Type
 12918 ;;		None
 12919 ;; Return value:  Size  Location     Type
 12920 ;;		None               void
 12921 ;; Registers used:
 12922 ;;		wreg, status,2, status,0
 12923 ;; Tracked objects:
 12924 ;;		On entry : 0/0
 12925 ;;		On exit  : 0/0
 12926 ;;		Unchanged: 0/0
 12927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12928 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12930 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12931 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12932 ;;Total ram usage:       12 bytes
 12933 ;; Hardware stack levels used:    1
 12934 ;; Hardware stack levels required when called:    3
 12935 ;; This function calls:
 12936 ;;		Nothing
 12937 ;; This function is called by:
 12938 ;;		_efgtoa
 12939 ;; This function uses a non-reentrant model
 12940 ;;
 12941                           psect	text24,local,class=CODE,delta=2,merge=1,group=1
 12942                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fleq.c"
 12943                           	line	4
 12944                           global __ptext24
 12945                           __ptext24:	;psect for function ___fleq
 12946  25D7                     psect	text24
 12947                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fleq.c"
 12948                           	line	4
 12949                           	global	__size_of___fleq
 12950                           	__size_of___fleq	equ	__end_of___fleq-___fleq
 12951  0051                     	
 12952                           ___fleq:	
 12953  25D7                     ;incstack = 0
 12954                           	opt	stack 7
 12955                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 12956                           	line	7
 12957                           	
 12958                           l3575:	
 12959  25D7                     	movlw	0
 12960  25D7  3000               	movlb 0	; select bank0
 12961  25D8  0140               	andwf	(___fleq@ff1),w
 12962  25D9  0520               	movwf	(??___fleq+0)+0
 12963  25DA  00A8               	movlw	0
 12964  25DB  3000               	andwf	(___fleq@ff1+1),w
 12965  25DC  0521               	movwf	((??___fleq+0)+0+1)
 12966  25DD  00A9               	movlw	080h
 12967  25DE  3080               	andwf	(___fleq@ff1+2),w
 12968  25DF  0522               	movwf	((??___fleq+0)+0+2)
 12969  25E0  00AA               	movlw	07Fh
 12970  25E1  307F               	andwf	(___fleq@ff1+3),w
 12971  25E2  0523               	movwf	((??___fleq+0)+0+3)
 12972  25E3  00AB               	movf	3+(??___fleq+0)+0,w
 12973  25E4  082B               	iorwf	2+(??___fleq+0)+0,w
 12974  25E5  042A               	iorwf	1+(??___fleq+0)+0,w
 12975  25E6  0429               	iorwf	0+(??___fleq+0)+0,w
 12976  25E7  0428               	skipz
 12977  25E8  1D03               	goto	u4691
 12978  25E9  2DEB               	goto	u4690
 12979  25EA  2DEC               u4691:
 12980  25EB                     	goto	l754
 12981  25EB  2DF4               u4690:
 12982  25EC                     	line	8
 12983                           	
 12984                           l3577:	
 12985  25EC                     	movlw	high highword(0)
 12986  25EC  3000               	movwf	(___fleq@ff1+3)
 12987  25ED  00A3               	movlw	low highword(0)
 12988  25EE  3000               	movwf	(___fleq@ff1+2)
 12989  25EF  00A2               	movlw	high(0)
 12990  25F0  3000               	movwf	(___fleq@ff1+1)
 12991  25F1  00A1               	movlw	low(0)
 12992  25F2  3000               	movwf	(___fleq@ff1)
 12993  25F3  00A0               
 12994                           	
 12995                           l754:	
 12996  25F4                     	line	9
 12997                           	movlw	0
 12998  25F4  3000               	andwf	(___fleq@ff2),w
 12999  25F5  0524               	movwf	(??___fleq+0)+0
 13000  25F6  00A8               	movlw	0
 13001  25F7  3000               	andwf	(___fleq@ff2+1),w
 13002  25F8  0525               	movwf	((??___fleq+0)+0+1)
 13003  25F9  00A9               	movlw	080h
 13004  25FA  3080               	andwf	(___fleq@ff2+2),w
 13005  25FB  0526               	movwf	((??___fleq+0)+0+2)
 13006  25FC  00AA               	movlw	07Fh
 13007  25FD  307F               	andwf	(___fleq@ff2+3),w
 13008  25FE  0527               	movwf	((??___fleq+0)+0+3)
 13009  25FF  00AB               	movf	3+(??___fleq+0)+0,w
 13010  2600  082B               	iorwf	2+(??___fleq+0)+0,w
 13011  2601  042A               	iorwf	1+(??___fleq+0)+0,w
 13012  2602  0429               	iorwf	0+(??___fleq+0)+0,w
 13013  2603  0428               	skipz
 13014  2604  1D03               	goto	u4701
 13015  2605  2E07               	goto	u4700
 13016  2606  2E08               u4701:
 13017  2607                     	goto	l755
 13018  2607  2E10               u4700:
 13019  2608                     	line	10
 13020                           	
 13021                           l3579:	
 13022  2608                     	movlw	high highword(0)
 13023  2608  3000               	movwf	(___fleq@ff2+3)
 13024  2609  00A7               	movlw	low highword(0)
 13025  260A  3000               	movwf	(___fleq@ff2+2)
 13026  260B  00A6               	movlw	high(0)
 13027  260C  3000               	movwf	(___fleq@ff2+1)
 13028  260D  00A5               	movlw	low(0)
 13029  260E  3000               	movwf	(___fleq@ff2)
 13030  260F  00A4               
 13031                           	
 13032                           l755:	
 13033  2610                     	line	11
 13034                           	movf	(___fleq@ff2+3),w
 13035  2610  0827               	xorwf	(___fleq@ff1+3),w
 13036  2611  0623               	skipz
 13037  2612  1D03               	goto	u4715
 13038  2613  2E1E               	movf	(___fleq@ff2+2),w
 13039  2614  0826               	xorwf	(___fleq@ff1+2),w
 13040  2615  0622               	skipz
 13041  2616  1D03               	goto	u4715
 13042  2617  2E1E               	movf	(___fleq@ff2+1),w
 13043  2618  0825               	xorwf	(___fleq@ff1+1),w
 13044  2619  0621               	skipz
 13045  261A  1D03               	goto	u4715
 13046  261B  2E1E               	movf	(___fleq@ff2),w
 13047  261C  0824               	xorwf	(___fleq@ff1),w
 13048  261D  0620               u4715:
 13049  261E                     	skipnz
 13050  261E  1903               	goto	u4711
 13051  261F  2E21               	goto	u4710
 13052  2620  2E22               u4711:
 13053  2621                     	goto	l3583
 13054  2621  2E24               u4710:
 13055  2622                     	
 13056                           l3581:	
 13057  2622                     	clrc
 13058  2622  1003               	
 13059                           	goto	l760
 13060  2623  2E27               	
 13061                           l757:	
 13062  2624                     	
 13063                           l3583:	
 13064  2624                     	setc
 13065  2624  1403               	
 13066                           	goto	l760
 13067  2625  2E27               	
 13068                           l759:	
 13069  2626                     	goto	l760
 13070  2626  2E27               	
 13071                           l3585:	
 13072  2627                     	line	12
 13073                           	
 13074                           l760:	
 13075  2627                     	return
 13076  2627  0008               	opt stack 0
 13077                           GLOBAL	__end_of___fleq
 13078                           	__end_of___fleq:
 13079  2628                     	signat	___fleq,8312
 13080                           	global	___awmod
 13081                           
 13082 ;; *************** function ___awmod *****************
 13083 ;; Defined at:
 13084 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 13085 ;; Parameters:    Size  Location     Type
 13086 ;;  divisor         2    0[BANK0 ] int 
 13087 ;;  dividend        2    2[BANK0 ] int 
 13088 ;; Auto vars:     Size  Location     Type
 13089 ;;  sign            1    6[BANK0 ] unsigned char 
 13090 ;;  counter         1    5[BANK0 ] unsigned char 
 13091 ;; Return value:  Size  Location     Type
 13092 ;;                  2    0[BANK0 ] int 
 13093 ;; Registers used:
 13094 ;;		wreg, status,2, status,0
 13095 ;; Tracked objects:
 13096 ;;		On entry : 0/0
 13097 ;;		On exit  : 0/0
 13098 ;;		Unchanged: 0/0
 13099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13100 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13101 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13102 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13103 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13104 ;;Total ram usage:        7 bytes
 13105 ;; Hardware stack levels used:    1
 13106 ;; Hardware stack levels required when called:    3
 13107 ;; This function calls:
 13108 ;;		Nothing
 13109 ;; This function is called by:
 13110 ;;		_efgtoa
 13111 ;; This function uses a non-reentrant model
 13112 ;;
 13113                           psect	text25,local,class=CODE,delta=2,merge=1,group=1
 13114                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 13115                           	line	5
 13116                           global __ptext25
 13117                           __ptext25:	;psect for function ___awmod
 13118  267A                     psect	text25
 13119                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 13120                           	line	5
 13121                           	global	__size_of___awmod
 13122                           	__size_of___awmod	equ	__end_of___awmod-___awmod
 13123  005E                     	
 13124                           ___awmod:	
 13125  267A                     ;incstack = 0
 13126                           	opt	stack 7
 13127                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 13128                           	line	12
 13129                           	
 13130                           l3537:	
 13131  267A                     	movlb 0	; select bank0
 13132  267A  0140               	clrf	(___awmod@sign)
 13133  267B  01A6               	line	13
 13134                           	
 13135                           l3539:	
 13136  267C                     	btfss	(___awmod@dividend+1),7
 13137  267C  1FA3               	goto	u4601
 13138  267D  2E7F               	goto	u4600
 13139  267E  2E80               u4601:
 13140  267F                     	goto	l3545
 13141  267F  2E88               u4600:
 13142  2680                     	line	14
 13143                           	
 13144                           l3541:	
 13145  2680                     	comf	(___awmod@dividend),f
 13146  2680  09A2               	comf	(___awmod@dividend+1),f
 13147  2681  09A3               	incf	(___awmod@dividend),f
 13148  2682  0AA2               	skipnz
 13149  2683  1903               	incf	(___awmod@dividend+1),f
 13150  2684  0AA3               	line	15
 13151                           	
 13152                           l3543:	
 13153  2685                     	clrf	(___awmod@sign)
 13154  2685  01A6               	incf	(___awmod@sign),f
 13155  2686  0AA6               	goto	l3545
 13156  2687  2E88               	line	16
 13157                           	
 13158                           l741:	
 13159  2688                     	line	17
 13160                           	
 13161                           l3545:	
 13162  2688                     	btfss	(___awmod@divisor+1),7
 13163  2688  1FA1               	goto	u4611
 13164  2689  2E8B               	goto	u4610
 13165  268A  2E8C               u4611:
 13166  268B                     	goto	l3549
 13167  268B  2E92               u4610:
 13168  268C                     	line	18
 13169                           	
 13170                           l3547:	
 13171  268C                     	comf	(___awmod@divisor),f
 13172  268C  09A0               	comf	(___awmod@divisor+1),f
 13173  268D  09A1               	incf	(___awmod@divisor),f
 13174  268E  0AA0               	skipnz
 13175  268F  1903               	incf	(___awmod@divisor+1),f
 13176  2690  0AA1               	goto	l3549
 13177  2691  2E92               	
 13178                           l742:	
 13179  2692                     	line	19
 13180                           	
 13181                           l3549:	
 13182  2692                     	movf	((___awmod@divisor)),w
 13183  2692  0820               iorwf	((___awmod@divisor+1)),w
 13184  2693  0421               	btfsc	status,2
 13185  2694  1903               	goto	u4621
 13186  2695  2E97               	goto	u4620
 13187  2696  2E98               u4621:
 13188  2697                     	goto	l3567
 13189  2697  2EC7               u4620:
 13190  2698                     	line	20
 13191                           	
 13192                           l3551:	
 13193  2698                     	clrf	(___awmod@counter)
 13194  2698  01A5               	incf	(___awmod@counter),f
 13195  2699  0AA5               	line	21
 13196                           	goto	l3557
 13197  269A  2EA5               	
 13198                           l745:	
 13199  269B                     	line	22
 13200                           	
 13201                           l3553:	
 13202  269B                     	movlw	01h
 13203  269B  3001               	
 13204                           u4635:
 13205  269C                     	lslf	(___awmod@divisor),f
 13206  269C  35A0               	rlf	(___awmod@divisor+1),f
 13207  269D  0DA1               	decfsz	wreg,f
 13208  269E  0B89               	goto	u4635
 13209  269F  2E9C               	line	23
 13210                           	
 13211                           l3555:	
 13212  26A0                     	movlw	low(01h)
 13213  26A0  3001               	movwf	(??___awmod+0)+0
 13214  26A1  00A4               	movf	(??___awmod+0)+0,w
 13215  26A2  0824               	addwf	(___awmod@counter),f
 13216  26A3  07A5               	goto	l3557
 13217  26A4  2EA5               	line	24
 13218                           	
 13219                           l744:	
 13220  26A5                     	line	21
 13221                           	
 13222                           l3557:	
 13223  26A5                     	btfss	(___awmod@divisor+1),(15)&7
 13224  26A5  1FA1               	goto	u4641
 13225  26A6  2EA8               	goto	u4640
 13226  26A7  2EA9               u4641:
 13227  26A8                     	goto	l3553
 13228  26A8  2E9B               u4640:
 13229  26A9                     	goto	l3559
 13230  26A9  2EAB               	
 13231                           l746:	
 13232  26AA                     	goto	l3559
 13233  26AA  2EAB               	line	25
 13234                           	
 13235                           l747:	
 13236  26AB                     	line	26
 13237                           	
 13238                           l3559:	
 13239  26AB                     	movf	(___awmod@divisor+1),w
 13240  26AB  0821               	subwf	(___awmod@dividend+1),w
 13241  26AC  0223               	skipz
 13242  26AD  1D03               	goto	u4655
 13243  26AE  2EB1               	movf	(___awmod@divisor),w
 13244  26AF  0820               	subwf	(___awmod@dividend),w
 13245  26B0  0222               u4655:
 13246  26B1                     	skipc
 13247  26B1  1C03               	goto	u4651
 13248  26B2  2EB4               	goto	u4650
 13249  26B3  2EB5               u4651:
 13250  26B4                     	goto	l3563
 13251  26B4  2EBA               u4650:
 13252  26B5                     	line	27
 13253                           	
 13254                           l3561:	
 13255  26B5                     	movf	(___awmod@divisor),w
 13256  26B5  0820               	subwf	(___awmod@dividend),f
 13257  26B6  02A2               	movf	(___awmod@divisor+1),w
 13258  26B7  0821               	subwfb	(___awmod@dividend+1),f
 13259  26B8  3BA3               	goto	l3563
 13260  26B9  2EBA               	
 13261                           l748:	
 13262  26BA                     	line	28
 13263                           	
 13264                           l3563:	
 13265  26BA                     	movlw	01h
 13266  26BA  3001               	
 13267                           u4665:
 13268  26BB                     	lsrf	(___awmod@divisor+1),f
 13269  26BB  36A1               	rrf	(___awmod@divisor),f
 13270  26BC  0CA0               	decfsz	wreg,f
 13271  26BD  0B89               	goto	u4665
 13272  26BE  2EBB               	line	29
 13273                           	
 13274                           l3565:	
 13275  26BF                     	movlw	01h
 13276  26BF  3001               	subwf	(___awmod@counter),f
 13277  26C0  02A5               	btfss	status,2
 13278  26C1  1D03               	goto	u4671
 13279  26C2  2EC4               	goto	u4670
 13280  26C3  2EC5               u4671:
 13281  26C4                     	goto	l3559
 13282  26C4  2EAB               u4670:
 13283  26C5                     	goto	l3567
 13284  26C5  2EC7               	
 13285                           l749:	
 13286  26C6                     	goto	l3567
 13287  26C6  2EC7               	line	30
 13288                           	
 13289                           l743:	
 13290  26C7                     	line	31
 13291                           	
 13292                           l3567:	
 13293  26C7                     	movf	((___awmod@sign)),w
 13294  26C7  0826               	btfsc	status,2
 13295  26C8  1903               	goto	u4681
 13296  26C9  2ECB               	goto	u4680
 13297  26CA  2ECC               u4681:
 13298  26CB                     	goto	l3571
 13299  26CB  2ED2               u4680:
 13300  26CC                     	line	32
 13301                           	
 13302                           l3569:	
 13303  26CC                     	comf	(___awmod@dividend),f
 13304  26CC  09A2               	comf	(___awmod@dividend+1),f
 13305  26CD  09A3               	incf	(___awmod@dividend),f
 13306  26CE  0AA2               	skipnz
 13307  26CF  1903               	incf	(___awmod@dividend+1),f
 13308  26D0  0AA3               	goto	l3571
 13309  26D1  2ED2               	
 13310                           l750:	
 13311  26D2                     	line	33
 13312                           	
 13313                           l3571:	
 13314  26D2                     	movf	(___awmod@dividend+1),w
 13315  26D2  0823               	movwf	(?___awmod+1)
 13316  26D3  00A1               	movf	(___awmod@dividend),w
 13317  26D4  0822               	movwf	(?___awmod)
 13318  26D5  00A0               	goto	l751
 13319  26D6  2ED7               	
 13320                           l3573:	
 13321  26D7                     	line	34
 13322                           	
 13323                           l751:	
 13324  26D7                     	return
 13325  26D7  0008               	opt stack 0
 13326                           GLOBAL	__end_of___awmod
 13327                           	__end_of___awmod:
 13328  26D8                     	signat	___awmod,8314
 13329                           	global	___awdiv
 13330                           
 13331 ;; *************** function ___awdiv *****************
 13332 ;; Defined at:
 13333 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 13334 ;; Parameters:    Size  Location     Type
 13335 ;;  divisor         2    0[BANK0 ] int 
 13336 ;;  dividend        2    2[BANK0 ] int 
 13337 ;; Auto vars:     Size  Location     Type
 13338 ;;  quotient        2    7[BANK0 ] int 
 13339 ;;  sign            1    6[BANK0 ] unsigned char 
 13340 ;;  counter         1    5[BANK0 ] unsigned char 
 13341 ;; Return value:  Size  Location     Type
 13342 ;;                  2    0[BANK0 ] int 
 13343 ;; Registers used:
 13344 ;;		wreg, status,2, status,0
 13345 ;; Tracked objects:
 13346 ;;		On entry : 0/0
 13347 ;;		On exit  : 0/0
 13348 ;;		Unchanged: 0/0
 13349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13350 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13351 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13352 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13353 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13354 ;;Total ram usage:        9 bytes
 13355 ;; Hardware stack levels used:    1
 13356 ;; Hardware stack levels required when called:    3
 13357 ;; This function calls:
 13358 ;;		Nothing
 13359 ;; This function is called by:
 13360 ;;		_efgtoa
 13361 ;; This function uses a non-reentrant model
 13362 ;;
 13363                           psect	text26,local,class=CODE,delta=2,merge=1,group=1
 13364                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 13365                           	line	5
 13366                           global __ptext26
 13367                           __ptext26:	;psect for function ___awdiv
 13368  2796                     psect	text26
 13369                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 13370                           	line	5
 13371                           	global	__size_of___awdiv
 13372                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 13373  006A                     	
 13374                           ___awdiv:	
 13375  2796                     ;incstack = 0
 13376                           	opt	stack 7
 13377                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13378                           	line	13
 13379                           	
 13380                           l3493:	
 13381  2796                     	movlb 0	; select bank0
 13382  2796  0140               	clrf	(___awdiv@sign)
 13383  2797  01A6               	line	14
 13384                           	
 13385                           l3495:	
 13386  2798                     	btfss	(___awdiv@divisor+1),7
 13387  2798  1FA1               	goto	u4501
 13388  2799  2F9B               	goto	u4500
 13389  279A  2F9C               u4501:
 13390  279B                     	goto	l3501
 13391  279B  2FA4               u4500:
 13392  279C                     	line	15
 13393                           	
 13394                           l3497:	
 13395  279C                     	comf	(___awdiv@divisor),f
 13396  279C  09A0               	comf	(___awdiv@divisor+1),f
 13397  279D  09A1               	incf	(___awdiv@divisor),f
 13398  279E  0AA0               	skipnz
 13399  279F  1903               	incf	(___awdiv@divisor+1),f
 13400  27A0  0AA1               	line	16
 13401                           	
 13402                           l3499:	
 13403  27A1                     	clrf	(___awdiv@sign)
 13404  27A1  01A6               	incf	(___awdiv@sign),f
 13405  27A2  0AA6               	goto	l3501
 13406  27A3  2FA4               	line	17
 13407                           	
 13408                           l728:	
 13409  27A4                     	line	18
 13410                           	
 13411                           l3501:	
 13412  27A4                     	btfss	(___awdiv@dividend+1),7
 13413  27A4  1FA3               	goto	u4511
 13414  27A5  2FA7               	goto	u4510
 13415  27A6  2FA8               u4511:
 13416  27A7                     	goto	l3507
 13417  27A7  2FB2               u4510:
 13418  27A8                     	line	19
 13419                           	
 13420                           l3503:	
 13421  27A8                     	comf	(___awdiv@dividend),f
 13422  27A8  09A2               	comf	(___awdiv@dividend+1),f
 13423  27A9  09A3               	incf	(___awdiv@dividend),f
 13424  27AA  0AA2               	skipnz
 13425  27AB  1903               	incf	(___awdiv@dividend+1),f
 13426  27AC  0AA3               	line	20
 13427                           	
 13428                           l3505:	
 13429  27AD                     	movlw	low(01h)
 13430  27AD  3001               	movwf	(??___awdiv+0)+0
 13431  27AE  00A4               	movf	(??___awdiv+0)+0,w
 13432  27AF  0824               	xorwf	(___awdiv@sign),f
 13433  27B0  06A6               	goto	l3507
 13434  27B1  2FB2               	line	21
 13435                           	
 13436                           l729:	
 13437  27B2                     	line	22
 13438                           	
 13439                           l3507:	
 13440  27B2                     	clrf	(___awdiv@quotient)
 13441  27B2  01A7               	clrf	(___awdiv@quotient+1)
 13442  27B3  01A8               	line	23
 13443                           	
 13444                           l3509:	
 13445  27B4                     	movf	((___awdiv@divisor)),w
 13446  27B4  0820               iorwf	((___awdiv@divisor+1)),w
 13447  27B5  0421               	btfsc	status,2
 13448  27B6  1903               	goto	u4521
 13449  27B7  2FB9               	goto	u4520
 13450  27B8  2FBA               u4521:
 13451  27B9                     	goto	l3529
 13452  27B9  2FEF               u4520:
 13453  27BA                     	line	24
 13454                           	
 13455                           l3511:	
 13456  27BA                     	clrf	(___awdiv@counter)
 13457  27BA  01A5               	incf	(___awdiv@counter),f
 13458  27BB  0AA5               	line	25
 13459                           	goto	l3517
 13460  27BC  2FC7               	
 13461                           l732:	
 13462  27BD                     	line	26
 13463                           	
 13464                           l3513:	
 13465  27BD                     	movlw	01h
 13466  27BD  3001               	
 13467                           u4535:
 13468  27BE                     	lslf	(___awdiv@divisor),f
 13469  27BE  35A0               	rlf	(___awdiv@divisor+1),f
 13470  27BF  0DA1               	decfsz	wreg,f
 13471  27C0  0B89               	goto	u4535
 13472  27C1  2FBE               	line	27
 13473                           	
 13474                           l3515:	
 13475  27C2                     	movlw	low(01h)
 13476  27C2  3001               	movwf	(??___awdiv+0)+0
 13477  27C3  00A4               	movf	(??___awdiv+0)+0,w
 13478  27C4  0824               	addwf	(___awdiv@counter),f
 13479  27C5  07A5               	goto	l3517
 13480  27C6  2FC7               	line	28
 13481                           	
 13482                           l731:	
 13483  27C7                     	line	25
 13484                           	
 13485                           l3517:	
 13486  27C7                     	btfss	(___awdiv@divisor+1),(15)&7
 13487  27C7  1FA1               	goto	u4541
 13488  27C8  2FCA               	goto	u4540
 13489  27C9  2FCB               u4541:
 13490  27CA                     	goto	l3513
 13491  27CA  2FBD               u4540:
 13492  27CB                     	goto	l3519
 13493  27CB  2FCD               	
 13494                           l733:	
 13495  27CC                     	goto	l3519
 13496  27CC  2FCD               	line	29
 13497                           	
 13498                           l734:	
 13499  27CD                     	line	30
 13500                           	
 13501                           l3519:	
 13502  27CD                     	movlw	01h
 13503  27CD  3001               	
 13504                           u4555:
 13505  27CE                     	lslf	(___awdiv@quotient),f
 13506  27CE  35A7               	rlf	(___awdiv@quotient+1),f
 13507  27CF  0DA8               	decfsz	wreg,f
 13508  27D0  0B89               	goto	u4555
 13509  27D1  2FCE               	line	31
 13510                           	movf	(___awdiv@divisor+1),w
 13511  27D2  0821               	subwf	(___awdiv@dividend+1),w
 13512  27D3  0223               	skipz
 13513  27D4  1D03               	goto	u4565
 13514  27D5  2FD8               	movf	(___awdiv@divisor),w
 13515  27D6  0820               	subwf	(___awdiv@dividend),w
 13516  27D7  0222               u4565:
 13517  27D8                     	skipc
 13518  27D8  1C03               	goto	u4561
 13519  27D9  2FDB               	goto	u4560
 13520  27DA  2FDC               u4561:
 13521  27DB                     	goto	l3525
 13522  27DB  2FE2               u4560:
 13523  27DC                     	line	32
 13524                           	
 13525                           l3521:	
 13526  27DC                     	movf	(___awdiv@divisor),w
 13527  27DC  0820               	subwf	(___awdiv@dividend),f
 13528  27DD  02A2               	movf	(___awdiv@divisor+1),w
 13529  27DE  0821               	subwfb	(___awdiv@dividend+1),f
 13530  27DF  3BA3               	line	33
 13531                           	
 13532                           l3523:	
 13533  27E0                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
 13534  27E0  1427               	goto	l3525
 13535  27E1  2FE2               	line	34
 13536                           	
 13537                           l735:	
 13538  27E2                     	line	35
 13539                           	
 13540                           l3525:	
 13541  27E2                     	movlw	01h
 13542  27E2  3001               	
 13543                           u4575:
 13544  27E3                     	lsrf	(___awdiv@divisor+1),f
 13545  27E3  36A1               	rrf	(___awdiv@divisor),f
 13546  27E4  0CA0               	decfsz	wreg,f
 13547  27E5  0B89               	goto	u4575
 13548  27E6  2FE3               	line	36
 13549                           	
 13550                           l3527:	
 13551  27E7                     	movlw	01h
 13552  27E7  3001               	subwf	(___awdiv@counter),f
 13553  27E8  02A5               	btfss	status,2
 13554  27E9  1D03               	goto	u4581
 13555  27EA  2FEC               	goto	u4580
 13556  27EB  2FED               u4581:
 13557  27EC                     	goto	l3519
 13558  27EC  2FCD               u4580:
 13559  27ED                     	goto	l3529
 13560  27ED  2FEF               	
 13561                           l736:	
 13562  27EE                     	goto	l3529
 13563  27EE  2FEF               	line	37
 13564                           	
 13565                           l730:	
 13566  27EF                     	line	38
 13567                           	
 13568                           l3529:	
 13569  27EF                     	movf	((___awdiv@sign)),w
 13570  27EF  0826               	btfsc	status,2
 13571  27F0  1903               	goto	u4591
 13572  27F1  2FF3               	goto	u4590
 13573  27F2  2FF4               u4591:
 13574  27F3                     	goto	l3533
 13575  27F3  2FFA               u4590:
 13576  27F4                     	line	39
 13577                           	
 13578                           l3531:	
 13579  27F4                     	comf	(___awdiv@quotient),f
 13580  27F4  09A7               	comf	(___awdiv@quotient+1),f
 13581  27F5  09A8               	incf	(___awdiv@quotient),f
 13582  27F6  0AA7               	skipnz
 13583  27F7  1903               	incf	(___awdiv@quotient+1),f
 13584  27F8  0AA8               	goto	l3533
 13585  27F9  2FFA               	
 13586                           l737:	
 13587  27FA                     	line	40
 13588                           	
 13589                           l3533:	
 13590  27FA                     	movf	(___awdiv@quotient+1),w
 13591  27FA  0828               	movwf	(?___awdiv+1)
 13592  27FB  00A1               	movf	(___awdiv@quotient),w
 13593  27FC  0827               	movwf	(?___awdiv)
 13594  27FD  00A0               	goto	l738
 13595  27FE  2FFF               	
 13596                           l3535:	
 13597  27FF                     	line	41
 13598                           	
 13599                           l738:	
 13600  27FF                     	return
 13601  27FF  0008               	opt stack 0
 13602                           GLOBAL	__end_of___awdiv
 13603                           	__end_of___awdiv:
 13604  2800                     	signat	___awdiv,8314
 13605                           	global	_atoi
 13606                           
 13607 ;; *************** function _atoi *****************
 13608 ;; Defined at:
 13609 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\atoi.c"
 13610 ;; Parameters:    Size  Location     Type
 13611 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 13612 ;;		 -> STR_6(42), STR_5(17), STR_4(13), STR_2(15), 
 13613 ;; Auto vars:     Size  Location     Type
 13614 ;;  n               2   19[BANK0 ] int 
 13615 ;;  neg             2   12[BANK0 ] int 
 13616 ;; Return value:  Size  Location     Type
 13617 ;;                  2    6[BANK0 ] int 
 13618 ;; Registers used:
 13619 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13620 ;; Tracked objects:
 13621 ;;		On entry : 0/0
 13622 ;;		On exit  : 0/0
 13623 ;;		Unchanged: 0/0
 13624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13625 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13626 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13627 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13628 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13629 ;;Total ram usage:       15 bytes
 13630 ;; Hardware stack levels used:    1
 13631 ;; Hardware stack levels required when called:    4
 13632 ;; This function calls:
 13633 ;;		___wmul
 13634 ;;		_isdigit
 13635 ;;		_isspace
 13636 ;; This function is called by:
 13637 ;;		_vfpfcnvrt
 13638 ;; This function uses a non-reentrant model
 13639 ;;
 13640                           psect	text27,local,class=CODE,delta=2,merge=1,group=2
 13641                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\atoi.c"
 13642                           	line	4
 13643                           global __ptext27
 13644                           __ptext27:	;psect for function _atoi
 13645  1F19                     psect	text27
 13646                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\atoi.c"
 13647                           	line	4
 13648                           	global	__size_of_atoi
 13649                           	__size_of_atoi	equ	__end_of_atoi-_atoi
 13650  00E7                     	
 13651                           _atoi:	
 13652  1F19                     ;incstack = 0
 13653                           	opt	stack 7
 13654                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13655                           	line	6
 13656                           	
 13657                           l4319:	
 13658  1F19                     	movlb 0	; select bank0
 13659  1F19  0140               	clrf	(atoi@n)
 13660  1F1A  01B3               	clrf	(atoi@n+1)
 13661  1F1B  01B4               	clrf	(atoi@neg)
 13662  1F1C  01AC               	clrf	(atoi@neg+1)
 13663  1F1D  01AD               	line	7
 13664                           	goto	l4323
 13665  1F1E  2F24               	
 13666                           l1035:	
 13667  1F1F                     	
 13668                           l4321:	
 13669  1F1F                     	movlw	01h
 13670  1F1F  3001               	addwf	(atoi@s),f
 13671  1F20  07A6               	movlw	0
 13672  1F21  3000               	addwfc	(atoi@s+1),f
 13673  1F22  3DA7               	goto	l4323
 13674  1F23  2F24               	
 13675                           l1034:	
 13676  1F24                     	
 13677                           l4323:	
 13678  1F24                     	clrf	(_atoi$1255)
 13679  1F24  01B2               	incf	(_atoi$1255),f
 13680  1F25  0AB2               	
 13681                           l4325:	
 13682  1F26                     	movf	(atoi@s),w
 13683  1F26  0826               	movwf	fsr0l
 13684  1F27  0084               	movf	((atoi@s+1)),w
 13685  1F28  0827               	movwf	fsr0h
 13686  1F29  0085               	moviw	fsr0++
 13687  1F2A  0012               xorlw	32
 13688  1F2B  3A20               	btfsc	status,2
 13689  1F2C  1903               	goto	u6081
 13690  1F2D  2F2F               	goto	u6080
 13691  1F2E  2F30               u6081:
 13692  1F2F                     	goto	l4331
 13693  1F2F  2F46               u6080:
 13694  1F30                     	
 13695                           l4327:	
 13696  1F30                     	movf	(atoi@s),w
 13697  1F30  0826               	movwf	fsr0l
 13698  1F31  0084               	movf	((atoi@s+1)),w
 13699  1F32  0827               	movwf	fsr0h
 13700  1F33  0085               	movf	indf0,w ;code access
 13701  1F34  0800               	addlw	low(0FFF7h)
 13702  1F35  3EF7               	movwf	(??_atoi+0)+0
 13703  1F36  00A8               	movlw	high(0FFF7h)
 13704  1F37  30FF               	skipnc
 13705  1F38  1803               	movlw	(high(0FFF7h)+1)&0ffh
 13706  1F39  3000               	movwf	((??_atoi+0)+0)+1
 13707  1F3A  00A9               	movlw	0
 13708  1F3B  3000               	subwf	1+(??_atoi+0)+0,w
 13709  1F3C  0229               	movlw	05h
 13710  1F3D  3005               	skipnz
 13711  1F3E  1903               	subwf	0+(??_atoi+0)+0,w
 13712  1F3F  0228               	skipc
 13713  1F40  1C03               	goto	u6091
 13714  1F41  2F43               	goto	u6090
 13715  1F42  2F44               u6091:
 13716  1F43                     	goto	l4331
 13717  1F43  2F46               u6090:
 13718  1F44                     	
 13719                           l4329:	
 13720  1F44                     	clrf	(_atoi$1255)
 13721  1F44  01B2               	goto	l4331
 13722  1F45  2F46               	
 13723                           l1041:	
 13724  1F46                     	
 13725                           l4331:	
 13726  1F46                     	movf	(_atoi$1255),w
 13727  1F46  0832               	movwf	(??_atoi+0)+0
 13728  1F47  00A8               	clrf	(??_atoi+0)+0+1
 13729  1F48  01A9               	movf	0+(??_atoi+0)+0,w
 13730  1F49  0828               	movwf	(_atoi$1254)
 13731  1F4A  00AE               	movf	1+(??_atoi+0)+0,w
 13732  1F4B  0829               	movwf	(_atoi$1254+1)
 13733  1F4C  00AF               	goto	l4335
 13734  1F4D  2F62               	
 13735                           l1037:	
 13736  1F4E                     	
 13737                           l4333:	
 13738  1F4E                     	movf	(atoi@s),w
 13739  1F4E  0826               	movwf	fsr0l
 13740  1F4F  0084               	movf	((atoi@s+1)),w
 13741  1F50  0827               	movwf	fsr0h
 13742  1F51  0085               	movf	indf0,w ;code access
 13743  1F52  0800               	movwf	(??_atoi+0)+0
 13744  1F53  00A8               	clrf	(??_atoi+0)+0+1
 13745  1F54  01A9               	movf	0+(??_atoi+0)+0,w
 13746  1F55  0828               	movwf	(isspace@c)
 13747  1F56  00A0               	movf	1+(??_atoi+0)+0,w
 13748  1F57  0829               	movwf	(isspace@c+1)
 13749  1F58  00A1               	fcall	_isspace
 13750  1F59  31A2  2296  319F   	movlb 0	; select bank0
 13751  1F5C  0140               	movf	(1+(?_isspace)),w
 13752  1F5D  0821               	movwf	(_atoi$1254+1)
 13753  1F5E  00AF               	movf	(0+(?_isspace)),w
 13754  1F5F  0820               	movwf	(_atoi$1254)
 13755  1F60  00AE               	goto	l4335
 13756  1F61  2F62               	
 13757                           l1039:	
 13758  1F62                     	
 13759                           l4335:	
 13760  1F62                     	movf	((_atoi$1254)),w
 13761  1F62  082E               iorwf	((_atoi$1254+1)),w
 13762  1F63  042F               	btfss	status,2
 13763  1F64  1D03               	goto	u6101
 13764  1F65  2F67               	goto	u6100
 13765  1F66  2F68               u6101:
 13766  1F67                     	goto	l4321
 13767  1F67  2F1F               u6100:
 13768  1F68                     	goto	l4339
 13769  1F68  2F73               	
 13770                           l1042:	
 13771  1F69                     	line	8
 13772                           	goto	l4339
 13773  1F69  2F73               	line	9
 13774                           	
 13775                           l1044:	
 13776  1F6A                     	
 13777                           l4337:	
 13778  1F6A                     	movlw	01h
 13779  1F6A  3001               	movwf	(atoi@neg)
 13780  1F6B  00AC               	movlw	0
 13781  1F6C  3000               	movwf	((atoi@neg))+1
 13782  1F6D  00AD               	line	10
 13783                           	
 13784                           l1045:	
 13785  1F6E                     	movlw	01h
 13786  1F6E  3001               	addwf	(atoi@s),f
 13787  1F6F  07A6               	movlw	0
 13788  1F70  3000               	addwfc	(atoi@s+1),f
 13789  1F71  3DA7               	line	11
 13790                           	goto	l4345
 13791  1F72  2FAF               	
 13792                           l1043:	
 13793  1F73                     	
 13794                           l4339:	
 13795  1F73                     	movf	(atoi@s),w
 13796  1F73  0826               	movwf	fsr0l
 13797  1F74  0084               	movf	((atoi@s+1)),w
 13798  1F75  0827               	movwf	fsr0h
 13799  1F76  0085               	movf	indf0,w ;code access
 13800  1F77  0800               	movwf	(??_atoi+0)+0
 13801  1F78  00A8               	clrf	(??_atoi+0)+0+1
 13802  1F79  01A9               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 13803                           ; Switch size 1, requested type "space"
 13804                           ; Number of cases is 1, Range of values is 0 to 0
 13805                           ; switch strategies available:
 13806                           ; Name         Instructions Cycles
 13807                           ; simple_byte            4     3 (average)
 13808                           ; direct_byte            8     6 (fixed)
 13809                           ; jumptable            260     6 (fixed)
 13810                           ;	Chosen strategy is simple_byte
 13811                           
 13812                           	movf 1+(??_atoi+0)+0,w
 13813  1F7A  0829               	opt asmopt_push
 13814                           	opt asmopt_off
 13815                           	xorlw	0^0	; case 0
 13816  1F7B  3A00               	skipnz
 13817  1F7C  1903               	goto	l5081
 13818  1F7D  2F7F               	goto	l4345
 13819  1F7E  2FAF               	opt asmopt_pop
 13820                           	
 13821                           l5081:	
 13822  1F7F                     ; Switch size 1, requested type "space"
 13823                           ; Number of cases is 2, Range of values is 43 to 45
 13824                           ; switch strategies available:
 13825                           ; Name         Instructions Cycles
 13826                           ; simple_byte            7     4 (average)
 13827                           ; direct_byte           15     9 (fixed)
 13828                           ; jumptable            263     9 (fixed)
 13829                           ;	Chosen strategy is simple_byte
 13830                           
 13831                           	movf 0+(??_atoi+0)+0,w
 13832  1F7F  0828               	opt asmopt_push
 13833                           	opt asmopt_off
 13834                           	xorlw	43^0	; case 43
 13835  1F80  3A2B               	skipnz
 13836  1F81  1903               	goto	l1045
 13837  1F82  2F6E               	xorlw	45^43	; case 45
 13838  1F83  3A06               	skipnz
 13839  1F84  1903               	goto	l4337
 13840  1F85  2F6A               	goto	l4345
 13841  1F86  2FAF               	opt asmopt_pop
 13842                           
 13843                           	
 13844                           l1046:	
 13845  1F87                     	line	13
 13846                           	goto	l4345
 13847  1F87  2FAF               	
 13848                           l1048:	
 13849  1F88                     	line	14
 13850                           	
 13851                           l4341:	
 13852  1F88                     	movf	(atoi@s),w
 13853  1F88  0826               	movwf	fsr0l
 13854  1F89  0084               	movf	((atoi@s+1)),w
 13855  1F8A  0827               	movwf	fsr0h
 13856  1F8B  0085               	movf	indf0,w ;code access
 13857  1F8C  0800               	addlw	low(0FFD0h)
 13858  1F8D  3ED0               	movwf	(??_atoi+0)+0
 13859  1F8E  00A8               	movlw	high(0FFD0h)
 13860  1F8F  30FF               	skipnc
 13861  1F90  1803               	movlw	(high(0FFD0h)+1)&0ffh
 13862  1F91  3000               	movwf	((??_atoi+0)+0)+1
 13863  1F92  00A9               	comf	(??_atoi+0)+0,f
 13864  1F93  09A8               	comf	(??_atoi+0)+1,f
 13865  1F94  09A9               	incf	(??_atoi+0)+0,f
 13866  1F95  0AA8               	skipnz
 13867  1F96  1903               	incf	(??_atoi+0)+1,f
 13868  1F97  0AA9               	movf	(atoi@n+1),w
 13869  1F98  0834               	movwf	(___wmul@multiplier+1)
 13870  1F99  00A1               	movf	(atoi@n),w
 13871  1F9A  0833               	movwf	(___wmul@multiplier)
 13872  1F9B  00A0               	movlw	0Ah
 13873  1F9C  300A               	movwf	(___wmul@multiplicand)
 13874  1F9D  00A2               	movlw	0
 13875  1F9E  3000               	movwf	((___wmul@multiplicand))+1
 13876  1F9F  00A3               	fcall	___wmul
 13877  1FA0  31A2  2273  319F   	movlb 0	; select bank0
 13878  1FA3  0140               	movf	0+(??_atoi+0)+0,w
 13879  1FA4  0828               	addwf	(0+(?___wmul)),w
 13880  1FA5  0720               	movwf	(atoi@n)
 13881  1FA6  00B3               	movf	1+(??_atoi+0)+0,w
 13882  1FA7  0829               	addwfc	(1+(?___wmul)),w
 13883  1FA8  3D21               	movwf	1+(atoi@n)
 13884  1FA9  00B4               	
 13885                           l4343:	
 13886  1FAA                     	movlw	01h
 13887  1FAA  3001               	addwf	(atoi@s),f
 13888  1FAB  07A6               	movlw	0
 13889  1FAC  3000               	addwfc	(atoi@s+1),f
 13890  1FAD  3DA7               	goto	l4345
 13891  1FAE  2FAF               	
 13892                           l1047:	
 13893  1FAF                     	line	13
 13894                           	
 13895                           l4345:	
 13896  1FAF                     	movf	(atoi@s),w
 13897  1FAF  0826               	movwf	fsr0l
 13898  1FB0  0084               	movf	((atoi@s+1)),w
 13899  1FB1  0827               	movwf	fsr0h
 13900  1FB2  0085               	movf	indf0,w ;code access
 13901  1FB3  0800               	addlw	low(0FFD0h)
 13902  1FB4  3ED0               	movwf	(??_atoi+0)+0
 13903  1FB5  00A8               	movlw	high(0FFD0h)
 13904  1FB6  30FF               	skipnc
 13905  1FB7  1803               	movlw	(high(0FFD0h)+1)&0ffh
 13906  1FB8  3000               	movwf	((??_atoi+0)+0)+1
 13907  1FB9  00A9               	movlw	0
 13908  1FBA  3000               	subwf	1+(??_atoi+0)+0,w
 13909  1FBB  0229               	movlw	0Ah
 13910  1FBC  300A               	skipnz
 13911  1FBD  1903               	subwf	0+(??_atoi+0)+0,w
 13912  1FBE  0228               	skipc
 13913  1FBF  1C03               	goto	u6111
 13914  1FC0  2FC2               	goto	u6110
 13915  1FC1  2FC4               u6111:
 13916  1FC2                     	movlw	1
 13917  1FC2  3001               	goto	u6120
 13918  1FC3  2FC5               u6110:
 13919  1FC4                     	movlw	0
 13920  1FC4  3000               u6120:
 13921  1FC5                     	movwf	(??_atoi+2)+0
 13922  1FC5  00AA               	clrf	(??_atoi+2)+0+1
 13923  1FC6  01AB               	movf	0+(??_atoi+2)+0,w
 13924  1FC7  082A               	movwf	(_atoi$1256)
 13925  1FC8  00B0               	movf	1+(??_atoi+2)+0,w
 13926  1FC9  082B               	movwf	(_atoi$1256+1)
 13927  1FCA  00B1               	goto	l4349
 13928  1FCB  2FE0               	
 13929                           l1050:	
 13930  1FCC                     	
 13931                           l4347:	
 13932  1FCC                     	movf	(atoi@s),w
 13933  1FCC  0826               	movwf	fsr0l
 13934  1FCD  0084               	movf	((atoi@s+1)),w
 13935  1FCE  0827               	movwf	fsr0h
 13936  1FCF  0085               	movf	indf0,w ;code access
 13937  1FD0  0800               	movwf	(??_atoi+0)+0
 13938  1FD1  00A8               	clrf	(??_atoi+0)+0+1
 13939  1FD2  01A9               	movf	0+(??_atoi+0)+0,w
 13940  1FD3  0828               	movwf	(isdigit@c)
 13941  1FD4  00A0               	movf	1+(??_atoi+0)+0,w
 13942  1FD5  0829               	movwf	(isdigit@c+1)
 13943  1FD6  00A1               	fcall	_isdigit
 13944  1FD7  31A1  21D9  319F   	movlb 0	; select bank0
 13945  1FDA  0140               	movf	(1+(?_isdigit)),w
 13946  1FDB  0821               	movwf	(_atoi$1256+1)
 13947  1FDC  00B1               	movf	(0+(?_isdigit)),w
 13948  1FDD  0820               	movwf	(_atoi$1256)
 13949  1FDE  00B0               	goto	l4349
 13950  1FDF  2FE0               	
 13951                           l1052:	
 13952  1FE0                     	
 13953                           l4349:	
 13954  1FE0                     	movf	((_atoi$1256)),w
 13955  1FE0  0830               iorwf	((_atoi$1256+1)),w
 13956  1FE1  0431               	btfss	status,2
 13957  1FE2  1D03               	goto	u6131
 13958  1FE3  2FE5               	goto	u6130
 13959  1FE4  2FE6               u6131:
 13960  1FE5                     	goto	l4341
 13961  1FE5  2F88               u6130:
 13962  1FE6                     	goto	l4351
 13963  1FE6  2FE7               	
 13964                           l1053:	
 13965  1FE7                     	line	15
 13966                           	
 13967                           l4351:	
 13968  1FE7                     	movf	((atoi@neg)),w
 13969  1FE7  082C               iorwf	((atoi@neg+1)),w
 13970  1FE8  042D               	btfss	status,2
 13971  1FE9  1D03               	goto	u6141
 13972  1FEA  2FEC               	goto	u6140
 13973  1FEB  2FED               u6141:
 13974  1FEC                     	goto	l4355
 13975  1FEC  2FF9               u6140:
 13976  1FED                     	
 13977                           l4353:	
 13978  1FED                     	comf	(atoi@n),w
 13979  1FED  0933               	movwf	(??_atoi+0)+0
 13980  1FEE  00A8               	comf	(atoi@n+1),w
 13981  1FEF  0934               	movwf	((??_atoi+0)+0+1)
 13982  1FF0  00A9               	incf	(??_atoi+0)+0,f
 13983  1FF1  0AA8               	skipnz
 13984  1FF2  1903               	incf	((??_atoi+0)+0+1),f
 13985  1FF3  0AA9               	movf	0+(??_atoi+0)+0,w
 13986  1FF4  0828               	movwf	(?_atoi)
 13987  1FF5  00A6               	movf	1+(??_atoi+0)+0,w
 13988  1FF6  0829               	movwf	(?_atoi+1)
 13989  1FF7  00A7               	goto	l1058
 13990  1FF8  2FFF               	
 13991                           l1055:	
 13992  1FF9                     	
 13993                           l4355:	
 13994  1FF9                     	movf	(atoi@n+1),w
 13995  1FF9  0834               	movwf	(?_atoi+1)
 13996  1FFA  00A7               	movf	(atoi@n),w
 13997  1FFB  0833               	movwf	(?_atoi)
 13998  1FFC  00A6               	goto	l1058
 13999  1FFD  2FFF               	
 14000                           l1057:	
 14001  1FFE                     	goto	l1058
 14002  1FFE  2FFF               	
 14003                           l4357:	
 14004  1FFF                     	line	16
 14005                           	
 14006                           l1058:	
 14007  1FFF                     	return
 14008  1FFF  0008               	opt stack 0
 14009                           GLOBAL	__end_of_atoi
 14010                           	__end_of_atoi:
 14011  2000                     	signat	_atoi,4218
 14012                           	global	_isspace
 14013                           
 14014 ;; *************** function _isspace *****************
 14015 ;; Defined at:
 14016 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isspace.c"
 14017 ;; Parameters:    Size  Location     Type
 14018 ;;  c               2    0[BANK0 ] int 
 14019 ;; Auto vars:     Size  Location     Type
 14020 ;;		None
 14021 ;; Return value:  Size  Location     Type
 14022 ;;                  2    0[BANK0 ] int 
 14023 ;; Registers used:
 14024 ;;		wreg, status,2, status,0
 14025 ;; Tracked objects:
 14026 ;;		On entry : 0/0
 14027 ;;		On exit  : 0/0
 14028 ;;		Unchanged: 0/0
 14029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14030 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14031 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14032 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14033 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14034 ;;Total ram usage:        5 bytes
 14035 ;; Hardware stack levels used:    1
 14036 ;; Hardware stack levels required when called:    3
 14037 ;; This function calls:
 14038 ;;		Nothing
 14039 ;; This function is called by:
 14040 ;;		_atoi
 14041 ;; This function uses a non-reentrant model
 14042 ;;
 14043                           psect	text28,local,class=CODE,delta=2,merge=1,group=2
 14044                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isspace.c"
 14045                           	line	5
 14046                           global __ptext28
 14047                           __ptext28:	;psect for function _isspace
 14048  2296                     psect	text28
 14049                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isspace.c"
 14050                           	line	5
 14051                           	global	__size_of_isspace
 14052                           	__size_of_isspace	equ	__end_of_isspace-_isspace
 14053  0024                     	
 14054                           _isspace:	
 14055  2296                     ;incstack = 0
 14056                           	opt	stack 7
 14057                           ; Regs used in _isspace: [wreg+status,2+status,0]
 14058                           	line	7
 14059                           	
 14060                           l3943:	
 14061  2296                     	movlb 0	; select bank0
 14062  2296  0140               	clrf	(_isspace$1285)
 14063  2297  01A4               	incf	(_isspace$1285),f
 14064  2298  0AA4               	
 14065                           l3945:	
 14066  2299                     		movlw	32
 14067  2299  3020               	xorwf	((isspace@c)),w
 14068  229A  0620               iorwf	((isspace@c+1)),w
 14069  229B  0421               	btfsc	status,2
 14070  229C  1903               	goto	u5431
 14071  229D  2A9F               	goto	u5430
 14072  229E  2AA0               u5431:
 14073  229F                     	goto	l3951
 14074  229F  2AB1               u5430:
 14075  22A0                     	
 14076                           l3947:	
 14077  22A0                     	movf	(isspace@c),w
 14078  22A0  0820               	addlw	0F7h
 14079  22A1  3EF7               	movwf	(??_isspace+0)+0
 14080  22A2  00A2               	movlw	0FFh
 14081  22A3  30FF               	addwfc	(isspace@c+1),w
 14082  22A4  3D21               	movwf	1+(??_isspace+0)+0
 14083  22A5  00A3               	movlw	0
 14084  22A6  3000               	subwf	1+(??_isspace+0)+0,w
 14085  22A7  0223               	movlw	05h
 14086  22A8  3005               	skipnz
 14087  22A9  1903               	subwf	0+(??_isspace+0)+0,w
 14088  22AA  0222               	skipc
 14089  22AB  1C03               	goto	u5441
 14090  22AC  2AAE               	goto	u5440
 14091  22AD  2AAF               u5441:
 14092  22AE                     	goto	l3951
 14093  22AE  2AB1               u5440:
 14094  22AF                     	
 14095                           l3949:	
 14096  22AF                     	clrf	(_isspace$1285)
 14097  22AF  01A4               	goto	l3951
 14098  22B0  2AB1               	
 14099                           l1081:	
 14100  22B1                     	
 14101                           l3951:	
 14102  22B1                     	movf	(_isspace$1285),w
 14103  22B1  0824               	movwf	(??_isspace+0)+0
 14104  22B2  00A2               	clrf	(??_isspace+0)+0+1
 14105  22B3  01A3               	movf	0+(??_isspace+0)+0,w
 14106  22B4  0822               	movwf	(?_isspace)
 14107  22B5  00A0               	movf	1+(??_isspace+0)+0,w
 14108  22B6  0823               	movwf	(?_isspace+1)
 14109  22B7  00A1               	goto	l1082
 14110  22B8  2AB9               	
 14111                           l3953:	
 14112  22B9                     	line	8
 14113                           	
 14114                           l1082:	
 14115  22B9                     	return
 14116  22B9  0008               	opt stack 0
 14117                           GLOBAL	__end_of_isspace
 14118                           	__end_of_isspace:
 14119  22BA                     	signat	_isspace,4218
 14120                           	global	_isdigit
 14121                           
 14122 ;; *************** function _isdigit *****************
 14123 ;; Defined at:
 14124 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isdigit.c"
 14125 ;; Parameters:    Size  Location     Type
 14126 ;;  c               2    0[BANK0 ] int 
 14127 ;; Auto vars:     Size  Location     Type
 14128 ;;		None
 14129 ;; Return value:  Size  Location     Type
 14130 ;;                  2    0[BANK0 ] int 
 14131 ;; Registers used:
 14132 ;;		wreg, status,2, status,0
 14133 ;; Tracked objects:
 14134 ;;		On entry : 0/0
 14135 ;;		On exit  : 0/0
 14136 ;;		Unchanged: 0/0
 14137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14138 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14140 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14141 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14142 ;;Total ram usage:        6 bytes
 14143 ;; Hardware stack levels used:    1
 14144 ;; Hardware stack levels required when called:    3
 14145 ;; This function calls:
 14146 ;;		Nothing
 14147 ;; This function is called by:
 14148 ;;		_vfpfcnvrt
 14149 ;;		_atoi
 14150 ;; This function uses a non-reentrant model
 14151 ;;
 14152                           psect	text29,local,class=CODE,delta=2,merge=1,group=2
 14153                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isdigit.c"
 14154                           	line	5
 14155                           global __ptext29
 14156                           __ptext29:	;psect for function _isdigit
 14157  21D9                     psect	text29
 14158                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isdigit.c"
 14159                           	line	5
 14160                           	global	__size_of_isdigit
 14161                           	__size_of_isdigit	equ	__end_of_isdigit-_isdigit
 14162  001A                     	
 14163                           _isdigit:	
 14164  21D9                     ;incstack = 0
 14165                           	opt	stack 8
 14166                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 14167                           	line	7
 14168                           	
 14169                           l3475:	
 14170  21D9                     	movlb 0	; select bank0
 14171  21D9  0140               	movf	(isdigit@c),w
 14172  21DA  0820               	addlw	0D0h
 14173  21DB  3ED0               	movwf	(??_isdigit+0)+0
 14174  21DC  00A2               	movlw	0FFh
 14175  21DD  30FF               	addwfc	(isdigit@c+1),w
 14176  21DE  3D21               	movwf	1+(??_isdigit+0)+0
 14177  21DF  00A3               	movlw	0
 14178  21E0  3000               	subwf	1+(??_isdigit+0)+0,w
 14179  21E1  0223               	movlw	0Ah
 14180  21E2  300A               	skipnz
 14181  21E3  1903               	subwf	0+(??_isdigit+0)+0,w
 14182  21E4  0222               	skipc
 14183  21E5  1C03               	goto	u4441
 14184  21E6  29E8               	goto	u4440
 14185  21E7  29EA               u4441:
 14186  21E8                     	movlw	1
 14187  21E8  3001               	goto	u4450
 14188  21E9  29EB               u4440:
 14189  21EA                     	movlw	0
 14190  21EA  3000               u4450:
 14191  21EB                     	movwf	(??_isdigit+2)+0
 14192  21EB  00A4               	clrf	(??_isdigit+2)+0+1
 14193  21EC  01A5               	movf	0+(??_isdigit+2)+0,w
 14194  21ED  0824               	movwf	(?_isdigit)
 14195  21EE  00A0               	movf	1+(??_isdigit+2)+0,w
 14196  21EF  0825               	movwf	(?_isdigit+1)
 14197  21F0  00A1               	goto	l1074
 14198  21F1  29F2               	
 14199                           l3477:	
 14200  21F2                     	line	8
 14201                           	
 14202                           l1074:	
 14203  21F2                     	return
 14204  21F2  0008               	opt stack 0
 14205                           GLOBAL	__end_of_isdigit
 14206                           	__end_of_isdigit:
 14207  21F3                     	signat	_isdigit,4218
 14208                           	global	___wmul
 14209                           
 14210 ;; *************** function ___wmul *****************
 14211 ;; Defined at:
 14212 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 14213 ;; Parameters:    Size  Location     Type
 14214 ;;  multiplier      2    0[BANK0 ] unsigned int 
 14215 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 14216 ;; Auto vars:     Size  Location     Type
 14217 ;;  product         2    4[BANK0 ] unsigned int 
 14218 ;; Return value:  Size  Location     Type
 14219 ;;                  2    0[BANK0 ] unsigned int 
 14220 ;; Registers used:
 14221 ;;		wreg, status,2, status,0
 14222 ;; Tracked objects:
 14223 ;;		On entry : 0/0
 14224 ;;		On exit  : 0/0
 14225 ;;		Unchanged: 0/0
 14226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14227 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14228 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14230 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14231 ;;Total ram usage:        6 bytes
 14232 ;; Hardware stack levels used:    1
 14233 ;; Hardware stack levels required when called:    3
 14234 ;; This function calls:
 14235 ;;		Nothing
 14236 ;; This function is called by:
 14237 ;;		_atoi
 14238 ;; This function uses a non-reentrant model
 14239 ;;
 14240                           psect	text30,local,class=CODE,delta=2,merge=1,group=1
 14241                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 14242                           	line	15
 14243                           global __ptext30
 14244                           __ptext30:	;psect for function ___wmul
 14245  2273                     psect	text30
 14246                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 14247                           	line	15
 14248                           	global	__size_of___wmul
 14249                           	__size_of___wmul	equ	__end_of___wmul-___wmul
 14250  0023                     	
 14251                           ___wmul:	
 14252  2273                     ;incstack = 0
 14253                           	opt	stack 7
 14254                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 14255                           	line	43
 14256                           	
 14257                           l3479:	
 14258  2273                     	movlb 0	; select bank0
 14259  2273  0140               	clrf	(___wmul@product)
 14260  2274  01A4               	clrf	(___wmul@product+1)
 14261  2275  01A5               	goto	l3481
 14262  2276  2A77               	line	44
 14263                           	
 14264                           l584:	
 14265  2277                     	line	45
 14266                           	
 14267                           l3481:	
 14268  2277                     	btfss	(___wmul@multiplier),(0)&7
 14269  2277  1C20               	goto	u4461
 14270  2278  2A7A               	goto	u4460
 14271  2279  2A7B               u4461:
 14272  227A                     	goto	l585
 14273  227A  2A7F               u4460:
 14274  227B                     	line	46
 14275                           	
 14276                           l3483:	
 14277  227B                     	movf	(___wmul@multiplicand),w
 14278  227B  0822               	addwf	(___wmul@product),f
 14279  227C  07A4               	movf	(___wmul@multiplicand+1),w
 14280  227D  0823               	addwfc	(___wmul@product+1),f
 14281  227E  3DA5               	
 14282                           l585:	
 14283  227F                     	line	47
 14284                           	movlw	01h
 14285  227F  3001               	
 14286                           u4475:
 14287  2280                     	lslf	(___wmul@multiplicand),f
 14288  2280  35A2               	rlf	(___wmul@multiplicand+1),f
 14289  2281  0DA3               	decfsz	wreg,f
 14290  2282  0B89               	goto	u4475
 14291  2283  2A80               	line	48
 14292                           	
 14293                           l3485:	
 14294  2284                     	movlw	01h
 14295  2284  3001               	
 14296                           u4485:
 14297  2285                     	lsrf	(___wmul@multiplier+1),f
 14298  2285  36A1               	rrf	(___wmul@multiplier),f
 14299  2286  0CA0               	decfsz	wreg,f
 14300  2287  0B89               	goto	u4485
 14301  2288  2A85               	line	49
 14302                           	
 14303                           l3487:	
 14304  2289                     	movf	((___wmul@multiplier)),w
 14305  2289  0820               iorwf	((___wmul@multiplier+1)),w
 14306  228A  0421               	btfss	status,2
 14307  228B  1D03               	goto	u4491
 14308  228C  2A8E               	goto	u4490
 14309  228D  2A8F               u4491:
 14310  228E                     	goto	l3481
 14311  228E  2A77               u4490:
 14312  228F                     	goto	l3489
 14313  228F  2A90               	
 14314                           l586:	
 14315  2290                     	line	52
 14316                           	
 14317                           l3489:	
 14318  2290                     	movf	(___wmul@product+1),w
 14319  2290  0825               	movwf	(?___wmul+1)
 14320  2291  00A1               	movf	(___wmul@product),w
 14321  2292  0824               	movwf	(?___wmul)
 14322  2293  00A0               	goto	l587
 14323  2294  2A95               	
 14324                           l3491:	
 14325  2295                     	line	53
 14326                           	
 14327                           l587:	
 14328  2295                     	return
 14329  2295  0008               	opt stack 0
 14330                           GLOBAL	__end_of___wmul
 14331                           	__end_of___wmul:
 14332  2296                     	signat	___wmul,8314
 14333                           	global	_menuInput
 14334                           
 14335 ;; *************** function _menuInput *****************
 14336 ;; Defined at:
 14337 ;;		line 251 in file "main.c"
 14338 ;; Parameters:    Size  Location     Type
 14339 ;;  page            1    wreg     PTR unsigned char 
 14340 ;;		 -> showMenu@page(1), 
 14341 ;;  numPages        1    7[BANK0 ] const unsigned char 
 14342 ;;  menu            1    8[BANK0 ] PTR unsigned char 
 14343 ;;		 -> showMenu@menu(1), 
 14344 ;;  pbShort         1    9[BANK0 ] unsigned char 
 14345 ;;  pbLong          1   10[BANK0 ] unsigned char 
 14346 ;;  timeout         1   11[BANK0 ] unsigned char 
 14347 ;; Auto vars:     Size  Location     Type
 14348 ;;  page            1   17[BANK0 ] PTR unsigned char 
 14349 ;;		 -> showMenu@page(1), 
 14350 ;;  n               1   16[BANK0 ] unsigned char 
 14351 ;;  pb              1   15[BANK0 ] enum E7840
 14352 ;;  dir             1   14[BANK0 ] enum E7836
 14353 ;; Return value:  Size  Location     Type
 14354 ;;                  1    wreg      void 
 14355 ;; Registers used:
 14356 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14357 ;; Tracked objects:
 14358 ;;		On entry : 0/0
 14359 ;;		On exit  : 0/0
 14360 ;;		Unchanged: 0/0
 14361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14362 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14363 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14364 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14365 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14366 ;;Total ram usage:       11 bytes
 14367 ;; Hardware stack levels used:    1
 14368 ;; Hardware stack levels required when called:    8
 14369 ;; This function calls:
 14370 ;;		_OLED_returnHome
 14371 ;;		_OLED_scrollDisplayLeft
 14372 ;;		_OLED_scrollDisplayRight
 14373 ;;		_getPB
 14374 ;;		_getRotDir
 14375 ;; This function is called by:
 14376 ;;		_showMenu
 14377 ;; This function uses a non-reentrant model
 14378 ;;
 14379                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
 14380                           	file	"main.c"
 14381                           	line	251
 14382                           global __ptext31
 14383                           __ptext31:	;psect for function _menuInput
 14384  1D73                     psect	text31
 14385                           	file	"main.c"
 14386                           	line	251
 14387                           	global	__size_of_menuInput
 14388                           	__size_of_menuInput	equ	__end_of_menuInput-_menuInput
 14389  00C3                     	
 14390                           _menuInput:	
 14391  1D73                     ;incstack = 0
 14392                           	opt	stack 6
 14393                           ; Regs used in _menuInput: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14394                           ;menuInput@page stored from wreg
 14395                           	movlb 0	; select bank0
 14396  1D73  0140               	movwf	(menuInput@page)
 14397  1D74  00B1               	line	258
 14398                           	
 14399                           l4609:	
 14400  1D75                     ;main.c: 251: void menuInput(uint8_t *page, const uint8_t numPages, uint8_t *menu,;main.
                                 c: 252:  uint8_t pbShort, uint8_t pbLong, uint8_t timeout);main.c: 253: {;main.c: 254:  
                                 uint8_t n;;main.c: 255:  enum e_direction dir;;main.c: 256:  enum e_buttonPress pb;;main
                                 .c: 258:  PIE0bits.IOCIE = 0;
 14401                           	movlb 14	; select bank14
 14402  1D75  014E               	bcf	(1814)^0700h,4	;volatile
 14403  1D76  1216               	line	259
 14404                           	
 14405                           l4611:	
 14406  1D77                     ;main.c: 259:  dir = getRotDir();
 14407                           	fcall	_getRotDir
 14408  1D77  3190  2001  319D   	movlb 0	; select bank0
 14409  1D7A  0140               	movwf	(??_menuInput+0)+0
 14410  1D7B  00AC               	movf	(??_menuInput+0)+0,w
 14411  1D7C  082C               	movwf	(menuInput@dir)
 14412  1D7D  00AE               	line	260
 14413                           ;main.c: 260:  pb = getPB();
 14414                           	fcall	_getPB
 14415  1D7E  31A1  218A  319D   	movlb 0	; select bank0
 14416  1D81  0140               	movwf	(??_menuInput+0)+0
 14417  1D82  00AC               	movf	(??_menuInput+0)+0,w
 14418  1D83  082C               	movwf	(menuInput@pb)
 14419  1D84  00AF               	line	262
 14420                           	
 14421                           l4613:	
 14422  1D85                     ;main.c: 262:  if ((dir == ROT_CW) && (*page < numPages - 1)) {
 14423                           		decf	((menuInput@dir)),w
 14424  1D85  032E               	btfss	status,2
 14425  1D86  1D03               	goto	u6481
 14426  1D87  2D89               	goto	u6480
 14427  1D88  2D8A               u6481:
 14428  1D89                     	goto	l4633
 14429  1D89  2DCB               u6480:
 14430  1D8A                     	
 14431                           l4615:	
 14432  1D8A                     	movf	(menuInput@numPages),w
 14433  1D8A  0827               	addlw	low(-1)
 14434  1D8B  3EFF               	movwf	(??_menuInput+0)+0
 14435  1D8C  00AC               	movlw	high(-1)
 14436  1D8D  30FF               	skipnc
 14437  1D8E  1803               	movlw	(high(-1)+1)&0ffh
 14438  1D8F  3000               	movwf	((??_menuInput+0)+0)+1
 14439  1D90  00AD               	movf	(menuInput@page),w
 14440  1D91  0831               	movwf	fsr1l
 14441  1D92  0086               	movlw 1	; select bank2/3
 14442  1D93  3001               	movwf fsr1h	
 14443  1D94  0087               	
 14444                           	movf	1+(??_menuInput+0)+0,w
 14445  1D95  082D               	xorlw	80h
 14446  1D96  3A80               	sublw	080h
 14447  1D97  3C80               	skipz
 14448  1D98  1D03               	goto	u6495
 14449  1D99  2D9C               	movf	0+(??_menuInput+0)+0,w
 14450  1D9A  082C               	subwf	indf1,w
 14451  1D9B  0201               u6495:
 14452  1D9C                     
 14453                           	skipnc
 14454  1D9C  1803               	goto	u6491
 14455  1D9D  2D9F               	goto	u6490
 14456  1D9E  2DA0               u6491:
 14457  1D9F                     	goto	l4633
 14458  1D9F  2DCB               u6490:
 14459  1DA0                     	line	263
 14460                           	
 14461                           l4617:	
 14462  1DA0                     ;main.c: 263:   (*page)++;
 14463                           	movlw	low(01h)
 14464  1DA0  3001               	movlb 0	; select bank0
 14465  1DA1  0140               	movwf	(??_menuInput+0)+0
 14466  1DA2  00AC               	movf	(menuInput@page),w
 14467  1DA3  0831               	movwf	fsr1l
 14468  1DA4  0086               	movlw 1	; select bank2/3
 14469  1DA5  3001               	movwf fsr1h	
 14470  1DA6  0087               	
 14471                           	movf	(??_menuInput+0)+0,w
 14472  1DA7  082C               	addwf	indf1,f
 14473  1DA8  0781               	line	264
 14474                           	
 14475                           l4619:	
 14476  1DA9                     ;main.c: 264:   for(n = 0; n < 12; n++) {
 14477                           	clrf	(menuInput@n)
 14478  1DA9  01B0               	
 14479                           l4621:	
 14480  1DAA                     	movlw	low(0Ch)
 14481  1DAA  300C               	subwf	(menuInput@n),w
 14482  1DAB  0230               	skipc
 14483  1DAC  1C03               	goto	u6501
 14484  1DAD  2DAF               	goto	u6500
 14485  1DAE  2DB0               u6501:
 14486  1DAF                     	goto	l4625
 14487  1DAF  2DB2               u6500:
 14488  1DB0                     	goto	l4653
 14489  1DB0  2E04               	
 14490                           l4623:	
 14491  1DB1                     	goto	l4653
 14492  1DB1  2E04               	
 14493                           l246:	
 14494  1DB2                     	line	265
 14495                           	
 14496                           l4625:	
 14497  1DB2                     ;main.c: 265:    OLED_scrollDisplayLeft();
 14498                           	fcall	_OLED_scrollDisplayLeft
 14499  1DB2  31A1  2154  319D   	line	266
 14500                           	
 14501                           l4627:	
 14502  1DB5                     ;main.c: 266:    _delay((unsigned long)((20)*(4000000/4000.0)));
 14503                           	opt asmopt_push
 14504                           opt asmopt_off
 14505                           movlw	26
 14506  1DB5  301A               	movlb 0	; select bank0
 14507  1DB6  0140               movwf	((??_menuInput+0)+0),f
 14508  1DB7  00AC               	movlw	248
 14509  1DB8  30F8               u7207:
 14510  1DB9                     decfsz	wreg
 14511  1DB9  0B89               	goto	u7207
 14512  1DBA  2DB9               	decfsz	((??_menuInput+0)+0),f
 14513  1DBB  0BAC               	goto	u7207
 14514  1DBC  2DB9               	nop
 14515  1DBD  0000               opt asmopt_pop
 14516                           
 14517                           	line	267
 14518                           	
 14519                           l4629:	
 14520  1DBE                     ;main.c: 267:   }
 14521                           	movlw	low(01h)
 14522  1DBE  3001               	movlb 0	; select bank0
 14523  1DBF  0140               	movwf	(??_menuInput+0)+0
 14524  1DC0  00AC               	movf	(??_menuInput+0)+0,w
 14525  1DC1  082C               	addwf	(menuInput@n),f
 14526  1DC2  07B0               	
 14527                           l4631:	
 14528  1DC3                     	movlw	low(0Ch)
 14529  1DC3  300C               	subwf	(menuInput@n),w
 14530  1DC4  0230               	skipc
 14531  1DC5  1C03               	goto	u6511
 14532  1DC6  2DC8               	goto	u6510
 14533  1DC7  2DC9               u6511:
 14534  1DC8                     	goto	l4625
 14535  1DC8  2DB2               u6510:
 14536  1DC9                     	goto	l4653
 14537  1DC9  2E04               	
 14538                           l247:	
 14539  1DCA                     	line	268
 14540                           ;main.c: 268:  }
 14541                           	goto	l4653
 14542  1DCA  2E04               	line	269
 14543                           ;main.c: 269:  else if ((dir == ROT_CCW) && (*page > 0)) {
 14544                           	
 14545                           l245:	
 14546  1DCB                     	
 14547                           l4633:	
 14548  1DCB                     		movlw	2
 14549  1DCB  3002               	movlb 0	; select bank0
 14550  1DCC  0140               	xorwf	((menuInput@dir)),w
 14551  1DCD  062E               	btfss	status,2
 14552  1DCE  1D03               	goto	u6521
 14553  1DCF  2DD1               	goto	u6520
 14554  1DD0  2DD2               u6521:
 14555  1DD1                     	goto	l4653
 14556  1DD1  2E04               u6520:
 14557  1DD2                     	
 14558                           l4635:	
 14559  1DD2                     	movf	(menuInput@page),w
 14560  1DD2  0831               	movwf	fsr1l
 14561  1DD3  0086               	movlw 1	; select bank2/3
 14562  1DD4  3001               	movwf fsr1h	
 14563  1DD5  0087               	
 14564                           	movf	(indf1),w
 14565  1DD6  0801               	btfsc	status,2
 14566  1DD7  1903               	goto	u6531
 14567  1DD8  2DDA               	goto	u6530
 14568  1DD9  2DDB               u6531:
 14569  1DDA                     	goto	l4653
 14570  1DDA  2E04               u6530:
 14571  1DDB                     	line	270
 14572                           	
 14573                           l4637:	
 14574  1DDB                     ;main.c: 270:   (*page)--;
 14575                           	movf	(menuInput@page),w
 14576  1DDB  0831               	movwf	fsr1l
 14577  1DDC  0086               	movlw 1	; select bank2/3
 14578  1DDD  3001               	movwf fsr1h	
 14579  1DDE  0087               	
 14580                           	movlw	01h
 14581  1DDF  3001               	subwf	indf1,f
 14582  1DE0  0281               	line	271
 14583                           	
 14584                           l4639:	
 14585  1DE1                     ;main.c: 271:   for(n = 0; n < 12; n++) {
 14586                           	clrf	(menuInput@n)
 14587  1DE1  01B0               	
 14588                           l4641:	
 14589  1DE2                     	movlw	low(0Ch)
 14590  1DE2  300C               	subwf	(menuInput@n),w
 14591  1DE3  0230               	skipc
 14592  1DE4  1C03               	goto	u6541
 14593  1DE5  2DE7               	goto	u6540
 14594  1DE6  2DE8               u6541:
 14595  1DE7                     	goto	l4645
 14596  1DE7  2DEA               u6540:
 14597  1DE8                     	goto	l4653
 14598  1DE8  2E04               	
 14599                           l4643:	
 14600  1DE9                     	goto	l4653
 14601  1DE9  2E04               	
 14602                           l250:	
 14603  1DEA                     	line	272
 14604                           	
 14605                           l4645:	
 14606  1DEA                     ;main.c: 272:    OLED_scrollDisplayRight();
 14607                           	fcall	_OLED_scrollDisplayRight
 14608  1DEA  31A1  2159  319D   	line	273
 14609                           	
 14610                           l4647:	
 14611  1DED                     ;main.c: 273:    _delay((unsigned long)((20)*(4000000/4000.0)));
 14612                           	opt asmopt_push
 14613                           opt asmopt_off
 14614                           movlw	26
 14615  1DED  301A               	movlb 0	; select bank0
 14616  1DEE  0140               movwf	((??_menuInput+0)+0),f
 14617  1DEF  00AC               	movlw	248
 14618  1DF0  30F8               u7217:
 14619  1DF1                     decfsz	wreg
 14620  1DF1  0B89               	goto	u7217
 14621  1DF2  2DF1               	decfsz	((??_menuInput+0)+0),f
 14622  1DF3  0BAC               	goto	u7217
 14623  1DF4  2DF1               	nop
 14624  1DF5  0000               opt asmopt_pop
 14625                           
 14626                           	line	274
 14627                           	
 14628                           l4649:	
 14629  1DF6                     ;main.c: 274:   }
 14630                           	movlw	low(01h)
 14631  1DF6  3001               	movlb 0	; select bank0
 14632  1DF7  0140               	movwf	(??_menuInput+0)+0
 14633  1DF8  00AC               	movf	(??_menuInput+0)+0,w
 14634  1DF9  082C               	addwf	(menuInput@n),f
 14635  1DFA  07B0               	
 14636                           l4651:	
 14637  1DFB                     	movlw	low(0Ch)
 14638  1DFB  300C               	subwf	(menuInput@n),w
 14639  1DFC  0230               	skipc
 14640  1DFD  1C03               	goto	u6551
 14641  1DFE  2E00               	goto	u6550
 14642  1DFF  2E01               u6551:
 14643  1E00                     	goto	l4645
 14644  1E00  2DEA               u6550:
 14645  1E01                     	goto	l4653
 14646  1E01  2E04               	
 14647                           l251:	
 14648  1E02                     	goto	l4653
 14649  1E02  2E04               	line	275
 14650                           ;main.c: 275:  }
 14651                           	
 14652                           l249:	
 14653  1E03                     	goto	l4653
 14654  1E03  2E04               	
 14655                           l248:	
 14656  1E04                     	line	276
 14657                           	
 14658                           l4653:	
 14659  1E04                     ;main.c: 276:  if (pb == PB_SHORT) {
 14660                           		decf	((menuInput@pb)),w
 14661  1E04  032F               	btfss	status,2
 14662  1E05  1D03               	goto	u6561
 14663  1E06  2E08               	goto	u6560
 14664  1E07  2E09               u6561:
 14665  1E08                     	goto	l4661
 14666  1E08  2E1A               u6560:
 14667  1E09                     	line	277
 14668                           	
 14669                           l4655:	
 14670  1E09                     ;main.c: 277:   *menu = pbShort;
 14671                           	movf	(menuInput@pbShort),w
 14672  1E09  0829               	movwf	(??_menuInput+0)+0
 14673  1E0A  00AC               	movf	(menuInput@menu),w
 14674  1E0B  0828               	movwf	fsr1l
 14675  1E0C  0086               	movlw 1	; select bank2/3
 14676  1E0D  3001               	movwf fsr1h	
 14677  1E0E  0087               	
 14678                           	movf	(??_menuInput+0)+0,w
 14679  1E0F  082C               	movwf	indf1
 14680  1E10  0081               	line	278
 14681                           	
 14682                           l4657:	
 14683  1E11                     ;main.c: 278:   *page = 0;
 14684                           	movf	(menuInput@page),w
 14685  1E11  0831               	movwf	fsr1l
 14686  1E12  0086               	movlw 1	; select bank2/3
 14687  1E13  3001               	movwf fsr1h	
 14688  1E14  0087               	
 14689                           	clrf	indf1
 14690  1E15  0181               	line	279
 14691                           	
 14692                           l4659:	
 14693  1E16                     ;main.c: 279:   OLED_returnHome();
 14694                           	fcall	_OLED_returnHome
 14695  1E16  31A1  214F  319D   	line	280
 14696                           ;main.c: 280:  } else if (pb == PB_LONG) {
 14697                           	goto	l4669
 14698  1E19  2E33               	
 14699                           l252:	
 14700  1E1A                     	
 14701                           l4661:	
 14702  1E1A                     		movlw	2
 14703  1E1A  3002               	movlb 0	; select bank0
 14704  1E1B  0140               	xorwf	((menuInput@pb)),w
 14705  1E1C  062F               	btfss	status,2
 14706  1E1D  1D03               	goto	u6571
 14707  1E1E  2E20               	goto	u6570
 14708  1E1F  2E21               u6571:
 14709  1E20                     	goto	l4669
 14710  1E20  2E33               u6570:
 14711  1E21                     	line	281
 14712                           	
 14713                           l4663:	
 14714  1E21                     ;main.c: 281:   *menu = pbLong;
 14715                           	movf	(menuInput@pbLong),w
 14716  1E21  082A               	movwf	(??_menuInput+0)+0
 14717  1E22  00AC               	movf	(menuInput@menu),w
 14718  1E23  0828               	movwf	fsr1l
 14719  1E24  0086               	movlw 1	; select bank2/3
 14720  1E25  3001               	movwf fsr1h	
 14721  1E26  0087               	
 14722                           	movf	(??_menuInput+0)+0,w
 14723  1E27  082C               	movwf	indf1
 14724  1E28  0081               	line	282
 14725                           	
 14726                           l4665:	
 14727  1E29                     ;main.c: 282:   *page = 0;
 14728                           	movf	(menuInput@page),w
 14729  1E29  0831               	movwf	fsr1l
 14730  1E2A  0086               	movlw 1	; select bank2/3
 14731  1E2B  3001               	movwf fsr1h	
 14732  1E2C  0087               	
 14733                           	clrf	indf1
 14734  1E2D  0181               	line	283
 14735                           	
 14736                           l4667:	
 14737  1E2E                     ;main.c: 283:   OLED_returnHome();
 14738                           	fcall	_OLED_returnHome
 14739  1E2E  31A1  214F  319D   	goto	l4669
 14740  1E31  2E33               	line	284
 14741                           ;main.c: 284:  }
 14742                           	
 14743                           l254:	
 14744  1E32                     	goto	l4669
 14745  1E32  2E33               	
 14746                           l253:	
 14747  1E33                     	line	285
 14748                           	
 14749                           l4669:	
 14750  1E33                     ;main.c: 285:  PIE0bits.IOCIE = 1;
 14751                           	movlb 14	; select bank14
 14752  1E33  014E               	bsf	(1814)^0700h,4	;volatile
 14753  1E34  1616               	line	286
 14754                           	
 14755                           l255:	
 14756  1E35                     	return
 14757  1E35  0008               	opt stack 0
 14758                           GLOBAL	__end_of_menuInput
 14759                           	__end_of_menuInput:
 14760  1E36                     	signat	_menuInput,24697
 14761                           	global	_getRotDir
 14762                           
 14763 ;; *************** function _getRotDir *****************
 14764 ;; Defined at:
 14765 ;;		line 288 in file "main.c"
 14766 ;; Parameters:    Size  Location     Type
 14767 ;;		None
 14768 ;; Auto vars:     Size  Location     Type
 14769 ;;  ret             1    1[BANK0 ] enum E7836
 14770 ;; Return value:  Size  Location     Type
 14771 ;;                  1    wreg      enum E7836
 14772 ;; Registers used:
 14773 ;;		wreg, status,2
 14774 ;; Tracked objects:
 14775 ;;		On entry : 0/0
 14776 ;;		On exit  : 0/0
 14777 ;;		Unchanged: 0/0
 14778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14780 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14781 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14782 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14783 ;;Total ram usage:        2 bytes
 14784 ;; Hardware stack levels used:    1
 14785 ;; Hardware stack levels required when called:    3
 14786 ;; This function calls:
 14787 ;;		Nothing
 14788 ;; This function is called by:
 14789 ;;		_menuInput
 14790 ;; This function uses a non-reentrant model
 14791 ;;
 14792                           psect	text32,local,class=CODE,delta=2,merge=1,group=0
 14793                           	line	288
 14794                           global __ptext32
 14795                           __ptext32:	;psect for function _getRotDir
 14796  1001                     psect	text32
 14797                           	file	"main.c"
 14798                           	line	288
 14799                           	global	__size_of_getRotDir
 14800                           	__size_of_getRotDir	equ	__end_of_getRotDir-_getRotDir
 14801  000C                     	
 14802                           _getRotDir:	
 14803  1001                     ;incstack = 0
 14804                           	opt	stack 10
 14805                           ; Regs used in _getRotDir: [wreg+status,2]
 14806                           	line	290
 14807                           	
 14808                           l4527:	
 14809  1001                     ;main.c: 290:  enum e_direction ret = g_rotDir;
 14810                           	movlb 2	; select bank2
 14811  1001  0142               	movf	(_g_rotDir)^0100h,w	;volatile
 14812  1002  086C               	movlb 0	; select bank0
 14813  1003  0140               	movwf	(??_getRotDir+0)+0
 14814  1004  00A0               	movf	(??_getRotDir+0)+0,w
 14815  1005  0820               	movwf	(getRotDir@ret)
 14816  1006  00A1               	line	291
 14817                           	
 14818                           l4529:	
 14819  1007                     ;main.c: 291:  g_rotDir = ROT_STOP;
 14820                           	movlb 2	; select bank2
 14821  1007  0142               	clrf	(_g_rotDir)^0100h	;volatile
 14822  1008  01EC               	line	292
 14823                           	
 14824                           l4531:	
 14825  1009                     ;main.c: 292:  return ret;
 14826                           	movlb 0	; select bank0
 14827  1009  0140               	movf	(getRotDir@ret),w
 14828  100A  0821               	goto	l258
 14829  100B  280C               	
 14830                           l4533:	
 14831  100C                     	line	293
 14832                           	
 14833                           l258:	
 14834  100C                     	return
 14835  100C  0008               	opt stack 0
 14836                           GLOBAL	__end_of_getRotDir
 14837                           	__end_of_getRotDir:
 14838  100D                     	signat	_getRotDir,89
 14839                           	global	_getPB
 14840                           
 14841 ;; *************** function _getPB *****************
 14842 ;; Defined at:
 14843 ;;		line 295 in file "main.c"
 14844 ;; Parameters:    Size  Location     Type
 14845 ;;		None
 14846 ;; Auto vars:     Size  Location     Type
 14847 ;;  ret             1    1[BANK0 ] enum E7840
 14848 ;; Return value:  Size  Location     Type
 14849 ;;                  1    wreg      enum E7840
 14850 ;; Registers used:
 14851 ;;		wreg, status,2
 14852 ;; Tracked objects:
 14853 ;;		On entry : 0/0
 14854 ;;		On exit  : 0/0
 14855 ;;		Unchanged: 0/0
 14856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14858 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14859 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14860 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14861 ;;Total ram usage:        2 bytes
 14862 ;; Hardware stack levels used:    1
 14863 ;; Hardware stack levels required when called:    3
 14864 ;; This function calls:
 14865 ;;		Nothing
 14866 ;; This function is called by:
 14867 ;;		_showMenu
 14868 ;;		_menuInput
 14869 ;; This function uses a non-reentrant model
 14870 ;;
 14871                           psect	text33,local,class=CODE,delta=2,merge=1,group=0
 14872                           	line	295
 14873                           global __ptext33
 14874                           __ptext33:	;psect for function _getPB
 14875  218A                     psect	text33
 14876                           	file	"main.c"
 14877                           	line	295
 14878                           	global	__size_of_getPB
 14879                           	__size_of_getPB	equ	__end_of_getPB-_getPB
 14880  000C                     	
 14881                           _getPB:	
 14882  218A                     ;incstack = 0
 14883                           	opt	stack 10
 14884                           ; Regs used in _getPB: [wreg+status,2]
 14885                           	line	297
 14886                           	
 14887                           l4519:	
 14888  218A                     ;main.c: 297:  enum e_buttonPress ret = g_pbState;
 14889                           	movlb 2	; select bank2
 14890  218A  0142               	movf	(_g_pbState)^0100h,w	;volatile
 14891  218B  086B               	movlb 0	; select bank0
 14892  218C  0140               	movwf	(??_getPB+0)+0
 14893  218D  00A0               	movf	(??_getPB+0)+0,w
 14894  218E  0820               	movwf	(getPB@ret)
 14895  218F  00A1               	line	298
 14896                           	
 14897                           l4521:	
 14898  2190                     ;main.c: 298:  g_pbState = PB_NONE;
 14899                           	movlb 2	; select bank2
 14900  2190  0142               	clrf	(_g_pbState)^0100h	;volatile
 14901  2191  01EB               	line	299
 14902                           	
 14903                           l4523:	
 14904  2192                     ;main.c: 299:  return ret;
 14905                           	movlb 0	; select bank0
 14906  2192  0140               	movf	(getPB@ret),w
 14907  2193  0821               	goto	l261
 14908  2194  2995               	
 14909                           l4525:	
 14910  2195                     	line	300
 14911                           	
 14912                           l261:	
 14913  2195                     	return
 14914  2195  0008               	opt stack 0
 14915                           GLOBAL	__end_of_getPB
 14916                           	__end_of_getPB:
 14917  2196                     	signat	_getPB,89
 14918                           	global	_OLED_scrollDisplayRight
 14919                           
 14920 ;; *************** function _OLED_scrollDisplayRight *****************
 14921 ;; Defined at:
 14922 ;;		line 133 in file "oled.c"
 14923 ;; Parameters:    Size  Location     Type
 14924 ;;		None
 14925 ;; Auto vars:     Size  Location     Type
 14926 ;;		None
 14927 ;; Return value:  Size  Location     Type
 14928 ;;                  1    wreg      void 
 14929 ;; Registers used:
 14930 ;;		wreg, status,2, status,0, pclath, cstack
 14931 ;; Tracked objects:
 14932 ;;		On entry : 0/0
 14933 ;;		On exit  : 0/0
 14934 ;;		Unchanged: 0/0
 14935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14940 ;;Total ram usage:        0 bytes
 14941 ;; Hardware stack levels used:    1
 14942 ;; Hardware stack levels required when called:    7
 14943 ;; This function calls:
 14944 ;;		_OLED_command
 14945 ;; This function is called by:
 14946 ;;		_menuInput
 14947 ;; This function uses a non-reentrant model
 14948 ;;
 14949                           psect	text34,local,class=CODE,delta=2,merge=1,group=0
 14950                           	file	"oled.c"
 14951                           	line	133
 14952                           global __ptext34
 14953                           __ptext34:	;psect for function _OLED_scrollDisplayRight
 14954  2159                     psect	text34
 14955                           	file	"oled.c"
 14956                           	line	133
 14957                           	global	__size_of_OLED_scrollDisplayRight
 14958                           	__size_of_OLED_scrollDisplayRight	equ	__end_of_OLED_scrollDisplayRight-_OLED_scrollDisp
                                 layRight
 14959  0005                     	
 14960                           _OLED_scrollDisplayRight:	
 14961  2159                     ;incstack = 0
 14962                           	opt	stack 6
 14963                           ; Regs used in _OLED_scrollDisplayRight: [wreg+status,2+status,0+pclath+cstack]
 14964                           	line	135
 14965                           	
 14966                           l4537:	
 14967  2159                     ;oled.c: 135:     OLED_command(0x10 | 0x08 | 0x04);
 14968                           	movlw	low(01Ch)
 14969  2159  301C               	fcall	_OLED_command
 14970  215A  31A1  2173  31A1   	line	136
 14971                           	
 14972                           l357:	
 14973  215D                     	return
 14974  215D  0008               	opt stack 0
 14975                           GLOBAL	__end_of_OLED_scrollDisplayRight
 14976                           	__end_of_OLED_scrollDisplayRight:
 14977  215E                     	signat	_OLED_scrollDisplayRight,89
 14978                           	global	_OLED_scrollDisplayLeft
 14979                           
 14980 ;; *************** function _OLED_scrollDisplayLeft *****************
 14981 ;; Defined at:
 14982 ;;		line 128 in file "oled.c"
 14983 ;; Parameters:    Size  Location     Type
 14984 ;;		None
 14985 ;; Auto vars:     Size  Location     Type
 14986 ;;		None
 14987 ;; Return value:  Size  Location     Type
 14988 ;;                  1    wreg      void 
 14989 ;; Registers used:
 14990 ;;		wreg, status,2, status,0, pclath, cstack
 14991 ;; Tracked objects:
 14992 ;;		On entry : 0/0
 14993 ;;		On exit  : 0/0
 14994 ;;		Unchanged: 0/0
 14995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15000 ;;Total ram usage:        0 bytes
 15001 ;; Hardware stack levels used:    1
 15002 ;; Hardware stack levels required when called:    7
 15003 ;; This function calls:
 15004 ;;		_OLED_command
 15005 ;; This function is called by:
 15006 ;;		_menuInput
 15007 ;; This function uses a non-reentrant model
 15008 ;;
 15009                           psect	text35,local,class=CODE,delta=2,merge=1,group=0
 15010                           	line	128
 15011                           global __ptext35
 15012                           __ptext35:	;psect for function _OLED_scrollDisplayLeft
 15013  2154                     psect	text35
 15014                           	file	"oled.c"
 15015                           	line	128
 15016                           	global	__size_of_OLED_scrollDisplayLeft
 15017                           	__size_of_OLED_scrollDisplayLeft	equ	__end_of_OLED_scrollDisplayLeft-_OLED_scrollDispla
                                 yLeft
 15018  0005                     	
 15019                           _OLED_scrollDisplayLeft:	
 15020  2154                     ;incstack = 0
 15021                           	opt	stack 6
 15022                           ; Regs used in _OLED_scrollDisplayLeft: [wreg+status,2+status,0+pclath+cstack]
 15023                           	line	130
 15024                           	
 15025                           l4535:	
 15026  2154                     ;oled.c: 130:     OLED_command(0x10 | 0x08 | 0x00);
 15027                           	movlw	low(018h)
 15028  2154  3018               	fcall	_OLED_command
 15029  2155  31A1  2173  31A1   	line	131
 15030                           	
 15031                           l354:	
 15032  2158                     	return
 15033  2158  0008               	opt stack 0
 15034                           GLOBAL	__end_of_OLED_scrollDisplayLeft
 15035                           	__end_of_OLED_scrollDisplayLeft:
 15036  2159                     	signat	_OLED_scrollDisplayLeft,89
 15037                           	global	_OLED_returnHome
 15038                           
 15039 ;; *************** function _OLED_returnHome *****************
 15040 ;; Defined at:
 15041 ;;		line 163 in file "oled.c"
 15042 ;; Parameters:    Size  Location     Type
 15043 ;;		None
 15044 ;; Auto vars:     Size  Location     Type
 15045 ;;		None
 15046 ;; Return value:  Size  Location     Type
 15047 ;;                  1    wreg      void 
 15048 ;; Registers used:
 15049 ;;		wreg, status,2, status,0, pclath, cstack
 15050 ;; Tracked objects:
 15051 ;;		On entry : 0/0
 15052 ;;		On exit  : 0/0
 15053 ;;		Unchanged: 0/0
 15054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15059 ;;Total ram usage:        0 bytes
 15060 ;; Hardware stack levels used:    1
 15061 ;; Hardware stack levels required when called:    7
 15062 ;; This function calls:
 15063 ;;		_OLED_command
 15064 ;; This function is called by:
 15065 ;;		_main
 15066 ;;		_menuInput
 15067 ;; This function uses a non-reentrant model
 15068 ;;
 15069                           psect	text36,local,class=CODE,delta=2,merge=1,group=0
 15070                           	line	163
 15071                           global __ptext36
 15072                           __ptext36:	;psect for function _OLED_returnHome
 15073  214F                     psect	text36
 15074                           	file	"oled.c"
 15075                           	line	163
 15076                           	global	__size_of_OLED_returnHome
 15077                           	__size_of_OLED_returnHome	equ	__end_of_OLED_returnHome-_OLED_returnHome
 15078  0005                     	
 15079                           _OLED_returnHome:	
 15080  214F                     ;incstack = 0
 15081                           	opt	stack 6
 15082                           ; Regs used in _OLED_returnHome: [wreg+status,2+status,0+pclath+cstack]
 15083                           	line	164
 15084                           	
 15085                           l4517:	
 15086  214F                     ;oled.c: 164:     OLED_command(0x02);
 15087                           	movlw	low(02h)
 15088  214F  3002               	fcall	_OLED_command
 15089  2150  31A1  2173  31A1   	line	165
 15090                           	
 15091                           l379:	
 15092  2153                     	return
 15093  2153  0008               	opt stack 0
 15094                           GLOBAL	__end_of_OLED_returnHome
 15095                           	__end_of_OLED_returnHome:
 15096  2154                     	signat	_OLED_returnHome,89
 15097                           	global	_OLED_print_xy
 15098                           
 15099 ;; *************** function _OLED_print_xy *****************
 15100 ;; Defined at:
 15101 ;;		line 153 in file "oled.c"
 15102 ;; Parameters:    Size  Location     Type
 15103 ;;  col             1    wreg     unsigned char 
 15104 ;;  row             1    7[BANK0 ] unsigned char 
 15105 ;;  s               2    8[BANK0 ] PTR unsigned char 
 15106 ;;		 -> STR_7(49), STR_3(49), showMenu@s(61), STR_1(13), 
 15107 ;; Auto vars:     Size  Location     Type
 15108 ;;  col             1   15[BANK0 ] unsigned char 
 15109 ;;  row_offsets     4   11[BANK0 ] unsigned char [4]
 15110 ;; Return value:  Size  Location     Type
 15111 ;;                  1    wreg      void 
 15112 ;; Registers used:
 15113 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15114 ;; Tracked objects:
 15115 ;;		On entry : 0/0
 15116 ;;		On exit  : 0/0
 15117 ;;		Unchanged: 0/0
 15118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15119 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15120 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15121 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15122 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15123 ;;Total ram usage:        9 bytes
 15124 ;; Hardware stack levels used:    1
 15125 ;; Hardware stack levels required when called:    7
 15126 ;; This function calls:
 15127 ;;		_OLED_command
 15128 ;;		_OLED_write
 15129 ;; This function is called by:
 15130 ;;		_showMenu
 15131 ;; This function uses a non-reentrant model
 15132 ;;
 15133                           psect	text37,local,class=CODE,delta=2,merge=1,group=0
 15134                           	line	153
 15135                           global __ptext37
 15136                           __ptext37:	;psect for function _OLED_print_xy
 15137  2445                     psect	text37
 15138                           	file	"oled.c"
 15139                           	line	153
 15140                           	global	__size_of_OLED_print_xy
 15141                           	__size_of_OLED_print_xy	equ	__end_of_OLED_print_xy-_OLED_print_xy
 15142  0038                     	
 15143                           _OLED_print_xy:	
 15144  2445                     ;incstack = 0
 15145                           	opt	stack 7
 15146                           ; Regs used in _OLED_print_xy: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15147                           ;OLED_print_xy@col stored from wreg
 15148                           	movlb 0	; select bank0
 15149  2445  0140               	movwf	(OLED_print_xy@col)
 15150  2446  00AF               	line	154
 15151                           	
 15152                           l4587:	
 15153  2447                     ;oled.c: 154:     uint8_t row_offsets[] = { 0x00, 0x40, 0x14, 0x54 };
 15154                           	movlb 4	; select bank4
 15155  2447  0144               	movf	(OLED_print_xy@F7353+3)^0200h,w
 15156  2448  0867               	movlb 0	; select bank0
 15157  2449  0140               	movwf	(OLED_print_xy@row_offsets+3)
 15158  244A  00AE               	movlb 4	; select bank4
 15159  244B  0144               	movf	(OLED_print_xy@F7353+2)^0200h,w
 15160  244C  0866               	movlb 0	; select bank0
 15161  244D  0140               	movwf	(OLED_print_xy@row_offsets+2)
 15162  244E  00AD               	movlb 4	; select bank4
 15163  244F  0144               	movf	(OLED_print_xy@F7353+1)^0200h,w
 15164  2450  0865               	movlb 0	; select bank0
 15165  2451  0140               	movwf	(OLED_print_xy@row_offsets+1)
 15166  2452  00AC               	movlb 4	; select bank4
 15167  2453  0144               	movf	(OLED_print_xy@F7353)^0200h,w
 15168  2454  0864               	movlb 0	; select bank0
 15169  2455  0140               	movwf	(OLED_print_xy@row_offsets)
 15170  2456  00AB               
 15171                           	line	156
 15172                           	
 15173                           l4589:	
 15174  2457                     ;oled.c: 156:     OLED_command(0x80 | (col + row_offsets[row]));
 15175                           	movf	(OLED_print_xy@row),w
 15176  2457  0827               	addlw	low(OLED_print_xy@row_offsets|((0x0)<<8))&0ffh
 15177  2458  3E2B               	movwf	fsr1l
 15178  2459  0086               	clrf fsr1h	
 15179  245A  0187               	
 15180                           	movf	indf1,w
 15181  245B  0801               	addwf	(OLED_print_xy@col),w
 15182  245C  072F               	iorlw	080h
 15183  245D  3880               	fcall	_OLED_command
 15184  245E  31A1  2173  31A4   	line	157
 15185                           ;oled.c: 157:     while (*s != (char)((void*)0))
 15186                           	goto	l4595
 15187  2461  2C71               	
 15188                           l374:	
 15189  2462                     	line	159
 15190                           	
 15191                           l4591:	
 15192  2462                     ;oled.c: 158:     {;oled.c: 159:         OLED_write(*s++);
 15193                           	movlb 0	; select bank0
 15194  2462  0140               	movf	(OLED_print_xy@s),w
 15195  2463  0828               	movwf	fsr0l
 15196  2464  0084               	movf	((OLED_print_xy@s+1)),w
 15197  2465  0829               	movwf	fsr0h
 15198  2466  0085               	movf	indf0,w ;code access
 15199  2467  0800               	fcall	_OLED_write
 15200  2468  31A1  217E  31A4   	
 15201                           l4593:	
 15202  246B                     	movlw	01h
 15203  246B  3001               	movlb 0	; select bank0
 15204  246C  0140               	addwf	(OLED_print_xy@s),f
 15205  246D  07A8               	movlw	0
 15206  246E  3000               	addwfc	(OLED_print_xy@s+1),f
 15207  246F  3DA9               	goto	l4595
 15208  2470  2C71               	line	160
 15209                           ;oled.c: 160:     }
 15210                           	
 15211                           l373:	
 15212  2471                     	line	157
 15213                           	
 15214                           l4595:	
 15215  2471                     ;oled.c: 157:     while (*s != (char)((void*)0))
 15216                           	movlb 0	; select bank0
 15217  2471  0140               	movf	(OLED_print_xy@s),w
 15218  2472  0828               	movwf	fsr0l
 15219  2473  0084               	movf	((OLED_print_xy@s+1)),w
 15220  2474  0829               	movwf	fsr0h
 15221  2475  0085               	moviw	fsr0++
 15222  2476  0012               	btfss	status,2
 15223  2477  1D03               	goto	u6471
 15224  2478  2C7A               	goto	u6470
 15225  2479  2C7B               u6471:
 15226  247A                     	goto	l4591
 15227  247A  2C62               u6470:
 15228  247B                     	goto	l376
 15229  247B  2C7C               	
 15230                           l375:	
 15231  247C                     	line	161
 15232                           	
 15233                           l376:	
 15234  247C                     	return
 15235  247C  0008               	opt stack 0
 15236                           GLOBAL	__end_of_OLED_print_xy
 15237                           	__end_of_OLED_print_xy:
 15238  247D                     	signat	_OLED_print_xy,12409
 15239                           	global	_OLED_write
 15240                           
 15241 ;; *************** function _OLED_write *****************
 15242 ;; Defined at:
 15243 ;;		line 74 in file "oled.c"
 15244 ;; Parameters:    Size  Location     Type
 15245 ;;  value           1    wreg     unsigned char 
 15246 ;; Auto vars:     Size  Location     Type
 15247 ;;  value           1    6[BANK0 ] unsigned char 
 15248 ;; Return value:  Size  Location     Type
 15249 ;;                  1    wreg      void 
 15250 ;; Registers used:
 15251 ;;		wreg, status,2, status,0, pclath, cstack
 15252 ;; Tracked objects:
 15253 ;;		On entry : 0/0
 15254 ;;		On exit  : 0/0
 15255 ;;		Unchanged: 0/0
 15256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15258 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15260 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15261 ;;Total ram usage:        1 bytes
 15262 ;; Hardware stack levels used:    1
 15263 ;; Hardware stack levels required when called:    6
 15264 ;; This function calls:
 15265 ;;		_OLED_send
 15266 ;;		_OLED_waitForReady
 15267 ;; This function is called by:
 15268 ;;		_OLED_print_xy
 15269 ;;		_OLED_print
 15270 ;; This function uses a non-reentrant model
 15271 ;;
 15272                           psect	text38,local,class=CODE,delta=2,merge=1,group=0
 15273                           	line	74
 15274                           global __ptext38
 15275                           __ptext38:	;psect for function _OLED_write
 15276  217E                     psect	text38
 15277                           	file	"oled.c"
 15278                           	line	74
 15279                           	global	__size_of_OLED_write
 15280                           	__size_of_OLED_write	equ	__end_of_OLED_write-_OLED_write
 15281  000C                     	
 15282                           _OLED_write:	
 15283  217E                     ;incstack = 0
 15284                           	opt	stack 7
 15285                           ; Regs used in _OLED_write: [wreg+status,2+status,0+pclath+cstack]
 15286                           ;OLED_write@value stored from wreg
 15287                           	movlb 0	; select bank0
 15288  217E  0140               	movwf	(OLED_write@value)
 15289  217F  00A6               	line	76
 15290                           	
 15291                           l4539:	
 15292  2180                     ;oled.c: 74: void OLED_write(uint8_t value);oled.c: 75: {;oled.c: 76:     OLED_send(valu
                                 e, 1);
 15293                           	clrf	(OLED_send@mode)
 15294  2180  01A3               	incf	(OLED_send@mode),f
 15295  2181  0AA3               	movf	(OLED_write@value),w
 15296  2182  0826               	fcall	_OLED_send
 15297  2183  31A1  21C1  31A1   	line	77
 15298                           ;oled.c: 77:     OLED_waitForReady();
 15299                           	fcall	_OLED_waitForReady
 15300  2186  31A2  2250  31A1   	line	78
 15301                           	
 15302                           l348:	
 15303  2189                     	return
 15304  2189  0008               	opt stack 0
 15305                           GLOBAL	__end_of_OLED_write
 15306                           	__end_of_OLED_write:
 15307  218A                     	signat	_OLED_write,4217
 15308                           	global	_initialize
 15309                           
 15310 ;; *************** function _initialize *****************
 15311 ;; Defined at:
 15312 ;;		line 306 in file "main.c"
 15313 ;; Parameters:    Size  Location     Type
 15314 ;;		None
 15315 ;; Auto vars:     Size  Location     Type
 15316 ;;		None
 15317 ;; Return value:  Size  Location     Type
 15318 ;;                  1    wreg      void 
 15319 ;; Registers used:
 15320 ;;		wreg, status,2, status,0
 15321 ;; Tracked objects:
 15322 ;;		On entry : 0/0
 15323 ;;		On exit  : 0/0
 15324 ;;		Unchanged: 0/0
 15325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15330 ;;Total ram usage:        0 bytes
 15331 ;; Hardware stack levels used:    1
 15332 ;; Hardware stack levels required when called:    3
 15333 ;; This function calls:
 15334 ;;		Nothing
 15335 ;; This function is called by:
 15336 ;;		_main
 15337 ;; This function uses a non-reentrant model
 15338 ;;
 15339                           psect	text39,local,class=CODE,delta=2,merge=1,group=0
 15340                           	file	"main.c"
 15341                           	line	306
 15342                           global __ptext39
 15343                           __ptext39:	;psect for function _initialize
 15344  253A                     psect	text39
 15345                           	file	"main.c"
 15346                           	line	306
 15347                           	global	__size_of_initialize
 15348                           	__size_of_initialize	equ	__end_of_initialize-_initialize
 15349  004C                     	
 15350                           _initialize:	
 15351  253A                     ;incstack = 0
 15352                           	opt	stack 12
 15353                           ; Regs used in _initialize: [wreg+status,2+status,0]
 15354                           	line	308
 15355                           	
 15356                           l4731:	
 15357  253A                     ;main.c: 308:  OSCFRQ = 0b00000010;
 15358                           	movlw	low(02h)
 15359  253A  3002               	movlb 17	; select bank17
 15360  253B  0151               	movwf	(2195)^0880h	;volatile
 15361  253C  0093               	line	309
 15362                           ;main.c: 309:  OSCCON1 = 0b01100000;
 15363                           	movlw	low(060h)
 15364  253D  3060               	movwf	(2189)^0880h	;volatile
 15365  253E  008D               	line	310
 15366                           ;main.c: 310:  while (!OSCCON3bits.ORDY);
 15367                           	goto	l264
 15368  253F  2D40               	
 15369                           l265:	
 15370  2540                     	
 15371                           l264:	
 15372  2540                     	btfss	(2191)^0880h,4	;volatile
 15373  2540  1E0F               	goto	u6751
 15374  2541  2D43               	goto	u6750
 15375  2542  2D44               u6751:
 15376  2543                     	goto	l264
 15377  2543  2D40               u6750:
 15378  2544                     	goto	l4733
 15379  2544  2D45               	
 15380                           l266:	
 15381  2545                     	line	313
 15382                           	
 15383                           l4733:	
 15384  2545                     ;main.c: 313:  RX1DTPPSbits.RX1DTPPS = 0x17;
 15385                           	movlb 61	; select bank61
 15386  2545  017D               	movf	(7883)^01E80h,w	;volatile
 15387  2546  084B               	andlw	not (((1<<6)-1)<<0)
 15388  2547  39C0               	iorlw	(017h & ((1<<6)-1))<<0
 15389  2548  3817               	movwf	(7883)^01E80h	;volatile
 15390  2549  00CB               	line	314
 15391                           	
 15392                           l4735:	
 15393  254A                     ;main.c: 314:  RC6PPS = 0x0F;
 15394                           	movlw	low(0Fh)
 15395  254A  300F               	movlb 62	; select bank62
 15396  254B  017E               	movwf	(7974)^01F00h	;volatile
 15397  254C  00A6               	line	317
 15398                           	
 15399                           l4737:	
 15400  254D                     ;main.c: 317:  ANSELA = 0b01000000;
 15401                           	movlw	low(040h)
 15402  254D  3040               	movwf	(7992)^01F00h	;volatile
 15403  254E  00B8               	line	318
 15404                           	
 15405                           l4739:	
 15406  254F                     ;main.c: 318:  ANSELB = 0b00000000;
 15407                           	clrf	(8003)^01F00h	;volatile
 15408  254F  01C3               	line	319
 15409                           	
 15410                           l4741:	
 15411  2550                     ;main.c: 319:  ANSELC = 0b00000011;
 15412                           	movlw	low(03h)
 15413  2550  3003               	movwf	(8014)^01F00h	;volatile
 15414  2551  00CE               	line	322
 15415                           	
 15416                           l4743:	
 15417  2552                     ;main.c: 322:  TRISA = 0b11110000;
 15418                           	movlw	low(0F0h)
 15419  2552  30F0               	movlb 0	; select bank0
 15420  2553  0140               	movwf	(18)	;volatile
 15421  2554  0092               	line	323
 15422                           	
 15423                           l4745:	
 15424  2555                     ;main.c: 323:  TRISB = 0b00000000;
 15425                           	clrf	(19)	;volatile
 15426  2555  0193               	line	324
 15427                           	
 15428                           l4747:	
 15429  2556                     ;main.c: 324:  TRISC = 0b10000111;
 15430                           	movlw	low(087h)
 15431  2556  3087               	movwf	(20)	;volatile
 15432  2557  0094               	line	327
 15433                           	
 15434                           l4749:	
 15435  2558                     ;main.c: 327:  ADCON0bits.ADON = 1;
 15436                           	movlb 1	; select bank1
 15437  2558  0141               	bsf	(157)^080h,0	;volatile
 15438  2559  141D               	line	328
 15439                           	
 15440                           l4751:	
 15441  255A                     ;main.c: 328:  ADCON1 = 0b11100000;
 15442                           	movlw	low(0E0h)
 15443  255A  30E0               	movwf	(158)^080h	;volatile
 15444  255B  009E               	line	331
 15445                           	
 15446                           l4753:	
 15447  255C                     ;main.c: 331:  T0CON0 = 0b10000000;
 15448                           	movlw	low(080h)
 15449  255C  3080               	movlb 11	; select bank11
 15450  255D  014B               	movwf	(1438)^0580h	;volatile
 15451  255E  009E               	line	332
 15452                           	
 15453                           l4755:	
 15454  255F                     ;main.c: 332:  T0CON1 = 0b01000111;
 15455                           	movlw	low(047h)
 15456  255F  3047               	movwf	(1439)^0580h	;volatile
 15457  2560  009F               	line	333
 15458                           	
 15459                           l4757:	
 15460  2561                     ;main.c: 333:  TMR0 = 178;
 15461                           	movlw	low(0B2h)
 15462  2561  30B2               	movwf	(1436)^0580h	;volatile
 15463  2562  009C               	line	336
 15464                           	
 15465                           l4759:	
 15466  2563                     ;main.c: 336:  T1CON = 0b00110011;
 15467                           	movlw	low(033h)
 15468  2563  3033               	movlb 4	; select bank4
 15469  2564  0144               	movwf	(526)^0200h	;volatile
 15470  2565  008E               	line	337
 15471                           	
 15472                           l4761:	
 15473  2566                     ;main.c: 337:  T1CLK = 0b00000001;
 15474                           	movlw	low(01h)
 15475  2566  3001               	movwf	(529)^0200h	;volatile
 15476  2567  0091               	line	338
 15477                           	
 15478                           l4763:	
 15479  2568                     ;main.c: 338:  TMR1 = 53035;
 15480                           	movlw	0CFh
 15481  2568  30CF               	movwf	(524+1)^0200h	;volatile
 15482  2569  008D               	movlw	02Bh
 15483  256A  302B               	movwf	(524)^0200h	;volatile
 15484  256B  008C               	line	341
 15485                           	
 15486                           l4765:	
 15487  256C                     ;main.c: 341:  PIE0 = 0b00110000;
 15488                           	movlw	low(030h)
 15489  256C  3030               	movlb 14	; select bank14
 15490  256D  014E               	movwf	(1814)^0700h	;volatile
 15491  256E  0096               	line	342
 15492                           	
 15493                           l4767:	
 15494  256F                     ;main.c: 342:  PIE3 = 0b00100000;
 15495                           	movlw	low(020h)
 15496  256F  3020               	movwf	(1817)^0700h	;volatile
 15497  2570  0099               	line	343
 15498                           	
 15499                           l4769:	
 15500  2571                     ;main.c: 343:  PIE4 = 0b00000001;
 15501                           	movlw	low(01h)
 15502  2571  3001               	movwf	(1818)^0700h	;volatile
 15503  2572  009A               	line	344
 15504                           	
 15505                           l4771:	
 15506  2573                     ;main.c: 344:  INTCON = 0b11000000;
 15507                           	movlw	low(0C0h)
 15508  2573  30C0               	movwf	(11)	;volatile
 15509  2574  008B               	line	347
 15510                           	
 15511                           l4773:	
 15512  2575                     ;main.c: 347:  IOCAP = 0b10110000;
 15513                           	movlw	low(0B0h)
 15514  2575  30B0               	movlb 62	; select bank62
 15515  2576  017E               	movwf	(7997)^01F00h	;volatile
 15516  2577  00BD               	line	348
 15517                           	
 15518                           l4775:	
 15519  2578                     ;main.c: 348:  IOCAN = 0b10110000;
 15520                           	movlw	low(0B0h)
 15521  2578  30B0               	movwf	(7998)^01F00h	;volatile
 15522  2579  00BE               	line	349
 15523                           	
 15524                           l4777:	
 15525  257A                     ;main.c: 349:  IOCCN = 0b00000100;
 15526                           	movlw	low(04h)
 15527  257A  3004               	movwf	(8020)^01F00h	;volatile
 15528  257B  00D4               	line	353
 15529                           	
 15530                           l4779:	
 15531  257C                     ;main.c: 353:  BAUD1CON = 0b00001000;
 15532                           	movlw	low(08h)
 15533  257C  3008               	movlb 2	; select bank2
 15534  257D  0142               	movwf	(287)^0100h	;volatile
 15535  257E  009F               	line	354
 15536                           	
 15537                           l4781:	
 15538  257F                     ;main.c: 354:  SPBRGL = 25;
 15539                           	movlw	low(019h)
 15540  257F  3019               	movwf	(283)^0100h	;volatile
 15541  2580  009B               	line	355
 15542                           	
 15543                           l4783:	
 15544  2581                     ;main.c: 355:  RC1STA = 0b10010000;
 15545                           	movlw	low(090h)
 15546  2581  3090               	movwf	(285)^0100h	;volatile
 15547  2582  009D               	line	356
 15548                           	
 15549                           l4785:	
 15550  2583                     ;main.c: 356:  TX1STA = 0b00100000;
 15551                           	movlw	low(020h)
 15552  2583  3020               	movwf	(286)^0100h	;volatile
 15553  2584  009E               	line	357
 15554                           	
 15555                           l267:	
 15556  2585                     	return
 15557  2585  0008               	opt stack 0
 15558                           GLOBAL	__end_of_initialize
 15559                           	__end_of_initialize:
 15560  2586                     	signat	_initialize,89
 15561                           	global	_handleSensorData
 15562                           
 15563 ;; *************** function _handleSensorData *****************
 15564 ;; Defined at:
 15565 ;;		line 203 in file "main.c"
 15566 ;; Parameters:    Size  Location     Type
 15567 ;;		None
 15568 ;; Auto vars:     Size  Location     Type
 15569 ;;		None
 15570 ;; Return value:  Size  Location     Type
 15571 ;;                  1    wreg      void 
 15572 ;; Registers used:
 15573 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15574 ;; Tracked objects:
 15575 ;;		On entry : 0/0
 15576 ;;		On exit  : 0/0
 15577 ;;		Unchanged: 0/0
 15578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15581 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15582 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15583 ;;Total ram usage:        4 bytes
 15584 ;; Hardware stack levels used:    1
 15585 ;; Hardware stack levels required when called:    4
 15586 ;; This function calls:
 15587 ;;		___xxtofl
 15588 ;; This function is called by:
 15589 ;;		_main
 15590 ;; This function uses a non-reentrant model
 15591 ;;
 15592                           psect	text40,local,class=CODE,delta=2,merge=1,group=0
 15593                           	line	203
 15594                           global __ptext40
 15595                           __ptext40:	;psect for function _handleSensorData
 15596  1801                     psect	text40
 15597                           	file	"main.c"
 15598                           	line	203
 15599                           	global	__size_of_handleSensorData
 15600                           	__size_of_handleSensorData	equ	__end_of_handleSensorData-_handleSensorData
 15601  005C                     	
 15602                           _handleSensorData:	
 15603  1801                     ;incstack = 0
 15604                           	opt	stack 11
 15605                           ; Regs used in _handleSensorData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15606                           	line	205
 15607                           	
 15608                           l4849:	
 15609  1801                     ;main.c: 205:  if ((g_dataPacket.header == 0xAA) && (g_dataPacket.status == 1)) {
 15610                           		movlw	170
 15611  1801  30AA               	movlb 4	; select bank4
 15612  1802  0144               	xorwf	((_g_dataPacket)^0200h),w	;volatile
 15613  1803  064E               	btfss	status,2
 15614  1804  1D03               	goto	u6791
 15615  1805  2807               	goto	u6790
 15616  1806  2808               u6791:
 15617  1807                     	goto	l226
 15618  1807  2859               u6790:
 15619  1808                     	
 15620                           l4851:	
 15621  1808                     		decf	(0+(_g_dataPacket)^0200h+02h),w	;volatile
 15622  1808  0350               	btfss	status,2
 15623  1809  1D03               	goto	u6801
 15624  180A  280C               	goto	u6800
 15625  180B  280D               u6801:
 15626  180C                     	goto	l226
 15627  180C  2859               u6800:
 15628  180D                     	line	206
 15629                           	
 15630                           l4853:	
 15631  180D                     ;main.c: 206:   g_tempC = g_dataPacket.tempC;
 15632                           	movlw	low(03h)
 15633  180D  3003               	addlw	low(_g_dataPacket|((0x2)<<8))&0ffh
 15634  180E  3E4E               	movwf	fsr1l
 15635  180F  0086               	movlw 2	; select bank4/5
 15636  1810  3002               	movwf fsr1h	
 15637  1811  0087               	
 15638                           	moviw	[0]fsr1
 15639  1812  3F40               	movwf	(_g_tempC)^0200h
 15640  1813  00C4               	moviw	[1]fsr1
 15641  1814  3F41               	movwf	(_g_tempC+1)^0200h
 15642  1815  00C5               	moviw	[2]fsr1
 15643  1816  3F42               	movwf	(_g_tempC+2)^0200h
 15644  1817  00C6               	moviw	[3]fsr1
 15645  1818  3F43               	movwf	(_g_tempC+3)^0200h
 15646  1819  00C7               	line	207
 15647                           ;main.c: 207:   g_relHum = g_dataPacket.relHum;
 15648                           	movlw	low(07h)
 15649  181A  3007               	addlw	low(_g_dataPacket|((0x2)<<8))&0ffh
 15650  181B  3E4E               	movwf	fsr1l
 15651  181C  0086               	movlw 2	; select bank4/5
 15652  181D  3002               	movwf fsr1h	
 15653  181E  0087               	
 15654                           	moviw	[0]fsr1
 15655  181F  3F40               	movwf	(_g_relHum)^0200h
 15656  1820  00C0               	moviw	[1]fsr1
 15657  1821  3F41               	movwf	(_g_relHum+1)^0200h
 15658  1822  00C1               	moviw	[2]fsr1
 15659  1823  3F42               	movwf	(_g_relHum+2)^0200h
 15660  1824  00C2               	moviw	[3]fsr1
 15661  1825  3F43               	movwf	(_g_relHum+3)^0200h
 15662  1826  00C3               	line	208
 15663                           ;main.c: 208:   g_dewPointC = g_dataPacket.dewPointC;
 15664                           	movlw	low(0Bh)
 15665  1827  300B               	addlw	low(_g_dataPacket|((0x2)<<8))&0ffh
 15666  1828  3E4E               	movwf	fsr1l
 15667  1829  0086               	movlw 2	; select bank4/5
 15668  182A  3002               	movwf fsr1h	
 15669  182B  0087               	
 15670                           	moviw	[0]fsr1
 15671  182C  3F40               	movwf	(_g_dewPointC)^0200h
 15672  182D  00BC               	moviw	[1]fsr1
 15673  182E  3F41               	movwf	(_g_dewPointC+1)^0200h
 15674  182F  00BD               	moviw	[2]fsr1
 15675  1830  3F42               	movwf	(_g_dewPointC+2)^0200h
 15676  1831  00BE               	moviw	[3]fsr1
 15677  1832  3F43               	movwf	(_g_dewPointC+3)^0200h
 15678  1833  00BF               	line	209
 15679                           	
 15680                           l4855:	
 15681  1834                     ;main.c: 209:   g_sensorVersion = g_dataPacket.version;
 15682                           	movf	0+(_g_dataPacket)^0200h+01h,w	;volatile
 15683  1834  084F               	movlb 0	; select bank0
 15684  1835  0140               	movwf	(??_handleSensorData+0)+0
 15685  1836  00AE               	clrf	(??_handleSensorData+0)+0+1
 15686  1837  01AF               	clrf	(??_handleSensorData+0)+0+2
 15687  1838  01B0               	clrf	(??_handleSensorData+0)+0+3
 15688  1839  01B1               	movf	3+(??_handleSensorData+0)+0,w
 15689  183A  0831               	movwf	(___xxtofl@val+3)
 15690  183B  00A3               	movf	2+(??_handleSensorData+0)+0,w
 15691  183C  0830               	movwf	(___xxtofl@val+2)
 15692  183D  00A2               	movf	1+(??_handleSensorData+0)+0,w
 15693  183E  082F               	movwf	(___xxtofl@val+1)
 15694  183F  00A1               	movf	0+(??_handleSensorData+0)+0,w
 15695  1840  082E               	movwf	(___xxtofl@val)
 15696  1841  00A0               
 15697                           	movlw	low(0)
 15698  1842  3000               	fcall	___xxtofl
 15699  1843  319C  2406  3198   	movlb 0	; select bank0
 15700  1846  0140               	movf	(3+(?___xxtofl)),w
 15701  1847  0823               	movlb 4	; select bank4
 15702  1848  0144               	movwf	(_g_sensorVersion+3)^0200h
 15703  1849  00BB               	movlb 0	; select bank0
 15704  184A  0140               	movf	(2+(?___xxtofl)),w
 15705  184B  0822               	movlb 4	; select bank4
 15706  184C  0144               	movwf	(_g_sensorVersion+2)^0200h
 15707  184D  00BA               	movlb 0	; select bank0
 15708  184E  0140               	movf	(1+(?___xxtofl)),w
 15709  184F  0821               	movlb 4	; select bank4
 15710  1850  0144               	movwf	(_g_sensorVersion+1)^0200h
 15711  1851  00B9               	movlb 0	; select bank0
 15712  1852  0140               	movf	(0+(?___xxtofl)),w
 15713  1853  0820               	movlb 4	; select bank4
 15714  1854  0144               	movwf	(_g_sensorVersion)^0200h
 15715  1855  00B8               
 15716                           	line	210
 15717                           	
 15718                           l4857:	
 15719  1856                     ;main.c: 210:   g_status.NOSENSOR = 0;
 15720                           	movlb 3	; select bank3
 15721  1856  0143               	bcf	(_g_status)^0180h,1
 15722  1857  10ED               	line	211
 15723                           ;main.c: 211:  } else {
 15724                           	goto	l228
 15725  1858  285C               	
 15726                           l226:	
 15727  1859                     	line	213
 15728                           ;main.c: 213:   g_status.NOSENSOR = 1;
 15729                           	movlb 3	; select bank3
 15730  1859  0143               	bsf	(_g_status)^0180h,1
 15731  185A  14ED               	goto	l228
 15732  185B  285C               	line	214
 15733                           ;main.c: 214:  }
 15734                           	
 15735                           l227:	
 15736  185C                     	line	215
 15737                           	
 15738                           l228:	
 15739  185C                     	return
 15740  185C  0008               	opt stack 0
 15741                           GLOBAL	__end_of_handleSensorData
 15742                           	__end_of_handleSensorData:
 15743  185D                     	signat	_handleSensorData,89
 15744                           	global	_convertAnalogValues
 15745                           
 15746 ;; *************** function _convertAnalogValues *****************
 15747 ;; Defined at:
 15748 ;;		line 186 in file "main.c"
 15749 ;; Parameters:    Size  Location     Type
 15750 ;;		None
 15751 ;; Auto vars:     Size  Location     Type
 15752 ;;  adc             2   70[BANK0 ] unsigned short 
 15753 ;; Return value:  Size  Location     Type
 15754 ;;                  1    wreg      void 
 15755 ;; Registers used:
 15756 ;;		wreg, status,2, status,0, pclath, cstack
 15757 ;; Tracked objects:
 15758 ;;		On entry : 0/0
 15759 ;;		On exit  : 0/0
 15760 ;;		Unchanged: 0/0
 15761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15763 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15765 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15766 ;;Total ram usage:        6 bytes
 15767 ;; Hardware stack levels used:    1
 15768 ;; Hardware stack levels required when called:    5
 15769 ;; This function calls:
 15770 ;;		___fladd
 15771 ;;		___fldiv
 15772 ;;		___flmul
 15773 ;;		___xxtofl
 15774 ;;		_adcGetConversion
 15775 ;;		_ema
 15776 ;; This function is called by:
 15777 ;;		_main
 15778 ;; This function uses a non-reentrant model
 15779 ;;
 15780                           psect	text41,local,class=CODE,delta=2,merge=1,group=0
 15781                           	line	186
 15782                           global __ptext41
 15783                           __ptext41:	;psect for function _convertAnalogValues
 15784  0815                     psect	text41
 15785                           	file	"main.c"
 15786                           	line	186
 15787                           	global	__size_of_convertAnalogValues
 15788                           	__size_of_convertAnalogValues	equ	__end_of_convertAnalogValues-_convertAnalogValues
 15789  019C                     	
 15790                           _convertAnalogValues:	
 15791  0815                     ;incstack = 0
 15792                           	opt	stack 10
 15793                           ; Regs used in _convertAnalogValues: [wreg+status,2+status,0+pclath+cstack]
 15794                           	line	191
 15795                           	
 15796                           l4827:	
 15797  0815                     ;main.c: 188:  static uint16_t avgT, avgV, avgI;;main.c: 189:  uint16_t adc;;main.c: 191
                                 :  adc = adcGetConversion(0b000110);
 15798                           	movlw	low(06h)
 15799  0815  3006               	fcall	_adcGetConversion
 15800  0816  31A2  222E  3188   	movlb 0	; select bank0
 15801  0819  0140               	movf	(1+(?_adcGetConversion)),w
 15802  081A  0821               	movwf	(convertAnalogValues@adc+1)
 15803  081B  00E7               	movf	(0+(?_adcGetConversion)),w
 15804  081C  0820               	movwf	(convertAnalogValues@adc)
 15805  081D  00E6               	line	192
 15806                           ;main.c: 192:  avgT = ema(adc, avgT, ( (uint32_t)(0.65 * 65535) ));
 15807                           	movf	(convertAnalogValues@adc+1),w
 15808  081E  0867               	movwf	(ema@in+1)
 15809  081F  00AD               	movf	(convertAnalogValues@adc),w
 15810  0820  0866               	movwf	(ema@in)
 15811  0821  00AC               	movlb 3	; select bank3
 15812  0822  0143               	movf	(convertAnalogValues@avgT+1)^0180h,w
 15813  0823  086B               	movlb 0	; select bank0
 15814  0824  0140               	movwf	(ema@average+1)
 15815  0825  00AF               	movlb 3	; select bank3
 15816  0826  0143               	movf	(convertAnalogValues@avgT)^0180h,w
 15817  0827  086A               	movlb 0	; select bank0
 15818  0828  0140               	movwf	(ema@average)
 15819  0829  00AE               	movlw	0
 15820  082A  3000               	movwf	(ema@alpha+3)
 15821  082B  00B3               	movlw	0
 15822  082C  3000               	movwf	(ema@alpha+2)
 15823  082D  00B2               	movlw	0A6h
 15824  082E  30A6               	movwf	(ema@alpha+1)
 15825  082F  00B1               	movlw	065h
 15826  0830  3065               	movwf	(ema@alpha)
 15827  0831  00B0               
 15828                           	fcall	_ema
 15829  0832  3198  20C8  3188   	movlb 0	; select bank0
 15830  0835  0140               	movf	(1+(?_ema)),w
 15831  0836  082D               	movlb 3	; select bank3
 15832  0837  0143               	movwf	(convertAnalogValues@avgT+1)^0180h
 15833  0838  00EB               	movlb 0	; select bank0
 15834  0839  0140               	movf	(0+(?_ema)),w
 15835  083A  082C               	movlb 3	; select bank3
 15836  083B  0143               	movwf	(convertAnalogValues@avgT)^0180h
 15837  083C  00EA               	line	193
 15838                           ;main.c: 193:  adc = adcGetConversion(0b010000);
 15839                           	movlw	low(010h)
 15840  083D  3010               	fcall	_adcGetConversion
 15841  083E  31A2  222E  3188   	movlb 0	; select bank0
 15842  0841  0140               	movf	(1+(?_adcGetConversion)),w
 15843  0842  0821               	movwf	(convertAnalogValues@adc+1)
 15844  0843  00E7               	movf	(0+(?_adcGetConversion)),w
 15845  0844  0820               	movwf	(convertAnalogValues@adc)
 15846  0845  00E6               	line	194
 15847                           ;main.c: 194:  avgV = ema(adc, avgV, ( (uint32_t)(0.65 * 65535) ));
 15848                           	movf	(convertAnalogValues@adc+1),w
 15849  0846  0867               	movwf	(ema@in+1)
 15850  0847  00AD               	movf	(convertAnalogValues@adc),w
 15851  0848  0866               	movwf	(ema@in)
 15852  0849  00AC               	movlb 4	; select bank4
 15853  084A  0144               	movf	(convertAnalogValues@avgV+1)^0200h,w
 15854  084B  084D               	movlb 0	; select bank0
 15855  084C  0140               	movwf	(ema@average+1)
 15856  084D  00AF               	movlb 4	; select bank4
 15857  084E  0144               	movf	(convertAnalogValues@avgV)^0200h,w
 15858  084F  084C               	movlb 0	; select bank0
 15859  0850  0140               	movwf	(ema@average)
 15860  0851  00AE               	movlw	0
 15861  0852  3000               	movwf	(ema@alpha+3)
 15862  0853  00B3               	movlw	0
 15863  0854  3000               	movwf	(ema@alpha+2)
 15864  0855  00B2               	movlw	0A6h
 15865  0856  30A6               	movwf	(ema@alpha+1)
 15866  0857  00B1               	movlw	065h
 15867  0858  3065               	movwf	(ema@alpha)
 15868  0859  00B0               
 15869                           	fcall	_ema
 15870  085A  3198  20C8  3188   	movlb 0	; select bank0
 15871  085D  0140               	movf	(1+(?_ema)),w
 15872  085E  082D               	movlb 4	; select bank4
 15873  085F  0144               	movwf	(convertAnalogValues@avgV+1)^0200h
 15874  0860  00CD               	movlb 0	; select bank0
 15875  0861  0140               	movf	(0+(?_ema)),w
 15876  0862  082C               	movlb 4	; select bank4
 15877  0863  0144               	movwf	(convertAnalogValues@avgV)^0200h
 15878  0864  00CC               	line	195
 15879                           ;main.c: 195:  adc = adcGetConversion(0b010001);
 15880                           	movlw	low(011h)
 15881  0865  3011               	fcall	_adcGetConversion
 15882  0866  31A2  222E  3188   	movlb 0	; select bank0
 15883  0869  0140               	movf	(1+(?_adcGetConversion)),w
 15884  086A  0821               	movwf	(convertAnalogValues@adc+1)
 15885  086B  00E7               	movf	(0+(?_adcGetConversion)),w
 15886  086C  0820               	movwf	(convertAnalogValues@adc)
 15887  086D  00E6               	line	196
 15888                           ;main.c: 196:  avgI = ema(adc, avgI, ( (uint32_t)(0.65 * 65535) ));
 15889                           	movf	(convertAnalogValues@adc+1),w
 15890  086E  0867               	movwf	(ema@in+1)
 15891  086F  00AD               	movf	(convertAnalogValues@adc),w
 15892  0870  0866               	movwf	(ema@in)
 15893  0871  00AC               	movlb 4	; select bank4
 15894  0872  0144               	movf	(convertAnalogValues@avgI+1)^0200h,w
 15895  0873  084B               	movlb 0	; select bank0
 15896  0874  0140               	movwf	(ema@average+1)
 15897  0875  00AF               	movlb 4	; select bank4
 15898  0876  0144               	movf	(convertAnalogValues@avgI)^0200h,w
 15899  0877  084A               	movlb 0	; select bank0
 15900  0878  0140               	movwf	(ema@average)
 15901  0879  00AE               	movlw	0
 15902  087A  3000               	movwf	(ema@alpha+3)
 15903  087B  00B3               	movlw	0
 15904  087C  3000               	movwf	(ema@alpha+2)
 15905  087D  00B2               	movlw	0A6h
 15906  087E  30A6               	movwf	(ema@alpha+1)
 15907  087F  00B1               	movlw	065h
 15908  0880  3065               	movwf	(ema@alpha)
 15909  0881  00B0               
 15910                           	fcall	_ema
 15911  0882  3198  20C8  3188   	movlb 0	; select bank0
 15912  0885  0140               	movf	(1+(?_ema)),w
 15913  0886  082D               	movlb 4	; select bank4
 15914  0887  0144               	movwf	(convertAnalogValues@avgI+1)^0200h
 15915  0888  00CB               	movlb 0	; select bank0
 15916  0889  0140               	movf	(0+(?_ema)),w
 15917  088A  082C               	movlb 4	; select bank4
 15918  088B  0144               	movwf	(convertAnalogValues@avgI)^0200h
 15919  088C  00CA               	line	197
 15920                           ;main.c: 197:  g_tempAux = (avgT * 0.1191) - 34.512;
 15921                           	movlw	0xc2
 15922  088D  30C2               	movlb 0	; select bank0
 15923  088E  0140               	movwf	(___fladd@b+3)
 15924  088F  00CB               	movlw	0xa
 15925  0890  300A               	movwf	(___fladd@b+2)
 15926  0891  00CA               	movlw	0xc
 15927  0892  300C               	movwf	(___fladd@b+1)
 15928  0893  00C9               	movlw	0x4a
 15929  0894  304A               	movwf	(___fladd@b)
 15930  0895  00C8               
 15931                           	movlw	0x3d
 15932  0896  303D               	movwf	(___flmul@b+3)
 15933  0897  00B1               	movlw	0xf3
 15934  0898  30F3               	movwf	(___flmul@b+2)
 15935  0899  00B0               	movlw	0xea
 15936  089A  30EA               	movwf	(___flmul@b+1)
 15937  089B  00AF               	movlw	0xb3
 15938  089C  30B3               	movwf	(___flmul@b)
 15939  089D  00AE               
 15940                           	movlb 3	; select bank3
 15941  089E  0143               	movf	(convertAnalogValues@avgT)^0180h,w
 15942  089F  086A               	movlb 0	; select bank0
 15943  08A0  0140               	movwf	(___xxtofl@val)
 15944  08A1  00A0               	movlb 3	; select bank3
 15945  08A2  0143               	movf	(convertAnalogValues@avgT+1)^0180h,w
 15946  08A3  086B               	movlb 0	; select bank0
 15947  08A4  0140               	movwf	((___xxtofl@val))+1
 15948  08A5  00A1               	clrf	2+((___xxtofl@val))
 15949  08A6  01A2               	clrf	3+((___xxtofl@val))
 15950  08A7  01A3               	movlw	low(0)
 15951  08A8  3000               	fcall	___xxtofl
 15952  08A9  319C  2406  3188   	movlb 0	; select bank0
 15953  08AC  0140               	movf	(3+(?___xxtofl)),w
 15954  08AD  0823               	movwf	(___flmul@a+3)
 15955  08AE  00B5               	movf	(2+(?___xxtofl)),w
 15956  08AF  0822               	movwf	(___flmul@a+2)
 15957  08B0  00B4               	movf	(1+(?___xxtofl)),w
 15958  08B1  0821               	movwf	(___flmul@a+1)
 15959  08B2  00B3               	movf	(0+(?___xxtofl)),w
 15960  08B3  0820               	movwf	(___flmul@a)
 15961  08B4  00B2               
 15962                           	fcall	___flmul
 15963  08B5  3195  2595  3188   	movlb 0	; select bank0
 15964  08B8  0140               	movf	(3+(?___flmul)),w
 15965  08B9  0831               	movwf	(___fladd@a+3)
 15966  08BA  00CF               	movf	(2+(?___flmul)),w
 15967  08BB  0830               	movwf	(___fladd@a+2)
 15968  08BC  00CE               	movf	(1+(?___flmul)),w
 15969  08BD  082F               	movwf	(___fladd@a+1)
 15970  08BE  00CD               	movf	(0+(?___flmul)),w
 15971  08BF  082E               	movwf	(___fladd@a)
 15972  08C0  00CC               
 15973                           	fcall	___fladd
 15974  08C1  3189  21B1  3188   	movlb 0	; select bank0
 15975  08C4  0140               	movf	(3+(?___fladd)),w
 15976  08C5  084B               	movlb 4	; select bank4
 15977  08C6  0144               	movwf	(_g_tempAux+3)^0200h
 15978  08C7  00B7               	movlb 0	; select bank0
 15979  08C8  0140               	movf	(2+(?___fladd)),w
 15980  08C9  084A               	movlb 4	; select bank4
 15981  08CA  0144               	movwf	(_g_tempAux+2)^0200h
 15982  08CB  00B6               	movlb 0	; select bank0
 15983  08CC  0140               	movf	(1+(?___fladd)),w
 15984  08CD  0849               	movlb 4	; select bank4
 15985  08CE  0144               	movwf	(_g_tempAux+1)^0200h
 15986  08CF  00B5               	movlb 0	; select bank0
 15987  08D0  0140               	movf	(0+(?___fladd)),w
 15988  08D1  0848               	movlb 4	; select bank4
 15989  08D2  0144               	movwf	(_g_tempAux)^0200h
 15990  08D3  00B4               
 15991                           	line	198
 15992                           ;main.c: 198:  g_voltage = (avgV * 5.0 * (150.0 + 47.0)) / (1023.0 * 47.0);
 15993                           	movlw	0x40
 15994  08D4  3040               	movlb 0	; select bank0
 15995  08D5  0140               	movwf	(___flmul@b+3)
 15996  08D6  00B1               	movlw	0xa0
 15997  08D7  30A0               	movwf	(___flmul@b+2)
 15998  08D8  00B0               	movlw	0x0
 15999  08D9  3000               	movwf	(___flmul@b+1)
 16000  08DA  00AF               	movlw	0x0
 16001  08DB  3000               	movwf	(___flmul@b)
 16002  08DC  00AE               
 16003                           	movlb 4	; select bank4
 16004  08DD  0144               	movf	(convertAnalogValues@avgV)^0200h,w
 16005  08DE  084C               	movlb 0	; select bank0
 16006  08DF  0140               	movwf	(___xxtofl@val)
 16007  08E0  00A0               	movlb 4	; select bank4
 16008  08E1  0144               	movf	(convertAnalogValues@avgV+1)^0200h,w
 16009  08E2  084D               	movlb 0	; select bank0
 16010  08E3  0140               	movwf	((___xxtofl@val))+1
 16011  08E4  00A1               	clrf	2+((___xxtofl@val))
 16012  08E5  01A2               	clrf	3+((___xxtofl@val))
 16013  08E6  01A3               	movlw	low(0)
 16014  08E7  3000               	fcall	___xxtofl
 16015  08E8  319C  2406  3188   	movlb 0	; select bank0
 16016  08EB  0140               	movf	(3+(?___xxtofl)),w
 16017  08EC  0823               	movwf	(___flmul@a+3)
 16018  08ED  00B5               	movf	(2+(?___xxtofl)),w
 16019  08EE  0822               	movwf	(___flmul@a+2)
 16020  08EF  00B4               	movf	(1+(?___xxtofl)),w
 16021  08F0  0821               	movwf	(___flmul@a+1)
 16022  08F1  00B3               	movf	(0+(?___xxtofl)),w
 16023  08F2  0820               	movwf	(___flmul@a)
 16024  08F3  00B2               
 16025                           	fcall	___flmul
 16026  08F4  3195  2595  3188   	movlb 0	; select bank0
 16027  08F7  0140               	movf	(3+(?___flmul)),w
 16028  08F8  0831               	movwf	(_convertAnalogValues$1540+3)
 16029  08F9  00E5               	movf	(2+(?___flmul)),w
 16030  08FA  0830               	movwf	(_convertAnalogValues$1540+2)
 16031  08FB  00E4               	movf	(1+(?___flmul)),w
 16032  08FC  082F               	movwf	(_convertAnalogValues$1540+1)
 16033  08FD  00E3               	movf	(0+(?___flmul)),w
 16034  08FE  082E               	movwf	(_convertAnalogValues$1540)
 16035  08FF  00E2               
 16036                           ;main.c: 198:  g_voltage = (avgV * 5.0 * (150.0 + 47.0)) / (1023.0 * 47.0);
 16037                           	movlw	0x47
 16038  0900  3047               	movwf	(___fldiv@a+3)
 16039  0901  00CB               	movlw	0x3b
 16040  0902  303B               	movwf	(___fldiv@a+2)
 16041  0903  00CA               	movlw	0xd1
 16042  0904  30D1               	movwf	(___fldiv@a+1)
 16043  0905  00C9               	movlw	0x0
 16044  0906  3000               	movwf	(___fldiv@a)
 16045  0907  00C8               
 16046                           	movlw	0x43
 16047  0908  3043               	movwf	(___flmul@b+3)
 16048  0909  00B1               	movlw	0x45
 16049  090A  3045               	movwf	(___flmul@b+2)
 16050  090B  00B0               	movlw	0x0
 16051  090C  3000               	movwf	(___flmul@b+1)
 16052  090D  00AF               	movlw	0x0
 16053  090E  3000               	movwf	(___flmul@b)
 16054  090F  00AE               
 16055                           	movf	(_convertAnalogValues$1540+3),w
 16056  0910  0865               	movwf	(___flmul@a+3)
 16057  0911  00B5               	movf	(_convertAnalogValues$1540+2),w
 16058  0912  0864               	movwf	(___flmul@a+2)
 16059  0913  00B4               	movf	(_convertAnalogValues$1540+1),w
 16060  0914  0863               	movwf	(___flmul@a+1)
 16061  0915  00B3               	movf	(_convertAnalogValues$1540),w
 16062  0916  0862               	movwf	(___flmul@a)
 16063  0917  00B2               
 16064                           	fcall	___flmul
 16065  0918  3195  2595  3188   	movlb 0	; select bank0
 16066  091B  0140               	movf	(3+(?___flmul)),w
 16067  091C  0831               	movwf	(___fldiv@b+3)
 16068  091D  00CF               	movf	(2+(?___flmul)),w
 16069  091E  0830               	movwf	(___fldiv@b+2)
 16070  091F  00CE               	movf	(1+(?___flmul)),w
 16071  0920  082F               	movwf	(___fldiv@b+1)
 16072  0921  00CD               	movf	(0+(?___flmul)),w
 16073  0922  082E               	movwf	(___fldiv@b)
 16074  0923  00CC               
 16075                           	fcall	___fldiv
 16076  0924  3193  23B6  3188   	movlb 0	; select bank0
 16077  0927  0140               	movf	(3+(?___fldiv)),w
 16078  0928  084B               	movlb 4	; select bank4
 16079  0929  0144               	movwf	(_g_voltage+3)^0200h
 16080  092A  00B3               	movlb 0	; select bank0
 16081  092B  0140               	movf	(2+(?___fldiv)),w
 16082  092C  084A               	movlb 4	; select bank4
 16083  092D  0144               	movwf	(_g_voltage+2)^0200h
 16084  092E  00B2               	movlb 0	; select bank0
 16085  092F  0140               	movf	(1+(?___fldiv)),w
 16086  0930  0849               	movlb 4	; select bank4
 16087  0931  0144               	movwf	(_g_voltage+1)^0200h
 16088  0932  00B1               	movlb 0	; select bank0
 16089  0933  0140               	movf	(0+(?___fldiv)),w
 16090  0934  0848               	movlb 4	; select bank4
 16091  0935  0144               	movwf	(_g_voltage)^0200h
 16092  0936  00B0               
 16093                           	line	199
 16094                           ;main.c: 199:  g_current = (avgI * 5.0) / (1023.0 * 0.05 * 50.0);
 16095                           	movlw	0x45
 16096  0937  3045               	movlb 0	; select bank0
 16097  0938  0140               	movwf	(___fldiv@a+3)
 16098  0939  00CB               	movlw	0x1f
 16099  093A  301F               	movwf	(___fldiv@a+2)
 16100  093B  00CA               	movlw	0xd8
 16101  093C  30D8               	movwf	(___fldiv@a+1)
 16102  093D  00C9               	movlw	0x0
 16103  093E  3000               	movwf	(___fldiv@a)
 16104  093F  00C8               
 16105                           	movlw	0x40
 16106  0940  3040               	movwf	(___flmul@b+3)
 16107  0941  00B1               	movlw	0xa0
 16108  0942  30A0               	movwf	(___flmul@b+2)
 16109  0943  00B0               	movlw	0x0
 16110  0944  3000               	movwf	(___flmul@b+1)
 16111  0945  00AF               	movlw	0x0
 16112  0946  3000               	movwf	(___flmul@b)
 16113  0947  00AE               
 16114                           	movlb 4	; select bank4
 16115  0948  0144               	movf	(convertAnalogValues@avgI)^0200h,w
 16116  0949  084A               	movlb 0	; select bank0
 16117  094A  0140               	movwf	(___xxtofl@val)
 16118  094B  00A0               	movlb 4	; select bank4
 16119  094C  0144               	movf	(convertAnalogValues@avgI+1)^0200h,w
 16120  094D  084B               	movlb 0	; select bank0
 16121  094E  0140               	movwf	((___xxtofl@val))+1
 16122  094F  00A1               	clrf	2+((___xxtofl@val))
 16123  0950  01A2               	clrf	3+((___xxtofl@val))
 16124  0951  01A3               	movlw	low(0)
 16125  0952  3000               	fcall	___xxtofl
 16126  0953  319C  2406  3188   	movlb 0	; select bank0
 16127  0956  0140               	movf	(3+(?___xxtofl)),w
 16128  0957  0823               	movwf	(___flmul@a+3)
 16129  0958  00B5               	movf	(2+(?___xxtofl)),w
 16130  0959  0822               	movwf	(___flmul@a+2)
 16131  095A  00B4               	movf	(1+(?___xxtofl)),w
 16132  095B  0821               	movwf	(___flmul@a+1)
 16133  095C  00B3               	movf	(0+(?___xxtofl)),w
 16134  095D  0820               	movwf	(___flmul@a)
 16135  095E  00B2               
 16136                           	fcall	___flmul
 16137  095F  3195  2595  3188   	movlb 0	; select bank0
 16138  0962  0140               	movf	(3+(?___flmul)),w
 16139  0963  0831               	movwf	(___fldiv@b+3)
 16140  0964  00CF               	movf	(2+(?___flmul)),w
 16141  0965  0830               	movwf	(___fldiv@b+2)
 16142  0966  00CE               	movf	(1+(?___flmul)),w
 16143  0967  082F               	movwf	(___fldiv@b+1)
 16144  0968  00CD               	movf	(0+(?___flmul)),w
 16145  0969  082E               	movwf	(___fldiv@b)
 16146  096A  00CC               
 16147                           	fcall	___fldiv
 16148  096B  3193  23B6  3188   	movlb 0	; select bank0
 16149  096E  0140               	movf	(3+(?___fldiv)),w
 16150  096F  084B               	movlb 4	; select bank4
 16151  0970  0144               	movwf	(_g_current+3)^0200h
 16152  0971  00AF               	movlb 0	; select bank0
 16153  0972  0140               	movf	(2+(?___fldiv)),w
 16154  0973  084A               	movlb 4	; select bank4
 16155  0974  0144               	movwf	(_g_current+2)^0200h
 16156  0975  00AE               	movlb 0	; select bank0
 16157  0976  0140               	movf	(1+(?___fldiv)),w
 16158  0977  0849               	movlb 4	; select bank4
 16159  0978  0144               	movwf	(_g_current+1)^0200h
 16160  0979  00AD               	movlb 0	; select bank0
 16161  097A  0140               	movf	(0+(?___fldiv)),w
 16162  097B  0848               	movlb 4	; select bank4
 16163  097C  0144               	movwf	(_g_current)^0200h
 16164  097D  00AC               
 16165                           	line	200
 16166                           ;main.c: 200:  g_power = g_voltage * g_current;
 16167                           	movf	(_g_current+3)^0200h,w
 16168  097E  082F               	movlb 0	; select bank0
 16169  097F  0140               	movwf	(___flmul@b+3)
 16170  0980  00B1               	movlb 4	; select bank4
 16171  0981  0144               	movf	(_g_current+2)^0200h,w
 16172  0982  082E               	movlb 0	; select bank0
 16173  0983  0140               	movwf	(___flmul@b+2)
 16174  0984  00B0               	movlb 4	; select bank4
 16175  0985  0144               	movf	(_g_current+1)^0200h,w
 16176  0986  082D               	movlb 0	; select bank0
 16177  0987  0140               	movwf	(___flmul@b+1)
 16178  0988  00AF               	movlb 4	; select bank4
 16179  0989  0144               	movf	(_g_current)^0200h,w
 16180  098A  082C               	movlb 0	; select bank0
 16181  098B  0140               	movwf	(___flmul@b)
 16182  098C  00AE               
 16183                           	movlb 4	; select bank4
 16184  098D  0144               	movf	(_g_voltage+3)^0200h,w
 16185  098E  0833               	movlb 0	; select bank0
 16186  098F  0140               	movwf	(___flmul@a+3)
 16187  0990  00B5               	movlb 4	; select bank4
 16188  0991  0144               	movf	(_g_voltage+2)^0200h,w
 16189  0992  0832               	movlb 0	; select bank0
 16190  0993  0140               	movwf	(___flmul@a+2)
 16191  0994  00B4               	movlb 4	; select bank4
 16192  0995  0144               	movf	(_g_voltage+1)^0200h,w
 16193  0996  0831               	movlb 0	; select bank0
 16194  0997  0140               	movwf	(___flmul@a+1)
 16195  0998  00B3               	movlb 4	; select bank4
 16196  0999  0144               	movf	(_g_voltage)^0200h,w
 16197  099A  0830               	movlb 0	; select bank0
 16198  099B  0140               	movwf	(___flmul@a)
 16199  099C  00B2               
 16200                           	fcall	___flmul
 16201  099D  3195  2595  3188   	movlb 0	; select bank0
 16202  09A0  0140               	movf	(3+(?___flmul)),w
 16203  09A1  0831               	movlb 4	; select bank4
 16204  09A2  0144               	movwf	(_g_power+3)^0200h
 16205  09A3  00AB               	movlb 0	; select bank0
 16206  09A4  0140               	movf	(2+(?___flmul)),w
 16207  09A5  0830               	movlb 4	; select bank4
 16208  09A6  0144               	movwf	(_g_power+2)^0200h
 16209  09A7  00AA               	movlb 0	; select bank0
 16210  09A8  0140               	movf	(1+(?___flmul)),w
 16211  09A9  082F               	movlb 4	; select bank4
 16212  09AA  0144               	movwf	(_g_power+1)^0200h
 16213  09AB  00A9               	movlb 0	; select bank0
 16214  09AC  0140               	movf	(0+(?___flmul)),w
 16215  09AD  082E               	movlb 4	; select bank4
 16216  09AE  0144               	movwf	(_g_power)^0200h
 16217  09AF  00A8               
 16218                           	line	201
 16219                           	
 16220                           l223:	
 16221  09B0                     	return
 16222  09B0  0008               	opt stack 0
 16223                           GLOBAL	__end_of_convertAnalogValues
 16224                           	__end_of_convertAnalogValues:
 16225  09B1                     	signat	_convertAnalogValues,89
 16226                           	global	_ema
 16227                           
 16228 ;; *************** function _ema *****************
 16229 ;; Defined at:
 16230 ;;		line 170 in file "main.c"
 16231 ;; Parameters:    Size  Location     Type
 16232 ;;  in              2   12[BANK0 ] unsigned short 
 16233 ;;  average         2   14[BANK0 ] unsigned short 
 16234 ;;  alpha           4   16[BANK0 ] unsigned long 
 16235 ;; Auto vars:     Size  Location     Type
 16236 ;;  tmp             4   28[BANK0 ] unsigned long 
 16237 ;; Return value:  Size  Location     Type
 16238 ;;                  2   12[BANK0 ] unsigned short 
 16239 ;; Registers used:
 16240 ;;		wreg, status,2, status,0, pclath, cstack
 16241 ;; Tracked objects:
 16242 ;;		On entry : 0/0
 16243 ;;		On exit  : 0/0
 16244 ;;		Unchanged: 0/0
 16245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16246 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16247 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16248 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16249 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16250 ;;Total ram usage:       20 bytes
 16251 ;; Hardware stack levels used:    1
 16252 ;; Hardware stack levels required when called:    4
 16253 ;; This function calls:
 16254 ;;		___lmul
 16255 ;; This function is called by:
 16256 ;;		_convertAnalogValues
 16257 ;; This function uses a non-reentrant model
 16258 ;;
 16259                           psect	text42,local,class=CODE,delta=2,merge=1,group=0
 16260                           	line	170
 16261                           global __ptext42
 16262                           __ptext42:	;psect for function _ema
 16263  18C8                     psect	text42
 16264                           	file	"main.c"
 16265                           	line	170
 16266                           	global	__size_of_ema
 16267                           	__size_of_ema	equ	__end_of_ema-_ema
 16268  006D                     	
 16269                           _ema:	
 16270  18C8                     ;incstack = 0
 16271                           	opt	stack 10
 16272                           ; Regs used in _ema: [wreg+status,2+status,0+pclath+cstack]
 16273                           	line	173
 16274                           	
 16275                           l4571:	
 16276  18C8                     ;main.c: 170: uint16_t ema(uint16_t in, uint16_t average, uint32_t alpha);main.c: 171: {
                                 ;main.c: 172:   uint32_t tmp;;main.c: 173:   tmp = in * alpha + average * (65536 - alpha
                                 );
 16277                           	movlb 0	; select bank0
 16278  18C8  0140               	comf	(ema@alpha),w
 16279  18C9  0930               	movwf	(??_ema+0)+0
 16280  18CA  00B4               	comf	(ema@alpha+1),w
 16281  18CB  0931               	movwf	((??_ema+0)+0+1)
 16282  18CC  00B5               	comf	(ema@alpha+2),w
 16283  18CD  0932               	movwf	((??_ema+0)+0+2)
 16284  18CE  00B6               	comf	(ema@alpha+3),w
 16285  18CF  0933               	movwf	((??_ema+0)+0+3)
 16286  18D0  00B7               	incf	(??_ema+0)+0,f
 16287  18D1  0AB4               	skipnz
 16288  18D2  1903               	incf	((??_ema+0)+0+1),f
 16289  18D3  0AB5               	skipnz
 16290  18D4  1903               	incf	((??_ema+0)+0+2),f
 16291  18D5  0AB6               	skipnz
 16292  18D6  1903               	incf	((??_ema+0)+0+3),f
 16293  18D7  0AB7               	movlw	0
 16294  18D8  3000               	addwf	(0+(??_ema+0)+0),w
 16295  18D9  0734               	movwf	(___lmul@multiplier)
 16296  18DA  00A0               	movlw	high(010000h)
 16297  18DB  3000               	addwfc	(1+(??_ema+0)+0),w
 16298  18DC  3D35               	movwf	1+(___lmul@multiplier)
 16299  18DD  00A1               	
 16300                           	movlw	low highword(010000h)
 16301  18DE  3001               	addwfc	(2+(??_ema+0)+0),w
 16302  18DF  3D36               	movwf	2+(___lmul@multiplier)
 16303  18E0  00A2               	
 16304                           	movlw	high highword(010000h)
 16305  18E1  3000               	addwfc	(3+(??_ema+0)+0),w
 16306  18E2  3D37               	movwf	3+(___lmul@multiplier)
 16307  18E3  00A3               	movf	(ema@average),w
 16308  18E4  082E               	movwf	(___lmul@multiplicand)
 16309  18E5  00A4               	movf	(ema@average+1),w
 16310  18E6  082F               	movwf	((___lmul@multiplicand))+1
 16311  18E7  00A5               	clrf	2+((___lmul@multiplicand))
 16312  18E8  01A6               	clrf	3+((___lmul@multiplicand))
 16313  18E9  01A7               	fcall	___lmul
 16314  18EA  31A4  240D  3198   	movlb 0	; select bank0
 16315  18ED  0140               	movf	(0+?___lmul),w
 16316  18EE  0820               	movwf	(??_ema+4)+0
 16317  18EF  00B8               	movf	(1+?___lmul),w
 16318  18F0  0821               	movwf	((??_ema+4)+0+1)
 16319  18F1  00B9               	movf	(2+?___lmul),w
 16320  18F2  0822               	movwf	((??_ema+4)+0+2)
 16321  18F3  00BA               	movf	(3+?___lmul),w
 16322  18F4  0823               	movwf	((??_ema+4)+0+3)
 16323  18F5  00BB               	movf	(ema@in),w
 16324  18F6  082C               	movwf	(___lmul@multiplier)
 16325  18F7  00A0               	movf	(ema@in+1),w
 16326  18F8  082D               	movwf	((___lmul@multiplier))+1
 16327  18F9  00A1               	clrf	2+((___lmul@multiplier))
 16328  18FA  01A2               	clrf	3+((___lmul@multiplier))
 16329  18FB  01A3               	movf	(ema@alpha+3),w
 16330  18FC  0833               	movwf	(___lmul@multiplicand+3)
 16331  18FD  00A7               	movf	(ema@alpha+2),w
 16332  18FE  0832               	movwf	(___lmul@multiplicand+2)
 16333  18FF  00A6               	movf	(ema@alpha+1),w
 16334  1900  0831               	movwf	(___lmul@multiplicand+1)
 16335  1901  00A5               	movf	(ema@alpha),w
 16336  1902  0830               	movwf	(___lmul@multiplicand)
 16337  1903  00A4               
 16338                           	fcall	___lmul
 16339  1904  31A4  240D  3198   	movlb 0	; select bank0
 16340  1907  0140               	movf	(0+(?___lmul)),w
 16341  1908  0820               	addwf	(??_ema+4)+0,f
 16342  1909  07B8               	movf	(1+(?___lmul)),w
 16343  190A  0821               	addwfc	(??_ema+4)+1,f
 16344  190B  3DB9               	movf	(2+(?___lmul)),w
 16345  190C  0822               	addwfc	(??_ema+4)+2,f
 16346  190D  3DBA               	movf	(3+(?___lmul)),w
 16347  190E  0823               	addwfc	(??_ema+4)+3,f
 16348  190F  3DBB               	movf	3+(??_ema+4)+0,w
 16349  1910  083B               	movwf	(ema@tmp+3)
 16350  1911  00BF               	movf	2+(??_ema+4)+0,w
 16351  1912  083A               	movwf	(ema@tmp+2)
 16352  1913  00BE               	movf	1+(??_ema+4)+0,w
 16353  1914  0839               	movwf	(ema@tmp+1)
 16354  1915  00BD               	movf	0+(??_ema+4)+0,w
 16355  1916  0838               	movwf	(ema@tmp)
 16356  1917  00BC               
 16357                           	line	174
 16358                           	
 16359                           l4573:	
 16360  1918                     ;main.c: 174:   return (tmp + 32768) / 65536;
 16361                           	movlw	0
 16362  1918  3000               	movwf	((??_ema+0)+0)
 16363  1919  00B4               	movlw	080h
 16364  191A  3080               	movwf	((??_ema+0)+0+1)
 16365  191B  00B5               	movlw	0
 16366  191C  3000               	movwf	((??_ema+0)+0+2)
 16367  191D  00B6               	movlw	0
 16368  191E  3000               	movwf	((??_ema+0)+0+3)
 16369  191F  00B7               	movf	(ema@tmp),w
 16370  1920  083C               	addwf	(??_ema+0)+0,f
 16371  1921  07B4               	movf	(ema@tmp+1),w
 16372  1922  083D               	addwfc	(??_ema+0)+1,f
 16373  1923  3DB5               	movf	(ema@tmp+2),w
 16374  1924  083E               	addwfc	(??_ema+0)+2,f
 16375  1925  3DB6               	movf	(ema@tmp+3),w
 16376  1926  083F               	addwfc	(??_ema+0)+3,f
 16377  1927  3DB7               	movlw	010h
 16378  1928  3010               u6455:
 16379  1929                     	lsrf	(??_ema+0)+3,f
 16380  1929  36B7               	rrf	(??_ema+0)+2,f
 16381  192A  0CB6               	rrf	(??_ema+0)+1,f
 16382  192B  0CB5               	rrf	(??_ema+0)+0,f
 16383  192C  0CB4               u6450:
 16384  192D                     	decfsz	wreg,f
 16385  192D  0B89               	goto	u6455
 16386  192E  2929               	movf	1+(??_ema+0)+0,w
 16387  192F  0835               	movwf	(?_ema+1)
 16388  1930  00AD               	movf	0+(??_ema+0)+0,w
 16389  1931  0834               	movwf	(?_ema)
 16390  1932  00AC               	goto	l208
 16391  1933  2934               	
 16392                           l4575:	
 16393  1934                     	line	175
 16394                           	
 16395                           l208:	
 16396  1934                     	return
 16397  1934  0008               	opt stack 0
 16398                           GLOBAL	__end_of_ema
 16399                           	__end_of_ema:
 16400  1935                     	signat	_ema,12410
 16401                           	global	___lmul
 16402                           
 16403 ;; *************** function ___lmul *****************
 16404 ;; Defined at:
 16405 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
 16406 ;; Parameters:    Size  Location     Type
 16407 ;;  multiplier      4    0[BANK0 ] unsigned long 
 16408 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 16409 ;; Auto vars:     Size  Location     Type
 16410 ;;  product         4    8[BANK0 ] unsigned long 
 16411 ;; Return value:  Size  Location     Type
 16412 ;;                  4    0[BANK0 ] unsigned long 
 16413 ;; Registers used:
 16414 ;;		wreg, status,2, status,0
 16415 ;; Tracked objects:
 16416 ;;		On entry : 0/0
 16417 ;;		On exit  : 0/0
 16418 ;;		Unchanged: 0/0
 16419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16420 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16421 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16423 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16424 ;;Total ram usage:       12 bytes
 16425 ;; Hardware stack levels used:    1
 16426 ;; Hardware stack levels required when called:    3
 16427 ;; This function calls:
 16428 ;;		Nothing
 16429 ;; This function is called by:
 16430 ;;		_ema
 16431 ;; This function uses a non-reentrant model
 16432 ;;
 16433                           psect	text43,local,class=CODE,delta=2,merge=1,group=1
 16434                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
 16435                           	line	15
 16436                           global __ptext43
 16437                           __ptext43:	;psect for function ___lmul
 16438  240D                     psect	text43
 16439                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
 16440                           	line	15
 16441                           	global	__size_of___lmul
 16442                           	__size_of___lmul	equ	__end_of___lmul-___lmul
 16443  0038                     	
 16444                           ___lmul:	
 16445  240D                     ;incstack = 0
 16446                           	opt	stack 10
 16447                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 16448                           	line	119
 16449                           	
 16450                           l4553:	
 16451  240D                     	movlw	high highword(0)
 16452  240D  3000               	movlb 0	; select bank0
 16453  240E  0140               	movwf	(___lmul@product+3)
 16454  240F  00AB               	movlw	low highword(0)
 16455  2410  3000               	movwf	(___lmul@product+2)
 16456  2411  00AA               	movlw	high(0)
 16457  2412  3000               	movwf	(___lmul@product+1)
 16458  2413  00A9               	movlw	low(0)
 16459  2414  3000               	movwf	(___lmul@product)
 16460  2415  00A8               
 16461                           	goto	l4555
 16462  2416  2C17               	line	120
 16463                           	
 16464                           l596:	
 16465  2417                     	line	121
 16466                           	
 16467                           l4555:	
 16468  2417                     	btfss	(___lmul@multiplier),(0)&7
 16469  2417  1C20               	goto	u6411
 16470  2418  2C1A               	goto	u6410
 16471  2419  2C1B               u6411:
 16472  241A                     	goto	l4559
 16473  241A  2C24               u6410:
 16474  241B                     	line	122
 16475                           	
 16476                           l4557:	
 16477  241B                     	movf	(___lmul@multiplicand),w
 16478  241B  0824               	addwf	(___lmul@product),f
 16479  241C  07A8               	movf	(___lmul@multiplicand+1),w
 16480  241D  0825               	addwfc	(___lmul@product+1),f
 16481  241E  3DA9               	movf	(___lmul@multiplicand+2),w
 16482  241F  0826               	addwfc	(___lmul@product+2),f
 16483  2420  3DAA               	movf	(___lmul@multiplicand+3),w
 16484  2421  0827               	addwfc	(___lmul@product+3),f
 16485  2422  3DAB               	goto	l4559
 16486  2423  2C24               	
 16487                           l597:	
 16488  2424                     	line	123
 16489                           	
 16490                           l4559:	
 16491  2424                     	movlw	01h
 16492  2424  3001               u6425:
 16493  2425                     	lslf	(___lmul@multiplicand),f
 16494  2425  35A4               	rlf	(___lmul@multiplicand+1),f
 16495  2426  0DA5               	rlf	(___lmul@multiplicand+2),f
 16496  2427  0DA6               	rlf	(___lmul@multiplicand+3),f
 16497  2428  0DA7               	decfsz	wreg,f
 16498  2429  0B89               	goto	u6425
 16499  242A  2C25               	line	124
 16500                           	
 16501                           l4561:	
 16502  242B                     	movlw	01h
 16503  242B  3001               u6435:
 16504  242C                     	lsrf	(___lmul@multiplier+3),f
 16505  242C  36A3               	rrf	(___lmul@multiplier+2),f
 16506  242D  0CA2               	rrf	(___lmul@multiplier+1),f
 16507  242E  0CA1               	rrf	(___lmul@multiplier),f
 16508  242F  0CA0               	decfsz	wreg,f
 16509  2430  0B89               	goto	u6435
 16510  2431  2C2C               
 16511                           	line	125
 16512                           	movf	(___lmul@multiplier+3),w
 16513  2432  0823               	iorwf	(___lmul@multiplier+2),w
 16514  2433  0422               	iorwf	(___lmul@multiplier+1),w
 16515  2434  0421               	iorwf	(___lmul@multiplier),w
 16516  2435  0420               	skipz
 16517  2436  1D03               	goto	u6441
 16518  2437  2C39               	goto	u6440
 16519  2438  2C3A               u6441:
 16520  2439                     	goto	l4555
 16521  2439  2C17               u6440:
 16522  243A                     	goto	l4563
 16523  243A  2C3B               	
 16524                           l598:	
 16525  243B                     	line	128
 16526                           	
 16527                           l4563:	
 16528  243B                     	movf	(___lmul@product+3),w
 16529  243B  082B               	movwf	(?___lmul+3)
 16530  243C  00A3               	movf	(___lmul@product+2),w
 16531  243D  082A               	movwf	(?___lmul+2)
 16532  243E  00A2               	movf	(___lmul@product+1),w
 16533  243F  0829               	movwf	(?___lmul+1)
 16534  2440  00A1               	movf	(___lmul@product),w
 16535  2441  0828               	movwf	(?___lmul)
 16536  2442  00A0               
 16537                           	goto	l599
 16538  2443  2C44               	
 16539                           l4565:	
 16540  2444                     	line	129
 16541                           	
 16542                           l599:	
 16543  2444                     	return
 16544  2444  0008               	opt stack 0
 16545                           GLOBAL	__end_of___lmul
 16546                           	__end_of___lmul:
 16547  2445                     	signat	___lmul,8316
 16548                           	global	_adcGetConversion
 16549                           
 16550 ;; *************** function _adcGetConversion *****************
 16551 ;; Defined at:
 16552 ;;		line 177 in file "main.c"
 16553 ;; Parameters:    Size  Location     Type
 16554 ;;  channel         1    wreg     unsigned char 
 16555 ;; Auto vars:     Size  Location     Type
 16556 ;;  channel         1    3[BANK0 ] unsigned char 
 16557 ;; Return value:  Size  Location     Type
 16558 ;;                  2    0[BANK0 ] unsigned short 
 16559 ;; Registers used:
 16560 ;;		wreg, status,2, status,0
 16561 ;; Tracked objects:
 16562 ;;		On entry : 0/0
 16563 ;;		On exit  : 0/0
 16564 ;;		Unchanged: 0/0
 16565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16566 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16567 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16568 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16569 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16570 ;;Total ram usage:        4 bytes
 16571 ;; Hardware stack levels used:    1
 16572 ;; Hardware stack levels required when called:    3
 16573 ;; This function calls:
 16574 ;;		Nothing
 16575 ;; This function is called by:
 16576 ;;		_convertAnalogValues
 16577 ;; This function uses a non-reentrant model
 16578 ;;
 16579                           psect	text44,local,class=CODE,delta=2,merge=1,group=0
 16580                           	file	"main.c"
 16581                           	line	177
 16582                           global __ptext44
 16583                           __ptext44:	;psect for function _adcGetConversion
 16584  222E                     psect	text44
 16585                           	file	"main.c"
 16586                           	line	177
 16587                           	global	__size_of_adcGetConversion
 16588                           	__size_of_adcGetConversion	equ	__end_of_adcGetConversion-_adcGetConversion
 16589  0022                     	
 16590                           _adcGetConversion:	
 16591  222E                     ;incstack = 0
 16592                           	opt	stack 11
 16593                           ; Regs used in _adcGetConversion: [wreg+status,2+status,0]
 16594                           ;adcGetConversion@channel stored from wreg
 16595                           	movlb 0	; select bank0
 16596  222E  0140               	movwf	(adcGetConversion@channel)
 16597  222F  00A3               	line	179
 16598                           	
 16599                           l4577:	
 16600  2230                     ;main.c: 177: uint16_t adcGetConversion(uint8_t channel);main.c: 178: {;main.c: 179:  AD
                                 CON0bits.CHS = channel;
 16601                           	movf	(adcGetConversion@channel),w
 16602  2230  0823               	movwf	(??_adcGetConversion+0)+0
 16603  2231  00A2               	rlf	(??_adcGetConversion+0)+0,f
 16604  2232  0DA2               	rlf	(??_adcGetConversion+0)+0,f
 16605  2233  0DA2               	movlb 1	; select bank1
 16606  2234  0141               	movf	(157)^080h,w	;volatile
 16607  2235  081D               	movlb 0	; select bank0
 16608  2236  0140               	xorwf	(??_adcGetConversion+0)+0,w
 16609  2237  0622               	andlw	not (((1<<6)-1)<<2)
 16610  2238  3903               	xorwf	(??_adcGetConversion+0)+0,w
 16611  2239  0622               	movlb 1	; select bank1
 16612  223A  0141               	movwf	(157)^080h	;volatile
 16613  223B  009D               	line	180
 16614                           	
 16615                           l4579:	
 16616  223C                     ;main.c: 180:  _delay((unsigned long)((5)*(4000000/4000000.0)));
 16617                           		opt asmopt_push
 16618                           	opt asmopt_off
 16619                           	nop2	;2 cycle nop
 16620  223C  3200               	nop2	;2 cycle nop
 16621  223D  3200               	nop
 16622  223E  0000               	opt asmopt_pop
 16623                           
 16624                           	line	181
 16625                           	
 16626                           l4581:	
 16627  223F                     ;main.c: 181:  ADCON0bits.GO = 1;
 16628                           	movlb 1	; select bank1
 16629  223F  0141               	bsf	(157)^080h,1	;volatile
 16630  2240  149D               	line	182
 16631                           ;main.c: 182:  while (ADCON0bits.GO);
 16632                           	goto	l211
 16633  2241  2A42               	
 16634                           l212:	
 16635  2242                     	
 16636                           l211:	
 16637  2242                     	btfsc	(157)^080h,1	;volatile
 16638  2242  189D               	goto	u6461
 16639  2243  2A45               	goto	u6460
 16640  2244  2A46               u6461:
 16641  2245                     	goto	l211
 16642  2245  2A42               u6460:
 16643  2246                     	goto	l4583
 16644  2246  2A47               	
 16645                           l213:	
 16646  2247                     	line	183
 16647                           	
 16648                           l4583:	
 16649  2247                     ;main.c: 183:  return (uint16_t)((ADRESH << 8) + ADRESL);
 16650                           	movf	(156)^080h,w	;volatile
 16651  2247  081C               	movlb 0	; select bank0
 16652  2248  0140               	movwf	(?_adcGetConversion+1)
 16653  2249  00A1               	movlb 1	; select bank1
 16654  224A  0141               	movf	(155)^080h,w	;volatile
 16655  224B  081B               	movlb 0	; select bank0
 16656  224C  0140               	movwf	(?_adcGetConversion)
 16657  224D  00A0               	goto	l214
 16658  224E  2A4F               	
 16659                           l4585:	
 16660  224F                     	line	184
 16661                           	
 16662                           l214:	
 16663  224F                     	return
 16664  224F  0008               	opt stack 0
 16665                           GLOBAL	__end_of_adcGetConversion
 16666                           	__end_of_adcGetConversion:
 16667  2250                     	signat	_adcGetConversion,4218
 16668                           	global	___xxtofl
 16669                           
 16670 ;; *************** function ___xxtofl *****************
 16671 ;; Defined at:
 16672 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
 16673 ;; Parameters:    Size  Location     Type
 16674 ;;  sign            1    wreg     unsigned char 
 16675 ;;  val             4    0[BANK0 ] long 
 16676 ;; Auto vars:     Size  Location     Type
 16677 ;;  sign            1    8[BANK0 ] unsigned char 
 16678 ;;  arg             4   10[BANK0 ] unsigned long 
 16679 ;;  exp             1    9[BANK0 ] unsigned char 
 16680 ;; Return value:  Size  Location     Type
 16681 ;;                  4    0[BANK0 ] unsigned char 
 16682 ;; Registers used:
 16683 ;;		wreg, status,2, status,0
 16684 ;; Tracked objects:
 16685 ;;		On entry : 0/0
 16686 ;;		On exit  : 0/0
 16687 ;;		Unchanged: 0/0
 16688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16689 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16690 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16691 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16692 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16693 ;;Total ram usage:       14 bytes
 16694 ;; Hardware stack levels used:    1
 16695 ;; Hardware stack levels required when called:    3
 16696 ;; This function calls:
 16697 ;;		Nothing
 16698 ;; This function is called by:
 16699 ;;		_convertAnalogValues
 16700 ;;		_handleSensorData
 16701 ;; This function uses a non-reentrant model
 16702 ;;
 16703                           psect	text45,local,class=CODE,delta=2,merge=1,group=1
 16704                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
 16705                           	line	10
 16706                           global __ptext45
 16707                           __ptext45:	;psect for function ___xxtofl
 16708  1C06                     psect	text45
 16709                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
 16710                           	line	10
 16711                           	global	__size_of___xxtofl
 16712                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
 16713  00B5                     	
 16714                           ___xxtofl:	
 16715  1C06                     ;incstack = 0
 16716                           	opt	stack 11
 16717                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 16718                           ;___xxtofl@sign stored from wreg
 16719                           	movlb 0	; select bank0
 16720  1C06  0140               	movwf	(___xxtofl@sign)
 16721  1C07  00A8               	line	15
 16722                           	
 16723                           l4687:	
 16724  1C08                     	movf	((___xxtofl@sign)),w
 16725  1C08  0828               	btfsc	status,2
 16726  1C09  1903               	goto	u6611
 16727  1C0A  2C0C               	goto	u6610
 16728  1C0B  2C0D               u6611:
 16729  1C0C                     	goto	l4693
 16730  1C0C  2C21               u6610:
 16731  1C0D                     	
 16732                           l4689:	
 16733  1C0D                     	btfss	(___xxtofl@val+3),7
 16734  1C0D  1FA3               	goto	u6621
 16735  1C0E  2C10               	goto	u6620
 16736  1C0F  2C11               u6621:
 16737  1C10                     	goto	l4693
 16738  1C10  2C21               u6620:
 16739  1C11                     	line	16
 16740                           	
 16741                           l4691:	
 16742  1C11                     	comf	(___xxtofl@val)+0,w
 16743  1C11  0920               	movwf	(___xxtofl@arg)
 16744  1C12  00AA               	comf	(___xxtofl@val)+1,w
 16745  1C13  0921               	movwf	(___xxtofl@arg+1)
 16746  1C14  00AB               	comf	(___xxtofl@val)+2,w
 16747  1C15  0922               	movwf	(___xxtofl@arg+2)
 16748  1C16  00AC               	comf	(___xxtofl@val)+3,w
 16749  1C17  0923               	movwf	(___xxtofl@arg+3)
 16750  1C18  00AD               	incf	(___xxtofl@arg),f
 16751  1C19  0AAA               	skipnz
 16752  1C1A  1903               	incf	(___xxtofl@arg+1),f
 16753  1C1B  0AAB               	skipnz
 16754  1C1C  1903               	incf	(___xxtofl@arg+2),f
 16755  1C1D  0AAC               	skipnz
 16756  1C1E  1903               	incf	(___xxtofl@arg+3),f
 16757  1C1F  0AAD               	line	17
 16758                           	goto	l1001
 16759  1C20  2C29               	line	18
 16760                           	
 16761                           l1000:	
 16762  1C21                     	line	19
 16763                           	
 16764                           l4693:	
 16765  1C21                     	movf	(___xxtofl@val+3),w
 16766  1C21  0823               	movwf	(___xxtofl@arg+3)
 16767  1C22  00AD               	movf	(___xxtofl@val+2),w
 16768  1C23  0822               	movwf	(___xxtofl@arg+2)
 16769  1C24  00AC               	movf	(___xxtofl@val+1),w
 16770  1C25  0821               	movwf	(___xxtofl@arg+1)
 16771  1C26  00AB               	movf	(___xxtofl@val),w
 16772  1C27  0820               	movwf	(___xxtofl@arg)
 16773  1C28  00AA               
 16774                           	line	20
 16775                           	
 16776                           l1001:	
 16777  1C29                     	line	21
 16778                           	movf	(___xxtofl@val+3),w
 16779  1C29  0823               	iorwf	(___xxtofl@val+2),w
 16780  1C2A  0422               	iorwf	(___xxtofl@val+1),w
 16781  1C2B  0421               	iorwf	(___xxtofl@val),w
 16782  1C2C  0420               	skipz
 16783  1C2D  1D03               	goto	u6631
 16784  1C2E  2C30               	goto	u6630
 16785  1C2F  2C31               u6631:
 16786  1C30                     	goto	l4699
 16787  1C30  2C3B               u6630:
 16788  1C31                     	line	22
 16789                           	
 16790                           l4695:	
 16791  1C31                     	movlw	0x0
 16792  1C31  3000               	movwf	(?___xxtofl+3)
 16793  1C32  00A3               	movlw	0x0
 16794  1C33  3000               	movwf	(?___xxtofl+2)
 16795  1C34  00A2               	movlw	0x0
 16796  1C35  3000               	movwf	(?___xxtofl+1)
 16797  1C36  00A1               	movlw	0x0
 16798  1C37  3000               	movwf	(?___xxtofl)
 16799  1C38  00A0               
 16800                           	goto	l1003
 16801  1C39  2CBA               	
 16802                           l4697:	
 16803  1C3A                     	goto	l1003
 16804  1C3A  2CBA               	
 16805                           l1002:	
 16806  1C3B                     	line	23
 16807                           	
 16808                           l4699:	
 16809  1C3B                     	movlw	low(096h)
 16810  1C3B  3096               	movwf	(??___xxtofl+0)+0
 16811  1C3C  00A4               	movf	(??___xxtofl+0)+0,w
 16812  1C3D  0824               	movwf	(___xxtofl@exp)
 16813  1C3E  00A9               	line	24
 16814                           	goto	l4703
 16815  1C3F  2C4C               	
 16816                           l1005:	
 16817  1C40                     	line	25
 16818                           	
 16819                           l4701:	
 16820  1C40                     	movlw	low(01h)
 16821  1C40  3001               	movwf	(??___xxtofl+0)+0
 16822  1C41  00A4               	movf	(??___xxtofl+0)+0,w
 16823  1C42  0824               	addwf	(___xxtofl@exp),f
 16824  1C43  07A9               	line	26
 16825                           	movlw	01h
 16826  1C44  3001               u6645:
 16827  1C45                     	lsrf	(___xxtofl@arg+3),f
 16828  1C45  36AD               	rrf	(___xxtofl@arg+2),f
 16829  1C46  0CAC               	rrf	(___xxtofl@arg+1),f
 16830  1C47  0CAB               	rrf	(___xxtofl@arg),f
 16831  1C48  0CAA               	decfsz	wreg,f
 16832  1C49  0B89               	goto	u6645
 16833  1C4A  2C45               
 16834                           	goto	l4703
 16835  1C4B  2C4C               	line	27
 16836                           	
 16837                           l1004:	
 16838  1C4C                     	line	24
 16839                           	
 16840                           l4703:	
 16841  1C4C                     	movlw	high highword(0FE000000h)
 16842  1C4C  30FE               	andwf	(___xxtofl@arg+3),w
 16843  1C4D  052D               	btfss	status,2
 16844  1C4E  1D03               	goto	u6651
 16845  1C4F  2C51               	goto	u6650
 16846  1C50  2C52               u6651:
 16847  1C51                     	goto	l4701
 16848  1C51  2C40               u6650:
 16849  1C52                     	goto	l1007
 16850  1C52  2C67               	
 16851                           l1006:	
 16852  1C53                     	line	28
 16853                           	goto	l1007
 16854  1C53  2C67               	
 16855                           l1008:	
 16856  1C54                     	line	29
 16857                           	
 16858                           l4705:	
 16859  1C54                     	movlw	low(01h)
 16860  1C54  3001               	movwf	(??___xxtofl+0)+0
 16861  1C55  00A4               	movf	(??___xxtofl+0)+0,w
 16862  1C56  0824               	addwf	(___xxtofl@exp),f
 16863  1C57  07A9               	line	30
 16864                           	
 16865                           l4707:	
 16866  1C58                     	movlw	01h
 16867  1C58  3001               	addwf	(___xxtofl@arg),f
 16868  1C59  07AA               	movlw	0
 16869  1C5A  3000               	addwfc	(___xxtofl@arg+1),f
 16870  1C5B  3DAB               	movlw	0
 16871  1C5C  3000               	addwfc	(___xxtofl@arg+2),f
 16872  1C5D  3DAC               	movlw	0
 16873  1C5E  3000               	addwfc	(___xxtofl@arg+3),f
 16874  1C5F  3DAD               	line	31
 16875                           	
 16876                           l4709:	
 16877  1C60                     	movlw	01h
 16878  1C60  3001               u6665:
 16879  1C61                     	lsrf	(___xxtofl@arg+3),f
 16880  1C61  36AD               	rrf	(___xxtofl@arg+2),f
 16881  1C62  0CAC               	rrf	(___xxtofl@arg+1),f
 16882  1C63  0CAB               	rrf	(___xxtofl@arg),f
 16883  1C64  0CAA               	decfsz	wreg,f
 16884  1C65  0B89               	goto	u6665
 16885  1C66  2C61               
 16886                           	line	32
 16887                           	
 16888                           l1007:	
 16889  1C67                     	line	28
 16890                           	movlw	high highword(0FF000000h)
 16891  1C67  30FF               	andwf	(___xxtofl@arg+3),w
 16892  1C68  052D               	btfss	status,2
 16893  1C69  1D03               	goto	u6671
 16894  1C6A  2C6C               	goto	u6670
 16895  1C6B  2C6D               u6671:
 16896  1C6C                     	goto	l4705
 16897  1C6C  2C54               u6670:
 16898  1C6D                     	goto	l4713
 16899  1C6D  2C79               	
 16900                           l1009:	
 16901  1C6E                     	line	33
 16902                           	goto	l4713
 16903  1C6E  2C79               	
 16904                           l1011:	
 16905  1C6F                     	line	34
 16906                           	
 16907                           l4711:	
 16908  1C6F                     	movlw	01h
 16909  1C6F  3001               	subwf	(___xxtofl@exp),f
 16910  1C70  02A9               	line	35
 16911                           	movlw	01h
 16912  1C71  3001               u6685:
 16913  1C72                     	lslf	(___xxtofl@arg),f
 16914  1C72  35AA               	rlf	(___xxtofl@arg+1),f
 16915  1C73  0DAB               	rlf	(___xxtofl@arg+2),f
 16916  1C74  0DAC               	rlf	(___xxtofl@arg+3),f
 16917  1C75  0DAD               	decfsz	wreg,f
 16918  1C76  0B89               	goto	u6685
 16919  1C77  2C72               	goto	l4713
 16920  1C78  2C79               	line	36
 16921                           	
 16922                           l1010:	
 16923  1C79                     	line	33
 16924                           	
 16925                           l4713:	
 16926  1C79                     	btfsc	(___xxtofl@arg+2),(23)&7
 16927  1C79  1BAC               	goto	u6691
 16928  1C7A  2C7C               	goto	u6690
 16929  1C7B  2C7D               u6691:
 16930  1C7C                     	goto	l1014
 16931  1C7C  2C84               u6690:
 16932  1C7D                     	
 16933                           l4715:	
 16934  1C7D                     	movlw	low(02h)
 16935  1C7D  3002               	subwf	(___xxtofl@exp),w
 16936  1C7E  0229               	skipnc
 16937  1C7F  1803               	goto	u6701
 16938  1C80  2C82               	goto	u6700
 16939  1C81  2C83               u6701:
 16940  1C82                     	goto	l4711
 16941  1C82  2C6F               u6700:
 16942  1C83                     	goto	l1014
 16943  1C83  2C84               	
 16944                           l1013:	
 16945  1C84                     	
 16946                           l1014:	
 16947  1C84                     	line	37
 16948                           	btfsc	(___xxtofl@exp),(0)&7
 16949  1C84  1829               	goto	u6711
 16950  1C85  2C87               	goto	u6710
 16951  1C86  2C88               u6711:
 16952  1C87                     	goto	l1015
 16953  1C87  2C90               u6710:
 16954  1C88                     	line	38
 16955                           	
 16956                           l4717:	
 16957  1C88                     	movlw	0FFh
 16958  1C88  30FF               	andwf	(___xxtofl@arg),f
 16959  1C89  05AA               	movlw	0FFh
 16960  1C8A  30FF               	andwf	(___xxtofl@arg+1),f
 16961  1C8B  05AB               	movlw	07Fh
 16962  1C8C  307F               	andwf	(___xxtofl@arg+2),f
 16963  1C8D  05AC               	movlw	0FFh
 16964  1C8E  30FF               	andwf	(___xxtofl@arg+3),f
 16965  1C8F  05AD               	
 16966                           l1015:	
 16967  1C90                     	line	39
 16968                           	clrc
 16969  1C90  1003               	rrf	(___xxtofl@exp),f
 16970  1C91  0CA9               
 16971                           	line	40
 16972                           	
 16973                           l4719:	
 16974  1C92                     	movf	(___xxtofl@exp),w
 16975  1C92  0829               	movwf	(??___xxtofl+0)+0
 16976  1C93  00A4               	clrf	(??___xxtofl+0)+0+1
 16977  1C94  01A5               	clrf	(??___xxtofl+0)+0+2
 16978  1C95  01A6               	clrf	(??___xxtofl+0)+0+3
 16979  1C96  01A7               	movlw	018h
 16980  1C97  3018               u6725:
 16981  1C98                     	lslf	(??___xxtofl+0)+0,f
 16982  1C98  35A4               	rlf	(??___xxtofl+0)+1,f
 16983  1C99  0DA5               	rlf	(??___xxtofl+0)+2,f
 16984  1C9A  0DA6               	rlf	(??___xxtofl+0)+3,f
 16985  1C9B  0DA7               u6720:
 16986  1C9C                     	decfsz	wreg,f
 16987  1C9C  0B89               	goto	u6725
 16988  1C9D  2C98               	movf	0+(??___xxtofl+0)+0,w
 16989  1C9E  0824               	iorwf	(___xxtofl@arg),f
 16990  1C9F  04AA               	movf	1+(??___xxtofl+0)+0,w
 16991  1CA0  0825               	iorwf	(___xxtofl@arg+1),f
 16992  1CA1  04AB               	movf	2+(??___xxtofl+0)+0,w
 16993  1CA2  0826               	iorwf	(___xxtofl@arg+2),f
 16994  1CA3  04AC               	movf	3+(??___xxtofl+0)+0,w
 16995  1CA4  0827               	iorwf	(___xxtofl@arg+3),f
 16996  1CA5  04AD               	line	41
 16997                           	
 16998                           l4721:	
 16999  1CA6                     	movf	((___xxtofl@sign)),w
 17000  1CA6  0828               	btfsc	status,2
 17001  1CA7  1903               	goto	u6731
 17002  1CA8  2CAA               	goto	u6730
 17003  1CA9  2CAB               u6731:
 17004  1CAA                     	goto	l4727
 17005  1CAA  2CB1               u6730:
 17006  1CAB                     	
 17007                           l4723:	
 17008  1CAB                     	btfss	(___xxtofl@val+3),7
 17009  1CAB  1FA3               	goto	u6741
 17010  1CAC  2CAE               	goto	u6740
 17011  1CAD  2CAF               u6741:
 17012  1CAE                     	goto	l4727
 17013  1CAE  2CB1               u6740:
 17014  1CAF                     	line	42
 17015                           	
 17016                           l4725:	
 17017  1CAF                     	bsf	(___xxtofl@arg)+(31/8),(31)&7
 17018  1CAF  17AD               	goto	l4727
 17019  1CB0  2CB1               	
 17020                           l1016:	
 17021  1CB1                     	line	43
 17022                           	
 17023                           l4727:	
 17024  1CB1                     	movf	(___xxtofl@arg+3),w
 17025  1CB1  082D               	movwf	(?___xxtofl+3)
 17026  1CB2  00A3               	movf	(___xxtofl@arg+2),w
 17027  1CB3  082C               	movwf	(?___xxtofl+2)
 17028  1CB4  00A2               	movf	(___xxtofl@arg+1),w
 17029  1CB5  082B               	movwf	(?___xxtofl+1)
 17030  1CB6  00A1               	movf	(___xxtofl@arg),w
 17031  1CB7  082A               	movwf	(?___xxtofl)
 17032  1CB8  00A0               
 17033                           	goto	l1003
 17034  1CB9  2CBA               	
 17035                           l4729:	
 17036  1CBA                     	line	44
 17037                           	
 17038                           l1003:	
 17039  1CBA                     	return
 17040  1CBA  0008               	opt stack 0
 17041                           GLOBAL	__end_of___xxtofl
 17042                           	__end_of___xxtofl:
 17043  1CBB                     	signat	___xxtofl,8316
 17044                           	global	___flmul
 17045                           
 17046 ;; *************** function ___flmul *****************
 17047 ;; Defined at:
 17048 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
 17049 ;; Parameters:    Size  Location     Type
 17050 ;;  b               4   14[BANK0 ] unsigned char 
 17051 ;;  a               4   18[BANK0 ] unsigned char 
 17052 ;; Auto vars:     Size  Location     Type
 17053 ;;  prod            4   34[BANK0 ] struct .
 17054 ;;  grs             4   28[BANK0 ] unsigned long 
 17055 ;;  temp            2   38[BANK0 ] struct .
 17056 ;;  bexp            1   33[BANK0 ] unsigned char 
 17057 ;;  aexp            1   32[BANK0 ] unsigned char 
 17058 ;;  sign            1   27[BANK0 ] unsigned char 
 17059 ;; Return value:  Size  Location     Type
 17060 ;;                  4   14[BANK0 ] unsigned char 
 17061 ;; Registers used:
 17062 ;;		wreg, status,2, status,0, pclath, cstack
 17063 ;; Tracked objects:
 17064 ;;		On entry : 0/0
 17065 ;;		On exit  : 0/0
 17066 ;;		Unchanged: 0/0
 17067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17068 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17069 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17070 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17071 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17072 ;;Total ram usage:       26 bytes
 17073 ;; Hardware stack levels used:    1
 17074 ;; Hardware stack levels required when called:    4
 17075 ;; This function calls:
 17076 ;;		__Umul8_16
 17077 ;; This function is called by:
 17078 ;;		_convertAnalogValues
 17079 ;;		_efgtoa
 17080 ;; This function uses a non-reentrant model
 17081 ;;
 17082                           psect	text46,local,class=CODE,delta=2,merge=1,group=1
 17083                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
 17084                           	line	8
 17085                           global __ptext46
 17086                           __ptext46:	;psect for function ___flmul
 17087  1595                     psect	text46
 17088                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
 17089                           	line	8
 17090                           	global	__size_of___flmul
 17091                           	__size_of___flmul	equ	__end_of___flmul-___flmul
 17092  026B                     	
 17093                           ___flmul:	
 17094  1595                     ;incstack = 0
 17095                           	opt	stack 6
 17096                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 17097                           	line	17
 17098                           	
 17099                           l3803:	
 17100  1595                     	movlb 0	; select bank0
 17101  1595  0140               	movf	0+(___flmul@b)+03h,w
 17102  1596  0831               	andlw	080h
 17103  1597  3980               	movwf	(??___flmul+0)+0
 17104  1598  00B6               	movf	(??___flmul+0)+0,w
 17105  1599  0836               	movwf	(___flmul@sign)
 17106  159A  00BB               	line	18
 17107                           	
 17108                           l3805:	
 17109  159B                     	lslf	0+(___flmul@b)+03h,w
 17110  159B  3531               	movwf	(??___flmul+0)+0
 17111  159C  00B6               	movf	(??___flmul+0)+0,w
 17112  159D  0836               	movwf	(___flmul@bexp)
 17113  159E  00C1               	line	19
 17114                           	
 17115                           l3807:	
 17116  159F                     	btfss	0+(___flmul@b)+02h,(7)&7
 17117  159F  1FB0               	goto	u5171
 17118  15A0  2DA2               	goto	u5170
 17119  15A1  2DA3               u5171:
 17120  15A2                     	goto	l3811
 17121  15A2  2DA5               u5170:
 17122  15A3                     	line	20
 17123                           	
 17124                           l3809:	
 17125  15A3                     	bsf	(___flmul@bexp)+(0/8),(0)&7
 17126  15A3  1441               	goto	l3811
 17127  15A4  2DA5               	line	21
 17128                           	
 17129                           l971:	
 17130  15A5                     	line	24
 17131                           	
 17132                           l3811:	
 17133  15A5                     	movf	((___flmul@bexp)),w
 17134  15A5  0841               	btfsc	status,2
 17135  15A6  1903               	goto	u5181
 17136  15A7  2DA9               	goto	u5180
 17137  15A8  2DAA               u5181:
 17138  15A9                     	goto	l3819
 17139  15A9  2DBA               u5180:
 17140  15AA                     	line	26
 17141                           	
 17142                           l3813:	
 17143  15AA                     		incf	((___flmul@bexp)),w
 17144  15AA  0A41               	btfss	status,2
 17145  15AB  1D03               	goto	u5191
 17146  15AC  2DAE               	goto	u5190
 17147  15AD  2DAF               u5191:
 17148  15AE                     	goto	l3817
 17149  15AE  2DB8               u5190:
 17150  15AF                     	line	28
 17151                           	
 17152                           l3815:	
 17153  15AF                     	movlw	0x0
 17154  15AF  3000               	movwf	(___flmul@b+3)
 17155  15B0  00B1               	movlw	0x0
 17156  15B1  3000               	movwf	(___flmul@b+2)
 17157  15B2  00B0               	movlw	0x0
 17158  15B3  3000               	movwf	(___flmul@b+1)
 17159  15B4  00AF               	movlw	0x0
 17160  15B5  3000               	movwf	(___flmul@b)
 17161  15B6  00AE               
 17162                           	goto	l3817
 17163  15B7  2DB8               	line	29
 17164                           	
 17165                           l973:	
 17166  15B8                     	line	31
 17167                           	
 17168                           l3817:	
 17169  15B8                     	bsf	(___flmul@b)+(23/8),(23)&7
 17170  15B8  17B0               	line	33
 17171                           	goto	l3821
 17172  15B9  2DC3               	line	34
 17173                           	
 17174                           l972:	
 17175  15BA                     	line	36
 17176                           	
 17177                           l3819:	
 17178  15BA                     	movlw	0x0
 17179  15BA  3000               	movwf	(___flmul@b+3)
 17180  15BB  00B1               	movlw	0x0
 17181  15BC  3000               	movwf	(___flmul@b+2)
 17182  15BD  00B0               	movlw	0x0
 17183  15BE  3000               	movwf	(___flmul@b+1)
 17184  15BF  00AF               	movlw	0x0
 17185  15C0  3000               	movwf	(___flmul@b)
 17186  15C1  00AE               
 17187                           	goto	l3821
 17188  15C2  2DC3               	line	37
 17189                           	
 17190                           l974:	
 17191  15C3                     	line	39
 17192                           	
 17193                           l3821:	
 17194  15C3                     	movf	0+(___flmul@a)+03h,w
 17195  15C3  0835               	andlw	080h
 17196  15C4  3980               	movwf	(??___flmul+0)+0
 17197  15C5  00B6               	movf	(??___flmul+0)+0,w
 17198  15C6  0836               	xorwf	(___flmul@sign),f
 17199  15C7  06BB               	line	40
 17200                           	
 17201                           l3823:	
 17202  15C8                     	lslf	0+(___flmul@a)+03h,w
 17203  15C8  3535               	movwf	(??___flmul+0)+0
 17204  15C9  00B6               	movf	(??___flmul+0)+0,w
 17205  15CA  0836               	movwf	(___flmul@aexp)
 17206  15CB  00C0               	line	41
 17207                           	
 17208                           l3825:	
 17209  15CC                     	btfss	0+(___flmul@a)+02h,(7)&7
 17210  15CC  1FB4               	goto	u5201
 17211  15CD  2DCF               	goto	u5200
 17212  15CE  2DD0               u5201:
 17213  15CF                     	goto	l3829
 17214  15CF  2DD2               u5200:
 17215  15D0                     	line	42
 17216                           	
 17217                           l3827:	
 17218  15D0                     	bsf	(___flmul@aexp)+(0/8),(0)&7
 17219  15D0  1440               	goto	l3829
 17220  15D1  2DD2               	line	43
 17221                           	
 17222                           l975:	
 17223  15D2                     	line	45
 17224                           	
 17225                           l3829:	
 17226  15D2                     	movf	((___flmul@aexp)),w
 17227  15D2  0840               	btfsc	status,2
 17228  15D3  1903               	goto	u5211
 17229  15D4  2DD6               	goto	u5210
 17230  15D5  2DD7               u5211:
 17231  15D6                     	goto	l3837
 17232  15D6  2DE7               u5210:
 17233  15D7                     	line	48
 17234                           	
 17235                           l3831:	
 17236  15D7                     		incf	((___flmul@aexp)),w
 17237  15D7  0A40               	btfss	status,2
 17238  15D8  1D03               	goto	u5221
 17239  15D9  2DDB               	goto	u5220
 17240  15DA  2DDC               u5221:
 17241  15DB                     	goto	l3835
 17242  15DB  2DE5               u5220:
 17243  15DC                     	line	50
 17244                           	
 17245                           l3833:	
 17246  15DC                     	movlw	0x0
 17247  15DC  3000               	movwf	(___flmul@a+3)
 17248  15DD  00B5               	movlw	0x0
 17249  15DE  3000               	movwf	(___flmul@a+2)
 17250  15DF  00B4               	movlw	0x0
 17251  15E0  3000               	movwf	(___flmul@a+1)
 17252  15E1  00B3               	movlw	0x0
 17253  15E2  3000               	movwf	(___flmul@a)
 17254  15E3  00B2               
 17255                           	goto	l3835
 17256  15E4  2DE5               	line	51
 17257                           	
 17258                           l977:	
 17259  15E5                     	line	53
 17260                           	
 17261                           l3835:	
 17262  15E5                     	bsf	(___flmul@a)+(23/8),(23)&7
 17263  15E5  17B4               	line	54
 17264                           	goto	l3839
 17265  15E6  2DF0               	line	55
 17266                           	
 17267                           l976:	
 17268  15E7                     	line	57
 17269                           	
 17270                           l3837:	
 17271  15E7                     	movlw	0x0
 17272  15E7  3000               	movwf	(___flmul@a+3)
 17273  15E8  00B5               	movlw	0x0
 17274  15E9  3000               	movwf	(___flmul@a+2)
 17275  15EA  00B4               	movlw	0x0
 17276  15EB  3000               	movwf	(___flmul@a+1)
 17277  15EC  00B3               	movlw	0x0
 17278  15ED  3000               	movwf	(___flmul@a)
 17279  15EE  00B2               
 17280                           	goto	l3839
 17281  15EF  2DF0               	line	58
 17282                           	
 17283                           l978:	
 17284  15F0                     	line	65
 17285                           	
 17286                           l3839:	
 17287  15F0                     	movf	((___flmul@aexp)),w
 17288  15F0  0840               	btfsc	status,2
 17289  15F1  1903               	goto	u5231
 17290  15F2  2DF4               	goto	u5230
 17291  15F3  2DF5               u5231:
 17292  15F4                     	goto	l3843
 17293  15F4  2DFB               u5230:
 17294  15F5                     	
 17295                           l3841:	
 17296  15F5                     	movf	((___flmul@bexp)),w
 17297  15F5  0841               	btfss	status,2
 17298  15F6  1D03               	goto	u5241
 17299  15F7  2DF9               	goto	u5240
 17300  15F8  2DFA               u5241:
 17301  15F9                     	goto	l3847
 17302  15F9  2E05               u5240:
 17303  15FA                     	goto	l3843
 17304  15FA  2DFB               	
 17305                           l981:	
 17306  15FB                     	line	66
 17307                           	
 17308                           l3843:	
 17309  15FB                     	movlw	0x0
 17310  15FB  3000               	movwf	(?___flmul+3)
 17311  15FC  00B1               	movlw	0x0
 17312  15FD  3000               	movwf	(?___flmul+2)
 17313  15FE  00B0               	movlw	0x0
 17314  15FF  3000               	movwf	(?___flmul+1)
 17315  1600  00AF               	movlw	0x0
 17316  1601  3000               	movwf	(?___flmul)
 17317  1602  00AE               
 17318                           	goto	l982
 17319  1603  2FFF               	
 17320                           l3845:	
 17321  1604                     	goto	l982
 17322  1604  2FFF               	line	67
 17323                           	
 17324                           l979:	
 17325  1605                     	line	119
 17326                           	
 17327                           l3847:	
 17328  1605                     	movf	(___flmul@b),w
 17329  1605  082E               	movwf	(??___flmul+0)+0
 17330  1606  00B6               	movf	(??___flmul+0)+0,w
 17331  1607  0836               	movwf	(__Umul8_16@multiplicand)
 17332  1608  00A0               	movf	0+(___flmul@a)+02h,w
 17333  1609  0834               	fcall	__Umul8_16
 17334  160A  31A3  2329  3195   	movlb 0	; select bank0
 17335  160D  0140               	movf	(1+(?__Umul8_16)),w
 17336  160E  0821               	movwf	(___flmul@temp+1)
 17337  160F  00C7               	movf	(0+(?__Umul8_16)),w
 17338  1610  0820               	movwf	(___flmul@temp)
 17339  1611  00C6               	line	120
 17340                           	
 17341                           l3849:	
 17342  1612                     	movf	(___flmul@temp),w
 17343  1612  0846               	movwf	(??___flmul+0)+0
 17344  1613  00B6               	clrf	(??___flmul+0)+0+1
 17345  1614  01B7               	clrf	(??___flmul+0)+0+2
 17346  1615  01B8               	clrf	(??___flmul+0)+0+3
 17347  1616  01B9               	movf	3+(??___flmul+0)+0,w
 17348  1617  0839               	movwf	(___flmul@grs+3)
 17349  1618  00BF               	movf	2+(??___flmul+0)+0,w
 17350  1619  0838               	movwf	(___flmul@grs+2)
 17351  161A  00BE               	movf	1+(??___flmul+0)+0,w
 17352  161B  0837               	movwf	(___flmul@grs+1)
 17353  161C  00BD               	movf	0+(??___flmul+0)+0,w
 17354  161D  0836               	movwf	(___flmul@grs)
 17355  161E  00BC               
 17356                           	line	121
 17357                           	
 17358                           l3851:	
 17359  161F                     	movf	0+(___flmul@temp)+01h,w
 17360  161F  0847               	movwf	(??___flmul+0)+0
 17361  1620  00B6               	clrf	(??___flmul+0)+0+1
 17362  1621  01B7               	clrf	(??___flmul+0)+0+2
 17363  1622  01B8               	clrf	(??___flmul+0)+0+3
 17364  1623  01B9               	movf	3+(??___flmul+0)+0,w
 17365  1624  0839               	movwf	(___flmul@prod+3)
 17366  1625  00C5               	movf	2+(??___flmul+0)+0,w
 17367  1626  0838               	movwf	(___flmul@prod+2)
 17368  1627  00C4               	movf	1+(??___flmul+0)+0,w
 17369  1628  0837               	movwf	(___flmul@prod+1)
 17370  1629  00C3               	movf	0+(??___flmul+0)+0,w
 17371  162A  0836               	movwf	(___flmul@prod)
 17372  162B  00C2               
 17373                           	line	122
 17374                           	movf	0+(___flmul@b)+01h,w
 17375  162C  082F               	movwf	(??___flmul+0)+0
 17376  162D  00B6               	movf	(??___flmul+0)+0,w
 17377  162E  0836               	movwf	(__Umul8_16@multiplicand)
 17378  162F  00A0               	movf	0+(___flmul@a)+01h,w
 17379  1630  0833               	fcall	__Umul8_16
 17380  1631  31A3  2329  3195   	movlb 0	; select bank0
 17381  1634  0140               	movf	(1+(?__Umul8_16)),w
 17382  1635  0821               	movwf	(___flmul@temp+1)
 17383  1636  00C7               	movf	(0+(?__Umul8_16)),w
 17384  1637  0820               	movwf	(___flmul@temp)
 17385  1638  00C6               	line	123
 17386                           	
 17387                           l3853:	
 17388  1639                     	movf	(___flmul@temp),w
 17389  1639  0846               	movwf	(??___flmul+0)+0
 17390  163A  00B6               	clrf	(??___flmul+0)+0+1
 17391  163B  01B7               	clrf	(??___flmul+0)+0+2
 17392  163C  01B8               	clrf	(??___flmul+0)+0+3
 17393  163D  01B9               	movf	0+(??___flmul+0)+0,w
 17394  163E  0836               	addwf	(___flmul@grs),f
 17395  163F  07BC               	movf	1+(??___flmul+0)+0,w
 17396  1640  0837               	addwfc	(___flmul@grs+1),f
 17397  1641  3DBD               	movf	2+(??___flmul+0)+0,w
 17398  1642  0838               	addwfc	(___flmul@grs+2),f
 17399  1643  3DBE               	movf	3+(??___flmul+0)+0,w
 17400  1644  0839               	addwfc	(___flmul@grs+3),f
 17401  1645  3DBF               	line	124
 17402                           	
 17403                           l3855:	
 17404  1646                     	movf	0+(___flmul@temp)+01h,w
 17405  1646  0847               	movwf	(??___flmul+0)+0
 17406  1647  00B6               	clrf	(??___flmul+0)+0+1
 17407  1648  01B7               	clrf	(??___flmul+0)+0+2
 17408  1649  01B8               	clrf	(??___flmul+0)+0+3
 17409  164A  01B9               	movf	0+(??___flmul+0)+0,w
 17410  164B  0836               	addwf	(___flmul@prod),f
 17411  164C  07C2               	movf	1+(??___flmul+0)+0,w
 17412  164D  0837               	addwfc	(___flmul@prod+1),f
 17413  164E  3DC3               	movf	2+(??___flmul+0)+0,w
 17414  164F  0838               	addwfc	(___flmul@prod+2),f
 17415  1650  3DC4               	movf	3+(??___flmul+0)+0,w
 17416  1651  0839               	addwfc	(___flmul@prod+3),f
 17417  1652  3DC5               	line	125
 17418                           	movf	0+(___flmul@b)+02h,w
 17419  1653  0830               	movwf	(??___flmul+0)+0
 17420  1654  00B6               	movf	(??___flmul+0)+0,w
 17421  1655  0836               	movwf	(__Umul8_16@multiplicand)
 17422  1656  00A0               	movf	(___flmul@a),w
 17423  1657  0832               	fcall	__Umul8_16
 17424  1658  31A3  2329  3195   	movlb 0	; select bank0
 17425  165B  0140               	movf	(1+(?__Umul8_16)),w
 17426  165C  0821               	movwf	(___flmul@temp+1)
 17427  165D  00C7               	movf	(0+(?__Umul8_16)),w
 17428  165E  0820               	movwf	(___flmul@temp)
 17429  165F  00C6               	line	126
 17430                           	
 17431                           l3857:	
 17432  1660                     	movf	(___flmul@temp),w
 17433  1660  0846               	movwf	(??___flmul+0)+0
 17434  1661  00B6               	clrf	(??___flmul+0)+0+1
 17435  1662  01B7               	clrf	(??___flmul+0)+0+2
 17436  1663  01B8               	clrf	(??___flmul+0)+0+3
 17437  1664  01B9               	movf	0+(??___flmul+0)+0,w
 17438  1665  0836               	addwf	(___flmul@grs),f
 17439  1666  07BC               	movf	1+(??___flmul+0)+0,w
 17440  1667  0837               	addwfc	(___flmul@grs+1),f
 17441  1668  3DBD               	movf	2+(??___flmul+0)+0,w
 17442  1669  0838               	addwfc	(___flmul@grs+2),f
 17443  166A  3DBE               	movf	3+(??___flmul+0)+0,w
 17444  166B  0839               	addwfc	(___flmul@grs+3),f
 17445  166C  3DBF               	line	127
 17446                           	
 17447                           l3859:	
 17448  166D                     	movf	0+(___flmul@temp)+01h,w
 17449  166D  0847               	movwf	(??___flmul+0)+0
 17450  166E  00B6               	clrf	(??___flmul+0)+0+1
 17451  166F  01B7               	clrf	(??___flmul+0)+0+2
 17452  1670  01B8               	clrf	(??___flmul+0)+0+3
 17453  1671  01B9               	movf	0+(??___flmul+0)+0,w
 17454  1672  0836               	addwf	(___flmul@prod),f
 17455  1673  07C2               	movf	1+(??___flmul+0)+0,w
 17456  1674  0837               	addwfc	(___flmul@prod+1),f
 17457  1675  3DC3               	movf	2+(??___flmul+0)+0,w
 17458  1676  0838               	addwfc	(___flmul@prod+2),f
 17459  1677  3DC4               	movf	3+(??___flmul+0)+0,w
 17460  1678  0839               	addwfc	(___flmul@prod+3),f
 17461  1679  3DC5               	line	128
 17462                           	
 17463                           l3861:	
 17464  167A                     	movlw	08h
 17465  167A  3008               u5255:
 17466  167B                     	lslf	(___flmul@grs),f
 17467  167B  35BC               	rlf	(___flmul@grs+1),f
 17468  167C  0DBD               	rlf	(___flmul@grs+2),f
 17469  167D  0DBE               	rlf	(___flmul@grs+3),f
 17470  167E  0DBF               	decfsz	wreg,f
 17471  167F  0B89               	goto	u5255
 17472  1680  2E7B               	line	129
 17473                           	
 17474                           l3863:	
 17475  1681                     	movf	0+(___flmul@b)+01h,w
 17476  1681  082F               	movwf	(??___flmul+0)+0
 17477  1682  00B6               	movf	(??___flmul+0)+0,w
 17478  1683  0836               	movwf	(__Umul8_16@multiplicand)
 17479  1684  00A0               	movf	(___flmul@a),w
 17480  1685  0832               	fcall	__Umul8_16
 17481  1686  31A3  2329  3195   	movlb 0	; select bank0
 17482  1689  0140               	movf	(1+(?__Umul8_16)),w
 17483  168A  0821               	movwf	(___flmul@temp+1)
 17484  168B  00C7               	movf	(0+(?__Umul8_16)),w
 17485  168C  0820               	movwf	(___flmul@temp)
 17486  168D  00C6               	line	130
 17487                           	
 17488                           l3865:	
 17489  168E                     	movf	(___flmul@temp),w
 17490  168E  0846               	addwf	(___flmul@grs),f
 17491  168F  07BC               	movf	(___flmul@temp+1),w
 17492  1690  0847               	addwfc	(___flmul@grs+1),f
 17493  1691  3DBD               	movlw	0
 17494  1692  3000               	addwfc	(___flmul@grs+2),f
 17495  1693  3DBE               	addwfc	(___flmul@grs+3),f
 17496  1694  3DBF               	line	131
 17497                           	
 17498                           l3867:	
 17499  1695                     	movf	(___flmul@b),w
 17500  1695  082E               	movwf	(??___flmul+0)+0
 17501  1696  00B6               	movf	(??___flmul+0)+0,w
 17502  1697  0836               	movwf	(__Umul8_16@multiplicand)
 17503  1698  00A0               	movf	0+(___flmul@a)+01h,w
 17504  1699  0833               	fcall	__Umul8_16
 17505  169A  31A3  2329  3195   	movlb 0	; select bank0
 17506  169D  0140               	movf	(1+(?__Umul8_16)),w
 17507  169E  0821               	movwf	(___flmul@temp+1)
 17508  169F  00C7               	movf	(0+(?__Umul8_16)),w
 17509  16A0  0820               	movwf	(___flmul@temp)
 17510  16A1  00C6               	line	132
 17511                           	
 17512                           l3869:	
 17513  16A2                     	movf	(___flmul@temp),w
 17514  16A2  0846               	addwf	(___flmul@grs),f
 17515  16A3  07BC               	movf	(___flmul@temp+1),w
 17516  16A4  0847               	addwfc	(___flmul@grs+1),f
 17517  16A5  3DBD               	movlw	0
 17518  16A6  3000               	addwfc	(___flmul@grs+2),f
 17519  16A7  3DBE               	addwfc	(___flmul@grs+3),f
 17520  16A8  3DBF               	line	133
 17521                           	
 17522                           l3871:	
 17523  16A9                     	movlw	08h
 17524  16A9  3008               u5265:
 17525  16AA                     	lslf	(___flmul@grs),f
 17526  16AA  35BC               	rlf	(___flmul@grs+1),f
 17527  16AB  0DBD               	rlf	(___flmul@grs+2),f
 17528  16AC  0DBE               	rlf	(___flmul@grs+3),f
 17529  16AD  0DBF               	decfsz	wreg,f
 17530  16AE  0B89               	goto	u5265
 17531  16AF  2EAA               	line	134
 17532                           	movf	(___flmul@b),w
 17533  16B0  082E               	movwf	(??___flmul+0)+0
 17534  16B1  00B6               	movf	(??___flmul+0)+0,w
 17535  16B2  0836               	movwf	(__Umul8_16@multiplicand)
 17536  16B3  00A0               	movf	(___flmul@a),w
 17537  16B4  0832               	fcall	__Umul8_16
 17538  16B5  31A3  2329  3195   	movlb 0	; select bank0
 17539  16B8  0140               	movf	(1+(?__Umul8_16)),w
 17540  16B9  0821               	movwf	(___flmul@temp+1)
 17541  16BA  00C7               	movf	(0+(?__Umul8_16)),w
 17542  16BB  0820               	movwf	(___flmul@temp)
 17543  16BC  00C6               	line	135
 17544                           	
 17545                           l3873:	
 17546  16BD                     	movf	(___flmul@temp),w
 17547  16BD  0846               	addwf	(___flmul@grs),f
 17548  16BE  07BC               	movf	(___flmul@temp+1),w
 17549  16BF  0847               	addwfc	(___flmul@grs+1),f
 17550  16C0  3DBD               	movlw	0
 17551  16C1  3000               	addwfc	(___flmul@grs+2),f
 17552  16C2  3DBE               	addwfc	(___flmul@grs+3),f
 17553  16C3  3DBF               	line	136
 17554                           	
 17555                           l3875:	
 17556  16C4                     	movf	0+(___flmul@b)+01h,w
 17557  16C4  082F               	movwf	(??___flmul+0)+0
 17558  16C5  00B6               	movf	(??___flmul+0)+0,w
 17559  16C6  0836               	movwf	(__Umul8_16@multiplicand)
 17560  16C7  00A0               	movf	0+(___flmul@a)+02h,w
 17561  16C8  0834               	fcall	__Umul8_16
 17562  16C9  31A3  2329  3195   	movlb 0	; select bank0
 17563  16CC  0140               	movf	(1+(?__Umul8_16)),w
 17564  16CD  0821               	movwf	(___flmul@temp+1)
 17565  16CE  00C7               	movf	(0+(?__Umul8_16)),w
 17566  16CF  0820               	movwf	(___flmul@temp)
 17567  16D0  00C6               	line	137
 17568                           	movf	(___flmul@temp),w
 17569  16D1  0846               	addwf	(___flmul@prod),f
 17570  16D2  07C2               	movf	(___flmul@temp+1),w
 17571  16D3  0847               	addwfc	(___flmul@prod+1),f
 17572  16D4  3DC3               	movlw	0
 17573  16D5  3000               	addwfc	(___flmul@prod+2),f
 17574  16D6  3DC4               	addwfc	(___flmul@prod+3),f
 17575  16D7  3DC5               	line	138
 17576                           	
 17577                           l3877:	
 17578  16D8                     	movf	0+(___flmul@b)+02h,w
 17579  16D8  0830               	movwf	(??___flmul+0)+0
 17580  16D9  00B6               	movf	(??___flmul+0)+0,w
 17581  16DA  0836               	movwf	(__Umul8_16@multiplicand)
 17582  16DB  00A0               	movf	0+(___flmul@a)+01h,w
 17583  16DC  0833               	fcall	__Umul8_16
 17584  16DD  31A3  2329  3195   	movlb 0	; select bank0
 17585  16E0  0140               	movf	(1+(?__Umul8_16)),w
 17586  16E1  0821               	movwf	(___flmul@temp+1)
 17587  16E2  00C7               	movf	(0+(?__Umul8_16)),w
 17588  16E3  0820               	movwf	(___flmul@temp)
 17589  16E4  00C6               	line	139
 17590                           	
 17591                           l3879:	
 17592  16E5                     	movf	(___flmul@temp),w
 17593  16E5  0846               	addwf	(___flmul@prod),f
 17594  16E6  07C2               	movf	(___flmul@temp+1),w
 17595  16E7  0847               	addwfc	(___flmul@prod+1),f
 17596  16E8  3DC3               	movlw	0
 17597  16E9  3000               	addwfc	(___flmul@prod+2),f
 17598  16EA  3DC4               	addwfc	(___flmul@prod+3),f
 17599  16EB  3DC5               	line	140
 17600                           	movf	0+(___flmul@b)+02h,w
 17601  16EC  0830               	movwf	(??___flmul+0)+0
 17602  16ED  00B6               	movf	(??___flmul+0)+0,w
 17603  16EE  0836               	movwf	(__Umul8_16@multiplicand)
 17604  16EF  00A0               	movf	0+(___flmul@a)+02h,w
 17605  16F0  0834               	fcall	__Umul8_16
 17606  16F1  31A3  2329  3195   	movlb 0	; select bank0
 17607  16F4  0140               	movf	(1+(?__Umul8_16)),w
 17608  16F5  0821               	movwf	(___flmul@temp+1)
 17609  16F6  00C7               	movf	(0+(?__Umul8_16)),w
 17610  16F7  0820               	movwf	(___flmul@temp)
 17611  16F8  00C6               	line	141
 17612                           	
 17613                           l3881:	
 17614  16F9                     	movf	(___flmul@temp),w
 17615  16F9  0846               	movwf	((??___flmul+0)+0)
 17616  16FA  00B6               	movf	(___flmul@temp+1),w
 17617  16FB  0847               	movwf	((??___flmul+0)+0+1)
 17618  16FC  00B7               	clrf	((??___flmul+0)+0+2)
 17619  16FD  01B8               	clrf	((??___flmul+0)+0+3)
 17620  16FE  01B9               	movlw	08h
 17621  16FF  3008               u5275:
 17622  1700                     	lslf	(??___flmul+0)+0,f
 17623  1700  35B6               	rlf	(??___flmul+0)+1,f
 17624  1701  0DB7               	rlf	(??___flmul+0)+2,f
 17625  1702  0DB8               	rlf	(??___flmul+0)+3,f
 17626  1703  0DB9               u5270:
 17627  1704                     	decfsz	wreg,f
 17628  1704  0B89               	goto	u5275
 17629  1705  2F00               	movf	0+(??___flmul+0)+0,w
 17630  1706  0836               	addwf	(___flmul@prod),f
 17631  1707  07C2               	movf	1+(??___flmul+0)+0,w
 17632  1708  0837               	addwfc	(___flmul@prod+1),f
 17633  1709  3DC3               	movf	2+(??___flmul+0)+0,w
 17634  170A  0838               	addwfc	(___flmul@prod+2),f
 17635  170B  3DC4               	movf	3+(??___flmul+0)+0,w
 17636  170C  0839               	addwfc	(___flmul@prod+3),f
 17637  170D  3DC5               	line	145
 17638                           	
 17639                           l3883:	
 17640  170E                     	movf	(___flmul@grs),w
 17641  170E  083C               	movwf	(??___flmul+0)+0
 17642  170F  00B6               	movf	(___flmul@grs+1),w
 17643  1710  083D               	movwf	((??___flmul+0)+0+1)
 17644  1711  00B7               	movf	(___flmul@grs+2),w
 17645  1712  083E               	movwf	((??___flmul+0)+0+2)
 17646  1713  00B8               	movf	(___flmul@grs+3),w
 17647  1714  083F               	movwf	((??___flmul+0)+0+3)
 17648  1715  00B9               	movlw	018h
 17649  1716  3018               u5285:
 17650  1717                     	lsrf	(??___flmul+0)+3,f
 17651  1717  36B9               	rrf	(??___flmul+0)+2,f
 17652  1718  0CB8               	rrf	(??___flmul+0)+1,f
 17653  1719  0CB7               	rrf	(??___flmul+0)+0,f
 17654  171A  0CB6               u5280:
 17655  171B                     	decfsz	wreg,f
 17656  171B  0B89               	goto	u5285
 17657  171C  2F17               	movf	0+(??___flmul+0)+0,w
 17658  171D  0836               	addwf	(___flmul@prod),f
 17659  171E  07C2               	movf	1+(??___flmul+0)+0,w
 17660  171F  0837               	addwfc	(___flmul@prod+1),f
 17661  1720  3DC3               	movf	2+(??___flmul+0)+0,w
 17662  1721  0838               	addwfc	(___flmul@prod+2),f
 17663  1722  3DC4               	movf	3+(??___flmul+0)+0,w
 17664  1723  0839               	addwfc	(___flmul@prod+3),f
 17665  1724  3DC5               	line	146
 17666                           	
 17667                           l3885:	
 17668  1725                     	movlw	08h
 17669  1725  3008               u5295:
 17670  1726                     	lslf	(___flmul@grs),f
 17671  1726  35BC               	rlf	(___flmul@grs+1),f
 17672  1727  0DBD               	rlf	(___flmul@grs+2),f
 17673  1728  0DBE               	rlf	(___flmul@grs+3),f
 17674  1729  0DBF               	decfsz	wreg,f
 17675  172A  0B89               	goto	u5295
 17676  172B  2F26               	line	149
 17677                           	
 17678                           l3887:	
 17679  172C                     	movf	(___flmul@bexp),w
 17680  172C  0841               	addwf	(___flmul@aexp),w
 17681  172D  0740               	movwf	(??___flmul+0)+0
 17682  172E  00B6               	clrf	(??___flmul+0)+0+1
 17683  172F  01B7               	rlf	1+(??___flmul+0)+0,f
 17684  1730  0DB7               	
 17685                           	movf	0+(??___flmul+0)+0,w
 17686  1731  0836               	addlw	082h
 17687  1732  3E82               	movwf	(___flmul@temp)
 17688  1733  00C6               	movlw	0FFh
 17689  1734  30FF               	addwfc	1+(??___flmul+0)+0,w
 17690  1735  3D37               	movwf	1+(___flmul@temp)
 17691  1736  00C7               	line	152
 17692                           	goto	l3899
 17693  1737  2F51               	
 17694                           l984:	
 17695  1738                     	line	153
 17696                           	
 17697                           l3889:	
 17698  1738                     	movlw	01h
 17699  1738  3001               u5305:
 17700  1739                     	lslf	(___flmul@prod),f
 17701  1739  35C2               	rlf	(___flmul@prod+1),f
 17702  173A  0DC3               	rlf	(___flmul@prod+2),f
 17703  173B  0DC4               	rlf	(___flmul@prod+3),f
 17704  173C  0DC5               	decfsz	wreg,f
 17705  173D  0B89               	goto	u5305
 17706  173E  2F39               	line	154
 17707                           	
 17708                           l3891:	
 17709  173F                     	btfss	(___flmul@grs+3),(31)&7
 17710  173F  1FBF               	goto	u5311
 17711  1740  2F42               	goto	u5310
 17712  1741  2F43               u5311:
 17713  1742                     	goto	l3895
 17714  1742  2F45               u5310:
 17715  1743                     	line	155
 17716                           	
 17717                           l3893:	
 17718  1743                     	bsf	(___flmul@prod)+(0/8),(0)&7
 17719  1743  1442               	goto	l3895
 17720  1744  2F45               	line	156
 17721                           	
 17722                           l985:	
 17723  1745                     	line	157
 17724                           	
 17725                           l3895:	
 17726  1745                     	movlw	01h
 17727  1745  3001               u5325:
 17728  1746                     	lslf	(___flmul@grs),f
 17729  1746  35BC               	rlf	(___flmul@grs+1),f
 17730  1747  0DBD               	rlf	(___flmul@grs+2),f
 17731  1748  0DBE               	rlf	(___flmul@grs+3),f
 17732  1749  0DBF               	decfsz	wreg,f
 17733  174A  0B89               	goto	u5325
 17734  174B  2F46               	line	158
 17735                           	
 17736                           l3897:	
 17737  174C                     	movlw	0FFh
 17738  174C  30FF               	addwf	(___flmul@temp),f
 17739  174D  07C6               	movlw	0FFh
 17740  174E  30FF               	addwfc	(___flmul@temp+1),f
 17741  174F  3DC7               	goto	l3899
 17742  1750  2F51               	line	159
 17743                           	
 17744                           l983:	
 17745  1751                     	line	152
 17746                           	
 17747                           l3899:	
 17748  1751                     	btfss	(___flmul@prod+2),(23)&7
 17749  1751  1FC4               	goto	u5331
 17750  1752  2F54               	goto	u5330
 17751  1753  2F55               u5331:
 17752  1754                     	goto	l3889
 17753  1754  2F38               u5330:
 17754  1755                     	goto	l3901
 17755  1755  2F56               	
 17756                           l986:	
 17757  1756                     	line	163
 17758                           	
 17759                           l3901:	
 17760  1756                     	clrf	(___flmul@aexp)
 17761  1756  01C0               	line	164
 17762                           	
 17763                           l3903:	
 17764  1757                     	btfss	(___flmul@grs+3),(31)&7
 17765  1757  1FBF               	goto	u5341
 17766  1758  2F5A               	goto	u5340
 17767  1759  2F5B               u5341:
 17768  175A                     	goto	l3911
 17769  175A  2F7B               u5340:
 17770  175B                     	line	165
 17771                           	
 17772                           l3905:	
 17773  175B                     	movlw	0FFh
 17774  175B  30FF               	andwf	(___flmul@grs),w
 17775  175C  053C               	movwf	(??___flmul+0)+0
 17776  175D  00B6               	movlw	0FFh
 17777  175E  30FF               	andwf	(___flmul@grs+1),w
 17778  175F  053D               	movwf	((??___flmul+0)+0+1)
 17779  1760  00B7               	movlw	0FFh
 17780  1761  30FF               	andwf	(___flmul@grs+2),w
 17781  1762  053E               	movwf	((??___flmul+0)+0+2)
 17782  1763  00B8               	movlw	07Fh
 17783  1764  307F               	andwf	(___flmul@grs+3),w
 17784  1765  053F               	movwf	((??___flmul+0)+0+3)
 17785  1766  00B9               	movf	3+(??___flmul+0)+0,w
 17786  1767  0839               	iorwf	2+(??___flmul+0)+0,w
 17787  1768  0438               	iorwf	1+(??___flmul+0)+0,w
 17788  1769  0437               	iorwf	0+(??___flmul+0)+0,w
 17789  176A  0436               	skipnz
 17790  176B  1903               	goto	u5351
 17791  176C  2F6E               	goto	u5350
 17792  176D  2F6F               u5351:
 17793  176E                     	goto	l988
 17794  176E  2F72               u5350:
 17795  176F                     	line	166
 17796                           	
 17797                           l3907:	
 17798  176F                     	clrf	(___flmul@aexp)
 17799  176F  01C0               	incf	(___flmul@aexp),f
 17800  1770  0AC0               	line	167
 17801                           	goto	l3911
 17802  1771  2F7B               	line	168
 17803                           	
 17804                           l988:	
 17805  1772                     	line	169
 17806                           	btfss	(___flmul@prod),(0)&7
 17807  1772  1C42               	goto	u5361
 17808  1773  2F75               	goto	u5360
 17809  1774  2F76               u5361:
 17810  1775                     	goto	l3911
 17811  1775  2F7B               u5360:
 17812  1776                     	line	170
 17813                           	
 17814                           l3909:	
 17815  1776                     	clrf	(___flmul@aexp)
 17816  1776  01C0               	incf	(___flmul@aexp),f
 17817  1777  0AC0               	goto	l3911
 17818  1778  2F7B               	line	171
 17819                           	
 17820                           l990:	
 17821  1779                     	goto	l3911
 17822  1779  2F7B               	line	172
 17823                           	
 17824                           l989:	
 17825  177A                     	goto	l3911
 17826  177A  2F7B               	line	173
 17827                           	
 17828                           l987:	
 17829  177B                     	line	174
 17830                           	
 17831                           l3911:	
 17832  177B                     	movf	((___flmul@aexp)),w
 17833  177B  0840               	btfsc	status,2
 17834  177C  1903               	goto	u5371
 17835  177D  2F7F               	goto	u5370
 17836  177E  2F80               u5371:
 17837  177F                     	goto	l3921
 17838  177F  2FAA               u5370:
 17839  1780                     	line	175
 17840                           	
 17841                           l3913:	
 17842  1780                     	movlw	01h
 17843  1780  3001               	addwf	(___flmul@prod),f
 17844  1781  07C2               	movlw	0
 17845  1782  3000               	addwfc	(___flmul@prod+1),f
 17846  1783  3DC3               	movlw	0
 17847  1784  3000               	addwfc	(___flmul@prod+2),f
 17848  1785  3DC4               	movlw	0
 17849  1786  3000               	addwfc	(___flmul@prod+3),f
 17850  1787  3DC5               	line	176
 17851                           	
 17852                           l3915:	
 17853  1788                     	btfss	(___flmul@prod+3),(24)&7
 17854  1788  1C45               	goto	u5381
 17855  1789  2F8B               	goto	u5380
 17856  178A  2F8C               u5381:
 17857  178B                     	goto	l3921
 17858  178B  2FAA               u5380:
 17859  178C                     	line	177
 17860                           	
 17861                           l3917:	
 17862  178C                     	movf	(___flmul@prod),w
 17863  178C  0842               	movwf	(??___flmul+0)+0
 17864  178D  00B6               	movf	(___flmul@prod+1),w
 17865  178E  0843               	movwf	((??___flmul+0)+0+1)
 17866  178F  00B7               	movf	(___flmul@prod+2),w
 17867  1790  0844               	movwf	((??___flmul+0)+0+2)
 17868  1791  00B8               	movf	(___flmul@prod+3),w
 17869  1792  0845               	movwf	((??___flmul+0)+0+3)
 17870  1793  00B9               	movlw	01h
 17871  1794  3001               	movwf	(??___flmul+4)+0
 17872  1795  00BA               u5395:
 17873  1796                     	asrf	(??___flmul+0)+3,f
 17874  1796  37B9               	rrf	(??___flmul+0)+2,f
 17875  1797  0CB8               	rrf	(??___flmul+0)+1,f
 17876  1798  0CB7               	rrf	(??___flmul+0)+0,f
 17877  1799  0CB6               u5390:
 17878  179A                     	decfsz	(??___flmul+4)+0,f
 17879  179A  0BBA               	goto	u5395
 17880  179B  2F96               	movf	3+(??___flmul+0)+0,w
 17881  179C  0839               	movwf	(___flmul@prod+3)
 17882  179D  00C5               	movf	2+(??___flmul+0)+0,w
 17883  179E  0838               	movwf	(___flmul@prod+2)
 17884  179F  00C4               	movf	1+(??___flmul+0)+0,w
 17885  17A0  0837               	movwf	(___flmul@prod+1)
 17886  17A1  00C3               	movf	0+(??___flmul+0)+0,w
 17887  17A2  0836               	movwf	(___flmul@prod)
 17888  17A3  00C2               
 17889                           	line	178
 17890                           	
 17891                           l3919:	
 17892  17A4                     	movlw	01h
 17893  17A4  3001               	addwf	(___flmul@temp),f
 17894  17A5  07C6               	movlw	0
 17895  17A6  3000               	addwfc	(___flmul@temp+1),f
 17896  17A7  3DC7               	goto	l3921
 17897  17A8  2FAA               	line	179
 17898                           	
 17899                           l992:	
 17900  17A9                     	goto	l3921
 17901  17A9  2FAA               	line	180
 17902                           	
 17903                           l991:	
 17904  17AA                     	line	183
 17905                           	
 17906                           l3921:	
 17907  17AA                     	movf	(___flmul@temp+1),w
 17908  17AA  0847               	xorlw	80h
 17909  17AB  3A80               	movwf	(??___flmul+0)+0
 17910  17AC  00B6               	movlw	(0)^80h
 17911  17AD  3080               	subwf	(??___flmul+0)+0,w
 17912  17AE  0236               	skipz
 17913  17AF  1D03               	goto	u5405
 17914  17B0  2FB3               	movlw	0FFh
 17915  17B1  30FF               	subwf	(___flmul@temp),w
 17916  17B2  0246               u5405:
 17917  17B3                     
 17918                           	skipc
 17919  17B3  1C03               	goto	u5401
 17920  17B4  2FB6               	goto	u5400
 17921  17B5  2FB7               u5401:
 17922  17B6                     	goto	l3925
 17923  17B6  2FC1               u5400:
 17924  17B7                     	line	184
 17925                           	
 17926                           l3923:	
 17927  17B7                     	movlw	07Fh
 17928  17B7  307F               	movlb 0	; select bank0
 17929  17B8  0140               	movwf	(___flmul@prod+3)
 17930  17B9  00C5               	movlw	080h
 17931  17BA  3080               	movwf	(___flmul@prod+2)
 17932  17BB  00C4               	movlw	0
 17933  17BC  3000               	movwf	(___flmul@prod+1)
 17934  17BD  00C3               	movlw	0
 17935  17BE  3000               	movwf	(___flmul@prod)
 17936  17BF  00C2               
 17937                           	line	185
 17938                           	goto	l994
 17939  17C0  2FF2               	line	187
 17940                           	
 17941                           l993:	
 17942  17C1                     	
 17943                           l3925:	
 17944  17C1                     	movlb 0	; select bank0
 17945  17C1  0140               	movf	(___flmul@temp+1),w
 17946  17C2  0847               	xorlw	80h
 17947  17C3  3A80               	movwf	(??___flmul+0)+0
 17948  17C4  00B6               	movlw	(0)^80h
 17949  17C5  3080               	subwf	(??___flmul+0)+0,w
 17950  17C6  0236               	skipz
 17951  17C7  1D03               	goto	u5415
 17952  17C8  2FCB               	movlw	01h
 17953  17C9  3001               	subwf	(___flmul@temp),w
 17954  17CA  0246               u5415:
 17955  17CB                     
 17956                           	skipnc
 17957  17CB  1803               	goto	u5411
 17958  17CC  2FCE               	goto	u5410
 17959  17CD  2FCF               u5411:
 17960  17CE                     	goto	l3931
 17961  17CE  2FDA               u5410:
 17962  17CF                     	line	188
 17963                           	
 17964                           l3927:	
 17965  17CF                     	movlw	high highword(0)
 17966  17CF  3000               	movlb 0	; select bank0
 17967  17D0  0140               	movwf	(___flmul@prod+3)
 17968  17D1  00C5               	movlw	low highword(0)
 17969  17D2  3000               	movwf	(___flmul@prod+2)
 17970  17D3  00C4               	movlw	high(0)
 17971  17D4  3000               	movwf	(___flmul@prod+1)
 17972  17D5  00C3               	movlw	low(0)
 17973  17D6  3000               	movwf	(___flmul@prod)
 17974  17D7  00C2               
 17975                           	line	190
 17976                           	
 17977                           l3929:	
 17978  17D8                     	clrf	(___flmul@sign)
 17979  17D8  01BB               	line	191
 17980                           	goto	l994
 17981  17D9  2FF2               	line	192
 17982                           	
 17983                           l995:	
 17984  17DA                     	line	194
 17985                           	
 17986                           l3931:	
 17987  17DA                     	movlb 0	; select bank0
 17988  17DA  0140               	movf	(___flmul@temp),w
 17989  17DB  0846               	movwf	(??___flmul+0)+0
 17990  17DC  00B6               	movf	(??___flmul+0)+0,w
 17991  17DD  0836               	movwf	(___flmul@bexp)
 17992  17DE  00C1               	line	195
 17993                           	movlw	0FFh
 17994  17DF  30FF               	andwf	(___flmul@prod),f
 17995  17E0  05C2               	movlw	0FFh
 17996  17E1  30FF               	andwf	(___flmul@prod+1),f
 17997  17E2  05C3               	movlw	07Fh
 17998  17E3  307F               	andwf	(___flmul@prod+2),f
 17999  17E4  05C4               	movlw	0
 18000  17E5  3000               	andwf	(___flmul@prod+3),f
 18001  17E6  05C5               	line	196
 18002                           	
 18003                           l3933:	
 18004  17E7                     	btfss	(___flmul@bexp),(0)&7
 18005  17E7  1C41               	goto	u5421
 18006  17E8  2FEA               	goto	u5420
 18007  17E9  2FEB               u5421:
 18008  17EA                     	goto	l3937
 18009  17EA  2FED               u5420:
 18010  17EB                     	line	197
 18011                           	
 18012                           l3935:	
 18013  17EB                     	bsf	0+(___flmul@prod)+02h+(7/8),(7)&7
 18014  17EB  17C4               	goto	l3937
 18015  17EC  2FED               	line	198
 18016                           	
 18017                           l997:	
 18018  17ED                     	line	199
 18019                           	
 18020                           l3937:	
 18021  17ED                     	lsrf	(___flmul@bexp),w
 18022  17ED  3641               	movwf	(??___flmul+0)+0
 18023  17EE  00B6               	movf	(??___flmul+0)+0,w
 18024  17EF  0836               	movwf	0+(___flmul@prod)+03h
 18025  17F0  00C5               	goto	l994
 18026  17F1  2FF2               	line	200
 18027                           	
 18028                           l996:	
 18029  17F2                     	
 18030                           l994:	
 18031  17F2                     	line	201
 18032                           	movf	(___flmul@sign),w
 18033  17F2  083B               	movwf	(??___flmul+0)+0
 18034  17F3  00B6               	movf	(??___flmul+0)+0,w
 18035  17F4  0836               	iorwf	0+(___flmul@prod)+03h,f
 18036  17F5  04C5               	line	203
 18037                           	
 18038                           l3939:	
 18039  17F6                     	movf	(___flmul@prod+3),w
 18040  17F6  0845               	movwf	(?___flmul+3)
 18041  17F7  00B1               	movf	(___flmul@prod+2),w
 18042  17F8  0844               	movwf	(?___flmul+2)
 18043  17F9  00B0               	movf	(___flmul@prod+1),w
 18044  17FA  0843               	movwf	(?___flmul+1)
 18045  17FB  00AF               	movf	(___flmul@prod),w
 18046  17FC  0842               	movwf	(?___flmul)
 18047  17FD  00AE               
 18048                           	goto	l982
 18049  17FE  2FFF               	
 18050                           l3941:	
 18051  17FF                     	line	205
 18052                           	
 18053                           l982:	
 18054  17FF                     	return
 18055  17FF  0008               	opt stack 0
 18056                           GLOBAL	__end_of___flmul
 18057                           	__end_of___flmul:
 18058  1800                     	signat	___flmul,8316
 18059                           	global	__Umul8_16
 18060                           
 18061 ;; *************** function __Umul8_16 *****************
 18062 ;; Defined at:
 18063 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8_16.c"
 18064 ;; Parameters:    Size  Location     Type
 18065 ;;  multiplier      1    wreg     unsigned char 
 18066 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 18067 ;; Auto vars:     Size  Location     Type
 18068 ;;  multiplier      1    8[BANK0 ] unsigned char 
 18069 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 18070 ;;  product         2    4[BANK0 ] unsigned int 
 18071 ;; Return value:  Size  Location     Type
 18072 ;;                  2    0[BANK0 ] unsigned int 
 18073 ;; Registers used:
 18074 ;;		wreg, status,2, status,0
 18075 ;; Tracked objects:
 18076 ;;		On entry : 0/0
 18077 ;;		On exit  : 0/0
 18078 ;;		Unchanged: 0/0
 18079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18080 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18081 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18082 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18083 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18084 ;;Total ram usage:        9 bytes
 18085 ;; Hardware stack levels used:    1
 18086 ;; Hardware stack levels required when called:    3
 18087 ;; This function calls:
 18088 ;;		Nothing
 18089 ;; This function is called by:
 18090 ;;		___flmul
 18091 ;; This function uses a non-reentrant model
 18092 ;;
 18093                           psect	text47,local,class=CODE,delta=2,merge=1,group=1
 18094                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8_16.c"
 18095                           	line	4
 18096                           global __ptext47
 18097                           __ptext47:	;psect for function __Umul8_16
 18098  2329                     psect	text47
 18099                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8_16.c"
 18100                           	line	4
 18101                           	global	__size_of__Umul8_16
 18102                           	__size_of__Umul8_16	equ	__end_of__Umul8_16-__Umul8_16
 18103  0027                     	
 18104                           __Umul8_16:	
 18105  2329                     ;incstack = 0
 18106                           	opt	stack 6
 18107                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 18108                           ;__Umul8_16@multiplier stored from wreg
 18109                           	movlb 0	; select bank0
 18110  2329  0140               	movwf	(__Umul8_16@multiplier)
 18111  232A  00A8               	line	5
 18112                           	
 18113                           l3365:	
 18114  232B                     	clrf	(__Umul8_16@product)
 18115  232B  01A4               	clrf	(__Umul8_16@product+1)
 18116  232C  01A5               	line	6
 18117                           	
 18118                           l3367:	
 18119  232D                     	movf	(__Umul8_16@multiplicand),w
 18120  232D  0820               	movwf	(??__Umul8_16+0)+0
 18121  232E  00A2               	clrf	(??__Umul8_16+0)+0+1
 18122  232F  01A3               	movf	0+(??__Umul8_16+0)+0,w
 18123  2330  0822               	movwf	(__Umul8_16@word_mpld)
 18124  2331  00A6               	movf	1+(??__Umul8_16+0)+0,w
 18125  2332  0823               	movwf	(__Umul8_16@word_mpld+1)
 18126  2333  00A7               	goto	l3369
 18127  2334  2B35               	line	50
 18128                           	
 18129                           l1168:	
 18130  2335                     	line	51
 18131                           	
 18132                           l3369:	
 18133  2335                     	btfss	(__Umul8_16@multiplier),(0)&7
 18134  2335  1C28               	goto	u4111
 18135  2336  2B38               	goto	u4110
 18136  2337  2B39               u4111:
 18137  2338                     	goto	l1169
 18138  2338  2B3D               u4110:
 18139  2339                     	line	52
 18140                           	
 18141                           l3371:	
 18142  2339                     	movf	(__Umul8_16@word_mpld),w
 18143  2339  0826               	addwf	(__Umul8_16@product),f
 18144  233A  07A4               	movf	(__Umul8_16@word_mpld+1),w
 18145  233B  0827               	addwfc	(__Umul8_16@product+1),f
 18146  233C  3DA5               	line	53
 18147                           	
 18148                           l1169:	
 18149  233D                     	line	54
 18150                           	movlw	01h
 18151  233D  3001               	
 18152                           u4125:
 18153  233E                     	lslf	(__Umul8_16@word_mpld),f
 18154  233E  35A6               	rlf	(__Umul8_16@word_mpld+1),f
 18155  233F  0DA7               	decfsz	wreg,f
 18156  2340  0B89               	goto	u4125
 18157  2341  2B3E               	line	55
 18158                           	clrc
 18159  2342  1003               	rrf	(__Umul8_16@multiplier),f
 18160  2343  0CA8               
 18161                           	line	56
 18162                           	
 18163                           l3373:	
 18164  2344                     	movf	((__Umul8_16@multiplier)),w
 18165  2344  0828               	btfss	status,2
 18166  2345  1D03               	goto	u4131
 18167  2346  2B48               	goto	u4130
 18168  2347  2B49               u4131:
 18169  2348                     	goto	l3369
 18170  2348  2B35               u4130:
 18171  2349                     	goto	l3375
 18172  2349  2B4A               	
 18173                           l1170:	
 18174  234A                     	line	59
 18175                           	
 18176                           l3375:	
 18177  234A                     	movf	(__Umul8_16@product+1),w
 18178  234A  0825               	movwf	(?__Umul8_16+1)
 18179  234B  00A1               	movf	(__Umul8_16@product),w
 18180  234C  0824               	movwf	(?__Umul8_16)
 18181  234D  00A0               	goto	l1171
 18182  234E  2B4F               	
 18183                           l3377:	
 18184  234F                     	line	60
 18185                           	
 18186                           l1171:	
 18187  234F                     	return
 18188  234F  0008               	opt stack 0
 18189                           GLOBAL	__end_of__Umul8_16
 18190                           	__end_of__Umul8_16:
 18191  2350                     	signat	__Umul8_16,8314
 18192                           	global	___fldiv
 18193                           
 18194 ;; *************** function ___fldiv *****************
 18195 ;; Defined at:
 18196 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcdiv.c"
 18197 ;; Parameters:    Size  Location     Type
 18198 ;;  a               4   40[BANK0 ] unsigned int 
 18199 ;;  b               4   44[BANK0 ] unsigned int 
 18200 ;; Auto vars:     Size  Location     Type
 18201 ;;  grs             4   60[BANK0 ] unsigned long 
 18202 ;;  rem             4   53[BANK0 ] unsigned long 
 18203 ;;  new_exp         2   58[BANK0 ] int 
 18204 ;;  aexp            1   65[BANK0 ] unsigned char 
 18205 ;;  bexp            1   64[BANK0 ] unsigned char 
 18206 ;;  sign            1   57[BANK0 ] unsigned char 
 18207 ;; Return value:  Size  Location     Type
 18208 ;;                  4   40[BANK0 ] unsigned char 
 18209 ;; Registers used:
 18210 ;;		wreg, status,2, status,0
 18211 ;; Tracked objects:
 18212 ;;		On entry : 0/0
 18213 ;;		On exit  : 0/0
 18214 ;;		Unchanged: 0/0
 18215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18216 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18217 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18218 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18219 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18220 ;;Total ram usage:       26 bytes
 18221 ;; Hardware stack levels used:    1
 18222 ;; Hardware stack levels required when called:    3
 18223 ;; This function calls:
 18224 ;;		Nothing
 18225 ;; This function is called by:
 18226 ;;		_convertAnalogValues
 18227 ;;		_efgtoa
 18228 ;; This function uses a non-reentrant model
 18229 ;;
 18230                           psect	text48,local,class=CODE,delta=2,merge=1,group=1
 18231                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcdiv.c"
 18232                           	line	8
 18233                           global __ptext48
 18234                           __ptext48:	;psect for function ___fldiv
 18235  13B6                     psect	text48
 18236                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcdiv.c"
 18237                           	line	8
 18238                           	global	__size_of___fldiv
 18239                           	__size_of___fldiv	equ	__end_of___fldiv-___fldiv
 18240  01DF                     	
 18241                           ___fldiv:	
 18242  13B6                     ;incstack = 0
 18243                           	opt	stack 7
 18244                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 18245                           	line	26
 18246                           	
 18247                           l3663:	
 18248  13B6                     	movlb 0	; select bank0
 18249  13B6  0140               	movf	0+(___fldiv@b)+03h,w
 18250  13B7  084F               	andlw	080h
 18251  13B8  3980               	movwf	(??___fldiv+0)+0
 18252  13B9  00D0               	movf	(??___fldiv+0)+0,w
 18253  13BA  0850               	movwf	(___fldiv@sign)
 18254  13BB  00D9               	line	27
 18255                           	
 18256                           l3665:	
 18257  13BC                     	lslf	0+(___fldiv@b)+03h,w
 18258  13BC  354F               	movwf	(??___fldiv+0)+0
 18259  13BD  00D0               	movf	(??___fldiv+0)+0,w
 18260  13BE  0850               	movwf	(___fldiv@bexp)
 18261  13BF  00E0               	line	28
 18262                           	
 18263                           l3667:	
 18264  13C0                     	btfss	0+(___fldiv@b)+02h,(7)&7
 18265  13C0  1FCE               	goto	u4881
 18266  13C1  2BC3               	goto	u4880
 18267  13C2  2BC4               u4881:
 18268  13C3                     	goto	l3671
 18269  13C3  2BC6               u4880:
 18270  13C4                     	line	29
 18271                           	
 18272                           l3669:	
 18273  13C4                     	bsf	(___fldiv@bexp)+(0/8),(0)&7
 18274  13C4  1460               	goto	l3671
 18275  13C5  2BC6               	line	30
 18276                           	
 18277                           l935:	
 18278  13C6                     	line	33
 18279                           	
 18280                           l3671:	
 18281  13C6                     	movf	((___fldiv@bexp)),w
 18282  13C6  0860               	btfsc	status,2
 18283  13C7  1903               	goto	u4891
 18284  13C8  2BCA               	goto	u4890
 18285  13C9  2BCB               u4891:
 18286  13CA                     	goto	l3681
 18287  13CA  2BDC               u4890:
 18288  13CB                     	line	35
 18289                           	
 18290                           l3673:	
 18291  13CB                     		incf	((___fldiv@bexp)),w
 18292  13CB  0A60               	btfss	status,2
 18293  13CC  1D03               	goto	u4901
 18294  13CD  2BCF               	goto	u4900
 18295  13CE  2BD0               u4901:
 18296  13CF                     	goto	l3677
 18297  13CF  2BD9               u4900:
 18298  13D0                     	line	37
 18299                           	
 18300                           l3675:	
 18301  13D0                     	movlw	0x0
 18302  13D0  3000               	movwf	(___fldiv@b+3)
 18303  13D1  00CF               	movlw	0x0
 18304  13D2  3000               	movwf	(___fldiv@b+2)
 18305  13D3  00CE               	movlw	0x0
 18306  13D4  3000               	movwf	(___fldiv@b+1)
 18307  13D5  00CD               	movlw	0x0
 18308  13D6  3000               	movwf	(___fldiv@b)
 18309  13D7  00CC               
 18310                           	goto	l3677
 18311  13D8  2BD9               	line	38
 18312                           	
 18313                           l937:	
 18314  13D9                     	line	40
 18315                           	
 18316                           l3677:	
 18317  13D9                     	bsf	(___fldiv@b)+(23/8),(23)&7
 18318  13D9  17CE               	line	42
 18319                           	
 18320                           l3679:	
 18321  13DA                     	clrf	0+(___fldiv@b)+03h
 18322  13DA  01CF               	line	43
 18323                           	goto	l3683
 18324  13DB  2BE5               	line	44
 18325                           	
 18326                           l936:	
 18327  13DC                     	line	46
 18328                           	
 18329                           l3681:	
 18330  13DC                     	movlw	0x0
 18331  13DC  3000               	movwf	(___fldiv@b+3)
 18332  13DD  00CF               	movlw	0x0
 18333  13DE  3000               	movwf	(___fldiv@b+2)
 18334  13DF  00CE               	movlw	0x0
 18335  13E0  3000               	movwf	(___fldiv@b+1)
 18336  13E1  00CD               	movlw	0x0
 18337  13E2  3000               	movwf	(___fldiv@b)
 18338  13E3  00CC               
 18339                           	goto	l3683
 18340  13E4  2BE5               	line	47
 18341                           	
 18342                           l938:	
 18343  13E5                     	line	49
 18344                           	
 18345                           l3683:	
 18346  13E5                     	movf	0+(___fldiv@a)+03h,w
 18347  13E5  084B               	andlw	080h
 18348  13E6  3980               	movwf	(??___fldiv+0)+0
 18349  13E7  00D0               	movf	(??___fldiv+0)+0,w
 18350  13E8  0850               	xorwf	(___fldiv@sign),f
 18351  13E9  06D9               	line	50
 18352                           	
 18353                           l3685:	
 18354  13EA                     	lslf	0+(___fldiv@a)+03h,w
 18355  13EA  354B               	movwf	(??___fldiv+0)+0
 18356  13EB  00D0               	movf	(??___fldiv+0)+0,w
 18357  13EC  0850               	movwf	(___fldiv@aexp)
 18358  13ED  00E1               	line	51
 18359                           	
 18360                           l3687:	
 18361  13EE                     	btfss	0+(___fldiv@a)+02h,(7)&7
 18362  13EE  1FCA               	goto	u4911
 18363  13EF  2BF1               	goto	u4910
 18364  13F0  2BF2               u4911:
 18365  13F1                     	goto	l3691
 18366  13F1  2BF4               u4910:
 18367  13F2                     	line	52
 18368                           	
 18369                           l3689:	
 18370  13F2                     	bsf	(___fldiv@aexp)+(0/8),(0)&7
 18371  13F2  1461               	goto	l3691
 18372  13F3  2BF4               	line	53
 18373                           	
 18374                           l939:	
 18375  13F4                     	line	56
 18376                           	
 18377                           l3691:	
 18378  13F4                     	movf	((___fldiv@aexp)),w
 18379  13F4  0861               	btfsc	status,2
 18380  13F5  1903               	goto	u4921
 18381  13F6  2BF8               	goto	u4920
 18382  13F7  2BF9               u4921:
 18383  13F8                     	goto	l3701
 18384  13F8  2C0A               u4920:
 18385  13F9                     	line	58
 18386                           	
 18387                           l3693:	
 18388  13F9                     		incf	((___fldiv@aexp)),w
 18389  13F9  0A61               	btfss	status,2
 18390  13FA  1D03               	goto	u4931
 18391  13FB  2BFD               	goto	u4930
 18392  13FC  2BFE               u4931:
 18393  13FD                     	goto	l3697
 18394  13FD  2C07               u4930:
 18395  13FE                     	line	60
 18396                           	
 18397                           l3695:	
 18398  13FE                     	movlw	0x0
 18399  13FE  3000               	movwf	(___fldiv@a+3)
 18400  13FF  00CB               	movlw	0x0
 18401  1400  3000               	movwf	(___fldiv@a+2)
 18402  1401  00CA               	movlw	0x0
 18403  1402  3000               	movwf	(___fldiv@a+1)
 18404  1403  00C9               	movlw	0x0
 18405  1404  3000               	movwf	(___fldiv@a)
 18406  1405  00C8               
 18407                           	goto	l3697
 18408  1406  2C07               	line	61
 18409                           	
 18410                           l941:	
 18411  1407                     	line	63
 18412                           	
 18413                           l3697:	
 18414  1407                     	bsf	(___fldiv@a)+(23/8),(23)&7
 18415  1407  17CA               	line	65
 18416                           	
 18417                           l3699:	
 18418  1408                     	clrf	0+(___fldiv@a)+03h
 18419  1408  01CB               	line	66
 18420                           	goto	l942
 18421  1409  2C12               	line	67
 18422                           	
 18423                           l940:	
 18424  140A                     	line	69
 18425                           	
 18426                           l3701:	
 18427  140A                     	movlw	0x0
 18428  140A  3000               	movwf	(___fldiv@a+3)
 18429  140B  00CB               	movlw	0x0
 18430  140C  3000               	movwf	(___fldiv@a+2)
 18431  140D  00CA               	movlw	0x0
 18432  140E  3000               	movwf	(___fldiv@a+1)
 18433  140F  00C9               	movlw	0x0
 18434  1410  3000               	movwf	(___fldiv@a)
 18435  1411  00C8               
 18436                           	line	70
 18437                           	
 18438                           l942:	
 18439  1412                     	line	75
 18440                           	movf	(___fldiv@a+3),w
 18441  1412  084B               	iorwf	(___fldiv@a+2),w
 18442  1413  044A               	iorwf	(___fldiv@a+1),w
 18443  1414  0449               	iorwf	(___fldiv@a),w
 18444  1415  0448               	skipz
 18445  1416  1D03               	goto	u4941
 18446  1417  2C19               	goto	u4940
 18447  1418  2C1A               u4941:
 18448  1419                     	goto	l3711
 18449  1419  2C34               u4940:
 18450  141A                     	line	76
 18451                           	
 18452                           l3703:	
 18453  141A                     	movlw	high highword(0)
 18454  141A  3000               	movwf	(___fldiv@b+3)
 18455  141B  00CF               	movlw	low highword(0)
 18456  141C  3000               	movwf	(___fldiv@b+2)
 18457  141D  00CE               	movlw	high(0)
 18458  141E  3000               	movwf	(___fldiv@b+1)
 18459  141F  00CD               	movlw	low(0)
 18460  1420  3000               	movwf	(___fldiv@b)
 18461  1421  00CC               
 18462                           	line	77
 18463                           	movlw	080h
 18464  1422  3080               	iorwf	0+(___fldiv@b)+02h,f
 18465  1423  04CE               	movlw	07Fh
 18466  1424  307F               	iorwf	1+(___fldiv@b)+02h,f
 18467  1425  04CF               	line	78
 18468                           	
 18469                           l3705:	
 18470  1426                     	movf	(___fldiv@sign),w
 18471  1426  0859               	movwf	(??___fldiv+0)+0
 18472  1427  00D0               	movf	(??___fldiv+0)+0,w
 18473  1428  0850               	iorwf	0+(___fldiv@b)+03h,f
 18474  1429  04CF               	line	79
 18475                           	
 18476                           l3707:	
 18477  142A                     	movf	(___fldiv@b+3),w
 18478  142A  084F               	movwf	(?___fldiv+3)
 18479  142B  00CB               	movf	(___fldiv@b+2),w
 18480  142C  084E               	movwf	(?___fldiv+2)
 18481  142D  00CA               	movf	(___fldiv@b+1),w
 18482  142E  084D               	movwf	(?___fldiv+1)
 18483  142F  00C9               	movf	(___fldiv@b),w
 18484  1430  084C               	movwf	(?___fldiv)
 18485  1431  00C8               
 18486                           	goto	l944
 18487  1432  2D94               	
 18488                           l3709:	
 18489  1433                     	goto	l944
 18490  1433  2D94               	line	80
 18491                           	
 18492                           l943:	
 18493  1434                     	line	83
 18494                           	
 18495                           l3711:	
 18496  1434                     	movf	((___fldiv@bexp)),w
 18497  1434  0860               	btfss	status,2
 18498  1435  1D03               	goto	u4951
 18499  1436  2C38               	goto	u4950
 18500  1437  2C39               u4951:
 18501  1438                     	goto	l3717
 18502  1438  2C4B               u4950:
 18503  1439                     	line	84
 18504                           	
 18505                           l3713:	
 18506  1439                     	movlw	high highword(0)
 18507  1439  3000               	movwf	(___fldiv@b+3)
 18508  143A  00CF               	movlw	low highword(0)
 18509  143B  3000               	movwf	(___fldiv@b+2)
 18510  143C  00CE               	movlw	high(0)
 18511  143D  3000               	movwf	(___fldiv@b+1)
 18512  143E  00CD               	movlw	low(0)
 18513  143F  3000               	movwf	(___fldiv@b)
 18514  1440  00CC               
 18515                           	line	85
 18516                           	movf	(___fldiv@b+3),w
 18517  1441  084F               	movwf	(?___fldiv+3)
 18518  1442  00CB               	movf	(___fldiv@b+2),w
 18519  1443  084E               	movwf	(?___fldiv+2)
 18520  1444  00CA               	movf	(___fldiv@b+1),w
 18521  1445  084D               	movwf	(?___fldiv+1)
 18522  1446  00C9               	movf	(___fldiv@b),w
 18523  1447  084C               	movwf	(?___fldiv)
 18524  1448  00C8               
 18525                           	goto	l944
 18526  1449  2D94               	
 18527                           l3715:	
 18528  144A                     	goto	l944
 18529  144A  2D94               	line	86
 18530                           	
 18531                           l945:	
 18532  144B                     	line	89
 18533                           	
 18534                           l3717:	
 18535  144B                     	movf	(___fldiv@aexp),w
 18536  144B  0861               	movwf	(??___fldiv+0)+0
 18537  144C  00D0               	clrf	(??___fldiv+0)+0+1
 18538  144D  01D1               	comf	(??___fldiv+0)+0,f
 18539  144E  09D0               	comf	(??___fldiv+0)+1,f
 18540  144F  09D1               	incf	(??___fldiv+0)+0,f
 18541  1450  0AD0               	skipnz
 18542  1451  1903               	incf	(??___fldiv+0)+1,f
 18543  1452  0AD1               	movf	(___fldiv@bexp),w
 18544  1453  0860               	addwf	0+(??___fldiv+0)+0,w
 18545  1454  0750               	movwf	(??___fldiv+2)+0
 18546  1455  00D2               	movf	1+(??___fldiv+0)+0,w
 18547  1456  0851               	skipnc
 18548  1457  1803               	incf	1+(??___fldiv+0)+0,w
 18549  1458  0A51               	movwf	((??___fldiv+2)+0)+1
 18550  1459  00D3               	movf	0+(??___fldiv+2)+0,w
 18551  145A  0852               	addlw	07Fh
 18552  145B  3E7F               	movwf	(___fldiv@new_exp)
 18553  145C  00DA               	movlw	0
 18554  145D  3000               	addwfc	1+(??___fldiv+2)+0,w
 18555  145E  3D53               	movwf	1+(___fldiv@new_exp)
 18556  145F  00DB               	line	92
 18557                           	
 18558                           l3719:	
 18559  1460                     	movf	(___fldiv@b+3),w
 18560  1460  084F               	movwf	(___fldiv@rem+3)
 18561  1461  00D8               	movf	(___fldiv@b+2),w
 18562  1462  084E               	movwf	(___fldiv@rem+2)
 18563  1463  00D7               	movf	(___fldiv@b+1),w
 18564  1464  084D               	movwf	(___fldiv@rem+1)
 18565  1465  00D6               	movf	(___fldiv@b),w
 18566  1466  084C               	movwf	(___fldiv@rem)
 18567  1467  00D5               
 18568                           	line	93
 18569                           	
 18570                           l3721:	
 18571  1468                     	movlw	high highword(0)
 18572  1468  3000               	movwf	(___fldiv@b+3)
 18573  1469  00CF               	movlw	low highword(0)
 18574  146A  3000               	movwf	(___fldiv@b+2)
 18575  146B  00CE               	movlw	high(0)
 18576  146C  3000               	movwf	(___fldiv@b+1)
 18577  146D  00CD               	movlw	low(0)
 18578  146E  3000               	movwf	(___fldiv@b)
 18579  146F  00CC               
 18580                           	line	94
 18581                           	
 18582                           l3723:	
 18583  1470                     	movlw	high highword(0)
 18584  1470  3000               	movwf	(___fldiv@grs+3)
 18585  1471  00DF               	movlw	low highword(0)
 18586  1472  3000               	movwf	(___fldiv@grs+2)
 18587  1473  00DE               	movlw	high(0)
 18588  1474  3000               	movwf	(___fldiv@grs+1)
 18589  1475  00DD               	movlw	low(0)
 18590  1476  3000               	movwf	(___fldiv@grs)
 18591  1477  00DC               
 18592                           	line	96
 18593                           	
 18594                           l3725:	
 18595  1478                     	clrf	(___fldiv@aexp)
 18596  1478  01E1               	line	97
 18597                           	goto	l3745
 18598  1479  2CBC               	
 18599                           l947:	
 18600  147A                     	line	100
 18601                           	
 18602                           l3727:	
 18603  147A                     	movf	((___fldiv@aexp)),w
 18604  147A  0861               	btfsc	status,2
 18605  147B  1903               	goto	u4961
 18606  147C  2C7E               	goto	u4960
 18607  147D  2C7F               u4961:
 18608  147E                     	goto	l3737
 18609  147E  2C9B               u4960:
 18610  147F                     	line	101
 18611                           	
 18612                           l3729:	
 18613  147F                     	movlw	01h
 18614  147F  3001               u4975:
 18615  1480                     	lslf	(___fldiv@rem),f
 18616  1480  35D5               	rlf	(___fldiv@rem+1),f
 18617  1481  0DD6               	rlf	(___fldiv@rem+2),f
 18618  1482  0DD7               	rlf	(___fldiv@rem+3),f
 18619  1483  0DD8               	decfsz	wreg,f
 18620  1484  0B89               	goto	u4975
 18621  1485  2C80               	line	102
 18622                           	movlw	01h
 18623  1486  3001               u4985:
 18624  1487                     	lslf	(___fldiv@b),f
 18625  1487  35CC               	rlf	(___fldiv@b+1),f
 18626  1488  0DCD               	rlf	(___fldiv@b+2),f
 18627  1489  0DCE               	rlf	(___fldiv@b+3),f
 18628  148A  0DCF               	decfsz	wreg,f
 18629  148B  0B89               	goto	u4985
 18630  148C  2C87               	line	103
 18631                           	
 18632                           l3731:	
 18633  148D                     	btfss	(___fldiv@grs+3),(31)&7
 18634  148D  1FDF               	goto	u4991
 18635  148E  2C90               	goto	u4990
 18636  148F  2C91               u4991:
 18637  1490                     	goto	l3735
 18638  1490  2C93               u4990:
 18639  1491                     	line	104
 18640                           	
 18641                           l3733:	
 18642  1491                     	bsf	(___fldiv@b)+(0/8),(0)&7
 18643  1491  144C               	goto	l3735
 18644  1492  2C93               	line	105
 18645                           	
 18646                           l949:	
 18647  1493                     	line	106
 18648                           	
 18649                           l3735:	
 18650  1493                     	movlw	01h
 18651  1493  3001               u5005:
 18652  1494                     	lslf	(___fldiv@grs),f
 18653  1494  35DC               	rlf	(___fldiv@grs+1),f
 18654  1495  0DDD               	rlf	(___fldiv@grs+2),f
 18655  1496  0DDE               	rlf	(___fldiv@grs+3),f
 18656  1497  0DDF               	decfsz	wreg,f
 18657  1498  0B89               	goto	u5005
 18658  1499  2C94               	goto	l3737
 18659  149A  2C9B               	line	107
 18660                           	
 18661                           l948:	
 18662  149B                     	line	112
 18663                           	
 18664                           l3737:	
 18665  149B                     	movf	(___fldiv@a+3),w
 18666  149B  084B               	subwf	(___fldiv@rem+3),w
 18667  149C  0258               	skipz
 18668  149D  1D03               	goto	u5015
 18669  149E  2CA9               	movf	(___fldiv@a+2),w
 18670  149F  084A               	subwf	(___fldiv@rem+2),w
 18671  14A0  0257               	skipz
 18672  14A1  1D03               	goto	u5015
 18673  14A2  2CA9               	movf	(___fldiv@a+1),w
 18674  14A3  0849               	subwf	(___fldiv@rem+1),w
 18675  14A4  0256               	skipz
 18676  14A5  1D03               	goto	u5015
 18677  14A6  2CA9               	movf	(___fldiv@a),w
 18678  14A7  0848               	subwf	(___fldiv@rem),w
 18679  14A8  0255               u5015:
 18680  14A9                     	skipc
 18681  14A9  1C03               	goto	u5011
 18682  14AA  2CAC               	goto	u5010
 18683  14AB  2CAD               u5011:
 18684  14AC                     	goto	l3743
 18685  14AC  2CB7               u5010:
 18686  14AD                     	line	115
 18687                           	
 18688                           l3739:	
 18689  14AD                     	bsf	(___fldiv@grs)+(30/8),(30)&7
 18690  14AD  175F               	line	116
 18691                           	
 18692                           l3741:	
 18693  14AE                     	movf	(___fldiv@a),w
 18694  14AE  0848               	subwf	(___fldiv@rem),f
 18695  14AF  02D5               	movf	(___fldiv@a+1),w
 18696  14B0  0849               	subwfb	(___fldiv@rem+1),f
 18697  14B1  3BD6               	movf	(___fldiv@a+2),w
 18698  14B2  084A               	subwfb	(___fldiv@rem+2),f
 18699  14B3  3BD7               	movf	(___fldiv@a+3),w
 18700  14B4  084B               	subwfb	(___fldiv@rem+3),f
 18701  14B5  3BD8               	goto	l3743
 18702  14B6  2CB7               	line	117
 18703                           	
 18704                           l950:	
 18705  14B7                     	line	118
 18706                           	
 18707                           l3743:	
 18708  14B7                     	movlw	low(01h)
 18709  14B7  3001               	movwf	(??___fldiv+0)+0
 18710  14B8  00D0               	movf	(??___fldiv+0)+0,w
 18711  14B9  0850               	addwf	(___fldiv@aexp),f
 18712  14BA  07E1               	goto	l3745
 18713  14BB  2CBC               	line	119
 18714                           	
 18715                           l946:	
 18716  14BC                     	line	97
 18717                           	
 18718                           l3745:	
 18719  14BC                     	movlw	low(01Ah)
 18720  14BC  301A               	subwf	(___fldiv@aexp),w
 18721  14BD  0261               	skipc
 18722  14BE  1C03               	goto	u5021
 18723  14BF  2CC1               	goto	u5020
 18724  14C0  2CC2               u5021:
 18725  14C1                     	goto	l3727
 18726  14C1  2C7A               u5020:
 18727  14C2                     	goto	l3747
 18728  14C2  2CC3               	
 18729                           l951:	
 18730  14C3                     	line	122
 18731                           	
 18732                           l3747:	
 18733  14C3                     	movf	(___fldiv@rem+3),w
 18734  14C3  0858               	iorwf	(___fldiv@rem+2),w
 18735  14C4  0457               	iorwf	(___fldiv@rem+1),w
 18736  14C5  0456               	iorwf	(___fldiv@rem),w
 18737  14C6  0455               	skipnz
 18738  14C7  1903               	goto	u5031
 18739  14C8  2CCA               	goto	u5030
 18740  14C9  2CCB               u5031:
 18741  14CA                     	goto	l3761
 18742  14CA  2CE7               u5030:
 18743  14CB                     	line	123
 18744                           	
 18745                           l3749:	
 18746  14CB                     	bsf	(___fldiv@grs)+(0/8),(0)&7
 18747  14CB  145C               	goto	l3761
 18748  14CC  2CE7               	line	124
 18749                           	
 18750                           l952:	
 18751  14CD                     	line	127
 18752                           	goto	l3761
 18753  14CD  2CE7               	
 18754                           l954:	
 18755  14CE                     	line	128
 18756                           	
 18757                           l3751:	
 18758  14CE                     	movlw	01h
 18759  14CE  3001               u5045:
 18760  14CF                     	lslf	(___fldiv@b),f
 18761  14CF  35CC               	rlf	(___fldiv@b+1),f
 18762  14D0  0DCD               	rlf	(___fldiv@b+2),f
 18763  14D1  0DCE               	rlf	(___fldiv@b+3),f
 18764  14D2  0DCF               	decfsz	wreg,f
 18765  14D3  0B89               	goto	u5045
 18766  14D4  2CCF               	line	129
 18767                           	
 18768                           l3753:	
 18769  14D5                     	btfss	(___fldiv@grs+3),(31)&7
 18770  14D5  1FDF               	goto	u5051
 18771  14D6  2CD8               	goto	u5050
 18772  14D7  2CD9               u5051:
 18773  14D8                     	goto	l3757
 18774  14D8  2CDB               u5050:
 18775  14D9                     	line	130
 18776                           	
 18777                           l3755:	
 18778  14D9                     	bsf	(___fldiv@b)+(0/8),(0)&7
 18779  14D9  144C               	goto	l3757
 18780  14DA  2CDB               	line	131
 18781                           	
 18782                           l955:	
 18783  14DB                     	line	132
 18784                           	
 18785                           l3757:	
 18786  14DB                     	movlw	01h
 18787  14DB  3001               u5065:
 18788  14DC                     	lslf	(___fldiv@grs),f
 18789  14DC  35DC               	rlf	(___fldiv@grs+1),f
 18790  14DD  0DDD               	rlf	(___fldiv@grs+2),f
 18791  14DE  0DDE               	rlf	(___fldiv@grs+3),f
 18792  14DF  0DDF               	decfsz	wreg,f
 18793  14E0  0B89               	goto	u5065
 18794  14E1  2CDC               	line	133
 18795                           	
 18796                           l3759:	
 18797  14E2                     	movlw	0FFh
 18798  14E2  30FF               	addwf	(___fldiv@new_exp),f
 18799  14E3  07DA               	movlw	0FFh
 18800  14E4  30FF               	addwfc	(___fldiv@new_exp+1),f
 18801  14E5  3DDB               	goto	l3761
 18802  14E6  2CE7               	line	134
 18803                           	
 18804                           l953:	
 18805  14E7                     	line	127
 18806                           	
 18807                           l3761:	
 18808  14E7                     	btfss	(___fldiv@b+2),(23)&7
 18809  14E7  1FCE               	goto	u5071
 18810  14E8  2CEA               	goto	u5070
 18811  14E9  2CEB               u5071:
 18812  14EA                     	goto	l3751
 18813  14EA  2CCE               u5070:
 18814  14EB                     	goto	l3763
 18815  14EB  2CEC               	
 18816                           l956:	
 18817  14EC                     	line	139
 18818                           	
 18819                           l3763:	
 18820  14EC                     	clrf	(___fldiv@aexp)
 18821  14EC  01E1               	line	140
 18822                           	
 18823                           l3765:	
 18824  14ED                     	btfss	(___fldiv@grs+3),(31)&7
 18825  14ED  1FDF               	goto	u5081
 18826  14EE  2CF0               	goto	u5080
 18827  14EF  2CF1               u5081:
 18828  14F0                     	goto	l3773
 18829  14F0  2D11               u5080:
 18830  14F1                     	line	141
 18831                           	
 18832                           l3767:	
 18833  14F1                     	movlw	0FFh
 18834  14F1  30FF               	andwf	(___fldiv@grs),w
 18835  14F2  055C               	movwf	(??___fldiv+0)+0
 18836  14F3  00D0               	movlw	0FFh
 18837  14F4  30FF               	andwf	(___fldiv@grs+1),w
 18838  14F5  055D               	movwf	((??___fldiv+0)+0+1)
 18839  14F6  00D1               	movlw	0FFh
 18840  14F7  30FF               	andwf	(___fldiv@grs+2),w
 18841  14F8  055E               	movwf	((??___fldiv+0)+0+2)
 18842  14F9  00D2               	movlw	07Fh
 18843  14FA  307F               	andwf	(___fldiv@grs+3),w
 18844  14FB  055F               	movwf	((??___fldiv+0)+0+3)
 18845  14FC  00D3               	movf	3+(??___fldiv+0)+0,w
 18846  14FD  0853               	iorwf	2+(??___fldiv+0)+0,w
 18847  14FE  0452               	iorwf	1+(??___fldiv+0)+0,w
 18848  14FF  0451               	iorwf	0+(??___fldiv+0)+0,w
 18849  1500  0450               	skipnz
 18850  1501  1903               	goto	u5091
 18851  1502  2D04               	goto	u5090
 18852  1503  2D05               u5091:
 18853  1504                     	goto	l958
 18854  1504  2D08               u5090:
 18855  1505                     	line	142
 18856                           	
 18857                           l3769:	
 18858  1505                     	clrf	(___fldiv@aexp)
 18859  1505  01E1               	incf	(___fldiv@aexp),f
 18860  1506  0AE1               	line	143
 18861                           	goto	l3773
 18862  1507  2D11               	line	144
 18863                           	
 18864                           l958:	
 18865  1508                     	line	145
 18866                           	btfss	(___fldiv@b),(0)&7
 18867  1508  1C4C               	goto	u5101
 18868  1509  2D0B               	goto	u5100
 18869  150A  2D0C               u5101:
 18870  150B                     	goto	l3773
 18871  150B  2D11               u5100:
 18872  150C                     	line	146
 18873                           	
 18874                           l3771:	
 18875  150C                     	clrf	(___fldiv@aexp)
 18876  150C  01E1               	incf	(___fldiv@aexp),f
 18877  150D  0AE1               	goto	l3773
 18878  150E  2D11               	line	147
 18879                           	
 18880                           l960:	
 18881  150F                     	goto	l3773
 18882  150F  2D11               	line	148
 18883                           	
 18884                           l959:	
 18885  1510                     	goto	l3773
 18886  1510  2D11               	line	149
 18887                           	
 18888                           l957:	
 18889  1511                     	line	150
 18890                           	
 18891                           l3773:	
 18892  1511                     	movf	((___fldiv@aexp)),w
 18893  1511  0861               	btfsc	status,2
 18894  1512  1903               	goto	u5111
 18895  1513  2D15               	goto	u5110
 18896  1514  2D16               u5111:
 18897  1515                     	goto	l3783
 18898  1515  2D40               u5110:
 18899  1516                     	line	151
 18900                           	
 18901                           l3775:	
 18902  1516                     	movlw	01h
 18903  1516  3001               	addwf	(___fldiv@b),f
 18904  1517  07CC               	movlw	0
 18905  1518  3000               	addwfc	(___fldiv@b+1),f
 18906  1519  3DCD               	movlw	0
 18907  151A  3000               	addwfc	(___fldiv@b+2),f
 18908  151B  3DCE               	movlw	0
 18909  151C  3000               	addwfc	(___fldiv@b+3),f
 18910  151D  3DCF               	line	152
 18911                           	
 18912                           l3777:	
 18913  151E                     	btfss	(___fldiv@b+3),(24)&7
 18914  151E  1C4F               	goto	u5121
 18915  151F  2D21               	goto	u5120
 18916  1520  2D22               u5121:
 18917  1521                     	goto	l3783
 18918  1521  2D40               u5120:
 18919  1522                     	line	153
 18920                           	
 18921                           l3779:	
 18922  1522                     	movf	(___fldiv@b),w
 18923  1522  084C               	movwf	(??___fldiv+0)+0
 18924  1523  00D0               	movf	(___fldiv@b+1),w
 18925  1524  084D               	movwf	((??___fldiv+0)+0+1)
 18926  1525  00D1               	movf	(___fldiv@b+2),w
 18927  1526  084E               	movwf	((??___fldiv+0)+0+2)
 18928  1527  00D2               	movf	(___fldiv@b+3),w
 18929  1528  084F               	movwf	((??___fldiv+0)+0+3)
 18930  1529  00D3               	movlw	01h
 18931  152A  3001               	movwf	(??___fldiv+4)+0
 18932  152B  00D4               u5135:
 18933  152C                     	asrf	(??___fldiv+0)+3,f
 18934  152C  37D3               	rrf	(??___fldiv+0)+2,f
 18935  152D  0CD2               	rrf	(??___fldiv+0)+1,f
 18936  152E  0CD1               	rrf	(??___fldiv+0)+0,f
 18937  152F  0CD0               u5130:
 18938  1530                     	decfsz	(??___fldiv+4)+0,f
 18939  1530  0BD4               	goto	u5135
 18940  1531  2D2C               	movf	3+(??___fldiv+0)+0,w
 18941  1532  0853               	movwf	(___fldiv@b+3)
 18942  1533  00CF               	movf	2+(??___fldiv+0)+0,w
 18943  1534  0852               	movwf	(___fldiv@b+2)
 18944  1535  00CE               	movf	1+(??___fldiv+0)+0,w
 18945  1536  0851               	movwf	(___fldiv@b+1)
 18946  1537  00CD               	movf	0+(??___fldiv+0)+0,w
 18947  1538  0850               	movwf	(___fldiv@b)
 18948  1539  00CC               
 18949                           	line	154
 18950                           	
 18951                           l3781:	
 18952  153A                     	movlw	01h
 18953  153A  3001               	addwf	(___fldiv@new_exp),f
 18954  153B  07DA               	movlw	0
 18955  153C  3000               	addwfc	(___fldiv@new_exp+1),f
 18956  153D  3DDB               	goto	l3783
 18957  153E  2D40               	line	155
 18958                           	
 18959                           l962:	
 18960  153F                     	goto	l3783
 18961  153F  2D40               	line	156
 18962                           	
 18963                           l961:	
 18964  1540                     	line	159
 18965                           	
 18966                           l3783:	
 18967  1540                     	movf	(___fldiv@new_exp+1),w
 18968  1540  085B               	xorlw	80h
 18969  1541  3A80               	movwf	(??___fldiv+0)+0
 18970  1542  00D0               	movlw	(0)^80h
 18971  1543  3080               	subwf	(??___fldiv+0)+0,w
 18972  1544  0250               	skipz
 18973  1545  1D03               	goto	u5145
 18974  1546  2D49               	movlw	0FFh
 18975  1547  30FF               	subwf	(___fldiv@new_exp),w
 18976  1548  025A               u5145:
 18977  1549                     
 18978                           	skipc
 18979  1549  1C03               	goto	u5141
 18980  154A  2D4C               	goto	u5140
 18981  154B  2D4D               u5141:
 18982  154C                     	goto	l963
 18983  154C  2D5A               u5140:
 18984  154D                     	line	160
 18985                           	
 18986                           l3785:	
 18987  154D                     	movlw	0FFh
 18988  154D  30FF               	movlb 0	; select bank0
 18989  154E  0140               	movwf	(___fldiv@new_exp)
 18990  154F  00DA               	movlw	0
 18991  1550  3000               	movwf	((___fldiv@new_exp))+1
 18992  1551  00DB               	line	161
 18993                           	movlw	high highword(0)
 18994  1552  3000               	movwf	(___fldiv@b+3)
 18995  1553  00CF               	movlw	low highword(0)
 18996  1554  3000               	movwf	(___fldiv@b+2)
 18997  1555  00CE               	movlw	high(0)
 18998  1556  3000               	movwf	(___fldiv@b+1)
 18999  1557  00CD               	movlw	low(0)
 19000  1558  3000               	movwf	(___fldiv@b)
 19001  1559  00CC               
 19002                           	line	162
 19003                           	
 19004                           l963:	
 19005  155A                     	line	165
 19006                           	movlb 0	; select bank0
 19007  155A  0140               	movf	(___fldiv@new_exp+1),w
 19008  155B  085B               	xorlw	80h
 19009  155C  3A80               	movwf	(??___fldiv+0)+0
 19010  155D  00D0               	movlw	(0)^80h
 19011  155E  3080               	subwf	(??___fldiv+0)+0,w
 19012  155F  0250               	skipz
 19013  1560  1D03               	goto	u5155
 19014  1561  2D64               	movlw	01h
 19015  1562  3001               	subwf	(___fldiv@new_exp),w
 19016  1563  025A               u5155:
 19017  1564                     
 19018                           	skipnc
 19019  1564  1803               	goto	u5151
 19020  1565  2D67               	goto	u5150
 19021  1566  2D68               u5151:
 19022  1567                     	goto	l964
 19023  1567  2D74               u5150:
 19024  1568                     	line	166
 19025                           	
 19026                           l3787:	
 19027  1568                     	movlb 0	; select bank0
 19028  1568  0140               	clrf	(___fldiv@new_exp)
 19029  1569  01DA               	clrf	(___fldiv@new_exp+1)
 19030  156A  01DB               	line	167
 19031                           	
 19032                           l3789:	
 19033  156B                     	movlw	high highword(0)
 19034  156B  3000               	movwf	(___fldiv@b+3)
 19035  156C  00CF               	movlw	low highword(0)
 19036  156D  3000               	movwf	(___fldiv@b+2)
 19037  156E  00CE               	movlw	high(0)
 19038  156F  3000               	movwf	(___fldiv@b+1)
 19039  1570  00CD               	movlw	low(0)
 19040  1571  3000               	movwf	(___fldiv@b)
 19041  1572  00CC               
 19042                           	line	169
 19043                           	
 19044                           l3791:	
 19045  1573                     	clrf	(___fldiv@sign)
 19046  1573  01D9               	line	170
 19047                           	
 19048                           l964:	
 19049  1574                     	line	173
 19050                           	movlb 0	; select bank0
 19051  1574  0140               	movf	(___fldiv@new_exp),w
 19052  1575  085A               	movwf	(??___fldiv+0)+0
 19053  1576  00D0               	movf	(??___fldiv+0)+0,w
 19054  1577  0850               	movwf	(___fldiv@bexp)
 19055  1578  00E0               	line	175
 19056                           	
 19057                           l3793:	
 19058  1579                     	btfss	(___fldiv@bexp),(0)&7
 19059  1579  1C60               	goto	u5161
 19060  157A  2D7C               	goto	u5160
 19061  157B  2D7D               u5161:
 19062  157C                     	goto	l3797
 19063  157C  2D7F               u5160:
 19064  157D                     	line	176
 19065                           	
 19066                           l3795:	
 19067  157D                     	bsf	0+(___fldiv@b)+02h+(7/8),(7)&7
 19068  157D  17CE               	line	177
 19069                           	goto	l966
 19070  157E  2D83               	line	179
 19071                           	
 19072                           l965:	
 19073  157F                     	line	180
 19074                           	
 19075                           l3797:	
 19076  157F                     	movlw	low(07Fh)
 19077  157F  307F               	movwf	(??___fldiv+0)+0
 19078  1580  00D0               	movf	(??___fldiv+0)+0,w
 19079  1581  0850               	andwf	0+(___fldiv@b)+02h,f
 19080  1582  05CE               	line	181
 19081                           	
 19082                           l966:	
 19083  1583                     	line	182
 19084                           	lsrf	(___fldiv@bexp),w
 19085  1583  3660               	movwf	(??___fldiv+0)+0
 19086  1584  00D0               	movf	(??___fldiv+0)+0,w
 19087  1585  0850               	movwf	0+(___fldiv@b)+03h
 19088  1586  00CF               	line	183
 19089                           	movf	(___fldiv@sign),w
 19090  1587  0859               	movwf	(??___fldiv+0)+0
 19091  1588  00D0               	movf	(??___fldiv+0)+0,w
 19092  1589  0850               	iorwf	0+(___fldiv@b)+03h,f
 19093  158A  04CF               	line	184
 19094                           	
 19095                           l3799:	
 19096  158B                     	movf	(___fldiv@b+3),w
 19097  158B  084F               	movwf	(?___fldiv+3)
 19098  158C  00CB               	movf	(___fldiv@b+2),w
 19099  158D  084E               	movwf	(?___fldiv+2)
 19100  158E  00CA               	movf	(___fldiv@b+1),w
 19101  158F  084D               	movwf	(?___fldiv+1)
 19102  1590  00C9               	movf	(___fldiv@b),w
 19103  1591  084C               	movwf	(?___fldiv)
 19104  1592  00C8               
 19105                           	goto	l944
 19106  1593  2D94               	
 19107                           l3801:	
 19108  1594                     	line	185
 19109                           	
 19110                           l944:	
 19111  1594                     	return
 19112  1594  0008               	opt stack 0
 19113                           GLOBAL	__end_of___fldiv
 19114                           	__end_of___fldiv:
 19115  1595                     	signat	___fldiv,8316
 19116                           	global	___fladd
 19117                           
 19118 ;; *************** function ___fladd *****************
 19119 ;; Defined at:
 19120 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
 19121 ;; Parameters:    Size  Location     Type
 19122 ;;  b               4   40[BANK0 ] unsigned char 
 19123 ;;  a               4   44[BANK0 ] unsigned char 
 19124 ;; Auto vars:     Size  Location     Type
 19125 ;;  grs             1   63[BANK0 ] unsigned char 
 19126 ;;  bexp            1   62[BANK0 ] unsigned char 
 19127 ;;  aexp            1   61[BANK0 ] unsigned char 
 19128 ;;  signs           1   60[BANK0 ] unsigned char 
 19129 ;; Return value:  Size  Location     Type
 19130 ;;                  4   40[BANK0 ] unsigned char 
 19131 ;; Registers used:
 19132 ;;		wreg, status,2, status,0
 19133 ;; Tracked objects:
 19134 ;;		On entry : 0/0
 19135 ;;		On exit  : 0/0
 19136 ;;		Unchanged: 0/0
 19137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19138 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19139 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19140 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19141 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19142 ;;Total ram usage:       24 bytes
 19143 ;; Hardware stack levels used:    1
 19144 ;; Hardware stack levels required when called:    3
 19145 ;; This function calls:
 19146 ;;		Nothing
 19147 ;; This function is called by:
 19148 ;;		_convertAnalogValues
 19149 ;;		_efgtoa
 19150 ;;		___flsub
 19151 ;; This function uses a non-reentrant model
 19152 ;;
 19153                           psect	text49,local,class=CODE,delta=2,merge=1,group=1
 19154                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
 19155                           	line	10
 19156                           global __ptext49
 19157                           __ptext49:	;psect for function ___fladd
 19158  09B1                     psect	text49
 19159                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
 19160                           	line	10
 19161                           	global	__size_of___fladd
 19162                           	__size_of___fladd	equ	__end_of___fladd-___fladd
 19163  0272                     	
 19164                           ___fladd:	
 19165  09B1                     ;incstack = 0
 19166                           	opt	stack 6
 19167                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 19168                           	line	21
 19169                           	
 19170                           l3171:	
 19171  09B1                     	movlb 0	; select bank0
 19172  09B1  0140               	movf	0+(___fladd@b)+03h,w
 19173  09B2  084B               	andlw	080h
 19174  09B3  3980               	movwf	(??___fladd+0)+0
 19175  09B4  00D0               	movf	(??___fladd+0)+0,w
 19176  09B5  0850               	movwf	(___fladd@signs)
 19177  09B6  00DC               	line	22
 19178                           	
 19179                           l3173:	
 19180  09B7                     	lslf	0+(___fladd@b)+03h,w
 19181  09B7  354B               	movwf	(??___fladd+0)+0
 19182  09B8  00D0               	movf	(??___fladd+0)+0,w
 19183  09B9  0850               	movwf	(___fladd@bexp)
 19184  09BA  00DE               	line	23
 19185                           	
 19186                           l3175:	
 19187  09BB                     	btfss	0+(___fladd@b)+02h,(7)&7
 19188  09BB  1FCA               	goto	u3681
 19189  09BC  29BE               	goto	u3680
 19190  09BD  29BF               u3681:
 19191  09BE                     	goto	l3179
 19192  09BE  29C1               u3680:
 19193  09BF                     	line	24
 19194                           	
 19195                           l3177:	
 19196  09BF                     	bsf	(___fladd@bexp)+(0/8),(0)&7
 19197  09BF  145E               	goto	l3179
 19198  09C0  29C1               	line	25
 19199                           	
 19200                           l878:	
 19201  09C1                     	line	28
 19202                           	
 19203                           l3179:	
 19204  09C1                     	movf	((___fladd@bexp)),w
 19205  09C1  085E               	btfsc	status,2
 19206  09C2  1903               	goto	u3691
 19207  09C3  29C5               	goto	u3690
 19208  09C4  29C6               u3691:
 19209  09C5                     	goto	l3189
 19210  09C5  29D7               u3690:
 19211  09C6                     	line	30
 19212                           	
 19213                           l3181:	
 19214  09C6                     		incf	((___fladd@bexp)),w
 19215  09C6  0A5E               	btfss	status,2
 19216  09C7  1D03               	goto	u3701
 19217  09C8  29CA               	goto	u3700
 19218  09C9  29CB               u3701:
 19219  09CA                     	goto	l3185
 19220  09CA  29D4               u3700:
 19221  09CB                     	line	32
 19222                           	
 19223                           l3183:	
 19224  09CB                     	movlw	0x0
 19225  09CB  3000               	movwf	(___fladd@b+3)
 19226  09CC  00CB               	movlw	0x0
 19227  09CD  3000               	movwf	(___fladd@b+2)
 19228  09CE  00CA               	movlw	0x0
 19229  09CF  3000               	movwf	(___fladd@b+1)
 19230  09D0  00C9               	movlw	0x0
 19231  09D1  3000               	movwf	(___fladd@b)
 19232  09D2  00C8               
 19233                           	goto	l3185
 19234  09D3  29D4               	line	33
 19235                           	
 19236                           l880:	
 19237  09D4                     	line	35
 19238                           	
 19239                           l3185:	
 19240  09D4                     	bsf	(___fladd@b)+(23/8),(23)&7
 19241  09D4  17CA               	line	37
 19242                           	
 19243                           l3187:	
 19244  09D5                     	clrf	0+(___fladd@b)+03h
 19245  09D5  01CB               	line	38
 19246                           	goto	l3191
 19247  09D6  29E0               	line	39
 19248                           	
 19249                           l879:	
 19250  09D7                     	line	41
 19251                           	
 19252                           l3189:	
 19253  09D7                     	movlw	0x0
 19254  09D7  3000               	movwf	(___fladd@b+3)
 19255  09D8  00CB               	movlw	0x0
 19256  09D9  3000               	movwf	(___fladd@b+2)
 19257  09DA  00CA               	movlw	0x0
 19258  09DB  3000               	movwf	(___fladd@b+1)
 19259  09DC  00C9               	movlw	0x0
 19260  09DD  3000               	movwf	(___fladd@b)
 19261  09DE  00C8               
 19262                           	goto	l3191
 19263  09DF  29E0               	line	42
 19264                           	
 19265                           l881:	
 19266  09E0                     	line	44
 19267                           	
 19268                           l3191:	
 19269  09E0                     	movf	0+(___fladd@a)+03h,w
 19270  09E0  084F               	andlw	080h
 19271  09E1  3980               	movwf	(??___fladd+0)+0
 19272  09E2  00D0               	movf	(??___fladd+0)+0,w
 19273  09E3  0850               	movwf	(___fladd@aexp)
 19274  09E4  00DD               	line	46
 19275                           	
 19276                           l3193:	
 19277  09E5                     	movf	(___fladd@aexp),w
 19278  09E5  085D               	xorwf	(___fladd@signs),w
 19279  09E6  065C               	skipnz
 19280  09E7  1903               	goto	u3711
 19281  09E8  29EA               	goto	u3710
 19282  09E9  29EB               u3711:
 19283  09EA                     	goto	l3197
 19284  09EA  29ED               u3710:
 19285  09EB                     	line	47
 19286                           	
 19287                           l3195:	
 19288  09EB                     	bsf	(___fladd@signs)+(6/8),(6)&7
 19289  09EB  175C               	goto	l3197
 19290  09EC  29ED               	line	48
 19291                           	
 19292                           l882:	
 19293  09ED                     	line	49
 19294                           	
 19295                           l3197:	
 19296  09ED                     	lslf	0+(___fladd@a)+03h,w
 19297  09ED  354F               	movwf	(??___fladd+0)+0
 19298  09EE  00D0               	movf	(??___fladd+0)+0,w
 19299  09EF  0850               	movwf	(___fladd@aexp)
 19300  09F0  00DD               	line	50
 19301                           	
 19302                           l3199:	
 19303  09F1                     	btfss	0+(___fladd@a)+02h,(7)&7
 19304  09F1  1FCE               	goto	u3721
 19305  09F2  29F4               	goto	u3720
 19306  09F3  29F5               u3721:
 19307  09F4                     	goto	l3203
 19308  09F4  29F7               u3720:
 19309  09F5                     	line	51
 19310                           	
 19311                           l3201:	
 19312  09F5                     	bsf	(___fladd@aexp)+(0/8),(0)&7
 19313  09F5  145D               	goto	l3203
 19314  09F6  29F7               	line	52
 19315                           	
 19316                           l883:	
 19317  09F7                     	line	55
 19318                           	
 19319                           l3203:	
 19320  09F7                     	movf	((___fladd@aexp)),w
 19321  09F7  085D               	btfsc	status,2
 19322  09F8  1903               	goto	u3731
 19323  09F9  29FB               	goto	u3730
 19324  09FA  29FC               u3731:
 19325  09FB                     	goto	l3213
 19326  09FB  2A0D               u3730:
 19327  09FC                     	line	57
 19328                           	
 19329                           l3205:	
 19330  09FC                     		incf	((___fladd@aexp)),w
 19331  09FC  0A5D               	btfss	status,2
 19332  09FD  1D03               	goto	u3741
 19333  09FE  2A00               	goto	u3740
 19334  09FF  2A01               u3741:
 19335  0A00                     	goto	l3209
 19336  0A00  2A0A               u3740:
 19337  0A01                     	line	59
 19338                           	
 19339                           l3207:	
 19340  0A01                     	movlw	0x0
 19341  0A01  3000               	movwf	(___fladd@a+3)
 19342  0A02  00CF               	movlw	0x0
 19343  0A03  3000               	movwf	(___fladd@a+2)
 19344  0A04  00CE               	movlw	0x0
 19345  0A05  3000               	movwf	(___fladd@a+1)
 19346  0A06  00CD               	movlw	0x0
 19347  0A07  3000               	movwf	(___fladd@a)
 19348  0A08  00CC               
 19349                           	goto	l3209
 19350  0A09  2A0A               	line	60
 19351                           	
 19352                           l885:	
 19353  0A0A                     	line	62
 19354                           	
 19355                           l3209:	
 19356  0A0A                     	bsf	(___fladd@a)+(23/8),(23)&7
 19357  0A0A  17CE               	line	64
 19358                           	
 19359                           l3211:	
 19360  0A0B                     	clrf	0+(___fladd@a)+03h
 19361  0A0B  01CF               	line	65
 19362                           	goto	l886
 19363  0A0C  2A15               	line	66
 19364                           	
 19365                           l884:	
 19366  0A0D                     	line	68
 19367                           	
 19368                           l3213:	
 19369  0A0D                     	movlw	0x0
 19370  0A0D  3000               	movwf	(___fladd@a+3)
 19371  0A0E  00CF               	movlw	0x0
 19372  0A0F  3000               	movwf	(___fladd@a+2)
 19373  0A10  00CE               	movlw	0x0
 19374  0A11  3000               	movwf	(___fladd@a+1)
 19375  0A12  00CD               	movlw	0x0
 19376  0A13  3000               	movwf	(___fladd@a)
 19377  0A14  00CC               
 19378                           	line	69
 19379                           	
 19380                           l886:	
 19381  0A15                     	line	75
 19382                           	movf	(___fladd@bexp),w
 19383  0A15  085E               	subwf	(___fladd@aexp),w
 19384  0A16  025D               	skipnc
 19385  0A17  1803               	goto	u3751
 19386  0A18  2A1A               	goto	u3750
 19387  0A19  2A1B               u3751:
 19388  0A1A                     	goto	l3249
 19389  0A1A  2A61               u3750:
 19390  0A1B                     	line	77
 19391                           	
 19392                           l3215:	
 19393  0A1B                     	btfss	(___fladd@signs),(6)&7
 19394  0A1B  1F5C               	goto	u3761
 19395  0A1C  2A1E               	goto	u3760
 19396  0A1D  2A1F               u3761:
 19397  0A1E                     	goto	l3219
 19398  0A1E  2A24               u3760:
 19399  0A1F                     	line	78
 19400                           	
 19401                           l3217:	
 19402  0A1F                     	movlw	low(080h)
 19403  0A1F  3080               	movwf	(??___fladd+0)+0
 19404  0A20  00D0               	movf	(??___fladd+0)+0,w
 19405  0A21  0850               	xorwf	(___fladd@signs),f
 19406  0A22  06DC               	goto	l3219
 19407  0A23  2A24               	line	79
 19408                           	
 19409                           l888:	
 19410  0A24                     	line	81
 19411                           	
 19412                           l3219:	
 19413  0A24                     	movf	(___fladd@bexp),w
 19414  0A24  085E               	movwf	(??___fladd+0)+0
 19415  0A25  00D0               	movf	(??___fladd+0)+0,w
 19416  0A26  0850               	movwf	(___fladd@grs)
 19417  0A27  00DF               	line	82
 19418                           	
 19419                           l3221:	
 19420  0A28                     	movf	(___fladd@aexp),w
 19421  0A28  085D               	movwf	(??___fladd+0)+0
 19422  0A29  00D0               	movf	(??___fladd+0)+0,w
 19423  0A2A  0850               	movwf	(___fladd@bexp)
 19424  0A2B  00DE               	line	83
 19425                           	
 19426                           l3223:	
 19427  0A2C                     	movf	(___fladd@grs),w
 19428  0A2C  085F               	movwf	(??___fladd+0)+0
 19429  0A2D  00D0               	movf	(??___fladd+0)+0,w
 19430  0A2E  0850               	movwf	(___fladd@aexp)
 19431  0A2F  00DD               	line	84
 19432                           	
 19433                           l3225:	
 19434  0A30                     	movf	(___fladd@b),w
 19435  0A30  0848               	movwf	(??___fladd+0)+0
 19436  0A31  00D0               	movf	(??___fladd+0)+0,w
 19437  0A32  0850               	movwf	(___fladd@grs)
 19438  0A33  00DF               	line	85
 19439                           	
 19440                           l3227:	
 19441  0A34                     	movf	(___fladd@a),w
 19442  0A34  084C               	movwf	(??___fladd+0)+0
 19443  0A35  00D0               	movf	(??___fladd+0)+0,w
 19444  0A36  0850               	movwf	(___fladd@b)
 19445  0A37  00C8               	line	86
 19446                           	
 19447                           l3229:	
 19448  0A38                     	movf	(___fladd@grs),w
 19449  0A38  085F               	movwf	(??___fladd+0)+0
 19450  0A39  00D0               	movf	(??___fladd+0)+0,w
 19451  0A3A  0850               	movwf	(___fladd@a)
 19452  0A3B  00CC               	line	87
 19453                           	
 19454                           l3231:	
 19455  0A3C                     	movf	0+(___fladd@b)+01h,w
 19456  0A3C  0849               	movwf	(??___fladd+0)+0
 19457  0A3D  00D0               	movf	(??___fladd+0)+0,w
 19458  0A3E  0850               	movwf	(___fladd@grs)
 19459  0A3F  00DF               	line	88
 19460                           	
 19461                           l3233:	
 19462  0A40                     	movf	0+(___fladd@a)+01h,w
 19463  0A40  084D               	movwf	(??___fladd+0)+0
 19464  0A41  00D0               	movf	(??___fladd+0)+0,w
 19465  0A42  0850               	movwf	0+(___fladd@b)+01h
 19466  0A43  00C9               	line	89
 19467                           	
 19468                           l3235:	
 19469  0A44                     	movf	(___fladd@grs),w
 19470  0A44  085F               	movwf	(??___fladd+0)+0
 19471  0A45  00D0               	movf	(??___fladd+0)+0,w
 19472  0A46  0850               	movwf	0+(___fladd@a)+01h
 19473  0A47  00CD               	line	90
 19474                           	
 19475                           l3237:	
 19476  0A48                     	movf	0+(___fladd@b)+02h,w
 19477  0A48  084A               	movwf	(??___fladd+0)+0
 19478  0A49  00D0               	movf	(??___fladd+0)+0,w
 19479  0A4A  0850               	movwf	(___fladd@grs)
 19480  0A4B  00DF               	line	91
 19481                           	
 19482                           l3239:	
 19483  0A4C                     	movf	0+(___fladd@a)+02h,w
 19484  0A4C  084E               	movwf	(??___fladd+0)+0
 19485  0A4D  00D0               	movf	(??___fladd+0)+0,w
 19486  0A4E  0850               	movwf	0+(___fladd@b)+02h
 19487  0A4F  00CA               	line	92
 19488                           	
 19489                           l3241:	
 19490  0A50                     	movf	(___fladd@grs),w
 19491  0A50  085F               	movwf	(??___fladd+0)+0
 19492  0A51  00D0               	movf	(??___fladd+0)+0,w
 19493  0A52  0850               	movwf	0+(___fladd@a)+02h
 19494  0A53  00CE               	line	93
 19495                           	
 19496                           l3243:	
 19497  0A54                     	movf	0+(___fladd@b)+03h,w
 19498  0A54  084B               	movwf	(??___fladd+0)+0
 19499  0A55  00D0               	movf	(??___fladd+0)+0,w
 19500  0A56  0850               	movwf	(___fladd@grs)
 19501  0A57  00DF               	line	94
 19502                           	
 19503                           l3245:	
 19504  0A58                     	movf	0+(___fladd@a)+03h,w
 19505  0A58  084F               	movwf	(??___fladd+0)+0
 19506  0A59  00D0               	movf	(??___fladd+0)+0,w
 19507  0A5A  0850               	movwf	0+(___fladd@b)+03h
 19508  0A5B  00CB               	line	95
 19509                           	
 19510                           l3247:	
 19511  0A5C                     	movf	(___fladd@grs),w
 19512  0A5C  085F               	movwf	(??___fladd+0)+0
 19513  0A5D  00D0               	movf	(??___fladd+0)+0,w
 19514  0A5E  0850               	movwf	0+(___fladd@a)+03h
 19515  0A5F  00CF               	goto	l3249
 19516  0A60  2A61               	line	96
 19517                           	
 19518                           l887:	
 19519  0A61                     	line	98
 19520                           	
 19521                           l3249:	
 19522  0A61                     	clrf	(___fladd@grs)
 19523  0A61  01DF               	line	100
 19524                           	
 19525                           l3251:	
 19526  0A62                     	movf	(___fladd@bexp),w
 19527  0A62  085E               	movwf	(??___fladd+0)+0
 19528  0A63  00D0               	clrf	(??___fladd+0)+0+1
 19529  0A64  01D1               	comf	(??___fladd+0)+0,f
 19530  0A65  09D0               	comf	(??___fladd+0)+1,f
 19531  0A66  09D1               	incf	(??___fladd+0)+0,f
 19532  0A67  0AD0               	skipnz
 19533  0A68  1903               	incf	(??___fladd+0)+1,f
 19534  0A69  0AD1               	movf	(___fladd@aexp),w
 19535  0A6A  085D               	addwf	0+(??___fladd+0)+0,w
 19536  0A6B  0750               	movwf	(??___fladd+2)+0
 19537  0A6C  00D2               	movf	1+(??___fladd+0)+0,w
 19538  0A6D  0851               	skipnc
 19539  0A6E  1803               	incf	1+(??___fladd+0)+0,w
 19540  0A6F  0A51               	movwf	((??___fladd+2)+0)+1
 19541  0A70  00D3               	movf	1+(??___fladd+2)+0,w
 19542  0A71  0853               	xorlw	80h
 19543  0A72  3A80               	movwf	(??___fladd+4)+0
 19544  0A73  00D4               	movlw	(0)^80h
 19545  0A74  3080               	subwf	(??___fladd+4)+0,w
 19546  0A75  0254               	skipz
 19547  0A76  1D03               	goto	u3775
 19548  0A77  2A7A               	movlw	01Ah
 19549  0A78  301A               	subwf	0+(??___fladd+2)+0,w
 19550  0A79  0252               u3775:
 19551  0A7A                     
 19552                           	skipc
 19553  0A7A  1C03               	goto	u3771
 19554  0A7B  2A7D               	goto	u3770
 19555  0A7C  2A7E               u3771:
 19556  0A7D                     	goto	l3267
 19557  0A7D  2ABA               u3770:
 19558  0A7E                     	line	101
 19559                           	
 19560                           l3253:	
 19561  0A7E                     	movlb 0	; select bank0
 19562  0A7E  0140               	movf	(___fladd@b+3),w
 19563  0A7F  084B               	iorwf	(___fladd@b+2),w
 19564  0A80  044A               	iorwf	(___fladd@b+1),w
 19565  0A81  0449               	iorwf	(___fladd@b),w
 19566  0A82  0448               	skipz
 19567  0A83  1D03               	goto	u3781
 19568  0A84  2A86               	goto	u3780
 19569  0A85  2A88               u3781:
 19570  0A86                     	movlw	1
 19571  0A86  3001               	goto	u3790
 19572  0A87  2A89               u3780:
 19573  0A88                     	movlw	0
 19574  0A88  3000               u3790:
 19575  0A89                     	movwf	(??___fladd+0)+0
 19576  0A89  00D0               	movf	(??___fladd+0)+0,w
 19577  0A8A  0850               	movwf	(___fladd@grs)
 19578  0A8B  00DF               	line	102
 19579                           	movlw	high highword(0)
 19580  0A8C  3000               	movwf	(___fladd@b+3)
 19581  0A8D  00CB               	movlw	low highword(0)
 19582  0A8E  3000               	movwf	(___fladd@b+2)
 19583  0A8F  00CA               	movlw	high(0)
 19584  0A90  3000               	movwf	(___fladd@b+1)
 19585  0A91  00C9               	movlw	low(0)
 19586  0A92  3000               	movwf	(___fladd@b)
 19587  0A93  00C8               
 19588                           	line	103
 19589                           	movf	(___fladd@aexp),w
 19590  0A94  085D               	movwf	(??___fladd+0)+0
 19591  0A95  00D0               	movf	(??___fladd+0)+0,w
 19592  0A96  0850               	movwf	(___fladd@bexp)
 19593  0A97  00DE               	line	104
 19594                           	goto	l890
 19595  0A98  2AC2               	line	105
 19596                           	
 19597                           l889:	
 19598  0A99                     	line	106
 19599                           	goto	l3267
 19600  0A99  2ABA               	
 19601                           l892:	
 19602  0A9A                     	line	109
 19603                           	btfss	(___fladd@grs),(0)&7
 19604  0A9A  1C5F               	goto	u3801
 19605  0A9B  2A9D               	goto	u3800
 19606  0A9C  2A9E               u3801:
 19607  0A9D                     	goto	l3257
 19608  0A9D  2AA4               u3800:
 19609  0A9E                     	line	110
 19610                           	
 19611                           l3255:	
 19612  0A9E                     	lsrf	(___fladd@grs),w
 19613  0A9E  365F               	iorlw	01h
 19614  0A9F  3801               	movwf	(??___fladd+0)+0
 19615  0AA0  00D0               	movf	(??___fladd+0)+0,w
 19616  0AA1  0850               	movwf	(___fladd@grs)
 19617  0AA2  00DF               	line	111
 19618                           	goto	l3259
 19619  0AA3  2AA7               	line	112
 19620                           	
 19621                           l893:	
 19622  0AA4                     	line	113
 19623                           	
 19624                           l3257:	
 19625  0AA4                     	clrc
 19626  0AA4  1003               	rrf	(___fladd@grs),f
 19627  0AA5  0CDF               
 19628                           	goto	l3259
 19629  0AA6  2AA7               	line	114
 19630                           	
 19631                           l894:	
 19632  0AA7                     	line	115
 19633                           	
 19634                           l3259:	
 19635  0AA7                     	btfss	(___fladd@b),(0)&7
 19636  0AA7  1C48               	goto	u3811
 19637  0AA8  2AAA               	goto	u3810
 19638  0AA9  2AAB               u3811:
 19639  0AAA                     	goto	l3263
 19640  0AAA  2AAD               u3810:
 19641  0AAB                     	line	116
 19642                           	
 19643                           l3261:	
 19644  0AAB                     	bsf	(___fladd@grs)+(7/8),(7)&7
 19645  0AAB  17DF               	goto	l3263
 19646  0AAC  2AAD               	line	117
 19647                           	
 19648                           l895:	
 19649  0AAD                     	line	118
 19650                           	
 19651                           l3263:	
 19652  0AAD                     	movlw	01h
 19653  0AAD  3001               	movwf	(??___fladd+0)+0
 19654  0AAE  00D0               u3825:
 19655  0AAF                     	asrf	(___fladd@b+3),f
 19656  0AAF  37CB               	rrf	(___fladd@b+2),f
 19657  0AB0  0CCA               	rrf	(___fladd@b+1),f
 19658  0AB1  0CC9               	rrf	(___fladd@b),f
 19659  0AB2  0CC8               	decfsz	(??___fladd+0)+0&07fh,f
 19660  0AB3  0BD0               	goto	u3825
 19661  0AB4  2AAF               
 19662                           	line	119
 19663                           	
 19664                           l3265:	
 19665  0AB5                     	movlw	low(01h)
 19666  0AB5  3001               	movwf	(??___fladd+0)+0
 19667  0AB6  00D0               	movf	(??___fladd+0)+0,w
 19668  0AB7  0850               	addwf	(___fladd@bexp),f
 19669  0AB8  07DE               	goto	l3267
 19670  0AB9  2ABA               	line	120
 19671                           	
 19672                           l891:	
 19673  0ABA                     	line	106
 19674                           	
 19675                           l3267:	
 19676  0ABA                     	movlb 0	; select bank0
 19677  0ABA  0140               	movf	(___fladd@aexp),w
 19678  0ABB  085D               	subwf	(___fladd@bexp),w
 19679  0ABC  025E               	skipc
 19680  0ABD  1C03               	goto	u3831
 19681  0ABE  2AC0               	goto	u3830
 19682  0ABF  2AC1               u3831:
 19683  0AC0                     	goto	l892
 19684  0AC0  2A9A               u3830:
 19685  0AC1                     	goto	l890
 19686  0AC1  2AC2               	
 19687                           l896:	
 19688  0AC2                     	line	121
 19689                           	
 19690                           l890:	
 19691  0AC2                     	line	124
 19692                           	btfsc	(___fladd@signs),(6)&7
 19693  0AC2  1B5C               	goto	u3841
 19694  0AC3  2AC5               	goto	u3840
 19695  0AC4  2AC6               u3841:
 19696  0AC5                     	goto	l3293
 19697  0AC5  2B02               u3840:
 19698  0AC6                     	line	127
 19699                           	
 19700                           l3269:	
 19701  0AC6                     	movf	((___fladd@bexp)),w
 19702  0AC6  085E               	btfss	status,2
 19703  0AC7  1D03               	goto	u3851
 19704  0AC8  2ACA               	goto	u3850
 19705  0AC9  2ACB               u3851:
 19706  0ACA                     	goto	l3275
 19707  0ACA  2AD5               u3850:
 19708  0ACB                     	line	128
 19709                           	
 19710                           l3271:	
 19711  0ACB                     	movlw	0x0
 19712  0ACB  3000               	movwf	(?___fladd+3)
 19713  0ACC  00CB               	movlw	0x0
 19714  0ACD  3000               	movwf	(?___fladd+2)
 19715  0ACE  00CA               	movlw	0x0
 19716  0ACF  3000               	movwf	(?___fladd+1)
 19717  0AD0  00C9               	movlw	0x0
 19718  0AD1  3000               	movwf	(?___fladd)
 19719  0AD2  00C8               
 19720                           	goto	l899
 19721  0AD3  2C22               	
 19722                           l3273:	
 19723  0AD4                     	goto	l899
 19724  0AD4  2C22               	line	129
 19725                           	
 19726                           l898:	
 19727  0AD5                     	line	132
 19728                           	
 19729                           l3275:	
 19730  0AD5                     	movf	(___fladd@a),w
 19731  0AD5  084C               	addwf	(___fladd@b),f
 19732  0AD6  07C8               	movf	(___fladd@a+1),w
 19733  0AD7  084D               	addwfc	(___fladd@b+1),f
 19734  0AD8  3DC9               	movf	(___fladd@a+2),w
 19735  0AD9  084E               	addwfc	(___fladd@b+2),f
 19736  0ADA  3DCA               	movf	(___fladd@a+3),w
 19737  0ADB  084F               	addwfc	(___fladd@b+3),f
 19738  0ADC  3DCB               	line	134
 19739                           	
 19740                           l3277:	
 19741  0ADD                     	btfss	(___fladd@b+3),(24)&7
 19742  0ADD  1C4B               	goto	u3861
 19743  0ADE  2AE0               	goto	u3860
 19744  0ADF  2AE1               u3861:
 19745  0AE0                     	goto	l3327
 19746  0AE0  2BA9               u3860:
 19747  0AE1                     	line	135
 19748                           	
 19749                           l3279:	
 19750  0AE1                     	btfss	(___fladd@grs),(0)&7
 19751  0AE1  1C5F               	goto	u3871
 19752  0AE2  2AE4               	goto	u3870
 19753  0AE3  2AE5               u3871:
 19754  0AE4                     	goto	l3283
 19755  0AE4  2AEB               u3870:
 19756  0AE5                     	line	136
 19757                           	
 19758                           l3281:	
 19759  0AE5                     	lsrf	(___fladd@grs),w
 19760  0AE5  365F               	iorlw	01h
 19761  0AE6  3801               	movwf	(??___fladd+0)+0
 19762  0AE7  00D0               	movf	(??___fladd+0)+0,w
 19763  0AE8  0850               	movwf	(___fladd@grs)
 19764  0AE9  00DF               	line	137
 19765                           	goto	l3285
 19766  0AEA  2AEE               	line	138
 19767                           	
 19768                           l901:	
 19769  0AEB                     	line	139
 19770                           	
 19771                           l3283:	
 19772  0AEB                     	clrc
 19773  0AEB  1003               	rrf	(___fladd@grs),f
 19774  0AEC  0CDF               
 19775                           	goto	l3285
 19776  0AED  2AEE               	line	140
 19777                           	
 19778                           l902:	
 19779  0AEE                     	line	141
 19780                           	
 19781                           l3285:	
 19782  0AEE                     	btfss	(___fladd@b),(0)&7
 19783  0AEE  1C48               	goto	u3881
 19784  0AEF  2AF1               	goto	u3880
 19785  0AF0  2AF2               u3881:
 19786  0AF1                     	goto	l3289
 19787  0AF1  2AF4               u3880:
 19788  0AF2                     	line	142
 19789                           	
 19790                           l3287:	
 19791  0AF2                     	bsf	(___fladd@grs)+(7/8),(7)&7
 19792  0AF2  17DF               	goto	l3289
 19793  0AF3  2AF4               	line	143
 19794                           	
 19795                           l903:	
 19796  0AF4                     	line	144
 19797                           	
 19798                           l3289:	
 19799  0AF4                     	movlw	01h
 19800  0AF4  3001               	movwf	(??___fladd+0)+0
 19801  0AF5  00D0               u3895:
 19802  0AF6                     	asrf	(___fladd@b+3),f
 19803  0AF6  37CB               	rrf	(___fladd@b+2),f
 19804  0AF7  0CCA               	rrf	(___fladd@b+1),f
 19805  0AF8  0CC9               	rrf	(___fladd@b),f
 19806  0AF9  0CC8               	decfsz	(??___fladd+0)+0&07fh,f
 19807  0AFA  0BD0               	goto	u3895
 19808  0AFB  2AF6               
 19809                           	line	145
 19810                           	
 19811                           l3291:	
 19812  0AFC                     	movlw	low(01h)
 19813  0AFC  3001               	movwf	(??___fladd+0)+0
 19814  0AFD  00D0               	movf	(??___fladd+0)+0,w
 19815  0AFE  0850               	addwf	(___fladd@bexp),f
 19816  0AFF  07DE               	goto	l3327
 19817  0B00  2BA9               	line	146
 19818                           	
 19819                           l900:	
 19820  0B01                     	line	148
 19821                           	goto	l3327
 19822  0B01  2BA9               	line	149
 19823                           	
 19824                           l897:	
 19825  0B02                     	line	153
 19826                           	
 19827                           l3293:	
 19828  0B02                     	movf	(___fladd@b+3),w
 19829  0B02  084B               	xorlw	80h
 19830  0B03  3A80               	movwf	(??___fladd+0)+0
 19831  0B04  00D0               	movf	(___fladd@a+3),w
 19832  0B05  084F               	xorlw	80h
 19833  0B06  3A80               	subwf	(??___fladd+0)+0,w
 19834  0B07  0250               	
 19835                           	skipz
 19836  0B08  1D03               	goto	u3903
 19837  0B09  2B14               	movf	(___fladd@a+2),w
 19838  0B0A  084E               	subwf	(___fladd@b+2),w
 19839  0B0B  024A               	skipz
 19840  0B0C  1D03               	goto	u3903
 19841  0B0D  2B14               	movf	(___fladd@a+1),w
 19842  0B0E  084D               	subwf	(___fladd@b+1),w
 19843  0B0F  0249               	skipz
 19844  0B10  1D03               	goto	u3903
 19845  0B11  2B14               	movf	(___fladd@a),w
 19846  0B12  084C               	subwf	(___fladd@b),w
 19847  0B13  0248               u3903:
 19848  0B14                     	skipnc
 19849  0B14  1803               	goto	u3901
 19850  0B15  2B17               	goto	u3900
 19851  0B16  2B18               u3901:
 19852  0B17                     	goto	l3303
 19853  0B17  2B64               u3900:
 19854  0B18                     	line	154
 19855                           	
 19856                           l3295:	
 19857  0B18                     	movlw	0FFh
 19858  0B18  30FF               	movwf	((??___fladd+0)+0)
 19859  0B19  00D0               	movlw	0FFh
 19860  0B1A  30FF               	movwf	((??___fladd+0)+0+1)
 19861  0B1B  00D1               	movlw	0FFh
 19862  0B1C  30FF               	movwf	((??___fladd+0)+0+2)
 19863  0B1D  00D2               	movlw	0FFh
 19864  0B1E  30FF               	movwf	((??___fladd+0)+0+3)
 19865  0B1F  00D3               	movf	(___fladd@a),w
 19866  0B20  084C               	movwf	(??___fladd+4)+0
 19867  0B21  00D4               	movf	(___fladd@a+1),w
 19868  0B22  084D               	movwf	((??___fladd+4)+0+1)
 19869  0B23  00D5               	movf	(___fladd@a+2),w
 19870  0B24  084E               	movwf	((??___fladd+4)+0+2)
 19871  0B25  00D6               	movf	(___fladd@a+3),w
 19872  0B26  084F               	movwf	((??___fladd+4)+0+3)
 19873  0B27  00D7               	comf	(___fladd@b),w
 19874  0B28  0948               	movwf	(??___fladd+8)+0
 19875  0B29  00D8               	comf	(___fladd@b+1),w
 19876  0B2A  0949               	movwf	((??___fladd+8)+0+1)
 19877  0B2B  00D9               	comf	(___fladd@b+2),w
 19878  0B2C  094A               	movwf	((??___fladd+8)+0+2)
 19879  0B2D  00DA               	comf	(___fladd@b+3),w
 19880  0B2E  094B               	movwf	((??___fladd+8)+0+3)
 19881  0B2F  00DB               	incf	(??___fladd+8)+0,f
 19882  0B30  0AD8               	skipnz
 19883  0B31  1903               	incf	((??___fladd+8)+0+1),f
 19884  0B32  0AD9               	skipnz
 19885  0B33  1903               	incf	((??___fladd+8)+0+2),f
 19886  0B34  0ADA               	skipnz
 19887  0B35  1903               	incf	((??___fladd+8)+0+3),f
 19888  0B36  0ADB               	movf	0+(??___fladd+8)+0,w
 19889  0B37  0858               	addwf	(??___fladd+4)+0,f
 19890  0B38  07D4               	movf	1+(??___fladd+8)+0,w
 19891  0B39  0859               	addwfc	(??___fladd+4)+1,f
 19892  0B3A  3DD5               	movf	2+(??___fladd+8)+0,w
 19893  0B3B  085A               	addwfc	(??___fladd+4)+2,f
 19894  0B3C  3DD6               	movf	3+(??___fladd+8)+0,w
 19895  0B3D  085B               	addwfc	(??___fladd+4)+3,f
 19896  0B3E  3DD7               	movf	0+(??___fladd+4)+0,w
 19897  0B3F  0854               	addwf	(??___fladd+0)+0,f
 19898  0B40  07D0               	movf	1+(??___fladd+4)+0,w
 19899  0B41  0855               	addwfc	(??___fladd+0)+1,f
 19900  0B42  3DD1               	movf	2+(??___fladd+4)+0,w
 19901  0B43  0856               	addwfc	(??___fladd+0)+2,f
 19902  0B44  3DD2               	movf	3+(??___fladd+4)+0,w
 19903  0B45  0857               	addwfc	(??___fladd+0)+3,f
 19904  0B46  3DD3               	movf	3+(??___fladd+0)+0,w
 19905  0B47  0853               	movwf	(___fladd@b+3)
 19906  0B48  00CB               	movf	2+(??___fladd+0)+0,w
 19907  0B49  0852               	movwf	(___fladd@b+2)
 19908  0B4A  00CA               	movf	1+(??___fladd+0)+0,w
 19909  0B4B  0851               	movwf	(___fladd@b+1)
 19910  0B4C  00C9               	movf	0+(??___fladd+0)+0,w
 19911  0B4D  0850               	movwf	(___fladd@b)
 19912  0B4E  00C8               
 19913                           	line	155
 19914                           	movlw	low(080h)
 19915  0B4F  3080               	movwf	(??___fladd+0)+0
 19916  0B50  00D0               	movf	(??___fladd+0)+0,w
 19917  0B51  0850               	xorwf	(___fladd@signs),f
 19918  0B52  06DC               	line	156
 19919                           	
 19920                           l3297:	
 19921  0B53                     	comf	(___fladd@grs),f
 19922  0B53  09DF               	incf	(___fladd@grs),f
 19923  0B54  0ADF               	line	157
 19924                           	
 19925                           l3299:	
 19926  0B55                     	movf	((___fladd@grs)),w
 19927  0B55  085F               	btfss	status,2
 19928  0B56  1D03               	goto	u3911
 19929  0B57  2B59               	goto	u3910
 19930  0B58  2B5A               u3911:
 19931  0B59                     	goto	l907
 19932  0B59  2B6C               u3910:
 19933  0B5A                     	line	158
 19934                           	
 19935                           l3301:	
 19936  0B5A                     	movlw	01h
 19937  0B5A  3001               	addwf	(___fladd@b),f
 19938  0B5B  07C8               	movlw	0
 19939  0B5C  3000               	addwfc	(___fladd@b+1),f
 19940  0B5D  3DC9               	movlw	0
 19941  0B5E  3000               	addwfc	(___fladd@b+2),f
 19942  0B5F  3DCA               	movlw	0
 19943  0B60  3000               	addwfc	(___fladd@b+3),f
 19944  0B61  3DCB               	goto	l907
 19945  0B62  2B6C               	line	159
 19946                           	
 19947                           l906:	
 19948  0B63                     	line	160
 19949                           	goto	l907
 19950  0B63  2B6C               	line	161
 19951                           	
 19952                           l905:	
 19953  0B64                     	line	162
 19954                           	
 19955                           l3303:	
 19956  0B64                     	movf	(___fladd@a),w
 19957  0B64  084C               	subwf	(___fladd@b),f
 19958  0B65  02C8               	movf	(___fladd@a+1),w
 19959  0B66  084D               	subwfb	(___fladd@b+1),f
 19960  0B67  3BC9               	movf	(___fladd@a+2),w
 19961  0B68  084E               	subwfb	(___fladd@b+2),f
 19962  0B69  3BCA               	movf	(___fladd@a+3),w
 19963  0B6A  084F               	subwfb	(___fladd@b+3),f
 19964  0B6B  3BCB               	line	163
 19965                           	
 19966                           l907:	
 19967  0B6C                     	line	166
 19968                           	movf	(___fladd@b+3),w
 19969  0B6C  084B               	iorwf	(___fladd@b+2),w
 19970  0B6D  044A               	iorwf	(___fladd@b+1),w
 19971  0B6E  0449               	iorwf	(___fladd@b),w
 19972  0B6F  0448               	skipz
 19973  0B70  1D03               	goto	u3921
 19974  0B71  2B73               	goto	u3920
 19975  0B72  2B74               u3921:
 19976  0B73                     	goto	l3325
 19977  0B73  2BA3               u3920:
 19978  0B74                     	
 19979                           l3305:	
 19980  0B74                     	movf	((___fladd@grs)),w
 19981  0B74  085F               	btfss	status,2
 19982  0B75  1D03               	goto	u3931
 19983  0B76  2B78               	goto	u3930
 19984  0B77  2B79               u3931:
 19985  0B78                     	goto	l3325
 19986  0B78  2BA3               u3930:
 19987  0B79                     	line	167
 19988                           	
 19989                           l3307:	
 19990  0B79                     	movlw	0x0
 19991  0B79  3000               	movwf	(?___fladd+3)
 19992  0B7A  00CB               	movlw	0x0
 19993  0B7B  3000               	movwf	(?___fladd+2)
 19994  0B7C  00CA               	movlw	0x0
 19995  0B7D  3000               	movwf	(?___fladd+1)
 19996  0B7E  00C9               	movlw	0x0
 19997  0B7F  3000               	movwf	(?___fladd)
 19998  0B80  00C8               
 19999                           	goto	l899
 20000  0B81  2C22               	
 20001                           l3309:	
 20002  0B82                     	goto	l899
 20003  0B82  2C22               	line	168
 20004                           	
 20005                           l908:	
 20006  0B83                     	line	171
 20007                           	goto	l3325
 20008  0B83  2BA3               	
 20009                           l910:	
 20010  0B84                     	line	172
 20011                           	
 20012                           l3311:	
 20013  0B84                     	movlw	01h
 20014  0B84  3001               u3945:
 20015  0B85                     	lslf	(___fladd@b),f
 20016  0B85  35C8               	rlf	(___fladd@b+1),f
 20017  0B86  0DC9               	rlf	(___fladd@b+2),f
 20018  0B87  0DCA               	rlf	(___fladd@b+3),f
 20019  0B88  0DCB               	decfsz	wreg,f
 20020  0B89  0B89               	goto	u3945
 20021  0B8A  2B85               	line	173
 20022                           	
 20023                           l3313:	
 20024  0B8B                     	btfss	(___fladd@grs),(7)&7
 20025  0B8B  1FDF               	goto	u3951
 20026  0B8C  2B8E               	goto	u3950
 20027  0B8D  2B8F               u3951:
 20028  0B8E                     	goto	l911
 20029  0B8E  2B90               u3950:
 20030  0B8F                     	line	174
 20031                           	
 20032                           l3315:	
 20033  0B8F                     	bsf	(___fladd@b)+(0/8),(0)&7
 20034  0B8F  1448               	line	175
 20035                           	
 20036                           l911:	
 20037  0B90                     	line	176
 20038                           	btfss	(___fladd@grs),(0)&7
 20039  0B90  1C5F               	goto	u3961
 20040  0B91  2B93               	goto	u3960
 20041  0B92  2B94               u3961:
 20042  0B93                     	goto	l3319
 20043  0B93  2B97               u3960:
 20044  0B94                     	line	177
 20045                           	
 20046                           l3317:	
 20047  0B94                     	setc
 20048  0B94  1403               	rlf	(___fladd@grs),f
 20049  0B95  0DDF               	line	178
 20050                           	goto	l3321
 20051  0B96  2B9A               	line	179
 20052                           	
 20053                           l912:	
 20054  0B97                     	line	180
 20055                           	
 20056                           l3319:	
 20057  0B97                     	clrc
 20058  0B97  1003               	rlf	(___fladd@grs),f
 20059  0B98  0DDF               
 20060                           	goto	l3321
 20061  0B99  2B9A               	line	181
 20062                           	
 20063                           l913:	
 20064  0B9A                     	line	182
 20065                           	
 20066                           l3321:	
 20067  0B9A                     	movf	((___fladd@bexp)),w
 20068  0B9A  085E               	btfsc	status,2
 20069  0B9B  1903               	goto	u3971
 20070  0B9C  2B9E               	goto	u3970
 20071  0B9D  2B9F               u3971:
 20072  0B9E                     	goto	l3325
 20073  0B9E  2BA3               u3970:
 20074  0B9F                     	line	183
 20075                           	
 20076                           l3323:	
 20077  0B9F                     	movlw	01h
 20078  0B9F  3001               	subwf	(___fladd@bexp),f
 20079  0BA0  02DE               	goto	l3325
 20080  0BA1  2BA3               	line	184
 20081                           	
 20082                           l914:	
 20083  0BA2                     	goto	l3325
 20084  0BA2  2BA3               	line	185
 20085                           	
 20086                           l909:	
 20087  0BA3                     	line	171
 20088                           	
 20089                           l3325:	
 20090  0BA3                     	btfss	(___fladd@b+2),(23)&7
 20091  0BA3  1FCA               	goto	u3981
 20092  0BA4  2BA6               	goto	u3980
 20093  0BA5  2BA7               u3981:
 20094  0BA6                     	goto	l3311
 20095  0BA6  2B84               u3980:
 20096  0BA7                     	goto	l3327
 20097  0BA7  2BA9               	
 20098                           l915:	
 20099  0BA8                     	goto	l3327
 20100  0BA8  2BA9               	line	186
 20101                           	
 20102                           l904:	
 20103  0BA9                     	line	192
 20104                           	
 20105                           l3327:	
 20106  0BA9                     	clrf	(___fladd@aexp)
 20107  0BA9  01DD               	line	193
 20108                           	
 20109                           l3329:	
 20110  0BAA                     	btfss	(___fladd@grs),(7)&7
 20111  0BAA  1FDF               	goto	u3991
 20112  0BAB  2BAD               	goto	u3990
 20113  0BAC  2BAE               u3991:
 20114  0BAD                     	goto	l3337
 20115  0BAD  2BC0               u3990:
 20116  0BAE                     	line	194
 20117                           	
 20118                           l3331:	
 20119  0BAE                     	movf	(___fladd@grs),w
 20120  0BAE  085F               	andlw	07Fh
 20121  0BAF  397F               	btfsc	status,2
 20122  0BB0  1903               	goto	u4001
 20123  0BB1  2BB3               	goto	u4000
 20124  0BB2  2BB4               u4001:
 20125  0BB3                     	goto	l917
 20126  0BB3  2BB7               u4000:
 20127  0BB4                     	line	195
 20128                           	
 20129                           l3333:	
 20130  0BB4                     	clrf	(___fladd@aexp)
 20131  0BB4  01DD               	incf	(___fladd@aexp),f
 20132  0BB5  0ADD               	line	196
 20133                           	goto	l3337
 20134  0BB6  2BC0               	line	197
 20135                           	
 20136                           l917:	
 20137  0BB7                     	line	198
 20138                           	btfss	(___fladd@b),(0)&7
 20139  0BB7  1C48               	goto	u4011
 20140  0BB8  2BBA               	goto	u4010
 20141  0BB9  2BBB               u4011:
 20142  0BBA                     	goto	l3337
 20143  0BBA  2BC0               u4010:
 20144  0BBB                     	line	199
 20145                           	
 20146                           l3335:	
 20147  0BBB                     	clrf	(___fladd@aexp)
 20148  0BBB  01DD               	incf	(___fladd@aexp),f
 20149  0BBC  0ADD               	goto	l3337
 20150  0BBD  2BC0               	line	200
 20151                           	
 20152                           l919:	
 20153  0BBE                     	goto	l3337
 20154  0BBE  2BC0               	line	201
 20155                           	
 20156                           l918:	
 20157  0BBF                     	goto	l3337
 20158  0BBF  2BC0               	line	202
 20159                           	
 20160                           l916:	
 20161  0BC0                     	line	203
 20162                           	
 20163                           l3337:	
 20164  0BC0                     	movf	((___fladd@aexp)),w
 20165  0BC0  085D               	btfsc	status,2
 20166  0BC1  1903               	goto	u4021
 20167  0BC2  2BC4               	goto	u4020
 20168  0BC3  2BC5               u4021:
 20169  0BC4                     	goto	l920
 20170  0BC4  2BF4               u4020:
 20171  0BC5                     	line	204
 20172                           	
 20173                           l3339:	
 20174  0BC5                     	movlw	01h
 20175  0BC5  3001               	addwf	(___fladd@b),f
 20176  0BC6  07C8               	movlw	0
 20177  0BC7  3000               	addwfc	(___fladd@b+1),f
 20178  0BC8  3DC9               	movlw	0
 20179  0BC9  3000               	addwfc	(___fladd@b+2),f
 20180  0BCA  3DCA               	movlw	0
 20181  0BCB  3000               	addwfc	(___fladd@b+3),f
 20182  0BCC  3DCB               	line	205
 20183                           	
 20184                           l3341:	
 20185  0BCD                     	btfss	(___fladd@b+3),(24)&7
 20186  0BCD  1C4B               	goto	u4031
 20187  0BCE  2BD0               	goto	u4030
 20188  0BCF  2BD1               u4031:
 20189  0BD0                     	goto	l920
 20190  0BD0  2BF4               u4030:
 20191  0BD1                     	line	206
 20192                           	
 20193                           l3343:	
 20194  0BD1                     	movf	(___fladd@b),w
 20195  0BD1  0848               	movwf	(??___fladd+0)+0
 20196  0BD2  00D0               	movf	(___fladd@b+1),w
 20197  0BD3  0849               	movwf	((??___fladd+0)+0+1)
 20198  0BD4  00D1               	movf	(___fladd@b+2),w
 20199  0BD5  084A               	movwf	((??___fladd+0)+0+2)
 20200  0BD6  00D2               	movf	(___fladd@b+3),w
 20201  0BD7  084B               	movwf	((??___fladd+0)+0+3)
 20202  0BD8  00D3               	movlw	01h
 20203  0BD9  3001               	movwf	(??___fladd+4)+0
 20204  0BDA  00D4               u4045:
 20205  0BDB                     	asrf	(??___fladd+0)+3,f
 20206  0BDB  37D3               	rrf	(??___fladd+0)+2,f
 20207  0BDC  0CD2               	rrf	(??___fladd+0)+1,f
 20208  0BDD  0CD1               	rrf	(??___fladd+0)+0,f
 20209  0BDE  0CD0               u4040:
 20210  0BDF                     	decfsz	(??___fladd+4)+0,f
 20211  0BDF  0BD4               	goto	u4045
 20212  0BE0  2BDB               	movf	3+(??___fladd+0)+0,w
 20213  0BE1  0853               	movwf	(___fladd@b+3)
 20214  0BE2  00CB               	movf	2+(??___fladd+0)+0,w
 20215  0BE3  0852               	movwf	(___fladd@b+2)
 20216  0BE4  00CA               	movf	1+(??___fladd+0)+0,w
 20217  0BE5  0851               	movwf	(___fladd@b+1)
 20218  0BE6  00C9               	movf	0+(??___fladd+0)+0,w
 20219  0BE7  0850               	movwf	(___fladd@b)
 20220  0BE8  00C8               
 20221                           	line	207
 20222                           		incf	((___fladd@bexp)),w
 20223  0BE9  0A5E               	btfsc	status,2
 20224  0BEA  1903               	goto	u4051
 20225  0BEB  2BED               	goto	u4050
 20226  0BEC  2BEE               u4051:
 20227  0BED                     	goto	l920
 20228  0BED  2BF4               u4050:
 20229  0BEE                     	line	208
 20230                           	
 20231                           l3345:	
 20232  0BEE                     	movlw	low(01h)
 20233  0BEE  3001               	movwf	(??___fladd+0)+0
 20234  0BEF  00D0               	movf	(??___fladd+0)+0,w
 20235  0BF0  0850               	addwf	(___fladd@bexp),f
 20236  0BF1  07DE               	goto	l920
 20237  0BF2  2BF4               	line	209
 20238                           	
 20239                           l922:	
 20240  0BF3                     	goto	l920
 20241  0BF3  2BF4               	line	210
 20242                           	
 20243                           l921:	
 20244  0BF4                     	line	211
 20245                           	
 20246                           l920:	
 20247  0BF4                     	line	215
 20248                           		incf	((___fladd@bexp)),w
 20249  0BF4  0A5E               	btfsc	status,2
 20250  0BF5  1903               	goto	u4061
 20251  0BF6  2BF8               	goto	u4060
 20252  0BF7  2BF9               u4061:
 20253  0BF8                     	goto	l3349
 20254  0BF8  2BFF               u4060:
 20255  0BF9                     	
 20256                           l3347:	
 20257  0BF9                     	movf	((___fladd@bexp)),w
 20258  0BF9  085E               	btfss	status,2
 20259  0BFA  1D03               	goto	u4071
 20260  0BFB  2BFD               	goto	u4070
 20261  0BFC  2BFE               u4071:
 20262  0BFD                     	goto	l3355
 20263  0BFD  2C0F               u4070:
 20264  0BFE                     	goto	l3349
 20265  0BFE  2BFF               	
 20266                           l925:	
 20267  0BFF                     	line	216
 20268                           	
 20269                           l3349:	
 20270  0BFF                     	movlw	high highword(0)
 20271  0BFF  3000               	movwf	(___fladd@b+3)
 20272  0C00  00CB               	movlw	low highword(0)
 20273  0C01  3000               	movwf	(___fladd@b+2)
 20274  0C02  00CA               	movlw	high(0)
 20275  0C03  3000               	movwf	(___fladd@b+1)
 20276  0C04  00C9               	movlw	low(0)
 20277  0C05  3000               	movwf	(___fladd@b)
 20278  0C06  00C8               
 20279                           	line	218
 20280                           	
 20281                           l3351:	
 20282  0C07                     	movf	((___fladd@bexp)),w
 20283  0C07  085E               	btfss	status,2
 20284  0C08  1D03               	goto	u4081
 20285  0C09  2C0B               	goto	u4080
 20286  0C0A  2C0C               u4081:
 20287  0C0B                     	goto	l3355
 20288  0C0B  2C0F               u4080:
 20289  0C0C                     	line	219
 20290                           	
 20291                           l3353:	
 20292  0C0C                     	clrf	(___fladd@signs)
 20293  0C0C  01DC               	goto	l3355
 20294  0C0D  2C0F               	line	220
 20295                           	
 20296                           l926:	
 20297  0C0E                     	goto	l3355
 20298  0C0E  2C0F               	line	221
 20299                           	
 20300                           l923:	
 20301  0C0F                     	line	225
 20302                           	
 20303                           l3355:	
 20304  0C0F                     	btfss	(___fladd@bexp),(0)&7
 20305  0C0F  1C5E               	goto	u4091
 20306  0C10  2C12               	goto	u4090
 20307  0C11  2C13               u4091:
 20308  0C12                     	goto	l3359
 20309  0C12  2C15               u4090:
 20310  0C13                     	line	226
 20311                           	
 20312                           l3357:	
 20313  0C13                     	bsf	0+(___fladd@b)+02h+(7/8),(7)&7
 20314  0C13  17CA               	line	227
 20315                           	goto	l928
 20316  0C14  2C19               	line	229
 20317                           	
 20318                           l927:	
 20319  0C15                     	line	230
 20320                           	
 20321                           l3359:	
 20322  0C15                     	movlw	low(07Fh)
 20323  0C15  307F               	movwf	(??___fladd+0)+0
 20324  0C16  00D0               	movf	(??___fladd+0)+0,w
 20325  0C17  0850               	andwf	0+(___fladd@b)+02h,f
 20326  0C18  05CA               	line	231
 20327                           	
 20328                           l928:	
 20329  0C19                     	line	232
 20330                           	lsrf	(___fladd@bexp),w
 20331  0C19  365E               	movwf	(??___fladd+0)+0
 20332  0C1A  00D0               	movf	(??___fladd+0)+0,w
 20333  0C1B  0850               	movwf	0+(___fladd@b)+03h
 20334  0C1C  00CB               	line	233
 20335                           	
 20336                           l3361:	
 20337  0C1D                     	btfss	(___fladd@signs),(7)&7
 20338  0C1D  1FDC               	goto	u4101
 20339  0C1E  2C20               	goto	u4100
 20340  0C1F  2C21               u4101:
 20341  0C20                     	goto	l929
 20342  0C20  2C22               u4100:
 20343  0C21                     	line	234
 20344                           	
 20345                           l3363:	
 20346  0C21                     	bsf	0+(___fladd@b)+03h+(7/8),(7)&7
 20347  0C21  17CB               	line	235
 20348                           	
 20349                           l929:	
 20350  0C22                     	line	236
 20351                           	line	237
 20352                           	
 20353                           l899:	
 20354  0C22                     	return
 20355  0C22  0008               	opt stack 0
 20356                           GLOBAL	__end_of___fladd
 20357                           	__end_of___fladd:
 20358  0C23                     	signat	___fladd,8316
 20359                           	global	_checkStatus
 20360                           
 20361 ;; *************** function _checkStatus *****************
 20362 ;; Defined at:
 20363 ;;		line 162 in file "main.c"
 20364 ;; Parameters:    Size  Location     Type
 20365 ;;		None
 20366 ;; Auto vars:     Size  Location     Type
 20367 ;;		None
 20368 ;; Return value:  Size  Location     Type
 20369 ;;                  1    wreg      void 
 20370 ;; Registers used:
 20371 ;;		wreg, status,2, status,0, pclath, cstack
 20372 ;; Tracked objects:
 20373 ;;		On entry : 0/0
 20374 ;;		On exit  : 0/0
 20375 ;;		Unchanged: 0/0
 20376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20381 ;;Total ram usage:        0 bytes
 20382 ;; Hardware stack levels used:    1
 20383 ;; Hardware stack levels required when called:    4
 20384 ;; This function calls:
 20385 ;;		___flge
 20386 ;; This function is called by:
 20387 ;;		_main
 20388 ;; This function uses a non-reentrant model
 20389 ;;
 20390                           psect	text50,local,class=CODE,delta=2,merge=1,group=0
 20391                           	file	"main.c"
 20392                           	line	162
 20393                           global __ptext50
 20394                           __ptext50:	;psect for function _checkStatus
 20395  2303                     psect	text50
 20396                           	file	"main.c"
 20397                           	line	162
 20398                           	global	__size_of_checkStatus
 20399                           	__size_of_checkStatus	equ	__end_of_checkStatus-_checkStatus
 20400  0026                     	
 20401                           _checkStatus:	
 20402  2303                     ;incstack = 0
 20403                           	opt	stack 11
 20404                           ; Regs used in _checkStatus: [wreg+status,2+status,0+pclath+cstack]
 20405                           	line	164
 20406                           	
 20407                           l4829:	
 20408  2303                     ;main.c: 164:  if (g_tempAux < -30) {
 20409                           	movlb 4	; select bank4
 20410  2303  0144               	movf	(_g_tempAux+3)^0200h,w
 20411  2304  0837               	movlb 0	; select bank0
 20412  2305  0140               	movwf	(___flge@ff1+3)
 20413  2306  00CB               	movlb 4	; select bank4
 20414  2307  0144               	movf	(_g_tempAux+2)^0200h,w
 20415  2308  0836               	movlb 0	; select bank0
 20416  2309  0140               	movwf	(___flge@ff1+2)
 20417  230A  00CA               	movlb 4	; select bank4
 20418  230B  0144               	movf	(_g_tempAux+1)^0200h,w
 20419  230C  0835               	movlb 0	; select bank0
 20420  230D  0140               	movwf	(___flge@ff1+1)
 20421  230E  00C9               	movlb 4	; select bank4
 20422  230F  0144               	movf	(_g_tempAux)^0200h,w
 20423  2310  0834               	movlb 0	; select bank0
 20424  2311  0140               	movwf	(___flge@ff1)
 20425  2312  00C8               
 20426                           	movlw	0xc1
 20427  2313  30C1               	movwf	(___flge@ff2+3)
 20428  2314  00CF               	movlw	0xf0
 20429  2315  30F0               	movwf	(___flge@ff2+2)
 20430  2316  00CE               	movlw	0x0
 20431  2317  3000               	movwf	(___flge@ff2+1)
 20432  2318  00CD               	movlw	0x0
 20433  2319  3000               	movwf	(___flge@ff2)
 20434  231A  00CC               
 20435                           	fcall	___flge
 20436  231B  319B  2358  31A3   	btfsc	status,0
 20437  231E  1803               	goto	u6761
 20438  231F  2B21               	goto	u6760
 20439  2320  2B22               u6761:
 20440  2321                     	goto	l203
 20441  2321  2B25               u6760:
 20442  2322                     	line	165
 20443                           	
 20444                           l4831:	
 20445  2322                     ;main.c: 165:   g_status.NOAUXTEMP = 1;
 20446                           	movlb 3	; select bank3
 20447  2322  0143               	bsf	(_g_status)^0180h,2
 20448  2323  156D               	line	166
 20449                           ;main.c: 166:  } else
 20450                           	goto	l205
 20451  2324  2B28               	
 20452                           l203:	
 20453  2325                     	line	167
 20454                           ;main.c: 167:   g_status.NOAUXTEMP = 0;
 20455                           	movlb 3	; select bank3
 20456  2325  0143               	bcf	(_g_status)^0180h,2
 20457  2326  116D               	goto	l205
 20458  2327  2B28               	
 20459                           l204:	
 20460  2328                     	line	168
 20461                           	
 20462                           l205:	
 20463  2328                     	return
 20464  2328  0008               	opt stack 0
 20465                           GLOBAL	__end_of_checkStatus
 20466                           	__end_of_checkStatus:
 20467  2329                     	signat	_checkStatus,89
 20468                           	global	___flge
 20469                           
 20470 ;; *************** function ___flge *****************
 20471 ;; Defined at:
 20472 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flge.c"
 20473 ;; Parameters:    Size  Location     Type
 20474 ;;  ff1             4   40[BANK0 ] void 
 20475 ;;  ff2             4   44[BANK0 ] void 
 20476 ;; Auto vars:     Size  Location     Type
 20477 ;;		None
 20478 ;; Return value:  Size  Location     Type
 20479 ;;		None               void
 20480 ;; Registers used:
 20481 ;;		wreg, status,2, status,0
 20482 ;; Tracked objects:
 20483 ;;		On entry : 0/0
 20484 ;;		On exit  : 0/0
 20485 ;;		Unchanged: 0/0
 20486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20487 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20489 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20490 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20491 ;;Total ram usage:       16 bytes
 20492 ;; Hardware stack levels used:    1
 20493 ;; Hardware stack levels required when called:    3
 20494 ;; This function calls:
 20495 ;;		Nothing
 20496 ;; This function is called by:
 20497 ;;		_checkStatus
 20498 ;;		_efgtoa
 20499 ;; This function uses a non-reentrant model
 20500 ;;
 20501                           psect	text51,local,class=CODE,delta=2,merge=1,group=1
 20502                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flge.c"
 20503                           	line	4
 20504                           global __ptext51
 20505                           __ptext51:	;psect for function ___flge
 20506  1B58                     psect	text51
 20507                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flge.c"
 20508                           	line	4
 20509                           	global	__size_of___flge
 20510                           	__size_of___flge	equ	__end_of___flge-___flge
 20511  00AE                     	
 20512                           ___flge:	
 20513  1B58                     ;incstack = 0
 20514                           	opt	stack 7
 20515                           ; Regs used in ___flge: [wreg+status,2+status,0]
 20516                           	line	7
 20517                           	
 20518                           l3587:	
 20519  1B58                     	movlw	0
 20520  1B58  3000               	movlb 0	; select bank0
 20521  1B59  0140               	andwf	(___flge@ff1),w
 20522  1B5A  0548               	movwf	(??___flge+0)+0
 20523  1B5B  00D0               	movlw	0
 20524  1B5C  3000               	andwf	(___flge@ff1+1),w
 20525  1B5D  0549               	movwf	((??___flge+0)+0+1)
 20526  1B5E  00D1               	movlw	080h
 20527  1B5F  3080               	andwf	(___flge@ff1+2),w
 20528  1B60  054A               	movwf	((??___flge+0)+0+2)
 20529  1B61  00D2               	movlw	07Fh
 20530  1B62  307F               	andwf	(___flge@ff1+3),w
 20531  1B63  054B               	movwf	((??___flge+0)+0+3)
 20532  1B64  00D3               	movf	3+(??___flge+0)+0,w
 20533  1B65  0853               	iorwf	2+(??___flge+0)+0,w
 20534  1B66  0452               	iorwf	1+(??___flge+0)+0,w
 20535  1B67  0451               	iorwf	0+(??___flge+0)+0,w
 20536  1B68  0450               	skipz
 20537  1B69  1D03               	goto	u4721
 20538  1B6A  2B6C               	goto	u4720
 20539  1B6B  2B6D               u4721:
 20540  1B6C                     	goto	l763
 20541  1B6C  2B75               u4720:
 20542  1B6D                     	line	8
 20543                           	
 20544                           l3589:	
 20545  1B6D                     	movlw	high highword(0)
 20546  1B6D  3000               	movwf	(___flge@ff1+3)
 20547  1B6E  00CB               	movlw	low highword(0)
 20548  1B6F  3000               	movwf	(___flge@ff1+2)
 20549  1B70  00CA               	movlw	high(0)
 20550  1B71  3000               	movwf	(___flge@ff1+1)
 20551  1B72  00C9               	movlw	low(0)
 20552  1B73  3000               	movwf	(___flge@ff1)
 20553  1B74  00C8               
 20554                           	
 20555                           l763:	
 20556  1B75                     	line	9
 20557                           	movlw	0
 20558  1B75  3000               	andwf	(___flge@ff2),w
 20559  1B76  054C               	movwf	(??___flge+0)+0
 20560  1B77  00D0               	movlw	0
 20561  1B78  3000               	andwf	(___flge@ff2+1),w
 20562  1B79  054D               	movwf	((??___flge+0)+0+1)
 20563  1B7A  00D1               	movlw	080h
 20564  1B7B  3080               	andwf	(___flge@ff2+2),w
 20565  1B7C  054E               	movwf	((??___flge+0)+0+2)
 20566  1B7D  00D2               	movlw	07Fh
 20567  1B7E  307F               	andwf	(___flge@ff2+3),w
 20568  1B7F  054F               	movwf	((??___flge+0)+0+3)
 20569  1B80  00D3               	movf	3+(??___flge+0)+0,w
 20570  1B81  0853               	iorwf	2+(??___flge+0)+0,w
 20571  1B82  0452               	iorwf	1+(??___flge+0)+0,w
 20572  1B83  0451               	iorwf	0+(??___flge+0)+0,w
 20573  1B84  0450               	skipz
 20574  1B85  1D03               	goto	u4731
 20575  1B86  2B88               	goto	u4730
 20576  1B87  2B89               u4731:
 20577  1B88                     	goto	l3593
 20578  1B88  2B92               u4730:
 20579  1B89                     	line	10
 20580                           	
 20581                           l3591:	
 20582  1B89                     	movlw	high highword(0)
 20583  1B89  3000               	movwf	(___flge@ff2+3)
 20584  1B8A  00CF               	movlw	low highword(0)
 20585  1B8B  3000               	movwf	(___flge@ff2+2)
 20586  1B8C  00CE               	movlw	high(0)
 20587  1B8D  3000               	movwf	(___flge@ff2+1)
 20588  1B8E  00CD               	movlw	low(0)
 20589  1B8F  3000               	movwf	(___flge@ff2)
 20590  1B90  00CC               
 20591                           	goto	l3593
 20592  1B91  2B92               	
 20593                           l764:	
 20594  1B92                     	line	12
 20595                           	
 20596                           l3593:	
 20597  1B92                     	btfss	(___flge@ff1+3),(31)&7
 20598  1B92  1FCB               	goto	u4741
 20599  1B93  2B95               	goto	u4740
 20600  1B94  2B96               u4741:
 20601  1B95                     	goto	l3597
 20602  1B95  2BBE               u4740:
 20603  1B96                     	line	13
 20604                           	
 20605                           l3595:	
 20606  1B96                     	movlw	0
 20607  1B96  3000               	movwf	((??___flge+0)+0)
 20608  1B97  00D0               	movlw	0
 20609  1B98  3000               	movwf	((??___flge+0)+0+1)
 20610  1B99  00D1               	movlw	0
 20611  1B9A  3000               	movwf	((??___flge+0)+0+2)
 20612  1B9B  00D2               	movlw	080h
 20613  1B9C  3080               	movwf	((??___flge+0)+0+3)
 20614  1B9D  00D3               	comf	(___flge@ff1),w
 20615  1B9E  0948               	movwf	(??___flge+4)+0
 20616  1B9F  00D4               	comf	(___flge@ff1+1),w
 20617  1BA0  0949               	movwf	((??___flge+4)+0+1)
 20618  1BA1  00D5               	comf	(___flge@ff1+2),w
 20619  1BA2  094A               	movwf	((??___flge+4)+0+2)
 20620  1BA3  00D6               	comf	(___flge@ff1+3),w
 20621  1BA4  094B               	movwf	((??___flge+4)+0+3)
 20622  1BA5  00D7               	incf	(??___flge+4)+0,f
 20623  1BA6  0AD4               	skipnz
 20624  1BA7  1903               	incf	((??___flge+4)+0+1),f
 20625  1BA8  0AD5               	skipnz
 20626  1BA9  1903               	incf	((??___flge+4)+0+2),f
 20627  1BAA  0AD6               	skipnz
 20628  1BAB  1903               	incf	((??___flge+4)+0+3),f
 20629  1BAC  0AD7               	movf	0+(??___flge+4)+0,w
 20630  1BAD  0854               	addwf	(??___flge+0)+0,f
 20631  1BAE  07D0               	movf	1+(??___flge+4)+0,w
 20632  1BAF  0855               	addwfc	(??___flge+0)+1,f
 20633  1BB0  3DD1               	movf	2+(??___flge+4)+0,w
 20634  1BB1  0856               	addwfc	(??___flge+0)+2,f
 20635  1BB2  3DD2               	movf	3+(??___flge+4)+0,w
 20636  1BB3  0857               	addwfc	(??___flge+0)+3,f
 20637  1BB4  3DD3               	movf	3+(??___flge+0)+0,w
 20638  1BB5  0853               	movwf	(___flge@ff1+3)
 20639  1BB6  00CB               	movf	2+(??___flge+0)+0,w
 20640  1BB7  0852               	movwf	(___flge@ff1+2)
 20641  1BB8  00CA               	movf	1+(??___flge+0)+0,w
 20642  1BB9  0851               	movwf	(___flge@ff1+1)
 20643  1BBA  00C9               	movf	0+(??___flge+0)+0,w
 20644  1BBB  0850               	movwf	(___flge@ff1)
 20645  1BBC  00C8               
 20646                           	goto	l3597
 20647  1BBD  2BBE               	
 20648                           l765:	
 20649  1BBE                     	line	14
 20650                           	
 20651                           l3597:	
 20652  1BBE                     	btfss	(___flge@ff2+3),(31)&7
 20653  1BBE  1FCF               	goto	u4751
 20654  1BBF  2BC1               	goto	u4750
 20655  1BC0  2BC2               u4751:
 20656  1BC1                     	goto	l3601
 20657  1BC1  2BEA               u4750:
 20658  1BC2                     	line	15
 20659                           	
 20660                           l3599:	
 20661  1BC2                     	movlw	0
 20662  1BC2  3000               	movwf	((??___flge+0)+0)
 20663  1BC3  00D0               	movlw	0
 20664  1BC4  3000               	movwf	((??___flge+0)+0+1)
 20665  1BC5  00D1               	movlw	0
 20666  1BC6  3000               	movwf	((??___flge+0)+0+2)
 20667  1BC7  00D2               	movlw	080h
 20668  1BC8  3080               	movwf	((??___flge+0)+0+3)
 20669  1BC9  00D3               	comf	(___flge@ff2),w
 20670  1BCA  094C               	movwf	(??___flge+4)+0
 20671  1BCB  00D4               	comf	(___flge@ff2+1),w
 20672  1BCC  094D               	movwf	((??___flge+4)+0+1)
 20673  1BCD  00D5               	comf	(___flge@ff2+2),w
 20674  1BCE  094E               	movwf	((??___flge+4)+0+2)
 20675  1BCF  00D6               	comf	(___flge@ff2+3),w
 20676  1BD0  094F               	movwf	((??___flge+4)+0+3)
 20677  1BD1  00D7               	incf	(??___flge+4)+0,f
 20678  1BD2  0AD4               	skipnz
 20679  1BD3  1903               	incf	((??___flge+4)+0+1),f
 20680  1BD4  0AD5               	skipnz
 20681  1BD5  1903               	incf	((??___flge+4)+0+2),f
 20682  1BD6  0AD6               	skipnz
 20683  1BD7  1903               	incf	((??___flge+4)+0+3),f
 20684  1BD8  0AD7               	movf	0+(??___flge+4)+0,w
 20685  1BD9  0854               	addwf	(??___flge+0)+0,f
 20686  1BDA  07D0               	movf	1+(??___flge+4)+0,w
 20687  1BDB  0855               	addwfc	(??___flge+0)+1,f
 20688  1BDC  3DD1               	movf	2+(??___flge+4)+0,w
 20689  1BDD  0856               	addwfc	(??___flge+0)+2,f
 20690  1BDE  3DD2               	movf	3+(??___flge+4)+0,w
 20691  1BDF  0857               	addwfc	(??___flge+0)+3,f
 20692  1BE0  3DD3               	movf	3+(??___flge+0)+0,w
 20693  1BE1  0853               	movwf	(___flge@ff2+3)
 20694  1BE2  00CF               	movf	2+(??___flge+0)+0,w
 20695  1BE3  0852               	movwf	(___flge@ff2+2)
 20696  1BE4  00CE               	movf	1+(??___flge+0)+0,w
 20697  1BE5  0851               	movwf	(___flge@ff2+1)
 20698  1BE6  00CD               	movf	0+(??___flge+0)+0,w
 20699  1BE7  0850               	movwf	(___flge@ff2)
 20700  1BE8  00CC               
 20701                           	goto	l3601
 20702  1BE9  2BEA               	
 20703                           l766:	
 20704  1BEA                     	line	16
 20705                           	
 20706                           l3601:	
 20707  1BEA                     	movlw	080h
 20708  1BEA  3080               	xorwf	(___flge@ff1+3),f
 20709  1BEB  06CB               	line	17
 20710                           	
 20711                           l3603:	
 20712  1BEC                     	movlw	080h
 20713  1BEC  3080               	xorwf	(___flge@ff2+3),f
 20714  1BED  06CF               	line	18
 20715                           	
 20716                           l3605:	
 20717  1BEE                     	movf	(___flge@ff2+3),w
 20718  1BEE  084F               	subwf	(___flge@ff1+3),w
 20719  1BEF  024B               	skipz
 20720  1BF0  1D03               	goto	u4765
 20721  1BF1  2BFC               	movf	(___flge@ff2+2),w
 20722  1BF2  084E               	subwf	(___flge@ff1+2),w
 20723  1BF3  024A               	skipz
 20724  1BF4  1D03               	goto	u4765
 20725  1BF5  2BFC               	movf	(___flge@ff2+1),w
 20726  1BF6  084D               	subwf	(___flge@ff1+1),w
 20727  1BF7  0249               	skipz
 20728  1BF8  1D03               	goto	u4765
 20729  1BF9  2BFC               	movf	(___flge@ff2),w
 20730  1BFA  084C               	subwf	(___flge@ff1),w
 20731  1BFB  0248               u4765:
 20732  1BFC                     	skipnc
 20733  1BFC  1803               	goto	u4761
 20734  1BFD  2BFF               	goto	u4760
 20735  1BFE  2C00               u4761:
 20736  1BFF                     	goto	l3609
 20737  1BFF  2C02               u4760:
 20738  1C00                     	
 20739                           l3607:	
 20740  1C00                     	clrc
 20741  1C00  1003               	
 20742                           	goto	l771
 20743  1C01  2C05               	
 20744                           l768:	
 20745  1C02                     	
 20746                           l3609:	
 20747  1C02                     	setc
 20748  1C02  1403               	
 20749                           	goto	l771
 20750  1C03  2C05               	
 20751                           l770:	
 20752  1C04                     	goto	l771
 20753  1C04  2C05               	
 20754                           l3611:	
 20755  1C05                     	line	19
 20756                           	
 20757                           l771:	
 20758  1C05                     	return
 20759  1C05  0008               	opt stack 0
 20760                           GLOBAL	__end_of___flge
 20761                           	__end_of___flge:
 20762  1C06                     	signat	___flge,8312
 20763                           	global	_OLED_init
 20764                           
 20765 ;; *************** function _OLED_init *****************
 20766 ;; Defined at:
 20767 ;;		line 80 in file "oled.c"
 20768 ;; Parameters:    Size  Location     Type
 20769 ;;		None
 20770 ;; Auto vars:     Size  Location     Type
 20771 ;;		None
 20772 ;; Return value:  Size  Location     Type
 20773 ;;                  1    wreg      void 
 20774 ;; Registers used:
 20775 ;;		wreg, status,2, status,0, pclath, cstack
 20776 ;; Tracked objects:
 20777 ;;		On entry : 0/0
 20778 ;;		On exit  : 0/0
 20779 ;;		Unchanged: 0/0
 20780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20783 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20784 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20785 ;;Total ram usage:        1 bytes
 20786 ;; Hardware stack levels used:    1
 20787 ;; Hardware stack levels required when called:    7
 20788 ;; This function calls:
 20789 ;;		_OLED_command
 20790 ;;		_OLED_write4bits
 20791 ;; This function is called by:
 20792 ;;		_main
 20793 ;; This function uses a non-reentrant model
 20794 ;;
 20795                           psect	text52,local,class=CODE,delta=2,merge=1,group=0
 20796                           	file	"oled.c"
 20797                           	line	80
 20798                           global __ptext52
 20799                           __ptext52:	;psect for function _OLED_init
 20800  1A38                     psect	text52
 20801                           	file	"oled.c"
 20802                           	line	80
 20803                           	global	__size_of_OLED_init
 20804                           	__size_of_OLED_init	equ	__end_of_OLED_init-_OLED_init
 20805  008B                     	
 20806                           _OLED_init:	
 20807  1A38                     ;incstack = 0
 20808                           	opt	stack 8
 20809                           ; Regs used in _OLED_init: [wreg+status,2+status,0+pclath+cstack]
 20810                           	line	82
 20811                           	
 20812                           l4787:	
 20813  1A38                     ;oled.c: 82:     LATBbits.LATB4 = 0;
 20814                           	movlb 0	; select bank0
 20815  1A38  0140               	bcf	(25),4	;volatile
 20816  1A39  1219               	line	83
 20817                           ;oled.c: 83:     LATBbits.LATB2 = 0;
 20818                           	bcf	(25),2	;volatile
 20819  1A3A  1119               	line	84
 20820                           ;oled.c: 84:     LATBbits.LATB3 = 0;
 20821                           	bcf	(25),3	;volatile
 20822  1A3B  1199               	line	86
 20823                           	
 20824                           l4789:	
 20825  1A3C                     ;oled.c: 86:     _delay((unsigned long)((50)*(4000000/4000.0)));
 20826                           	opt asmopt_push
 20827                           opt asmopt_off
 20828                           movlw	65
 20829  1A3C  3041               	movlb 0	; select bank0
 20830  1A3D  0140               movwf	((??_OLED_init+0)+0),f
 20831  1A3E  00A7               	movlw	238
 20832  1A3F  30EE               u7227:
 20833  1A40                     decfsz	wreg
 20834  1A40  0B89               	goto	u7227
 20835  1A41  2A40               	decfsz	((??_OLED_init+0)+0),f
 20836  1A42  0BA7               	goto	u7227
 20837  1A43  2A40               	nop
 20838  1A44  0000               opt asmopt_pop
 20839                           
 20840                           	line	90
 20841                           	
 20842                           l4791:	
 20843  1A45                     ;oled.c: 90:     LATBbits.LATB1 = 0;
 20844                           	movlb 0	; select bank0
 20845  1A45  0140               	bcf	(25),1	;volatile
 20846  1A46  1099               	line	91
 20847                           	
 20848                           l4793:	
 20849  1A47                     ;oled.c: 91:     LATBbits.LATB0 = 0;
 20850                           	bcf	(25),0	;volatile
 20851  1A47  1019               	line	92
 20852                           	
 20853                           l4795:	
 20854  1A48                     ;oled.c: 92:     LATCbits.LATC5 = 0;
 20855                           	bcf	(26),5	;volatile
 20856  1A48  129A               	line	93
 20857                           	
 20858                           l4797:	
 20859  1A49                     ;oled.c: 93:     LATCbits.LATC4 = 0;
 20860                           	bcf	(26),4	;volatile
 20861  1A49  121A               	line	104
 20862                           	
 20863                           l4799:	
 20864  1A4A                     ;oled.c: 104:     OLED_write4bits(0x03);
 20865                           	movlw	low(03h)
 20866  1A4A  3003               	fcall	_OLED_write4bits
 20867  1A4B  31A4  24FA  319A   	line	105
 20868                           	
 20869                           l4801:	
 20870  1A4E                     ;oled.c: 105:     _delay((unsigned long)((5)*(4000000/4000.0)));
 20871                           	opt asmopt_push
 20872                           opt asmopt_off
 20873                           movlw	7
 20874  1A4E  3007               	movlb 0	; select bank0
 20875  1A4F  0140               movwf	((??_OLED_init+0)+0),f
 20876  1A50  00A7               	movlw	125
 20877  1A51  307D               u7237:
 20878  1A52                     decfsz	wreg
 20879  1A52  0B89               	goto	u7237
 20880  1A53  2A52               	decfsz	((??_OLED_init+0)+0),f
 20881  1A54  0BA7               	goto	u7237
 20882  1A55  2A52               opt asmopt_pop
 20883                           
 20884                           	line	106
 20885                           ;oled.c: 106:     OLED_write4bits(0x08);
 20886                           	movlw	low(08h)
 20887  1A56  3008               	fcall	_OLED_write4bits
 20888  1A57  31A4  24FA  319A   	line	107
 20889                           	
 20890                           l4803:	
 20891  1A5A                     ;oled.c: 107:     _delay((unsigned long)((5)*(4000000/4000.0)));
 20892                           	opt asmopt_push
 20893                           opt asmopt_off
 20894                           movlw	7
 20895  1A5A  3007               	movlb 0	; select bank0
 20896  1A5B  0140               movwf	((??_OLED_init+0)+0),f
 20897  1A5C  00A7               	movlw	125
 20898  1A5D  307D               u7247:
 20899  1A5E                     decfsz	wreg
 20900  1A5E  0B89               	goto	u7247
 20901  1A5F  2A5E               	decfsz	((??_OLED_init+0)+0),f
 20902  1A60  0BA7               	goto	u7247
 20903  1A61  2A5E               opt asmopt_pop
 20904                           
 20905                           	line	109
 20906                           	
 20907                           l4805:	
 20908  1A62                     ;oled.c: 109:     OLED_write4bits(0x02);
 20909                           	movlw	low(02h)
 20910  1A62  3002               	fcall	_OLED_write4bits
 20911  1A63  31A4  24FA  319A   	line	110
 20912                           ;oled.c: 110:     _delay((unsigned long)((5)*(4000000/4000.0)));
 20913                           	opt asmopt_push
 20914                           opt asmopt_off
 20915                           movlw	7
 20916  1A66  3007               	movlb 0	; select bank0
 20917  1A67  0140               movwf	((??_OLED_init+0)+0),f
 20918  1A68  00A7               	movlw	125
 20919  1A69  307D               u7257:
 20920  1A6A                     decfsz	wreg
 20921  1A6A  0B89               	goto	u7257
 20922  1A6B  2A6A               	decfsz	((??_OLED_init+0)+0),f
 20923  1A6C  0BA7               	goto	u7257
 20924  1A6D  2A6A               opt asmopt_pop
 20925                           
 20926                           	line	111
 20927                           	
 20928                           l4807:	
 20929  1A6E                     ;oled.c: 111:     OLED_write4bits(0x02);
 20930                           	movlw	low(02h)
 20931  1A6E  3002               	fcall	_OLED_write4bits
 20932  1A6F  31A4  24FA  319A   	line	112
 20933                           	
 20934                           l4809:	
 20935  1A72                     ;oled.c: 112:     _delay((unsigned long)((5)*(4000000/4000.0)));
 20936                           	opt asmopt_push
 20937                           opt asmopt_off
 20938                           movlw	7
 20939  1A72  3007               	movlb 0	; select bank0
 20940  1A73  0140               movwf	((??_OLED_init+0)+0),f
 20941  1A74  00A7               	movlw	125
 20942  1A75  307D               u7267:
 20943  1A76                     decfsz	wreg
 20944  1A76  0B89               	goto	u7267
 20945  1A77  2A76               	decfsz	((??_OLED_init+0)+0),f
 20946  1A78  0BA7               	goto	u7267
 20947  1A79  2A76               opt asmopt_pop
 20948                           
 20949                           	line	113
 20950                           ;oled.c: 113:     OLED_write4bits(0x08);
 20951                           	movlw	low(08h)
 20952  1A7A  3008               	fcall	_OLED_write4bits
 20953  1A7B  31A4  24FA  319A   	line	114
 20954                           	
 20955                           l4811:	
 20956  1A7E                     ;oled.c: 114:     _delay((unsigned long)((5)*(4000000/4000.0)));
 20957                           	opt asmopt_push
 20958                           opt asmopt_off
 20959                           movlw	7
 20960  1A7E  3007               	movlb 0	; select bank0
 20961  1A7F  0140               movwf	((??_OLED_init+0)+0),f
 20962  1A80  00A7               	movlw	125
 20963  1A81  307D               u7277:
 20964  1A82                     decfsz	wreg
 20965  1A82  0B89               	goto	u7277
 20966  1A83  2A82               	decfsz	((??_OLED_init+0)+0),f
 20967  1A84  0BA7               	goto	u7277
 20968  1A85  2A82               opt asmopt_pop
 20969                           
 20970                           	line	116
 20971                           	
 20972                           l4813:	
 20973  1A86                     ;oled.c: 116:     OLED_command(0x08);
 20974                           	movlw	low(08h)
 20975  1A86  3008               	fcall	_OLED_command
 20976  1A87  31A1  2173  319A   	line	117
 20977                           ;oled.c: 117:     _delay((unsigned long)((5)*(4000000/4000.0)));
 20978                           	opt asmopt_push
 20979                           opt asmopt_off
 20980                           movlw	7
 20981  1A8A  3007               	movlb 0	; select bank0
 20982  1A8B  0140               movwf	((??_OLED_init+0)+0),f
 20983  1A8C  00A7               	movlw	125
 20984  1A8D  307D               u7287:
 20985  1A8E                     decfsz	wreg
 20986  1A8E  0B89               	goto	u7287
 20987  1A8F  2A8E               	decfsz	((??_OLED_init+0)+0),f
 20988  1A90  0BA7               	goto	u7287
 20989  1A91  2A8E               opt asmopt_pop
 20990                           
 20991                           	line	118
 20992                           	
 20993                           l4815:	
 20994  1A92                     ;oled.c: 118:     OLED_command(0x01);
 20995                           	movlw	low(01h)
 20996  1A92  3001               	fcall	_OLED_command
 20997  1A93  31A1  2173  319A   	line	119
 20998                           	
 20999                           l4817:	
 21000  1A96                     ;oled.c: 119:     _delay((unsigned long)((5)*(4000000/4000.0)));
 21001                           	opt asmopt_push
 21002                           opt asmopt_off
 21003                           movlw	7
 21004  1A96  3007               	movlb 0	; select bank0
 21005  1A97  0140               movwf	((??_OLED_init+0)+0),f
 21006  1A98  00A7               	movlw	125
 21007  1A99  307D               u7297:
 21008  1A9A                     decfsz	wreg
 21009  1A9A  0B89               	goto	u7297
 21010  1A9B  2A9A               	decfsz	((??_OLED_init+0)+0),f
 21011  1A9C  0BA7               	goto	u7297
 21012  1A9D  2A9A               opt asmopt_pop
 21013                           
 21014                           	line	120
 21015                           ;oled.c: 120:     OLED_command(0x06);
 21016                           	movlw	low(06h)
 21017  1A9E  3006               	fcall	_OLED_command
 21018  1A9F  31A1  2173  319A   	line	121
 21019                           	
 21020                           l4819:	
 21021  1AA2                     ;oled.c: 121:     _delay((unsigned long)((5)*(4000000/4000.0)));
 21022                           	opt asmopt_push
 21023                           opt asmopt_off
 21024                           movlw	7
 21025  1AA2  3007               	movlb 0	; select bank0
 21026  1AA3  0140               movwf	((??_OLED_init+0)+0),f
 21027  1AA4  00A7               	movlw	125
 21028  1AA5  307D               u7307:
 21029  1AA6                     decfsz	wreg
 21030  1AA6  0B89               	goto	u7307
 21031  1AA7  2AA6               	decfsz	((??_OLED_init+0)+0),f
 21032  1AA8  0BA7               	goto	u7307
 21033  1AA9  2AA6               opt asmopt_pop
 21034                           
 21035                           	line	122
 21036                           	
 21037                           l4821:	
 21038  1AAA                     ;oled.c: 122:     OLED_command(0x02);
 21039                           	movlw	low(02h)
 21040  1AAA  3002               	fcall	_OLED_command
 21041  1AAB  31A1  2173  319A   	line	123
 21042                           ;oled.c: 123:     _delay((unsigned long)((5)*(4000000/4000.0)));
 21043                           	opt asmopt_push
 21044                           opt asmopt_off
 21045                           movlw	7
 21046  1AAE  3007               	movlb 0	; select bank0
 21047  1AAF  0140               movwf	((??_OLED_init+0)+0),f
 21048  1AB0  00A7               	movlw	125
 21049  1AB1  307D               u7317:
 21050  1AB2                     decfsz	wreg
 21051  1AB2  0B89               	goto	u7317
 21052  1AB3  2AB2               	decfsz	((??_OLED_init+0)+0),f
 21053  1AB4  0BA7               	goto	u7317
 21054  1AB5  2AB2               opt asmopt_pop
 21055                           
 21056                           	line	124
 21057                           	
 21058                           l4823:	
 21059  1AB6                     ;oled.c: 124:     OLED_command(0x0C);
 21060                           	movlw	low(0Ch)
 21061  1AB6  300C               	fcall	_OLED_command
 21062  1AB7  31A1  2173  319A   	line	125
 21063                           	
 21064                           l4825:	
 21065  1ABA                     ;oled.c: 125:     _delay((unsigned long)((5)*(4000000/4000.0)));
 21066                           	opt asmopt_push
 21067                           opt asmopt_off
 21068                           movlw	7
 21069  1ABA  3007               	movlb 0	; select bank0
 21070  1ABB  0140               movwf	((??_OLED_init+0)+0),f
 21071  1ABC  00A7               	movlw	125
 21072  1ABD  307D               u7327:
 21073  1ABE                     decfsz	wreg
 21074  1ABE  0B89               	goto	u7327
 21075  1ABF  2ABE               	decfsz	((??_OLED_init+0)+0),f
 21076  1AC0  0BA7               	goto	u7327
 21077  1AC1  2ABE               opt asmopt_pop
 21078                           
 21079                           	line	126
 21080                           	
 21081                           l351:	
 21082  1AC2                     	return
 21083  1AC2  0008               	opt stack 0
 21084                           GLOBAL	__end_of_OLED_init
 21085                           	__end_of_OLED_init:
 21086  1AC3                     	signat	_OLED_init,89
 21087                           	global	_OLED_command
 21088                           
 21089 ;; *************** function _OLED_command *****************
 21090 ;; Defined at:
 21091 ;;		line 68 in file "oled.c"
 21092 ;; Parameters:    Size  Location     Type
 21093 ;;  value           1    wreg     unsigned char 
 21094 ;; Auto vars:     Size  Location     Type
 21095 ;;  value           1    6[BANK0 ] unsigned char 
 21096 ;; Return value:  Size  Location     Type
 21097 ;;                  1    wreg      void 
 21098 ;; Registers used:
 21099 ;;		wreg, status,2, status,0, pclath, cstack
 21100 ;; Tracked objects:
 21101 ;;		On entry : 0/0
 21102 ;;		On exit  : 0/0
 21103 ;;		Unchanged: 0/0
 21104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21106 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21108 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21109 ;;Total ram usage:        1 bytes
 21110 ;; Hardware stack levels used:    1
 21111 ;; Hardware stack levels required when called:    6
 21112 ;; This function calls:
 21113 ;;		_OLED_send
 21114 ;;		_OLED_waitForReady
 21115 ;; This function is called by:
 21116 ;;		_main
 21117 ;;		_OLED_init
 21118 ;;		_OLED_scrollDisplayLeft
 21119 ;;		_OLED_scrollDisplayRight
 21120 ;;		_OLED_print_xy
 21121 ;;		_OLED_returnHome
 21122 ;;		_OLED_setCursor
 21123 ;; This function uses a non-reentrant model
 21124 ;;
 21125                           psect	text53,local,class=CODE,delta=2,merge=1,group=0
 21126                           	line	68
 21127                           global __ptext53
 21128                           __ptext53:	;psect for function _OLED_command
 21129  2173                     psect	text53
 21130                           	file	"oled.c"
 21131                           	line	68
 21132                           	global	__size_of_OLED_command
 21133                           	__size_of_OLED_command	equ	__end_of_OLED_command-_OLED_command
 21134  000B                     	
 21135                           _OLED_command:	
 21136  2173                     ;incstack = 0
 21137                           	opt	stack 6
 21138                           ; Regs used in _OLED_command: [wreg+status,2+status,0+pclath+cstack]
 21139                           ;OLED_command@value stored from wreg
 21140                           	movlb 0	; select bank0
 21141  2173  0140               	movwf	(OLED_command@value)
 21142  2174  00A6               	line	70
 21143                           	
 21144                           l4389:	
 21145  2175                     ;oled.c: 68: void OLED_command(uint8_t value);oled.c: 69: {;oled.c: 70:     OLED_send(va
                                 lue, 0);
 21146                           	clrf	(OLED_send@mode)
 21147  2175  01A3               	movf	(OLED_command@value),w
 21148  2176  0826               	fcall	_OLED_send
 21149  2177  31A1  21C1  31A1   	line	71
 21150                           ;oled.c: 71:     OLED_waitForReady();
 21151                           	fcall	_OLED_waitForReady
 21152  217A  31A2  2250  31A1   	line	72
 21153                           	
 21154                           l345:	
 21155  217D                     	return
 21156  217D  0008               	opt stack 0
 21157                           GLOBAL	__end_of_OLED_command
 21158                           	__end_of_OLED_command:
 21159  217E                     	signat	_OLED_command,4217
 21160                           	global	_OLED_waitForReady
 21161                           
 21162 ;; *************** function _OLED_waitForReady *****************
 21163 ;; Defined at:
 21164 ;;		line 40 in file "oled.c"
 21165 ;; Parameters:    Size  Location     Type
 21166 ;;		None
 21167 ;; Auto vars:     Size  Location     Type
 21168 ;;  busy            1    0[BANK0 ] unsigned char 
 21169 ;; Return value:  Size  Location     Type
 21170 ;;                  1    wreg      void 
 21171 ;; Registers used:
 21172 ;;		wreg, status,2, status,0, pclath, cstack
 21173 ;; Tracked objects:
 21174 ;;		On entry : 0/0
 21175 ;;		On exit  : 0/0
 21176 ;;		Unchanged: 0/0
 21177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21179 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21181 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21182 ;;Total ram usage:        1 bytes
 21183 ;; Hardware stack levels used:    1
 21184 ;; Hardware stack levels required when called:    4
 21185 ;; This function calls:
 21186 ;;		_OLED_pulseEnable
 21187 ;; This function is called by:
 21188 ;;		_OLED_command
 21189 ;;		_OLED_write
 21190 ;; This function uses a non-reentrant model
 21191 ;;
 21192                           psect	text54,local,class=CODE,delta=2,merge=1,group=0
 21193                           	line	40
 21194                           global __ptext54
 21195                           __ptext54:	;psect for function _OLED_waitForReady
 21196  2250                     psect	text54
 21197                           	file	"oled.c"
 21198                           	line	40
 21199                           	global	__size_of_OLED_waitForReady
 21200                           	__size_of_OLED_waitForReady	equ	__end_of_OLED_waitForReady-_OLED_waitForReady
 21201  0023                     	
 21202                           _OLED_waitForReady:	
 21203  2250                     ;incstack = 0
 21204                           	opt	stack 7
 21205                           ; Regs used in _OLED_waitForReady: [wreg+status,2+status,0+pclath+cstack]
 21206                           	line	43
 21207                           	
 21208                           l3963:	
 21209  2250                     ;oled.c: 43:     unsigned char busy = 1;
 21210                           	movlb 0	; select bank0
 21211  2250  0140               	clrf	(OLED_waitForReady@busy)
 21212  2251  01A0               	incf	(OLED_waitForReady@busy),f
 21213  2252  0AA0               	line	45
 21214                           ;oled.c: 45:     TRISCbits.TRISC4 = 1;
 21215                           	bsf	(20),4	;volatile
 21216  2253  1614               	line	46
 21217                           ;oled.c: 46:     LATBbits.LATB4 = 0;
 21218                           	bcf	(25),4	;volatile
 21219  2254  1219               	line	47
 21220                           ;oled.c: 47:     LATBbits.LATB3 = 1;
 21221                           	bsf	(25),3	;volatile
 21222  2255  1599               	line	49
 21223                           ;oled.c: 49:     do
 21224                           	
 21225                           l340:	
 21226  2256                     	line	51
 21227                           ;oled.c: 50:     {;oled.c: 51:         LATBbits.LATB2 = 0;
 21228                           	bcf	(25),2	;volatile
 21229  2256  1119               	line	52
 21230                           	
 21231                           l3965:	
 21232  2257                     ;oled.c: 52:         _delay((unsigned long)((10)*(4000000/4000000.0)));
 21233                           	opt asmopt_push
 21234                           opt asmopt_off
 21235                           	movlw	3
 21236  2257  3003               u7337:
 21237  2258                     decfsz	wreg
 21238  2258  0B89               	goto	u7337
 21239  2259  2A58               	nop
 21240  225A  0000               opt asmopt_pop
 21241                           
 21242                           	line	53
 21243                           	
 21244                           l3967:	
 21245  225B                     ;oled.c: 53:         LATBbits.LATB2 = 1;
 21246                           	movlb 0	; select bank0
 21247  225B  0140               	bsf	(25),2	;volatile
 21248  225C  1519               	line	55
 21249                           ;oled.c: 55:         _delay((unsigned long)((10)*(4000000/4000000.0)));
 21250                           	opt asmopt_push
 21251                           opt asmopt_off
 21252                           	movlw	3
 21253  225D  3003               u7347:
 21254  225E                     decfsz	wreg
 21255  225E  0B89               	goto	u7347
 21256  225F  2A5E               	nop
 21257  2260  0000               opt asmopt_pop
 21258                           
 21259                           	line	56
 21260                           	
 21261                           l3969:	
 21262  2261                     ;oled.c: 56:         busy = PORTCbits.RC4;
 21263                           	movlw	0
 21264  2261  3000               	movlb 0	; select bank0
 21265  2262  0140               	btfsc	(14),4	;volatile
 21266  2263  1A0E               	movlw	1
 21267  2264  3001               	movwf	(OLED_waitForReady@busy)
 21268  2265  00A0               	line	58
 21269                           	
 21270                           l3971:	
 21271  2266                     ;oled.c: 58:         LATBbits.LATB2 = 0;
 21272                           	bcf	(25),2	;volatile
 21273  2266  1119               	line	60
 21274                           	
 21275                           l3973:	
 21276  2267                     ;oled.c: 60:         OLED_pulseEnable();
 21277                           	fcall	_OLED_pulseEnable
 21278  2267  31A1  216A  31A2   	line	61
 21279                           	
 21280                           l3975:	
 21281  226A                     ;oled.c: 61:     }
 21282                           	movlb 0	; select bank0
 21283  226A  0140               	movf	((OLED_waitForReady@busy)),w
 21284  226B  0820               	btfss	status,2
 21285  226C  1D03               	goto	u5461
 21286  226D  2A6F               	goto	u5460
 21287  226E  2A70               u5461:
 21288  226F                     	goto	l340
 21289  226F  2A56               u5460:
 21290  2270                     	
 21291                           l341:	
 21292  2270                     	line	64
 21293                           ;oled.c: 64:     TRISCbits.TRISC4 = 0;
 21294                           	bcf	(20),4	;volatile
 21295  2270  1214               	line	65
 21296                           ;oled.c: 65:     LATBbits.LATB3 = 0;
 21297                           	bcf	(25),3	;volatile
 21298  2271  1199               	line	66
 21299                           	
 21300                           l342:	
 21301  2272                     	return
 21302  2272  0008               	opt stack 0
 21303                           GLOBAL	__end_of_OLED_waitForReady
 21304                           	__end_of_OLED_waitForReady:
 21305  2273                     	signat	_OLED_waitForReady,89
 21306                           	global	_OLED_send
 21307                           
 21308 ;; *************** function _OLED_send *****************
 21309 ;; Defined at:
 21310 ;;		line 30 in file "oled.c"
 21311 ;; Parameters:    Size  Location     Type
 21312 ;;  value           1    wreg     unsigned char 
 21313 ;;  mode            1    3[BANK0 ] unsigned char 
 21314 ;; Auto vars:     Size  Location     Type
 21315 ;;  value           1    5[BANK0 ] unsigned char 
 21316 ;; Return value:  Size  Location     Type
 21317 ;;                  1    wreg      void 
 21318 ;; Registers used:
 21319 ;;		wreg, status,2, status,0, pclath, cstack
 21320 ;; Tracked objects:
 21321 ;;		On entry : 0/0
 21322 ;;		On exit  : 0/0
 21323 ;;		Unchanged: 0/0
 21324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21325 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21326 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21327 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21328 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21329 ;;Total ram usage:        3 bytes
 21330 ;; Hardware stack levels used:    1
 21331 ;; Hardware stack levels required when called:    5
 21332 ;; This function calls:
 21333 ;;		_OLED_write4bits
 21334 ;; This function is called by:
 21335 ;;		_OLED_command
 21336 ;;		_OLED_write
 21337 ;; This function uses a non-reentrant model
 21338 ;;
 21339                           psect	text55,local,class=CODE,delta=2,merge=1,group=0
 21340                           	line	30
 21341                           global __ptext55
 21342                           __ptext55:	;psect for function _OLED_send
 21343  21C1                     psect	text55
 21344                           	file	"oled.c"
 21345                           	line	30
 21346                           	global	__size_of_OLED_send
 21347                           	__size_of_OLED_send	equ	__end_of_OLED_send-_OLED_send
 21348  0018                     	
 21349                           _OLED_send:	
 21350  21C1                     ;incstack = 0
 21351                           	opt	stack 6
 21352                           ; Regs used in _OLED_send: [wreg+status,2+status,0+pclath+cstack]
 21353                           ;OLED_send@value stored from wreg
 21354                           	movlb 0	; select bank0
 21355  21C1  0140               	movwf	(OLED_send@value)
 21356  21C2  00A5               	line	32
 21357                           	
 21358                           l3955:	
 21359  21C3                     ;oled.c: 30: void OLED_send(uint8_t value, uint8_t mode);oled.c: 31: {;oled.c: 32:     L
                                 ATBbits.LATB4 = mode;
 21360                           	rrf	(OLED_send@mode),w
 21361  21C3  0C23               	skipc
 21362  21C4  1C03               	bcf	(25),4	;volatile
 21363  21C5  1219               	skipnc
 21364  21C6  1803               	bsf	(25),4	;volatile
 21365  21C7  1619               	line	33
 21366                           	
 21367                           l3957:	
 21368  21C8                     ;oled.c: 33:     LATBbits.LATB3 = 0;
 21369                           	bcf	(25),3	;volatile
 21370  21C8  1199               	line	35
 21371                           	
 21372                           l3959:	
 21373  21C9                     ;oled.c: 35:     OLED_write4bits(value>>4);
 21374                           	movf	(OLED_send@value),w
 21375  21C9  0825               	movwf	(??_OLED_send+0)+0
 21376  21CA  00A4               	movlw	04h
 21377  21CB  3004               u5455:
 21378  21CC                     	lsrf	(??_OLED_send+0)+0,f
 21379  21CC  36A4               	decfsz	wreg,f
 21380  21CD  0B89               	goto	u5455
 21381  21CE  29CC               	movf	0+(??_OLED_send+0)+0,w
 21382  21CF  0824               	fcall	_OLED_write4bits
 21383  21D0  31A4  24FA  31A1   	line	36
 21384                           	
 21385                           l3961:	
 21386  21D3                     ;oled.c: 36:     OLED_write4bits(value);
 21387                           	movlb 0	; select bank0
 21388  21D3  0140               	movf	(OLED_send@value),w
 21389  21D4  0825               	fcall	_OLED_write4bits
 21390  21D5  31A4  24FA  31A1   	line	37
 21391                           	
 21392                           l337:	
 21393  21D8                     	return
 21394  21D8  0008               	opt stack 0
 21395                           GLOBAL	__end_of_OLED_send
 21396                           	__end_of_OLED_send:
 21397  21D9                     	signat	_OLED_send,8313
 21398                           	global	_OLED_write4bits
 21399                           
 21400 ;; *************** function _OLED_write4bits *****************
 21401 ;; Defined at:
 21402 ;;		line 19 in file "oled.c"
 21403 ;; Parameters:    Size  Location     Type
 21404 ;;  value           1    wreg     unsigned char 
 21405 ;; Auto vars:     Size  Location     Type
 21406 ;;  value           1    2[BANK0 ] unsigned char 
 21407 ;; Return value:  Size  Location     Type
 21408 ;;                  1    wreg      void 
 21409 ;; Registers used:
 21410 ;;		wreg, status,2, status,0, pclath, cstack
 21411 ;; Tracked objects:
 21412 ;;		On entry : 0/0
 21413 ;;		On exit  : 0/0
 21414 ;;		Unchanged: 0/0
 21415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21417 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21418 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21419 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21420 ;;Total ram usage:        3 bytes
 21421 ;; Hardware stack levels used:    1
 21422 ;; Hardware stack levels required when called:    4
 21423 ;; This function calls:
 21424 ;;		_OLED_pulseEnable
 21425 ;; This function is called by:
 21426 ;;		_OLED_send
 21427 ;;		_OLED_init
 21428 ;; This function uses a non-reentrant model
 21429 ;;
 21430                           psect	text56,local,class=CODE,delta=2,merge=1,group=0
 21431                           	line	19
 21432                           global __ptext56
 21433                           __ptext56:	;psect for function _OLED_write4bits
 21434  24FA                     psect	text56
 21435                           	file	"oled.c"
 21436                           	line	19
 21437                           	global	__size_of_OLED_write4bits
 21438                           	__size_of_OLED_write4bits	equ	__end_of_OLED_write4bits-_OLED_write4bits
 21439  0040                     	
 21440                           _OLED_write4bits:	
 21441  24FA                     ;incstack = 0
 21442                           	opt	stack 6
 21443                           ; Regs used in _OLED_write4bits: [wreg+status,2+status,0+pclath+cstack]
 21444                           ;OLED_write4bits@value stored from wreg
 21445                           	movlb 0	; select bank0
 21446  24FA  0140               	movwf	(OLED_write4bits@value)
 21447  24FB  00A2               	line	21
 21448                           	
 21449                           l3379:	
 21450  24FC                     ;oled.c: 19: void OLED_write4bits(uint8_t value);oled.c: 20: {;oled.c: 21:     LATBbits.
                                 LATB1 = (value >> 0) & 0x01;
 21451                           	movf	(OLED_write4bits@value),w
 21452  24FC  0822               	andlw	01h
 21453  24FD  3901               	movwf	(??_OLED_write4bits+0)+0
 21454  24FE  00A0               	rlf	(??_OLED_write4bits+0)+0,f
 21455  24FF  0DA0               	movf	(25),w	;volatile
 21456  2500  0819               	xorwf	(??_OLED_write4bits+0)+0,w
 21457  2501  0620               	andlw	not (((1<<1)-1)<<1)
 21458  2502  39FD               	xorwf	(??_OLED_write4bits+0)+0,w
 21459  2503  0620               	movwf	(25)	;volatile
 21460  2504  0099               	line	22
 21461                           ;oled.c: 22:     LATBbits.LATB0 = (value >> 1) & 0x01;
 21462                           	movf	(OLED_write4bits@value),w
 21463  2505  0822               	movwf	(??_OLED_write4bits+0)+0
 21464  2506  00A0               	movlw	01h
 21465  2507  3001               u4145:
 21466  2508                     	lsrf	(??_OLED_write4bits+0)+0,f
 21467  2508  36A0               	decfsz	wreg,f
 21468  2509  0B89               	goto	u4145
 21469  250A  2D08               	movlw	low(01h)
 21470  250B  3001               	andwf	0+(??_OLED_write4bits+0)+0,w
 21471  250C  0520               	movwf	(??_OLED_write4bits+1)+0
 21472  250D  00A1               	movf	(25),w	;volatile
 21473  250E  0819               	xorwf	0+(??_OLED_write4bits+1)+0,w
 21474  250F  0621               	andlw	not ((1<<1)-1)
 21475  2510  39FE               	xorwf	0+(??_OLED_write4bits+1)+0,w
 21476  2511  0621               	movwf	(25)	;volatile
 21477  2512  0099               	line	23
 21478                           ;oled.c: 23:     LATCbits.LATC5 = (value >> 2) & 0x01;
 21479                           	movf	(OLED_write4bits@value),w
 21480  2513  0822               	movwf	(??_OLED_write4bits+0)+0
 21481  2514  00A0               	movlw	02h
 21482  2515  3002               u4155:
 21483  2516                     	lsrf	(??_OLED_write4bits+0)+0,f
 21484  2516  36A0               	decfsz	wreg,f
 21485  2517  0B89               	goto	u4155
 21486  2518  2D16               	movf	0+(??_OLED_write4bits+0)+0,w
 21487  2519  0820               	andlw	01h
 21488  251A  3901               	movwf	(??_OLED_write4bits+1)+0
 21489  251B  00A1               	swapf	(??_OLED_write4bits+1)+0,f
 21490  251C  0EA1               	rlf	(??_OLED_write4bits+1)+0,f
 21491  251D  0DA1               	movf	(26),w	;volatile
 21492  251E  081A               	xorwf	(??_OLED_write4bits+1)+0,w
 21493  251F  0621               	andlw	not (((1<<1)-1)<<5)
 21494  2520  39DF               	xorwf	(??_OLED_write4bits+1)+0,w
 21495  2521  0621               	movwf	(26)	;volatile
 21496  2522  009A               	line	24
 21497                           ;oled.c: 24:     LATCbits.LATC4 = (value >> 3) & 0x01;
 21498                           	movf	(OLED_write4bits@value),w
 21499  2523  0822               	movwf	(??_OLED_write4bits+0)+0
 21500  2524  00A0               	movlw	03h
 21501  2525  3003               u4165:
 21502  2526                     	lsrf	(??_OLED_write4bits+0)+0,f
 21503  2526  36A0               	decfsz	wreg,f
 21504  2527  0B89               	goto	u4165
 21505  2528  2D26               	movf	0+(??_OLED_write4bits+0)+0,w
 21506  2529  0820               	andlw	01h
 21507  252A  3901               	movwf	(??_OLED_write4bits+1)+0
 21508  252B  00A1               	swapf	(??_OLED_write4bits+1)+0,f
 21509  252C  0EA1               	movf	(26),w	;volatile
 21510  252D  081A               	xorwf	(??_OLED_write4bits+1)+0,w
 21511  252E  0621               	andlw	not (((1<<1)-1)<<4)
 21512  252F  39EF               	xorwf	(??_OLED_write4bits+1)+0,w
 21513  2530  0621               	movwf	(26)	;volatile
 21514  2531  009A               	line	26
 21515                           	
 21516                           l3381:	
 21517  2532                     ;oled.c: 26:     _delay((unsigned long)((50)*(4000000/4000000.0)));
 21518                           	opt asmopt_push
 21519                           opt asmopt_off
 21520                           	movlw	16
 21521  2532  3010               u7357:
 21522  2533                     decfsz	wreg
 21523  2533  0B89               	goto	u7357
 21524  2534  2D33               	nop2
 21525  2535  3200               opt asmopt_pop
 21526                           
 21527                           	line	27
 21528                           	
 21529                           l3383:	
 21530  2536                     ;oled.c: 27:     OLED_pulseEnable();
 21531                           	fcall	_OLED_pulseEnable
 21532  2536  31A1  216A  31A4   	line	28
 21533                           	
 21534                           l334:	
 21535  2539                     	return
 21536  2539  0008               	opt stack 0
 21537                           GLOBAL	__end_of_OLED_write4bits
 21538                           	__end_of_OLED_write4bits:
 21539  253A                     	signat	_OLED_write4bits,4217
 21540                           	global	_OLED_pulseEnable
 21541                           
 21542 ;; *************** function _OLED_pulseEnable *****************
 21543 ;; Defined at:
 21544 ;;		line 12 in file "oled.c"
 21545 ;; Parameters:    Size  Location     Type
 21546 ;;		None
 21547 ;; Auto vars:     Size  Location     Type
 21548 ;;		None
 21549 ;; Return value:  Size  Location     Type
 21550 ;;                  1    wreg      void 
 21551 ;; Registers used:
 21552 ;;		wreg
 21553 ;; Tracked objects:
 21554 ;;		On entry : 0/0
 21555 ;;		On exit  : 0/0
 21556 ;;		Unchanged: 0/0
 21557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21562 ;;Total ram usage:        0 bytes
 21563 ;; Hardware stack levels used:    1
 21564 ;; Hardware stack levels required when called:    3
 21565 ;; This function calls:
 21566 ;;		Nothing
 21567 ;; This function is called by:
 21568 ;;		_OLED_write4bits
 21569 ;;		_OLED_waitForReady
 21570 ;; This function uses a non-reentrant model
 21571 ;;
 21572                           psect	text57,local,class=CODE,delta=2,merge=1,group=0
 21573                           	line	12
 21574                           global __ptext57
 21575                           __ptext57:	;psect for function _OLED_pulseEnable
 21576  216A                     psect	text57
 21577                           	file	"oled.c"
 21578                           	line	12
 21579                           	global	__size_of_OLED_pulseEnable
 21580                           	__size_of_OLED_pulseEnable	equ	__end_of_OLED_pulseEnable-_OLED_pulseEnable
 21581  0009                     	
 21582                           _OLED_pulseEnable:	
 21583  216A                     ;incstack = 0
 21584                           	opt	stack 7
 21585                           ; Regs used in _OLED_pulseEnable: [wreg]
 21586                           	line	14
 21587                           	
 21588                           l3143:	
 21589  216A                     ;oled.c: 14:     LATBbits.LATB2 = 1;
 21590                           	movlb 0	; select bank0
 21591  216A  0140               	bsf	(25),2	;volatile
 21592  216B  1519               	line	15
 21593                           	
 21594                           l3145:	
 21595  216C                     ;oled.c: 15:     _delay((unsigned long)((50)*(4000000/4000000.0)));
 21596                           	opt asmopt_push
 21597                           opt asmopt_off
 21598                           	movlw	16
 21599  216C  3010               u7367:
 21600  216D                     decfsz	wreg
 21601  216D  0B89               	goto	u7367
 21602  216E  296D               	nop2
 21603  216F  3200               opt asmopt_pop
 21604                           
 21605                           	line	16
 21606                           	
 21607                           l3147:	
 21608  2170                     ;oled.c: 16:     LATBbits.LATB2 = 0;
 21609                           	movlb 0	; select bank0
 21610  2170  0140               	bcf	(25),2	;volatile
 21611  2171  1119               	line	17
 21612                           	
 21613                           l331:	
 21614  2172                     	return
 21615  2172  0008               	opt stack 0
 21616                           GLOBAL	__end_of_OLED_pulseEnable
 21617                           	__end_of_OLED_pulseEnable:
 21618  2173                     	signat	_OLED_pulseEnable,89
 21619                           	global	_ISR
 21620                           
 21621 ;; *************** function _ISR *****************
 21622 ;; Defined at:
 21623 ;;		line 374 in file "main.c"
 21624 ;; Parameters:    Size  Location     Type
 21625 ;;		None
 21626 ;; Auto vars:     Size  Location     Type
 21627 ;;		None
 21628 ;; Return value:  Size  Location     Type
 21629 ;;                  1    wreg      void 
 21630 ;; Registers used:
 21631 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21632 ;; Tracked objects:
 21633 ;;		On entry : 0/0
 21634 ;;		On exit  : 0/0
 21635 ;;		Unchanged: 0/0
 21636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21639 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21640 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21641 ;;Total ram usage:        1 bytes
 21642 ;; Hardware stack levels used:    1
 21643 ;; Hardware stack levels required when called:    2
 21644 ;; This function calls:
 21645 ;;		___llmod
 21646 ;;		_pushButtonISR
 21647 ;;		_rotISR
 21648 ;;		_uartReceiveISR
 21649 ;; This function is called by:
 21650 ;;		Interrupt level 1
 21651 ;; This function uses a non-reentrant model
 21652 ;;
 21653                           psect	intentry,class=CODE,delta=2
 21654                           global __pintentry
 21655                           __pintentry:
 21656  0004                     psect	intentry
 21657                           	file	"main.c"
 21658                           	line	374
 21659                           	global	__size_of_ISR
 21660                           	__size_of_ISR	equ	__end_of_ISR-_ISR
 21661  0091                     	
 21662                           _ISR:	
 21663  0004                     ;incstack = 0
 21664                           	opt	stack 4
 21665                           	bsf int$flags,0 ;set compiler interrupt flag (level 1)
 21666  0004  147E               ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21667                           psect	intentry
 21668                           	pagesel	$
 21669  0005  3180               	line	376
 21670                           	
 21671                           i1l4999:	
 21672  0006                     ;main.c: 376:  if (PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1) {
 21673                           	movlb 14	; select bank14
 21674  0006  014E               	btfss	(1814)^0700h,5	;volatile
 21675  0007  1E96               	goto	u705_21
 21676  0008  280A               	goto	u705_20
 21677  0009  280B               u705_21:
 21678  000A                     	goto	i1l278
 21679  000A  2819               u705_20:
 21680  000B                     	
 21681                           i1l5001:	
 21682  000B                     	btfss	(1804)^0700h,5	;volatile
 21683  000B  1E8C               	goto	u706_21
 21684  000C  280E               	goto	u706_20
 21685  000D  280F               u706_21:
 21686  000E                     	goto	i1l278
 21687  000E  2819               u706_20:
 21688  000F                     	line	379
 21689                           	
 21690                           i1l5003:	
 21691  000F                     ;main.c: 379:   g_10msTick++;
 21692                           	movlw	low(01h)
 21693  000F  3001               	movwf	(??_ISR+0)+0
 21694  0010  00FA               	movf	(??_ISR+0)+0,w
 21695  0011  087A               	addwf	(_g_10msTick),f	;volatile
 21696  0012  07FD               	line	380
 21697                           	
 21698                           i1l5005:	
 21699  0013                     ;main.c: 380:   TMR0 = 178;
 21700                           	movlw	low(0B2h)
 21701  0013  30B2               	movlb 11	; select bank11
 21702  0014  014B               	movwf	(1436)^0580h	;volatile
 21703  0015  009C               	line	381
 21704                           	
 21705                           i1l5007:	
 21706  0016                     ;main.c: 381:   PIR0bits.TMR0IF = 0;
 21707                           	movlb 14	; select bank14
 21708  0016  014E               	bcf	(1804)^0700h,5	;volatile
 21709  0017  128C               	line	382
 21710                           ;main.c: 382:  } else if (PIE0bits.IOCIE == 1 && PIR0bits.IOCIF == 1) {
 21711                           	goto	i1l290
 21712  0018  2893               	
 21713                           i1l278:	
 21714  0019                     	btfss	(1814)^0700h,4	;volatile
 21715  0019  1E16               	goto	u707_21
 21716  001A  281C               	goto	u707_20
 21717  001B  281D               u707_21:
 21718  001C                     	goto	i1l280
 21719  001C  2843               u707_20:
 21720  001D                     	
 21721                           i1l5009:	
 21722  001D                     	btfss	(1804)^0700h,4	;volatile
 21723  001D  1E0C               	goto	u708_21
 21724  001E  2820               	goto	u708_20
 21725  001F  2821               u708_21:
 21726  0020                     	goto	i1l280
 21727  0020  2843               u708_20:
 21728  0021                     	line	384
 21729                           	
 21730                           i1l5011:	
 21731  0021                     ;main.c: 384:   if (IOCAFbits.IOCAF7 == 1) {
 21732                           	movlb 62	; select bank62
 21733  0021  017E               	btfss	(7999)^01F00h,7	;volatile
 21734  0022  1FBF               	goto	u709_21
 21735  0023  2825               	goto	u709_20
 21736  0024  2826               u709_21:
 21737  0025                     	goto	i1l5017
 21738  0025  282C               u709_20:
 21739  0026                     	line	385
 21740                           	
 21741                           i1l5013:	
 21742  0026                     ;main.c: 385:    pushButtonISR();
 21743                           	fcall	_pushButtonISR
 21744  0026  31A3  23A4  3180   	line	386
 21745                           	
 21746                           i1l5015:	
 21747  0029                     ;main.c: 386:    IOCAFbits.IOCAF7 = 0;
 21748                           	movlb 62	; select bank62
 21749  0029  017E               	bcf	(7999)^01F00h,7	;volatile
 21750  002A  13BF               	goto	i1l5017
 21751  002B  282C               	line	387
 21752                           ;main.c: 387:   }
 21753                           	
 21754                           i1l281:	
 21755  002C                     	line	388
 21756                           	
 21757                           i1l5017:	
 21758  002C                     ;main.c: 388:   if (IOCAFbits.IOCAF4 == 1) {
 21759                           	btfss	(7999)^01F00h,4	;volatile
 21760  002C  1E3F               	goto	u710_21
 21761  002D  282F               	goto	u710_20
 21762  002E  2830               u710_21:
 21763  002F                     	goto	i1l5023
 21764  002F  2836               u710_20:
 21765  0030                     	line	389
 21766                           	
 21767                           i1l5019:	
 21768  0030                     ;main.c: 389:    rotISR();
 21769                           	fcall	_rotISR
 21770  0030  31A4  24BB  3180   	line	390
 21771                           	
 21772                           i1l5021:	
 21773  0033                     ;main.c: 390:    IOCAFbits.IOCAF4 = 0;
 21774                           	movlb 62	; select bank62
 21775  0033  017E               	bcf	(7999)^01F00h,4	;volatile
 21776  0034  123F               	goto	i1l5023
 21777  0035  2836               	line	391
 21778                           ;main.c: 391:   }
 21779                           	
 21780                           i1l282:	
 21781  0036                     	line	392
 21782                           	
 21783                           i1l5023:	
 21784  0036                     ;main.c: 392:   if (IOCAFbits.IOCAF5 == 1) {
 21785                           	btfss	(7999)^01F00h,5	;volatile
 21786  0036  1EBF               	goto	u711_21
 21787  0037  2839               	goto	u711_20
 21788  0038  283A               u711_21:
 21789  0039                     	goto	i1l5029
 21790  0039  2840               u711_20:
 21791  003A                     	line	393
 21792                           	
 21793                           i1l5025:	
 21794  003A                     ;main.c: 393:    rotISR();
 21795                           	fcall	_rotISR
 21796  003A  31A4  24BB  3180   	line	394
 21797                           	
 21798                           i1l5027:	
 21799  003D                     ;main.c: 394:    IOCAFbits.IOCAF5 = 0;
 21800                           	movlb 62	; select bank62
 21801  003D  017E               	bcf	(7999)^01F00h,5	;volatile
 21802  003E  12BF               	goto	i1l5029
 21803  003F  2840               	line	395
 21804                           ;main.c: 395:   }
 21805                           	
 21806                           i1l283:	
 21807  0040                     	line	396
 21808                           	
 21809                           i1l5029:	
 21810  0040                     ;main.c: 396:   PIR0bits.IOCIF = 0;
 21811                           	movlb 14	; select bank14
 21812  0040  014E               	bcf	(1804)^0700h,4	;volatile
 21813  0041  120C               	line	397
 21814                           ;main.c: 397:  } else if (INTCONbits.PEIE == 1) {
 21815                           	goto	i1l290
 21816  0042  2893               	
 21817                           i1l280:	
 21818  0043                     	btfss	(11),6	;volatile
 21819  0043  1F0B               	goto	u712_21
 21820  0044  2846               	goto	u712_20
 21821  0045  2847               u712_21:
 21822  0046                     	goto	i1l290
 21823  0046  2893               u712_20:
 21824  0047                     	line	398
 21825                           	
 21826                           i1l5031:	
 21827  0047                     ;main.c: 398:   if (PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1) {
 21828                           	btfss	(1818)^0700h,0	;volatile
 21829  0047  1C1A               	goto	u713_21
 21830  0048  284A               	goto	u713_20
 21831  0049  284B               u713_21:
 21832  004A                     	goto	i1l286
 21833  004A  2881               u713_20:
 21834  004B                     	
 21835                           i1l5033:	
 21836  004B                     	btfss	(1808)^0700h,0	;volatile
 21837  004B  1C10               	goto	u714_21
 21838  004C  284E               	goto	u714_20
 21839  004D  284F               u714_21:
 21840  004E                     	goto	i1l286
 21841  004E  2881               u714_20:
 21842  004F                     	line	400
 21843                           	
 21844                           i1l5035:	
 21845  004F                     ;main.c: 400:    if (++g_100msTick % 10) {
 21846                           	movlw	0
 21847  004F  3000               	movwf	(___llmod@divisor+3)
 21848  0050  00F3               	movlw	0
 21849  0051  3000               	movwf	(___llmod@divisor+2)
 21850  0052  00F2               	movlw	0
 21851  0053  3000               	movwf	(___llmod@divisor+1)
 21852  0054  00F1               	movlw	0Ah
 21853  0055  300A               	movwf	(___llmod@divisor)
 21854  0056  00F0               
 21855                           	movlw	01h
 21856  0057  3001               	movlb 2	; select bank2
 21857  0058  0142               	addwf	(_g_100msTick)^0100h,f	;volatile
 21858  0059  07E0               	movlw	0
 21859  005A  3000               	addwfc	(_g_100msTick+1)^0100h,f	;volatile
 21860  005B  3DE1               	movlw	0
 21861  005C  3000               	addwfc	(_g_100msTick+2)^0100h,f	;volatile
 21862  005D  3DE2               	movlw	0
 21863  005E  3000               	addwfc	(_g_100msTick+3)^0100h,f	;volatile
 21864  005F  3DE3               	movf	((_g_100msTick+3)^0100h),w	;volatile
 21865  0060  0863               	movwf	(___llmod@dividend+3)
 21866  0061  00F7               	movf	((_g_100msTick+2)^0100h),w	;volatile
 21867  0062  0862               	movwf	(___llmod@dividend+2)
 21868  0063  00F6               	movf	((_g_100msTick+1)^0100h),w	;volatile
 21869  0064  0861               	movwf	(___llmod@dividend+1)
 21870  0065  00F5               	movf	((_g_100msTick)^0100h),w	;volatile
 21871  0066  0860               	movwf	(___llmod@dividend)
 21872  0067  00F4               
 21873                           	fcall	___llmod
 21874  0068  31A5  2586  3180   	movf	(3+(?___llmod)),w
 21875  006B  0873               	iorwf	(2+(?___llmod)),w
 21876  006C  0472               	iorwf	(1+(?___llmod)),w
 21877  006D  0471               	iorwf	(0+(?___llmod)),w
 21878  006E  0470               	skipnz
 21879  006F  1903               	goto	u715_21
 21880  0070  2872               	goto	u715_20
 21881  0071  2873               u715_21:
 21882  0072                     	goto	i1l5039
 21883  0072  2879               u715_20:
 21884  0073                     	line	402
 21885                           	
 21886                           i1l5037:	
 21887  0073                     ;main.c: 402:     g_sensorTimer++;
 21888                           	movlw	low(01h)
 21889  0073  3001               	movwf	(??_ISR+0)+0
 21890  0074  00FA               	movf	(??_ISR+0)+0,w
 21891  0075  087A               	movlb 2	; select bank2
 21892  0076  0142               	addwf	(_g_sensorTimer)^0100h,f	;volatile
 21893  0077  07EF               	goto	i1l5039
 21894  0078  2879               	line	403
 21895                           ;main.c: 403:    }
 21896                           	
 21897                           i1l287:	
 21898  0079                     	line	404
 21899                           	
 21900                           i1l5039:	
 21901  0079                     ;main.c: 404:    TMR1 = 53035;
 21902                           	movlw	0CFh
 21903  0079  30CF               	movlb 4	; select bank4
 21904  007A  0144               	movwf	(524+1)^0200h	;volatile
 21905  007B  008D               	movlw	02Bh
 21906  007C  302B               	movwf	(524)^0200h	;volatile
 21907  007D  008C               	line	405
 21908                           	
 21909                           i1l5041:	
 21910  007E                     ;main.c: 405:    PIR4bits.TMR1IF = 0;
 21911                           	movlb 14	; select bank14
 21912  007E  014E               	bcf	(1808)^0700h,0	;volatile
 21913  007F  1010               	line	407
 21914                           ;main.c: 407:   } else if (PIE3bits.RC1IE == 1 && PIR3bits.RC1IF == 1) {
 21915                           	goto	i1l290
 21916  0080  2893               	
 21917                           i1l286:	
 21918  0081                     	btfss	(1817)^0700h,5	;volatile
 21919  0081  1E99               	goto	u716_21
 21920  0082  2884               	goto	u716_20
 21921  0083  2885               u716_21:
 21922  0084                     	goto	i1l290
 21923  0084  2893               u716_20:
 21924  0085                     	
 21925                           i1l5043:	
 21926  0085                     	btfss	(1807)^0700h,5	;volatile
 21927  0085  1E8F               	goto	u717_21
 21928  0086  2888               	goto	u717_20
 21929  0087  2889               u717_21:
 21930  0088                     	goto	i1l290
 21931  0088  2893               u717_20:
 21932  0089                     	line	408
 21933                           	
 21934                           i1l5045:	
 21935  0089                     ;main.c: 408:    uartReceiveISR();
 21936                           	fcall	_uartReceiveISR
 21937  0089  31A6  2628  3180   	line	409
 21938                           	
 21939                           i1l5047:	
 21940  008C                     ;main.c: 409:    PIR3bits.RC1IF = 0;
 21941                           	movlb 14	; select bank14
 21942  008C  014E               	bcf	(1807)^0700h,5	;volatile
 21943  008D  128F               	goto	i1l290
 21944  008E  2893               	line	410
 21945                           ;main.c: 410:   }
 21946                           	
 21947                           i1l289:	
 21948  008F                     	goto	i1l290
 21949  008F  2893               	
 21950                           i1l288:	
 21951  0090                     	goto	i1l290
 21952  0090  2893               	line	411
 21953                           ;main.c: 411:  }
 21954                           	
 21955                           i1l285:	
 21956  0091                     	goto	i1l290
 21957  0091  2893               	
 21958                           i1l284:	
 21959  0092                     	goto	i1l290
 21960  0092  2893               	
 21961                           i1l279:	
 21962  0093                     	line	412
 21963                           	
 21964                           i1l290:	
 21965  0093                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
 21966  0093  107E               	retfie
 21967  0094  0009               	opt stack 0
 21968                           GLOBAL	__end_of_ISR
 21969                           	__end_of_ISR:
 21970  0095                     	signat	_ISR,89
 21971                           	global	_uartReceiveISR
 21972                           
 21973 ;; *************** function _uartReceiveISR *****************
 21974 ;; Defined at:
 21975 ;;		line 418 in file "main.c"
 21976 ;; Parameters:    Size  Location     Type
 21977 ;;		None
 21978 ;; Auto vars:     Size  Location     Type
 21979 ;;		None
 21980 ;; Return value:  Size  Location     Type
 21981 ;;                  1    wreg      void 
 21982 ;; Registers used:
 21983 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21984 ;; Tracked objects:
 21985 ;;		On entry : 0/0
 21986 ;;		On exit  : 0/0
 21987 ;;		Unchanged: 0/0
 21988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21991 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21992 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21993 ;;Total ram usage:        1 bytes
 21994 ;; Hardware stack levels used:    1
 21995 ;; Hardware stack levels required when called:    1
 21996 ;; This function calls:
 21997 ;;		_strncpy
 21998 ;; This function is called by:
 21999 ;;		_ISR
 22000 ;; This function uses a non-reentrant model
 22001 ;;
 22002                           psect	text59,local,class=CODE,delta=2,merge=1,group=0
 22003                           	line	418
 22004                           global __ptext59
 22005                           __ptext59:	;psect for function _uartReceiveISR
 22006  2628                     psect	text59
 22007                           	file	"main.c"
 22008                           	line	418
 22009                           	global	__size_of_uartReceiveISR
 22010                           	__size_of_uartReceiveISR	equ	__end_of_uartReceiveISR-_uartReceiveISR
 22011  0052                     	
 22012                           _uartReceiveISR:	
 22013  2628                     ;incstack = 0
 22014                           	opt	stack 4
 22015                           ; Regs used in _uartReceiveISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22016                           	line	424
 22017                           	
 22018                           i1l4917:	
 22019  2628                     ;main.c: 420:  static char buffer[20];;main.c: 421:  static uint8_t rxCount = 0;;main.c:
                                  422:  static uint8_t checksum = 0;;main.c: 424:  if (RC1STAbits.OERR)
 22020                           	movlb 2	; select bank2
 22021  2628  0142               	btfss	(285)^0100h,1	;volatile
 22022  2629  1C9D               	goto	u692_21
 22023  262A  2E2C               	goto	u692_20
 22024  262B  2E2D               u692_21:
 22025  262C                     	goto	i1l4923
 22026  262C  2E35               u692_20:
 22027  262D                     	line	427
 22028                           	
 22029                           i1l4919:	
 22030  262D                     ;main.c: 425:  {;main.c: 427:   RC1STAbits.CREN = 0;
 22031                           	bcf	(285)^0100h,4	;volatile
 22032  262D  121D               	line	428
 22033                           ;main.c: 428:   RC1STAbits.CREN = 1;
 22034                           	bsf	(285)^0100h,4	;volatile
 22035  262E  161D               	line	429
 22036                           	
 22037                           i1l4921:	
 22038  262F                     ;main.c: 429:   g_rxOErrCount++;
 22039                           	movlw	low(01h)
 22040  262F  3001               	movwf	(??_uartReceiveISR+0)+0
 22041  2630  00F6               	movf	(??_uartReceiveISR+0)+0,w
 22042  2631  0876               	movlb 3	; select bank3
 22043  2632  0143               	addwf	(_g_rxOErrCount)^0180h,f	;volatile
 22044  2633  07EC               	goto	i1l4923
 22045  2634  2E35               	line	430
 22046                           ;main.c: 430:  }
 22047                           	
 22048                           i1l299:	
 22049  2635                     	line	431
 22050                           	
 22051                           i1l4923:	
 22052  2635                     ;main.c: 431:  if (RC1STAbits.FERR)
 22053                           	movlb 2	; select bank2
 22054  2635  0142               	btfss	(285)^0100h,2	;volatile
 22055  2636  1D1D               	goto	u693_21
 22056  2637  2E39               	goto	u693_20
 22057  2638  2E3A               u693_21:
 22058  2639                     	goto	i1l4929
 22059  2639  2E41               u693_20:
 22060  263A                     	line	433
 22061                           	
 22062                           i1l4925:	
 22063  263A                     ;main.c: 432:  {;main.c: 433:   RC1STAbits.SPEN = 0;
 22064                           	bcf	(285)^0100h,7	;volatile
 22065  263A  139D               	line	434
 22066                           ;main.c: 434:   RC1STAbits.SPEN = 1;
 22067                           	bsf	(285)^0100h,7	;volatile
 22068  263B  179D               	line	435
 22069                           	
 22070                           i1l4927:	
 22071  263C                     ;main.c: 435:   g_rxFErrCount++;
 22072                           	movlw	low(01h)
 22073  263C  3001               	movwf	(??_uartReceiveISR+0)+0
 22074  263D  00F6               	movf	(??_uartReceiveISR+0)+0,w
 22075  263E  0876               	addwf	(_g_rxFErrCount)^0100h,f	;volatile
 22076  263F  07EE               	goto	i1l4929
 22077  2640  2E41               	line	436
 22078                           ;main.c: 436:  }
 22079                           	
 22080                           i1l300:	
 22081  2641                     	line	438
 22082                           	
 22083                           i1l4929:	
 22084  2641                     ;main.c: 438:  if (rxCount < sizeof(g_dataPacket)) {
 22085                           	movlw	low(0Fh)
 22086  2641  300F               	subwf	(uartReceiveISR@rxCount),w
 22087  2642  027B               	skipnc
 22088  2643  1803               	goto	u694_21
 22089  2644  2E46               	goto	u694_20
 22090  2645  2E47               u694_21:
 22091  2646                     	goto	i1l4935
 22092  2646  2E5E               u694_20:
 22093  2647                     	line	439
 22094                           	
 22095                           i1l4931:	
 22096  2647                     ;main.c: 439:   buffer[rxCount] = RC1REG;
 22097                           	movf	(281)^0100h,w	;volatile
 22098  2647  0819               	movwf	(??_uartReceiveISR+0)+0
 22099  2648  00F6               	movf	(uartReceiveISR@rxCount),w
 22100  2649  087B               	addlw	low(uartReceiveISR@buffer|((0x2)<<8))&0ffh
 22101  264A  3EA0               	movwf	fsr1l
 22102  264B  0086               	movlw 2	; select bank5/6
 22103  264C  3002               	movwf fsr1h	
 22104  264D  0087               	
 22105                           	movf	(??_uartReceiveISR+0)+0,w
 22106  264E  0876               	movwf	indf1
 22107  264F  0081               	line	440
 22108                           ;main.c: 440:   checksum ^= buffer[rxCount];
 22109                           	movf	(uartReceiveISR@rxCount),w
 22110  2650  087B               	addlw	low(uartReceiveISR@buffer|((0x2)<<8))&0ffh
 22111  2651  3EA0               	movwf	fsr1l
 22112  2652  0086               	movlw 2	; select bank5/6
 22113  2653  3002               	movwf fsr1h	
 22114  2654  0087               	
 22115                           	movf	indf1,w
 22116  2655  0801               	movwf	(??_uartReceiveISR+0)+0
 22117  2656  00F6               	movf	(??_uartReceiveISR+0)+0,w
 22118  2657  0876               	xorwf	(uartReceiveISR@checksum)^0100h,f
 22119  2658  06EA               	line	441
 22120                           	
 22121                           i1l4933:	
 22122  2659                     ;main.c: 441:   rxCount++;
 22123                           	movlw	low(01h)
 22124  2659  3001               	movwf	(??_uartReceiveISR+0)+0
 22125  265A  00F6               	movf	(??_uartReceiveISR+0)+0,w
 22126  265B  0876               	addwf	(uartReceiveISR@rxCount),f
 22127  265C  07FB               	line	442
 22128                           ;main.c: 442:  } else {
 22129                           	goto	i1l304
 22130  265D  2E79               	
 22131                           i1l301:	
 22132  265E                     	line	443
 22133                           	
 22134                           i1l4935:	
 22135  265E                     ;main.c: 443:   if (RC1REG == checksum) {
 22136                           	movf	(281)^0100h,w	;volatile
 22137  265E  0819               	xorwf	(uartReceiveISR@checksum)^0100h,w
 22138  265F  066A               	skipz
 22139  2660  1D03               	goto	u695_21
 22140  2661  2E63               	goto	u695_20
 22141  2662  2E64               u695_21:
 22142  2663                     	goto	i1l4941
 22143  2663  2E75               u695_20:
 22144  2664                     	line	444
 22145                           	
 22146                           i1l4937:	
 22147  2664                     ;main.c: 444:    g_dataReady = 1;
 22148                           	movlw	low(01h)
 22149  2664  3001               	movwf	(??_uartReceiveISR+0)+0
 22150  2665  00F6               	movf	(??_uartReceiveISR+0)+0,w
 22151  2666  0876               	movwf	(_g_dataReady)^0100h	;volatile
 22152  2667  00ED               	line	445
 22153                           	
 22154                           i1l4939:	
 22155  2668                     ;main.c: 445:    strncpy((char *) &g_dataPacket, buffer, sizeof(g_dataPacket));
 22156                           	movlw	(low(uartReceiveISR@buffer|((0x2)<<8)))&0ffh
 22157  2668  30A0               	movwf	(??_uartReceiveISR+0)+0
 22158  2669  00F6               	movf	(??_uartReceiveISR+0)+0,w
 22159  266A  0876               	movwf	(strncpy@s)
 22160  266B  00F0               	movlw	0Fh
 22161  266C  300F               	movwf	(strncpy@n)
 22162  266D  00F1               	movlw	0
 22163  266E  3000               	movwf	((strncpy@n))+1
 22164  266F  00F2               	movlw	(low(_g_dataPacket|((0x2)<<8)))&0ffh
 22165  2670  304E               	fcall	_strncpy
 22166  2671  31A4  247D  31A6   	goto	i1l4941
 22167  2674  2E75               	line	446
 22168                           ;main.c: 446:   }
 22169                           	
 22170                           i1l303:	
 22171  2675                     	line	447
 22172                           	
 22173                           i1l4941:	
 22174  2675                     ;main.c: 447:   checksum = 0;
 22175                           	movlb 2	; select bank2
 22176  2675  0142               	clrf	(uartReceiveISR@checksum)^0100h
 22177  2676  01EA               	line	448
 22178                           	
 22179                           i1l4943:	
 22180  2677                     ;main.c: 448:   rxCount = 0;
 22181                           	clrf	(uartReceiveISR@rxCount)
 22182  2677  01FB               	goto	i1l304
 22183  2678  2E79               	line	449
 22184                           ;main.c: 449:  }
 22185                           	
 22186                           i1l302:	
 22187  2679                     	line	450
 22188                           	
 22189                           i1l304:	
 22190  2679                     	return
 22191  2679  0008               	opt stack 0
 22192                           GLOBAL	__end_of_uartReceiveISR
 22193                           	__end_of_uartReceiveISR:
 22194  267A                     	signat	_uartReceiveISR,89
 22195                           	global	_strncpy
 22196                           
 22197 ;; *************** function _strncpy *****************
 22198 ;; Defined at:
 22199 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncpy.c"
 22200 ;; Parameters:    Size  Location     Type
 22201 ;;  d               1    wreg     PTR unsigned char 
 22202 ;;		 -> g_dataPacket(15), 
 22203 ;;  s               1    0[COMMON] PTR const unsigned char 
 22204 ;;		 -> uartReceiveISR@buffer(20), 
 22205 ;;  n               2    1[COMMON] unsigned int 
 22206 ;; Auto vars:     Size  Location     Type
 22207 ;;  d               1    4[COMMON] PTR unsigned char 
 22208 ;;		 -> g_dataPacket(15), 
 22209 ;;  cp              1    5[COMMON] PTR unsigned char 
 22210 ;;		 -> g_dataPacket(15), 
 22211 ;; Return value:  Size  Location     Type
 22212 ;;                  1    wreg      PTR unsigned char 
 22213 ;; Registers used:
 22214 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 22215 ;; Tracked objects:
 22216 ;;		On entry : 0/0
 22217 ;;		On exit  : 0/0
 22218 ;;		Unchanged: 0/0
 22219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22220 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22221 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22222 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22223 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22224 ;;Total ram usage:        6 bytes
 22225 ;; Hardware stack levels used:    1
 22226 ;; This function calls:
 22227 ;;		Nothing
 22228 ;; This function is called by:
 22229 ;;		_uartReceiveISR
 22230 ;; This function uses a non-reentrant model
 22231 ;;
 22232                           psect	text60,local,class=CODE,delta=2,merge=1,group=2
 22233                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncpy.c"
 22234                           	line	7
 22235                           global __ptext60
 22236                           __ptext60:	;psect for function _strncpy
 22237  247D                     psect	text60
 22238                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncpy.c"
 22239                           	line	7
 22240                           	global	__size_of_strncpy
 22241                           	__size_of_strncpy	equ	__end_of_strncpy-_strncpy
 22242  003E                     	
 22243                           _strncpy:	
 22244  247D                     ;incstack = 0
 22245                           	opt	stack 4
 22246                           ; Regs used in _strncpy: [wreg-fsr1h+status,2+status,0]
 22247                           ;strncpy@d stored from wreg
 22248                           	movwf	(strncpy@d)
 22249  247D  00F4               	line	11
 22250                           	
 22251                           i1l4671:	
 22252  247E                     	movf	(strncpy@d),w
 22253  247E  0874               	movwf	(??_strncpy+0)+0
 22254  247F  00F3               	movf	(??_strncpy+0)+0,w
 22255  2480  0873               	movwf	(strncpy@cp)
 22256  2481  00F5               	line	12
 22257                           	goto	i1l4679
 22258  2482  2C9B               	
 22259                           i1l1146:	
 22260  2483                     	line	13
 22261                           	
 22262                           i1l4673:	
 22263  2483                     	movlw	01h
 22264  2483  3001               	subwf	(strncpy@n),f
 22265  2484  02F1               	movlw	0
 22266  2485  3000               	subwfb	(strncpy@n+1),f
 22267  2486  3BF2               	line	14
 22268                           	
 22269                           i1l4675:	
 22270  2487                     	movf	(strncpy@cp),w
 22271  2487  0875               	movwf	fsr1l
 22272  2488  0086               	movlw 2	; select bank4/5
 22273  2489  3002               	movwf fsr1h	
 22274  248A  0087               	
 22275                           	incf	(strncpy@cp),f
 22276  248B  0AF5               	movf	(strncpy@s),w
 22277  248C  0870               	movwf	fsr0l
 22278  248D  0084               	movlw 2	; select bank4/5
 22279  248E  3002               	movwf fsr0h	
 22280  248F  0085               	
 22281                           	incf	(strncpy@s),f
 22282  2490  0AF0               	movf	indf0,w
 22283  2491  0800               	movwi	[0]fsr1
 22284  2492  3FC0               	movf	wreg
 22285  2493  0889               	btfss	status,2
 22286  2494  1D03               	goto	u658_21
 22287  2495  2C97               	goto	u658_20
 22288  2496  2C98               u658_21:
 22289  2497                     	goto	i1l4679
 22290  2497  2C9B               u658_20:
 22291  2498                     	goto	i1l4685
 22292  2498  2CAD               	line	15
 22293                           	
 22294                           i1l4677:	
 22295  2499                     	goto	i1l4685
 22296  2499  2CAD               	
 22297                           i1l1147:	
 22298  249A                     	goto	i1l4679
 22299  249A  2C9B               	line	16
 22300                           	
 22301                           i1l1145:	
 22302  249B                     	line	12
 22303                           	
 22304                           i1l4679:	
 22305  249B                     	movf	((strncpy@n)),w
 22306  249B  0871               iorwf	((strncpy@n+1)),w
 22307  249C  0472               	btfss	status,2
 22308  249D  1D03               	goto	u659_21
 22309  249E  2CA0               	goto	u659_20
 22310  249F  2CA1               u659_21:
 22311  24A0                     	goto	i1l4673
 22312  24A0  2C83               u659_20:
 22313  24A1                     	goto	i1l4685
 22314  24A1  2CAD               	
 22315                           i1l1148:	
 22316  24A2                     	line	17
 22317                           	goto	i1l4685
 22318  24A2  2CAD               	
 22319                           i1l1150:	
 22320  24A3                     	line	18
 22321                           	
 22322                           i1l4681:	
 22323  24A3                     	movf	(strncpy@cp),w
 22324  24A3  0875               	movwf	fsr1l
 22325  24A4  0086               	movlw 2	; select bank4/5
 22326  24A5  3002               	movwf fsr1h	
 22327  24A6  0087               	
 22328                           	clrf	indf1
 22329  24A7  0181               	
 22330                           i1l4683:	
 22331  24A8                     	movlw	low(01h)
 22332  24A8  3001               	movwf	(??_strncpy+0)+0
 22333  24A9  00F3               	movf	(??_strncpy+0)+0,w
 22334  24AA  0873               	addwf	(strncpy@cp),f
 22335  24AB  07F5               	goto	i1l4685
 22336  24AC  2CAD               	
 22337                           i1l1149:	
 22338  24AD                     	line	17
 22339                           	
 22340                           i1l4685:	
 22341  24AD                     	movlw	01h
 22342  24AD  3001               	subwf	(strncpy@n),f
 22343  24AE  02F1               	movlw	0
 22344  24AF  3000               	subwfb	(strncpy@n+1),f
 22345  24B0  3BF2               		incf	(((strncpy@n))),w
 22346  24B1  0A71               	skipz
 22347  24B2  1D03               	goto	u660_21
 22348  24B3  2CB8               	incf	(((strncpy@n+1))),w
 22349  24B4  0A72               	btfss	status,2
 22350  24B5  1D03               	goto	u660_21
 22351  24B6  2CB8               	goto	u660_20
 22352  24B7  2CB9               u660_21:
 22353  24B8                     	goto	i1l4681
 22354  24B8  2CA3               u660_20:
 22355  24B9                     	goto	i1l1152
 22356  24B9  2CBA               	
 22357                           i1l1151:	
 22358  24BA                     	line	23
 22359                           ;	Return value of _strncpy is never used
 22360                           	
 22361                           i1l1152:	
 22362  24BA                     	return
 22363  24BA  0008               	opt stack 0
 22364                           GLOBAL	__end_of_strncpy
 22365                           	__end_of_strncpy:
 22366  24BB                     	signat	_strncpy,12409
 22367                           	global	_rotISR
 22368                           
 22369 ;; *************** function _rotISR *****************
 22370 ;; Defined at:
 22371 ;;		line 452 in file "main.c"
 22372 ;; Parameters:    Size  Location     Type
 22373 ;;		None
 22374 ;; Auto vars:     Size  Location     Type
 22375 ;;  input           1    7[COMMON] unsigned char 
 22376 ;; Return value:  Size  Location     Type
 22377 ;;                  1    wreg      void 
 22378 ;; Registers used:
 22379 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 22380 ;; Tracked objects:
 22381 ;;		On entry : 0/0
 22382 ;;		On exit  : 0/0
 22383 ;;		Unchanged: 0/0
 22384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22386 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22387 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22388 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22389 ;;Total ram usage:        8 bytes
 22390 ;; Hardware stack levels used:    1
 22391 ;; This function calls:
 22392 ;;		Nothing
 22393 ;; This function is called by:
 22394 ;;		_ISR
 22395 ;; This function uses a non-reentrant model
 22396 ;;
 22397                           psect	text61,local,class=CODE,delta=2,merge=1,group=0
 22398                           	file	"main.c"
 22399                           	line	452
 22400                           global __ptext61
 22401                           __ptext61:	;psect for function _rotISR
 22402  24BB                     psect	text61
 22403                           	file	"main.c"
 22404                           	line	452
 22405                           	global	__size_of_rotISR
 22406                           	__size_of_rotISR	equ	__end_of_rotISR-_rotISR
 22407  003F                     	
 22408                           _rotISR:	
 22409  24BB                     ;incstack = 0
 22410                           	opt	stack 5
 22411                           ; Regs used in _rotISR: [wreg-fsr0h+status,2+status,0+pclath]
 22412                           	line	456
 22413                           	
 22414                           i1l4903:	
 22415  24BB                     ;main.c: 454:  uint8_t input;;main.c: 456:  input = (PORTAbits.RA5 << 1) | PORTAbits.RA4
                                 ;
 22416                           	movlb 0	; select bank0
 22417  24BB  0140               	swapf	(12),w	;volatile
 22418  24BC  0E0C               	andlw	(1<<1)-1
 22419  24BD  3901               	movwf	(??_rotISR+0)+0
 22420  24BE  00F0               	swapf	(12),w	;volatile
 22421  24BF  0E0C               	rrf	wreg,f
 22422  24C0  0C89               	andlw	(1<<1)-1
 22423  24C1  3901               	addwf	wreg,w
 22424  24C2  0709               	iorwf	(??_rotISR+0)+0,w
 22425  24C3  0470               	movwf	(??_rotISR+1)+0
 22426  24C4  00F1               	movf	(??_rotISR+1)+0,w
 22427  24C5  0871               	movwf	(rotISR@input)
 22428  24C6  00F7               	line	459
 22429                           	
 22430                           i1l4905:	
 22431  24C7                     ;main.c: 459:  g_curRotState = transition_table[g_curRotState & 0b00000111][input];
 22432                           	movf	(_g_curRotState),w	;volatile
 22433  24C7  087C               	andlw	07h
 22434  24C8  3907               	movwf	(??_rotISR+0)+0
 22435  24C9  00F0               	clrf	(??_rotISR+0)+0+1
 22436  24CA  01F1               	lslf	(??_rotISR+0)+0,f
 22437  24CB  35F0               	rlf	(??_rotISR+0)+1,f
 22438  24CC  0DF1               	lslf	(??_rotISR+0)+0,f
 22439  24CD  35F0               	rlf	(??_rotISR+0)+1,f
 22440  24CE  0DF1               	movlw	low(((_transition_table)|8000h))
 22441  24CF  3000               	movwf	(??_rotISR+2)+0
 22442  24D0  00F2               	movlw	high(((_transition_table)|8000h))
 22443  24D1  30A8               	movwf	(??_rotISR+2)+0+1
 22444  24D2  00F3               	movf	0+(??_rotISR+0)+0,w
 22445  24D3  0870               	addwf	0+(??_rotISR+2)+0,w
 22446  24D4  0772               	movwf	(??_rotISR+4)+0
 22447  24D5  00F4               	movf	1+(??_rotISR+0)+0,w
 22448  24D6  0871               	addwfc	1+(??_rotISR+2)+0,w
 22449  24D7  3D73               	movwf	1+(??_rotISR+4)+0
 22450  24D8  00F5               	movf	(rotISR@input),w
 22451  24D9  0877               	addwf	(??_rotISR+4)+0,w
 22452  24DA  0774               	movwf	fsr0l
 22453  24DB  0084               	movf	(??_rotISR+4)+1,w
 22454  24DC  0875               	skipnc
 22455  24DD  1803               	incf	(??_rotISR+4)+1,w
 22456  24DE  0A75               	movwf	fsr0h
 22457  24DF  0085               
 22458                           	movf	indf0,w ;code access
 22459  24E0  0800               	movwf	(??_rotISR+6)+0
 22460  24E1  00F6               	movf	(??_rotISR+6)+0,w
 22461  24E2  0876               	movwf	(_g_curRotState)	;volatile
 22462  24E3  00FC               	line	462
 22463                           	
 22464                           i1l4907:	
 22465  24E4                     ;main.c: 462:  if (g_curRotState & CW_FLAG) g_rotDir = ROT_CW;
 22466                           	btfss	(_g_curRotState),(7)&7	;volatile
 22467  24E4  1FFC               	goto	u690_21
 22468  24E5  2CE7               	goto	u690_20
 22469  24E6  2CE8               u690_21:
 22470  24E7                     	goto	i1l4911
 22471  24E7  2CEE               u690_20:
 22472  24E8                     	
 22473                           i1l4909:	
 22474  24E8                     	movlw	low(01h)
 22475  24E8  3001               	movwf	(??_rotISR+0)+0
 22476  24E9  00F0               	movf	(??_rotISR+0)+0,w
 22477  24EA  0870               	movlb 2	; select bank2
 22478  24EB  0142               	movwf	(_g_rotDir)^0100h	;volatile
 22479  24EC  00EC               	goto	i1l4911
 22480  24ED  2CEE               	
 22481                           i1l307:	
 22482  24EE                     	line	463
 22483                           	
 22484                           i1l4911:	
 22485  24EE                     ;main.c: 463:  if (g_curRotState & CCW_FLAG) g_rotDir = ROT_CCW;
 22486                           	btfss	(_g_curRotState),(6)&7	;volatile
 22487  24EE  1F7C               	goto	u691_21
 22488  24EF  2CF1               	goto	u691_20
 22489  24F0  2CF2               u691_21:
 22490  24F1                     	goto	i1l4915
 22491  24F1  2CF8               u691_20:
 22492  24F2                     	
 22493                           i1l4913:	
 22494  24F2                     	movlw	low(02h)
 22495  24F2  3002               	movwf	(??_rotISR+0)+0
 22496  24F3  00F0               	movf	(??_rotISR+0)+0,w
 22497  24F4  0870               	movlb 2	; select bank2
 22498  24F5  0142               	movwf	(_g_rotDir)^0100h	;volatile
 22499  24F6  00EC               	goto	i1l4915
 22500  24F7  2CF8               	
 22501                           i1l308:	
 22502  24F8                     	line	464
 22503                           	
 22504                           i1l4915:	
 22505  24F8                     ;main.c: 464:  __nop();
 22506                           	opt	asmopt_push
 22507                           	opt	asmopt_off
 22508                           	nop
 22509  24F8  0000               	opt	asmopt_pop
 22510                           	line	465
 22511                           	
 22512                           i1l309:	
 22513  24F9                     	return
 22514  24F9  0008               	opt stack 0
 22515                           GLOBAL	__end_of_rotISR
 22516                           	__end_of_rotISR:
 22517  24FA                     	signat	_rotISR,89
 22518                           	global	_pushButtonISR
 22519                           
 22520 ;; *************** function _pushButtonISR *****************
 22521 ;; Defined at:
 22522 ;;		line 467 in file "main.c"
 22523 ;; Parameters:    Size  Location     Type
 22524 ;;		None
 22525 ;; Auto vars:     Size  Location     Type
 22526 ;;		None
 22527 ;; Return value:  Size  Location     Type
 22528 ;;                  1    wreg      void 
 22529 ;; Registers used:
 22530 ;;		wreg, status,2
 22531 ;; Tracked objects:
 22532 ;;		On entry : 0/0
 22533 ;;		On exit  : 0/0
 22534 ;;		Unchanged: 0/0
 22535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22538 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22539 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22540 ;;Total ram usage:        1 bytes
 22541 ;; Hardware stack levels used:    1
 22542 ;; This function calls:
 22543 ;;		Nothing
 22544 ;; This function is called by:
 22545 ;;		_ISR
 22546 ;; This function uses a non-reentrant model
 22547 ;;
 22548                           psect	text62,local,class=CODE,delta=2,merge=1,group=0
 22549                           	line	467
 22550                           global __ptext62
 22551                           __ptext62:	;psect for function _pushButtonISR
 22552  23A4                     psect	text62
 22553                           	file	"main.c"
 22554                           	line	467
 22555                           	global	__size_of_pushButtonISR
 22556                           	__size_of_pushButtonISR	equ	__end_of_pushButtonISR-_pushButtonISR
 22557  0034                     	
 22558                           _pushButtonISR:	
 22559  23A4                     ;incstack = 0
 22560                           	opt	stack 5
 22561                           ; Regs used in _pushButtonISR: [wreg+status,2]
 22562                           	line	470
 22563                           	
 22564                           i1l4885:	
 22565  23A4                     ;main.c: 470:  if (!PORTAbits.RA7) {
 22566                           	movlb 0	; select bank0
 22567  23A4  0140               	btfsc	(12),7	;volatile
 22568  23A5  1B8C               	goto	u685_21
 22569  23A6  2BA8               	goto	u685_20
 22570  23A7  2BA9               u685_21:
 22571  23A8                     	goto	i1l4889
 22572  23A8  2BAB               u685_20:
 22573  23A9                     	line	471
 22574                           	
 22575                           i1l4887:	
 22576  23A9                     ;main.c: 471:   g_10msTick = 0;
 22577                           	clrf	(_g_10msTick)	;volatile
 22578  23A9  01FD               	line	472
 22579                           ;main.c: 472:  } else {
 22580                           	goto	i1l318
 22581  23AA  2BD7               	
 22582                           i1l312:	
 22583  23AB                     	line	473
 22584                           	
 22585                           i1l4889:	
 22586  23AB                     ;main.c: 473:   if ((g_10msTick > 5) & (g_10msTick <= 50))
 22587                           	movlw	low(06h)
 22588  23AB  3006               	subwf	(_g_10msTick),w	;volatile
 22589  23AC  027D               	skipc
 22590  23AD  1C03               	goto	u686_21
 22591  23AE  2BB0               	goto	u686_20
 22592  23AF  2BB1               u686_21:
 22593  23B0                     	goto	i1l4895
 22594  23B0  2BBD               u686_20:
 22595  23B1                     	
 22596                           i1l4891:	
 22597  23B1                     	movlw	low(033h)
 22598  23B1  3033               	subwf	(_g_10msTick),w	;volatile
 22599  23B2  027D               	skipnc
 22600  23B3  1803               	goto	u687_21
 22601  23B4  2BB6               	goto	u687_20
 22602  23B5  2BB7               u687_21:
 22603  23B6                     	goto	i1l4895
 22604  23B6  2BBD               u687_20:
 22605  23B7                     	line	475
 22606                           	
 22607                           i1l4893:	
 22608  23B7                     ;main.c: 475:    g_pbState = PB_SHORT;
 22609                           	movlw	low(01h)
 22610  23B7  3001               	movwf	(??_pushButtonISR+0)+0
 22611  23B8  00F0               	movf	(??_pushButtonISR+0)+0,w
 22612  23B9  0870               	movlb 2	; select bank2
 22613  23BA  0142               	movwf	(_g_pbState)^0100h	;volatile
 22614  23BB  00EB               	goto	i1l318
 22615  23BC  2BD7               	line	476
 22616                           ;main.c: 476:   else if ((g_10msTick > 50) & (g_10msTick <= 150))
 22617                           	
 22618                           i1l314:	
 22619  23BD                     	
 22620                           i1l4895:	
 22621  23BD                     	movlw	low(033h)
 22622  23BD  3033               	subwf	(_g_10msTick),w	;volatile
 22623  23BE  027D               	skipc
 22624  23BF  1C03               	goto	u688_21
 22625  23C0  2BC2               	goto	u688_20
 22626  23C1  2BC3               u688_21:
 22627  23C2                     	goto	i1l4901
 22628  23C2  2BCF               u688_20:
 22629  23C3                     	
 22630                           i1l4897:	
 22631  23C3                     	movlw	low(097h)
 22632  23C3  3097               	subwf	(_g_10msTick),w	;volatile
 22633  23C4  027D               	skipnc
 22634  23C5  1803               	goto	u689_21
 22635  23C6  2BC8               	goto	u689_20
 22636  23C7  2BC9               u689_21:
 22637  23C8                     	goto	i1l4901
 22638  23C8  2BCF               u689_20:
 22639  23C9                     	line	478
 22640                           	
 22641                           i1l4899:	
 22642  23C9                     ;main.c: 478:    g_pbState = PB_LONG;
 22643                           	movlw	low(02h)
 22644  23C9  3002               	movwf	(??_pushButtonISR+0)+0
 22645  23CA  00F0               	movf	(??_pushButtonISR+0)+0,w
 22646  23CB  0870               	movlb 2	; select bank2
 22647  23CC  0142               	movwf	(_g_pbState)^0100h	;volatile
 22648  23CD  00EB               	goto	i1l318
 22649  23CE  2BD7               	line	479
 22650                           ;main.c: 479:   else
 22651                           	
 22652                           i1l316:	
 22653  23CF                     	line	481
 22654                           	
 22655                           i1l4901:	
 22656  23CF                     ;main.c: 481:    g_pbState = PB_ABORT;
 22657                           	movlw	low(03h)
 22658  23CF  3003               	movwf	(??_pushButtonISR+0)+0
 22659  23D0  00F0               	movf	(??_pushButtonISR+0)+0,w
 22660  23D1  0870               	movlb 2	; select bank2
 22661  23D2  0142               	movwf	(_g_pbState)^0100h	;volatile
 22662  23D3  00EB               	goto	i1l318
 22663  23D4  2BD7               	
 22664                           i1l317:	
 22665  23D5                     	goto	i1l318
 22666  23D5  2BD7               	
 22667                           i1l315:	
 22668  23D6                     	goto	i1l318
 22669  23D6  2BD7               	line	482
 22670                           ;main.c: 482:  }
 22671                           	
 22672                           i1l313:	
 22673  23D7                     	line	483
 22674                           	
 22675                           i1l318:	
 22676  23D7                     	return
 22677  23D7  0008               	opt stack 0
 22678                           GLOBAL	__end_of_pushButtonISR
 22679                           	__end_of_pushButtonISR:
 22680  23D8                     	signat	_pushButtonISR,89
 22681                           	global	___llmod
 22682                           
 22683 ;; *************** function ___llmod *****************
 22684 ;; Defined at:
 22685 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\llmod.c"
 22686 ;; Parameters:    Size  Location     Type
 22687 ;;  divisor         4    0[COMMON] unsigned long 
 22688 ;;  dividend        4    4[COMMON] unsigned long 
 22689 ;; Auto vars:     Size  Location     Type
 22690 ;;  counter         1    9[COMMON] unsigned char 
 22691 ;; Return value:  Size  Location     Type
 22692 ;;                  4    0[COMMON] unsigned long 
 22693 ;; Registers used:
 22694 ;;		wreg, status,2, status,0
 22695 ;; Tracked objects:
 22696 ;;		On entry : 0/0
 22697 ;;		On exit  : 0/0
 22698 ;;		Unchanged: 0/0
 22699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22700 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22701 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22702 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22703 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22704 ;;Total ram usage:       10 bytes
 22705 ;; Hardware stack levels used:    1
 22706 ;; This function calls:
 22707 ;;		Nothing
 22708 ;; This function is called by:
 22709 ;;		_ISR
 22710 ;; This function uses a non-reentrant model
 22711 ;;
 22712                           psect	text63,local,class=CODE,delta=2,merge=1,group=1
 22713                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\llmod.c"
 22714                           	line	5
 22715                           global __ptext63
 22716                           __ptext63:	;psect for function ___llmod
 22717  2586                     psect	text63
 22718                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\llmod.c"
 22719                           	line	5
 22720                           	global	__size_of___llmod
 22721                           	__size_of___llmod	equ	__end_of___llmod-___llmod
 22722  0051                     	
 22723                           ___llmod:	
 22724  2586                     ;incstack = 0
 22725                           	opt	stack 5
 22726                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 22727                           	line	12
 22728                           	
 22729                           i1l4945:	
 22730  2586                     	movf	(___llmod@divisor+3),w
 22731  2586  0873               	iorwf	(___llmod@divisor+2),w
 22732  2587  0472               	iorwf	(___llmod@divisor+1),w
 22733  2588  0471               	iorwf	(___llmod@divisor),w
 22734  2589  0470               	skipnz
 22735  258A  1903               	goto	u696_21
 22736  258B  2D8D               	goto	u696_20
 22737  258C  2D8E               u696_21:
 22738  258D                     	goto	i1l4961
 22739  258D  2DCD               u696_20:
 22740  258E                     	line	13
 22741                           	
 22742                           i1l4947:	
 22743  258E                     	clrf	(___llmod@counter)
 22744  258E  01F9               	incf	(___llmod@counter),f
 22745  258F  0AF9               	line	14
 22746                           	goto	i1l4951
 22747  2590  2D9D               	
 22748                           i1l810:	
 22749  2591                     	line	15
 22750                           	
 22751                           i1l4949:	
 22752  2591                     	movlw	01h
 22753  2591  3001               u697_25:
 22754  2592                     	lslf	(___llmod@divisor),f
 22755  2592  35F0               	rlf	(___llmod@divisor+1),f
 22756  2593  0DF1               	rlf	(___llmod@divisor+2),f
 22757  2594  0DF2               	rlf	(___llmod@divisor+3),f
 22758  2595  0DF3               	decfsz	wreg,f
 22759  2596  0B89               	goto	u697_25
 22760  2597  2D92               	line	16
 22761                           	movlw	low(01h)
 22762  2598  3001               	movwf	(??___llmod+0)+0
 22763  2599  00F8               	movf	(??___llmod+0)+0,w
 22764  259A  0878               	addwf	(___llmod@counter),f
 22765  259B  07F9               	goto	i1l4951
 22766  259C  2D9D               	line	17
 22767                           	
 22768                           i1l809:	
 22769  259D                     	line	14
 22770                           	
 22771                           i1l4951:	
 22772  259D                     	btfss	(___llmod@divisor+3),(31)&7
 22773  259D  1FF3               	goto	u698_21
 22774  259E  2DA0               	goto	u698_20
 22775  259F  2DA1               u698_21:
 22776  25A0                     	goto	i1l4949
 22777  25A0  2D91               u698_20:
 22778  25A1                     	goto	i1l4953
 22779  25A1  2DA3               	
 22780                           i1l811:	
 22781  25A2                     	goto	i1l4953
 22782  25A2  2DA3               	line	18
 22783                           	
 22784                           i1l812:	
 22785  25A3                     	line	19
 22786                           	
 22787                           i1l4953:	
 22788  25A3                     	movf	(___llmod@divisor+3),w
 22789  25A3  0873               	subwf	(___llmod@dividend+3),w
 22790  25A4  0277               	skipz
 22791  25A5  1D03               	goto	u699_25
 22792  25A6  2DB1               	movf	(___llmod@divisor+2),w
 22793  25A7  0872               	subwf	(___llmod@dividend+2),w
 22794  25A8  0276               	skipz
 22795  25A9  1D03               	goto	u699_25
 22796  25AA  2DB1               	movf	(___llmod@divisor+1),w
 22797  25AB  0871               	subwf	(___llmod@dividend+1),w
 22798  25AC  0275               	skipz
 22799  25AD  1D03               	goto	u699_25
 22800  25AE  2DB1               	movf	(___llmod@divisor),w
 22801  25AF  0870               	subwf	(___llmod@dividend),w
 22802  25B0  0274               u699_25:
 22803  25B1                     	skipc
 22804  25B1  1C03               	goto	u699_21
 22805  25B2  2DB4               	goto	u699_20
 22806  25B3  2DB5               u699_21:
 22807  25B4                     	goto	i1l4957
 22808  25B4  2DBE               u699_20:
 22809  25B5                     	line	20
 22810                           	
 22811                           i1l4955:	
 22812  25B5                     	movf	(___llmod@divisor),w
 22813  25B5  0870               	subwf	(___llmod@dividend),f
 22814  25B6  02F4               	movf	(___llmod@divisor+1),w
 22815  25B7  0871               	subwfb	(___llmod@dividend+1),f
 22816  25B8  3BF5               	movf	(___llmod@divisor+2),w
 22817  25B9  0872               	subwfb	(___llmod@dividend+2),f
 22818  25BA  3BF6               	movf	(___llmod@divisor+3),w
 22819  25BB  0873               	subwfb	(___llmod@dividend+3),f
 22820  25BC  3BF7               	goto	i1l4957
 22821  25BD  2DBE               	
 22822                           i1l813:	
 22823  25BE                     	line	21
 22824                           	
 22825                           i1l4957:	
 22826  25BE                     	movlw	01h
 22827  25BE  3001               u700_25:
 22828  25BF                     	lsrf	(___llmod@divisor+3),f
 22829  25BF  36F3               	rrf	(___llmod@divisor+2),f
 22830  25C0  0CF2               	rrf	(___llmod@divisor+1),f
 22831  25C1  0CF1               	rrf	(___llmod@divisor),f
 22832  25C2  0CF0               	decfsz	wreg,f
 22833  25C3  0B89               	goto	u700_25
 22834  25C4  2DBF               
 22835                           	line	22
 22836                           	
 22837                           i1l4959:	
 22838  25C5                     	movlw	01h
 22839  25C5  3001               	subwf	(___llmod@counter),f
 22840  25C6  02F9               	btfss	status,2
 22841  25C7  1D03               	goto	u701_21
 22842  25C8  2DCA               	goto	u701_20
 22843  25C9  2DCB               u701_21:
 22844  25CA                     	goto	i1l4953
 22845  25CA  2DA3               u701_20:
 22846  25CB                     	goto	i1l4961
 22847  25CB  2DCD               	
 22848                           i1l814:	
 22849  25CC                     	goto	i1l4961
 22850  25CC  2DCD               	line	23
 22851                           	
 22852                           i1l808:	
 22853  25CD                     	line	24
 22854                           	
 22855                           i1l4961:	
 22856  25CD                     	movf	(___llmod@dividend+3),w
 22857  25CD  0877               	movwf	(?___llmod+3)
 22858  25CE  00F3               	movf	(___llmod@dividend+2),w
 22859  25CF  0876               	movwf	(?___llmod+2)
 22860  25D0  00F2               	movf	(___llmod@dividend+1),w
 22861  25D1  0875               	movwf	(?___llmod+1)
 22862  25D2  00F1               	movf	(___llmod@dividend),w
 22863  25D3  0874               	movwf	(?___llmod)
 22864  25D4  00F0               
 22865                           	goto	i1l815
 22866  25D5  2DD6               	
 22867                           i1l4963:	
 22868  25D6                     	line	25
 22869                           	
 22870                           i1l815:	
 22871  25D6                     	return
 22872  25D6  0008               	opt stack 0
 22873                           GLOBAL	__end_of___llmod
 22874                           	__end_of___llmod:
 22875  25D7                     	signat	___llmod,8316
 22876                           global	___latbits
 22877                           ___latbits	equ	3
 22878  0003                     	global	btemp
 22879                           	btemp set 07Eh
 22880  007E                     
 22881                           	DABS	1,126,2	;btemp
 22882                           	global	int$flags
 22883                           	int$flags	set btemp
 22884  007E                     	global	wtemp0
 22885                           	wtemp0 set btemp+0
 22886  007E                     	end


Data Sizes:
    Strings     189
    Constant    28
    Data        15
    BSS         186
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     64      80
    BANK3            80     74      80
    BANK4            80      0      76
    BANK5            80      0      20
    BANK6            80      0      80
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    strncpy@s	PTR const unsigned char  size(1) Largest target is 20
		 -> uartReceiveISR@buffer(BANK5[20]), 

    strncpy@d	PTR unsigned char  size(1) Largest target is 15
		 -> g_dataPacket(BANK4[15]), 

    strncpy@cp	PTR unsigned char  size(1) Largest target is 15
		 -> g_dataPacket(BANK4[15]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK2[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK2[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_sprintf(BANK2[2]), stoa@nuls(BANK0[7]), dbuf(BANK6[80]), showMenu@s12(BANK3[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_sprintf(BANK2[2]), stoa@nuls(BANK0[7]), dbuf(BANK6[80]), showMenu@s12(BANK3[12]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK6[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK6[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK6[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK6[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_6(CODE[42]), STR_5(CODE[17]), STR_4(CODE[13]), STR_2(CODE[15]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 61
		 -> showMenu@s12(BANK3[12]), showMenu@s(BANK3[61]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK2[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 61
		 -> showMenu@s12(BANK3[12]), showMenu@s(BANK3[61]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK6[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    S1298_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 61
		 -> showMenu@s12(BANK3[12]), showMenu@s(BANK3[61]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 61
		 -> showMenu@s12(BANK3[12]), showMenu@s(BANK3[61]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_6(CODE[42]), STR_5(CODE[17]), STR_4(CODE[13]), STR_2(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_6(CODE[42]), STR_5(CODE[17]), STR_4(CODE[13]), STR_2(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 42
		 -> STR_6(CODE[42]), STR_5(CODE[17]), STR_4(CODE[13]), STR_2(CODE[15]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 12
		 -> ?_sprintf(BANK2[2]), showMenu@s12(BANK3[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK2[2]), 

    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    stoa@s	PTR unsigned char  size(1) Largest target is 12
		 -> ?_sprintf(BANK2[2]), showMenu@s12(BANK3[12]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 12
		 -> ?_sprintf(BANK2[2]), stoa@nuls(BANK0[7]), showMenu@s12(BANK3[12]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK6[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK6[80]), 

    OLED_print_xy@s	PTR unsigned char  size(2) Largest target is 61
		 -> STR_7(CODE[49]), STR_3(CODE[49]), showMenu@s(BANK3[61]), STR_1(CODE[13]), 

    sp__strncpy	PTR unsigned char  size(1) Largest target is 15
		 -> g_dataPacket(BANK4[15]), 

    menuInput@menu	PTR unsigned char  size(1) Largest target is 1
		 -> showMenu@menu(BANK3[1]), 

    menuInput@page	PTR unsigned char  size(1) Largest target is 1
		 -> showMenu@page(BANK3[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___llmod
    _uartReceiveISR->_strncpy

Critical Paths under _main in BANK0

    _timeSince->_timeNow
    _vfpfcnvrt->_efgtoa
    _stoa->_fputc
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___fladd
    _atoi->___wmul
    _atoi->_isdigit
    _OLED_scrollDisplayRight->_OLED_command
    _OLED_scrollDisplayLeft->_OLED_command
    _OLED_returnHome->_OLED_command
    _OLED_print_xy->_OLED_command
    _OLED_print_xy->_OLED_write
    _OLED_write->_OLED_send
    _handleSensorData->___xxtofl
    _convertAnalogValues->___fldiv
    _ema->___lmul
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___fladd->___flmul
    _checkStatus->___flge
    ___flge->___flmul
    _OLED_init->_OLED_command
    _OLED_command->_OLED_send
    _OLED_send->_OLED_write4bits

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_showMenu
    _showMenu->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_showMenu

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ISR in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   50632
                                             55 BANK2      9     9      0
                       _OLED_command
                          _OLED_init
                    _OLED_returnHome
                        _checkStatus
                _convertAnalogValues
                   _handleSensorData
                         _initialize
                           _showMenu
                            _timeNow
                          _timeSince
                       _uartSendByte
 ---------------------------------------------------------------------------------
 (1) _uartSendByte                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _timeSince                                           20    16      4     285
                                              4 BANK0     20    16      4
                            _timeNow
 ---------------------------------------------------------------------------------
 (2) _timeNow                                              4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _showMenu                                            76    76      0   37224
                                             53 BANK2      2     2      0
                                              0 BANK3     74    74      0
                      _OLED_print_xy
                              _getPB
                          _menuInput
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             29    10     19   32692
                                             24 BANK2     29    10     19
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   32047
                                             16 BANK2      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           38    36      2   31707
                                             72 BANK1      8     6      2
                                              0 BANK2     16    16      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             10     6      4     410
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _stoa                                                23    21      2    2018
                                              8 BANK0     23    21      2
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              66    61      5   23524
                                             76 BANK0      4     4      0
                                             10 BANK1     62    57      5
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 BANK0      8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               8     6      2     641
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    3860
                                             16 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               6     4      2     164
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1605
                                              8 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                8     5      3    1290
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             66 BANK0     10     6      4
                                              0 BANK1     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       16    12      4     287
                                              0 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             11     7      4     381
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2789
                                             64 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     394
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     448
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     452
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1283
                                              6 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              5     3      2     207
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     290
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _menuInput                                           11     6      5    2765
                                              7 BANK0     11     6      5
                    _OLED_returnHome
             _OLED_scrollDisplayLeft
            _OLED_scrollDisplayRight
                              _getPB
                          _getRotDir
 ---------------------------------------------------------------------------------
 (3) _getRotDir                                            2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _getPB                                                2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _OLED_scrollDisplayRight                              0     0      0     352
                       _OLED_command
 ---------------------------------------------------------------------------------
 (3) _OLED_scrollDisplayLeft                               0     0      0     352
                       _OLED_command
 ---------------------------------------------------------------------------------
 (3) _OLED_returnHome                                      0     0      0     352
                       _OLED_command
 ---------------------------------------------------------------------------------
 (2) _OLED_print_xy                                        9     6      3    1577
                                              7 BANK0      9     6      3
                       _OLED_command
                         _OLED_write
 ---------------------------------------------------------------------------------
 (3) _OLED_write                                           1     1      0     352
                                              6 BANK0      1     1      0
                          _OLED_send
                  _OLED_waitForReady
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _handleSensorData                                     4     4      0     626
                                             14 BANK0      4     4      0
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _convertAnalogValues                                  6     6      0   10341
                                             66 BANK0      6     6      0
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                   _adcGetConversion
                                _ema
 ---------------------------------------------------------------------------------
 (2) _ema                                                 20    12      8    1191
                                             12 BANK0     20    12      8
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     396
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _adcGetConversion                                     4     2      2      22
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             26    18      8    3785
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             26    18      8    2185
                                             40 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             24    16      8    2440
                                             40 BANK0     24    16      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _checkStatus                                          0     0      0     942
                             ___flge
 ---------------------------------------------------------------------------------
 (6) ___flge                                              16     8      8     942
                                             40 BANK0     16     8      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _OLED_init                                            1     1      0     440
                                              7 BANK0      1     1      0
                       _OLED_command
                    _OLED_write4bits
 ---------------------------------------------------------------------------------
 (4) _OLED_command                                         1     1      0     352
                                              6 BANK0      1     1      0
                          _OLED_send
                  _OLED_waitForReady
 ---------------------------------------------------------------------------------
 (5) _OLED_waitForReady                                    1     1      0      24
                                              0 BANK0      1     1      0
                   _OLED_pulseEnable
 ---------------------------------------------------------------------------------
 (5) _OLED_send                                            3     2      1     306
                                              3 BANK0      3     2      1
                    _OLED_write4bits
 ---------------------------------------------------------------------------------
 (6) _OLED_write4bits                                      3     3      0      88
                                              0 BANK0      3     3      0
                   _OLED_pulseEnable
 ---------------------------------------------------------------------------------
 (6) _OLED_pulseEnable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 1     1      0     660
                                             10 COMMON     1     1      0
                            ___llmod
                      _pushButtonISR
                             _rotISR
                     _uartReceiveISR
 ---------------------------------------------------------------------------------
 (11) _uartReceiveISR                                      1     1      0     326
                                              6 COMMON     1     1      0
                            _strncpy
 ---------------------------------------------------------------------------------
 (12) _strncpy                                             6     3      3     326
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (11) _rotISR                                              8     8      0      23
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (11) _pushButtonISR                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) ___llmod                                            10     2      8     311
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OLED_command
     _OLED_send
       _OLED_write4bits
         _OLED_pulseEnable
     _OLED_waitForReady
       _OLED_pulseEnable
   _OLED_init
     _OLED_command
       _OLED_send
         _OLED_write4bits
           _OLED_pulseEnable
       _OLED_waitForReady
         _OLED_pulseEnable
     _OLED_write4bits
       _OLED_pulseEnable
   _OLED_returnHome
     _OLED_command
       _OLED_send
         _OLED_write4bits
           _OLED_pulseEnable
       _OLED_waitForReady
         _OLED_pulseEnable
   _checkStatus
     ___flge
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
   _convertAnalogValues
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl
     _adcGetConversion
     _ema
       ___lmul
   _handleSensorData
     ___xxtofl
   _initialize
   _showMenu
     _OLED_print_xy
       _OLED_command
         _OLED_send
           _OLED_write4bits
             _OLED_pulseEnable
         _OLED_waitForReady
           _OLED_pulseEnable
       _OLED_write
         _OLED_send
           _OLED_write4bits
             _OLED_pulseEnable
         _OLED_waitForReady
           _OLED_pulseEnable
     _getPB
     _menuInput
       _OLED_returnHome
         _OLED_command
           _OLED_send
             _OLED_write4bits
               _OLED_pulseEnable
           _OLED_waitForReady
             _OLED_pulseEnable
       _OLED_scrollDisplayLeft
         _OLED_command
           _OLED_send
             _OLED_write4bits
               _OLED_pulseEnable
           _OLED_waitForReady
             _OLED_pulseEnable
       _OLED_scrollDisplayRight
         _OLED_command
           _OLED_send
             _OLED_write4bits
               _OLED_pulseEnable
           _OLED_waitForReady
             _OLED_pulseEnable
       _getPB
       _getRotDir
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___flmul
               __Umul8_16
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _tolower
             _isupper
   _timeNow
   _timeSince
     _timeNow
   _uartSendByte

 _ISR (ROOT)
   ___llmod
   _pushButtonISR
   _rotISR
   _uartReceiveISR
     _strncpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
ABS                  0      0     1FE       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     40      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50     4A      50      12      100.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      4C      14       95.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      14      16       25.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      50      18      100.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              20      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     1FE      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Tue Jan 21 00:27:10 2020

                   _pushButtonISR 23A4          __end_of_transition_table 281C                      ___fldiv@aexp 0061  
                    ___fldiv@bexp 0060                      ___fldiv@sign 0059                       __CFG_CP$OFF 0000  
                    ___awdiv@sign 0026               ___wmul@multiplicand 0022               __Umul8_16@word_mpld 0026  
                     __CFG_LVP$ON 0000                               l200 19B4                               l203 2325  
                             l211 2242                               l204 2328                               l212 2242  
                             l205 2328                               l213 2247                               l214 224F  
                             l223 09B0                               l208 1934                               l240 13B5  
                             l241 13B4                               l226 1859                               l250 1DEA  
                             l242 13B5                               l331 2172                               l227 185C  
                             l251 1E02                               l235 138F                               l340 2256  
                             l228 185C                               l252 1E1A                               l420 2753  
                             l500 07A9                               l236 12CF                               l341 2270  
                             l261 2195                               l253 1E33                               l245 1DCB  
                             l421 2768                               l501 06C3                               l237 138E  
                             l334 2539                               l342 2272                               l254 1E32  
                             l246 1DB2                               l422 2756                               l510 0786  
                             l502 070A                               l238 12F8                               l270 21AB  
                             l190 1D63                               l351 1AC2                               l255 1E35  
                             l247 1DCA                               l423 2776                               l503 06C8  
                             l431 1076                               l239 1321                               l271 21AB  
                             l191 1D70                               l264 2540                               l248 1E04  
                             l424 2785                               l416 2747                               l512 078B  
                             l504 0720                               l272 21B1                               l192 1D71  
                             l337 21D8                               l345 217D                               l265 2540  
                             l249 1E03                               l425 2795                               l441 10EA  
                             l433 1082                               l521 1E55                               l273 21B1  
                             l193 1D71                               l266 2545                               l354 2158  
                             l258 100C                               l418 2751                               l514 0767  
                             l506 0730                               l450 013C                               l442 1108  
                             l530 1E96                               l267 2585                               l451 0250  
                             l443 07C4                               l435 1087                               l531 1EB8  
                             l523 1E7D                               l187 1CE8                               l348 2189  
                             l516 077B                               l508 0735                               l452 01B9  
                             l444 015D                               l436 00D2                               l428 105F  
                             l532 1EDA                               l196 0814                               l188 1D32  
                             l373 2471                               l357 215D                               l461 028E  
                             l453 0188                               l445 0130                               l437 10FC  
                             l429 109D                               l533 1EBD                               l525 1E82  
                             l189 1D58                               l374 2462                               l470 02E4  
                             l454 01F5                               l534 1EE8                               l542 0FD0  
                             l375 247C                               l471 02EB                               l463 0297  
                             l455 0227                               l447 010A                               l439 10D6  
                             l535 1F12                               l527 1E7C                               l551 0CEE  
                             l543 0C81                               l199 197C                               l376 247C  
                             l480 0424                               l472 0305                               l464 02AC  
                             l456 01F6                               l536 1F01                               l528 1EB9  
                             l552 0CF5                               l544 0C80                               l481 0480  
                             l457 024F                               l449 011E                               l537 1EEF  
                             l529 1EA8                               l553 0DB7                               l561 0DAE  
                             l545 0CF6                               l730 27EF                               l490 0579  
                             l482 04B6                               l474 0300                               l466 02A5  
                             l458 0298                               l538 1F11                               l570 0ED4  
                             l562 0DB5                               l554 0D41                               l546 0CA2  
                             l379 2153                               l731 27C7                               l491 05D7  
                             l483 04B5                               l475 0326                               l459 0279  
                             l539 1F18                               l563 0E2C                               l555 0DB6  
                             l547 0C97                               l900 0B01                               l732 27BD  
                             l492 059E                               l476 031A                               l468 02AB  
                             l572 0EF7                               l564 0E2B                               l556 0D62  
                             l580 07F4                               l901 0AEB                               l733 27CC  
                             l741 2688                               l493 05B9                               l485 04FC  
                             l477 0325                               l469 02EB                               l573 0F27  
                             l565 0E82                               l557 0D57                               l549 0CCB  
                             l581 07FD                               l910 0B84                               l902 0AEE  
                             l734 27CD                               l750 26D2                               l742 2692  
                             l494 059F                               l478 0411                               l574 0F92  
                             l566 0FFF                               l911 0B90                               l903 0AF4  
                             l735 27E2                               l751 26D7                               l743 26C7  
                             l495 05C0                               l487 04FE                               l479 0339  
                             l575 0FC3                               l567 0F53                               l559 0D8B  
                             l920 0BF4                               l904 0BA9                               l912 0B97  
                             l584 2277                               l736 27EE                               l728 27A4  
                             l744 26A5                               l760 2627                               l488 065A  
                             l568 0F12                               l921 0BF4                               l913 0B9A  
                             l905 0B64                               l585 227F                               l737 27FA  
                             l729 27B2                               l745 269B                               l497 067D  
                             l489 0505                               l770 1C04                               l922 0BF3  
                             l914 0BA2                               l906 0B63                               l586 2290  
                             l738 27FF                               l746 26AA                               l754 25F4  
                             l498 067E                               l578 07E9                               l771 1C05  
                             l763 1B75                               l923 0C0F                               l915 0BA8  
                             l907 0B6C                               l587 2295                               l747 26AB  
                             l755 2610                               l499 069C                               l579 07CF  
                             l764 1B92                               l916 0BC0                               l908 0B83  
                             l940 140A                               l596 2417                               l748 26BA  
                             l932 222D                               l780 1B26                               l765 1BBE  
                             l925 0BFF                               l917 0BB7                               l909 0BA3  
                             l941 1407                               l597 2424                               l749 26C6  
                             l757 2624                               l781 1B14                               l766 1BEA  
                             l926 0C0E                               l918 0BBF                               l950 14B7  
                             l942 1412                               l598 243B                               l774 21A2  
                             l782 1B15                               l927 0C15                               l919 0BBE  
                             l951 14C3                               l943 1434                               l935 13C6  
                             l599 2444                               l759 2626                               l775 21A3  
                             l783 1B25                               l768 1C02                               l928 0C19  
                             l880 09D4                               l960 150F                               l952 14CD  
                             l944 1594                               l936 13DC                               l784 1B47  
                             l929 0C22                               l881 09E0                               l961 1540  
                             l953 14E7                               l945 144B                               l937 13D9  
                             l785 1B36                               l890 0AC2                               l882 09ED  
                             l962 153F                               l954 14CE                               l946 14BC  
                             l938 13E5                               l786 1B40                               l778 1AE1  
                             l891 0ABA                               l883 09F7                               l963 155A  
                             l955 14DB                               l947 147A                               l939 13F4  
                             l971 15A5                               l787 1B37                               l779 1B57  
                             l892 0A9A                               l884 0A0D                               l964 1574  
                             l956 14EC                               l948 149B                               l972 15BA  
                             l788 1B46                               l893 0AA4                               l885 0A0A  
                             l965 157F                               l957 1511                               l949 1493  
                             l981 15FB                               l973 15B8                               l789 1B57  
                             l894 0AA7                               l886 0A15                               l878 09C1  
                             l966 1583                               l958 1508                               l990 1779  
                             l982 17FF                               l974 15C3                               l895 0AAD  
                             l887 0A61                               l879 09D7                               l959 1510  
                             l991 17AA                               l983 1751                               l975 15D2  
                             l896 0AC2                               l888 0A24                               l992 17A9  
                             l984 1738                               l976 15E7                               l897 0B02  
                             l889 0A99                               l993 17C1                               l985 1745  
                             l977 15E5                               l898 0AD5                               l994 17F2  
                             l986 1756                               l978 15F0                               l899 0C22  
                             l995 17DA                               l987 177B                               l979 1605  
                             l996 17F2                               l988 1772                               l997 17ED  
                             l989 177A                               _ISR 0004                               _ema 18C8  
                             _pad 2736                      ___awmod@sign 0026                      __CFG_BORV$LO 0000  
                             wreg 0009                      ___flmul@aexp 0040                      ___flmul@bexp 0041  
                    ___flmul@sign 003B                      ___flmul@temp 0046                      ___flmul@prod 0042  
                   __CFG_BBEN$OFF 0000                              ?_ISR 0070                      __CFG_ZCD$OFF 0000  
                    ___fltol@exp1 002A                              l1000 1C21                              l1001 1C29  
                            l1010 1C79                              l1002 1C3B                              l1011 1C6F  
                            l1003 1CBA                              l1004 1C4C                              l1100 2733  
                            l1013 1C84                              l1005 1C40                              l1021 1A0B  
                            l1014 1C84                              l1006 1C53                              l1102 2715  
                            l1110 23A3                              l1015 1C90                              l1007 1C67  
                            l1023 1A04                              l1103 2735                              l1111 23A3  
                            l1016 1CB1                              l1008 1C54                              l1009 1C6E  
                            l1041 1F46                              l1025 1A09                              l1121 07FE  
                            l1050 1FCC                              l1042 1F69                              l1034 1F24  
                            l1026 1A37                              l1130 22C5                              l1043 1F73  
                            l1035 1F1F                              l1027 1A32                              l1131 22C0  
                            l1052 1FE0                              l1044 1F6A                              l1108 2392  
                            l1132 22CF                              l1124 22EA                              l1053 1FE7  
                            l1045 1F6E                              l1037 1F4E                              l1109 237E  
                            l1133 22DD                              l1125 22E9                              l1141 18AE  
                            l1046 1F87                              l1070 125C                              l1126 2302  
                            l1142 18AF                              l1118 2378                              l1055 1FF9  
                            l1047 1FAF                              l1039 1F62                              l1071 125B  
                            l1063 117E                              l1127 2302                              l1048 1F88  
                            l1064 126D                              l1136 1877                              l1081 22B1  
                            l1057 1FFE                              l1065 120A                              l1161 23FE  
                            l1137 18C7                              l1170 234A                              l1074 21F2  
                            l1082 22B9                              l1058 1FFF                              l1066 11C1  
                            l1162 240C                              l1138 1885                              l1171 234F  
                            l1067 11EA                              l1139 1878                              l1068 125C  
                            l1069 1232                              l1157 240C                              l1159 23F1  
                            l1168 2335                              l1096 26E9                              l1088 220C  
                            l3201 09F5                              l1169 233D                              l4001 1087  
                            l1098 26E4                              l3211 0A0B                              l3203 09F7  
                            l1099 2734                              l3131 26E4                              l4011 10D6  
                            l4003 1093                              l3301 0B5A                              l3221 0A28  
                            l3205 09FC                              l3213 0A0D                              l3141 2735  
                            l3133 26E9                              l4101 030B                              l4021 110D  
                            l4013 10EA                              l4005 1098                              l3143 216A  
                            l3311 0B84                              l3303 0B64                              l3231 0A3C  
                            l3223 0A2C                              l3215 0A1B                              l3207 0A01  
                            l3135 26F5                              l3127 26D8                              l3151 237E  
                            l4103 030F                              l4111 0326                              l4031 011E  
                            l4023 00D1                              l4015 10F0                              l4007 109D  
                            ?_ema 002C                              l3145 216C                              l3321 0B9A  
                            l3313 0B8B                              l3305 0B74                              l3241 0A50  
                            l3233 0A40                              l3225 0A30                              l3217 0A1F  
                            l3209 0A0A                              l3137 2715                              l3129 26DE  
                            l3153 238C                              l3161 22C5                              l3401 277B  
                            l4201 0696                              l4121 0411                              l4113 0328  
                            l4105 0317                              l4041 015C                              l4033 0124  
                            l4017 10FC                              l4009 10B8                              l4025 00D2  
                            l3147 2170                              l3331 0BAE                              l3323 0B9F  
                            l3315 0B8F                              l3307 0B79                              l3251 0A62  
                            l3243 0A54                              l3235 0A44                              l3227 0A34  
                            l3219 0A24                              l3171 09B1                              l3411 19E2  
                            l3139 2729                              l3155 2392                              l3163 22CF  
                            l3403 2785                              l4211 06B3                              l4203 069C  
                            l4131 04AC                              l4123 0424                              l4115 0330  
                            l4107 031A                              l4051 0188                              l4035 0130  
                            l4027 00EC                              l4043 015D                              l4019 1108  
                            l3341 0BCD                              l3333 0BB4                              l3317 0B94  
                            l3309 0B82                              l3325 0BA3                              l3261 0AAB  
                            l3253 0A7E                              l3245 0A58                              l3237 0A48  
                            l3229 0A38                              l3181 09C6                              l3173 09B7  
                            l3501 27A4                              l3413 19E8                              l3421 1A0B  
                            l3149 237B                              l3165 22DD                              l3157 22BA  
                            l3405 2795                              l4221 06C8                              l4213 06B5  
                            l4205 06A3                              l4141 04FC                              l4133 04B6  
                            l4125 0476                              l4117 0339                              l4109 0320  
                            l4061 0227                              l4053 01B4                              l4045 0166  
                            l4037 013C                              l4029 010A                              l4301 1ED0  
                            l3351 0C07                              l3343 0BD1                              l3335 0BBB  
                            l3319 0B97                              l3327 0BA9                              l3271 0ACB  
                            l3263 0AAD                              l3255 0A9E                              l3247 0A5C  
                            l3239 0A4C                              l3191 09E0                              l3183 09CB  
                            l3175 09BB                              l3511 27BA                              l3503 27A8  
                            l3423 1A11                              l3415 19FF                              l3407 19B5  
                            l3159 22C0                              l3431 22E0                              l3167 21F3  
                            l4223 06CD                              l4231 070A                              l4215 06B9  
                            l4207 06A9                              l4151 0570                              l4143 0505  
                            l4135 04E9                              l4127 0480                              l4119 040C  
                            l4071 0275                              l4055 01B9                              l4063 0250  
                            l4047 0168                              l4039 0141                              l4311 1EFB  
                            l4303 1ED5                              l3601 1BEA                              l3361 0C1D  
                            l3353 0C0C                              l3345 0BEE                              l3337 0BC0  
                            l3329 0BAA                              l3281 0AE5                              l3273 0AD4  
                            l3265 0AB5                              l3257 0AA4                              l3249 0A61  
                            l3193 09E5                              l3185 09D4                              l3177 09BF  
                            l4321 1F1F                              l3521 27DC                              l3513 27BD  
                            l3505 27AD                              l3425 1A31                              l3417 1A04  
                            l3409 19CD                              l3433 22EA                              l3169 220C  
                            l3441 2404                              l4241 0730                              l4233 0710  
                            l4225 06EA                              l4217 06BD                              l4209 06AD  
                            l4161 0590                              l4153 0574                              l4145 055E  
                            l4137 04F1                              l4129 04A7                              l4081 02AC  
                            l4073 0288                              l4065 0262                              l4057 01F6  
                            l4049 0187                              l4313 1F01                              l4305 1EDA  
                            l4401 0C5D                              l3611 1C05                              l3603 1BEC  
                            l3363 0C21                              l3355 0C0F                              l3347 0BF9  
                            l3339 0BC5                              l3291 0AFC                              l3283 0AEB  
                            l3275 0AD5                              l3259 0AA7                              l3267 0ABA  
                            l3195 09EB                              l3187 09D5                              l3179 09C1  
                            l3371 2339                              l4331 1F46                              l4323 1F24  
                            l3531 27F4                              l3523 27E0                              l3515 27C2  
                            l3507 27B2                              l3427 1A32                              l3419 1A0A  
                            l3451 117D                              l3443 240B                              l3435 23D8  
                            l4251 0767                              l4243 0735                              l4235 0720  
                            l4227 0701                              l4219 06C3                              l4171 05B0  
                            l4163 0595                              l4147 0563                              l4155 0579  
                            l4139 04F7                              l4091 02EF                              l4083 02B2  
                            l4075 028E                              l4067 0268                              l4059 0222  
                            l4307 1EEE                              l4315 1F12                              l4403 0C66  
                            l4411 0C81                              l3381 2532                              l3605 1BEE  
                            l3357 0C13                              l3349 0BFF                              l3285 0AEE  
                            l3277 0ADD                              l3269 0AC6                              l3293 0B02  
                            l3197 09ED                              l3189 09D7                              l3701 140A  
                            l3373 2344                              l3365 232B                              l4341 1F88  
                            l4333 1F4E                              l4325 1F26                              l3533 27FA  
                            l3525 27E2                              l3517 27C7                              l3509 27B4  
                            l3541 2680                              l3613 2196                              l3621 1AC3  
                            l3429 1A37                              l3461 11E0                              l3453 1183  
                            l3445 1129                              l3437 23F1                              l4261 0797  
                            l4253 077B                              l4245 0741                              l4237 0725  
                            l4229 0705                              l4181 05D2                              l4173 05B4  
                            l4165 0599                              l4157 0580                              l4149 056A  
                            l4093 02F5                              l4085 02C1                              l4077 029D  
                            l4069 026E                              l4317 1F18                              l4309 1EEF  
                            l4501 0FC2                              l4413 0C97                              l4421 0CF6  
                            l4405 0C75                              l3383 2536                              l3607 1C00  
                            l3359 0C15                              l3295 0B18                              l3287 0AF2  
                            l3279 0AE1                              l3199 09F1                              l3703 141A  
                            l3711 1434                              l3375 234A                              l3367 232D  
                            l4351 1FE7                              l4343 1FAA                              l4335 1F62  
                            l4327 1F30                              l4319 1F19                              l3535 27FF  
                            l3527 27E7                              l3519 27CD                              l3551 2698  
                            l3543 2685                              l3615 219F                              l3631 1AF5  
                            l3623 1AD7                              l3471 1251                              l3463 11EA  
                            l3455 11A5                              l3447 1149                              l3391 274C  
                            l3439 23FE                              l4263 079C                              l4255 0781  
                            l4247 0746                              l4239 072B                              l4167 059F  
                            l4159 0584                              l4175 05B9                              l4183 05D7  
                            l4191 065A                              l4095 02FB                              l4087 02DD  
                            l4079 02A5                              l4271 1E46                              l4511 0FF0  
                            l4503 0FC3                              l4431 0D31                              l4423 0D09  
                            l4415 0CA2                              l4407 0C79                              l3609 1C02  
                            l3297 0B53                              l3289 0AF4                              l3801 1594  
                            l3721 1468                              l3713 1439                              l3705 1426  
                            l3377 234F                              l3369 2335                              l4521 2190  
                            l3481 2277                              l4353 1FED                              l5081 1F7F  
                            l4345 1FAF                              l4337 1F6A                              l4329 1F44  
                            l3529 27EF                              l3561 26B5                              l3553 269B  
                            l3545 2688                              l3537 267A                              l3617 21A2  
                            l3641 1B13                              l3633 1AFD                              l3625 1AE0  
                            l3473 126D                              l3457 11C0                              l3465 120A  
                            l3449 116E                              l3393 2751                              l3385 2738  
                            l4257 0786                              l4249 074A                              l4265 07A9  
                            l4193 066C                              l4185 0625                              l4177 05C0  
                            l4169 05AB                              l4097 0300                              l4089 02E4  
                            l4281 1E69                              l4273 1E4A                              l4513 0FFA  
                            l4505 0FCC                              l4441 0DAE                              l4433 0D41  
                            l4425 0D0C                              l4417 0CCB                              l4409 0C7A  
                            l4601 235C                              l3379 24FC                              l3299 0B55  
                            l3731 148D                              l3723 1470                              l3715 144A  
                            l3707 142A                              l3811 15A5                              l3803 1595  
                            l4523 2192                              l4531 1009                              l4611 1D77  
                            l3491 2295                              l3483 227B                              l3475 21D9  
                            l4355 1FF9                              l4347 1FCC                              l4339 1F73  
                            l3571 26D2                              l3563 26BA                              l3555 26A0  
                            l3547 268C                              l3539 267C                              l3619 21A3  
                            l3651 1B37                              l3643 1B15                              l3635 1AFF  
                            l3627 1AE1                              l3467 1228                              l3459 11C1  
                            l3395 2756                              l3387 273D                              l4267 07C4  
                            l4259 078B                              l4195 067E                              l4187 0651  
                            l4179 05CD                              l4099 0305                              l4291 1E96  
                            l4283 1E6D                              l4275 1E50                              l4371 1878  
                            l4363 185F                              l4515 0FFF                              l4507 0FCF  
                            l4451 0E06                              l4435 0D57                              l4427 0D16  
                            l4443 0DB7                              l4419 0CEE                              l4603 235E  
                            l3741 14AE                              l3733 1491                              l3725 1478  
                            l3717 144B                              l3709 1433                              l3901 1756  
                            l3821 15C3                              l3813 15AA                              l3805 159B  
                            l4701 1C40                              l4517 214F                              l4525 2195  
                            l4533 100C                              l4621 1DAA                              l4613 1D85  
                            l3485 2284                              l3477 21F2                              l4357 1FFF  
                            l4349 1FE0                              l3493 2796                              l3573 26D7  
                            l3565 26BF                              l3557 26A5                              l3549 2692  
                            l3581 2622                              l3661 222D                              l3653 1B47  
                            l3637 1B03                              l3645 1B26                              l3629 1AF4  
                            l3469 1232                              l3397 2762                              l3389 2747  
                            l4197 0685                              l4189 0655                              l4293 1EA2  
                            l4285 1E7D                              l4277 1E55                              l4269 1E38  
                            l4381 1897                              l4373 187C                              l4365 1867  
                            l4461 0E61                              l4453 0E2C                              l4445 0DD8  
                            l4437 0D62                              l4429 0D28                              l4509 0FD0  
                            l4541 07C7                              l4605 236F                              ?_pad 0030  
                            l3591 1B89                              l3751 14CE                              l3743 14B7  
                            l3735 1493                              l3727 147A                              l3719 1460  
                            l3671 13C6                              l3663 13B6                              l3911 177B  
                            l3903 1757                              l3831 15D7                              l3823 15C8  
                            l3815 15AF                              l3807 159F                              l4711 1C6F  
                            l4703 1C4C                              l4535 2154                              l4519 218A  
                            l4527 1001                              l4631 1DC3                              l4623 1DB1  
                            l4615 1D8A                              l3487 2289                              l3479 2273  
                            l3495 2798                              l3559 26AB                              l3567 26C7  
                            l3583 2624                              l3575 25D7                              l3655 1B4C  
                            l3647 1B2C                              l3639 1B0A                              l3399 2768  
                            l4199 068A                              l4295 1EA8                              l4287 1E8F  
                            l4279 1E61                              l4383 189D                              l4375 1880  
                            l4367 1873                              l4471 0EF7                              l4463 0E81  
                            l4455 0E32                              l4447 0DDD                              l4439 0D8B  
                            l4391 0C25                              l4551 07FD                              l4543 07CB  
                            l4607 2378                              l4801 1A4E                              l3593 1B92  
                            l3753 14D5                              l3761 14E7                              l3729 147F  
                            l3737 149B                              l3745 14BC                              l3673 13CB  
                            l3681 13DC                              l3665 13BC                              l3913 1780  
                            l3921 17AA                              l3905 175B                              l3841 15F5  
                            l3833 15DC                              l3825 15CC                              l3817 15B8  
                            l3809 15A3                              l4721 1CA6                              l4713 1C79  
                            l4705 1C54                              l4561 242B                              l4553 240D  
                            l4537 2159                              l4529 1007                              l4641 1DE2  
                            l4625 1DB2                              l4617 1DA0                              l4633 1DCB  
                            l4609 1D75                              l3489 2290                              l3497 279C  
                            l3569 26CC                              l3585 2627                              l3577 25EC  
                            l3657 220D                              l3649 1B35                              l4289 1E95  
                            l4297 1EB9                              l4385 18AF                              l4369 1876  
                            l4377 1885                              l4481 0F52                              l4473 0EFD  
                            l4457 0E44                              l4465 0E82                              l4449 0E01  
                            l4393 0C38                              l4545 07CF                              l4811 1A7E  
                            l4803 1A5A                              l3595 1B96                              l3587 1B58  
                            l3771 150C                              l3763 14EC                              l3755 14D9  
                            l3747 14C3                              l3739 14AD                              l3691 13F4  
                            l3683 13E5                              l3675 13D0                              l3667 13C0  
                            l3931 17DA                              l3923 17B7                              l3915 1788  
                            l3907 176F                              l3851 161F                              l3843 15FB  
                            l3835 15E5                              l3827 15D0                              l3819 15BA  
                            l4723 1CAB                              l4715 1C7D                              l4707 1C58  
                            l4563 243B                              l4555 2417                              l4571 18C8  
                            l4731 253A                              l4539 2180                              l4651 1DFB  
                            l4643 1DE9                              l4635 1DD2                              l4627 1DB5  
                            l4619 1DA9                              l3499 27A1                              l3579 2608  
                            l3659 2210                              l4299 1EBD                              l4387 18C7  
                            l4379 188E                              l4491 0F91                              l4475 0F12  
                            l4467 0E96                              l4483 0F53                              l4459 0E4E  
                            l4395 0C41                              l4547 07E9                              l4389 2175  
                            l4821 1AAA                              l4813 1A86                              l4805 1A62  
                            l3597 1BBE                              l3589 1B6D                              l3781 153A  
                            l3773 1511                              l3765 14ED                              l3757 14DB  
                            l3749 14CB                              l3693 13F9                              l3685 13EA  
                            l3677 13D9                              l3669 13C4                              l3941 17FF  
                            l3933 17E7                              l3925 17C1                              l3917 178C  
                            l3909 1776                              l3861 167A                              l3853 1639  
                            l3845 1604                              l3837 15E7                              l3829 15D2  
                            l4725 1CAF                              l4717 1C88                              l4709 1C60  
                            l4581 223F                              l4565 2444                              l4557 241B  
                            l4573 1918                              l4741 2550                              l4733 2545  
                            l4661 1E1A                              l4645 1DEA                              l4637 1DDB  
                            l4629 1DBE                              l4653 1E04                              l4485 0F66  
                            l4493 0F92                              l4477 0F27                              l4469 0ED4  
                            l4397 0C46                              l4549 07F4                              l4823 1AB6  
                            l4815 1A92                              l4807 1A6E                              l3599 1BC2  
                            l4831 2322                              l3791 1573                              l3775 1516  
                            l3783 1540                              l3767 14F1                              l3759 14E2  
                            l3695 13FE                              l3687 13EE                              l3679 13DA  
                            l3935 17EB                              l3927 17CF                              l3919 17A4  
                            l3871 16A9                              l3863 1681                              l3855 1646  
                            l3847 1605                              l3839 15F0                              l4727 1CB1  
                            l4719 1C92                              l4583 2247                              l4559 2424  
                            l4575 1934                              l4751 255A                              l4743 2552  
                            l4735 254A                              l4591 2462                              l4663 1E21  
                            l4655 1E09                              l4647 1DED                              l4639 1DE1  
                            l3951 22B1                              l3943 2296                              l4495 0FA4  
                            l4487 0F6F                              l4479 0F31                              l4399 0C4A  
                            l4567 0803                              l3961 21D3                              l4825 1ABA  
                            l4817 1A96                              l4809 1A72                              l3793 1579  
                            l3785 154D                              l3777 151E                              l3769 1505  
                            l3697 1407                              l3689 13F2                              l3937 17ED  
                            l3929 17D8                              l3881 16F9                              l3873 16BD  
                            l3865 168E                              l3857 1660                              l3849 1612  
                            l4729 1CBA                              l4585 224F                              l4577 2230  
                            l4761 2566                              l4753 255C                              l4745 2555  
                            l4737 254D                              l4593 246B                              l4665 1E29  
                            l4657 1E11                              l4649 1DF6                              l3953 22B9  
                            l3945 2299                              l4497 0FAD                              l4489 0F7D  
                            l4569 0814                              l4841 197C                              l4833 1935  
                            l3955 21C3                              l3971 2266                              l3963 2250  
                            l4819 1AA2                              l3795 157D                              l3787 1568  
                            l3779 1522                              l3699 1408                              l3939 17F6  
                            l3891 173F                              l3883 170E                              l3875 16C4  
                            l3867 1695                              l3859 166D                              l4691 1C11  
                            l4579 223C                              l4827 0815                              l4851 1808  
                            l4771 2573                              l4763 2568                              l4755 255F  
                            l4747 2556                              l4739 254F                              l4595 2471  
                            l4587 2447                              l4667 1E2E                              l4659 1E16  
                            l3947 22A0                              l4499 0FBC                              l4843 19B4  
                            l4835 1941                              l3957 21C8                              l3973 2267  
                            l3965 2257                              l4829 2303                              l3797 157F  
                            l3789 156B                              l3893 1743                              l3885 1725  
                            l3877 16D8                              l3869 16A2                              l4693 1C21  
                            l4853 180D                              l4781 257F                              l4773 2575  
                            l4765 256C                              l4757 2561                              l4749 2558  
                            l4589 2457                              l4669 1E33                              l3949 22AF  
                            l3981 1019                              l4597 2352                              l4861 1276  
                            l4837 1953                              l4845 21A6                              l3959 21C9  
                            l3975 226A                              l3967 225B                              l4791 1A45  
                            l3799 158B                              l3895 1745                              l3887 172C  
                            l3879 16E5                              l4695 1C31                              l4687 1C08  
                            l4855 1834                              l4783 2581                              l4775 2578  
                            l4767 256F                              l4759 2563                              l3991 106A  
                            l3983 1037                              l4599 235A                              l4871 12D9  
                            l4863 127B                              l4839 197B                              l4847 21A9  
                            l3969 2261                              l4793 1A47                              l3897 174C  
                            l3889 1738                              l4697 1C3A                              l4689 1C0D  
                            l4857 1856                              l4849 1801                              l4785 2583  
                            l4777 257A                              l4769 2571                              l3993 1070  
                            l3985 103C                              l3977 100F                              l4881 1395  
                            l4873 12DE                              l4865 127F                              l4795 1A48  
                            l4787 1A38                              l3899 1751                              l4699 1C3B  
                            l4779 257C                              l3995 1076                              l3987 105F  
                            l3979 1011                              l4883 139F                              l4875 12F8  
                            l4867 12BD                              l4859 126E                              l4971 1CCB  
                            l4797 1A49                              l4789 1A3C                              l3997 107D  
                            l3989 1062                              l4877 1379                              l4869 12CF  
                            l4981 1D12                              l4973 1CCD                              l4965 1CBB  
                            l4799 1A4A                              l3999 1082                              l4879 138F  
                            l4991 1D5E                              l4983 1D2D                              l4975 1CE9  
                            l4967 1CBE                              l4993 1D5F                              l4985 1D32  
                            l4977 1CEC                              l4969 1CC0                              l4995 1D63  
                            l4987 1D55                              l4979 1CEF                              l4997 1D66  
                            l4989 1D58                              STR_1 2871                              STR_2 2899  
                            STR_3 284D                              STR_4 28B9                              STR_5 28A8  
                            STR_6 287E                              STR_7 281C                              STR_8 28C6  
                            STR_9 28CE                              u4000 0BB4                              u4001 0BB3  
                            u4010 0BBB                              u4011 0BBA                              u4100 0C21  
                            u4020 0BC5                              u4101 0C20                              u4021 0BC4  
                            u4030 0BD1                              u4110 2339                              u4031 0BD0  
                            u4111 2338                              u4040 0BDF                              u4200 277B  
                            u4201 277A                              u4050 0BEE                              u5010 14AD  
                            u4130 2349                              u4210 19DA                              u4051 0BED  
                            u5011 14AC                              u4131 2348                              u4060 0BF9  
                            u5100 150C                              u5020 14C2                              u4220 19E8  
                            u4300 23E9                              u4061 0BF8                              u4045 0BDB  
                            u5101 150B                              u5021 14C1                              u5005 1494  
                            u4125 233E                              u4221 19E7                              u4301 23E7  
                            u4070 0BFE                              u5110 1516                              u5030 14CB  
                            u4230 19F5                              u4310 23EA                              _PIE0 0716  
                            u4071 0BFD                              u5111 1515                              u5031 14CA  
                            u5015 14A9                              u4215 19D6                              u4080 0C0C  
                            u5120 1522                              u5200 15D0                              u4240 19FF  
                            u4400 121E                              u3600 26DE                              u4320 2404  
                            u6000 1E50                              u4145 2508                              u4081 0C0B  
                            u5121 1521                              u5201 15CF                              u4241 19FE  
                            u3601 26DD                              u4321 2403                              u6001 1E4F  
                            _PIE3 0719                              u4090 0C13                              u5130 1530  
                            u5050 14D9                              u5210 15D7                              u4250 1A11  
                            u4410 1228                              u4330 115D                              u3610 26E3  
                            u4170 273D                              u6010 1E6D                              _PIE4 071A  
                            u4155 2516                              u4091 0C12                              u5051 14D8  
                            u5211 15D6                              u4251 1A10                              u4235 19F1  
                            u4411 1227                              u3611 26E2                              u4171 273C  
                            u6011 1E6C                              u3700 09CB                              u5140 154D  
                            u5220 15DC                              u6100 1F68                              u4500 279C  
                            u4260 1A1E                              u4420 1247                              u4340 117D  
                            u3620 26F5                              u4180 274C                              u6020 1E7B  
                            u4165 2526                              u3701 09CA                              u5141 154C  
                            u5045 14CF                              u5221 15DB                              u6101 1F67  
                            u4501 279B                              u4405 121A                              u4341 117C  
                            u3621 26F4                              u4181 274B                              u6021 1E7A  
                            u3710 09EB                              u5150 1568                              u5070 14EB  
                            u5310 1743                              u5230 15F5                              u6110 1FC4  
                            u4510 27A8                              u4270 1A29                              u4430 1251  
                            u4350 1183                              u3630 2714                              u4190 2776  
                            u6030 1E94                              u3711 09EA                              u5151 1567  
                            u5135 152C                              u5071 14EA                              u5311 1742  
                            u5231 15F4                              u6111 1FC2                              u4511 27A7  
                            u4271 1A27                              u4431 1250                              u4351 1182  
                            u4335 1159                              u3631 2713                              u4191 2775  
                            u6031 1E93                              u3800 0A9E                              u3720 09F5  
                            u5160 157D                              u5080 14F1                              u5400 17B7  
                            u5240 15FA                              u4440 21EA                              u6120 1FC5  
                            u4520 27BA                              u4600 2680                              u4280 1A2A  
                            u4360 1194                              u3640 23A2                              u6040 1EB7  
                            u6200 0C38                              u3801 0A9D                              u3721 09F4  
                            u5161 157C                              u5145 1549                              u5081 14F0  
                            u5065 14DC                              u5401 17B6                              u5305 1739  
                            u5241 15F9                              u4441 21E8                              u4521 27B9  
                            u4601 267F                              u4265 1A1A                              u4425 1243  
                            u4345 1179                              u3641 23A1                              u6041 1EB6  
                            u6025 1E77                              u6201 0C37                              u3810 0AAB  
                            u3730 09FC                              u5090 1505                              u5410 17CF  
                            u5330 1755                              u5170 15A3                              u4450 21EB  
                            u6130 1FE6                              u4610 268C                              u4370 11C0  
                            u3650 22CE                              u4290 2301                              u6050 1EE8  
                            u6210 0C5D                              u3811 0AAA                              u3731 09FB  
                            u5155 1564                              u5091 1504                              u5411 17CE  
                            u5331 1754                              u5171 15A2                              u6131 1FE5  
                            u4611 268B                              u4371 11BF                              u3635 2710  
                            u3651 22CD                              u4195 2772                              u4291 2300  
                            u6051 1EE7                              u6211 0C5C                              u3900 0B18  
                            u3740 0A01                              u5420 17EB                              u5340 175B  
                            u5180 15AA                              u4460 227B                              u6140 1FED  
                            u4540 27CB                              u4620 2698                              u4700 2608  
                            u4380 11D6                              u3660 2204                              u5500 107D  
                            u6060 1EED                              u6300 0DB4                              u6220 0C79  
                            u7020 1D12                              u3901 0B17                              u3741 0A00  
                            u5421 17EA                              u5405 17B3                              u5341 175A  
                            u5325 1746                              u5181 15A9                              u4461 227A  
                            u6141 1FEC                              u4541 27CA                              u4621 2697  
                            u4701 2607                              u4365 1190                              u3661 2202  
                            u5501 107C                              u6061 1EEC                              u6045 1EB3  
                            u6301 0DB3                              u6221 0C78                              u7021 1D11  
                            u3910 0B5A                              u3830 0AC1                              u3750 0A1B  
                            u5350 176F                              u5270 1704                              u5190 15AF  
                            u5430 22A0                              u4710 2622                              u4390 11E0  
                            u3670 2205                              u5510 10B8                              u6070 1F10  
                            u6150 1873                              u6310 0DDD                              u6230 0CC0  
                            u7030 1D55                              u3911 0B59                              u3903 0B14  
                            u3831 0AC0                              u3751 0A1A                              u5415 17CB  
                            u5351 176E                              u5255 167B                              u5191 15AE  
                            u5431 229F                              u4535 27BE                              u4711 2621  
                            u4391 11DF                              u5511 10B6                              u6071 1F0F  
                            u6055 1EE4                              u6151 1872                              u6311 0DDC  
                            u6231 0CBE                              u7031 1D54                              u4720 1B6D  
                            u3920 0B74                              u3840 0AC6                              u3760 0A1F  
                            u3680 09BF                              u5360 1776                              u5280 171B  
                            u5440 22AF                              u6080 1F30                              u4560 27DC  
                            u4640 26A9                              u4800 1B03                              u5600 01F4  
                            u5520 10CB                              u6160 188E                              u6320 0E06  
                            u6240 0CC1                              u6400 07F3                              u7040 1D5E  
                            u4721 1B6C                              u3921 0B73                              u3841 0AC5  
                            u3825 0AAF                              u3761 0A1E                              u3681 09BE  
                            u5361 1775                              u5265 16AA                              u5441 22AE  
                            u6081 1F2F                              u4561 27DB                              u4641 26A8  
                            u4801 1B02                              u4385 11D2                              u5601 01F3  
                            u5521 10C9                              u6161 188D                              u6321 0E05  
                            u6401 07F2                              u7041 1D5D                              u4730 1B89  
                            u3930 0B79                              u3850 0ACB                              u3770 0A7E  
                            u3690 09C6                              u5370 1780                              u6410 241B  
                            u4490 228F                              u6090 1F44                              u4650 26B5  
                            u4810 1B0A                              u5610 024E                              u5530 10CC  
                            u6170 1897                              u6330 0E32                              u6250 0CF4  
                            u4731 1B88                              u3931 0B78                              u3851 0ACA  
                            u3771 0A7D                              u3691 09C5                              u5371 177F  
                            u5275 1700                              u6411 241A                              u4491 228E  
                            u4475 2280                              u6091 1F43                              u4555 27CE  
                            u4651 26B4                              u4635 269C                              u4715 261E  
                            u4811 1B09                              u5611 024D                              u6075 1F0C  
                            u6171 1896                              u6331 0E31                              u6251 0CF3  
                            u5460 2270                              u4740 1B96                              u3860 0AE1  
                            u3780 0A88                              u4900 13D0                              u5380 178C  
                            u6500 1DB0                              u4580 27ED                              u5700 02FB  
                            u5620 026E                              u5540 10F0                              u6180 189D  
                            u6340 0E96                              u6260 0D09                              u5461 226F  
                            u4741 1B95                              u3861 0AE0                              u3781 0A86  
                            u4901 13CF                              u5381 178B                              u5285 1717  
                            u6501 1DAF                              u4485 2285                              u4581 27EC  
                            u4565 27D8                              u5701 02FA                              u5621 026D  
                            u5541 10EF                              u6181 189C                              u6341 0E95  
                            u6261 0D08                              u4750 1BC2                              u3950 0B8F  
                            u3870 0AE5                              u3790 0A89                              u4910 13F2  
                            u5390 179A                              u6510 1DC9                              u4590 27F4  
                            u4670 26C5                              u4830 1B24                              u5710 02FF  
                            u5630 0275                              u5550 00EC                              u5470 1037  
                            u6190 18AD                              u6350 0EC9                              u6270 0D28  
                            u5455 21CC                              u4751 1BC1                              u3951 0B8E  
                            u3871 0AE4                              u3775 0A7A                              u4911 13F1  
                            u5295 1726                              u6511 1DC8                              u7207 1DB9  
                            u4591 27F3                              u4575 27E3                              u4671 26C4  
                            u4655 26B1                              u4831 1B23                              u5711 02FE  
                            u5631 0274                              u5551 00EB                              u5471 1036  
                            u6191 18AC                              u6351 0EC7                              u6271 0D27  
                            u4760 1C00                              u3960 0B94                              u3880 0AF2  
                            u4920 13F9                              u6440 243A                              u6520 1DD2  
                            u4680 26CC                              u4840 1B2C                              u5800 0563  
                            u5720 030B                              u5640 0288                              u5560 00FF  
                            u5480 1070                              u6360 0ECA                              u6280 0D80  
                            u4761 1BFF                              u3961 0B93                              u3945 0B85  
                            u3881 0AF1                              u4921 13F8                              u6441 2439  
                            u6425 2425                              u7217 1DF1                              u6521 1DD1  
                            u4681 26CB                              u4665 26BB                              u4841 1B2B  
                            u4825 1B16                              u5801 0562                              u5721 030A  
                            u5641 0287                              u5561 00FD                              u5481 106F  
                            u6281 0D7E                              u3970 0B9F                              u4930 13FE  
                            u6610 1C0D                              u6450 192D                              u6530 1DDB  
                            u4690 25EC                              u4770 219F                              u5810 056A  
                            u5730 030F                              u5650 029D                              u5570 0100  
                            u5490 1075                              u6370 0EFD                              u6290 0D81  
                            u7307 1AA6                              u7227 1A40                              u3971 0B9E  
                            u4931 13FD                              u5395 1796                              u6611 1C0C  
                            u6435 242C                              u6531 1DDA                              u4691 25EB  
                            u4771 219E                              u5811 0569                              u5731 030E  
                            u5651 029C                              u5491 1074                              u6371 0EFC  
                            u3980 0BA7                              u4940 141A                              u6700 1C83  
                            u6620 1C11                              u6460 2246                              u6540 1DE8  
                            u4860 1B45                              u4780 1AD7                              u5900 068A  
                            u5820 0570                              u5740 0320                              u5660 02B2  
                            u5580 0124                              u6380 0F66                              u7317 1AB2  
                            u7237 1A52                              u4765 1BFC                              u3981 0BA6  
                            u4941 1419                              u6701 1C82                              u6621 1C10  
                            u6461 2245                              u6541 1DE7                              u4861 1B44  
                            u4781 1AD6                              u5901 0689                              u5821 056F  
                            u5741 031F                              u5661 02B1                              u5645 0284  
                            u5581 0123                              u6381 0F65                              u3990 0BAE  
                            u4950 1439                              u6710 1C88                              u6630 1C31  
                            u6470 247B                              u6550 1E01                              u4870 1B4C  
                            u4790 1AEE                              u5910 06A9                              u5830 0574  
                            u5750 0423                              u5670 02C1                              u5590 0186  
                            u6390 0FA4                              u7327 1ABE                              u7247 1A5E  
                            u3991 0BAD                              u3895 0AF6                              u4951 1438  
                            u6711 1C87                              u6631 1C30                              u6455 1929  
                            u6471 247A                              u6551 1E00                              u4871 1B4B  
                            u4855 1B38                              u5911 06A8                              u5831 0573  
                            u5751 0422                              u5671 02C0                              u5591 0185  
                            u6391 0FA3                              u4960 147F                              u4880 13C4  
                            u6720 1C9C                              u6800 180D                              u6560 1E09  
                            u6480 1D8A                              u5920 06B9                              u5840 0580  
                            u5760 0476                              u5680 02DD                              u7337 2258  
                            u7257 1A6A                              u4961 147E                              u4881 13C3  
                            u6801 180C                              u6561 1E08                              u6481 1D89  
                            u5921 06B8                              u5841 057F                              u5761 0475  
                            u5681 02DC                              u4890 13CB                              u6730 1CAB  
                            u6650 1C52                              u6570 1E21                              u6490 1DA0  
                            u5930 0710                              u5850 0584                              u5770 04A7  
                            u5690 02F5                              u6810 127B                              u7347 225E  
                            u7267 1A76                              u4891 13CA                              u6731 1CAA  
                            u6651 1C51                              u6571 1E20                              u6491 1D9F  
                            u4795 1AEA                              u5931 070F                              u5851 0583  
                            u5771 04A6                              u5755 041F                              u5691 02F4  
                            u5675 02BD                              u6811 127A                              u6740 1CAF  
                            u5940 071F                              u5860 05BF                              u5780 04AC  
                            u6820 127F                              u7357 2533                              u7277 1A82  
                            u6741 1CAE                              u6725 1C98                              u6645 1C45  
                            u5941 071E                              u5861 05BE                              u5781 04AB  
                            u5685 02D9                              u6821 127E                              u7197 1D6A  
                            u4990 1491                              u6670 1C6D                              u6750 2544  
                            u5950 072B                              u5870 066C                              u5790 04F7  
                            u6830 12DE                              u7367 216D                              u7287 1A8E  
                            u4991 1490                              u4975 1480                              u6671 1C6C  
                            u6751 2543                              u6495 1D9C                              u5951 072A  
                            u5871 066B                              u5791 04F6                              u6831 12DD  
                            u6760 2322                              u5960 075C                              u5880 067C  
                            u6840 1395                              u7297 1A9A                              u6761 2321  
                            u4985 1487                              u6665 1C61                              u5961 075A  
                            u5945 071B                              u5881 067B                              u6841 1394  
                            u6690 1C7D                              u5970 075D                              u5890 0685  
                            u6770 1953                              u6691 1C7C                              u5891 0684  
                            u5875 0668                              u6771 1952                              u5980 0781  
                            u6780 21B0                              u6685 1C72                              u5981 0780  
                            u5885 0678                              u6781 21AF                              u6790 1808  
                            u5990 1E42                              u6791 1807                              u6775 194F  
                            _TMR0 059C                              _TMR1 020C         __size_of_OLED_pulseEnable 0009  
                   __CFG_FCMEN$ON 0000                     OLED_send@mode 0023                              _dbuf 0320  
                            _atoi 1F19                              _main 1CBB                              _prec 0166  
                            _nout 0248                              pad@i 0034                              pad@p 0031  
                            fsr0h 0005                              fsr1h 0007                              indf0 0000  
                            fsr0l 0004                              indf1 0001                              fsr1l 0006  
                            pad@w 0036                              _stoa 1E36                              btemp 007E  
                   __CFG_BOREN$ON 0000                     ___fpclassifyf 19B5                              start 0095  
                     ?_OLED_write 0070                   ___fldiv@new_exp 005A                    ?_pushButtonISR 0070  
                    _tolower$1376 002C                     __CFG_CSWEN$ON 0000                     __CFG_MCLRE$ON 0000  
                           ??_ISR 007A                             ??_ema 0034                             ??_pad 0033  
              __size_of_OLED_init 008B                __size_of_OLED_send 0018                     ___fltol@sign1 0029  
                           ?_atoi 0026                   __end_of___fladd 0C23                             ?_main 0070  
                 __end_of___fldiv 1595                   __end_of___awdiv 2800                   __end_of___flneg 21A4  
                           STR_12 28CA                             STR_13 28D2                             STR_16 28D6  
                   __CFG_WDTE$OFF 0000                             STR_18 28D6                   __end_of___awmod 26D8  
                 __end_of___flmul 1800                   __end_of___flsub 222E                   __end_of___fltol 1B58  
                           ?_stoa 0028                             _T1CLK 0211                   ___awdiv@divisor 0020  
                           _T1CON 020E                   __end_of___llmod 25D7                             _IOCAN 1F3E  
                           _IOCAP 1F3D                             _IOCCN 1F54                             i1l300 2641  
                           i1l301 265E                             i1l302 2679                             i1l303 2675  
                           i1l312 23AB                             i1l304 2679                             i1l313 23D7  
                           i1l314 23BD                             i1l315 23D6                             i1l307 24EE  
                           i1l316 23CF                             i1l308 24F8                             i1l317 23D5  
                           i1l309 24F9                             i1l318 23D7                             i1l280 0043  
                           i1l281 002C                             i1l282 0036                             i1l290 0093  
                           i1l283 0040                             i1l284 0092                             i1l285 0091  
                           i1l286 0081                             i1l278 0019                             i1l279 0093  
                           i1l287 0079                             i1l288 0090                             i1l289 008F  
                           i1l810 2591                             i1l811 25A2                             i1l299 2635  
                           i1l812 25A3                             i1l813 25BE                             i1l814 25CC  
                           i1l815 25D6                             i1l808 25CD                             i1l809 259D  
                 ___awdiv@counter 0025                      vfpfcnvrt@fmt 00E8                             _TRISA 0012  
                           _TRISB 0013                             _TRISC 0014            uartReceiveISR@checksum 016A  
             ___lmul@multiplicand 0024              __size_of_checkStatus 0026                     __CFG_WRTB$OFF 0000  
                   __CFG_WRTC$OFF 0000                    OLED_send@value 0025                             _getPB 218A  
                           _flags 0168                             ema@in 002C                             _fputc 26D8  
                           _fputs 2379                   __end_of_isdigit 21F3                             atoi@n 0033  
                           pad@fp 0038                             atoi@s 0026                             _width 0164  
                           _putch 07FE                   __end_of_isspace 22BA                   __end_of_isupper 220D  
                 __end_of_timeNow 0815                             stoa@i 0034                             stoa@l 003D  
                           stoa@p 003B                             stoa@s 0028                             stoa@w 0036  
                           status 0003                             wtemp0 007E                   __end_of_sprintf 2379  
                  ?___fpclassifyf 0020                   __end_of_tolower 240D                   __end_of_strncmp 18C8  
                 __end_of_strncpy 24BB                   __initialization 0097                      __end_of_atoi 2000  
                    __end_of_main 1D73                      __end_of_stoa 1F19                    __CFG_SAFEN$OFF 0000  
                      _g_10msTick 007D                            ??_atoi 0028                            ??_main 0157  
                          ??_stoa 002A                  _handleSensorData 1801                 ?_adcGetConversion 0020  
                  OLED_print_xy@s 0028                ??_adcGetConversion 0022      __size_of_convertAnalogValues 019C  
             __size_of_OLED_write 000C                            ?_getPB 0070           _OLED_scrollDisplayRight 2159  
                          _ADCON1 009E                            ?_fputc 0020                  ___llmod@dividend 0074  
                          ?_fputs 0028                            _ADRESH 009C                            _ADRESL 009B  
                ___awdiv@dividend 0022                            _ANSELA 1F38                            ?_putch 0070  
                          _ANSELB 1F43                            _ANSELC 1F4E                __CFG_RSTOSC$HFINT1 0000  
                          _T0CON0 059E                            _T0CON1 059F                   _g_sensorVersion 0238  
                          _RC1REG 0119                            _RC1STA 011D                            i1l1150 24A3  
                          i1l1151 24BA                            i1l1152 24BA                            i1l1145 249B  
                          i1l1146 2483                            i1l1147 249A                            i1l1148 24A2  
                          i1l1149 24AD                            _RC6PPS 1F26                            i1l5001 000B  
                          i1l5011 0021                            i1l5003 000F                            i1l5021 0033  
                          i1l5013 0026                            i1l5005 0013                            i1l5031 0047  
                          i1l5023 0036                            i1l5015 0029                            i1l5007 0016  
                          i1l5041 007E                            i1l5033 004B                            i1l5025 003A  
                          i1l5017 002C                            i1l5009 001D                            i1l5043 0085  
                          i1l5035 004F                            i1l5027 003D                            i1l5019 0030  
                          i1l5045 0089                            i1l5037 0073                            i1l5029 0040  
                          i1l5047 008C                            i1l5039 0079                    __CFG_WDTCCS$SC 0000  
                          i1l4901 23CF                            i1l4911 24EE                            i1l4903 24BB  
                          i1l4671 247E                            i1l4913 24F2                            i1l4905 24C7  
                          i1l4681 24A3                            i1l4673 2483                            i1l4921 262F  
                          i1l4915 24F8                            i1l4907 24E4                            i1l4683 24A8  
                          i1l4675 2487                            i1l4931 2647                            i1l4923 2635  
                          i1l4909 24E8                            i1l4677 2499                            i1l4685 24AD  
                          i1l4941 2675                            i1l4933 2659                            i1l4925 263A  
                          i1l4917 2628                            i1l4951 259D                            i1l4679 249B  
                          i1l4943 2677                            i1l4935 265E                            i1l4927 263C  
                          i1l4919 262D                            i1l4953 25A3                            i1l4961 25CD  
                          i1l4945 2586                            i1l4937 2664                            i1l4929 2641  
                          i1l4963 25D6                            i1l4955 25B5                            i1l4947 258E  
                          i1l4891 23B1                            i1l4939 2668                            i1l4957 25BE  
                          i1l4949 2591                            i1l4893 23B7                            i1l4885 23A4  
                          i1l4959 25C5                            i1l4895 23BD                            i1l4887 23A9  
                          i1l4897 23C3                            i1l4889 23AB                            i1l4899 23C9  
                          i1l4999 0006                            _INTCON 000B                 __end_of_OLED_init 1AC3  
                          u700_25 25BF                            u701_20 25CB                            u701_21 25CA  
                          u710_20 0030                            u710_21 002F                            u711_20 003A  
               __end_of_OLED_send 21D9                            u711_21 0039                            u712_20 0047  
                          u712_21 0046                            u713_20 004B                            u705_20 000B  
                          u713_21 004A                            u705_21 000A                            u714_20 004F  
                          u706_20 000F                            u714_21 004E                            u706_21 000E  
                          u715_20 0073                            u707_20 001D                            u715_21 0072  
                          u707_21 001C                            u660_20 24B9                            u716_20 0085  
                          u708_20 0021                            u660_21 24B8                            u716_21 0084  
                          u708_21 0020                            _OSCFRQ 0893                            u717_20 0089  
                          u709_20 0026                            u717_21 0088                            u709_21 0025  
                          u690_20 24E8                            u658_20 2498                            u690_21 24E7  
                          u658_21 2497                            u691_20 24F2                            u659_20 24A1  
                          u691_21 24F1                            u659_21 24A0                            u692_20 262D  
                          u692_21 262C                            u685_20 23A9                            u693_20 263A  
                          u685_21 23A8                            u693_21 2639                            u686_20 23B1  
                          u694_20 2647                            u686_21 23B0                            u694_21 2646  
                          u687_20 23B7                            u695_20 2664                            u687_21 23B6  
                          u695_21 2663                            u696_20 258E                            u688_20 23C3  
                          u696_21 258D                            u688_21 23C2                            _SPBRGL 011B  
                          u689_20 23C9                            u689_21 23C8                            u697_25 2592  
                          u698_20 25A1                            u698_21 25A0                            _TX1REG 011A  
                          u699_20 25B5                            u699_21 25B4                            u699_25 25B1  
                          _TX1STA 011E                  __end_of___xxtofl 1CBB                   ??_pushButtonISR 0070  
                  __CFG_PWRTE$OFF 0000                      vfprintf@cfmt 0136                            ___flge 1B58  
                          ___fleq 25D7                            ___lmul 240D                         ??___fladd 0050  
                          ___wmul 2273                         ??___fldiv 0050                         ??___awdiv 0024  
                       ??___flneg 0024                    __CFG_STVREN$ON 0000                         ??___awmod 0024  
                       ??___flmul 0036                         ??___flsub 0068                         ??___fltol 0024  
                       ??___llmod 0078                            _efgtoa 100D          __size_of_OLED_returnHome 0005  
                          _floorf 1129                            ema@tmp 003C                       menuInput@pb 002F  
                ___awdiv@quotient 0027                   ___awmod@divisor 0020                            _rotISR 24BB  
                   ?_OLED_command 0070                   ___awmod@counter 0025                            pad@buf 0030  
                          _strcpy 22DE                            _strlen 22BA                            fputc@c 0020  
                          fputs@c 002C                            fputs@i 002D                            fputs@s 002F  
                       ??_isdigit 0022                      _g_dataPacket 024E                __size_of__Umul8_16 0027  
                 ___fpclassifyf@e 002A                   ___fpclassifyf@u 002C                   ___fpclassifyf@x 0020  
         adcGetConversion@channel 0023                  __end_of_showMenu 13B6             OLED_waitForReady@busy 0020  
                       ??_isspace 0022                         ??_isupper 0022                         ??_timeNow 0024  
               OLED_command@value 0026                            stoa@cp 0039                            stoa@fp 0038  
                     _g_100msTick 0160                            putch@c 0070                  __end_of_vfprintf 07FE  
                       ??_sprintf 014B                         ??_tolower 0028                         ??_strncmp 0024  
                       ??_strncpy 0073                  _OLED_pulseEnable 216A                        ___flge@ff1 0048  
                      ___flge@ff2 004C                   ??___fpclassifyf 0024                      ___xxtofl@arg 002A  
                    ___xxtofl@exp 0029                      ___xxtofl@val 0020                        ___fleq@ff1 0020  
                      ___fleq@ff2 0024           __end_of__initialization 00CD                        ___flneg@f1 0020  
                      ___fltol@f1 0020          __size_of_OLED_write4bits 0040                    __pcstackCOMMON 0070  
                    __pidataBANK4 21B2                     __end_of_getPB 2196           convertAnalogValues@avgI 024A  
         convertAnalogValues@avgT 01EA           convertAnalogValues@avgV 024C              uartReceiveISR@buffer 02A0  
                   __end_of_fputc 2736                     __end_of_fputs 23A4                     __end_of_putch 07FF  
                  ??_OLED_command 0026                __size_of_getRotDir 000C         ??_OLED_scrollDisplayRight 0027  
                         ??_getPB 0020            __size_of_OLED_print_xy 0038                           ??_fputc 0023  
                         ??_fputs 0029                           ??_putch 0020                        __pbssBANK2 0160  
                      __pbssBANK3 01EA                        __pbssBANK4 0220                        __pbssBANK5 02A0  
                      __pbssBANK6 0320           __size_of_uartReceiveISR 0052                __size_of_menuInput 00C3  
                    ??_OLED_write 0026                 __end_of__Umul8_16 2350                        _efgtoa$920 00BD  
                      _efgtoa$914 00B7                        _efgtoa$908 00B3                        _efgtoa$909 00B5  
                      _efgtoa$918 00B9                        _efgtoa$919 00BB                        __pmaintext 1CBB  
                         ?___flge 0048                           ?___fleq 0020                           ?___lmul 0020  
                         ?___wmul 0020                   __CFG_PPS1WAY$ON 0000                        __pintentry 0004  
                         ?_efgtoa 00AA                           ?_floorf 0062                 _OLED_waitForReady 2250  
                  ___lmul@product 0028                           ?_rotISR 0070          ??_OLED_scrollDisplayLeft 0027  
                         ?_strcpy 0020                           ?_strlen 0020                __size_of_timeSince 0080  
              ?_OLED_waitForReady 0070                 ??_OLED_returnHome 0027                         ?___xxtofl 0020  
                         _OSCCON1 088D                __size_of_vfpfcnvrt 03DD                __end_of_OLED_write 218A  
             ??_OLED_waitForReady 0020                       rotISR@input 0077          __end_of_handleSensorData 185D  
               __end_of_getRotDir 100D               _convertAnalogValues 0815                        ema@average 002E  
                       ?_showMenu 0070                     _OLED_print_xy 2445         __end_of_OLED_waitForReady 2273  
                 __size_of___flge 00AE                   __size_of___fleq 0051                           ___fladd 09B1  
                         ___fldiv 13B6                           ___awdiv 2796                           ___flneg 2196  
                 __size_of___lmul 0038                           ___awmod 267A                           ___flmul 1595  
                         ___flsub 220D                           ___fltol 1AC3                   __size_of___wmul 0023  
                         ___llmod 2586                   OLED_write@value 0026                         ?_vfprintf 0130  
                 __size_of_efgtoa F7B8                     ?_uartSendByte 0070                   __size_of_floorf 0145  
               ??_OLED_write4bits 0020                   menuInput@pbLong 002A                        _initialize 253A  
                         _g_tempC 0244                   __size_of_rotISR 003F                           __ptext1 21A4  
                         __ptext2 1935                           __ptext3 0803                           __ptext4 126E  
                         __ptext5 2350                           __ptext6 07C5                           __ptext7 0C23  
                         __ptext8 185D                           __ptext9 1E36                           _g_power 0228  
                   ??_checkStatus 0058                   __CFG_WRTAPP$OFF 0000                   __size_of_strcpy 0025  
                 __size_of_strlen 0024                      __size_of_ISR 0091                      __size_of_ema 006D  
               __end_of_menuInput 1E36                      __size_of_pad 0060                      menuInput@dir 002E  
                         _isdigit 21D9                        ??___xxtofl 0024                  ___awmod@dividend 0022  
            ?_convertAnalogValues 0070                           _isspace 2296                         _IOCAFbits 1F3F  
                 __CFG_WRTSAF$OFF 0000                           _isupper 21F3                           efgtoa@c 00AE  
                         efgtoa@d 00C7                           efgtoa@e 00E0                           efgtoa@f 00AA  
                         efgtoa@g 00DC                           efgtoa@h 00D2                           efgtoa@i 00DA  
                         efgtoa@l 00D6                           efgtoa@m 00C3                           efgtoa@n 00E2  
                         efgtoa@p 00CC                           efgtoa@t 00BF                           efgtoa@u 00E4  
                         efgtoa@w 00CF                           _timeNow 0803                           atoi@neg 002C  
                         _sprintf 2350                           _tolower 23D8                           clrloop0 215F  
                         _strncmp 185D                           _strncpy 247D                    main@sensorTime 0158  
            end_of_initialization 00CD                           floorf@e 00A4                           floorf@m 00A0  
                         floorf@u 00A6                           floorf@x 0062              __end_of_OLED_command 217E  
                         fputc@fp 0022                           init_ram 2164         __size_of_adcGetConversion 0022  
                         fputs@fp 0028                           initloop 2165                 __end_of_timeSince 19B5  
                       _OLED_init 1A38                         _OLED_send 21C1               OLED_setCursor@F7345 0268  
                  ?_OLED_print_xy 0027                OLED_print_xy@F7353 0264                 __end_of_vfpfcnvrt 1000  
                      efgtoa@mode 00D1                        efgtoa@sign 00C9                        ??_showMenu 0155  
                         psplit$0 27005D                       showMenu@s12 01DD  
                  ??_uartSendByte 0020                        ??_vfprintf 0133             __CFG_WDTCPS$WDTCPS_31 0000  
        __end_of_OLED_pulseEnable 2173                           strcpy@d 0026                           strlen@a 0024  
                         strcpy@s 0024                           strlen@s 0020                         _PORTAbits 000C  
                       _PORTCbits 000E   __size_of_OLED_scrollDisplayLeft 0005                       ___fladd@grs 005F  
           ??_convertAnalogValues 0062                     ___xxtofl@sign 0028                         _TRISCbits 0014  
                     ___fldiv@grs 005C                       ___fldiv@rem 0055               __end_of_checkStatus 2329  
                __CFG_FEXTOSC$OFF 0000                    _uartReceiveISR 2628                       ___flmul@grs 003C  
                      ?_OLED_init 0070                        ?_OLED_send 0023             __end_of_pushButtonISR 23D8  
      __size_of_OLED_waitForReady 0023                    __end_of___flge 1C06                    __end_of___fleq 2628  
                  __end_of___lmul 2445                       vfpfcnvrt@ap 00E9                       vfpfcnvrt@cp 0126  
                     vfpfcnvrt@ct 012B                       vfpfcnvrt@fp 012F                    __end_of___wmul 2296  
                  __end_of_efgtoa 07C5                 main@sensorTimeout 015C                       ?_initialize 0070  
                  __end_of_floorf 126E                        floorf@F514 0220                    __end_of_rotISR 24FA  
                  __end_of_strcpy 2303                    __end_of_strlen 22DE               start_initialization 0097  
           uartReceiveISR@rxCount 007B                       __end_of_ISR 0095                       __end_of_ema 1935  
                     __end_of_pad 2796          OLED_print_xy@row_offsets 002B            __end_of_uartReceiveISR 267A  
          _OLED_scrollDisplayLeft 2154             __end_of___fpclassifyf 1A38                   ___llmod@divisor 0070  
                 ___llmod@counter 0079                   ??_OLED_print_xy 002A                  __CFG_LPBOREN$OFF 0000  
                     vfprintf@fmt 0130                          ??___flge 0050                          ??___fleq 0028  
                  timeSince@since 0024                          ??___lmul 0028                   _OLED_returnHome 214F  
                        ??___wmul 0024                        menuInput@n 0030                     _g_curRotState 007C  
                        ??_efgtoa 006C                         __Umul8_16 2329                       __pdataBANK4 025D  
                        ??_floorf 0066                       _g_dataReady 016D                          ??_rotISR 0070  
                        ??_strcpy 0022                          ??_strlen 0022                  OLED_print_xy@col 002F  
                       ___fladd@a 004C                         ___fladd@b 0048                  OLED_print_xy@row 0027  
                     _checkStatus 2303                         ___fldiv@a 0048                         ___fldiv@b 004C  
                     _g_dewPointC 023C                         ___flmul@a 0032                         ___flmul@b 002E  
                     __pbssCOMMON 007B                         ___flsub@a 0060                         ___flsub@b 0064  
                       ___latbits 0003                     __pcstackBANK0 0020                     __pcstackBANK1 00A0  
                   __pcstackBANK2 0120                     __pcstackBANK3 01A0             __size_of_OLED_command 000B  
          convertAnalogValues@adc 0066                 __size_of___xxtofl 00B5                   ?_uartReceiveISR 0070  
            __end_of_uartSendByte 21B2                  _adcGetConversion 222E               __size_of_initialize 004C  
                       _atoi$1254 002E                         _atoi$1255 0032                         _atoi$1256 0030  
               ?_handleSensorData 0070                   _OLED_write4bits 24FA                       ??_OLED_init 0027  
                     ??_OLED_send 0024                         _g_pbState 016B                         _g_current 022C  
              ??_handleSensorData 002E                     _g_rxFErrCount 016E                         _g_tempAux 0234  
                        ?___fladd 0048                          ?___fldiv 0048                          ?___awdiv 0020  
                        ?___flneg 0020                          ?___awmod 0020                          ?___flmul 002E  
                        ?___flsub 0060                          ?___fltol 0020                          ?___llmod 0070  
                       _getRotDir 1001                        ?__Umul8_16 0020                 __size_of_showMenu 0148  
                       _g_voltage 0230          ?_OLED_scrollDisplayRight 0070                      _OLED_command 2173  
               __size_of_vfprintf 0039                 menuInput@numPages 0027                          _BAUD1CON 011F  
        _convertAnalogValues$1540 0062                          ?_isdigit 0020                          ?_isspace 0020  
                        ?_isupper 0020                          ?_timeNow 0020                    __size_of_getPB 000C  
                       _menuInput 1D73                        pnum$text10 0027                          ?_sprintf 0138  
                        ?_tolower 0026                    __size_of_fputc 005E                    __size_of_fputs 002B  
                        ?_strncmp 0020                          ?_strncpy 0070                     _g_rxOErrCount 01EC  
                  __size_of_putch 0001                    ___wmul@product 0024                          _LATAbits 0018  
                        _LATBbits 0019                          _LATCbits 001A           __end_of_OLED_returnHome 2154  
                       clear_ram0 215E                          _PIE0bits 0716                          _PIE3bits 0719  
                        _PIE4bits 071A                          _PIR0bits 070C                          _PIR3bits 070F  
                        _PIR4bits 0710                         _timeSince 1935                 __CFG_BBSIZE$BB512 0000  
                      showMenu@pb 01E9                        ?_getRotDir 0070                         _vfpfcnvrt 0C23  
               ?_OLED_pulseEnable 0070                        _ADCON0bits 009D                 ___wmul@multiplier 0020  
                    _RX1DTPPSbits 1ECB                ??_OLED_pulseEnable 0020              OLED_write4bits@value 0022  
                    _isspace$1285 0024                  _transition_table 2800                        ?_menuInput 0027  
                      vfpfcnvrt@c 012E                        vfpfcnvrt@f 0127                 ___lmul@multiplier 0020  
         __end_of_OLED_write4bits 253A                     _g_sensorTimer 016F                     uartSendByte@s 0020  
                      vfprintf@ap 0132                        vfprintf@fp 0135                        ?_timeSince 0024  
 __end_of_OLED_scrollDisplayRight 215E                       ??__Umul8_16 0022                  __size_of___fladd 0272  
                __size_of___fldiv 01DF                  __size_of___awdiv 006A                  __size_of___flneg 000E  
     __end_of_convertAnalogValues 09B1                  __size_of___awmod 005E                  __size_of___flmul 026B  
                __size_of___flsub 0021                  __size_of___fltol 0095                  __size_of___llmod 0051  
                      ?_vfpfcnvrt 00E8                      ??_initialize 0020                ___fpclassifyf@F453 0224  
                      sprintf@fmt 0138                        sprintf@ret 014C                          ___xxtofl 1C06  
                __size_of_isdigit 001A             __size_of_uartSendByte 000E                  menuInput@pbShort 0029  
                        _g_relHum 0240                  __size_of_isspace 0024                          _g_rotDir 016C  
                        __ptext10 100D                          __ptext11 23D8                          __ptext20 19B5  
                        __ptext12 21F3                          __ptext21 1AC3                          __ptext13 22DE  
                        __ptext30 2273                          __ptext22 220D                          __ptext14 2736  
                        __ptext31 1D73                          __ptext23 2196                          __ptext15 22BA  
                        __ptext40 1801                          __ptext32 1001                          __ptext24 25D7  
                        __ptext16 2379                          __ptext41 0815                          __ptext33 218A  
                        __ptext25 267A                          __ptext17 26D8                          __ptext50 2303  
                        __ptext42 18C8                          __ptext34 2159                          __ptext26 2796  
                        __ptext18 07FE                          __ptext51 1B58                          __ptext43 240D  
                        __ptext35 2154                          __ptext27 1F19                          __ptext19 1129  
                        __ptext60 247D                          __ptext52 1A38                          __ptext44 222E  
                        __ptext36 214F                          __ptext28 2296                          __ptext61 24BB  
                        __ptext53 2173                          __ptext45 1C06                          __ptext37 2445  
                        __ptext29 21D9                          __ptext62 23A4                          __ptext54 2250  
                        __ptext46 1595                          __ptext38 217E                          __ptext63 2586  
                        __ptext55 21C1                          __ptext47 2329                          __ptext39 253A  
                        __ptext56 24FA                          __ptext48 13B6                          __ptext57 216A  
                        __ptext49 09B1                          __ptext59 2628                  __size_of_isupper 001A  
                __size_of_timeNow 0012                          _g_status 01ED           ?_OLED_scrollDisplayLeft 0070  
                __size_of_sprintf 0029                  __size_of_tolower 0035                       _OSCCON3bits 088F  
                      strcpy@dest 0027                  __size_of_strncmp 006B                  __size_of_strncpy 003E  
                menuInput@timeout 002B                          ema@alpha 0030                     __size_of_atoi 00E7  
                   __size_of_main 00B8                     menuInput@page 0031                     menuInput@menu 0028  
                        getPB@ret 0021                     __size_of_stoa 00E3                  ?_OLED_returnHome 0070  
              __end_of_initialize 2586              __CFG_WDTCWS$WDTCWS_7 0000                pnum$text10_split_1 005D  
                      _RC1STAbits 011D                          efgtoa@fp 00CB                          efgtoa@ne 00C5  
                        efgtoa@pp 00C1                          efgtoa@ou 00AF                         stoa@F1143 025D  
                       showMenu@s 01A0                          _showMenu 126E                          int$flags 007E  
                     ??_getRotDir 0020                          _vfprintf 07C5                      _uartSendByte 21A4  
        __end_of_adcGetConversion 2250                      ?_checkStatus 0070                  ??_uartReceiveISR 0076  
                      _INTCONbits 000B    __end_of_OLED_scrollDisplayLeft 2159                      timeSince@now 0034  
                  __pstringtext10 28D6                    __pstringtext11 0000            __size_of_pushButtonISR 0034  
                        isdigit@c 0020                       ??_menuInput 002C                  ?_OLED_write4bits 0070  
                        intlevel1 0000                         sprintf@ap 014F                          isspace@c 0020  
               __CFG_CLKOUTEN$OFF 0000                         strcpy@src 0020                          isupper@c 0020  
                      _OLED_write 217E                         strncmp@_l 0026                         strncmp@_r 0020  
                       strncpy@cp 0075             __end_of_OLED_print_xy 247D                       ??_timeSince 0028  
                     efgtoa@nmode 00CE                       ??_vfpfcnvrt 00EA                      getRotDir@ret 0021  
                        stoa@nuls 002D                     _vfpfcnvrt$944 0120                     _vfpfcnvrt$945 0122  
                   _vfpfcnvrt$949 0124                     __pstringtext1 2800                     __pstringtext2 284D  
                   __pstringtext3 287E                     __pstringtext4 28A8                     __pstringtext5 28B9  
                   __pstringtext6 28C6                     __pstringtext7 28CA                     __pstringtext8 28CE  
                   __pstringtext9 28D2            __Umul8_16@multiplicand 0020         __size_of_handleSensorData 005C  
                        sprintf@f 0150                      showMenu@page 01EE                          tolower@c 0026  
                        sprintf@s 014E                      showMenu@menu 01EF            __size_of___fpclassifyf 0083  
                        strncmp@l 0029                          strncmp@n 0022                          strncmp@r 0027  
                        strncpy@d 0074                          strncpy@n 0071                          strncpy@s 0070  
                   ___fladd@signs 005C  __size_of_OLED_scrollDisplayRight 0005                      ___fladd@aexp 005D  
                    ___fladd@bexp 005E              __Umul8_16@multiplier 0028                 __Umul8_16@product 0024  
