

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Jan 19 22:07:02 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F15356 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 110 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 130 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 277 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 510 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   120                           PORTB equ 0Dh ;# 
   121  000D                     # 572 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   122                           PORTC equ 0Eh ;# 
   123  000E                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   124                           PORTE equ 010h ;# 
   125  0010                     # 655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   126                           TRISA equ 012h ;# 
   127  0012                     # 717 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   128                           TRISB equ 013h ;# 
   129  0013                     # 779 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   130                           TRISC equ 014h ;# 
   131  0014                     # 841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   132                           TRISE equ 016h ;# 
   133  0016                     # 862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   134                           LATA equ 018h ;# 
   135  0018                     # 924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   136                           LATB equ 019h ;# 
   137  0019                     # 986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   138                           LATC equ 01Ah ;# 
   139  001A                     # 1048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   140                           ADRES equ 09Bh ;# 
   141  009B                     # 1055 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   142                           ADRESL equ 09Bh ;# 
   143  009B                     # 1125 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   144                           ADRESH equ 09Ch ;# 
   145  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   146                           ADCON0 equ 09Dh ;# 
   147  009D                     # 1272 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   148                           ADCON1 equ 09Eh ;# 
   149  009E                     # 1338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   150                           ADACT equ 09Fh ;# 
   151  009F                     # 1390 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   152                           RC1REG equ 0119h ;# 
   153  0119                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   154                           RCREG equ 0119h ;# 
   155  0119                     # 1399 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   156                           RCREG1 equ 0119h ;# 
   157  0119                     # 1444 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   158                           TX1REG equ 011Ah ;# 
   159  011A                     # 1449 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   160                           TXREG1 equ 011Ah ;# 
   161  011A                     # 1453 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   162                           TXREG equ 011Ah ;# 
   163  011A                     # 1498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   164                           SP1BRG equ 011Bh ;# 
   165  011B                     # 1505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   166                           SP1BRGL equ 011Bh ;# 
   167  011B                     # 1510 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   168                           SPBRG equ 011Bh ;# 
   169  011B                     # 1514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   170                           SPBRG1 equ 011Bh ;# 
   171  011B                     # 1518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   172                           SPBRGL equ 011Bh ;# 
   173  011B                     # 1575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   174                           SP1BRGH equ 011Ch ;# 
   175  011C                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   176                           SPBRGH equ 011Ch ;# 
   177  011C                     # 1584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   178                           SPBRGH1 equ 011Ch ;# 
   179  011C                     # 1629 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   180                           RC1STA equ 011Dh ;# 
   181  011D                     # 1634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   182                           RCSTA1 equ 011Dh ;# 
   183  011D                     # 1638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   184                           RCSTA equ 011Dh ;# 
   185  011D                     # 1809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   186                           TX1STA equ 011Eh ;# 
   187  011E                     # 1814 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   188                           TXSTA1 equ 011Eh ;# 
   189  011E                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   190                           TXSTA equ 011Eh ;# 
   191  011E                     # 1989 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   192                           BAUD1CON equ 011Fh ;# 
   193  011F                     # 1994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   194                           BAUDCON1 equ 011Fh ;# 
   195  011F                     # 1998 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   196                           BAUDCTL1 equ 011Fh ;# 
   197  011F                     # 2002 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   198                           BAUDCON equ 011Fh ;# 
   199  011F                     # 2006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   200                           BAUDCTL equ 011Fh ;# 
   201  011F                     # 2235 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   202                           SSP1BUF equ 018Ch ;# 
   203  018C                     # 2255 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   204                           SSP1ADD equ 018Dh ;# 
   205  018D                     # 2375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   206                           SSP1MSK equ 018Eh ;# 
   207  018E                     # 2445 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   208                           SSP1STAT equ 018Fh ;# 
   209  018F                     # 2809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   210                           SSP1CON1 equ 0190h ;# 
   211  0190                     # 2929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   212                           SSP1CON2 equ 0191h ;# 
   213  0191                     # 3116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   214                           SSP1CON3 equ 0192h ;# 
   215  0192                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   216                           SSP2BUF equ 0196h ;# 
   217  0196                     # 3198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   218                           SSP2ADD equ 0197h ;# 
   219  0197                     # 3318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   220                           SSP2MSK equ 0198h ;# 
   221  0198                     # 3388 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   222                           SSP2STAT equ 0199h ;# 
   223  0199                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   224                           SSP2CON1 equ 019Ah ;# 
   225  019A                     # 3872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   226                           SSP2CON2 equ 019Bh ;# 
   227  019B                     # 4059 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   228                           SSP2CON3 equ 019Ch ;# 
   229  019C                     # 4121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   230                           TMR1 equ 020Ch ;# 
   231  020C                     # 4128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   232                           TMR1L equ 020Ch ;# 
   233  020C                     # 4298 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   234                           TMR1H equ 020Dh ;# 
   235  020D                     # 4418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   236                           T1CON equ 020Eh ;# 
   237  020E                     # 4514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   238                           T1GCON equ 020Fh ;# 
   239  020F                     # 4519 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   240                           PR1 equ 020Fh ;# 
   241  020F                     # 4710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   242                           T1GATE equ 0210h ;# 
   243  0210                     # 4715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   244                           TMR1GATE equ 0210h ;# 
   245  0210                     # 4876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   246                           T1CLK equ 0211h ;# 
   247  0211                     # 4881 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   248                           TMR1CLK equ 0211h ;# 
   249  0211                     # 5018 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   250                           T2TMR equ 028Ch ;# 
   251  028C                     # 5023 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   252                           TMR2 equ 028Ch ;# 
   253  028C                     # 5072 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   254                           T2PR equ 028Dh ;# 
   255  028D                     # 5077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   256                           PR2 equ 028Dh ;# 
   257  028D                     # 5126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   258                           T2CON equ 028Eh ;# 
   259  028E                     # 5272 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   260                           T2HLT equ 028Fh ;# 
   261  028F                     # 5400 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   262                           T2CLKCON equ 0290h ;# 
   263  0290                     # 5480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   264                           T2RST equ 0291h ;# 
   265  0291                     # 5560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   266                           CCPR1 equ 030Ch ;# 
   267  030C                     # 5567 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   268                           CCPR1L equ 030Ch ;# 
   269  030C                     # 5587 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   270                           CCPR1H equ 030Dh ;# 
   271  030D                     # 5607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   272                           CCP1CON equ 030Eh ;# 
   273  030E                     # 5734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   274                           CCP1CAP equ 030Fh ;# 
   275  030F                     # 5802 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   276                           CCPR2 equ 0310h ;# 
   277  0310                     # 5809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   278                           CCPR2L equ 0310h ;# 
   279  0310                     # 5829 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   280                           CCPR2H equ 0311h ;# 
   281  0311                     # 5849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   282                           CCP2CON equ 0312h ;# 
   283  0312                     # 5976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   284                           CCP2CAP equ 0313h ;# 
   285  0313                     # 6044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   286                           PWM3DC equ 0314h ;# 
   287  0314                     # 6051 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   288                           PWM3DCL equ 0314h ;# 
   289  0314                     # 6117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   290                           PWM3DCH equ 0315h ;# 
   291  0315                     # 6287 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   292                           PWM3CON equ 0316h ;# 
   293  0316                     # 6343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   294                           PWM4DC equ 0318h ;# 
   295  0318                     # 6350 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   296                           PWM4DCL equ 0318h ;# 
   297  0318                     # 6416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   298                           PWM4DCH equ 0319h ;# 
   299  0319                     # 6586 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   300                           PWM4CON equ 031Ah ;# 
   301  031A                     # 6642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   302                           PWM5DC equ 031Ch ;# 
   303  031C                     # 6649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   304                           PWM5DCL equ 031Ch ;# 
   305  031C                     # 6715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   306                           PWM5DCH equ 031Dh ;# 
   307  031D                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   308                           PWM5CON equ 031Eh ;# 
   309  031E                     # 6941 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   310                           PWM6DC equ 038Ch ;# 
   311  038C                     # 6948 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   312                           PWM6DCL equ 038Ch ;# 
   313  038C                     # 7014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   314                           PWM6DCH equ 038Dh ;# 
   315  038D                     # 7184 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   316                           PWM6CON equ 038Eh ;# 
   317  038E                     # 7242 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   318                           NCO1ACC equ 058Ch ;# 
   319  058C                     # 7249 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   320                           NCO1ACCL equ 058Ch ;# 
   321  058C                     # 7319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   322                           NCO1ACCH equ 058Dh ;# 
   323  058D                     # 7389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   324                           NCO1ACCU equ 058Eh ;# 
   325  058E                     # 7437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   326                           NCO1INC equ 058Fh ;# 
   327  058F                     # 7444 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   328                           NCO1INCL equ 058Fh ;# 
   329  058F                     # 7514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   330                           NCO1INCH equ 0590h ;# 
   331  0590                     # 7584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   332                           NCO1INCU equ 0591h ;# 
   333  0591                     # 7630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   334                           NCO1CON equ 0592h ;# 
   335  0592                     # 7670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   336                           NCO1CLK equ 0593h ;# 
   337  0593                     # 7736 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   338                           TMR0L equ 059Ch ;# 
   339  059C                     # 7741 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   340                           TMR0 equ 059Ch ;# 
   341  059C                     # 7874 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   342                           TMR0H equ 059Dh ;# 
   343  059D                     # 7879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   344                           PR0 equ 059Dh ;# 
   345  059D                     # 8128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   346                           T0CON0 equ 059Eh ;# 
   347  059E                     # 8198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   348                           T0CON1 equ 059Fh ;# 
   349  059F                     # 8309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   350                           CWG1CLKCON equ 060Ch ;# 
   351  060C                     # 8337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   352                           CWG1DAT equ 060Dh ;# 
   353  060D                     # 8383 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   354                           CWG1DBR equ 060Eh ;# 
   355  060E                     # 8487 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   356                           CWG1DBF equ 060Fh ;# 
   357  060F                     # 8591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   358                           CWG1CON0 equ 0610h ;# 
   359  0610                     # 8692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   360                           CWG1CON1 equ 0611h ;# 
   361  0611                     # 8770 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   362                           CWG1AS0 equ 0612h ;# 
   363  0612                     # 8890 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   364                           CWG1AS1 equ 0613h ;# 
   365  0613                     # 8934 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   366                           CWG1STR equ 0614h ;# 
   367  0614                     # 9046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   368                           PIR0 equ 070Ch ;# 
   369  070C                     # 9079 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   370                           PIR1 equ 070Dh ;# 
   371  070D                     # 9118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   372                           PIR2 equ 070Eh ;# 
   373  070E                     # 9151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   374                           PIR3 equ 070Fh ;# 
   375  070F                     # 9213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   376                           PIR4 equ 0710h ;# 
   377  0710                     # 9239 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   378                           PIR5 equ 0711h ;# 
   379  0711                     # 9284 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   380                           PIR6 equ 0712h ;# 
   381  0712                     # 9310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   382                           PIR7 equ 0713h ;# 
   383  0713                     # 9352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   384                           PIE0 equ 0716h ;# 
   385  0716                     # 9385 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   386                           PIE1 equ 0717h ;# 
   387  0717                     # 9424 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   388                           PIE2 equ 0718h ;# 
   389  0718                     # 9457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   390                           PIE3 equ 0719h ;# 
   391  0719                     # 9519 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   392                           PIE4 equ 071Ah ;# 
   393  071A                     # 9545 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   394                           PIE5 equ 071Bh ;# 
   395  071B                     # 9590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   396                           PIE6 equ 071Ch ;# 
   397  071C                     # 9616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   398                           PIE7 equ 071Dh ;# 
   399  071D                     # 9658 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   400                           PMD0 equ 0796h ;# 
   401  0796                     # 9703 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   402                           PMD1 equ 0797h ;# 
   403  0797                     # 9751 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   404                           PMD2 equ 0798h ;# 
   405  0798                     # 9796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   406                           PMD3 equ 0799h ;# 
   407  0799                     # 9846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   408                           PMD4 equ 079Ah ;# 
   409  079A                     # 9891 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   410                           PMD5 equ 079Bh ;# 
   411  079B                     # 9930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   412                           WDTCON0 equ 080Ch ;# 
   413  080C                     # 10005 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   414                           WDTCON1 equ 080Dh ;# 
   415  080D                     # 10099 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   416                           WDTPSL equ 080Eh ;# 
   417  080E                     # 10227 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   418                           WDTPSH equ 080Fh ;# 
   419  080F                     # 10355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   420                           WDTTMR equ 0810h ;# 
   421  0810                     # 10437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   422                           BORCON equ 0811h ;# 
   423  0811                     # 10464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   424                           VREGCON equ 0812h ;# 
   425  0812                     # 10485 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   426                           PCON0 equ 0813h ;# 
   427  0813                     # 10547 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   428                           PCON1 equ 0814h ;# 
   429  0814                     # 10568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   430                           NVMADR equ 081Ah ;# 
   431  081A                     # 10575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   432                           NVMADRL equ 081Ah ;# 
   433  081A                     # 10637 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   434                           NVMADRH equ 081Bh ;# 
   435  081B                     # 10693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   436                           NVMDAT equ 081Ch ;# 
   437  081C                     # 10700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   438                           NVMDATL equ 081Ch ;# 
   439  081C                     # 10762 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   440                           NVMDATH equ 081Dh ;# 
   441  081D                     # 10812 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   442                           NVMCON1 equ 081Eh ;# 
   443  081E                     # 10868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   444                           NVMCON2 equ 081Fh ;# 
   445  081F                     # 10888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   446                           CPUDOZE equ 088Ch ;# 
   447  088C                     # 10953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   448                           OSCCON1 equ 088Dh ;# 
   449  088D                     # 11023 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   450                           OSCCON2 equ 088Eh ;# 
   451  088E                     # 11093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   452                           OSCCON3 equ 088Fh ;# 
   453  088F                     # 11133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   454                           OSCSTAT equ 0890h ;# 
   455  0890                     # 11190 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   456                           OSCEN equ 0891h ;# 
   457  0891                     # 11241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   458                           OSCTUNE equ 0892h ;# 
   459  0892                     # 11299 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   460                           OSCFRQ equ 0893h ;# 
   461  0893                     # 11339 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   462                           CLKRCON equ 0895h ;# 
   463  0895                     # 11404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   464                           CLKRCLK equ 0896h ;# 
   465  0896                     # 11450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   466                           FVRCON equ 090Ch ;# 
   467  090C                     # 11526 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   468                           DAC1CON0 equ 090Eh ;# 
   469  090E                     # 11627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   470                           DAC1CON1 equ 090Fh ;# 
   471  090F                     # 11679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   472                           ZCDCON equ 091Fh ;# 
   473  091F                     # 11725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   474                           CMOUT equ 098Fh ;# 
   475  098F                     # 11730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   476                           CMSTAT equ 098Fh ;# 
   477  098F                     # 11803 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   478                           CM1CON0 equ 0990h ;# 
   479  0990                     # 11883 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   480                           CM1CON1 equ 0991h ;# 
   481  0991                     # 11923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   482                           CM1NCH equ 0992h ;# 
   483  0992                     # 11983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   484                           CM1PCH equ 0993h ;# 
   485  0993                     # 12043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   486                           CM2CON0 equ 0994h ;# 
   487  0994                     # 12123 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   488                           CM2CON1 equ 0995h ;# 
   489  0995                     # 12163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   490                           CM2NCH equ 0996h ;# 
   491  0996                     # 12223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   492                           CM2PCH equ 0997h ;# 
   493  0997                     # 12283 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   494                           RC2REG equ 0A19h ;# 
   495  0A19                     # 12288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   496                           RCREG2 equ 0A19h ;# 
   497  0A19                     # 12321 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   498                           TX2REG equ 0A1Ah ;# 
   499  0A1A                     # 12326 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   500                           TXREG2 equ 0A1Ah ;# 
   501  0A1A                     # 12359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   502                           SP2BRG equ 0A1Bh ;# 
   503  0A1B                     # 12366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   504                           SP2BRGL equ 0A1Bh ;# 
   505  0A1B                     # 12371 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   506                           SPBRG2 equ 0A1Bh ;# 
   507  0A1B                     # 12404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   508                           SP2BRGH equ 0A1Ch ;# 
   509  0A1C                     # 12409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   510                           SPBRGH2 equ 0A1Ch ;# 
   511  0A1C                     # 12442 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   512                           RC2STA equ 0A1Dh ;# 
   513  0A1D                     # 12447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   514                           RCSTA2 equ 0A1Dh ;# 
   515  0A1D                     # 12564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   516                           TX2STA equ 0A1Eh ;# 
   517  0A1E                     # 12569 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   518                           TXSTA2 equ 0A1Eh ;# 
   519  0A1E                     # 12686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   520                           BAUD2CON equ 0A1Fh ;# 
   521  0A1F                     # 12691 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   522                           BAUDCON2 equ 0A1Fh ;# 
   523  0A1F                     # 12695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   524                           BAUDCTL2 equ 0A1Fh ;# 
   525  0A1F                     # 12836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   526                           CLCDATA equ 01E0Fh ;# 
   527  1E0F                     # 12874 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   528                           CLC1CON equ 01E10h ;# 
   529  1E10                     # 12992 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   530                           CLC1POL equ 01E11h ;# 
   531  1E11                     # 13070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   532                           CLC1SEL0 equ 01E12h ;# 
   533  1E12                     # 13174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   534                           CLC1SEL1 equ 01E13h ;# 
   535  1E13                     # 13278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   536                           CLC1SEL2 equ 01E14h ;# 
   537  1E14                     # 13382 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   538                           CLC1SEL3 equ 01E15h ;# 
   539  1E15                     # 13486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   540                           CLC1GLS0 equ 01E16h ;# 
   541  1E16                     # 13598 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   542                           CLC1GLS1 equ 01E17h ;# 
   543  1E17                     # 13710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   544                           CLC1GLS2 equ 01E18h ;# 
   545  1E18                     # 13822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   546                           CLC1GLS3 equ 01E19h ;# 
   547  1E19                     # 13934 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   548                           CLC2CON equ 01E1Ah ;# 
   549  1E1A                     # 14052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   550                           CLC2POL equ 01E1Bh ;# 
   551  1E1B                     # 14130 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   552                           CLC2SEL0 equ 01E1Ch ;# 
   553  1E1C                     # 14234 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   554                           CLC2SEL1 equ 01E1Dh ;# 
   555  1E1D                     # 14338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   556                           CLC2SEL2 equ 01E1Eh ;# 
   557  1E1E                     # 14442 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   558                           CLC2SEL3 equ 01E1Fh ;# 
   559  1E1F                     # 14546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   560                           CLC2GLS0 equ 01E20h ;# 
   561  1E20                     # 14658 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   562                           CLC2GLS1 equ 01E21h ;# 
   563  1E21                     # 14770 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   564                           CLC2GLS2 equ 01E22h ;# 
   565  1E22                     # 14882 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   566                           CLC2GLS3 equ 01E23h ;# 
   567  1E23                     # 14994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   568                           CLC3CON equ 01E24h ;# 
   569  1E24                     # 15112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   570                           CLC3POL equ 01E25h ;# 
   571  1E25                     # 15190 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   572                           CLC3SEL0 equ 01E26h ;# 
   573  1E26                     # 15294 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   574                           CLC3SEL1 equ 01E27h ;# 
   575  1E27                     # 15398 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   576                           CLC3SEL2 equ 01E28h ;# 
   577  1E28                     # 15502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   578                           CLC3SEL3 equ 01E29h ;# 
   579  1E29                     # 15606 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   580                           CLC3GLS0 equ 01E2Ah ;# 
   581  1E2A                     # 15718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   582                           CLC3GLS1 equ 01E2Bh ;# 
   583  1E2B                     # 15830 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   584                           CLC3GLS2 equ 01E2Ch ;# 
   585  1E2C                     # 15942 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   586                           CLC3GLS3 equ 01E2Dh ;# 
   587  1E2D                     # 16054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   588                           CLC4CON equ 01E2Eh ;# 
   589  1E2E                     # 16172 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   590                           CLC4POL equ 01E2Fh ;# 
   591  1E2F                     # 16250 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   592                           CLC4SEL0 equ 01E30h ;# 
   593  1E30                     # 16354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   594                           CLC4SEL1 equ 01E31h ;# 
   595  1E31                     # 16458 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   596                           CLC4SEL2 equ 01E32h ;# 
   597  1E32                     # 16562 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   598                           CLC4SEL3 equ 01E33h ;# 
   599  1E33                     # 16666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   600                           CLC4GLS0 equ 01E34h ;# 
   601  1E34                     # 16778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   602                           CLC4GLS1 equ 01E35h ;# 
   603  1E35                     # 16890 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   604                           CLC4GLS2 equ 01E36h ;# 
   605  1E36                     # 17002 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   606                           CLC4GLS3 equ 01E37h ;# 
   607  1E37                     # 17114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   608                           PPSLOCK equ 01E8Fh ;# 
   609  1E8F                     # 17134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   610                           INTPPS equ 01E90h ;# 
   611  1E90                     # 17192 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   612                           T0CKIPPS equ 01E91h ;# 
   613  1E91                     # 17250 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   614                           T1CKIPPS equ 01E92h ;# 
   615  1E92                     # 17308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   616                           T1GPPS equ 01E93h ;# 
   617  1E93                     # 17366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   618                           T2INPPS equ 01E9Ch ;# 
   619  1E9C                     # 17424 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   620                           CCP1PPS equ 01EA1h ;# 
   621  1EA1                     # 17482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   622                           CCP2PPS equ 01EA2h ;# 
   623  1EA2                     # 17540 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   624                           CWG1PPS equ 01EB1h ;# 
   625  1EB1                     # 17598 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   626                           CLCIN0PPS equ 01EBBh ;# 
   627  1EBB                     # 17656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   628                           CLCIN1PPS equ 01EBCh ;# 
   629  1EBC                     # 17714 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   630                           CLCIN2PPS equ 01EBDh ;# 
   631  1EBD                     # 17772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   632                           CLCIN3PPS equ 01EBEh ;# 
   633  1EBE                     # 17830 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   634                           ADACTPPS equ 01EC3h ;# 
   635  1EC3                     # 17888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   636                           SSP1CLKPPS equ 01EC5h ;# 
   637  1EC5                     # 17946 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   638                           SSP1DATPPS equ 01EC6h ;# 
   639  1EC6                     # 18004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   640                           SSP1SSPPS equ 01EC7h ;# 
   641  1EC7                     # 18062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   642                           SSP2CLKPPS equ 01EC8h ;# 
   643  1EC8                     # 18120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   644                           SSP2DATPPS equ 01EC9h ;# 
   645  1EC9                     # 18178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   646                           SSP2SSPPS equ 01ECAh ;# 
   647  1ECA                     # 18236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   648                           RX1DTPPS equ 01ECBh ;# 
   649  1ECB                     # 18294 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   650                           TX1CKPPS equ 01ECCh ;# 
   651  1ECC                     # 18352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   652                           RX2DTPPS equ 01ECDh ;# 
   653  1ECD                     # 18410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   654                           TX2CKPPS equ 01ECEh ;# 
   655  1ECE                     # 18468 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   656                           RA0PPS equ 01F10h ;# 
   657  1F10                     # 18512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   658                           RA1PPS equ 01F11h ;# 
   659  1F11                     # 18556 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   660                           RA2PPS equ 01F12h ;# 
   661  1F12                     # 18600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   662                           RA3PPS equ 01F13h ;# 
   663  1F13                     # 18644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   664                           RA4PPS equ 01F14h ;# 
   665  1F14                     # 18688 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   666                           RA5PPS equ 01F15h ;# 
   667  1F15                     # 18732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   668                           RA6PPS equ 01F16h ;# 
   669  1F16                     # 18776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   670                           RA7PPS equ 01F17h ;# 
   671  1F17                     # 18820 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   672                           RB0PPS equ 01F18h ;# 
   673  1F18                     # 18864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   674                           RB1PPS equ 01F19h ;# 
   675  1F19                     # 18908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   676                           RB2PPS equ 01F1Ah ;# 
   677  1F1A                     # 18952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   678                           RB3PPS equ 01F1Bh ;# 
   679  1F1B                     # 18996 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   680                           RB4PPS equ 01F1Ch ;# 
   681  1F1C                     # 19040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   682                           RB5PPS equ 01F1Dh ;# 
   683  1F1D                     # 19084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   684                           RB6PPS equ 01F1Eh ;# 
   685  1F1E                     # 19128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   686                           RB7PPS equ 01F1Fh ;# 
   687  1F1F                     # 19172 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   688                           RC0PPS equ 01F20h ;# 
   689  1F20                     # 19216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   690                           RC1PPS equ 01F21h ;# 
   691  1F21                     # 19260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   692                           RC2PPS equ 01F22h ;# 
   693  1F22                     # 19304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   694                           RC3PPS equ 01F23h ;# 
   695  1F23                     # 19348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   696                           RC4PPS equ 01F24h ;# 
   697  1F24                     # 19392 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   698                           RC5PPS equ 01F25h ;# 
   699  1F25                     # 19436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   700                           RC6PPS equ 01F26h ;# 
   701  1F26                     # 19480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   702                           RC7PPS equ 01F27h ;# 
   703  1F27                     # 19524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   704                           ANSELA equ 01F38h ;# 
   705  1F38                     # 19586 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   706                           WPUA equ 01F39h ;# 
   707  1F39                     # 19648 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   708                           ODCONA equ 01F3Ah ;# 
   709  1F3A                     # 19710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   710                           SLRCONA equ 01F3Bh ;# 
   711  1F3B                     # 19772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   712                           INLVLA equ 01F3Ch ;# 
   713  1F3C                     # 19834 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   714                           IOCAP equ 01F3Dh ;# 
   715  1F3D                     # 19896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   716                           IOCAN equ 01F3Eh ;# 
   717  1F3E                     # 19958 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   718                           IOCAF equ 01F3Fh ;# 
   719  1F3F                     # 20020 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   720                           ANSELB equ 01F43h ;# 
   721  1F43                     # 20082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   722                           WPUB equ 01F44h ;# 
   723  1F44                     # 20144 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   724                           ODCONB equ 01F45h ;# 
   725  1F45                     # 20206 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   726                           SLRCONB equ 01F46h ;# 
   727  1F46                     # 20268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   728                           INLVLB equ 01F47h ;# 
   729  1F47                     # 20330 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   730                           IOCBP equ 01F48h ;# 
   731  1F48                     # 20392 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   732                           IOCBN equ 01F49h ;# 
   733  1F49                     # 20454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   734                           IOCBF equ 01F4Ah ;# 
   735  1F4A                     # 20516 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   736                           ANSELC equ 01F4Eh ;# 
   737  1F4E                     # 20578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   738                           WPUC equ 01F4Fh ;# 
   739  1F4F                     # 20640 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   740                           ODCONC equ 01F50h ;# 
   741  1F50                     # 20702 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   742                           SLRCONC equ 01F51h ;# 
   743  1F51                     # 20764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   744                           INLVLC equ 01F52h ;# 
   745  1F52                     # 20826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   746                           IOCCP equ 01F53h ;# 
   747  1F53                     # 20888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   748                           IOCCN equ 01F54h ;# 
   749  1F54                     # 20950 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   750                           IOCCF equ 01F55h ;# 
   751  1F55                     # 21012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   752                           WPUE equ 01F65h ;# 
   753  1F65                     # 21033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   754                           INLVLE equ 01F68h ;# 
   755  1F68                     # 21054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   756                           IOCEP equ 01F69h ;# 
   757  1F69                     # 21075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   758                           IOCEN equ 01F6Ah ;# 
   759  1F6A                     # 21096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   760                           IOCEF equ 01F6Bh ;# 
   761  1F6B                     # 21117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   762                           STATUS_SHAD equ 01FE4h ;# 
   763  1FE4                     # 21137 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   764                           WREG_SHAD equ 01FE5h ;# 
   765  1FE5                     # 21157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   766                           BSR_SHAD equ 01FE6h ;# 
   767  1FE6                     # 21177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   768                           PCLATH_SHAD equ 01FE7h ;# 
   769  1FE7                     # 21197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   770                           FSR0_SHAD equ 01FE8h ;# 
   771  1FE8                     # 21204 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   772                           FSR0L_SHAD equ 01FE8h ;# 
   773  1FE8                     # 21224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   774                           FSR0H_SHAD equ 01FE9h ;# 
   775  1FE9                     # 21244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   776                           FSR1L_SHAD equ 01FEAh ;# 
   777  1FEA                     # 21264 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   778                           FSR1H_SHAD equ 01FEBh ;# 
   779  1FEB                     # 21284 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   780                           STKPTR equ 01FEDh ;# 
   781  1FED                     # 21328 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   782                           TOSL equ 01FEEh ;# 
   783  1FEE                     # 21398 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   784                           TOSH equ 01FEFh ;# 
   785  1FEF                     # 110 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   786                           INDF0 equ 00h ;# 
   787  0000                     # 130 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   788                           INDF1 equ 01h ;# 
   789  0001                     # 150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   790                           PCL equ 02h ;# 
   791  0002                     # 170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   792                           STATUS equ 03h ;# 
   793  0003                     # 233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   794                           FSR0L equ 04h ;# 
   795  0004                     # 253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   796                           FSR0H equ 05h ;# 
   797  0005                     # 277 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   798                           FSR1L equ 06h ;# 
   799  0006                     # 297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   800                           FSR1H equ 07h ;# 
   801  0007                     # 317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   802                           BSR equ 08h ;# 
   803  0008                     # 375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   804                           WREG equ 09h ;# 
   805  0009                     # 395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   806                           PCLATH equ 0Ah ;# 
   807  000A                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   808                           INTCON equ 0Bh ;# 
   809  000B                     # 448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   810                           PORTA equ 0Ch ;# 
   811  000C                     # 510 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   812                           PORTB equ 0Dh ;# 
   813  000D                     # 572 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   814                           PORTC equ 0Eh ;# 
   815  000E                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   816                           PORTE equ 010h ;# 
   817  0010                     # 655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   818                           TRISA equ 012h ;# 
   819  0012                     # 717 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   820                           TRISB equ 013h ;# 
   821  0013                     # 779 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   822                           TRISC equ 014h ;# 
   823  0014                     # 841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   824                           TRISE equ 016h ;# 
   825  0016                     # 862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   826                           LATA equ 018h ;# 
   827  0018                     # 924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   828                           LATB equ 019h ;# 
   829  0019                     # 986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   830                           LATC equ 01Ah ;# 
   831  001A                     # 1048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   832                           ADRES equ 09Bh ;# 
   833  009B                     # 1055 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   834                           ADRESL equ 09Bh ;# 
   835  009B                     # 1125 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   836                           ADRESH equ 09Ch ;# 
   837  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   838                           ADCON0 equ 09Dh ;# 
   839  009D                     # 1272 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   840                           ADCON1 equ 09Eh ;# 
   841  009E                     # 1338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   842                           ADACT equ 09Fh ;# 
   843  009F                     # 1390 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   844                           RC1REG equ 0119h ;# 
   845  0119                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   846                           RCREG equ 0119h ;# 
   847  0119                     # 1399 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   848                           RCREG1 equ 0119h ;# 
   849  0119                     # 1444 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   850                           TX1REG equ 011Ah ;# 
   851  011A                     # 1449 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   852                           TXREG1 equ 011Ah ;# 
   853  011A                     # 1453 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   854                           TXREG equ 011Ah ;# 
   855  011A                     # 1498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   856                           SP1BRG equ 011Bh ;# 
   857  011B                     # 1505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   858                           SP1BRGL equ 011Bh ;# 
   859  011B                     # 1510 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   860                           SPBRG equ 011Bh ;# 
   861  011B                     # 1514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   862                           SPBRG1 equ 011Bh ;# 
   863  011B                     # 1518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   864                           SPBRGL equ 011Bh ;# 
   865  011B                     # 1575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   866                           SP1BRGH equ 011Ch ;# 
   867  011C                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   868                           SPBRGH equ 011Ch ;# 
   869  011C                     # 1584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   870                           SPBRGH1 equ 011Ch ;# 
   871  011C                     # 1629 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   872                           RC1STA equ 011Dh ;# 
   873  011D                     # 1634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   874                           RCSTA1 equ 011Dh ;# 
   875  011D                     # 1638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   876                           RCSTA equ 011Dh ;# 
   877  011D                     # 1809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   878                           TX1STA equ 011Eh ;# 
   879  011E                     # 1814 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   880                           TXSTA1 equ 011Eh ;# 
   881  011E                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   882                           TXSTA equ 011Eh ;# 
   883  011E                     # 1989 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   884                           BAUD1CON equ 011Fh ;# 
   885  011F                     # 1994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   886                           BAUDCON1 equ 011Fh ;# 
   887  011F                     # 1998 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   888                           BAUDCTL1 equ 011Fh ;# 
   889  011F                     # 2002 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   890                           BAUDCON equ 011Fh ;# 
   891  011F                     # 2006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   892                           BAUDCTL equ 011Fh ;# 
   893  011F                     # 2235 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   894                           SSP1BUF equ 018Ch ;# 
   895  018C                     # 2255 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   896                           SSP1ADD equ 018Dh ;# 
   897  018D                     # 2375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   898                           SSP1MSK equ 018Eh ;# 
   899  018E                     # 2445 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   900                           SSP1STAT equ 018Fh ;# 
   901  018F                     # 2809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   902                           SSP1CON1 equ 0190h ;# 
   903  0190                     # 2929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   904                           SSP1CON2 equ 0191h ;# 
   905  0191                     # 3116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   906                           SSP1CON3 equ 0192h ;# 
   907  0192                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   908                           SSP2BUF equ 0196h ;# 
   909  0196                     # 3198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   910                           SSP2ADD equ 0197h ;# 
   911  0197                     # 3318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   912                           SSP2MSK equ 0198h ;# 
   913  0198                     # 3388 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   914                           SSP2STAT equ 0199h ;# 
   915  0199                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   916                           SSP2CON1 equ 019Ah ;# 
   917  019A                     # 3872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   918                           SSP2CON2 equ 019Bh ;# 
   919  019B                     # 4059 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   920                           SSP2CON3 equ 019Ch ;# 
   921  019C                     # 4121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   922                           TMR1 equ 020Ch ;# 
   923  020C                     # 4128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   924                           TMR1L equ 020Ch ;# 
   925  020C                     # 4298 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   926                           TMR1H equ 020Dh ;# 
   927  020D                     # 4418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   928                           T1CON equ 020Eh ;# 
   929  020E                     # 4514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   930                           T1GCON equ 020Fh ;# 
   931  020F                     # 4519 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   932                           PR1 equ 020Fh ;# 
   933  020F                     # 4710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   934                           T1GATE equ 0210h ;# 
   935  0210                     # 4715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   936                           TMR1GATE equ 0210h ;# 
   937  0210                     # 4876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   938                           T1CLK equ 0211h ;# 
   939  0211                     # 4881 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   940                           TMR1CLK equ 0211h ;# 
   941  0211                     # 5018 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   942                           T2TMR equ 028Ch ;# 
   943  028C                     # 5023 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   944                           TMR2 equ 028Ch ;# 
   945  028C                     # 5072 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   946                           T2PR equ 028Dh ;# 
   947  028D                     # 5077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   948                           PR2 equ 028Dh ;# 
   949  028D                     # 5126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   950                           T2CON equ 028Eh ;# 
   951  028E                     # 5272 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   952                           T2HLT equ 028Fh ;# 
   953  028F                     # 5400 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   954                           T2CLKCON equ 0290h ;# 
   955  0290                     # 5480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   956                           T2RST equ 0291h ;# 
   957  0291                     # 5560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   958                           CCPR1 equ 030Ch ;# 
   959  030C                     # 5567 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   960                           CCPR1L equ 030Ch ;# 
   961  030C                     # 5587 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   962                           CCPR1H equ 030Dh ;# 
   963  030D                     # 5607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   964                           CCP1CON equ 030Eh ;# 
   965  030E                     # 5734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   966                           CCP1CAP equ 030Fh ;# 
   967  030F                     # 5802 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   968                           CCPR2 equ 0310h ;# 
   969  0310                     # 5809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   970                           CCPR2L equ 0310h ;# 
   971  0310                     # 5829 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   972                           CCPR2H equ 0311h ;# 
   973  0311                     # 5849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   974                           CCP2CON equ 0312h ;# 
   975  0312                     # 5976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   976                           CCP2CAP equ 0313h ;# 
   977  0313                     # 6044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   978                           PWM3DC equ 0314h ;# 
   979  0314                     # 6051 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   980                           PWM3DCL equ 0314h ;# 
   981  0314                     # 6117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   982                           PWM3DCH equ 0315h ;# 
   983  0315                     # 6287 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   984                           PWM3CON equ 0316h ;# 
   985  0316                     # 6343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   986                           PWM4DC equ 0318h ;# 
   987  0318                     # 6350 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   988                           PWM4DCL equ 0318h ;# 
   989  0318                     # 6416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   990                           PWM4DCH equ 0319h ;# 
   991  0319                     # 6586 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   992                           PWM4CON equ 031Ah ;# 
   993  031A                     # 6642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   994                           PWM5DC equ 031Ch ;# 
   995  031C                     # 6649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   996                           PWM5DCL equ 031Ch ;# 
   997  031C                     # 6715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   998                           PWM5DCH equ 031Dh ;# 
   999  031D                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1000                           PWM5CON equ 031Eh ;# 
  1001  031E                     # 6941 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1002                           PWM6DC equ 038Ch ;# 
  1003  038C                     # 6948 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1004                           PWM6DCL equ 038Ch ;# 
  1005  038C                     # 7014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1006                           PWM6DCH equ 038Dh ;# 
  1007  038D                     # 7184 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1008                           PWM6CON equ 038Eh ;# 
  1009  038E                     # 7242 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1010                           NCO1ACC equ 058Ch ;# 
  1011  058C                     # 7249 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1012                           NCO1ACCL equ 058Ch ;# 
  1013  058C                     # 7319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1014                           NCO1ACCH equ 058Dh ;# 
  1015  058D                     # 7389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1016                           NCO1ACCU equ 058Eh ;# 
  1017  058E                     # 7437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1018                           NCO1INC equ 058Fh ;# 
  1019  058F                     # 7444 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1020                           NCO1INCL equ 058Fh ;# 
  1021  058F                     # 7514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1022                           NCO1INCH equ 0590h ;# 
  1023  0590                     # 7584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1024                           NCO1INCU equ 0591h ;# 
  1025  0591                     # 7630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1026                           NCO1CON equ 0592h ;# 
  1027  0592                     # 7670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1028                           NCO1CLK equ 0593h ;# 
  1029  0593                     # 7736 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1030                           TMR0L equ 059Ch ;# 
  1031  059C                     # 7741 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1032                           TMR0 equ 059Ch ;# 
  1033  059C                     # 7874 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1034                           TMR0H equ 059Dh ;# 
  1035  059D                     # 7879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1036                           PR0 equ 059Dh ;# 
  1037  059D                     # 8128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1038                           T0CON0 equ 059Eh ;# 
  1039  059E                     # 8198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1040                           T0CON1 equ 059Fh ;# 
  1041  059F                     # 8309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1042                           CWG1CLKCON equ 060Ch ;# 
  1043  060C                     # 8337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1044                           CWG1DAT equ 060Dh ;# 
  1045  060D                     # 8383 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1046                           CWG1DBR equ 060Eh ;# 
  1047  060E                     # 8487 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1048                           CWG1DBF equ 060Fh ;# 
  1049  060F                     # 8591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1050                           CWG1CON0 equ 0610h ;# 
  1051  0610                     # 8692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1052                           CWG1CON1 equ 0611h ;# 
  1053  0611                     # 8770 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1054                           CWG1AS0 equ 0612h ;# 
  1055  0612                     # 8890 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1056                           CWG1AS1 equ 0613h ;# 
  1057  0613                     # 8934 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1058                           CWG1STR equ 0614h ;# 
  1059  0614                     # 9046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1060                           PIR0 equ 070Ch ;# 
  1061  070C                     # 9079 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1062                           PIR1 equ 070Dh ;# 
  1063  070D                     # 9118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1064                           PIR2 equ 070Eh ;# 
  1065  070E                     # 9151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1066                           PIR3 equ 070Fh ;# 
  1067  070F                     # 9213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1068                           PIR4 equ 0710h ;# 
  1069  0710                     # 9239 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1070                           PIR5 equ 0711h ;# 
  1071  0711                     # 9284 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1072                           PIR6 equ 0712h ;# 
  1073  0712                     # 9310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1074                           PIR7 equ 0713h ;# 
  1075  0713                     # 9352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1076                           PIE0 equ 0716h ;# 
  1077  0716                     # 9385 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1078                           PIE1 equ 0717h ;# 
  1079  0717                     # 9424 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1080                           PIE2 equ 0718h ;# 
  1081  0718                     # 9457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1082                           PIE3 equ 0719h ;# 
  1083  0719                     # 9519 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1084                           PIE4 equ 071Ah ;# 
  1085  071A                     # 9545 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1086                           PIE5 equ 071Bh ;# 
  1087  071B                     # 9590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1088                           PIE6 equ 071Ch ;# 
  1089  071C                     # 9616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1090                           PIE7 equ 071Dh ;# 
  1091  071D                     # 9658 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1092                           PMD0 equ 0796h ;# 
  1093  0796                     # 9703 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1094                           PMD1 equ 0797h ;# 
  1095  0797                     # 9751 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1096                           PMD2 equ 0798h ;# 
  1097  0798                     # 9796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1098                           PMD3 equ 0799h ;# 
  1099  0799                     # 9846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1100                           PMD4 equ 079Ah ;# 
  1101  079A                     # 9891 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1102                           PMD5 equ 079Bh ;# 
  1103  079B                     # 9930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1104                           WDTCON0 equ 080Ch ;# 
  1105  080C                     # 10005 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1106                           WDTCON1 equ 080Dh ;# 
  1107  080D                     # 10099 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1108                           WDTPSL equ 080Eh ;# 
  1109  080E                     # 10227 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1110                           WDTPSH equ 080Fh ;# 
  1111  080F                     # 10355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1112                           WDTTMR equ 0810h ;# 
  1113  0810                     # 10437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1114                           BORCON equ 0811h ;# 
  1115  0811                     # 10464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1116                           VREGCON equ 0812h ;# 
  1117  0812                     # 10485 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1118                           PCON0 equ 0813h ;# 
  1119  0813                     # 10547 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1120                           PCON1 equ 0814h ;# 
  1121  0814                     # 10568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1122                           NVMADR equ 081Ah ;# 
  1123  081A                     # 10575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1124                           NVMADRL equ 081Ah ;# 
  1125  081A                     # 10637 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1126                           NVMADRH equ 081Bh ;# 
  1127  081B                     # 10693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1128                           NVMDAT equ 081Ch ;# 
  1129  081C                     # 10700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1130                           NVMDATL equ 081Ch ;# 
  1131  081C                     # 10762 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1132                           NVMDATH equ 081Dh ;# 
  1133  081D                     # 10812 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1134                           NVMCON1 equ 081Eh ;# 
  1135  081E                     # 10868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1136                           NVMCON2 equ 081Fh ;# 
  1137  081F                     # 10888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1138                           CPUDOZE equ 088Ch ;# 
  1139  088C                     # 10953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1140                           OSCCON1 equ 088Dh ;# 
  1141  088D                     # 11023 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1142                           OSCCON2 equ 088Eh ;# 
  1143  088E                     # 11093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1144                           OSCCON3 equ 088Fh ;# 
  1145  088F                     # 11133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1146                           OSCSTAT equ 0890h ;# 
  1147  0890                     # 11190 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1148                           OSCEN equ 0891h ;# 
  1149  0891                     # 11241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1150                           OSCTUNE equ 0892h ;# 
  1151  0892                     # 11299 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1152                           OSCFRQ equ 0893h ;# 
  1153  0893                     # 11339 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1154                           CLKRCON equ 0895h ;# 
  1155  0895                     # 11404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1156                           CLKRCLK equ 0896h ;# 
  1157  0896                     # 11450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1158                           FVRCON equ 090Ch ;# 
  1159  090C                     # 11526 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1160                           DAC1CON0 equ 090Eh ;# 
  1161  090E                     # 11627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1162                           DAC1CON1 equ 090Fh ;# 
  1163  090F                     # 11679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1164                           ZCDCON equ 091Fh ;# 
  1165  091F                     # 11725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1166                           CMOUT equ 098Fh ;# 
  1167  098F                     # 11730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1168                           CMSTAT equ 098Fh ;# 
  1169  098F                     # 11803 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1170                           CM1CON0 equ 0990h ;# 
  1171  0990                     # 11883 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1172                           CM1CON1 equ 0991h ;# 
  1173  0991                     # 11923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1174                           CM1NCH equ 0992h ;# 
  1175  0992                     # 11983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1176                           CM1PCH equ 0993h ;# 
  1177  0993                     # 12043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1178                           CM2CON0 equ 0994h ;# 
  1179  0994                     # 12123 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1180                           CM2CON1 equ 0995h ;# 
  1181  0995                     # 12163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1182                           CM2NCH equ 0996h ;# 
  1183  0996                     # 12223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1184                           CM2PCH equ 0997h ;# 
  1185  0997                     # 12283 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1186                           RC2REG equ 0A19h ;# 
  1187  0A19                     # 12288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1188                           RCREG2 equ 0A19h ;# 
  1189  0A19                     # 12321 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1190                           TX2REG equ 0A1Ah ;# 
  1191  0A1A                     # 12326 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1192                           TXREG2 equ 0A1Ah ;# 
  1193  0A1A                     # 12359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1194                           SP2BRG equ 0A1Bh ;# 
  1195  0A1B                     # 12366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1196                           SP2BRGL equ 0A1Bh ;# 
  1197  0A1B                     # 12371 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1198                           SPBRG2 equ 0A1Bh ;# 
  1199  0A1B                     # 12404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1200                           SP2BRGH equ 0A1Ch ;# 
  1201  0A1C                     # 12409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1202                           SPBRGH2 equ 0A1Ch ;# 
  1203  0A1C                     # 12442 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1204                           RC2STA equ 0A1Dh ;# 
  1205  0A1D                     # 12447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1206                           RCSTA2 equ 0A1Dh ;# 
  1207  0A1D                     # 12564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1208                           TX2STA equ 0A1Eh ;# 
  1209  0A1E                     # 12569 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1210                           TXSTA2 equ 0A1Eh ;# 
  1211  0A1E                     # 12686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1212                           BAUD2CON equ 0A1Fh ;# 
  1213  0A1F                     # 12691 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1214                           BAUDCON2 equ 0A1Fh ;# 
  1215  0A1F                     # 12695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1216                           BAUDCTL2 equ 0A1Fh ;# 
  1217  0A1F                     # 12836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1218                           CLCDATA equ 01E0Fh ;# 
  1219  1E0F                     # 12874 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1220                           CLC1CON equ 01E10h ;# 
  1221  1E10                     # 12992 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1222                           CLC1POL equ 01E11h ;# 
  1223  1E11                     # 13070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1224                           CLC1SEL0 equ 01E12h ;# 
  1225  1E12                     # 13174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1226                           CLC1SEL1 equ 01E13h ;# 
  1227  1E13                     # 13278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1228                           CLC1SEL2 equ 01E14h ;# 
  1229  1E14                     # 13382 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1230                           CLC1SEL3 equ 01E15h ;# 
  1231  1E15                     # 13486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1232                           CLC1GLS0 equ 01E16h ;# 
  1233  1E16                     # 13598 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1234                           CLC1GLS1 equ 01E17h ;# 
  1235  1E17                     # 13710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1236                           CLC1GLS2 equ 01E18h ;# 
  1237  1E18                     # 13822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1238                           CLC1GLS3 equ 01E19h ;# 
  1239  1E19                     # 13934 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1240                           CLC2CON equ 01E1Ah ;# 
  1241  1E1A                     # 14052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1242                           CLC2POL equ 01E1Bh ;# 
  1243  1E1B                     # 14130 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1244                           CLC2SEL0 equ 01E1Ch ;# 
  1245  1E1C                     # 14234 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1246                           CLC2SEL1 equ 01E1Dh ;# 
  1247  1E1D                     # 14338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1248                           CLC2SEL2 equ 01E1Eh ;# 
  1249  1E1E                     # 14442 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1250                           CLC2SEL3 equ 01E1Fh ;# 
  1251  1E1F                     # 14546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1252                           CLC2GLS0 equ 01E20h ;# 
  1253  1E20                     # 14658 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1254                           CLC2GLS1 equ 01E21h ;# 
  1255  1E21                     # 14770 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1256                           CLC2GLS2 equ 01E22h ;# 
  1257  1E22                     # 14882 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1258                           CLC2GLS3 equ 01E23h ;# 
  1259  1E23                     # 14994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1260                           CLC3CON equ 01E24h ;# 
  1261  1E24                     # 15112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1262                           CLC3POL equ 01E25h ;# 
  1263  1E25                     # 15190 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1264                           CLC3SEL0 equ 01E26h ;# 
  1265  1E26                     # 15294 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1266                           CLC3SEL1 equ 01E27h ;# 
  1267  1E27                     # 15398 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1268                           CLC3SEL2 equ 01E28h ;# 
  1269  1E28                     # 15502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1270                           CLC3SEL3 equ 01E29h ;# 
  1271  1E29                     # 15606 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1272                           CLC3GLS0 equ 01E2Ah ;# 
  1273  1E2A                     # 15718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1274                           CLC3GLS1 equ 01E2Bh ;# 
  1275  1E2B                     # 15830 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1276                           CLC3GLS2 equ 01E2Ch ;# 
  1277  1E2C                     # 15942 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1278                           CLC3GLS3 equ 01E2Dh ;# 
  1279  1E2D                     # 16054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1280                           CLC4CON equ 01E2Eh ;# 
  1281  1E2E                     # 16172 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1282                           CLC4POL equ 01E2Fh ;# 
  1283  1E2F                     # 16250 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1284                           CLC4SEL0 equ 01E30h ;# 
  1285  1E30                     # 16354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1286                           CLC4SEL1 equ 01E31h ;# 
  1287  1E31                     # 16458 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1288                           CLC4SEL2 equ 01E32h ;# 
  1289  1E32                     # 16562 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1290                           CLC4SEL3 equ 01E33h ;# 
  1291  1E33                     # 16666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1292                           CLC4GLS0 equ 01E34h ;# 
  1293  1E34                     # 16778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1294                           CLC4GLS1 equ 01E35h ;# 
  1295  1E35                     # 16890 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1296                           CLC4GLS2 equ 01E36h ;# 
  1297  1E36                     # 17002 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1298                           CLC4GLS3 equ 01E37h ;# 
  1299  1E37                     # 17114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1300                           PPSLOCK equ 01E8Fh ;# 
  1301  1E8F                     # 17134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1302                           INTPPS equ 01E90h ;# 
  1303  1E90                     # 17192 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1304                           T0CKIPPS equ 01E91h ;# 
  1305  1E91                     # 17250 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1306                           T1CKIPPS equ 01E92h ;# 
  1307  1E92                     # 17308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1308                           T1GPPS equ 01E93h ;# 
  1309  1E93                     # 17366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1310                           T2INPPS equ 01E9Ch ;# 
  1311  1E9C                     # 17424 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1312                           CCP1PPS equ 01EA1h ;# 
  1313  1EA1                     # 17482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1314                           CCP2PPS equ 01EA2h ;# 
  1315  1EA2                     # 17540 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1316                           CWG1PPS equ 01EB1h ;# 
  1317  1EB1                     # 17598 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1318                           CLCIN0PPS equ 01EBBh ;# 
  1319  1EBB                     # 17656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1320                           CLCIN1PPS equ 01EBCh ;# 
  1321  1EBC                     # 17714 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1322                           CLCIN2PPS equ 01EBDh ;# 
  1323  1EBD                     # 17772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1324                           CLCIN3PPS equ 01EBEh ;# 
  1325  1EBE                     # 17830 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1326                           ADACTPPS equ 01EC3h ;# 
  1327  1EC3                     # 17888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1328                           SSP1CLKPPS equ 01EC5h ;# 
  1329  1EC5                     # 17946 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1330                           SSP1DATPPS equ 01EC6h ;# 
  1331  1EC6                     # 18004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1332                           SSP1SSPPS equ 01EC7h ;# 
  1333  1EC7                     # 18062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1334                           SSP2CLKPPS equ 01EC8h ;# 
  1335  1EC8                     # 18120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1336                           SSP2DATPPS equ 01EC9h ;# 
  1337  1EC9                     # 18178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1338                           SSP2SSPPS equ 01ECAh ;# 
  1339  1ECA                     # 18236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1340                           RX1DTPPS equ 01ECBh ;# 
  1341  1ECB                     # 18294 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1342                           TX1CKPPS equ 01ECCh ;# 
  1343  1ECC                     # 18352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1344                           RX2DTPPS equ 01ECDh ;# 
  1345  1ECD                     # 18410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1346                           TX2CKPPS equ 01ECEh ;# 
  1347  1ECE                     # 18468 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1348                           RA0PPS equ 01F10h ;# 
  1349  1F10                     # 18512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1350                           RA1PPS equ 01F11h ;# 
  1351  1F11                     # 18556 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1352                           RA2PPS equ 01F12h ;# 
  1353  1F12                     # 18600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1354                           RA3PPS equ 01F13h ;# 
  1355  1F13                     # 18644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1356                           RA4PPS equ 01F14h ;# 
  1357  1F14                     # 18688 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1358                           RA5PPS equ 01F15h ;# 
  1359  1F15                     # 18732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1360                           RA6PPS equ 01F16h ;# 
  1361  1F16                     # 18776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1362                           RA7PPS equ 01F17h ;# 
  1363  1F17                     # 18820 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1364                           RB0PPS equ 01F18h ;# 
  1365  1F18                     # 18864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1366                           RB1PPS equ 01F19h ;# 
  1367  1F19                     # 18908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1368                           RB2PPS equ 01F1Ah ;# 
  1369  1F1A                     # 18952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1370                           RB3PPS equ 01F1Bh ;# 
  1371  1F1B                     # 18996 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1372                           RB4PPS equ 01F1Ch ;# 
  1373  1F1C                     # 19040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1374                           RB5PPS equ 01F1Dh ;# 
  1375  1F1D                     # 19084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1376                           RB6PPS equ 01F1Eh ;# 
  1377  1F1E                     # 19128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1378                           RB7PPS equ 01F1Fh ;# 
  1379  1F1F                     # 19172 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1380                           RC0PPS equ 01F20h ;# 
  1381  1F20                     # 19216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1382                           RC1PPS equ 01F21h ;# 
  1383  1F21                     # 19260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1384                           RC2PPS equ 01F22h ;# 
  1385  1F22                     # 19304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1386                           RC3PPS equ 01F23h ;# 
  1387  1F23                     # 19348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1388                           RC4PPS equ 01F24h ;# 
  1389  1F24                     # 19392 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1390                           RC5PPS equ 01F25h ;# 
  1391  1F25                     # 19436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1392                           RC6PPS equ 01F26h ;# 
  1393  1F26                     # 19480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1394                           RC7PPS equ 01F27h ;# 
  1395  1F27                     # 19524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1396                           ANSELA equ 01F38h ;# 
  1397  1F38                     # 19586 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1398                           WPUA equ 01F39h ;# 
  1399  1F39                     # 19648 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1400                           ODCONA equ 01F3Ah ;# 
  1401  1F3A                     # 19710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1402                           SLRCONA equ 01F3Bh ;# 
  1403  1F3B                     # 19772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1404                           INLVLA equ 01F3Ch ;# 
  1405  1F3C                     # 19834 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1406                           IOCAP equ 01F3Dh ;# 
  1407  1F3D                     # 19896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1408                           IOCAN equ 01F3Eh ;# 
  1409  1F3E                     # 19958 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1410                           IOCAF equ 01F3Fh ;# 
  1411  1F3F                     # 20020 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1412                           ANSELB equ 01F43h ;# 
  1413  1F43                     # 20082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1414                           WPUB equ 01F44h ;# 
  1415  1F44                     # 20144 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1416                           ODCONB equ 01F45h ;# 
  1417  1F45                     # 20206 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1418                           SLRCONB equ 01F46h ;# 
  1419  1F46                     # 20268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1420                           INLVLB equ 01F47h ;# 
  1421  1F47                     # 20330 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1422                           IOCBP equ 01F48h ;# 
  1423  1F48                     # 20392 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1424                           IOCBN equ 01F49h ;# 
  1425  1F49                     # 20454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1426                           IOCBF equ 01F4Ah ;# 
  1427  1F4A                     # 20516 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1428                           ANSELC equ 01F4Eh ;# 
  1429  1F4E                     # 20578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1430                           WPUC equ 01F4Fh ;# 
  1431  1F4F                     # 20640 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1432                           ODCONC equ 01F50h ;# 
  1433  1F50                     # 20702 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1434                           SLRCONC equ 01F51h ;# 
  1435  1F51                     # 20764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1436                           INLVLC equ 01F52h ;# 
  1437  1F52                     # 20826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1438                           IOCCP equ 01F53h ;# 
  1439  1F53                     # 20888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1440                           IOCCN equ 01F54h ;# 
  1441  1F54                     # 20950 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1442                           IOCCF equ 01F55h ;# 
  1443  1F55                     # 21012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1444                           WPUE equ 01F65h ;# 
  1445  1F65                     # 21033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1446                           INLVLE equ 01F68h ;# 
  1447  1F68                     # 21054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1448                           IOCEP equ 01F69h ;# 
  1449  1F69                     # 21075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1450                           IOCEN equ 01F6Ah ;# 
  1451  1F6A                     # 21096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1452                           IOCEF equ 01F6Bh ;# 
  1453  1F6B                     # 21117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1454                           STATUS_SHAD equ 01FE4h ;# 
  1455  1FE4                     # 21137 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1456                           WREG_SHAD equ 01FE5h ;# 
  1457  1FE5                     # 21157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1458                           BSR_SHAD equ 01FE6h ;# 
  1459  1FE6                     # 21177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1460                           PCLATH_SHAD equ 01FE7h ;# 
  1461  1FE7                     # 21197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1462                           FSR0_SHAD equ 01FE8h ;# 
  1463  1FE8                     # 21204 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1464                           FSR0L_SHAD equ 01FE8h ;# 
  1465  1FE8                     # 21224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1466                           FSR0H_SHAD equ 01FE9h ;# 
  1467  1FE9                     # 21244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1468                           FSR1L_SHAD equ 01FEAh ;# 
  1469  1FEA                     # 21264 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1470                           FSR1H_SHAD equ 01FEBh ;# 
  1471  1FEB                     # 21284 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1472                           STKPTR equ 01FEDh ;# 
  1473  1FED                     # 21328 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1474                           TOSL equ 01FEEh ;# 
  1475  1FEE                     # 21398 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1476                           TOSH equ 01FEFh ;# 
  1477  1FEF                     	FNCALL	_main,_OLED_command
  1478                           	FNCALL	_main,_OLED_init
  1479                           	FNCALL	_main,_OLED_returnHome
  1480                           	FNCALL	_main,_handleSensorData
  1481                           	FNCALL	_main,_initialize
  1482                           	FNCALL	_main,_readAnalogValues
  1483                           	FNCALL	_main,_showMenu
  1484                           	FNCALL	_main,_uartSendByte
  1485                           	FNCALL	_showMenu,_OLED_print_xy
  1486                           	FNCALL	_showMenu,_getPB
  1487                           	FNCALL	_showMenu,_menuInput
  1488                           	FNCALL	_showMenu,_sprintf
  1489                           	FNCALL	_sprintf,_vfprintf
  1490                           	FNCALL	_vfprintf,_vfpfcnvrt
  1491                           	FNCALL	_vfpfcnvrt,_atoi
  1492                           	FNCALL	_vfpfcnvrt,_efgtoa
  1493                           	FNCALL	_vfpfcnvrt,_fputc
  1494                           	FNCALL	_vfpfcnvrt,_isdigit
  1495                           	FNCALL	_vfpfcnvrt,_isupper
  1496                           	FNCALL	_vfpfcnvrt,_strncmp
  1497                           	FNCALL	_vfpfcnvrt,_tolower
  1498                           	FNCALL	_efgtoa,___awdiv
  1499                           	FNCALL	_efgtoa,___awmod
  1500                           	FNCALL	_efgtoa,___fladd
  1501                           	FNCALL	_efgtoa,___fldiv
  1502                           	FNCALL	_efgtoa,___fleq
  1503                           	FNCALL	_efgtoa,___flge
  1504                           	FNCALL	_efgtoa,___flmul
  1505                           	FNCALL	_efgtoa,___flneg
  1506                           	FNCALL	_efgtoa,___flsub
  1507                           	FNCALL	_efgtoa,___fltol
  1508                           	FNCALL	_efgtoa,___fpclassifyf
  1509                           	FNCALL	_efgtoa,_floorf
  1510                           	FNCALL	_efgtoa,_isupper
  1511                           	FNCALL	_efgtoa,_pad
  1512                           	FNCALL	_efgtoa,_strcpy
  1513                           	FNCALL	_efgtoa,_tolower
  1514                           	FNCALL	_tolower,_isupper
  1515                           	FNCALL	_pad,_fputc
  1516                           	FNCALL	_pad,_fputs
  1517                           	FNCALL	_pad,_strlen
  1518                           	FNCALL	_fputs,_fputc
  1519                           	FNCALL	_fputc,_putch
  1520                           	FNCALL	___flsub,___fladd
  1521                           	FNCALL	_atoi,___wmul
  1522                           	FNCALL	_atoi,_isdigit
  1523                           	FNCALL	_atoi,_isspace
  1524                           	FNCALL	_menuInput,_OLED_returnHome
  1525                           	FNCALL	_menuInput,_OLED_scrollDisplayLeft
  1526                           	FNCALL	_menuInput,_OLED_scrollDisplayRight
  1527                           	FNCALL	_menuInput,_getPB
  1528                           	FNCALL	_menuInput,_getRotDir
  1529                           	FNCALL	_OLED_scrollDisplayRight,_OLED_command
  1530                           	FNCALL	_OLED_scrollDisplayLeft,_OLED_command
  1531                           	FNCALL	_OLED_returnHome,_OLED_command
  1532                           	FNCALL	_OLED_print_xy,_OLED_command
  1533                           	FNCALL	_OLED_print_xy,_OLED_write
  1534                           	FNCALL	_OLED_write,_OLED_send
  1535                           	FNCALL	_OLED_write,_OLED_waitForReady
  1536                           	FNCALL	_readAnalogValues,___fldiv
  1537                           	FNCALL	_readAnalogValues,___flmul
  1538                           	FNCALL	_readAnalogValues,___xxtofl
  1539                           	FNCALL	___flmul,__Umul8_16
  1540                           	FNCALL	_handleSensorData,___xxtofl
  1541                           	FNCALL	_OLED_init,_OLED_command
  1542                           	FNCALL	_OLED_init,_OLED_write4bits
  1543                           	FNCALL	_OLED_command,_OLED_send
  1544                           	FNCALL	_OLED_command,_OLED_waitForReady
  1545                           	FNCALL	_OLED_waitForReady,_OLED_pulseEnable
  1546                           	FNCALL	_OLED_send,_OLED_write4bits
  1547                           	FNCALL	_OLED_write4bits,_OLED_pulseEnable
  1548                           	FNROOT	_main
  1549                           	FNCALL	_ISR,_pushButtonISR
  1550                           	FNCALL	_ISR,_rotISR
  1551                           	FNCALL	_ISR,_uartReceiveISR
  1552                           	FNCALL	_uartReceiveISR,_strncpy
  1553                           	FNCALL	intlevel1,_ISR
  1554                           	global	intlevel1
  1555                           	FNROOT	intlevel1
  1556                           	global	OLED_print_xy@F7353
  1557                           	global	OLED_setCursor@F7345
  1558                           psect	idataBANK4,class=CODE,space=0,delta=2,noexec
  1559                           global __pidataBANK4
  1560                           __pidataBANK4:
  1561  07F8                     	file	"oled.c"
  1562                           	line	153
  1563                           
  1564                           ;initializer for OLED_print_xy@F7353
  1565                           	retlw	low(0)
  1566  07F8  3400               	retlw	040h
  1567  07F9  3440               	retlw	014h
  1568  07FA  3414               	retlw	054h
  1569  07FB  3454               	line	139
  1570                           
  1571                           ;initializer for OLED_setCursor@F7345
  1572                           	retlw	low(0)
  1573  07FC  3400               	retlw	040h
  1574  07FD  3440               	retlw	014h
  1575  07FE  3414               	retlw	054h
  1576  07FF  3454               	global	_transition_table
  1577                           psect	stringtext1,class=STRCODE,delta=2,noexec
  1578                           global __pstringtext1
  1579                           __pstringtext1:
  1580  2000                     	file	"main.c"
  1581                           	line	67
  1582                           _transition_table:
  1583  2000                     	retlw	low(0)
  1584  2000  3400               	retlw	04h
  1585  2001  3404               	retlw	01h
  1586  2002  3401               	retlw	low(0)
  1587  2003  3400               	retlw	082h
  1588  2004  3482               	retlw	low(0)
  1589  2005  3400               	retlw	01h
  1590  2006  3401               	retlw	low(0)
  1591  2007  3400               	retlw	02h
  1592  2008  3402               	retlw	03h
  1593  2009  3403               	retlw	01h
  1594  200A  3401               	retlw	low(0)
  1595  200B  3400               	retlw	02h
  1596  200C  3402               	retlw	03h
  1597  200D  3403               	retlw	low(0)
  1598  200E  3400               	retlw	080h
  1599  200F  3480               	retlw	045h
  1600  2010  3445               	retlw	04h
  1601  2011  3404               	retlw	low(0)
  1602  2012  3400               	retlw	low(0)
  1603  2013  3400               	retlw	05h
  1604  2014  3405               	retlw	04h
  1605  2015  3404               	retlw	06h
  1606  2016  3406               	retlw	low(0)
  1607  2017  3400               	retlw	05h
  1608  2018  3405               	retlw	low(0)
  1609  2019  3400               	retlw	06h
  1610  201A  3406               	retlw	040h
  1611  201B  3440               	global __end_of_transition_table
  1612                           __end_of_transition_table:
  1613  201C                     	global	_transition_table
  1614                           	global	uartReceiveISR@rxCount
  1615                           	global	_g_rotDir
  1616                           	global	_g_curRotState
  1617                           	global	_g_100msTick
  1618                           	global	_g_10msTick
  1619                           	global	_g_power
  1620                           	global	_g_voltage
  1621                           	global	_nout
  1622                           	global	_width
  1623                           	global	_prec
  1624                           	global	_flags
  1625                           	global	uartReceiveISR@checksum
  1626                           	global	_g_pbState
  1627                           	global	_g_rxOErrCount
  1628                           	global	_g_rxFErrCount
  1629                           	global	_g_dewPointC
  1630                           	global	_g_relHum
  1631                           	global	_g_tempC
  1632                           	global	_g_dataReady
  1633                           	global	_g_sensorTimer
  1634                           	global	showMenu@page
  1635                           	global	showMenu@menu
  1636                           	global	floorf@F514
  1637                           	global	___fpclassifyf@F453
  1638                           	global	_g_sensorVersion
  1639                           	global	uartReceiveISR@buffer
  1640                           	global	_g_dataPacket
  1641                           	global	_dbuf
  1642                           	global	_PORTCbits
  1643                           _PORTCbits	set	0xE
  1644  000E                     	global	_TRISCbits
  1645                           _TRISCbits	set	0x14
  1646  0014                     	global	_PORTAbits
  1647                           _PORTAbits	set	0xC
  1648  000C                     	global	_INTCONbits
  1649                           _INTCONbits	set	0xB
  1650  000B                     	global	_INTCON
  1651                           _INTCON	set	0xB
  1652  000B                     	global	_TRISC
  1653                           _TRISC	set	0x14
  1654  0014                     	global	_TRISB
  1655                           _TRISB	set	0x13
  1656  0013                     	global	_TRISA
  1657                           _TRISA	set	0x12
  1658  0012                     	global	_LATCbits
  1659                           _LATCbits	set	0x1A
  1660  001A                     	global	_LATBbits
  1661                           _LATBbits	set	0x19
  1662  0019                     	global	_ADCON1
  1663                           _ADCON1	set	0x9E
  1664  009E                     	global	_ADRESL
  1665                           _ADRESL	set	0x9B
  1666  009B                     	global	_ADRESH
  1667                           _ADRESH	set	0x9C
  1668  009C                     	global	_ADCON0bits
  1669                           _ADCON0bits	set	0x9D
  1670  009D                     	global	_RC1REG
  1671                           _RC1REG	set	0x119
  1672  0119                     	global	_RC1STAbits
  1673                           _RC1STAbits	set	0x11D
  1674  011D                     	global	_TX1REG
  1675                           _TX1REG	set	0x11A
  1676  011A                     	global	_TX1STA
  1677                           _TX1STA	set	0x11E
  1678  011E                     	global	_RC1STA
  1679                           _RC1STA	set	0x11D
  1680  011D                     	global	_SPBRGL
  1681                           _SPBRGL	set	0x11B
  1682  011B                     	global	_BAUD1CON
  1683                           _BAUD1CON	set	0x11F
  1684  011F                     	global	_TMR1
  1685                           _TMR1	set	0x20C
  1686  020C                     	global	_T1CLK
  1687                           _T1CLK	set	0x211
  1688  0211                     	global	_T1CON
  1689                           _T1CON	set	0x20E
  1690  020E                     	global	_TMR0
  1691                           _TMR0	set	0x59C
  1692  059C                     	global	_T0CON1
  1693                           _T0CON1	set	0x59F
  1694  059F                     	global	_T0CON0
  1695                           _T0CON0	set	0x59E
  1696  059E                     	global	_PIE3bits
  1697                           _PIE3bits	set	0x719
  1698  0719                     	global	_PIR4bits
  1699                           _PIR4bits	set	0x710
  1700  0710                     	global	_PIE4bits
  1701                           _PIE4bits	set	0x71A
  1702  071A                     	global	_PIR0bits
  1703                           _PIR0bits	set	0x70C
  1704  070C                     	global	_PIR3bits
  1705                           _PIR3bits	set	0x70F
  1706  070F                     	global	_PIE4
  1707                           _PIE4	set	0x71A
  1708  071A                     	global	_PIE3
  1709                           _PIE3	set	0x719
  1710  0719                     	global	_PIE0
  1711                           _PIE0	set	0x716
  1712  0716                     	global	_PIE0bits
  1713                           _PIE0bits	set	0x716
  1714  0716                     	global	_OSCCON3bits
  1715                           _OSCCON3bits	set	0x88F
  1716  088F                     	global	_OSCCON1
  1717                           _OSCCON1	set	0x88D
  1718  088D                     	global	_OSCFRQ
  1719                           _OSCFRQ	set	0x893
  1720  0893                     	global	_RX1DTPPSbits
  1721                           _RX1DTPPSbits	set	0x1ECB
  1722  1ECB                     	global	_IOCAFbits
  1723                           _IOCAFbits	set	0x1F3F
  1724  1F3F                     	global	_IOCCN
  1725                           _IOCCN	set	0x1F54
  1726  1F54                     	global	_IOCAN
  1727                           _IOCAN	set	0x1F3E
  1728  1F3E                     	global	_IOCAP
  1729                           _IOCAP	set	0x1F3D
  1730  1F3D                     	global	_ANSELC
  1731                           _ANSELC	set	0x1F4E
  1732  1F4E                     	global	_ANSELB
  1733                           _ANSELB	set	0x1F43
  1734  1F43                     	global	_ANSELA
  1735                           _ANSELA	set	0x1F38
  1736  1F38                     	global	_RC6PPS
  1737                           _RC6PPS	set	0x1F26
  1738  1F26                     	
  1739                           STR_2:	
  1740  201C                     	retlw	37	;'%'
  1741  201C  3425               	retlw	53	;'5'
  1742  201D  3435               	retlw	46	;'.'
  1743  201E  342E               	retlw	49	;'1'
  1744  201F  3431               	retlw	102	;'f'
  1745  2020  3466               	retlw	32	;' '
  1746  2021  3420               	retlw	-33
  1747  2022  34DF               	retlw	67	;'C'
  1748  2023  3443               	retlw	32	;' '
  1749  2024  3420               	retlw	32	;' '
  1750  2025  3420               	retlw	32	;' '
  1751  2026  3420               	retlw	32	;' '
  1752  2027  3420               	retlw	37	;'%'
  1753  2028  3425               	retlw	53	;'5'
  1754  2029  3435               	retlw	46	;'.'
  1755  202A  342E               	retlw	49	;'1'
  1756  202B  3431               	retlw	102	;'f'
  1757  202C  3466               	retlw	32	;' '
  1758  202D  3420               	retlw	37	;'%'
  1759  202E  3425               	retlw	37	;'%'
  1760  202F  3425               	retlw	32	;' '
  1761  2030  3420               	retlw	32	;' '
  1762  2031  3420               	retlw	32	;' '
  1763  2032  3420               	retlw	32	;' '
  1764  2033  3420               	retlw	32	;' '
  1765  2034  3420               	retlw	37	;'%'
  1766  2035  3425               	retlw	53	;'5'
  1767  2036  3435               	retlw	46	;'.'
  1768  2037  342E               	retlw	49	;'1'
  1769  2038  3431               	retlw	102	;'f'
  1770  2039  3466               	retlw	32	;' '
  1771  203A  3420               	retlw	-33
  1772  203B  34DF               	retlw	67	;'C'
  1773  203C  3443               	retlw	32	;' '
  1774  203D  3420               	retlw	32	;' '
  1775  203E  3420               	retlw	32	;' '
  1776  203F  3420               	retlw	32	;' '
  1777  2040  3420               	retlw	37	;'%'
  1778  2041  3425               	retlw	52	;'4'
  1779  2042  3434               	retlw	46	;'.'
  1780  2043  342E               	retlw	49	;'1'
  1781  2044  3431               	retlw	102	;'f'
  1782  2045  3466               	retlw	86	;'V'
  1783  2046  3456               	retlw	32	;' '
  1784  2047  3420               	retlw	32	;' '
  1785  2048  3420               	retlw	37	;'%'
  1786  2049  3425               	retlw	52	;'4'
  1787  204A  3434               	retlw	46	;'.'
  1788  204B  342E               	retlw	49	;'1'
  1789  204C  3431               	retlw	102	;'f'
  1790  204D  3466               	retlw	87	;'W'
  1791  204E  3457               	retlw	0
  1792  204F  3400               psect	stringtext2,class=STRCODE,delta=2,noexec
  1793                           global __pstringtext2
  1794                           __pstringtext2:
  1795  2050                     	
  1796                           STR_3:	
  1797  2050                     	retlw	67	;'C'
  1798  2050  3443               	retlw	104	;'h'
  1799  2051  3468               	retlw	49	;'1'
  1800  2052  3431               	retlw	58	;':'
  1801  2053  343A               	retlw	32	;' '
  1802  2054  3420               	retlw	120	;'x'
  1803  2055  3478               	retlw	120	;'x'
  1804  2056  3478               	retlw	32	;' '
  1805  2057  3420               	retlw	105	;'i'
  1806  2058  3469               	retlw	110	;'n'
  1807  2059  346E               	retlw	99	;'c'
  1808  205A  3463               	retlw	104	;'h'
  1809  205B  3468               	retlw	67	;'C'
  1810  205C  3443               	retlw	104	;'h'
  1811  205D  3468               	retlw	50	;'2'
  1812  205E  3432               	retlw	58	;':'
  1813  205F  343A               	retlw	32	;' '
  1814  2060  3420               	retlw	120	;'x'
  1815  2061  3478               	retlw	120	;'x'
  1816  2062  3478               	retlw	32	;' '
  1817  2063  3420               	retlw	105	;'i'
  1818  2064  3469               	retlw	110	;'n'
  1819  2065  346E               	retlw	99	;'c'
  1820  2066  3463               	retlw	104	;'h'
  1821  2067  3468               	retlw	67	;'C'
  1822  2068  3443               	retlw	104	;'h'
  1823  2069  3468               	retlw	51	;'3'
  1824  206A  3433               	retlw	58	;':'
  1825  206B  343A               	retlw	32	;' '
  1826  206C  3420               	retlw	120	;'x'
  1827  206D  3478               	retlw	120	;'x'
  1828  206E  3478               	retlw	32	;' '
  1829  206F  3420               	retlw	105	;'i'
  1830  2070  3469               	retlw	110	;'n'
  1831  2071  346E               	retlw	99	;'c'
  1832  2072  3463               	retlw	104	;'h'
  1833  2073  3468               	retlw	67	;'C'
  1834  2074  3443               	retlw	104	;'h'
  1835  2075  3468               	retlw	52	;'4'
  1836  2076  3434               	retlw	58	;':'
  1837  2077  343A               	retlw	32	;' '
  1838  2078  3420               	retlw	120	;'x'
  1839  2079  3478               	retlw	120	;'x'
  1840  207A  3478               	retlw	32	;' '
  1841  207B  3420               	retlw	105	;'i'
  1842  207C  3469               	retlw	110	;'n'
  1843  207D  346E               	retlw	99	;'c'
  1844  207E  3463               	retlw	104	;'h'
  1845  207F  3468               	retlw	0
  1846  2080  3400               psect	stringtext3,class=STRCODE,delta=2,noexec
  1847                           global __pstringtext3
  1848                           __pstringtext3:
  1849  2081                     	
  1850                           STR_1:	
  1851  2081                     	retlw	84	;'T'
  1852  2081  3454               	retlw	101	;'e'
  1853  2082  3465               	retlw	109	;'m'
  1854  2083  346D               	retlw	112	;'p'
  1855  2084  3470               	retlw	101	;'e'
  1856  2085  3465               	retlw	114	;'r'
  1857  2086  3472               	retlw	97	;'a'
  1858  2087  3461               	retlw	116	;'t'
  1859  2088  3474               	retlw	117	;'u'
  1860  2089  3475               	retlw	114	;'r'
  1861  208A  3472               	retlw	101	;'e'
  1862  208B  3465               	retlw	32	;' '
  1863  208C  3420               	retlw	82	;'R'
  1864  208D  3452               	retlw	101	;'e'
  1865  208E  3465               	retlw	108	;'l'
  1866  208F  346C               	retlw	46	;'.'
  1867  2090  342E               	retlw	104	;'h'
  1868  2091  3468               	retlw	117	;'u'
  1869  2092  3475               	retlw	109	;'m'
  1870  2093  346D               	retlw	105	;'i'
  1871  2094  3469               	retlw	100	;'d'
  1872  2095  3464               	retlw	105	;'i'
  1873  2096  3469               	retlw	116	;'t'
  1874  2097  3474               	retlw	121	;'y'
  1875  2098  3479               	retlw	68	;'D'
  1876  2099  3444               	retlw	101	;'e'
  1877  209A  3465               	retlw	119	;'w'
  1878  209B  3477               	retlw	112	;'p'
  1879  209C  3470               	retlw	111	;'o'
  1880  209D  346F               	retlw	105	;'i'
  1881  209E  3469               	retlw	110	;'n'
  1882  209F  346E               	retlw	116	;'t'
  1883  20A0  3474               	retlw	32	;' '
  1884  20A1  3420               	retlw	32	;' '
  1885  20A2  3420               	retlw	32	;' '
  1886  20A3  3420               	retlw	32	;' '
  1887  20A4  3420               	retlw	66	;'B'
  1888  20A5  3442               	retlw	97	;'a'
  1889  20A6  3461               	retlw	116	;'t'
  1890  20A7  3474               	retlw	46	;'.'
  1891  20A8  342E               	retlw	32	;' '
  1892  20A9  3420               	retlw	32	;' '
  1893  20AA  3420               	retlw	32	;' '
  1894  20AB  3420               	retlw	80	;'P'
  1895  20AC  3450               	retlw	111	;'o'
  1896  20AD  346F               	retlw	119	;'w'
  1897  20AE  3477               	retlw	101	;'e'
  1898  20AF  3465               	retlw	114	;'r'
  1899  20B0  3472               	retlw	0
  1900  20B1  3400               psect	stringtext4,class=STRCODE,delta=2,noexec
  1901                           global __pstringtext4
  1902                           __pstringtext4:
  1903  2800                     	
  1904                           STR_4:	
  1905  2800                     	retlw	73	;'I'
  1906  2800  3449               	retlw	78	;'N'
  1907  2801  344E               	retlw	70	;'F'
  1908  2802  3446               	retlw	0
  1909  2803  3400               psect	stringtext5,class=STRCODE,delta=2,noexec
  1910                           global __pstringtext5
  1911                           __pstringtext5:
  1912  2804                     	
  1913                           STR_8:	
  1914  2804                     	retlw	78	;'N'
  1915  2804  344E               	retlw	65	;'A'
  1916  2805  3441               	retlw	78	;'N'
  1917  2806  344E               	retlw	0
  1918  2807  3400               psect	stringtext6,class=STRCODE,delta=2,noexec
  1919                           global __pstringtext6
  1920                           __pstringtext6:
  1921  2808                     	
  1922                           STR_5:	
  1923  2808                     	retlw	105	;'i'
  1924  2808  3469               	retlw	110	;'n'
  1925  2809  346E               	retlw	102	;'f'
  1926  280A  3466               	retlw	0
  1927  280B  3400               psect	stringtext7,class=STRCODE,delta=2,noexec
  1928                           global __pstringtext7
  1929                           __pstringtext7:
  1930  280C                     	
  1931                           STR_9:	
  1932  280C                     	retlw	110	;'n'
  1933  280C  346E               	retlw	97	;'a'
  1934  280D  3461               	retlw	110	;'n'
  1935  280E  346E               	retlw	0
  1936  280F  3400               psect	stringtext8,class=STRCODE,delta=2,noexec
  1937                           global __pstringtext8
  1938                           __pstringtext8:
  1939  2810                     	
  1940                           STR_12:	
  1941  2810                     	retlw	108	;'l'
  1942  2810  346C               	retlw	102	;'f'
  1943  2811  3466               	retlw	0
  1944  2812  3400               psect	stringtext9,class=STRCODE,delta=2,noexec
  1945                           global __pstringtext9
  1946                           __pstringtext9:
  1947  0000                     STR_6	equ	STR_5+0
  1948  2808                     STR_7	equ	STR_5+0
  1949  2808                     STR_10	equ	STR_5+0
  1950  2808                     STR_11	equ	STR_5+0
  1951  2808                     STR_13	equ	STR_12+0
  1952  2810                     STR_14	equ	STR_12+0
  1953  2810                     STR_15	equ	STR_12+0
  1954  2810                     STR_16	equ	STR_12+0
  1955  2810                     ; #config settings
  1956                           global __CFG_FEXTOSC$OFF
  1957                           __CFG_FEXTOSC$OFF equ 0x0
  1958  0000                     global __CFG_RSTOSC$HFINT1
  1959                           __CFG_RSTOSC$HFINT1 equ 0x0
  1960  0000                     global __CFG_CLKOUTEN$OFF
  1961                           __CFG_CLKOUTEN$OFF equ 0x0
  1962  0000                     global __CFG_CSWEN$ON
  1963                           __CFG_CSWEN$ON equ 0x0
  1964  0000                     global __CFG_FCMEN$ON
  1965                           __CFG_FCMEN$ON equ 0x0
  1966  0000                     global __CFG_MCLRE$ON
  1967                           __CFG_MCLRE$ON equ 0x0
  1968  0000                     global __CFG_PWRTE$OFF
  1969                           __CFG_PWRTE$OFF equ 0x0
  1970  0000                     global __CFG_LPBOREN$OFF
  1971                           __CFG_LPBOREN$OFF equ 0x0
  1972  0000                     global __CFG_BOREN$ON
  1973                           __CFG_BOREN$ON equ 0x0
  1974  0000                     global __CFG_BORV$LO
  1975                           __CFG_BORV$LO equ 0x0
  1976  0000                     global __CFG_ZCD$OFF
  1977                           __CFG_ZCD$OFF equ 0x0
  1978  0000                     global __CFG_PPS1WAY$ON
  1979                           __CFG_PPS1WAY$ON equ 0x0
  1980  0000                     global __CFG_STVREN$ON
  1981                           __CFG_STVREN$ON equ 0x0
  1982  0000                     global __CFG_WDTCPS$WDTCPS_31
  1983                           __CFG_WDTCPS$WDTCPS_31 equ 0x0
  1984  0000                     global __CFG_WDTE$OFF
  1985                           __CFG_WDTE$OFF equ 0x0
  1986  0000                     global __CFG_WDTCWS$WDTCWS_7
  1987                           __CFG_WDTCWS$WDTCWS_7 equ 0x0
  1988  0000                     global __CFG_WDTCCS$SC
  1989                           __CFG_WDTCCS$SC equ 0x0
  1990  0000                     global __CFG_BBSIZE$BB512
  1991                           __CFG_BBSIZE$BB512 equ 0x0
  1992  0000                     global __CFG_BBEN$OFF
  1993                           __CFG_BBEN$OFF equ 0x0
  1994  0000                     global __CFG_SAFEN$OFF
  1995                           __CFG_SAFEN$OFF equ 0x0
  1996  0000                     global __CFG_WRTAPP$OFF
  1997                           __CFG_WRTAPP$OFF equ 0x0
  1998  0000                     global __CFG_WRTB$OFF
  1999                           __CFG_WRTB$OFF equ 0x0
  2000  0000                     global __CFG_WRTC$OFF
  2001                           __CFG_WRTC$OFF equ 0x0
  2002  0000                     global __CFG_WRTSAF$OFF
  2003                           __CFG_WRTSAF$OFF equ 0x0
  2004  0000                     global __CFG_LVP$ON
  2005                           __CFG_LVP$ON equ 0x0
  2006  0000                     global __CFG_CP$OFF
  2007                           __CFG_CP$OFF equ 0x0
  2008  0000                     	file	"C:\Users\Ondre\AppData\Local\Temp\sbk0."
  2009                           	line	#
  2010                           psect cinit,class=CODE,delta=2
  2011                           global start_initialization
  2012                           start_initialization:
  2013  007E                     
  2014                           global __initialization
  2015                           __initialization:
  2016  007E                     psect	bssCOMMON,class=COMMON,space=1,noexec
  2017                           global __pbssCOMMON
  2018                           __pbssCOMMON:
  2019  0079                     uartReceiveISR@rxCount:
  2020  0079                            ds      1
  2021  0079                     
  2022                           _g_rotDir:
  2023  007A                            ds      1
  2024  007A                     
  2025                           _g_curRotState:
  2026  007B                            ds      1
  2027  007B                     
  2028                           _g_100msTick:
  2029  007C                            ds      1
  2030  007C                     
  2031                           _g_10msTick:
  2032  007D                            ds      1
  2033  007D                     
  2034                           psect	bssBANK2,class=BANK2,space=1,noexec
  2035                           global __pbssBANK2
  2036                           __pbssBANK2:
  2037  015A                     _g_power:
  2038  015A                            ds      4
  2039  015A                     
  2040                           _g_voltage:
  2041  015E                            ds      4
  2042  015E                     
  2043                           _nout:
  2044  0162                            ds      2
  2045  0162                     
  2046                           _width:
  2047  0164                            ds      2
  2048  0164                     
  2049                           _prec:
  2050  0166                            ds      2
  2051  0166                     
  2052                           _flags:
  2053  0168                            ds      2
  2054  0168                     
  2055                           uartReceiveISR@checksum:
  2056  016A                            ds      1
  2057  016A                     
  2058                           _g_pbState:
  2059  016B                            ds      1
  2060  016B                     
  2061                           _g_rxOErrCount:
  2062  016C                            ds      1
  2063  016C                     
  2064                           _g_rxFErrCount:
  2065  016D                            ds      1
  2066  016D                     
  2067                           psect	bssBANK3,class=BANK3,space=1,noexec
  2068                           global __pbssBANK3
  2069                           __pbssBANK3:
  2070  01DE                     _g_dewPointC:
  2071  01DE                            ds      4
  2072  01DE                     
  2073                           _g_relHum:
  2074  01E2                            ds      4
  2075  01E2                     
  2076                           _g_tempC:
  2077  01E6                            ds      4
  2078  01E6                     
  2079                           _g_dataReady:
  2080  01EA                            ds      1
  2081  01EA                     
  2082                           _g_sensorTimer:
  2083  01EB                            ds      1
  2084  01EB                     
  2085                           showMenu@page:
  2086  01EC                            ds      1
  2087  01EC                     
  2088                           showMenu@menu:
  2089  01ED                            ds      1
  2090  01ED                     
  2091                           psect	bssBANK4,class=BANK4,space=1,noexec
  2092                           global __pbssBANK4
  2093                           __pbssBANK4:
  2094  0220                     floorf@F514:
  2095  0220                            ds      4
  2096  0220                     
  2097                           ___fpclassifyf@F453:
  2098  0224                            ds      4
  2099  0224                     
  2100                           _g_sensorVersion:
  2101  0228                            ds      4
  2102  0228                     
  2103                           uartReceiveISR@buffer:
  2104  022C                            ds      20
  2105  022C                     
  2106                           _g_dataPacket:
  2107  0240                            ds      15
  2108  0240                     
  2109                           psect	dataBANK4,class=BANK4,space=1,noexec
  2110                           global __pdataBANK4
  2111                           __pdataBANK4:
  2112  024F                     	file	"oled.c"
  2113                           	line	153
  2114                           OLED_print_xy@F7353:
  2115  024F                            ds      4
  2116  024F                     
  2117                           psect	dataBANK4
  2118                           	file	"oled.c"
  2119                           	line	139
  2120                           OLED_setCursor@F7345:
  2121  0253                            ds      4
  2122  0253                     
  2123                           psect	bssBANK5,class=BANK5,space=1,noexec
  2124                           global __pbssBANK5
  2125                           __pbssBANK5:
  2126  02A0                     _dbuf:
  2127  02A0                            ds      80
  2128  02A0                     
  2129                           	file	"C:\Users\Ondre\AppData\Local\Temp\sbk0."
  2130                           	line	#
  2131                           psect inittext,class=CODE,delta=2
  2132                           global init_ram,btemp
  2133                           init_ram:
  2134  26C9                     	movwf btemp,f
  2135  26C9  00FE               initloop:
  2136  26CA                     	moviw fsr0++
  2137  26CA  0012               	movwi fsr1++
  2138  26CB  001E               	decfsz btemp
  2139  26CC  0BFE               	goto initloop
  2140  26CD  2ECA               	retlw 0
  2141  26CE  3400               ; Initialize objects allocated to BANK4
  2142                           	global __pidataBANK4,__pdataBANK4
  2143                           psect cinit,class=CODE,delta=2,merge=1
  2144                           	movlw low(__pidataBANK4)
  2145  007E  30F8               	movwf fsr0l
  2146  007F  0084               	movlw high(__pidataBANK4)|80h
  2147  0080  3087               	movwf fsr0h
  2148  0081  0085               	movlw low(__pdataBANK4)
  2149  0082  304F               	movwf fsr1l
  2150  0083  0086               	movlw high(__pdataBANK4)
  2151  0084  3002               	movwf fsr1h
  2152  0085  0087               	movlw 08h
  2153  0086  3008               	fcall init_ram
  2154  0087  31A6  26C9  3180   	line	#
  2155                           psect clrtext,class=CODE,delta=2
  2156                           global clear_ram0
  2157                           ;	Called with FSR0 containing the base address, and
  2158                           ;	WREG with the size to clear
  2159                           clear_ram0:
  2160  26C3                     	clrwdt			;clear the watchdog before getting into this loop
  2161  26C3  0064               clrloop0:
  2162  26C4                     	clrf	indf0		;clear RAM location pointed to by FSR
  2163  26C4  0180               	addfsr	0,1
  2164  26C5  3101               	decfsz wreg		;Have we reached the end of clearing yet?
  2165  26C6  0B89               	goto clrloop0	;have we reached the end yet?
  2166  26C7  2EC4               	retlw	0		;all done for this memory range, return
  2167  26C8  3400               ; Clear objects allocated to COMMON
  2168                           psect cinit,class=CODE,delta=2,merge=1
  2169                           	global __pbssCOMMON
  2170                           	clrf	((__pbssCOMMON)+0)&07Fh
  2171  008A  01F9               	clrf	((__pbssCOMMON)+1)&07Fh
  2172  008B  01FA               	clrf	((__pbssCOMMON)+2)&07Fh
  2173  008C  01FB               	clrf	((__pbssCOMMON)+3)&07Fh
  2174  008D  01FC               	clrf	((__pbssCOMMON)+4)&07Fh
  2175  008E  01FD               ; Clear objects allocated to BANK2
  2176                           psect cinit,class=CODE,delta=2,merge=1
  2177                           	global __pbssBANK2
  2178                           	movlw	low(__pbssBANK2)
  2179  008F  305A               	movwf	fsr0l
  2180  0090  0084               	movlw	high(__pbssBANK2)
  2181  0091  3001               	movwf	fsr0h
  2182  0092  0085               	movlw	014h
  2183  0093  3014               	fcall	clear_ram0
  2184  0094  31A6  26C3  3180   ; Clear objects allocated to BANK3
  2185                           psect cinit,class=CODE,delta=2,merge=1
  2186                           	global __pbssBANK3
  2187                           	movlw	low(__pbssBANK3)
  2188  0097  30DE               	movwf	fsr0l
  2189  0098  0084               	movlw	high(__pbssBANK3)
  2190  0099  3001               	movwf	fsr0h
  2191  009A  0085               	movlw	010h
  2192  009B  3010               	fcall	clear_ram0
  2193  009C  31A6  26C3  3180   ; Clear objects allocated to BANK4
  2194                           psect cinit,class=CODE,delta=2,merge=1
  2195                           	global __pbssBANK4
  2196                           	movlw	low(__pbssBANK4)
  2197  009F  3020               	movwf	fsr0l
  2198  00A0  0084               	movlw	high(__pbssBANK4)
  2199  00A1  3002               	movwf	fsr0h
  2200  00A2  0085               	movlw	02Fh
  2201  00A3  302F               	fcall	clear_ram0
  2202  00A4  31A6  26C3  3180   ; Clear objects allocated to BANK5
  2203                           psect cinit,class=CODE,delta=2,merge=1
  2204                           	global __pbssBANK5
  2205                           	movlw	low(__pbssBANK5)
  2206  00A7  30A0               	movwf	fsr0l
  2207  00A8  0084               	movlw	high(__pbssBANK5)
  2208  00A9  3002               	movwf	fsr0h
  2209  00AA  0085               	movlw	050h
  2210  00AB  3050               	fcall	clear_ram0
  2211  00AC  31A6  26C3  3180   psect cinit,class=CODE,delta=2,merge=1
  2212                           global end_of_initialization,__end_of__initialization
  2213                           
  2214                           ;End of C runtime variable initialization code
  2215                           
  2216                           end_of_initialization:
  2217  00AF                     __end_of__initialization:
  2218  00AF                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  2219  00AF  107E               movlb 0
  2220  00B0  0140               ljmp _main	;jump to C main() function
  2221  00B1  319A  2A1B         psect	cstackBANK3,class=BANK3,space=1,noexec
  2222                           global __pcstackBANK3
  2223                           __pcstackBANK3:
  2224  01A0                     	global	showMenu@s
  2225                           showMenu@s:	; 61 bytes @ 0x0
  2226  01A0                     	ds	61
  2227  01A0                     	global	showMenu@pb
  2228                           showMenu@pb:	; 1 bytes @ 0x3D
  2229  01DD                     	ds	1
  2230  01DD                     psect	cstackBANK2,class=BANK2,space=1,noexec
  2231                           global __pcstackBANK2
  2232                           __pcstackBANK2:
  2233  0120                     	global	_vfpfcnvrt$860
  2234                           _vfpfcnvrt$860:	; 2 bytes @ 0x0
  2235  0120                     	ds	2
  2236  0120                     	global	_vfpfcnvrt$861
  2237                           _vfpfcnvrt$861:	; 2 bytes @ 0x2
  2238  0122                     	ds	2
  2239  0122                     	global	_vfpfcnvrt$865
  2240                           _vfpfcnvrt$865:	; 2 bytes @ 0x4
  2241  0124                     	ds	2
  2242  0124                     	global	vfpfcnvrt@f
  2243                           vfpfcnvrt@f:	; 4 bytes @ 0x6
  2244  0126                     	ds	4
  2245  0126                     	global	vfpfcnvrt@ct
  2246                           vfpfcnvrt@ct:	; 3 bytes @ 0xA
  2247  012A                     	ds	3
  2248  012A                     	global	vfpfcnvrt@c
  2249                           vfpfcnvrt@c:	; 1 bytes @ 0xD
  2250  012D                     	ds	1
  2251  012D                     	global	vfpfcnvrt@fp
  2252                           vfpfcnvrt@fp:	; 1 bytes @ 0xE
  2253  012E                     	ds	1
  2254  012E                     	global	?_vfprintf
  2255                           ?_vfprintf:	; 2 bytes @ 0xF
  2256  012F                     	global	vfprintf@fmt
  2257                           vfprintf@fmt:	; 2 bytes @ 0xF
  2258  012F                     	ds	2
  2259  012F                     	global	vfprintf@ap
  2260                           vfprintf@ap:	; 1 bytes @ 0x11
  2261  0131                     	ds	1
  2262  0131                     ??_vfprintf:	; 1 bytes @ 0x12
  2263  0132                     	ds	2
  2264  0132                     	global	vfprintf@fp
  2265                           vfprintf@fp:	; 1 bytes @ 0x14
  2266  0134                     	ds	1
  2267  0134                     	global	vfprintf@cfmt
  2268                           vfprintf@cfmt:	; 2 bytes @ 0x15
  2269  0135                     	ds	2
  2270  0135                     	global	?_sprintf
  2271                           ?_sprintf:	; 2 bytes @ 0x17
  2272  0137                     	global	sprintf@fmt
  2273                           sprintf@fmt:	; 2 bytes @ 0x17
  2274  0137                     	ds	22
  2275  0137                     ??_sprintf:	; 1 bytes @ 0x2D
  2276  014D                     	ds	1
  2277  014D                     	global	sprintf@ret
  2278                           sprintf@ret:	; 2 bytes @ 0x2E
  2279  014E                     	ds	2
  2280  014E                     	global	sprintf@s
  2281                           sprintf@s:	; 1 bytes @ 0x30
  2282  0150                     	ds	1
  2283  0150                     	global	sprintf@ap
  2284                           sprintf@ap:	; 1 bytes @ 0x31
  2285  0151                     	ds	1
  2286  0151                     	global	sprintf@f
  2287                           sprintf@f:	; 5 bytes @ 0x32
  2288  0152                     	ds	5
  2289  0152                     ??_showMenu:	; 1 bytes @ 0x37
  2290  0157                     	ds	2
  2291  0157                     ??_main:	; 1 bytes @ 0x39
  2292  0159                     	ds	1
  2293  0159                     psect	cstackBANK1,class=BANK1,space=1,noexec
  2294                           global __pcstackBANK1
  2295                           __pcstackBANK1:
  2296  00A0                     	global	floorf@m
  2297                           floorf@m:	; 4 bytes @ 0x0
  2298  00A0                     	ds	4
  2299  00A0                     	global	floorf@e
  2300                           floorf@e:	; 2 bytes @ 0x4
  2301  00A4                     	ds	2
  2302  00A4                     	global	floorf@u
  2303                           floorf@u:	; 4 bytes @ 0x6
  2304  00A6                     	ds	4
  2305  00A6                     	global	?_efgtoa
  2306                           ?_efgtoa:	; 2 bytes @ 0xA
  2307  00AA                     	global	efgtoa@f
  2308                           efgtoa@f:	; 4 bytes @ 0xA
  2309  00AA                     	ds	4
  2310  00AA                     	global	efgtoa@c
  2311                           efgtoa@c:	; 1 bytes @ 0xE
  2312  00AE                     	ds	1
  2313  00AE                     	global	efgtoa@ou
  2314                           efgtoa@ou:	; 4 bytes @ 0xF
  2315  00AF                     	ds	4
  2316  00AF                     	global	_efgtoa$834
  2317                           _efgtoa$834:	; 2 bytes @ 0x13
  2318  00B3                     	ds	2
  2319  00B3                     	global	_efgtoa$835
  2320                           _efgtoa$835:	; 2 bytes @ 0x15
  2321  00B5                     	ds	2
  2322  00B5                     	global	_efgtoa$840
  2323                           _efgtoa$840:	; 2 bytes @ 0x17
  2324  00B7                     	ds	2
  2325  00B7                     	global	_efgtoa$844
  2326                           _efgtoa$844:	; 2 bytes @ 0x19
  2327  00B9                     	ds	2
  2328  00B9                     	global	_efgtoa$845
  2329                           _efgtoa$845:	; 2 bytes @ 0x1B
  2330  00BB                     	ds	2
  2331  00BB                     	global	_efgtoa$846
  2332                           _efgtoa$846:	; 2 bytes @ 0x1D
  2333  00BD                     	ds	2
  2334  00BD                     	global	efgtoa@t
  2335                           efgtoa@t:	; 2 bytes @ 0x1F
  2336  00BF                     	ds	2
  2337  00BF                     	global	efgtoa@pp
  2338                           efgtoa@pp:	; 2 bytes @ 0x21
  2339  00C1                     	ds	2
  2340  00C1                     	global	efgtoa@m
  2341                           efgtoa@m:	; 2 bytes @ 0x23
  2342  00C3                     	ds	2
  2343  00C3                     	global	efgtoa@ne
  2344                           efgtoa@ne:	; 2 bytes @ 0x25
  2345  00C5                     	ds	2
  2346  00C5                     	global	efgtoa@d
  2347                           efgtoa@d:	; 2 bytes @ 0x27
  2348  00C7                     	ds	2
  2349  00C7                     	global	efgtoa@sign
  2350                           efgtoa@sign:	; 2 bytes @ 0x29
  2351  00C9                     	ds	2
  2352  00C9                     	global	efgtoa@fp
  2353                           efgtoa@fp:	; 1 bytes @ 0x2B
  2354  00CB                     	ds	1
  2355  00CB                     	global	efgtoa@p
  2356                           efgtoa@p:	; 2 bytes @ 0x2C
  2357  00CC                     	ds	2
  2358  00CC                     	global	efgtoa@nmode
  2359                           efgtoa@nmode:	; 1 bytes @ 0x2E
  2360  00CE                     	ds	1
  2361  00CE                     	global	efgtoa@w
  2362                           efgtoa@w:	; 2 bytes @ 0x2F
  2363  00CF                     	ds	2
  2364  00CF                     	global	efgtoa@mode
  2365                           efgtoa@mode:	; 1 bytes @ 0x31
  2366  00D1                     	ds	1
  2367  00D1                     	global	efgtoa@h
  2368                           efgtoa@h:	; 4 bytes @ 0x32
  2369  00D2                     	ds	4
  2370  00D2                     	global	efgtoa@l
  2371                           efgtoa@l:	; 4 bytes @ 0x36
  2372  00D6                     	ds	4
  2373  00D6                     	global	efgtoa@i
  2374                           efgtoa@i:	; 2 bytes @ 0x3A
  2375  00DA                     	ds	2
  2376  00DA                     	global	efgtoa@g
  2377                           efgtoa@g:	; 4 bytes @ 0x3C
  2378  00DC                     	ds	4
  2379  00DC                     	global	efgtoa@e
  2380                           efgtoa@e:	; 2 bytes @ 0x40
  2381  00E0                     	ds	2
  2382  00E0                     	global	efgtoa@n
  2383                           efgtoa@n:	; 2 bytes @ 0x42
  2384  00E2                     	ds	2
  2385  00E2                     	global	efgtoa@u
  2386                           efgtoa@u:	; 4 bytes @ 0x44
  2387  00E4                     	ds	4
  2388  00E4                     	global	?_vfpfcnvrt
  2389                           ?_vfpfcnvrt:	; 2 bytes @ 0x48
  2390  00E8                     	global	vfpfcnvrt@fmt
  2391                           vfpfcnvrt@fmt:	; 1 bytes @ 0x48
  2392  00E8                     	ds	1
  2393  00E8                     	global	vfpfcnvrt@ap
  2394                           vfpfcnvrt@ap:	; 1 bytes @ 0x49
  2395  00E9                     	ds	1
  2396  00E9                     ??_vfpfcnvrt:	; 1 bytes @ 0x4A
  2397  00EA                     	ds	6
  2398  00EA                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  2399                           global __pcstackCOMMON
  2400                           __pcstackCOMMON:
  2401  0070                     ?_initialize:	; 1 bytes @ 0x0
  2402  0070                     ?_OLED_init:	; 1 bytes @ 0x0
  2403  0070                     ?_OLED_returnHome:	; 1 bytes @ 0x0
  2404  0070                     ?_OLED_command:	; 1 bytes @ 0x0
  2405  0070                     ?_readAnalogValues:	; 1 bytes @ 0x0
  2406  0070                     ?_uartSendByte:	; 1 bytes @ 0x0
  2407  0070                     ?_handleSensorData:	; 1 bytes @ 0x0
  2408  0070                     ?_showMenu:	; 1 bytes @ 0x0
  2409  0070                     ?_getPB:	; 1 bytes @ 0x0
  2410  0070                     ?_getRotDir:	; 1 bytes @ 0x0
  2411  0070                     ?_OLED_scrollDisplayLeft:	; 1 bytes @ 0x0
  2412  0070                     ?_OLED_scrollDisplayRight:	; 1 bytes @ 0x0
  2413  0070                     ?_pushButtonISR:	; 1 bytes @ 0x0
  2414  0070                     ??_pushButtonISR:	; 1 bytes @ 0x0
  2415  0070                     ?_rotISR:	; 1 bytes @ 0x0
  2416  0070                     ??_rotISR:	; 1 bytes @ 0x0
  2417  0070                     ?_uartReceiveISR:	; 1 bytes @ 0x0
  2418  0070                     ?_strncpy:	; 1 bytes @ 0x0
  2419  0070                     ?_putch:	; 1 bytes @ 0x0
  2420  0070                     ?_main:	; 1 bytes @ 0x0
  2421  0070                     ?_ISR:	; 1 bytes @ 0x0
  2422  0070                     ?_OLED_pulseEnable:	; 1 bytes @ 0x0
  2423  0070                     ?_OLED_write4bits:	; 1 bytes @ 0x0
  2424  0070                     ?_OLED_waitForReady:	; 1 bytes @ 0x0
  2425  0070                     ?_OLED_write:	; 1 bytes @ 0x0
  2426  0070                     putch@c:	; 1 bytes @ 0x0
  2427  0070                     	global	strncpy@s
  2428                           strncpy@s:	; 1 bytes @ 0x0
  2429  0070                     	ds	1
  2430  0070                     	global	strncpy@n
  2431                           strncpy@n:	; 2 bytes @ 0x1
  2432  0071                     	ds	2
  2433  0071                     ??_strncpy:	; 1 bytes @ 0x3
  2434  0073                     	ds	1
  2435  0073                     	global	strncpy@d
  2436                           strncpy@d:	; 1 bytes @ 0x4
  2437  0074                     	ds	1
  2438  0074                     	global	strncpy@cp
  2439                           strncpy@cp:	; 1 bytes @ 0x5
  2440  0075                     	ds	1
  2441  0075                     ??_uartReceiveISR:	; 1 bytes @ 0x6
  2442  0076                     	ds	1
  2443  0076                     	global	rotISR@input
  2444                           rotISR@input:	; 1 bytes @ 0x7
  2445  0077                     	ds	1
  2446  0077                     ??_ISR:	; 1 bytes @ 0x8
  2447  0078                     	ds	1
  2448  0078                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2449                           global __pcstackBANK0
  2450                           __pcstackBANK0:
  2451  0020                     ?___fleq:	; 1 bit 
  2452  0020                     ??_initialize:	; 1 bytes @ 0x0
  2453  0020                     ??_uartSendByte:	; 1 bytes @ 0x0
  2454  0020                     ??_getPB:	; 1 bytes @ 0x0
  2455  0020                     ??_getRotDir:	; 1 bytes @ 0x0
  2456  0020                     ?_strcpy:	; 1 bytes @ 0x0
  2457  0020                     ??_putch:	; 1 bytes @ 0x0
  2458  0020                     ??_OLED_pulseEnable:	; 1 bytes @ 0x0
  2459  0020                     ??_OLED_write4bits:	; 1 bytes @ 0x0
  2460  0020                     ??_OLED_waitForReady:	; 1 bytes @ 0x0
  2461  0020                     ?_fputc:	; 2 bytes @ 0x0
  2462  0020                     	global	?_strlen
  2463                           ?_strlen:	; 2 bytes @ 0x0
  2464  0020                     	global	?___fpclassifyf
  2465                           ?___fpclassifyf:	; 2 bytes @ 0x0
  2466  0020                     	global	?_isupper
  2467                           ?_isupper:	; 2 bytes @ 0x0
  2468  0020                     	global	?_isdigit
  2469                           ?_isdigit:	; 2 bytes @ 0x0
  2470  0020                     	global	?_strncmp
  2471                           ?_strncmp:	; 2 bytes @ 0x0
  2472  0020                     	global	?__Umul8_16
  2473                           ?__Umul8_16:	; 2 bytes @ 0x0
  2474  0020                     	global	?_isspace
  2475                           ?_isspace:	; 2 bytes @ 0x0
  2476  0020                     	global	?___wmul
  2477                           ?___wmul:	; 2 bytes @ 0x0
  2478  0020                     	global	?___awdiv
  2479                           ?___awdiv:	; 2 bytes @ 0x0
  2480  0020                     	global	?___awmod
  2481                           ?___awmod:	; 2 bytes @ 0x0
  2482  0020                     	global	?___flneg
  2483                           ?___flneg:	; 4 bytes @ 0x0
  2484  0020                     	global	?___fltol
  2485                           ?___fltol:	; 4 bytes @ 0x0
  2486  0020                     	global	?___fladd
  2487                           ?___fladd:	; 4 bytes @ 0x0
  2488  0020                     	global	?___xxtofl
  2489                           ?___xxtofl:	; 4 bytes @ 0x0
  2490  0020                     	global	uartSendByte@s
  2491                           uartSendByte@s:	; 1 bytes @ 0x0
  2492  0020                     	global	OLED_waitForReady@busy
  2493                           OLED_waitForReady@busy:	; 1 bytes @ 0x0
  2494  0020                     	global	__Umul8_16@multiplicand
  2495                           __Umul8_16@multiplicand:	; 1 bytes @ 0x0
  2496  0020                     	global	___wmul@multiplier
  2497                           ___wmul@multiplier:	; 2 bytes @ 0x0
  2498  0020                     	global	___awdiv@divisor
  2499                           ___awdiv@divisor:	; 2 bytes @ 0x0
  2500  0020                     	global	___awmod@divisor
  2501                           ___awmod@divisor:	; 2 bytes @ 0x0
  2502  0020                     	global	isdigit@c
  2503                           isdigit@c:	; 2 bytes @ 0x0
  2504  0020                     	global	isspace@c
  2505                           isspace@c:	; 2 bytes @ 0x0
  2506  0020                     	global	isupper@c
  2507                           isupper@c:	; 2 bytes @ 0x0
  2508  0020                     	global	fputc@c
  2509                           fputc@c:	; 2 bytes @ 0x0
  2510  0020                     	global	strcpy@src
  2511                           strcpy@src:	; 2 bytes @ 0x0
  2512  0020                     	global	strncmp@_r
  2513                           strncmp@_r:	; 2 bytes @ 0x0
  2514  0020                     	global	___fleq@ff1
  2515                           ___fleq@ff1:	; 4 bytes @ 0x0
  2516  0020                     	global	___flneg@f1
  2517                           ___flneg@f1:	; 4 bytes @ 0x0
  2518  0020                     	global	___fltol@f1
  2519                           ___fltol@f1:	; 4 bytes @ 0x0
  2520  0020                     	global	___fladd@b
  2521                           ___fladd@b:	; 4 bytes @ 0x0
  2522  0020                     	global	___xxtofl@val
  2523                           ___xxtofl@val:	; 4 bytes @ 0x0
  2524  0020                     	global	___fpclassifyf@x
  2525                           ___fpclassifyf@x:	; 4 bytes @ 0x0
  2526  0020                     	ds	1
  2527  0020                     	global	getRotDir@ret
  2528                           getRotDir@ret:	; 1 bytes @ 0x1
  2529  0021                     	global	getPB@ret
  2530                           getPB@ret:	; 1 bytes @ 0x1
  2531  0021                     	ds	1
  2532  0021                     ??_strlen:	; 1 bytes @ 0x2
  2533  0022                     ??_isupper:	; 1 bytes @ 0x2
  2534  0022                     ??_strcpy:	; 1 bytes @ 0x2
  2535  0022                     ??_isdigit:	; 1 bytes @ 0x2
  2536  0022                     ??__Umul8_16:	; 1 bytes @ 0x2
  2537  0022                     ??_isspace:	; 1 bytes @ 0x2
  2538  0022                     	global	OLED_write4bits@value
  2539                           OLED_write4bits@value:	; 1 bytes @ 0x2
  2540  0022                     	global	fputc@fp
  2541                           fputc@fp:	; 1 bytes @ 0x2
  2542  0022                     	global	___wmul@multiplicand
  2543                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  2544  0022                     	global	___awdiv@dividend
  2545                           ___awdiv@dividend:	; 2 bytes @ 0x2
  2546  0022                     	global	___awmod@dividend
  2547                           ___awmod@dividend:	; 2 bytes @ 0x2
  2548  0022                     	global	strncmp@n
  2549                           strncmp@n:	; 2 bytes @ 0x2
  2550  0022                     	ds	1
  2551  0022                     ??_fputc:	; 1 bytes @ 0x3
  2552  0023                     ?_OLED_send:	; 1 bytes @ 0x3
  2553  0023                     	global	OLED_send@mode
  2554                           OLED_send@mode:	; 1 bytes @ 0x3
  2555  0023                     	ds	1
  2556  0023                     ??___fpclassifyf:	; 1 bytes @ 0x4
  2557  0024                     ??_strncmp:	; 1 bytes @ 0x4
  2558  0024                     ??_OLED_send:	; 1 bytes @ 0x4
  2559  0024                     ??___wmul:	; 1 bytes @ 0x4
  2560  0024                     ??___awdiv:	; 1 bytes @ 0x4
  2561  0024                     ??___awmod:	; 1 bytes @ 0x4
  2562  0024                     ??___flneg:	; 1 bytes @ 0x4
  2563  0024                     ??___fltol:	; 1 bytes @ 0x4
  2564  0024                     ??___xxtofl:	; 1 bytes @ 0x4
  2565  0024                     	global	_isspace$1200
  2566                           _isspace$1200:	; 1 bytes @ 0x4
  2567  0024                     	global	___wmul@product
  2568                           ___wmul@product:	; 2 bytes @ 0x4
  2569  0024                     	global	strcpy@s
  2570                           strcpy@s:	; 2 bytes @ 0x4
  2571  0024                     	global	__Umul8_16@product
  2572                           __Umul8_16@product:	; 2 bytes @ 0x4
  2573  0024                     	global	___fleq@ff2
  2574                           ___fleq@ff2:	; 4 bytes @ 0x4
  2575  0024                     	global	___fladd@a
  2576                           ___fladd@a:	; 4 bytes @ 0x4
  2577  0024                     	ds	1
  2578  0024                     	global	OLED_send@value
  2579                           OLED_send@value:	; 1 bytes @ 0x5
  2580  0025                     	global	___awdiv@counter
  2581                           ___awdiv@counter:	; 1 bytes @ 0x5
  2582  0025                     	global	___awmod@counter
  2583                           ___awmod@counter:	; 1 bytes @ 0x5
  2584  0025                     	ds	1
  2585  0025                     ??_OLED_command:	; 1 bytes @ 0x6
  2586  0026                     ??_OLED_write:	; 1 bytes @ 0x6
  2587  0026                     	global	?_tolower
  2588                           ?_tolower:	; 2 bytes @ 0x6
  2589  0026                     	global	?_atoi
  2590                           ?_atoi:	; 2 bytes @ 0x6
  2591  0026                     	global	OLED_command@value
  2592                           OLED_command@value:	; 1 bytes @ 0x6
  2593  0026                     	global	OLED_write@value
  2594                           OLED_write@value:	; 1 bytes @ 0x6
  2595  0026                     	global	___awdiv@sign
  2596                           ___awdiv@sign:	; 1 bytes @ 0x6
  2597  0026                     	global	___awmod@sign
  2598                           ___awmod@sign:	; 1 bytes @ 0x6
  2599  0026                     	global	strcpy@d
  2600                           strcpy@d:	; 1 bytes @ 0x6
  2601  0026                     	global	strlen@a
  2602                           strlen@a:	; 1 bytes @ 0x6
  2603  0026                     	global	strncmp@_l
  2604                           strncmp@_l:	; 1 bytes @ 0x6
  2605  0026                     	global	atoi@s
  2606                           atoi@s:	; 2 bytes @ 0x6
  2607  0026                     	global	tolower@c
  2608                           tolower@c:	; 2 bytes @ 0x6
  2609  0026                     	global	__Umul8_16@word_mpld
  2610                           __Umul8_16@word_mpld:	; 2 bytes @ 0x6
  2611  0026                     	ds	1
  2612  0026                     ??_OLED_init:	; 1 bytes @ 0x7
  2613  0027                     ??_OLED_returnHome:	; 1 bytes @ 0x7
  2614  0027                     ?_OLED_print_xy:	; 1 bytes @ 0x7
  2615  0027                     ?_menuInput:	; 1 bytes @ 0x7
  2616  0027                     ??_OLED_scrollDisplayLeft:	; 1 bytes @ 0x7
  2617  0027                     ??_OLED_scrollDisplayRight:	; 1 bytes @ 0x7
  2618  0027                     	global	menuInput@numPages
  2619                           menuInput@numPages:	; 1 bytes @ 0x7
  2620  0027                     	global	OLED_print_xy@row
  2621                           OLED_print_xy@row:	; 1 bytes @ 0x7
  2622  0027                     	global	strcpy@dest
  2623                           strcpy@dest:	; 1 bytes @ 0x7
  2624  0027                     	global	strlen@s
  2625                           strlen@s:	; 1 bytes @ 0x7
  2626  0027                     	global	___awdiv@quotient
  2627                           ___awdiv@quotient:	; 2 bytes @ 0x7
  2628  0027                     	global	strncmp@r
  2629                           strncmp@r:	; 2 bytes @ 0x7
  2630  0027                     	ds	1
  2631  0027                     ??_tolower:	; 1 bytes @ 0x8
  2632  0028                     ??_atoi:	; 1 bytes @ 0x8
  2633  0028                     ??___fleq:	; 1 bytes @ 0x8
  2634  0028                     ??___fladd:	; 1 bytes @ 0x8
  2635  0028                     ?_fputs:	; 2 bytes @ 0x8
  2636  0028                     	global	menuInput@menu
  2637                           menuInput@menu:	; 1 bytes @ 0x8
  2638  0028                     	global	___xxtofl@sign
  2639                           ___xxtofl@sign:	; 1 bytes @ 0x8
  2640  0028                     	global	fputs@fp
  2641                           fputs@fp:	; 1 bytes @ 0x8
  2642  0028                     	global	__Umul8_16@multiplier
  2643                           __Umul8_16@multiplier:	; 1 bytes @ 0x8
  2644  0028                     	global	OLED_print_xy@s
  2645                           OLED_print_xy@s:	; 2 bytes @ 0x8
  2646  0028                     	ds	1
  2647  0028                     ??_fputs:	; 1 bytes @ 0x9
  2648  0029                     	global	menuInput@pbShort
  2649                           menuInput@pbShort:	; 1 bytes @ 0x9
  2650  0029                     	global	___fltol@sign1
  2651                           ___fltol@sign1:	; 1 bytes @ 0x9
  2652  0029                     	global	___xxtofl@exp
  2653                           ___xxtofl@exp:	; 1 bytes @ 0x9
  2654  0029                     	global	strncmp@l
  2655                           strncmp@l:	; 1 bytes @ 0x9
  2656  0029                     	ds	1
  2657  0029                     ??_OLED_print_xy:	; 1 bytes @ 0xA
  2658  002A                     	global	menuInput@pbLong
  2659                           menuInput@pbLong:	; 1 bytes @ 0xA
  2660  002A                     	global	___fltol@exp1
  2661                           ___fltol@exp1:	; 1 bytes @ 0xA
  2662  002A                     	global	___fpclassifyf@e
  2663                           ___fpclassifyf@e:	; 2 bytes @ 0xA
  2664  002A                     	global	___xxtofl@arg
  2665                           ___xxtofl@arg:	; 4 bytes @ 0xA
  2666  002A                     	ds	1
  2667  002A                     	global	menuInput@timeout
  2668                           menuInput@timeout:	; 1 bytes @ 0xB
  2669  002B                     	global	OLED_print_xy@row_offsets
  2670                           OLED_print_xy@row_offsets:	; 4 bytes @ 0xB
  2671  002B                     	ds	1
  2672  002B                     ??_menuInput:	; 1 bytes @ 0xC
  2673  002C                     	global	fputs@c
  2674                           fputs@c:	; 1 bytes @ 0xC
  2675  002C                     	global	atoi@neg
  2676                           atoi@neg:	; 2 bytes @ 0xC
  2677  002C                     	global	_tolower$1291
  2678                           _tolower$1291:	; 2 bytes @ 0xC
  2679  002C                     	global	___fpclassifyf@u
  2680                           ___fpclassifyf@u:	; 4 bytes @ 0xC
  2681  002C                     	ds	1
  2682  002C                     	global	fputs@i
  2683                           fputs@i:	; 2 bytes @ 0xD
  2684  002D                     	ds	1
  2685  002D                     ??_handleSensorData:	; 1 bytes @ 0xE
  2686  002E                     	global	?___flmul
  2687                           ?___flmul:	; 4 bytes @ 0xE
  2688  002E                     	global	menuInput@dir
  2689                           menuInput@dir:	; 1 bytes @ 0xE
  2690  002E                     	global	_atoi$1169
  2691                           _atoi$1169:	; 2 bytes @ 0xE
  2692  002E                     	global	___flmul@b
  2693                           ___flmul@b:	; 4 bytes @ 0xE
  2694  002E                     	ds	1
  2695  002E                     	global	menuInput@pb
  2696                           menuInput@pb:	; 1 bytes @ 0xF
  2697  002F                     	global	OLED_print_xy@col
  2698                           OLED_print_xy@col:	; 1 bytes @ 0xF
  2699  002F                     	global	fputs@s
  2700                           fputs@s:	; 1 bytes @ 0xF
  2701  002F                     	ds	1
  2702  002F                     	global	?_pad
  2703                           ?_pad:	; 2 bytes @ 0x10
  2704  0030                     	global	menuInput@n
  2705                           menuInput@n:	; 1 bytes @ 0x10
  2706  0030                     	global	pad@buf
  2707                           pad@buf:	; 1 bytes @ 0x10
  2708  0030                     	global	_atoi$1171
  2709                           _atoi$1171:	; 2 bytes @ 0x10
  2710  0030                     	ds	1
  2711  0030                     	global	menuInput@page
  2712                           menuInput@page:	; 1 bytes @ 0x11
  2713  0031                     	global	pad@p
  2714                           pad@p:	; 2 bytes @ 0x11
  2715  0031                     	ds	1
  2716  0031                     	global	_atoi$1170
  2717                           _atoi$1170:	; 1 bytes @ 0x12
  2718  0032                     	global	___flmul@a
  2719                           ___flmul@a:	; 4 bytes @ 0x12
  2720  0032                     	ds	1
  2721  0032                     ??_pad:	; 1 bytes @ 0x13
  2722  0033                     	global	atoi@n
  2723                           atoi@n:	; 2 bytes @ 0x13
  2724  0033                     	ds	1
  2725  0033                     	global	___fladd@signs
  2726                           ___fladd@signs:	; 1 bytes @ 0x14
  2727  0034                     	global	pad@i
  2728                           pad@i:	; 2 bytes @ 0x14
  2729  0034                     	ds	1
  2730  0034                     	global	___fladd@aexp
  2731                           ___fladd@aexp:	; 1 bytes @ 0x15
  2732  0035                     	ds	1
  2733  0035                     ??___flmul:	; 1 bytes @ 0x16
  2734  0036                     	global	___fladd@bexp
  2735                           ___fladd@bexp:	; 1 bytes @ 0x16
  2736  0036                     	global	pad@w
  2737                           pad@w:	; 2 bytes @ 0x16
  2738  0036                     	ds	1
  2739  0036                     	global	___fladd@grs
  2740                           ___fladd@grs:	; 1 bytes @ 0x17
  2741  0037                     	ds	1
  2742  0037                     	global	pad@fp
  2743                           pad@fp:	; 1 bytes @ 0x18
  2744  0038                     	ds	3
  2745  0038                     	global	___flmul@sign
  2746                           ___flmul@sign:	; 1 bytes @ 0x1B
  2747  003B                     	ds	1
  2748  003B                     	global	___flmul@grs
  2749                           ___flmul@grs:	; 4 bytes @ 0x1C
  2750  003C                     	ds	4
  2751  003C                     	global	___flmul@aexp
  2752                           ___flmul@aexp:	; 1 bytes @ 0x20
  2753  0040                     	ds	1
  2754  0040                     	global	___flmul@bexp
  2755                           ___flmul@bexp:	; 1 bytes @ 0x21
  2756  0041                     	ds	1
  2757  0041                     	global	___flmul@prod
  2758                           ___flmul@prod:	; 4 bytes @ 0x22
  2759  0042                     	ds	4
  2760  0042                     	global	___flmul@temp
  2761                           ___flmul@temp:	; 2 bytes @ 0x26
  2762  0046                     	ds	2
  2763  0046                     ?___flge:	; 1 bit 
  2764  0048                     	global	?___flsub
  2765                           ?___flsub:	; 4 bytes @ 0x28
  2766  0048                     	global	?___fldiv
  2767                           ?___fldiv:	; 4 bytes @ 0x28
  2768  0048                     	global	___flge@ff1
  2769                           ___flge@ff1:	; 4 bytes @ 0x28
  2770  0048                     	global	___flsub@a
  2771                           ___flsub@a:	; 4 bytes @ 0x28
  2772  0048                     	global	___fldiv@a
  2773                           ___fldiv@a:	; 4 bytes @ 0x28
  2774  0048                     	ds	4
  2775  0048                     	global	___flge@ff2
  2776                           ___flge@ff2:	; 4 bytes @ 0x2C
  2777  004C                     	global	___flsub@b
  2778                           ___flsub@b:	; 4 bytes @ 0x2C
  2779  004C                     	global	___fldiv@b
  2780                           ___fldiv@b:	; 4 bytes @ 0x2C
  2781  004C                     	ds	4
  2782  004C                     ??___flge:	; 1 bytes @ 0x30
  2783  0050                     ??___flsub:	; 1 bytes @ 0x30
  2784  0050                     ??___fldiv:	; 1 bytes @ 0x30
  2785  0050                     	ds	5
  2786  0050                     	global	___fldiv@rem
  2787                           ___fldiv@rem:	; 4 bytes @ 0x35
  2788  0055                     	ds	4
  2789  0055                     	global	___fldiv@sign
  2790                           ___fldiv@sign:	; 1 bytes @ 0x39
  2791  0059                     	ds	1
  2792  0059                     	global	___fldiv@new_exp
  2793                           ___fldiv@new_exp:	; 2 bytes @ 0x3A
  2794  005A                     	ds	2
  2795  005A                     	global	___fldiv@grs
  2796                           ___fldiv@grs:	; 4 bytes @ 0x3C
  2797  005C                     	ds	4
  2798  005C                     	global	___fldiv@bexp
  2799                           ___fldiv@bexp:	; 1 bytes @ 0x40
  2800  0060                     	ds	1
  2801  0060                     	global	___fldiv@aexp
  2802                           ___fldiv@aexp:	; 1 bytes @ 0x41
  2803  0061                     	ds	1
  2804  0061                     ??_readAnalogValues:	; 1 bytes @ 0x42
  2805  0062                     	global	?_floorf
  2806                           ?_floorf:	; 4 bytes @ 0x42
  2807  0062                     	global	floorf@x
  2808                           floorf@x:	; 4 bytes @ 0x42
  2809  0062                     	global	_readAnalogValues$1449
  2810                           _readAnalogValues$1449:	; 4 bytes @ 0x42
  2811  0062                     	ds	4
  2812  0062                     ??_floorf:	; 1 bytes @ 0x46
  2813  0066                     	global	readAnalogValues@adc
  2814                           readAnalogValues@adc:	; 2 bytes @ 0x46
  2815  0066                     	ds	6
  2816  0066                     ??_efgtoa:	; 1 bytes @ 0x4C
  2817  006C                     	ds	4
  2818  006C                     ;!
  2819                           ;!Data Sizes:
  2820                           ;!    Strings     169
  2821                           ;!    Constant    28
  2822                           ;!    Data        8
  2823                           ;!    BSS         168
  2824                           ;!    Persistent  0
  2825                           ;!    Stack       0
  2826                           ;!
  2827                           ;!Auto Spaces:
  2828                           ;!    Space          Size  Autos    Used
  2829                           ;!    COMMON           14      9      14
  2830                           ;!    BANK0            80     80      80
  2831                           ;!    BANK1            80     80      80
  2832                           ;!    BANK2            80     58      78
  2833                           ;!    BANK3            80     62      78
  2834                           ;!    BANK4            80      0      55
  2835                           ;!    BANK5            80      0      80
  2836                           ;!    BANK6            80      0       0
  2837                           ;!    BANK7            80      0       0
  2838                           ;!    BANK8            80      0       0
  2839                           ;!    BANK9            80      0       0
  2840                           ;!    BANK10           80      0       0
  2841                           ;!    BANK11           80      0       0
  2842                           ;!    BANK12           80      0       0
  2843                           ;!    BANK13           80      0       0
  2844                           ;!    BANK14           80      0       0
  2845                           ;!    BANK15           80      0       0
  2846                           ;!    BANK16           80      0       0
  2847                           ;!    BANK17           80      0       0
  2848                           ;!    BANK18           80      0       0
  2849                           ;!    BANK19           80      0       0
  2850                           ;!    BANK20           80      0       0
  2851                           ;!    BANK21           80      0       0
  2852                           ;!    BANK22           80      0       0
  2853                           ;!    BANK23           80      0       0
  2854                           ;!    BANK24           80      0       0
  2855                           ;!    BANK25           32      0       0
  2856                           
  2857                           ;!
  2858                           ;!Pointer List with Targets:
  2859                           ;!
  2860                           ;!    strncpy@s	PTR const unsigned char  size(1) Largest target is 20
  2861                           ;!		 -> uartReceiveISR@buffer(BANK4[20]), 
  2862                           ;!
  2863                           ;!    strncpy@d	PTR unsigned char  size(1) Largest target is 15
  2864                           ;!		 -> g_dataPacket(BANK4[15]), 
  2865                           ;!
  2866                           ;!    strncpy@cp	PTR unsigned char  size(1) Largest target is 15
  2867                           ;!		 -> g_dataPacket(BANK4[15]), 
  2868                           ;!
  2869                           ;!    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
  2870                           ;!		 -> STR_14(CODE[3]), 
  2871                           ;!
  2872                           ;!    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
  2873                           ;!		 -> STR_14(CODE[3]), 
  2874                           ;!
  2875                           ;!    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
  2876                           ;!		 -> vfpfcnvrt@ct(BANK2[3]), 
  2877                           ;!
  2878                           ;!    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
  2879                           ;!		 -> vfpfcnvrt@ct(BANK2[3]), 
  2880                           ;!
  2881                           ;!    strlen@s	PTR const unsigned char  size(1) Largest target is 80
  2882                           ;!		 -> dbuf(BANK5[80]), 
  2883                           ;!
  2884                           ;!    strlen@a	PTR const unsigned char  size(1) Largest target is 80
  2885                           ;!		 -> dbuf(BANK5[80]), 
  2886                           ;!
  2887                           ;!    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
  2888                           ;!		 -> dbuf(BANK5[80]), 
  2889                           ;!
  2890                           ;!    strcpy@d	PTR unsigned char  size(1) Largest target is 80
  2891                           ;!		 -> dbuf(BANK5[80]), 
  2892                           ;!
  2893                           ;!    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
  2894                           ;!		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
  2895                           ;!		 -> dbuf(BANK5[80]), 
  2896                           ;!
  2897                           ;!    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
  2898                           ;!		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
  2899                           ;!		 -> dbuf(BANK5[80]), 
  2900                           ;!
  2901                           ;!    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 52
  2902                           ;!		 -> STR_2(CODE[52]), 
  2903                           ;!
  2904                           ;!    sprintf@s	PTR unsigned char  size(1) Largest target is 61
  2905                           ;!		 -> showMenu@s(BANK3[61]), 
  2906                           ;!
  2907                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  2908                           ;!		 -> ?_sprintf(BANK2[2]), 
  2909                           ;!
  2910                           ;!    f.buffer	PTR unsigned char  size(1) Largest target is 61
  2911                           ;!		 -> showMenu@s(BANK3[61]), 
  2912                           ;!
  2913                           ;!    fputs@s	PTR const unsigned char  size(1) Largest target is 80
  2914                           ;!		 -> dbuf(BANK5[80]), 
  2915                           ;!
  2916                           ;!    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
  2917                           ;!		 -> sprintf@f(BANK2[5]), 
  2918                           ;!
  2919                           ;!    S1213_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 61
  2920                           ;!		 -> showMenu@s(BANK3[61]), 
  2921                           ;!
  2922                           ;!    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 61
  2923                           ;!		 -> showMenu@s(BANK3[61]), 
  2924                           ;!
  2925                           ;!    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
  2926                           ;!		 -> sprintf@f(BANK2[5]), 
  2927                           ;!
  2928                           ;!    atoi@s	PTR const unsigned char  size(2) Largest target is 52
  2929                           ;!		 -> STR_2(CODE[52]), 
  2930                           ;!
  2931                           ;!    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
  2932                           ;!		 -> sprintf@ap(BANK2[1]), 
  2933                           ;!
  2934                           ;!    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
  2935                           ;!		 -> sprintf@f(BANK2[5]), 
  2936                           ;!
  2937                           ;!    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 52
  2938                           ;!		 -> STR_2(CODE[52]), 
  2939                           ;!
  2940                           ;!    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 52
  2941                           ;!		 -> STR_2(CODE[52]), 
  2942                           ;!
  2943                           ;!    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
  2944                           ;!		 -> sprintf@f(BANK2[5]), 
  2945                           ;!
  2946                           ;!    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
  2947                           ;!		 -> sprintf@ap(BANK2[1]), 
  2948                           ;!
  2949                           ;!    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
  2950                           ;!		 -> vfprintf@cfmt(BANK2[2]), 
  2951                           ;!
  2952                           ;!    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
  2953                           ;!		 -> sprintf@f(BANK2[5]), 
  2954                           ;!
  2955                           ;!    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
  2956                           ;!		 -> dbuf(BANK5[80]), 
  2957                           ;!
  2958                           ;!    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
  2959                           ;!		 -> sprintf@f(BANK2[5]), 
  2960                           ;!
  2961                           ;!    pad@buf	PTR unsigned char  size(1) Largest target is 80
  2962                           ;!		 -> dbuf(BANK5[80]), 
  2963                           ;!
  2964                           ;!    OLED_print_xy@s	PTR unsigned char  size(2) Largest target is 61
  2965                           ;!		 -> STR_3(CODE[49]), showMenu@s(BANK3[61]), STR_1(CODE[49]), 
  2966                           ;!
  2967                           ;!    sp__strncpy	PTR unsigned char  size(1) Largest target is 15
  2968                           ;!		 -> g_dataPacket(BANK4[15]), 
  2969                           ;!
  2970                           ;!    menuInput@menu	PTR unsigned char  size(1) Largest target is 1
  2971                           ;!		 -> showMenu@menu(BANK3[1]), 
  2972                           ;!
  2973                           ;!    menuInput@page	PTR unsigned char  size(1) Largest target is 1
  2974                           ;!		 -> showMenu@page(BANK3[1]), 
  2975                           ;!
  2976                           
  2977                           
  2978                           ;!
  2979                           ;!Critical Paths under _main in COMMON
  2980                           ;!
  2981                           ;!    None.
  2982                           ;!
  2983                           ;!Critical Paths under _ISR in COMMON
  2984                           ;!
  2985                           ;!    _ISR->_rotISR
  2986                           ;!    _uartReceiveISR->_strncpy
  2987                           ;!
  2988                           ;!Critical Paths under _main in BANK0
  2989                           ;!
  2990                           ;!    _vfpfcnvrt->_efgtoa
  2991                           ;!    _efgtoa->_floorf
  2992                           ;!    _tolower->_isupper
  2993                           ;!    _pad->_fputs
  2994                           ;!    _fputs->_fputc
  2995                           ;!    _floorf->___fldiv
  2996                           ;!    ___flsub->___flmul
  2997                           ;!    ___flge->___flmul
  2998                           ;!    _atoi->___wmul
  2999                           ;!    _atoi->_isdigit
  3000                           ;!    _OLED_scrollDisplayRight->_OLED_command
  3001                           ;!    _OLED_scrollDisplayLeft->_OLED_command
  3002                           ;!    _OLED_returnHome->_OLED_command
  3003                           ;!    _OLED_print_xy->_OLED_command
  3004                           ;!    _OLED_print_xy->_OLED_write
  3005                           ;!    _OLED_write->_OLED_send
  3006                           ;!    _readAnalogValues->___fldiv
  3007                           ;!    ___flmul->___xxtofl
  3008                           ;!    ___fldiv->___flmul
  3009                           ;!    _handleSensorData->___xxtofl
  3010                           ;!    _OLED_init->_OLED_command
  3011                           ;!    _OLED_command->_OLED_send
  3012                           ;!    _OLED_send->_OLED_write4bits
  3013                           ;!
  3014                           ;!Critical Paths under _ISR in BANK0
  3015                           ;!
  3016                           ;!    None.
  3017                           ;!
  3018                           ;!Critical Paths under _main in BANK1
  3019                           ;!
  3020                           ;!    _vfprintf->_vfpfcnvrt
  3021                           ;!    _vfpfcnvrt->_efgtoa
  3022                           ;!    _efgtoa->_floorf
  3023                           ;!
  3024                           ;!Critical Paths under _ISR in BANK1
  3025                           ;!
  3026                           ;!    None.
  3027                           ;!
  3028                           ;!Critical Paths under _main in BANK2
  3029                           ;!
  3030                           ;!    _main->_showMenu
  3031                           ;!    _showMenu->_sprintf
  3032                           ;!    _sprintf->_vfprintf
  3033                           ;!    _vfprintf->_vfpfcnvrt
  3034                           ;!
  3035                           ;!Critical Paths under _ISR in BANK2
  3036                           ;!
  3037                           ;!    None.
  3038                           ;!
  3039                           ;!Critical Paths under _main in BANK3
  3040                           ;!
  3041                           ;!    _main->_showMenu
  3042                           ;!
  3043                           ;!Critical Paths under _ISR in BANK3
  3044                           ;!
  3045                           ;!    None.
  3046                           ;!
  3047                           ;!Critical Paths under _main in BANK4
  3048                           ;!
  3049                           ;!    None.
  3050                           ;!
  3051                           ;!Critical Paths under _ISR in BANK4
  3052                           ;!
  3053                           ;!    None.
  3054                           ;!
  3055                           ;!Critical Paths under _main in BANK5
  3056                           ;!
  3057                           ;!    None.
  3058                           ;!
  3059                           ;!Critical Paths under _ISR in BANK5
  3060                           ;!
  3061                           ;!    None.
  3062                           ;!
  3063                           ;!Critical Paths under _main in BANK6
  3064                           ;!
  3065                           ;!    None.
  3066                           ;!
  3067                           ;!Critical Paths under _ISR in BANK6
  3068                           ;!
  3069                           ;!    None.
  3070                           ;!
  3071                           ;!Critical Paths under _main in BANK7
  3072                           ;!
  3073                           ;!    None.
  3074                           ;!
  3075                           ;!Critical Paths under _ISR in BANK7
  3076                           ;!
  3077                           ;!    None.
  3078                           ;!
  3079                           ;!Critical Paths under _main in BANK8
  3080                           ;!
  3081                           ;!    None.
  3082                           ;!
  3083                           ;!Critical Paths under _ISR in BANK8
  3084                           ;!
  3085                           ;!    None.
  3086                           ;!
  3087                           ;!Critical Paths under _main in BANK9
  3088                           ;!
  3089                           ;!    None.
  3090                           ;!
  3091                           ;!Critical Paths under _ISR in BANK9
  3092                           ;!
  3093                           ;!    None.
  3094                           ;!
  3095                           ;!Critical Paths under _main in BANK10
  3096                           ;!
  3097                           ;!    None.
  3098                           ;!
  3099                           ;!Critical Paths under _ISR in BANK10
  3100                           ;!
  3101                           ;!    None.
  3102                           ;!
  3103                           ;!Critical Paths under _main in BANK11
  3104                           ;!
  3105                           ;!    None.
  3106                           ;!
  3107                           ;!Critical Paths under _ISR in BANK11
  3108                           ;!
  3109                           ;!    None.
  3110                           ;!
  3111                           ;!Critical Paths under _main in BANK12
  3112                           ;!
  3113                           ;!    None.
  3114                           ;!
  3115                           ;!Critical Paths under _ISR in BANK12
  3116                           ;!
  3117                           ;!    None.
  3118                           ;!
  3119                           ;!Critical Paths under _main in BANK13
  3120                           ;!
  3121                           ;!    None.
  3122                           ;!
  3123                           ;!Critical Paths under _ISR in BANK13
  3124                           ;!
  3125                           ;!    None.
  3126                           ;!
  3127                           ;!Critical Paths under _main in BANK14
  3128                           ;!
  3129                           ;!    None.
  3130                           ;!
  3131                           ;!Critical Paths under _ISR in BANK14
  3132                           ;!
  3133                           ;!    None.
  3134                           ;!
  3135                           ;!Critical Paths under _main in BANK15
  3136                           ;!
  3137                           ;!    None.
  3138                           ;!
  3139                           ;!Critical Paths under _ISR in BANK15
  3140                           ;!
  3141                           ;!    None.
  3142                           ;!
  3143                           ;!Critical Paths under _main in BANK16
  3144                           ;!
  3145                           ;!    None.
  3146                           ;!
  3147                           ;!Critical Paths under _ISR in BANK16
  3148                           ;!
  3149                           ;!    None.
  3150                           ;!
  3151                           ;!Critical Paths under _main in BANK17
  3152                           ;!
  3153                           ;!    None.
  3154                           ;!
  3155                           ;!Critical Paths under _ISR in BANK17
  3156                           ;!
  3157                           ;!    None.
  3158                           ;!
  3159                           ;!Critical Paths under _main in BANK18
  3160                           ;!
  3161                           ;!    None.
  3162                           ;!
  3163                           ;!Critical Paths under _ISR in BANK18
  3164                           ;!
  3165                           ;!    None.
  3166                           ;!
  3167                           ;!Critical Paths under _main in BANK19
  3168                           ;!
  3169                           ;!    None.
  3170                           ;!
  3171                           ;!Critical Paths under _ISR in BANK19
  3172                           ;!
  3173                           ;!    None.
  3174                           ;!
  3175                           ;!Critical Paths under _main in BANK20
  3176                           ;!
  3177                           ;!    None.
  3178                           ;!
  3179                           ;!Critical Paths under _ISR in BANK20
  3180                           ;!
  3181                           ;!    None.
  3182                           ;!
  3183                           ;!Critical Paths under _main in BANK21
  3184                           ;!
  3185                           ;!    None.
  3186                           ;!
  3187                           ;!Critical Paths under _ISR in BANK21
  3188                           ;!
  3189                           ;!    None.
  3190                           ;!
  3191                           ;!Critical Paths under _main in BANK22
  3192                           ;!
  3193                           ;!    None.
  3194                           ;!
  3195                           ;!Critical Paths under _ISR in BANK22
  3196                           ;!
  3197                           ;!    None.
  3198                           ;!
  3199                           ;!Critical Paths under _main in BANK23
  3200                           ;!
  3201                           ;!    None.
  3202                           ;!
  3203                           ;!Critical Paths under _ISR in BANK23
  3204                           ;!
  3205                           ;!    None.
  3206                           ;!
  3207                           ;!Critical Paths under _main in BANK24
  3208                           ;!
  3209                           ;!    None.
  3210                           ;!
  3211                           ;!Critical Paths under _ISR in BANK24
  3212                           ;!
  3213                           ;!    None.
  3214                           ;!
  3215                           ;!Critical Paths under _main in BANK25
  3216                           ;!
  3217                           ;!    None.
  3218                           ;!
  3219                           ;!Critical Paths under _ISR in BANK25
  3220                           ;!
  3221                           ;!    None.
  3222                           
  3223 ;;
  3224 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3225 ;;
  3226                           
  3227                           ;!
  3228                           ;!Call Graph Tables:
  3229                           ;!
  3230                           ;! ---------------------------------------------------------------------------------
  3231                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3232                           ;! ---------------------------------------------------------------------------------
  3233                           ;! (0) _main                                                33    33      0   38933
  3234                           ;!                                             57 BANK2      1     1      0
  3235                           ;!                       _OLED_command
  3236                           ;!                          _OLED_init
  3237                           ;!                    _OLED_returnHome
  3238                           ;!                   _handleSensorData
  3239                           ;!                         _initialize
  3240                           ;!                   _readAnalogValues
  3241                           ;!                           _showMenu
  3242                           ;!                       _uartSendByte
  3243                           ;! ---------------------------------------------------------------------------------
  3244                           ;! (1) _uartSendByte                                         1     1      0      22
  3245                           ;!                                              0 BANK0      1     1      0
  3246                           ;! ---------------------------------------------------------------------------------
  3247                           ;! (1) _showMenu                                            64    64      0   31411
  3248                           ;!                                             55 BANK2      2     2      0
  3249                           ;!                                              0 BANK3     62    62      0
  3250                           ;!                      _OLED_print_xy
  3251                           ;!                              _getPB
  3252                           ;!                          _menuInput
  3253                           ;!                            _sprintf
  3254                           ;! ---------------------------------------------------------------------------------
  3255                           ;! (2) _sprintf                                             32    10     22   27712
  3256                           ;!                                             23 BANK2     32    10     22
  3257                           ;!                           _vfprintf
  3258                           ;! ---------------------------------------------------------------------------------
  3259                           ;! (3) _vfprintf                                             8     5      3   27396
  3260                           ;!                                             15 BANK2      8     5      3
  3261                           ;!                          _vfpfcnvrt
  3262                           ;! ---------------------------------------------------------------------------------
  3263                           ;! (4) _vfpfcnvrt                                           39    37      2   27059
  3264                           ;!                                             72 BANK1      8     6      2
  3265                           ;!                                              0 BANK2     15    15      0
  3266                           ;!                               _atoi
  3267                           ;!                             _efgtoa
  3268                           ;!                              _fputc
  3269                           ;!                            _isdigit
  3270                           ;!                            _isupper
  3271                           ;!                            _strncmp
  3272                           ;!                            _tolower
  3273                           ;! ---------------------------------------------------------------------------------
  3274                           ;! (5) _strncmp                                             10     6      4     410
  3275                           ;!                                              0 BANK0     10     6      4
  3276                           ;! ---------------------------------------------------------------------------------
  3277                           ;! (5) _efgtoa                                              66    61      5   21507
  3278                           ;!                                             76 BANK0      4     4      0
  3279                           ;!                                             10 BANK1     62    57      5
  3280                           ;!                            ___awdiv
  3281                           ;!                            ___awmod
  3282                           ;!                            ___fladd
  3283                           ;!                            ___fldiv
  3284                           ;!                             ___fleq
  3285                           ;!                             ___flge
  3286                           ;!                            ___flmul
  3287                           ;!                            ___flneg
  3288                           ;!                            ___flsub
  3289                           ;!                            ___fltol
  3290                           ;!                      ___fpclassifyf
  3291                           ;!                             _floorf
  3292                           ;!                            _isupper
  3293                           ;!                                _pad
  3294                           ;!                             _strcpy
  3295                           ;!                            _tolower
  3296                           ;! ---------------------------------------------------------------------------------
  3297                           ;! (5) _tolower                                              8     6      2     944
  3298                           ;!                                              6 BANK0      8     6      2
  3299                           ;!                            _isupper
  3300                           ;! ---------------------------------------------------------------------------------
  3301                           ;! (6) _isupper                                              6     4      2     465
  3302                           ;!                                              0 BANK0      6     4      2
  3303                           ;! ---------------------------------------------------------------------------------
  3304                           ;! (6) _strcpy                                               8     6      2     641
  3305                           ;!                                              0 BANK0      8     6      2
  3306                           ;! ---------------------------------------------------------------------------------
  3307                           ;! (6) _pad                                                  9     6      3    2907
  3308                           ;!                                             16 BANK0      9     6      3
  3309                           ;!                              _fputc
  3310                           ;!                              _fputs
  3311                           ;!                             _strlen
  3312                           ;! ---------------------------------------------------------------------------------
  3313                           ;! (7) _strlen                                               8     6      2     123
  3314                           ;!                                              0 BANK0      8     6      2
  3315                           ;! ---------------------------------------------------------------------------------
  3316                           ;! (7) _fputs                                                8     7      1    1149
  3317                           ;!                                              8 BANK0      8     7      1
  3318                           ;!                              _fputc
  3319                           ;! ---------------------------------------------------------------------------------
  3320                           ;! (5) _fputc                                                8     5      3     834
  3321                           ;!                                              0 BANK0      8     5      3
  3322                           ;!                              _putch
  3323                           ;! ---------------------------------------------------------------------------------
  3324                           ;! (6) _putch                                                1     1      0       0
  3325                           ;! ---------------------------------------------------------------------------------
  3326                           ;! (6) _floorf                                              20    16      4     490
  3327                           ;!                                             66 BANK0     10     6      4
  3328                           ;!                                              0 BANK1     10    10      0
  3329                           ;!                            ___fldiv (ARG)
  3330                           ;! ---------------------------------------------------------------------------------
  3331                           ;! (6) ___fpclassifyf                                       16    12      4     287
  3332                           ;!                                              0 BANK0     16    12      4
  3333                           ;! ---------------------------------------------------------------------------------
  3334                           ;! (6) ___fltol                                             11     7      4     381
  3335                           ;!                                              0 BANK0     11     7      4
  3336                           ;! ---------------------------------------------------------------------------------
  3337                           ;! (6) ___flsub                                              8     0      8    2637
  3338                           ;!                                             40 BANK0      8     0      8
  3339                           ;!                            ___fladd
  3340                           ;!                            ___flmul (ARG)
  3341                           ;! ---------------------------------------------------------------------------------
  3342                           ;! (7) ___fladd                                             24    16      8    2288
  3343                           ;!                                              0 BANK0     24    16      8
  3344                           ;! ---------------------------------------------------------------------------------
  3345                           ;! (6) ___flneg                                              4     0      4     121
  3346                           ;!                                              0 BANK0      4     0      4
  3347                           ;! ---------------------------------------------------------------------------------
  3348                           ;! (6) ___flge                                              16     8      8     790
  3349                           ;!                                             40 BANK0     16     8      8
  3350                           ;!                            ___flmul (ARG)
  3351                           ;! ---------------------------------------------------------------------------------
  3352                           ;! (6) ___fleq                                              12     4      8     394
  3353                           ;!                                              0 BANK0     12     4      8
  3354                           ;! ---------------------------------------------------------------------------------
  3355                           ;! (6) ___awmod                                              7     3      4     448
  3356                           ;!                                              0 BANK0      7     3      4
  3357                           ;! ---------------------------------------------------------------------------------
  3358                           ;! (6) ___awdiv                                              9     5      4     452
  3359                           ;!                                              0 BANK0      9     5      4
  3360                           ;! ---------------------------------------------------------------------------------
  3361                           ;! (5) _atoi                                                15    13      2    1237
  3362                           ;!                                              6 BANK0     15    13      2
  3363                           ;!                             ___wmul
  3364                           ;!                            _isdigit
  3365                           ;!                            _isspace
  3366                           ;! ---------------------------------------------------------------------------------
  3367                           ;! (6) _isspace                                              5     3      2     207
  3368                           ;!                                              0 BANK0      5     3      2
  3369                           ;! ---------------------------------------------------------------------------------
  3370                           ;! (5) _isdigit                                              6     4      2     313
  3371                           ;!                                              0 BANK0      6     4      2
  3372                           ;! ---------------------------------------------------------------------------------
  3373                           ;! (6) ___wmul                                               6     2      4     244
  3374                           ;!                                              0 BANK0      6     2      4
  3375                           ;! ---------------------------------------------------------------------------------
  3376                           ;! (2) _menuInput                                           11     6      5    2352
  3377                           ;!                                              7 BANK0     11     6      5
  3378                           ;!                    _OLED_returnHome
  3379                           ;!             _OLED_scrollDisplayLeft
  3380                           ;!            _OLED_scrollDisplayRight
  3381                           ;!                              _getPB
  3382                           ;!                          _getRotDir
  3383                           ;! ---------------------------------------------------------------------------------
  3384                           ;! (3) _getRotDir                                            2     2      0      23
  3385                           ;!                                              0 BANK0      2     2      0
  3386                           ;! ---------------------------------------------------------------------------------
  3387                           ;! (3) _getPB                                                2     2      0      23
  3388                           ;!                                              0 BANK0      2     2      0
  3389                           ;! ---------------------------------------------------------------------------------
  3390                           ;! (3) _OLED_scrollDisplayRight                              0     0      0     352
  3391                           ;!                       _OLED_command
  3392                           ;! ---------------------------------------------------------------------------------
  3393                           ;! (3) _OLED_scrollDisplayLeft                               0     0      0     352
  3394                           ;!                       _OLED_command
  3395                           ;! ---------------------------------------------------------------------------------
  3396                           ;! (3) _OLED_returnHome                                      0     0      0     352
  3397                           ;!                       _OLED_command
  3398                           ;! ---------------------------------------------------------------------------------
  3399                           ;! (2) _OLED_print_xy                                        9     6      3    1273
  3400                           ;!                                              7 BANK0      9     6      3
  3401                           ;!                       _OLED_command
  3402                           ;!                         _OLED_write
  3403                           ;! ---------------------------------------------------------------------------------
  3404                           ;! (3) _OLED_write                                           1     1      0     352
  3405                           ;!                                              6 BANK0      1     1      0
  3406                           ;!                          _OLED_send
  3407                           ;!                  _OLED_waitForReady
  3408                           ;! ---------------------------------------------------------------------------------
  3409                           ;! (1) _readAnalogValues                                     6     6      0    5882
  3410                           ;!                                             66 BANK0      6     6      0
  3411                           ;!                            ___fldiv
  3412                           ;!                            ___flmul
  3413                           ;!                           ___xxtofl
  3414                           ;! ---------------------------------------------------------------------------------
  3415                           ;! (6) ___flmul                                             26    18      8    3329
  3416                           ;!                                             14 BANK0     26    18      8
  3417                           ;!                          __Umul8_16
  3418                           ;!                           ___xxtofl (ARG)
  3419                           ;! ---------------------------------------------------------------------------------
  3420                           ;! (7) __Umul8_16                                            9     7      2     799
  3421                           ;!                                              0 BANK0      9     7      2
  3422                           ;! ---------------------------------------------------------------------------------
  3423                           ;! (6) ___fldiv                                             26    18      8    2033
  3424                           ;!                                             40 BANK0     26    18      8
  3425                           ;!                            ___flmul (ARG)
  3426                           ;!                           ___xxtofl (ARG)
  3427                           ;! ---------------------------------------------------------------------------------
  3428                           ;! (1) _initialize                                           0     0      0       0
  3429                           ;! ---------------------------------------------------------------------------------
  3430                           ;! (1) _handleSensorData                                     4     4      0     474
  3431                           ;!                                             14 BANK0      4     4      0
  3432                           ;!                           ___xxtofl
  3433                           ;! ---------------------------------------------------------------------------------
  3434                           ;! (2) ___xxtofl                                            14    10      4     474
  3435                           ;!                                              0 BANK0     14    10      4
  3436                           ;! ---------------------------------------------------------------------------------
  3437                           ;! (1) _OLED_init                                            1     1      0     440
  3438                           ;!                                              7 BANK0      1     1      0
  3439                           ;!                       _OLED_command
  3440                           ;!                    _OLED_write4bits
  3441                           ;! ---------------------------------------------------------------------------------
  3442                           ;! (4) _OLED_command                                         1     1      0     352
  3443                           ;!                                              6 BANK0      1     1      0
  3444                           ;!                          _OLED_send
  3445                           ;!                  _OLED_waitForReady
  3446                           ;! ---------------------------------------------------------------------------------
  3447                           ;! (5) _OLED_waitForReady                                    1     1      0      24
  3448                           ;!                                              0 BANK0      1     1      0
  3449                           ;!                   _OLED_pulseEnable
  3450                           ;! ---------------------------------------------------------------------------------
  3451                           ;! (5) _OLED_send                                            3     2      1     306
  3452                           ;!                                              3 BANK0      3     2      1
  3453                           ;!                    _OLED_write4bits
  3454                           ;! ---------------------------------------------------------------------------------
  3455                           ;! (6) _OLED_write4bits                                      3     3      0      88
  3456                           ;!                                              0 BANK0      3     3      0
  3457                           ;!                   _OLED_pulseEnable
  3458                           ;! ---------------------------------------------------------------------------------
  3459                           ;! (6) _OLED_pulseEnable                                     0     0      0       0
  3460                           ;! ---------------------------------------------------------------------------------
  3461                           ;! Estimated maximum stack depth 7
  3462                           ;! ---------------------------------------------------------------------------------
  3463                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3464                           ;! ---------------------------------------------------------------------------------
  3465                           ;! (10) _ISR                                                 1     1      0     349
  3466                           ;!                                              8 COMMON     1     1      0
  3467                           ;!                      _pushButtonISR
  3468                           ;!                             _rotISR
  3469                           ;!                     _uartReceiveISR
  3470                           ;! ---------------------------------------------------------------------------------
  3471                           ;! (11) _uartReceiveISR                                      1     1      0     326
  3472                           ;!                                              6 COMMON     1     1      0
  3473                           ;!                            _strncpy
  3474                           ;! ---------------------------------------------------------------------------------
  3475                           ;! (12) _strncpy                                             6     3      3     326
  3476                           ;!                                              0 COMMON     6     3      3
  3477                           ;! ---------------------------------------------------------------------------------
  3478                           ;! (11) _rotISR                                              8     8      0      23
  3479                           ;!                                              0 COMMON     8     8      0
  3480                           ;! ---------------------------------------------------------------------------------
  3481                           ;! (11) _pushButtonISR                                       1     1      0       0
  3482                           ;!                                              0 COMMON     1     1      0
  3483                           ;! ---------------------------------------------------------------------------------
  3484                           ;! Estimated maximum stack depth 12
  3485                           ;! ---------------------------------------------------------------------------------
  3486                           ;!
  3487                           ;! Call Graph Graphs:
  3488                           ;!
  3489                           ;! _main (ROOT)
  3490                           ;!   _OLED_command
  3491                           ;!     _OLED_send
  3492                           ;!       _OLED_write4bits
  3493                           ;!         _OLED_pulseEnable
  3494                           ;!     _OLED_waitForReady
  3495                           ;!       _OLED_pulseEnable
  3496                           ;!   _OLED_init
  3497                           ;!     _OLED_command
  3498                           ;!       _OLED_send
  3499                           ;!         _OLED_write4bits
  3500                           ;!           _OLED_pulseEnable
  3501                           ;!       _OLED_waitForReady
  3502                           ;!         _OLED_pulseEnable
  3503                           ;!     _OLED_write4bits
  3504                           ;!       _OLED_pulseEnable
  3505                           ;!   _OLED_returnHome
  3506                           ;!     _OLED_command
  3507                           ;!       _OLED_send
  3508                           ;!         _OLED_write4bits
  3509                           ;!           _OLED_pulseEnable
  3510                           ;!       _OLED_waitForReady
  3511                           ;!         _OLED_pulseEnable
  3512                           ;!   _handleSensorData
  3513                           ;!     ___xxtofl
  3514                           ;!   _initialize
  3515                           ;!   _readAnalogValues
  3516                           ;!     ___fldiv
  3517                           ;!       ___flmul (ARG)
  3518                           ;!         __Umul8_16
  3519                           ;!         ___xxtofl (ARG)
  3520                           ;!       ___xxtofl (ARG)
  3521                           ;!     ___flmul
  3522                           ;!       __Umul8_16
  3523                           ;!       ___xxtofl (ARG)
  3524                           ;!     ___xxtofl
  3525                           ;!   _showMenu
  3526                           ;!     _OLED_print_xy
  3527                           ;!       _OLED_command
  3528                           ;!         _OLED_send
  3529                           ;!           _OLED_write4bits
  3530                           ;!             _OLED_pulseEnable
  3531                           ;!         _OLED_waitForReady
  3532                           ;!           _OLED_pulseEnable
  3533                           ;!       _OLED_write
  3534                           ;!         _OLED_send
  3535                           ;!           _OLED_write4bits
  3536                           ;!             _OLED_pulseEnable
  3537                           ;!         _OLED_waitForReady
  3538                           ;!           _OLED_pulseEnable
  3539                           ;!     _getPB
  3540                           ;!     _menuInput
  3541                           ;!       _OLED_returnHome
  3542                           ;!         _OLED_command
  3543                           ;!           _OLED_send
  3544                           ;!             _OLED_write4bits
  3545                           ;!               _OLED_pulseEnable
  3546                           ;!           _OLED_waitForReady
  3547                           ;!             _OLED_pulseEnable
  3548                           ;!       _OLED_scrollDisplayLeft
  3549                           ;!         _OLED_command
  3550                           ;!           _OLED_send
  3551                           ;!             _OLED_write4bits
  3552                           ;!               _OLED_pulseEnable
  3553                           ;!           _OLED_waitForReady
  3554                           ;!             _OLED_pulseEnable
  3555                           ;!       _OLED_scrollDisplayRight
  3556                           ;!         _OLED_command
  3557                           ;!           _OLED_send
  3558                           ;!             _OLED_write4bits
  3559                           ;!               _OLED_pulseEnable
  3560                           ;!           _OLED_waitForReady
  3561                           ;!             _OLED_pulseEnable
  3562                           ;!       _getPB
  3563                           ;!       _getRotDir
  3564                           ;!     _sprintf
  3565                           ;!       _vfprintf
  3566                           ;!         _vfpfcnvrt
  3567                           ;!           _atoi
  3568                           ;!             ___wmul
  3569                           ;!             _isdigit
  3570                           ;!             _isspace
  3571                           ;!           _efgtoa
  3572                           ;!             ___awdiv
  3573                           ;!             ___awmod
  3574                           ;!             ___fladd
  3575                           ;!             ___fldiv
  3576                           ;!               ___flmul (ARG)
  3577                           ;!                 __Umul8_16
  3578                           ;!                 ___xxtofl (ARG)
  3579                           ;!               ___xxtofl (ARG)
  3580                           ;!             ___fleq
  3581                           ;!             ___flge
  3582                           ;!               ___flmul (ARG)
  3583                           ;!                 __Umul8_16
  3584                           ;!                 ___xxtofl (ARG)
  3585                           ;!             ___flmul
  3586                           ;!               __Umul8_16
  3587                           ;!               ___xxtofl (ARG)
  3588                           ;!             ___flneg
  3589                           ;!             ___flsub
  3590                           ;!               ___fladd
  3591                           ;!               ___flmul (ARG)
  3592                           ;!                 __Umul8_16
  3593                           ;!                 ___xxtofl (ARG)
  3594                           ;!             ___fltol
  3595                           ;!             ___fpclassifyf
  3596                           ;!             _floorf
  3597                           ;!               ___fldiv (ARG)
  3598                           ;!                 ___flmul (ARG)
  3599                           ;!                   __Umul8_16
  3600                           ;!                   ___xxtofl (ARG)
  3601                           ;!                 ___xxtofl (ARG)
  3602                           ;!             _isupper
  3603                           ;!             _pad
  3604                           ;!               _fputc
  3605                           ;!                 _putch
  3606                           ;!               _fputs
  3607                           ;!                 _fputc
  3608                           ;!                   _putch
  3609                           ;!               _strlen
  3610                           ;!             _strcpy
  3611                           ;!             _tolower
  3612                           ;!               _isupper
  3613                           ;!           _fputc
  3614                           ;!             _putch
  3615                           ;!           _isdigit
  3616                           ;!           _isupper
  3617                           ;!           _strncmp
  3618                           ;!           _tolower
  3619                           ;!             _isupper
  3620                           ;!   _uartSendByte
  3621                           ;!
  3622                           ;! _ISR (ROOT)
  3623                           ;!   _pushButtonISR
  3624                           ;!   _rotISR
  3625                           ;!   _uartReceiveISR
  3626                           ;!     _strncpy
  3627                           ;!
  3628                           
  3629                           ;! Address spaces:
  3630                           
  3631                           ;!Name               Size   Autos  Total    Cost      Usage
  3632                           ;!BIGRAM             7F0      0       0       0        0.0%
  3633                           ;!NULL                 0      0       0       0        0.0%
  3634                           ;!CODE                 0      0       0       0        0.0%
  3635                           ;!BITCOMMON            E      0       0       1        0.0%
  3636                           ;!BITSFR0              0      0       0       1        0.0%
  3637                           ;!SFR0                 0      0       0       1        0.0%
  3638                           ;!COMMON               E      9       E       2      100.0%
  3639                           ;!BITSFR1              0      0       0       2        0.0%
  3640                           ;!SFR1                 0      0       0       2        0.0%
  3641                           ;!BITSFR2              0      0       0       3        0.0%
  3642                           ;!SFR2                 0      0       0       3        0.0%
  3643                           ;!STACK                0      0       0       3        0.0%
  3644                           ;!BITBANK0            50      0       0       4        0.0%
  3645                           ;!BITSFR3              0      0       0       4        0.0%
  3646                           ;!SFR3                 0      0       0       4        0.0%
  3647                           ;!BANK0               50     50      50       5      100.0%
  3648                           ;!BITSFR4              0      0       0       5        0.0%
  3649                           ;!SFR4                 0      0       0       5        0.0%
  3650                           ;!BITBANK1            50      0       0       6        0.0%
  3651                           ;!BITSFR5              0      0       0       6        0.0%
  3652                           ;!SFR5                 0      0       0       6        0.0%
  3653                           ;!BANK1               50     50      50       7      100.0%
  3654                           ;!BITSFR6              0      0       0       7        0.0%
  3655                           ;!SFR6                 0      0       0       7        0.0%
  3656                           ;!BITSFR7              0      0       0       8        0.0%
  3657                           ;!SFR7                 0      0       0       8        0.0%
  3658                           ;!ABS                  0      0     1D1       8        0.0%
  3659                           ;!BITBANK2            50      0       0       9        0.0%
  3660                           ;!BITSFR8              0      0       0       9        0.0%
  3661                           ;!SFR8                 0      0       0       9        0.0%
  3662                           ;!BANK2               50     3A      4E      10       97.5%
  3663                           ;!BITSFR9              0      0       0      10        0.0%
  3664                           ;!SFR9                 0      0       0      10        0.0%
  3665                           ;!BITBANK3            50      0       0      11        0.0%
  3666                           ;!BITSFR10             0      0       0      11        0.0%
  3667                           ;!SFR10                0      0       0      11        0.0%
  3668                           ;!BANK3               50     3E      4E      12       97.5%
  3669                           ;!BITSFR11             0      0       0      12        0.0%
  3670                           ;!SFR11                0      0       0      12        0.0%
  3671                           ;!BITBANK4            50      0       0      13        0.0%
  3672                           ;!BITSFR12             0      0       0      13        0.0%
  3673                           ;!SFR12                0      0       0      13        0.0%
  3674                           ;!BANK4               50      0      37      14       68.8%
  3675                           ;!BITSFR13             0      0       0      14        0.0%
  3676                           ;!SFR13                0      0       0      14        0.0%
  3677                           ;!BITBANK5            50      0       0      15        0.0%
  3678                           ;!BITSFR14             0      0       0      15        0.0%
  3679                           ;!SFR14                0      0       0      15        0.0%
  3680                           ;!BANK5               50      0      50      16      100.0%
  3681                           ;!BITSFR15             0      0       0      16        0.0%
  3682                           ;!SFR15                0      0       0      16        0.0%
  3683                           ;!BITBANK6            50      0       0      17        0.0%
  3684                           ;!BITSFR16             0      0       0      17        0.0%
  3685                           ;!SFR16                0      0       0      17        0.0%
  3686                           ;!BANK6               50      0       0      18        0.0%
  3687                           ;!BITSFR17             0      0       0      18        0.0%
  3688                           ;!SFR17                0      0       0      18        0.0%
  3689                           ;!BITBANK7            50      0       0      19        0.0%
  3690                           ;!BITSFR18             0      0       0      19        0.0%
  3691                           ;!SFR18                0      0       0      19        0.0%
  3692                           ;!BANK7               50      0       0      20        0.0%
  3693                           ;!BITSFR19             0      0       0      20        0.0%
  3694                           ;!SFR19                0      0       0      20        0.0%
  3695                           ;!BITBANK8            50      0       0      21        0.0%
  3696                           ;!BITSFR20             0      0       0      21        0.0%
  3697                           ;!SFR20                0      0       0      21        0.0%
  3698                           ;!BANK8               50      0       0      22        0.0%
  3699                           ;!BITSFR21             0      0       0      22        0.0%
  3700                           ;!SFR21                0      0       0      22        0.0%
  3701                           ;!BITBANK9            50      0       0      23        0.0%
  3702                           ;!BITSFR22             0      0       0      23        0.0%
  3703                           ;!SFR22                0      0       0      23        0.0%
  3704                           ;!BANK9               50      0       0      24        0.0%
  3705                           ;!BITSFR23             0      0       0      24        0.0%
  3706                           ;!SFR23                0      0       0      24        0.0%
  3707                           ;!BITBANK10           50      0       0      25        0.0%
  3708                           ;!BITSFR24             0      0       0      25        0.0%
  3709                           ;!SFR24                0      0       0      25        0.0%
  3710                           ;!BANK10              50      0       0      26        0.0%
  3711                           ;!BITSFR25             0      0       0      26        0.0%
  3712                           ;!SFR25                0      0       0      26        0.0%
  3713                           ;!BITBANK11           50      0       0      27        0.0%
  3714                           ;!BITSFR26             0      0       0      27        0.0%
  3715                           ;!SFR26                0      0       0      27        0.0%
  3716                           ;!BANK11              50      0       0      28        0.0%
  3717                           ;!BITSFR27             0      0       0      28        0.0%
  3718                           ;!SFR27                0      0       0      28        0.0%
  3719                           ;!BITBANK12           50      0       0      29        0.0%
  3720                           ;!BITSFR28             0      0       0      29        0.0%
  3721                           ;!SFR28                0      0       0      29        0.0%
  3722                           ;!BANK12              50      0       0      30        0.0%
  3723                           ;!BITSFR29             0      0       0      30        0.0%
  3724                           ;!SFR29                0      0       0      30        0.0%
  3725                           ;!BITBANK13           50      0       0      31        0.0%
  3726                           ;!BITSFR30             0      0       0      31        0.0%
  3727                           ;!SFR30                0      0       0      31        0.0%
  3728                           ;!BANK13              50      0       0      32        0.0%
  3729                           ;!BITSFR31             0      0       0      32        0.0%
  3730                           ;!SFR31                0      0       0      32        0.0%
  3731                           ;!BITBANK14           50      0       0      33        0.0%
  3732                           ;!BITSFR32             0      0       0      33        0.0%
  3733                           ;!SFR32                0      0       0      33        0.0%
  3734                           ;!BANK14              50      0       0      34        0.0%
  3735                           ;!BITSFR33             0      0       0      34        0.0%
  3736                           ;!SFR33                0      0       0      34        0.0%
  3737                           ;!BITBANK15           50      0       0      35        0.0%
  3738                           ;!BITSFR34             0      0       0      35        0.0%
  3739                           ;!SFR34                0      0       0      35        0.0%
  3740                           ;!BANK15              50      0       0      36        0.0%
  3741                           ;!BITSFR35             0      0       0      36        0.0%
  3742                           ;!SFR35                0      0       0      36        0.0%
  3743                           ;!BITBANK16           50      0       0      37        0.0%
  3744                           ;!BITSFR36             0      0       0      37        0.0%
  3745                           ;!SFR36                0      0       0      37        0.0%
  3746                           ;!BANK16              50      0       0      38        0.0%
  3747                           ;!BITSFR37             0      0       0      38        0.0%
  3748                           ;!SFR37                0      0       0      38        0.0%
  3749                           ;!BITBANK17           50      0       0      39        0.0%
  3750                           ;!BITSFR38             0      0       0      39        0.0%
  3751                           ;!SFR38                0      0       0      39        0.0%
  3752                           ;!BANK17              50      0       0      40        0.0%
  3753                           ;!BITSFR39             0      0       0      40        0.0%
  3754                           ;!SFR39                0      0       0      40        0.0%
  3755                           ;!BITBANK18           50      0       0      41        0.0%
  3756                           ;!BITSFR40             0      0       0      41        0.0%
  3757                           ;!SFR40                0      0       0      41        0.0%
  3758                           ;!BANK18              50      0       0      42        0.0%
  3759                           ;!BITSFR41             0      0       0      42        0.0%
  3760                           ;!SFR41                0      0       0      42        0.0%
  3761                           ;!BITBANK19           50      0       0      43        0.0%
  3762                           ;!BITSFR42             0      0       0      43        0.0%
  3763                           ;!SFR42                0      0       0      43        0.0%
  3764                           ;!BANK19              50      0       0      44        0.0%
  3765                           ;!BITSFR43             0      0       0      44        0.0%
  3766                           ;!SFR43                0      0       0      44        0.0%
  3767                           ;!BITBANK20           50      0       0      45        0.0%
  3768                           ;!BITSFR44             0      0       0      45        0.0%
  3769                           ;!SFR44                0      0       0      45        0.0%
  3770                           ;!BANK20              50      0       0      46        0.0%
  3771                           ;!BITSFR45             0      0       0      46        0.0%
  3772                           ;!SFR45                0      0       0      46        0.0%
  3773                           ;!BITBANK21           50      0       0      47        0.0%
  3774                           ;!BITSFR46             0      0       0      47        0.0%
  3775                           ;!SFR46                0      0       0      47        0.0%
  3776                           ;!BANK21              50      0       0      48        0.0%
  3777                           ;!BITSFR47             0      0       0      48        0.0%
  3778                           ;!SFR47                0      0       0      48        0.0%
  3779                           ;!BITBANK22           50      0       0      49        0.0%
  3780                           ;!BITSFR48             0      0       0      49        0.0%
  3781                           ;!SFR48                0      0       0      49        0.0%
  3782                           ;!BANK22              50      0       0      50        0.0%
  3783                           ;!BITSFR49             0      0       0      50        0.0%
  3784                           ;!SFR49                0      0       0      50        0.0%
  3785                           ;!BITBANK23           50      0       0      51        0.0%
  3786                           ;!BITSFR50             0      0       0      51        0.0%
  3787                           ;!SFR50                0      0       0      51        0.0%
  3788                           ;!BANK23              50      0       0      52        0.0%
  3789                           ;!BITSFR51             0      0       0      52        0.0%
  3790                           ;!SFR51                0      0       0      52        0.0%
  3791                           ;!BITBANK24           50      0       0      53        0.0%
  3792                           ;!BITSFR52             0      0       0      53        0.0%
  3793                           ;!SFR52                0      0       0      53        0.0%
  3794                           ;!BANK24              50      0       0      54        0.0%
  3795                           ;!BITSFR53             0      0       0      54        0.0%
  3796                           ;!SFR53                0      0       0      54        0.0%
  3797                           ;!BITBANK25           20      0       0      55        0.0%
  3798                           ;!BITSFR54             0      0       0      55        0.0%
  3799                           ;!SFR54                0      0       0      55        0.0%
  3800                           ;!BANK25              20      0       0      56        0.0%
  3801                           ;!BITSFR55             0      0       0      56        0.0%
  3802                           ;!SFR55                0      0       0      56        0.0%
  3803                           ;!BITSFR56             0      0       0      57        0.0%
  3804                           ;!SFR56                0      0       0      57        0.0%
  3805                           ;!DATA                 0      0     1D1      57        0.0%
  3806                           ;!BITSFR57             0      0       0      58        0.0%
  3807                           ;!SFR57                0      0       0      58        0.0%
  3808                           ;!BITSFR58             0      0       0      59        0.0%
  3809                           ;!SFR58                0      0       0      59        0.0%
  3810                           ;!BITSFR59             0      0       0      60        0.0%
  3811                           ;!SFR59                0      0       0      60        0.0%
  3812                           ;!BITSFR60             0      0       0      61        0.0%
  3813                           ;!SFR60                0      0       0      61        0.0%
  3814                           ;!BITSFR61             0      0       0      62        0.0%
  3815                           ;!SFR61                0      0       0      62        0.0%
  3816                           ;!BITSFR62             0      0       0      63        0.0%
  3817                           ;!SFR62                0      0       0      63        0.0%
  3818                           ;!BITSFR63             0      0       0      64        0.0%
  3819                           ;!SFR63                0      0       0      64        0.0%
  3820                           
  3821                           	global	_main
  3822                           
  3823 ;; *************** function _main *****************
  3824 ;; Defined at:
  3825 ;;		line 103 in file "main.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;		None
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;  s2             16    0        unsigned char [16]
  3830 ;;  s1             16    0        unsigned char [16]
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  1    wreg      void 
  3833 ;; Registers used:
  3834 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3835 ;; Tracked objects:
  3836 ;;		On entry : B3F/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3842 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3843 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3844 ;;Total ram usage:        1 bytes
  3845 ;; Hardware stack levels required when called:   12
  3846 ;; This function calls:
  3847 ;;		_OLED_command
  3848 ;;		_OLED_init
  3849 ;;		_OLED_returnHome
  3850 ;;		_handleSensorData
  3851 ;;		_initialize
  3852 ;;		_readAnalogValues
  3853 ;;		_showMenu
  3854 ;;		_uartSendByte
  3855 ;; This function is called by:
  3856 ;;		Startup code after reset
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
  3860                           	file	"main.c"
  3861                           	line	103
  3862                           global __pmaintext
  3863                           __pmaintext:	;psect for function _main
  3864  1A1B                     psect	maintext
  3865                           	file	"main.c"
  3866                           	line	103
  3867                           	global	__size_of_main
  3868                           	__size_of_main	equ	__end_of_main-_main
  3869  0045                     	
  3870                           _main:	
  3871  1A1B                     ;incstack = 0
  3872                           	opt	stack 4
  3873                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3874                           	line	107
  3875                           	
  3876                           l4614:	
  3877  1A1B                     ;main.c: 105:  char s1[16], s2[16];;main.c: 107:  initialize();
  3878                           	fcall	_initialize
  3879  1A1B  319A  2260  319A   	line	108
  3880                           	
  3881                           l4616:	
  3882  1A1E                     ;main.c: 108:  LATBbits.LATB5 = 1;
  3883                           	movlb 0	; select bank0
  3884  1A1E  0140               	bsf	(25),5	;volatile
  3885  1A1F  1699               	line	109
  3886                           	
  3887                           l4618:	
  3888  1A20                     ;main.c: 109:  LATCbits.LATC3 = 1;
  3889                           	bsf	(26),3	;volatile
  3890  1A20  159A               	line	110
  3891                           ;main.c: 110:  OLED_init();
  3892                           	fcall	_OLED_init
  3893  1A21  319E  2639  319A   	line	111
  3894                           ;main.c: 111:  OLED_returnHome();
  3895                           	fcall	_OLED_returnHome
  3896  1A24  31A6  26B4  319A   	line	112
  3897                           ;main.c: 112:  OLED_command(0x01);
  3898                           	movlw	low(01h)
  3899  1A27  3001               	fcall	_OLED_command
  3900  1A28  31A6  26E1  319A   	line	115
  3901                           	
  3902                           l4620:	
  3903  1A2B                     ;main.c: 115:  g_power = 1.0;
  3904                           	movlw	0x3f
  3905  1A2B  303F               	movlb 2	; select bank2
  3906  1A2C  0142               	movwf	(_g_power+3)^0100h
  3907  1A2D  00DD               	movlw	0x80
  3908  1A2E  3080               	movwf	(_g_power+2)^0100h
  3909  1A2F  00DC               	movlw	0x0
  3910  1A30  3000               	movwf	(_g_power+1)^0100h
  3911  1A31  00DB               	movlw	0x0
  3912  1A32  3000               	movwf	(_g_power)^0100h
  3913  1A33  00DA               
  3914                           	line	117
  3915                           ;main.c: 117:  while (1) {
  3916                           	
  3917                           l173:	
  3918  1A34                     	line	118
  3919                           # 118 "main.c"
  3920                           clrwdt ;# 
  3921  1A34  0064               psect	maintext
  3922                           	line	119
  3923                           	
  3924                           l4622:	
  3925  1A35                     ;main.c: 119:   readAnalogValues();
  3926                           	fcall	_readAnalogValues
  3927  1A35  319D  2544  319A   	line	121
  3928                           ;main.c: 121:   if (g_sensorTimer >= 5) {
  3929                           	movlw	low(05h)
  3930  1A38  3005               	movlb 3	; select bank3
  3931  1A39  0143               	subwf	(_g_sensorTimer)^0180h,w	;volatile
  3932  1A3A  026B               	skipc
  3933  1A3B  1C03               	goto	u6511
  3934  1A3C  2A3E               	goto	u6510
  3935  1A3D  2A3F               u6511:
  3936  1A3E                     	goto	l4628
  3937  1A3E  2A45               u6510:
  3938  1A3F                     	line	122
  3939                           	
  3940                           l4624:	
  3941  1A3F                     ;main.c: 122:    g_sensorTimer = 0;
  3942                           	clrf	(_g_sensorTimer)^0180h	;volatile
  3943  1A3F  01EB               	line	123
  3944                           	
  3945                           l4626:	
  3946  1A40                     ;main.c: 123:    uartSendByte('?');
  3947                           	movlw	low(03Fh)
  3948  1A40  303F               	fcall	_uartSendByte
  3949  1A41  3188  2002  319A   	goto	l4628
  3950  1A44  2A45               	line	124
  3951                           ;main.c: 124:   }
  3952                           	
  3953                           l174:	
  3954  1A45                     	line	126
  3955                           	
  3956                           l4628:	
  3957  1A45                     ;main.c: 126:   if (g_dataReady == 1) {
  3958                           	movlb 3	; select bank3
  3959  1A45  0143               		decf	((_g_dataReady)^0180h),w	;volatile
  3960  1A46  036A               	btfss	status,2
  3961  1A47  1D03               	goto	u6521
  3962  1A48  2A4A               	goto	u6520
  3963  1A49  2A4B               u6521:
  3964  1A4A                     	goto	l4634
  3965  1A4A  2A50               u6520:
  3966  1A4B                     	line	127
  3967                           	
  3968                           l4630:	
  3969  1A4B                     ;main.c: 127:    g_dataReady = 0;
  3970                           	clrf	(_g_dataReady)^0180h	;volatile
  3971  1A4B  01EA               	line	128
  3972                           	
  3973                           l4632:	
  3974  1A4C                     ;main.c: 128:    handleSensorData();
  3975                           	fcall	_handleSensorData
  3976  1A4C  319A  22FC  319A   	goto	l4634
  3977  1A4F  2A50               	line	129
  3978                           ;main.c: 129:   }
  3979                           	
  3980                           l175:	
  3981  1A50                     	line	131
  3982                           	
  3983                           l4634:	
  3984  1A50                     ;main.c: 131:   showMenu();
  3985                           	fcall	_showMenu
  3986  1A50  319F  2759  319A   	line	132
  3987                           	
  3988                           l4636:	
  3989  1A53                     ;main.c: 132:   _delay((unsigned long)((10)*(4000000/4000.0)));
  3990                           	opt asmopt_push
  3991                           opt asmopt_off
  3992                           movlw	13
  3993  1A53  300D               	movlb 2	; select bank2
  3994  1A54  0142               movwf	((??_main+0)^0100h+0),f
  3995  1A55  00D9               	movlw	251
  3996  1A56  30FB               u6677:
  3997  1A57                     decfsz	wreg
  3998  1A57  0B89               	goto	u6677
  3999  1A58  2A57               	decfsz	((??_main+0)^0100h+0),f
  4000  1A59  0BD9               	goto	u6677
  4001  1A5A  2A57               	nop2
  4002  1A5B  3200               opt asmopt_pop
  4003                           
  4004                           	goto	l173
  4005  1A5C  2A34               	line	134
  4006                           ;main.c: 134:  }
  4007                           	
  4008                           l176:	
  4009  1A5D                     	goto	l173
  4010  1A5D  2A34               	
  4011                           l177:	
  4012  1A5E                     	line	135
  4013                           	
  4014                           l178:	
  4015  1A5E                     	global	start
  4016                           	ljmp	start
  4017  1A5E  3180  287C         	opt stack 0
  4018                           GLOBAL	__end_of_main
  4019                           	__end_of_main:
  4020  1A60                     	signat	_main,89
  4021                           	global	_uartSendByte
  4022                           
  4023 ;; *************** function _uartSendByte *****************
  4024 ;; Defined at:
  4025 ;;		line 293 in file "main.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;  s               1    wreg     unsigned char 
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;  s               1    0[BANK0 ] unsigned char 
  4030 ;; Return value:  Size  Location     Type
  4031 ;;                  1    wreg      void 
  4032 ;; Registers used:
  4033 ;;		wreg
  4034 ;; Tracked objects:
  4035 ;;		On entry : 0/0
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4040 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4042 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4043 ;;Total ram usage:        1 bytes
  4044 ;; Hardware stack levels used:    1
  4045 ;; Hardware stack levels required when called:    3
  4046 ;; This function calls:
  4047 ;;		Nothing
  4048 ;; This function is called by:
  4049 ;;		_main
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  4053                           	line	293
  4054                           global __ptext1
  4055                           __ptext1:	;psect for function _uartSendByte
  4056  0802                     psect	text1
  4057                           	file	"main.c"
  4058                           	line	293
  4059                           	global	__size_of_uartSendByte
  4060                           	__size_of_uartSendByte	equ	__end_of_uartSendByte-_uartSendByte
  4061  000E                     	
  4062                           _uartSendByte:	
  4063  0802                     ;incstack = 0
  4064                           	opt	stack 12
  4065                           ; Regs used in _uartSendByte: [wreg]
  4066                           ;uartSendByte@s stored from wreg
  4067                           	movlb 0	; select bank0
  4068  0802  0140               	movwf	(uartSendByte@s)
  4069  0803  00A0               	line	295
  4070                           	
  4071                           l4528:	
  4072  0804                     ;main.c: 293: void uartSendByte(char s);main.c: 294: {;main.c: 295:  TX1REG = s;
  4073                           	movf	(uartSendByte@s),w
  4074  0804  0820               	movlb 2	; select bank2
  4075  0805  0142               	movwf	(282)^0100h	;volatile
  4076  0806  009A               	line	296
  4077                           	
  4078                           l4530:	
  4079  0807                     ;main.c: 296:  __nop();
  4080                           	opt	asmopt_push
  4081                           	opt	asmopt_off
  4082                           	nop
  4083  0807  0000               	opt	asmopt_pop
  4084                           	line	297
  4085                           ;main.c: 297:  while (!PIR3bits.TX1IF);
  4086                           	goto	l227
  4087  0808  2809               	
  4088                           l228:	
  4089  0809                     	
  4090                           l227:	
  4091  0809                     	movlb 14	; select bank14
  4092  0809  014E               	btfss	(1807)^0700h,4	;volatile
  4093  080A  1E0F               	goto	u6351
  4094  080B  280D               	goto	u6350
  4095  080C  280E               u6351:
  4096  080D                     	goto	l227
  4097  080D  2809               u6350:
  4098  080E                     	goto	l230
  4099  080E  280F               	
  4100                           l229:	
  4101  080F                     	line	298
  4102                           	
  4103                           l230:	
  4104  080F                     	return
  4105  080F  0008               	opt stack 0
  4106                           GLOBAL	__end_of_uartSendByte
  4107                           	__end_of_uartSendByte:
  4108  0810                     	signat	_uartSendByte,4217
  4109                           	global	_showMenu
  4110                           
  4111 ;; *************** function _showMenu *****************
  4112 ;; Defined at:
  4113 ;;		line 160 in file "main.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;		None
  4116 ;; Auto vars:     Size  Location     Type
  4117 ;;  s              61    0[BANK3 ] unsigned char [61]
  4118 ;;  pb              1   61[BANK3 ] enum E7848
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  1    wreg      void 
  4121 ;; Registers used:
  4122 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4129 ;;      Locals:         0       0       0       0      62       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4130 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4131 ;;      Totals:         0       0       0       2      62       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4132 ;;Total ram usage:       64 bytes
  4133 ;; Hardware stack levels used:    1
  4134 ;; Hardware stack levels required when called:   11
  4135 ;; This function calls:
  4136 ;;		_OLED_print_xy
  4137 ;;		_getPB
  4138 ;;		_menuInput
  4139 ;;		_sprintf
  4140 ;; This function is called by:
  4141 ;;		_main
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  4145                           	line	160
  4146                           global __ptext2
  4147                           __ptext2:	;psect for function _showMenu
  4148  1F59                     psect	text2
  4149                           	file	"main.c"
  4150                           	line	160
  4151                           	global	__size_of_showMenu
  4152                           	__size_of_showMenu	equ	__end_of_showMenu-_showMenu
  4153  00A7                     	
  4154                           _showMenu:	
  4155  1F59                     ;incstack = 0
  4156                           	opt	stack 4
  4157                           ; Regs used in _showMenu: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4158                           	line	167
  4159                           	
  4160                           l4540:	
  4161  1F59                     ;main.c: 162:  static uint8_t menu = 0;;main.c: 163:  static uint8_t page = 0;;main.c: 1
                                 64:  enum e_buttonPress pb;;main.c: 165:  char s[61];;main.c: 167:  pb = getPB();
  4162                           	fcall	_getPB
  4163  1F59  31A6  26F8  319F   	movlb 2	; select bank2
  4164  1F5C  0142               	movwf	(??_showMenu+0)^0100h+0
  4165  1F5D  00D7               	movf	(??_showMenu+0)^0100h+0,w
  4166  1F5E  0857               	movlb 3	; select bank3
  4167  1F5F  0143               	movwf	(showMenu@pb)^0180h
  4168  1F60  00DD               	line	168
  4169                           	
  4170                           l4542:	
  4171  1F61                     ;main.c: 168:  if (menu == 0) {
  4172                           	movf	((showMenu@menu)^0180h),w
  4173  1F61  086D               	btfss	status,2
  4174  1F62  1D03               	goto	u6381
  4175  1F63  2F65               	goto	u6380
  4176  1F64  2F66               u6381:
  4177  1F65                     	goto	l4548
  4178  1F65  2FD9               u6380:
  4179  1F66                     	line	170
  4180                           	
  4181                           l4544:	
  4182  1F66                     ;main.c: 170:   OLED_print_xy(0, 0, "Temperature Rel.humidityDewpoint    Bat.   Power");
                                 
  4183                           	movlb 0	; select bank0
  4184  1F66  0140               	clrf	(OLED_print_xy@row)
  4185  1F67  01A7               	movlw	low(((STR_1)|8000h))
  4186  1F68  3081               	movwf	(OLED_print_xy@s)
  4187  1F69  00A8               	movlw	high(((STR_1)|8000h))
  4188  1F6A  30A0               	movwf	((OLED_print_xy@s))+1
  4189  1F6B  00A9               	movlw	low(0)
  4190  1F6C  3000               	fcall	_OLED_print_xy
  4191  1F6D  3199  2128  319F   	line	171
  4192                           ;main.c: 171:   sprintf(s, "%5.1f \xdf\C    %5.1f %%     %5.1f \xdf\C    %4.1fV  %4.1fW"
                                 ,
  4193                           	movlw	low(((STR_2)|8000h))
  4194  1F70  301C               	movlb 2	; select bank2
  4195  1F71  0142               	movwf	(sprintf@fmt)^0100h
  4196  1F72  00B7               	movlw	high(((STR_2)|8000h))
  4197  1F73  30A0               	movwf	((sprintf@fmt)^0100h)+1
  4198  1F74  00B8               	movlb 3	; select bank3
  4199  1F75  0143               	movf	(_g_tempC+3)^0180h,w
  4200  1F76  0869               	movlb 2	; select bank2
  4201  1F77  0142               	movwf	3+(?_sprintf)^0100h+02h
  4202  1F78  00BC               	movlb 3	; select bank3
  4203  1F79  0143               	movf	(_g_tempC+2)^0180h,w
  4204  1F7A  0868               	movlb 2	; select bank2
  4205  1F7B  0142               	movwf	2+(?_sprintf)^0100h+02h
  4206  1F7C  00BB               	movlb 3	; select bank3
  4207  1F7D  0143               	movf	(_g_tempC+1)^0180h,w
  4208  1F7E  0867               	movlb 2	; select bank2
  4209  1F7F  0142               	movwf	1+(?_sprintf)^0100h+02h
  4210  1F80  00BA               	movlb 3	; select bank3
  4211  1F81  0143               	movf	(_g_tempC)^0180h,w
  4212  1F82  0866               	movlb 2	; select bank2
  4213  1F83  0142               	movwf	0+(?_sprintf)^0100h+02h
  4214  1F84  00B9               
  4215                           	movlb 3	; select bank3
  4216  1F85  0143               	movf	(_g_relHum+3)^0180h,w
  4217  1F86  0865               	movlb 2	; select bank2
  4218  1F87  0142               	movwf	3+(?_sprintf)^0100h+06h
  4219  1F88  00C0               	movlb 3	; select bank3
  4220  1F89  0143               	movf	(_g_relHum+2)^0180h,w
  4221  1F8A  0864               	movlb 2	; select bank2
  4222  1F8B  0142               	movwf	2+(?_sprintf)^0100h+06h
  4223  1F8C  00BF               	movlb 3	; select bank3
  4224  1F8D  0143               	movf	(_g_relHum+1)^0180h,w
  4225  1F8E  0863               	movlb 2	; select bank2
  4226  1F8F  0142               	movwf	1+(?_sprintf)^0100h+06h
  4227  1F90  00BE               	movlb 3	; select bank3
  4228  1F91  0143               	movf	(_g_relHum)^0180h,w
  4229  1F92  0862               	movlb 2	; select bank2
  4230  1F93  0142               	movwf	0+(?_sprintf)^0100h+06h
  4231  1F94  00BD               
  4232                           	movlb 3	; select bank3
  4233  1F95  0143               	movf	(_g_dewPointC+3)^0180h,w
  4234  1F96  0861               	movlb 2	; select bank2
  4235  1F97  0142               	movwf	3+(?_sprintf)^0100h+0Ah
  4236  1F98  00C4               	movlb 3	; select bank3
  4237  1F99  0143               	movf	(_g_dewPointC+2)^0180h,w
  4238  1F9A  0860               	movlb 2	; select bank2
  4239  1F9B  0142               	movwf	2+(?_sprintf)^0100h+0Ah
  4240  1F9C  00C3               	movlb 3	; select bank3
  4241  1F9D  0143               	movf	(_g_dewPointC+1)^0180h,w
  4242  1F9E  085F               	movlb 2	; select bank2
  4243  1F9F  0142               	movwf	1+(?_sprintf)^0100h+0Ah
  4244  1FA0  00C2               	movlb 3	; select bank3
  4245  1FA1  0143               	movf	(_g_dewPointC)^0180h,w
  4246  1FA2  085E               	movlb 2	; select bank2
  4247  1FA3  0142               	movwf	0+(?_sprintf)^0100h+0Ah
  4248  1FA4  00C1               
  4249                           	movf	(_g_voltage+3)^0100h,w
  4250  1FA5  0861               	movwf	3+(?_sprintf)^0100h+0Eh
  4251  1FA6  00C8               	movf	(_g_voltage+2)^0100h,w
  4252  1FA7  0860               	movwf	2+(?_sprintf)^0100h+0Eh
  4253  1FA8  00C7               	movf	(_g_voltage+1)^0100h,w
  4254  1FA9  085F               	movwf	1+(?_sprintf)^0100h+0Eh
  4255  1FAA  00C6               	movf	(_g_voltage)^0100h,w
  4256  1FAB  085E               	movwf	0+(?_sprintf)^0100h+0Eh
  4257  1FAC  00C5               
  4258                           	movf	(_g_power+3)^0100h,w
  4259  1FAD  085D               	movwf	3+(?_sprintf)^0100h+012h
  4260  1FAE  00CC               	movf	(_g_power+2)^0100h,w
  4261  1FAF  085C               	movwf	2+(?_sprintf)^0100h+012h
  4262  1FB0  00CB               	movf	(_g_power+1)^0100h,w
  4263  1FB1  085B               	movwf	1+(?_sprintf)^0100h+012h
  4264  1FB2  00CA               	movf	(_g_power)^0100h,w
  4265  1FB3  085A               	movwf	0+(?_sprintf)^0100h+012h
  4266  1FB4  00C9               
  4267                           	movlw	(low(showMenu@s|((0x1)<<8)))&0ffh
  4268  1FB5  30A0               	fcall	_sprintf
  4269  1FB6  3198  200E  319F   	line	173
  4270                           ;main.c: 173:   OLED_print_xy(0, 1, s);
  4271                           	movlb 0	; select bank0
  4272  1FB9  0140               	clrf	(OLED_print_xy@row)
  4273  1FBA  01A7               	incf	(OLED_print_xy@row),f
  4274  1FBB  0AA7               	movlw	low(showMenu@s)
  4275  1FBC  30A0               	movwf	(OLED_print_xy@s)
  4276  1FBD  00A8               	movlw	high(showMenu@s)
  4277  1FBE  3001               	movwf	(OLED_print_xy@s+1)
  4278  1FBF  00A9               	movlw	low(0)
  4279  1FC0  3000               	fcall	_OLED_print_xy
  4280  1FC1  3199  2128  319F   	line	174
  4281                           	
  4282                           l4546:	
  4283  1FC4                     ;main.c: 174:   menuInput(&page, 4, &menu, 1, 0, 0);
  4284                           	movlw	low(04h)
  4285  1FC4  3004               	movlb 2	; select bank2
  4286  1FC5  0142               	movwf	(??_showMenu+0)^0100h+0
  4287  1FC6  00D7               	movf	(??_showMenu+0)^0100h+0,w
  4288  1FC7  0857               	movlb 0	; select bank0
  4289  1FC8  0140               	movwf	(menuInput@numPages)
  4290  1FC9  00A7               	movlw	(low(showMenu@menu|((0x1)<<8)))&0ffh
  4291  1FCA  30ED               	movlb 2	; select bank2
  4292  1FCB  0142               	movwf	(??_showMenu+1)^0100h+0
  4293  1FCC  00D8               	movf	(??_showMenu+1)^0100h+0,w
  4294  1FCD  0858               	movlb 0	; select bank0
  4295  1FCE  0140               	movwf	(menuInput@menu)
  4296  1FCF  00A8               	clrf	(menuInput@pbShort)
  4297  1FD0  01A9               	incf	(menuInput@pbShort),f
  4298  1FD1  0AA9               	clrf	(menuInput@pbLong)
  4299  1FD2  01AA               	clrf	(menuInput@timeout)
  4300  1FD3  01AB               	movlw	(low(showMenu@page|((0x1)<<8)))&0ffh
  4301  1FD4  30EC               	fcall	_menuInput
  4302  1FD5  3191  218A  319F   	line	175
  4303                           ;main.c: 175:  } else if (menu == 1) {
  4304                           	goto	l199
  4305  1FD8  2FFF               	
  4306                           l196:	
  4307  1FD9                     	
  4308                           l4548:	
  4309  1FD9                     	movlb 3	; select bank3
  4310  1FD9  0143               		decf	((showMenu@menu)^0180h),w
  4311  1FDA  036D               	btfss	status,2
  4312  1FDB  1D03               	goto	u6391
  4313  1FDC  2FDE               	goto	u6390
  4314  1FDD  2FDF               u6391:
  4315  1FDE                     	goto	l199
  4316  1FDE  2FFF               u6390:
  4317  1FDF                     	line	177
  4318                           	
  4319                           l4550:	
  4320  1FDF                     ;main.c: 177:   OLED_print_xy(0, 0, "Ch1: xx inchCh2: xx inchCh3: xx inchCh4: xx inch");
                                 
  4321                           	movlb 0	; select bank0
  4322  1FDF  0140               	clrf	(OLED_print_xy@row)
  4323  1FE0  01A7               	movlw	low(((STR_3)|8000h))
  4324  1FE1  3050               	movwf	(OLED_print_xy@s)
  4325  1FE2  00A8               	movlw	high(((STR_3)|8000h))
  4326  1FE3  30A0               	movwf	((OLED_print_xy@s))+1
  4327  1FE4  00A9               	movlw	low(0)
  4328  1FE5  3000               	fcall	_OLED_print_xy
  4329  1FE6  3199  2128  319F   	line	178
  4330                           	
  4331                           l4552:	
  4332  1FE9                     ;main.c: 178:   menuInput(&page, 4, &menu, 1, 0, 0);
  4333                           	movlw	low(04h)
  4334  1FE9  3004               	movlb 2	; select bank2
  4335  1FEA  0142               	movwf	(??_showMenu+0)^0100h+0
  4336  1FEB  00D7               	movf	(??_showMenu+0)^0100h+0,w
  4337  1FEC  0857               	movlb 0	; select bank0
  4338  1FED  0140               	movwf	(menuInput@numPages)
  4339  1FEE  00A7               	movlw	(low(showMenu@menu|((0x1)<<8)))&0ffh
  4340  1FEF  30ED               	movlb 2	; select bank2
  4341  1FF0  0142               	movwf	(??_showMenu+1)^0100h+0
  4342  1FF1  00D8               	movf	(??_showMenu+1)^0100h+0,w
  4343  1FF2  0858               	movlb 0	; select bank0
  4344  1FF3  0140               	movwf	(menuInput@menu)
  4345  1FF4  00A8               	clrf	(menuInput@pbShort)
  4346  1FF5  01A9               	incf	(menuInput@pbShort),f
  4347  1FF6  0AA9               	clrf	(menuInput@pbLong)
  4348  1FF7  01AA               	clrf	(menuInput@timeout)
  4349  1FF8  01AB               	movlw	(low(showMenu@page|((0x1)<<8)))&0ffh
  4350  1FF9  30EC               	fcall	_menuInput
  4351  1FFA  3191  218A  319F   	goto	l199
  4352  1FFD  2FFF               	line	179
  4353                           ;main.c: 179:  }
  4354                           	
  4355                           l198:	
  4356  1FFE                     	goto	l199
  4357  1FFE  2FFF               	
  4358                           l197:	
  4359  1FFF                     	line	180
  4360                           	
  4361                           l199:	
  4362  1FFF                     	return
  4363  1FFF  0008               	opt stack 0
  4364                           GLOBAL	__end_of_showMenu
  4365                           	__end_of_showMenu:
  4366  2000                     	signat	_showMenu,89
  4367                           	global	_sprintf
  4368                           
  4369 ;; *************** function _sprintf *****************
  4370 ;; Defined at:
  4371 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;  s               1    wreg     PTR unsigned char 
  4374 ;;		 -> showMenu@s(61), 
  4375 ;;  fmt             2   23[BANK2 ] PTR const unsigned char 
  4376 ;;		 -> STR_2(52), 
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;  s               1   48[BANK2 ] PTR unsigned char 
  4379 ;;		 -> showMenu@s(61), 
  4380 ;;  f               5   50[BANK2 ] struct _IO_FILE
  4381 ;;  ret             2   46[BANK2 ] int 
  4382 ;;  ap              1   49[BANK2 ] PTR void [1]
  4383 ;;		 -> ?_sprintf(2), 
  4384 ;; Return value:  Size  Location     Type
  4385 ;;                  2   23[BANK2 ] int 
  4386 ;; Registers used:
  4387 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4388 ;; Tracked objects:
  4389 ;;		On entry : 0/0
  4390 ;;		On exit  : 0/0
  4391 ;;		Unchanged: 0/0
  4392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4393 ;;      Params:         0       0       0      22       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4394 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4395 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4396 ;;      Totals:         0       0       0      32       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4397 ;;Total ram usage:       32 bytes
  4398 ;; Hardware stack levels used:    1
  4399 ;; Hardware stack levels required when called:   10
  4400 ;; This function calls:
  4401 ;;		_vfprintf
  4402 ;; This function is called by:
  4403 ;;		_showMenu
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           psect	text3,local,class=CODE,delta=2,merge=1,group=2
  4407                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  4408                           	line	9
  4409                           global __ptext3
  4410                           __ptext3:	;psect for function _sprintf
  4411  180E                     psect	text3
  4412                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  4413                           	line	9
  4414                           	global	__size_of_sprintf
  4415                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  4416  0029                     	
  4417                           _sprintf:	
  4418  180E                     ;incstack = 0
  4419                           	opt	stack 4
  4420                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4421                           ;sprintf@s stored from wreg
  4422                           	movlb 2	; select bank2
  4423  180E  0142               	movwf	(sprintf@s)^0100h
  4424  180F  00D0               	line	15
  4425                           	
  4426                           l4290:	
  4427  1810                     	movlw	(low(?_sprintf|((0x1)<<8)+02h))&0ffh
  4428  1810  3039               	movwf	(??_sprintf+0)^0100h+0
  4429  1811  00CD               	movf	(??_sprintf+0)^0100h+0,w
  4430  1812  084D               	movwf	(sprintf@ap)^0100h
  4431  1813  00D1               	line	16
  4432                           	movf	(sprintf@s)^0100h,w
  4433  1814  0850               	movwf	(??_sprintf+0)^0100h+0
  4434  1815  00CD               	movf	(??_sprintf+0)^0100h+0,w
  4435  1816  084D               	movwf	(sprintf@f)^0100h
  4436  1817  00D2               	line	17
  4437                           	
  4438                           l4292:	
  4439  1818                     	clrf	0+(sprintf@f)^0100h+01h
  4440  1818  01D3               	clrf	1+(sprintf@f)^0100h+01h
  4441  1819  01D4               	line	18
  4442                           	
  4443                           l4294:	
  4444  181A                     	clrf	0+(sprintf@f)^0100h+03h
  4445  181A  01D5               	clrf	1+(sprintf@f)^0100h+03h
  4446  181B  01D6               	line	19
  4447                           	
  4448                           l4296:	
  4449  181C                     	movf	(sprintf@fmt+1)^0100h,w
  4450  181C  0838               	movwf	(vfprintf@fmt+1)^0100h
  4451  181D  00B0               	movf	(sprintf@fmt)^0100h,w
  4452  181E  0837               	movwf	(vfprintf@fmt)^0100h
  4453  181F  00AF               	movlw	(low(sprintf@ap|((0x1)<<8)))&0ffh
  4454  1820  3051               	movwf	(??_sprintf+0)^0100h+0
  4455  1821  00CD               	movf	(??_sprintf+0)^0100h+0,w
  4456  1822  084D               	movwf	(vfprintf@ap)^0100h
  4457  1823  00B1               	movlw	(low(sprintf@f|((0x1)<<8)))&0ffh
  4458  1824  3052               	fcall	_vfprintf
  4459  1825  3198  208D  3198   	movlb 2	; select bank2
  4460  1828  0142               	movf	(1+(?_vfprintf))^0100h,w
  4461  1829  0830               	movwf	(sprintf@ret+1)^0100h
  4462  182A  00CF               	movf	(0+(?_vfprintf))^0100h,w
  4463  182B  082F               	movwf	(sprintf@ret)^0100h
  4464  182C  00CE               	line	20
  4465                           	
  4466                           l4298:	
  4467  182D                     	movf	0+(sprintf@f)^0100h+01h,w
  4468  182D  0853               	addwf	(sprintf@s)^0100h,w
  4469  182E  0750               	movwf	(??_sprintf+0)^0100h+0
  4470  182F  00CD               	movf	0+(??_sprintf+0)^0100h+0,w
  4471  1830  084D               	movwf	fsr1l
  4472  1831  0086               	movlw 1	; select bank2/3
  4473  1832  3001               	movwf fsr1h	
  4474  1833  0087               	
  4475                           	clrf	indf1
  4476  1834  0181               	goto	l1051
  4477  1835  2836               	line	22
  4478                           	
  4479                           l4300:	
  4480  1836                     	line	23
  4481                           ;	Return value of _sprintf is never used
  4482                           	
  4483                           l1051:	
  4484  1836                     	return
  4485  1836  0008               	opt stack 0
  4486                           GLOBAL	__end_of_sprintf
  4487                           	__end_of_sprintf:
  4488  1837                     	signat	_sprintf,4698
  4489                           	global	_vfprintf
  4490                           
  4491 ;; *************** function _vfprintf *****************
  4492 ;; Defined at:
  4493 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;  fp              1    wreg     PTR struct _IO_FILE
  4496 ;;		 -> sprintf@f(5), 
  4497 ;;  fmt             2   15[BANK2 ] PTR const unsigned char 
  4498 ;;		 -> STR_2(52), 
  4499 ;;  ap              1   17[BANK2 ] PTR PTR void 
  4500 ;;		 -> sprintf@ap(1), 
  4501 ;; Auto vars:     Size  Location     Type
  4502 ;;  fp              1   20[BANK2 ] PTR struct _IO_FILE
  4503 ;;		 -> sprintf@f(5), 
  4504 ;;  cfmt            2   21[BANK2 ] PTR unsigned char 
  4505 ;;		 -> STR_2(52), 
  4506 ;; Return value:  Size  Location     Type
  4507 ;;                  2   15[BANK2 ] int 
  4508 ;; Registers used:
  4509 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4510 ;; Tracked objects:
  4511 ;;		On entry : 0/0
  4512 ;;		On exit  : 0/0
  4513 ;;		Unchanged: 0/0
  4514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4515 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4516 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4517 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4518 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4519 ;;Total ram usage:        8 bytes
  4520 ;; Hardware stack levels used:    1
  4521 ;; Hardware stack levels required when called:    9
  4522 ;; This function calls:
  4523 ;;		_vfpfcnvrt
  4524 ;; This function is called by:
  4525 ;;		_sprintf
  4526 ;; This function uses a non-reentrant model
  4527 ;;
  4528                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  4529                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  4530                           	line	1368
  4531                           global __ptext4
  4532                           __ptext4:	;psect for function _vfprintf
  4533  188D                     psect	text4
  4534                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  4535                           	line	1368
  4536                           	global	__size_of_vfprintf
  4537                           	__size_of_vfprintf	equ	__end_of_vfprintf-_vfprintf
  4538  0032                     	
  4539                           _vfprintf:	
  4540  188D                     ;incstack = 0
  4541                           	opt	stack 4
  4542                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4543                           ;vfprintf@fp stored from wreg
  4544                           	movlb 2	; select bank2
  4545  188D  0142               	movwf	(vfprintf@fp)^0100h
  4546  188E  00B4               	line	1373
  4547                           	
  4548                           l4268:	
  4549  188F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1368: int v
                                 fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
                                 0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pi
                                 c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
                                 8\v2.00\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4550                           	movf	(vfprintf@fmt+1)^0100h,w
  4551  188F  0830               	movwf	(vfprintf@cfmt+1)^0100h
  4552  1890  00B6               	movf	(vfprintf@fmt)^0100h,w
  4553  1891  082F               	movwf	(vfprintf@cfmt)^0100h
  4554  1892  00B5               	line	1374
  4555                           	
  4556                           l4270:	
  4557  1893                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1374:     n
                                 out = 0;
  4558                           	clrf	(_nout)^0100h
  4559  1893  01E2               	clrf	(_nout+1)^0100h
  4560  1894  01E3               	line	1375
  4561                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
                                 hile (*cfmt) {
  4562                           	goto	l4274
  4563  1895  28AF               	
  4564                           l512:	
  4565  1896                     	line	1376
  4566                           	
  4567                           l4272:	
  4568  1896                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1376:      
                                    nout += vfpfcnvrt(fp, &cfmt, ap);
  4569                           	movlw	(low(vfprintf@cfmt|((0x1)<<8)))&0ffh
  4570  1896  3035               	movwf	(??_vfprintf+0)^0100h+0
  4571  1897  00B2               	movf	(??_vfprintf+0)^0100h+0,w
  4572  1898  0832               	movlb 1	; select bank1
  4573  1899  0141               	movwf	(vfpfcnvrt@fmt)^080h
  4574  189A  00E8               	movlb 2	; select bank2
  4575  189B  0142               	movf	(vfprintf@ap)^0100h,w
  4576  189C  0831               	movwf	(??_vfprintf+1)^0100h+0
  4577  189D  00B3               	movf	(??_vfprintf+1)^0100h+0,w
  4578  189E  0833               	movlb 1	; select bank1
  4579  189F  0141               	movwf	(vfpfcnvrt@ap)^080h
  4580  18A0  00E9               	movlb 2	; select bank2
  4581  18A1  0142               	movf	(vfprintf@fp)^0100h,w
  4582  18A2  0834               	fcall	_vfpfcnvrt
  4583  18A3  318C  2461  3198   	movlb 1	; select bank1
  4584  18A6  0141               	movf	(0+(?_vfpfcnvrt))^080h,w
  4585  18A7  0868               	movlb 2	; select bank2
  4586  18A8  0142               	addwf	(_nout)^0100h,f
  4587  18A9  07E2               	movlb 1	; select bank1
  4588  18AA  0141               	movf	(1+(?_vfpfcnvrt))^080h,w
  4589  18AB  0869               	movlb 2	; select bank2
  4590  18AC  0142               	addwfc	(_nout+1)^0100h,f
  4591  18AD  3DE3               	goto	l4274
  4592  18AE  28AF               	line	1377
  4593                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1377:     }
                                 
  4594                           	
  4595                           l511:	
  4596  18AF                     	line	1375
  4597                           	
  4598                           l4274:	
  4599  18AF                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
                                 hile (*cfmt) {
  4600                           	movf	(vfprintf@cfmt)^0100h,w
  4601  18AF  0835               	movwf	fsr0l
  4602  18B0  0084               	movf	((vfprintf@cfmt+1)^0100h),w
  4603  18B1  0836               	movwf	fsr0h
  4604  18B2  0085               	moviw	fsr0++
  4605  18B3  0012               	btfss	status,2
  4606  18B4  1D03               	goto	u6041
  4607  18B5  28B7               	goto	u6040
  4608  18B6  28B8               u6041:
  4609  18B7                     	goto	l4272
  4610  18B7  2896               u6040:
  4611  18B8                     	goto	l4276
  4612  18B8  28B9               	
  4613                           l513:	
  4614  18B9                     	line	1378
  4615                           	
  4616                           l4276:	
  4617  18B9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1378:     r
                                 eturn nout;
  4618                           	movf	(_nout+1)^0100h,w
  4619  18B9  0863               	movwf	(?_vfprintf+1)^0100h
  4620  18BA  00B0               	movf	(_nout)^0100h,w
  4621  18BB  0862               	movwf	(?_vfprintf)^0100h
  4622  18BC  00AF               	goto	l514
  4623  18BD  28BE               	
  4624                           l4278:	
  4625  18BE                     	line	1382
  4626                           	
  4627                           l514:	
  4628  18BE                     	return
  4629  18BE  0008               	opt stack 0
  4630                           GLOBAL	__end_of_vfprintf
  4631                           	__end_of_vfprintf:
  4632  18BF                     	signat	_vfprintf,12410
  4633                           	global	_vfpfcnvrt
  4634                           
  4635 ;; *************** function _vfpfcnvrt *****************
  4636 ;; Defined at:
  4637 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;  fp              1    wreg     PTR struct _IO_FILE
  4640 ;;		 -> sprintf@f(5), 
  4641 ;;  fmt             1   72[BANK1 ] PTR PTR unsigned char 
  4642 ;;		 -> vfprintf@cfmt(2), 
  4643 ;;  ap              1   73[BANK1 ] PTR PTR void 
  4644 ;;		 -> sprintf@ap(1), 
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;  fp              1   14[BANK2 ] PTR struct _IO_FILE
  4647 ;;		 -> sprintf@f(5), 
  4648 ;;  f               4    6[BANK2 ] PTR struct _IO_FILE
  4649 ;;  llu             4    0        unsigned long 
  4650 ;;  ll              4    0        long 
  4651 ;;  ct              3   10[BANK2 ] unsigned char [3]
  4652 ;;  vp              2    0        PTR void 
  4653 ;;  i               2    0        int 
  4654 ;;  done            2    0        int 
  4655 ;;  cp              2    0        PTR unsigned char 
  4656 ;;  c               1   13[BANK2 ] unsigned char 
  4657 ;; Return value:  Size  Location     Type
  4658 ;;                  2   72[BANK1 ] int 
  4659 ;; Registers used:
  4660 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4661 ;; Tracked objects:
  4662 ;;		On entry : 0/0
  4663 ;;		On exit  : 0/0
  4664 ;;		Unchanged: 0/0
  4665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4666 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4667 ;;      Locals:         0       0       0      15       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4668 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4669 ;;      Totals:         0       0       8      15       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4670 ;;Total ram usage:       23 bytes
  4671 ;; Hardware stack levels used:    1
  4672 ;; Hardware stack levels required when called:    8
  4673 ;; This function calls:
  4674 ;;		_atoi
  4675 ;;		_efgtoa
  4676 ;;		_fputc
  4677 ;;		_isdigit
  4678 ;;		_isupper
  4679 ;;		_strncmp
  4680 ;;		_tolower
  4681 ;; This function is called by:
  4682 ;;		_vfprintf
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  4686                           	line	670
  4687                           global __ptext5
  4688                           __ptext5:	;psect for function _vfpfcnvrt
  4689  0C61                     psect	text5
  4690                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  4691                           	line	670
  4692                           	global	__size_of_vfpfcnvrt
  4693                           	__size_of_vfpfcnvrt	equ	__end_of_vfpfcnvrt-_vfpfcnvrt
  4694  039F                     	
  4695                           _vfpfcnvrt:	
  4696  0C61                     ;incstack = 0
  4697                           	opt	stack 4
  4698                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4699                           ;vfpfcnvrt@fp stored from wreg
  4700                           	movlb 2	; select bank2
  4701  0C61  0142               	movwf	(vfpfcnvrt@fp)^0100h
  4702  0C62  00AE               	line	680
  4703                           	
  4704                           l4128:	
  4705  0C63                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 670: static
                                  int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
                                 2.00\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.00\
                                 pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
                                 rochip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
                                  (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4706                           	movlb 1	; select bank1
  4707  0C63  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  4708  0C64  0868               	movwf	fsr1l
  4709  0C65  0086               	movlw 1	; select bank2/3
  4710  0C66  3001               	movwf fsr1h	
  4711  0C67  0087               	
  4712                           	moviw	[0]fsr1
  4713  0C68  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  4714  0C69  00EA               	moviw	[1]fsr1
  4715  0C6A  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  4716  0C6B  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  4717  0C6C  086A               	movwf	fsr0l
  4718  0C6D  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  4719  0C6E  086B               	movwf	fsr0h
  4720  0C6F  0085               	moviw	fsr0++
  4721  0C70  0012               xorlw	37
  4722  0C71  3A25               	btfss	status,2
  4723  0C72  1D03               	goto	u5851
  4724  0C73  2C75               	goto	u5850
  4725  0C74  2C76               u5851:
  4726  0C75                     	goto	l4236
  4727  0C75  2FD0               u5850:
  4728  0C76                     	line	681
  4729                           	
  4730                           l4130:	
  4731  0C76                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 681:       
                                   ++*fmt;
  4732                           	movf	(vfpfcnvrt@fmt)^080h,w
  4733  0C76  0868               	movwf	fsr1l
  4734  0C77  0086               	movlw 1	; select bank2/3
  4735  0C78  3001               	movwf fsr1h	
  4736  0C79  0087               	
  4737                           	movlw	01h
  4738  0C7A  3001               	addwf	indf1,f
  4739  0C7B  0781               	addfsr	fsr1,1
  4740  0C7C  3141               	skipnc
  4741  0C7D  1803               	incf	indf1,f
  4742  0C7E  0A81               	line	683
  4743                           	
  4744                           l4132:	
  4745  0C7F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 683:       
                                   flags = width = 0;
  4746                           	movlb 2	; select bank2
  4747  0C7F  0142               	clrf	(_width)^0100h
  4748  0C80  01E4               	clrf	(_width+1)^0100h
  4749  0C81  01E5               	clrf	(_flags)^0100h
  4750  0C82  01E8               	clrf	(_flags+1)^0100h
  4751  0C83  01E9               	line	684
  4752                           	
  4753                           l4134:	
  4754  0C84                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 684:       
                                   prec = -1;
  4755                           	movlw	0FFh
  4756  0C84  30FF               	movwf	(_prec)^0100h
  4757  0C85  00E6               	movlw	0FFh
  4758  0C86  30FF               	movwf	((_prec)^0100h)+1
  4759  0C87  00E7               	line	723
  4760                           	
  4761                           l4136:	
  4762  0C88                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 723:       
                                   if ((*fmt)[0] == '*') {
  4763                           	movlb 1	; select bank1
  4764  0C88  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  4765  0C89  0868               	movwf	fsr1l
  4766  0C8A  0086               	movlw 1	; select bank2/3
  4767  0C8B  3001               	movwf fsr1h	
  4768  0C8C  0087               	
  4769                           	moviw	[0]fsr1
  4770  0C8D  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  4771  0C8E  00EA               	moviw	[1]fsr1
  4772  0C8F  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  4773  0C90  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  4774  0C91  086A               	movwf	fsr0l
  4775  0C92  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  4776  0C93  086B               	movwf	fsr0h
  4777  0C94  0085               	moviw	fsr0++
  4778  0C95  0012               xorlw	42
  4779  0C96  3A2A               	btfss	status,2
  4780  0C97  1D03               	goto	u5861
  4781  0C98  2C9A               	goto	u5860
  4782  0C99  2C9B               u5861:
  4783  0C9A                     	goto	l4148
  4784  0C9A  2CBF               u5860:
  4785  0C9B                     	line	724
  4786                           	
  4787                           l4138:	
  4788  0C9B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 724:       
                                       ++*fmt;
  4789                           	movf	(vfpfcnvrt@fmt)^080h,w
  4790  0C9B  0868               	movwf	fsr1l
  4791  0C9C  0086               	movlw 1	; select bank2/3
  4792  0C9D  3001               	movwf fsr1h	
  4793  0C9E  0087               	
  4794                           	movlw	01h
  4795  0C9F  3001               	addwf	indf1,f
  4796  0CA0  0781               	addfsr	fsr1,1
  4797  0CA1  3141               	skipnc
  4798  0CA2  1803               	incf	indf1,f
  4799  0CA3  0A81               	line	725
  4800                           	
  4801                           l4140:	
  4802  0CA4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 725:       
                                       width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4803                           	movf	(vfpfcnvrt@ap)^080h,w
  4804  0CA4  0869               	movwf	fsr1l
  4805  0CA5  0086               	movlw 1	; select bank2/3
  4806  0CA6  3001               	movwf fsr1h	
  4807  0CA7  0087               	
  4808                           	movf	indf1,w
  4809  0CA8  0801               	movwf	fsr0l
  4810  0CA9  0084               	movlw 1	; select bank2/3
  4811  0CAA  3001               	movwf fsr0h	
  4812  0CAB  0085               	
  4813                           	movlw	02h
  4814  0CAC  3002               	addwf	indf1,f
  4815  0CAD  0781               	moviw	[0]fsr0
  4816  0CAE  3F00               	movlb 2	; select bank2
  4817  0CAF  0142               	movwf	(_width)^0100h
  4818  0CB0  00E4               	moviw	[1]fsr0
  4819  0CB1  3F01               	movwf	(_width+1)^0100h
  4820  0CB2  00E5               	line	726
  4821                           	
  4822                           l4142:	
  4823  0CB3                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 726:       
                                       if (width < 0) {
  4824                           	btfss	(_width+1)^0100h,7
  4825  0CB3  1FE5               	goto	u5871
  4826  0CB4  2CB6               	goto	u5870
  4827  0CB5  2CB7               u5871:
  4828  0CB6                     	goto	l4158
  4829  0CB6  2D34               u5870:
  4830  0CB7                     	line	727
  4831                           	
  4832                           l4144:	
  4833  0CB7                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 727:       
                                           flags |= (1 << 0);
  4834                           	bsf	(_flags)^0100h+(0/8),(0)&7
  4835  0CB7  1468               	line	728
  4836                           	
  4837                           l4146:	
  4838  0CB8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 728:       
                                           width = -width;
  4839                           	comf	(_width)^0100h,f
  4840  0CB8  09E4               	comf	(_width+1)^0100h,f
  4841  0CB9  09E5               	incf	(_width)^0100h,f
  4842  0CBA  0AE4               	skipnz
  4843  0CBB  1903               	incf	(_width+1)^0100h,f
  4844  0CBC  0AE5               	goto	l4158
  4845  0CBD  2D34               	line	729
  4846                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 729:       
                                       }
  4847                           	
  4848                           l478:	
  4849  0CBE                     	line	730
  4850                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 730:       
                                   } else {
  4851                           	goto	l4158
  4852  0CBE  2D34               	
  4853                           l477:	
  4854  0CBF                     	line	731
  4855                           	
  4856                           l4148:	
  4857  0CBF                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 731:       
                                       width = atoi(*fmt);
  4858                           	movlb 1	; select bank1
  4859  0CBF  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  4860  0CC0  0868               	movwf	fsr1l
  4861  0CC1  0086               	movlw 1	; select bank2/3
  4862  0CC2  3001               	movwf fsr1h	
  4863  0CC3  0087               	
  4864                           	moviw	[0]fsr1
  4865  0CC4  3F40               	movlb 0	; select bank0
  4866  0CC5  0140               	movwf	(atoi@s)
  4867  0CC6  00A6               	moviw	[1]fsr1
  4868  0CC7  3F41               	movwf	(atoi@s+1)
  4869  0CC8  00A7               	fcall	_atoi
  4870  0CC9  3192  224D  318C   	movlb 0	; select bank0
  4871  0CCC  0140               	movf	(1+(?_atoi)),w
  4872  0CCD  0827               	movlb 2	; select bank2
  4873  0CCE  0142               	movwf	(_width+1)^0100h
  4874  0CCF  00E5               	movlb 0	; select bank0
  4875  0CD0  0140               	movf	(0+(?_atoi)),w
  4876  0CD1  0826               	movlb 2	; select bank2
  4877  0CD2  0142               	movwf	(_width)^0100h
  4878  0CD3  00E4               	line	732
  4879                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 732:       
                                       while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4880                           	goto	l4152
  4881  0CD4  2CE0               	
  4882                           l481:	
  4883  0CD5                     	line	733
  4884                           	
  4885                           l4150:	
  4886  0CD5                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 733:       
                                           ++*fmt;
  4887                           	movlb 1	; select bank1
  4888  0CD5  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  4889  0CD6  0868               	movwf	fsr1l
  4890  0CD7  0086               	movlw 1	; select bank2/3
  4891  0CD8  3001               	movwf fsr1h	
  4892  0CD9  0087               	
  4893                           	movlw	01h
  4894  0CDA  3001               	addwf	indf1,f
  4895  0CDB  0781               	addfsr	fsr1,1
  4896  0CDC  3141               	skipnc
  4897  0CDD  1803               	incf	indf1,f
  4898  0CDE  0A81               	goto	l4152
  4899  0CDF  2CE0               	line	734
  4900                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 732:       
                                       while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4901                           	
  4902                           l480:	
  4903  0CE0                     	line	732
  4904                           	
  4905                           l4152:	
  4906  0CE0                     	movlb 1	; select bank1
  4907  0CE0  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  4908  0CE1  0868               	movwf	fsr1l
  4909  0CE2  0086               	movlw 1	; select bank2/3
  4910  0CE3  3001               	movwf fsr1h	
  4911  0CE4  0087               	
  4912                           	moviw	[0]fsr1
  4913  0CE5  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  4914  0CE6  00EA               	moviw	[1]fsr1
  4915  0CE7  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  4916  0CE8  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  4917  0CE9  086A               	movwf	fsr0l
  4918  0CEA  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  4919  0CEB  086B               	movwf	fsr0h
  4920  0CEC  0085               	movf	indf0,w ;code access
  4921  0CED  0800               	addlw	low(0FFD0h)
  4922  0CEE  3ED0               	movwf	(??_vfpfcnvrt+2)^080h+0
  4923  0CEF  00EC               	movlw	high(0FFD0h)
  4924  0CF0  30FF               	skipnc
  4925  0CF1  1803               	movlw	(high(0FFD0h)+1)&0ffh
  4926  0CF2  3000               	movwf	((??_vfpfcnvrt+2)^080h+0)+1
  4927  0CF3  00ED               	movlw	0
  4928  0CF4  3000               	subwf	1+(??_vfpfcnvrt+2)^080h+0,w
  4929  0CF5  026D               	movlw	0Ah
  4930  0CF6  300A               	skipnz
  4931  0CF7  1903               	subwf	0+(??_vfpfcnvrt+2)^080h+0,w
  4932  0CF8  026C               	skipc
  4933  0CF9  1C03               	goto	u5881
  4934  0CFA  2CFC               	goto	u5880
  4935  0CFB  2CFE               u5881:
  4936  0CFC                     	movlw	1
  4937  0CFC  3001               	goto	u5890
  4938  0CFD  2CFF               u5880:
  4939  0CFE                     	movlw	0
  4940  0CFE  3000               u5890:
  4941  0CFF                     	movwf	(??_vfpfcnvrt+4)^080h+0
  4942  0CFF  00EE               	clrf	(??_vfpfcnvrt+4)^080h+0+1
  4943  0D00  01EF               	movf	0+(??_vfpfcnvrt+4)^080h+0,w
  4944  0D01  086E               	movlb 2	; select bank2
  4945  0D02  0142               	movwf	(_vfpfcnvrt$860)^0100h
  4946  0D03  00A0               	movlb 1	; select bank1
  4947  0D04  0141               	movf	1+(??_vfpfcnvrt+4)^080h+0,w
  4948  0D05  086F               	movlb 2	; select bank2
  4949  0D06  0142               	movwf	(_vfpfcnvrt$860+1)^0100h
  4950  0D07  00A1               	goto	l4156
  4951  0D08  2D2C               	
  4952                           l483:	
  4953  0D09                     	
  4954                           l4154:	
  4955  0D09                     	movlb 1	; select bank1
  4956  0D09  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  4957  0D0A  0868               	movwf	fsr1l
  4958  0D0B  0086               	movlw 1	; select bank2/3
  4959  0D0C  3001               	movwf fsr1h	
  4960  0D0D  0087               	
  4961                           	moviw	[0]fsr1
  4962  0D0E  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  4963  0D0F  00EA               	moviw	[1]fsr1
  4964  0D10  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  4965  0D11  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  4966  0D12  086A               	movwf	fsr0l
  4967  0D13  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  4968  0D14  086B               	movwf	fsr0h
  4969  0D15  0085               	movf	indf0,w ;code access
  4970  0D16  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  4971  0D17  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  4972  0D18  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  4973  0D19  086C               	movlb 0	; select bank0
  4974  0D1A  0140               	movwf	(isdigit@c)
  4975  0D1B  00A0               	movlb 1	; select bank1
  4976  0D1C  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  4977  0D1D  086D               	movlb 0	; select bank0
  4978  0D1E  0140               	movwf	(isdigit@c+1)
  4979  0D1F  00A1               	fcall	_isdigit
  4980  0D20  31A7  271C  318C   	movlb 0	; select bank0
  4981  0D23  0140               	movf	(1+(?_isdigit)),w
  4982  0D24  0821               	movlb 2	; select bank2
  4983  0D25  0142               	movwf	(_vfpfcnvrt$860+1)^0100h
  4984  0D26  00A1               	movlb 0	; select bank0
  4985  0D27  0140               	movf	(0+(?_isdigit)),w
  4986  0D28  0820               	movlb 2	; select bank2
  4987  0D29  0142               	movwf	(_vfpfcnvrt$860)^0100h
  4988  0D2A  00A0               	goto	l4156
  4989  0D2B  2D2C               	
  4990                           l485:	
  4991  0D2C                     	
  4992                           l4156:	
  4993  0D2C                     	movf	((_vfpfcnvrt$860)^0100h),w
  4994  0D2C  0820               iorwf	((_vfpfcnvrt$860+1)^0100h),w
  4995  0D2D  0421               	btfss	status,2
  4996  0D2E  1D03               	goto	u5901
  4997  0D2F  2D31               	goto	u5900
  4998  0D30  2D32               u5901:
  4999  0D31                     	goto	l4150
  5000  0D31  2CD5               u5900:
  5001  0D32                     	goto	l4158
  5002  0D32  2D34               	
  5003                           l486:	
  5004  0D33                     	goto	l4158
  5005  0D33  2D34               	line	735
  5006                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 735:       
                                   }
  5007                           	
  5008                           l479:	
  5009  0D34                     	line	740
  5010                           	
  5011                           l4158:	
  5012  0D34                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 740:       
                                   if ((*fmt)[0] == '.') {
  5013                           	movlb 1	; select bank1
  5014  0D34  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5015  0D35  0868               	movwf	fsr1l
  5016  0D36  0086               	movlw 1	; select bank2/3
  5017  0D37  3001               	movwf fsr1h	
  5018  0D38  0087               	
  5019                           	moviw	[0]fsr1
  5020  0D39  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5021  0D3A  00EA               	moviw	[1]fsr1
  5022  0D3B  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5023  0D3C  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5024  0D3D  086A               	movwf	fsr0l
  5025  0D3E  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5026  0D3F  086B               	movwf	fsr0h
  5027  0D40  0085               	moviw	fsr0++
  5028  0D41  0012               xorlw	46
  5029  0D42  3A2E               	btfss	status,2
  5030  0D43  1D03               	goto	u5911
  5031  0D44  2D46               	goto	u5910
  5032  0D45  2D47               u5911:
  5033  0D46                     	goto	l4180
  5034  0D46  2DF5               u5910:
  5035  0D47                     	line	741
  5036                           	
  5037                           l4160:	
  5038  0D47                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 741:       
                                       prec = 0;
  5039                           	movlb 2	; select bank2
  5040  0D47  0142               	clrf	(_prec)^0100h
  5041  0D48  01E6               	clrf	(_prec+1)^0100h
  5042  0D49  01E7               	line	742
  5043                           	
  5044                           l4162:	
  5045  0D4A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 742:       
                                       ++*fmt;
  5046                           	movlb 1	; select bank1
  5047  0D4A  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5048  0D4B  0868               	movwf	fsr1l
  5049  0D4C  0086               	movlw 1	; select bank2/3
  5050  0D4D  3001               	movwf fsr1h	
  5051  0D4E  0087               	
  5052                           	movlw	01h
  5053  0D4F  3001               	addwf	indf1,f
  5054  0D50  0781               	addfsr	fsr1,1
  5055  0D51  3141               	skipnc
  5056  0D52  1803               	incf	indf1,f
  5057  0D53  0A81               	line	743
  5058                           	
  5059                           l4164:	
  5060  0D54                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 743:       
                                       if ((*fmt)[0] == '*') {
  5061                           	movf	(vfpfcnvrt@fmt)^080h,w
  5062  0D54  0868               	movwf	fsr1l
  5063  0D55  0086               	movlw 1	; select bank2/3
  5064  0D56  3001               	movwf fsr1h	
  5065  0D57  0087               	
  5066                           	moviw	[0]fsr1
  5067  0D58  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5068  0D59  00EA               	moviw	[1]fsr1
  5069  0D5A  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5070  0D5B  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5071  0D5C  086A               	movwf	fsr0l
  5072  0D5D  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5073  0D5E  086B               	movwf	fsr0h
  5074  0D5F  0085               	moviw	fsr0++
  5075  0D60  0012               xorlw	42
  5076  0D61  3A2A               	btfss	status,2
  5077  0D62  1D03               	goto	u5921
  5078  0D63  2D65               	goto	u5920
  5079  0D64  2D66               u5921:
  5080  0D65                     	goto	l4170
  5081  0D65  2D7F               u5920:
  5082  0D66                     	line	744
  5083                           	
  5084                           l4166:	
  5085  0D66                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 744:       
                                           ++*fmt;
  5086                           	movf	(vfpfcnvrt@fmt)^080h,w
  5087  0D66  0868               	movwf	fsr1l
  5088  0D67  0086               	movlw 1	; select bank2/3
  5089  0D68  3001               	movwf fsr1h	
  5090  0D69  0087               	
  5091                           	movlw	01h
  5092  0D6A  3001               	addwf	indf1,f
  5093  0D6B  0781               	addfsr	fsr1,1
  5094  0D6C  3141               	skipnc
  5095  0D6D  1803               	incf	indf1,f
  5096  0D6E  0A81               	line	745
  5097                           	
  5098                           l4168:	
  5099  0D6F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 745:       
                                           prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  5100                           	movf	(vfpfcnvrt@ap)^080h,w
  5101  0D6F  0869               	movwf	fsr1l
  5102  0D70  0086               	movlw 1	; select bank2/3
  5103  0D71  3001               	movwf fsr1h	
  5104  0D72  0087               	
  5105                           	movf	indf1,w
  5106  0D73  0801               	movwf	fsr0l
  5107  0D74  0084               	movlw 1	; select bank2/3
  5108  0D75  3001               	movwf fsr0h	
  5109  0D76  0085               	
  5110                           	movlw	02h
  5111  0D77  3002               	addwf	indf1,f
  5112  0D78  0781               	moviw	[0]fsr0
  5113  0D79  3F00               	movlb 2	; select bank2
  5114  0D7A  0142               	movwf	(_prec)^0100h
  5115  0D7B  00E6               	moviw	[1]fsr0
  5116  0D7C  3F01               	movwf	(_prec+1)^0100h
  5117  0D7D  00E7               	line	746
  5118                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 746:       
                                       } else {
  5119                           	goto	l4180
  5120  0D7E  2DF5               	
  5121                           l488:	
  5122  0D7F                     	line	747
  5123                           	
  5124                           l4170:	
  5125  0D7F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 747:       
                                           prec = atoi(*fmt);
  5126                           	movlb 1	; select bank1
  5127  0D7F  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5128  0D80  0868               	movwf	fsr1l
  5129  0D81  0086               	movlw 1	; select bank2/3
  5130  0D82  3001               	movwf fsr1h	
  5131  0D83  0087               	
  5132                           	moviw	[0]fsr1
  5133  0D84  3F40               	movlb 0	; select bank0
  5134  0D85  0140               	movwf	(atoi@s)
  5135  0D86  00A6               	moviw	[1]fsr1
  5136  0D87  3F41               	movwf	(atoi@s+1)
  5137  0D88  00A7               	fcall	_atoi
  5138  0D89  3192  224D  318C   	movlb 0	; select bank0
  5139  0D8C  0140               	movf	(1+(?_atoi)),w
  5140  0D8D  0827               	movlb 2	; select bank2
  5141  0D8E  0142               	movwf	(_prec+1)^0100h
  5142  0D8F  00E7               	movlb 0	; select bank0
  5143  0D90  0140               	movf	(0+(?_atoi)),w
  5144  0D91  0826               	movlb 2	; select bank2
  5145  0D92  0142               	movwf	(_prec)^0100h
  5146  0D93  00E6               	line	748
  5147                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 748:       
                                           while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5148                           	goto	l4174
  5149  0D94  2DA0               	
  5150                           l491:	
  5151  0D95                     	line	749
  5152                           	
  5153                           l4172:	
  5154  0D95                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 749:       
                                               ++*fmt;
  5155                           	movlb 1	; select bank1
  5156  0D95  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5157  0D96  0868               	movwf	fsr1l
  5158  0D97  0086               	movlw 1	; select bank2/3
  5159  0D98  3001               	movwf fsr1h	
  5160  0D99  0087               	
  5161                           	movlw	01h
  5162  0D9A  3001               	addwf	indf1,f
  5163  0D9B  0781               	addfsr	fsr1,1
  5164  0D9C  3141               	skipnc
  5165  0D9D  1803               	incf	indf1,f
  5166  0D9E  0A81               	goto	l4174
  5167  0D9F  2DA0               	line	750
  5168                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 748:       
                                           while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5169                           	
  5170                           l490:	
  5171  0DA0                     	line	748
  5172                           	
  5173                           l4174:	
  5174  0DA0                     	movlb 1	; select bank1
  5175  0DA0  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5176  0DA1  0868               	movwf	fsr1l
  5177  0DA2  0086               	movlw 1	; select bank2/3
  5178  0DA3  3001               	movwf fsr1h	
  5179  0DA4  0087               	
  5180                           	moviw	[0]fsr1
  5181  0DA5  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5182  0DA6  00EA               	moviw	[1]fsr1
  5183  0DA7  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5184  0DA8  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5185  0DA9  086A               	movwf	fsr0l
  5186  0DAA  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5187  0DAB  086B               	movwf	fsr0h
  5188  0DAC  0085               	movf	indf0,w ;code access
  5189  0DAD  0800               	addlw	low(0FFD0h)
  5190  0DAE  3ED0               	movwf	(??_vfpfcnvrt+2)^080h+0
  5191  0DAF  00EC               	movlw	high(0FFD0h)
  5192  0DB0  30FF               	skipnc
  5193  0DB1  1803               	movlw	(high(0FFD0h)+1)&0ffh
  5194  0DB2  3000               	movwf	((??_vfpfcnvrt+2)^080h+0)+1
  5195  0DB3  00ED               	movlw	0
  5196  0DB4  3000               	subwf	1+(??_vfpfcnvrt+2)^080h+0,w
  5197  0DB5  026D               	movlw	0Ah
  5198  0DB6  300A               	skipnz
  5199  0DB7  1903               	subwf	0+(??_vfpfcnvrt+2)^080h+0,w
  5200  0DB8  026C               	skipc
  5201  0DB9  1C03               	goto	u5931
  5202  0DBA  2DBC               	goto	u5930
  5203  0DBB  2DBE               u5931:
  5204  0DBC                     	movlw	1
  5205  0DBC  3001               	goto	u5940
  5206  0DBD  2DBF               u5930:
  5207  0DBE                     	movlw	0
  5208  0DBE  3000               u5940:
  5209  0DBF                     	movwf	(??_vfpfcnvrt+4)^080h+0
  5210  0DBF  00EE               	clrf	(??_vfpfcnvrt+4)^080h+0+1
  5211  0DC0  01EF               	movf	0+(??_vfpfcnvrt+4)^080h+0,w
  5212  0DC1  086E               	movlb 2	; select bank2
  5213  0DC2  0142               	movwf	(_vfpfcnvrt$861)^0100h
  5214  0DC3  00A2               	movlb 1	; select bank1
  5215  0DC4  0141               	movf	1+(??_vfpfcnvrt+4)^080h+0,w
  5216  0DC5  086F               	movlb 2	; select bank2
  5217  0DC6  0142               	movwf	(_vfpfcnvrt$861+1)^0100h
  5218  0DC7  00A3               	goto	l4178
  5219  0DC8  2DEC               	
  5220                           l493:	
  5221  0DC9                     	
  5222                           l4176:	
  5223  0DC9                     	movlb 1	; select bank1
  5224  0DC9  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5225  0DCA  0868               	movwf	fsr1l
  5226  0DCB  0086               	movlw 1	; select bank2/3
  5227  0DCC  3001               	movwf fsr1h	
  5228  0DCD  0087               	
  5229                           	moviw	[0]fsr1
  5230  0DCE  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5231  0DCF  00EA               	moviw	[1]fsr1
  5232  0DD0  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5233  0DD1  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5234  0DD2  086A               	movwf	fsr0l
  5235  0DD3  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5236  0DD4  086B               	movwf	fsr0h
  5237  0DD5  0085               	movf	indf0,w ;code access
  5238  0DD6  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  5239  0DD7  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  5240  0DD8  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  5241  0DD9  086C               	movlb 0	; select bank0
  5242  0DDA  0140               	movwf	(isdigit@c)
  5243  0DDB  00A0               	movlb 1	; select bank1
  5244  0DDC  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  5245  0DDD  086D               	movlb 0	; select bank0
  5246  0DDE  0140               	movwf	(isdigit@c+1)
  5247  0DDF  00A1               	fcall	_isdigit
  5248  0DE0  31A7  271C  318C   	movlb 0	; select bank0
  5249  0DE3  0140               	movf	(1+(?_isdigit)),w
  5250  0DE4  0821               	movlb 2	; select bank2
  5251  0DE5  0142               	movwf	(_vfpfcnvrt$861+1)^0100h
  5252  0DE6  00A3               	movlb 0	; select bank0
  5253  0DE7  0140               	movf	(0+(?_isdigit)),w
  5254  0DE8  0820               	movlb 2	; select bank2
  5255  0DE9  0142               	movwf	(_vfpfcnvrt$861)^0100h
  5256  0DEA  00A2               	goto	l4178
  5257  0DEB  2DEC               	
  5258                           l495:	
  5259  0DEC                     	
  5260                           l4178:	
  5261  0DEC                     	movf	((_vfpfcnvrt$861)^0100h),w
  5262  0DEC  0822               iorwf	((_vfpfcnvrt$861+1)^0100h),w
  5263  0DED  0423               	btfss	status,2
  5264  0DEE  1D03               	goto	u5951
  5265  0DEF  2DF1               	goto	u5950
  5266  0DF0  2DF2               u5951:
  5267  0DF1                     	goto	l4172
  5268  0DF1  2D95               u5950:
  5269  0DF2                     	goto	l4180
  5270  0DF2  2DF5               	
  5271                           l496:	
  5272  0DF3                     	goto	l4180
  5273  0DF3  2DF5               	line	751
  5274                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 751:       
                                       }
  5275                           	
  5276                           l489:	
  5277  0DF4                     	goto	l4180
  5278  0DF4  2DF5               	line	752
  5279                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 752:       
                                   }
  5280                           	
  5281                           l487:	
  5282  0DF5                     	line	757
  5283                           	
  5284                           l4180:	
  5285  0DF5                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 757:       
                                   ct[0] = tolower((int)(*fmt)[0]);
  5286                           	movlb 1	; select bank1
  5287  0DF5  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5288  0DF6  0868               	movwf	fsr1l
  5289  0DF7  0086               	movlw 1	; select bank2/3
  5290  0DF8  3001               	movwf fsr1h	
  5291  0DF9  0087               	
  5292                           	moviw	[0]fsr1
  5293  0DFA  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5294  0DFB  00EA               	moviw	[1]fsr1
  5295  0DFC  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5296  0DFD  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5297  0DFE  086A               	movwf	fsr0l
  5298  0DFF  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5299  0E00  086B               	movwf	fsr0h
  5300  0E01  0085               	movf	indf0,w ;code access
  5301  0E02  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  5302  0E03  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  5303  0E04  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  5304  0E05  086C               	movlb 0	; select bank0
  5305  0E06  0140               	movwf	(tolower@c)
  5306  0E07  00A6               	movlb 1	; select bank1
  5307  0E08  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  5308  0E09  086D               	movlb 0	; select bank0
  5309  0E0A  0140               	movwf	(tolower@c+1)
  5310  0E0B  00A7               	fcall	_tolower
  5311  0E0C  3198  20F3  318C   	movlb 0	; select bank0
  5312  0E0F  0140               	movf	(0+(?_tolower)),w
  5313  0E10  0826               	movlb 1	; select bank1
  5314  0E11  0141               	movwf	(??_vfpfcnvrt+4)^080h+0
  5315  0E12  00EE               	movf	(??_vfpfcnvrt+4)^080h+0,w
  5316  0E13  086E               	movlb 2	; select bank2
  5317  0E14  0142               	movwf	(vfpfcnvrt@ct)^0100h
  5318  0E15  00AA               	line	758
  5319                           	
  5320                           l4182:	
  5321  0E16                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 758:       
                                   if (ct[0]) {
  5322                           	movf	((vfpfcnvrt@ct)^0100h),w
  5323  0E16  082A               	btfsc	status,2
  5324  0E17  1903               	goto	u5961
  5325  0E18  2E1A               	goto	u5960
  5326  0E19  2E1B               u5961:
  5327  0E1A                     	goto	l4190
  5328  0E1A  2E6A               u5960:
  5329  0E1B                     	line	759
  5330                           	
  5331                           l4184:	
  5332  0E1B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 759:       
                                       ct[1] = tolower((int)(*fmt)[1]);
  5333                           	movlb 1	; select bank1
  5334  0E1B  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5335  0E1C  0868               	movwf	fsr1l
  5336  0E1D  0086               	movlw 1	; select bank2/3
  5337  0E1E  3001               	movwf fsr1h	
  5338  0E1F  0087               	
  5339                           	moviw	[0]fsr1
  5340  0E20  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5341  0E21  00EA               	moviw	[1]fsr1
  5342  0E22  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5343  0E23  00EB               	movlw	01h
  5344  0E24  3001               	addwf	(??_vfpfcnvrt+0)^080h+0,w
  5345  0E25  076A               	movwf	fsr0l
  5346  0E26  0084               	movf	(??_vfpfcnvrt+0)^080h+1,w
  5347  0E27  086B               	skipnc
  5348  0E28  1803               	incf	(??_vfpfcnvrt+0)^080h+1,w
  5349  0E29  0A6B               	movwf	fsr0h
  5350  0E2A  0085               
  5351                           	movf	indf0,w ;code access
  5352  0E2B  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  5353  0E2C  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  5354  0E2D  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  5355  0E2E  086C               	movlb 0	; select bank0
  5356  0E2F  0140               	movwf	(tolower@c)
  5357  0E30  00A6               	movlb 1	; select bank1
  5358  0E31  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  5359  0E32  086D               	movlb 0	; select bank0
  5360  0E33  0140               	movwf	(tolower@c+1)
  5361  0E34  00A7               	fcall	_tolower
  5362  0E35  3198  20F3  318C   	movlb 0	; select bank0
  5363  0E38  0140               	movf	(0+(?_tolower)),w
  5364  0E39  0826               	movlb 1	; select bank1
  5365  0E3A  0141               	movwf	(??_vfpfcnvrt+4)^080h+0
  5366  0E3B  00EE               	movf	(??_vfpfcnvrt+4)^080h+0,w
  5367  0E3C  086E               	movlb 2	; select bank2
  5368  0E3D  0142               	movwf	0+(vfpfcnvrt@ct)^0100h+01h
  5369  0E3E  00AB               	line	760
  5370                           	
  5371                           l4186:	
  5372  0E3F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 760:       
                                       if (ct[1]) {
  5373                           	movf	(0+(vfpfcnvrt@ct)^0100h+01h),w
  5374  0E3F  082B               	btfsc	status,2
  5375  0E40  1903               	goto	u5971
  5376  0E41  2E43               	goto	u5970
  5377  0E42  2E44               u5971:
  5378  0E43                     	goto	l4190
  5379  0E43  2E6A               u5970:
  5380  0E44                     	line	761
  5381                           	
  5382                           l4188:	
  5383  0E44                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 761:       
                                           ct[2] = tolower((int)(*fmt)[2]);
  5384                           	movlb 1	; select bank1
  5385  0E44  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5386  0E45  0868               	movwf	fsr1l
  5387  0E46  0086               	movlw 1	; select bank2/3
  5388  0E47  3001               	movwf fsr1h	
  5389  0E48  0087               	
  5390                           	moviw	[0]fsr1
  5391  0E49  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5392  0E4A  00EA               	moviw	[1]fsr1
  5393  0E4B  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5394  0E4C  00EB               	movlw	02h
  5395  0E4D  3002               	addwf	(??_vfpfcnvrt+0)^080h+0,w
  5396  0E4E  076A               	movwf	fsr0l
  5397  0E4F  0084               	movf	(??_vfpfcnvrt+0)^080h+1,w
  5398  0E50  086B               	skipnc
  5399  0E51  1803               	incf	(??_vfpfcnvrt+0)^080h+1,w
  5400  0E52  0A6B               	movwf	fsr0h
  5401  0E53  0085               
  5402                           	movf	indf0,w ;code access
  5403  0E54  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  5404  0E55  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  5405  0E56  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  5406  0E57  086C               	movlb 0	; select bank0
  5407  0E58  0140               	movwf	(tolower@c)
  5408  0E59  00A6               	movlb 1	; select bank1
  5409  0E5A  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  5410  0E5B  086D               	movlb 0	; select bank0
  5411  0E5C  0140               	movwf	(tolower@c+1)
  5412  0E5D  00A7               	fcall	_tolower
  5413  0E5E  3198  20F3  318C   	movlb 0	; select bank0
  5414  0E61  0140               	movf	(0+(?_tolower)),w
  5415  0E62  0826               	movlb 1	; select bank1
  5416  0E63  0141               	movwf	(??_vfpfcnvrt+4)^080h+0
  5417  0E64  00EE               	movf	(??_vfpfcnvrt+4)^080h+0,w
  5418  0E65  086E               	movlb 2	; select bank2
  5419  0E66  0142               	movwf	0+(vfpfcnvrt@ct)^0100h+02h
  5420  0E67  00AC               	goto	l4190
  5421  0E68  2E6A               	line	762
  5422                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 762:       
                                       }
  5423                           	
  5424                           l498:	
  5425  0E69                     	goto	l4190
  5426  0E69  2E6A               	line	763
  5427                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 763:       
                                   }
  5428                           	
  5429                           l497:	
  5430  0E6A                     	line	920
  5431                           	
  5432                           l4190:	
  5433  0E6A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 920:       
                                   if (ct[0] == 'f') {
  5434                           		movlw	102
  5435  0E6A  3066               	xorwf	((vfpfcnvrt@ct)^0100h),w
  5436  0E6B  062A               	btfss	status,2
  5437  0E6C  1D03               	goto	u5981
  5438  0E6D  2E6F               	goto	u5980
  5439  0E6E  2E70               u5981:
  5440  0E6F                     	goto	l4202
  5441  0E6F  2EC0               u5980:
  5442  0E70                     	line	922
  5443                           	
  5444                           l4192:	
  5445  0E70                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 922:       
                                       c = (*fmt)[0];
  5446                           	movlb 1	; select bank1
  5447  0E70  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5448  0E71  0868               	movwf	fsr1l
  5449  0E72  0086               	movlw 1	; select bank2/3
  5450  0E73  3001               	movwf fsr1h	
  5451  0E74  0087               	
  5452                           	moviw	[0]fsr1
  5453  0E75  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5454  0E76  00EA               	moviw	[1]fsr1
  5455  0E77  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5456  0E78  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5457  0E79  086A               	movwf	fsr0l
  5458  0E7A  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5459  0E7B  086B               	movwf	fsr0h
  5460  0E7C  0085               	movf	indf0,w ;code access
  5461  0E7D  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  5462  0E7E  00EC               	movf	(??_vfpfcnvrt+2)^080h+0,w
  5463  0E7F  086C               	movlb 2	; select bank2
  5464  0E80  0142               	movwf	(vfpfcnvrt@c)^0100h
  5465  0E81  00AD               	line	923
  5466                           	
  5467                           l4194:	
  5468  0E82                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 923:       
                                       ++*fmt;
  5469                           	movlb 1	; select bank1
  5470  0E82  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5471  0E83  0868               	movwf	fsr1l
  5472  0E84  0086               	movlw 1	; select bank2/3
  5473  0E85  3001               	movwf fsr1h	
  5474  0E86  0087               	
  5475                           	movlw	01h
  5476  0E87  3001               	addwf	indf1,f
  5477  0E88  0781               	addfsr	fsr1,1
  5478  0E89  3141               	skipnc
  5479  0E8A  1803               	incf	indf1,f
  5480  0E8B  0A81               	line	924
  5481                           	
  5482                           l4196:	
  5483  0E8C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 924:       
                                       f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5484                           	movf	(vfpfcnvrt@ap)^080h,w
  5485  0E8C  0869               	movwf	fsr1l
  5486  0E8D  0086               	movlw 1	; select bank2/3
  5487  0E8E  3001               	movwf fsr1h	
  5488  0E8F  0087               	
  5489                           	movf	indf1,w
  5490  0E90  0801               	movwf	fsr0l
  5491  0E91  0084               	movlw 1	; select bank2/3
  5492  0E92  3001               	movwf fsr0h	
  5493  0E93  0085               	
  5494                           	movlw	04h
  5495  0E94  3004               	addwf	indf1,f
  5496  0E95  0781               	moviw	[0]fsr0
  5497  0E96  3F00               	movlb 2	; select bank2
  5498  0E97  0142               	movwf	(vfpfcnvrt@f)^0100h
  5499  0E98  00A6               	moviw	[1]fsr0
  5500  0E99  3F01               	movwf	(vfpfcnvrt@f+1)^0100h
  5501  0E9A  00A7               	moviw	[2]fsr0
  5502  0E9B  3F02               	movwf	(vfpfcnvrt@f+2)^0100h
  5503  0E9C  00A8               	moviw	[3]fsr0
  5504  0E9D  3F03               	movwf	(vfpfcnvrt@f+3)^0100h
  5505  0E9E  00A9               	line	926
  5506                           	
  5507                           l4198:	
  5508  0E9F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 926:       
                                       return efgtoa(fp, f, c);
  5509                           	movf	(vfpfcnvrt@f+3)^0100h,w
  5510  0E9F  0829               	movlb 1	; select bank1
  5511  0EA0  0141               	movwf	(efgtoa@f+3)^080h
  5512  0EA1  00AD               	movlb 2	; select bank2
  5513  0EA2  0142               	movf	(vfpfcnvrt@f+2)^0100h,w
  5514  0EA3  0828               	movlb 1	; select bank1
  5515  0EA4  0141               	movwf	(efgtoa@f+2)^080h
  5516  0EA5  00AC               	movlb 2	; select bank2
  5517  0EA6  0142               	movf	(vfpfcnvrt@f+1)^0100h,w
  5518  0EA7  0827               	movlb 1	; select bank1
  5519  0EA8  0141               	movwf	(efgtoa@f+1)^080h
  5520  0EA9  00AB               	movlb 2	; select bank2
  5521  0EAA  0142               	movf	(vfpfcnvrt@f)^0100h,w
  5522  0EAB  0826               	movlb 1	; select bank1
  5523  0EAC  0141               	movwf	(efgtoa@f)^080h
  5524  0EAD  00AA               
  5525                           	movlb 2	; select bank2
  5526  0EAE  0142               	movf	(vfpfcnvrt@c)^0100h,w
  5527  0EAF  082D               	movlb 1	; select bank1
  5528  0EB0  0141               	movwf	(??_vfpfcnvrt+0)^080h+0
  5529  0EB1  00EA               	movf	(??_vfpfcnvrt+0)^080h+0,w
  5530  0EB2  086A               	movwf	(efgtoa@c)^080h
  5531  0EB3  00AE               	movlb 2	; select bank2
  5532  0EB4  0142               	movf	(vfpfcnvrt@fp)^0100h,w
  5533  0EB5  082E               	fcall	_efgtoa
  5534  0EB6  3193  2334  318C   	movlb 1	; select bank1
  5535  0EB9  0141               	movf	(1+(?_efgtoa))^080h,w
  5536  0EBA  082B               	movwf	(?_vfpfcnvrt+1)^080h
  5537  0EBB  00E9               	movf	(0+(?_efgtoa))^080h,w
  5538  0EBC  082A               	movwf	(?_vfpfcnvrt)^080h
  5539  0EBD  00E8               	goto	l500
  5540  0EBE  2FFF               	
  5541                           l4200:	
  5542  0EBF                     	goto	l500
  5543  0EBF  2FFF               	line	927
  5544                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 927:       
                                   }
  5545                           	
  5546                           l499:	
  5547  0EC0                     	line	928
  5548                           	
  5549                           l4202:	
  5550  0EC0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 928:       
                                   if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  5551                           	movlw	low(((STR_14)|8000h))
  5552  0EC0  3010               	movlb 0	; select bank0
  5553  0EC1  0140               	movwf	(strncmp@_r)
  5554  0EC2  00A0               	movlw	high(((STR_14)|8000h))
  5555  0EC3  30A8               	movwf	((strncmp@_r))+1
  5556  0EC4  00A1               	movlw	02h
  5557  0EC5  3002               	movwf	(strncmp@n)
  5558  0EC6  00A2               	movlw	0
  5559  0EC7  3000               	movwf	((strncmp@n))+1
  5560  0EC8  00A3               	movlw	(low(vfpfcnvrt@ct|((0x1)<<8)))&0ffh
  5561  0EC9  302A               	fcall	_strncmp
  5562  0ECA  319C  24D9  318C   	movlb 0	; select bank0
  5563  0ECD  0140               	movf	((0+(?_strncmp))),w
  5564  0ECE  0820               iorwf	((1+(?_strncmp))),w
  5565  0ECF  0421               	btfss	status,2
  5566  0ED0  1D03               	goto	u5991
  5567  0ED1  2ED3               	goto	u5990
  5568  0ED2  2ED4               u5991:
  5569  0ED3                     	goto	l4220
  5570  0ED3  2F91               u5990:
  5571  0ED4                     	line	930
  5572                           	
  5573                           l4204:	
  5574  0ED4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 931:       
                                       if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  5575                           	movlb 1	; select bank1
  5576  0ED4  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5577  0ED5  0868               	movwf	fsr1l
  5578  0ED6  0086               	movlw 1	; select bank2/3
  5579  0ED7  3001               	movwf fsr1h	
  5580  0ED8  0087               	
  5581                           	moviw	[0]fsr1
  5582  0ED9  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5583  0EDA  00EA               	moviw	[1]fsr1
  5584  0EDB  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5585  0EDC  00EB               	movlw	01h
  5586  0EDD  3001               	addwf	(??_vfpfcnvrt+0)^080h+0,w
  5587  0EDE  076A               	movwf	fsr0l
  5588  0EDF  0084               	movf	(??_vfpfcnvrt+0)^080h+1,w
  5589  0EE0  086B               	skipnc
  5590  0EE1  1803               	incf	(??_vfpfcnvrt+0)^080h+1,w
  5591  0EE2  0A6B               	movwf	fsr0h
  5592  0EE3  0085               
  5593                           	movf	indf0,w ;code access
  5594  0EE4  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  5595  0EE5  00EC               	movf	(??_vfpfcnvrt+2)^080h+0,w
  5596  0EE6  086C               	movlb 2	; select bank2
  5597  0EE7  0142               	movwf	(vfpfcnvrt@c)^0100h
  5598  0EE8  00AD               	line	931
  5599                           	movlb 1	; select bank1
  5600  0EE9  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5601  0EEA  0868               	movwf	fsr1l
  5602  0EEB  0086               	movlw 1	; select bank2/3
  5603  0EEC  3001               	movwf fsr1h	
  5604  0EED  0087               	
  5605                           	moviw	[0]fsr1
  5606  0EEE  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5607  0EEF  00EA               	moviw	[1]fsr1
  5608  0EF0  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5609  0EF1  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5610  0EF2  086A               	movwf	fsr0l
  5611  0EF3  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5612  0EF4  086B               	movwf	fsr0h
  5613  0EF5  0085               	movf	indf0,w ;code access
  5614  0EF6  0800               	addlw	low(0FFBFh)
  5615  0EF7  3EBF               	movwf	(??_vfpfcnvrt+2)^080h+0
  5616  0EF8  00EC               	movlw	high(0FFBFh)
  5617  0EF9  30FF               	skipnc
  5618  0EFA  1803               	movlw	(high(0FFBFh)+1)&0ffh
  5619  0EFB  3000               	movwf	((??_vfpfcnvrt+2)^080h+0)+1
  5620  0EFC  00ED               	movlw	0
  5621  0EFD  3000               	subwf	1+(??_vfpfcnvrt+2)^080h+0,w
  5622  0EFE  026D               	movlw	01Ah
  5623  0EFF  301A               	skipnz
  5624  0F00  1903               	subwf	0+(??_vfpfcnvrt+2)^080h+0,w
  5625  0F01  026C               	skipc
  5626  0F02  1C03               	goto	u6001
  5627  0F03  2F05               	goto	u6000
  5628  0F04  2F07               u6001:
  5629  0F05                     	movlw	1
  5630  0F05  3001               	goto	u6010
  5631  0F06  2F08               u6000:
  5632  0F07                     	movlw	0
  5633  0F07  3000               u6010:
  5634  0F08                     	movwf	(??_vfpfcnvrt+4)^080h+0
  5635  0F08  00EE               	clrf	(??_vfpfcnvrt+4)^080h+0+1
  5636  0F09  01EF               	movf	0+(??_vfpfcnvrt+4)^080h+0,w
  5637  0F0A  086E               	movlb 2	; select bank2
  5638  0F0B  0142               	movwf	(_vfpfcnvrt$865)^0100h
  5639  0F0C  00A4               	movlb 1	; select bank1
  5640  0F0D  0141               	movf	1+(??_vfpfcnvrt+4)^080h+0,w
  5641  0F0E  086F               	movlb 2	; select bank2
  5642  0F0F  0142               	movwf	(_vfpfcnvrt$865+1)^0100h
  5643  0F10  00A5               	goto	l4208
  5644  0F11  2F35               	
  5645                           l504:	
  5646  0F12                     	
  5647                           l4206:	
  5648  0F12                     	movlb 1	; select bank1
  5649  0F12  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5650  0F13  0868               	movwf	fsr1l
  5651  0F14  0086               	movlw 1	; select bank2/3
  5652  0F15  3001               	movwf fsr1h	
  5653  0F16  0087               	
  5654                           	moviw	[0]fsr1
  5655  0F17  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5656  0F18  00EA               	moviw	[1]fsr1
  5657  0F19  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5658  0F1A  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5659  0F1B  086A               	movwf	fsr0l
  5660  0F1C  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5661  0F1D  086B               	movwf	fsr0h
  5662  0F1E  0085               	movf	indf0,w ;code access
  5663  0F1F  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  5664  0F20  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  5665  0F21  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  5666  0F22  086C               	movlb 0	; select bank0
  5667  0F23  0140               	movwf	(isupper@c)
  5668  0F24  00A0               	movlb 1	; select bank1
  5669  0F25  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  5670  0F26  086D               	movlb 0	; select bank0
  5671  0F27  0140               	movwf	(isupper@c+1)
  5672  0F28  00A1               	fcall	_isupper
  5673  0F29  31A7  2736  318C   	movlb 0	; select bank0
  5674  0F2C  0140               	movf	(1+(?_isupper)),w
  5675  0F2D  0821               	movlb 2	; select bank2
  5676  0F2E  0142               	movwf	(_vfpfcnvrt$865+1)^0100h
  5677  0F2F  00A5               	movlb 0	; select bank0
  5678  0F30  0140               	movf	(0+(?_isupper)),w
  5679  0F31  0820               	movlb 2	; select bank2
  5680  0F32  0142               	movwf	(_vfpfcnvrt$865)^0100h
  5681  0F33  00A4               	goto	l4208
  5682  0F34  2F35               	
  5683                           l506:	
  5684  0F35                     	
  5685                           l4208:	
  5686  0F35                     	movf	((_vfpfcnvrt$865)^0100h),w
  5687  0F35  0824               iorwf	((_vfpfcnvrt$865+1)^0100h),w
  5688  0F36  0425               	btfsc	status,2
  5689  0F37  1903               	goto	u6021
  5690  0F38  2F3A               	goto	u6020
  5691  0F39  2F3B               u6021:
  5692  0F3A                     	goto	l4212
  5693  0F3A  2F50               u6020:
  5694  0F3B                     	line	932
  5695                           	
  5696                           l4210:	
  5697  0F3B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 932:       
                                           f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5698                           	movlb 1	; select bank1
  5699  0F3B  0141               	movf	(vfpfcnvrt@ap)^080h,w
  5700  0F3C  0869               	movwf	fsr1l
  5701  0F3D  0086               	movlw 1	; select bank2/3
  5702  0F3E  3001               	movwf fsr1h	
  5703  0F3F  0087               	
  5704                           	movf	indf1,w
  5705  0F40  0801               	movwf	fsr0l
  5706  0F41  0084               	movlw 1	; select bank2/3
  5707  0F42  3001               	movwf fsr0h	
  5708  0F43  0085               	
  5709                           	movlw	04h
  5710  0F44  3004               	addwf	indf1,f
  5711  0F45  0781               	moviw	[0]fsr0
  5712  0F46  3F00               	movlb 2	; select bank2
  5713  0F47  0142               	movwf	(vfpfcnvrt@f)^0100h
  5714  0F48  00A6               	moviw	[1]fsr0
  5715  0F49  3F01               	movwf	(vfpfcnvrt@f+1)^0100h
  5716  0F4A  00A7               	moviw	[2]fsr0
  5717  0F4B  3F02               	movwf	(vfpfcnvrt@f+2)^0100h
  5718  0F4C  00A8               	moviw	[3]fsr0
  5719  0F4D  3F03               	movwf	(vfpfcnvrt@f+3)^0100h
  5720  0F4E  00A9               	line	933
  5721                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 933:       
                                       } else {
  5722                           	goto	l4214
  5723  0F4F  2F65               	
  5724                           l502:	
  5725  0F50                     	line	934
  5726                           	
  5727                           l4212:	
  5728  0F50                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 934:       
                                           f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5729                           	movlb 1	; select bank1
  5730  0F50  0141               	movf	(vfpfcnvrt@ap)^080h,w
  5731  0F51  0869               	movwf	fsr1l
  5732  0F52  0086               	movlw 1	; select bank2/3
  5733  0F53  3001               	movwf fsr1h	
  5734  0F54  0087               	
  5735                           	movf	indf1,w
  5736  0F55  0801               	movwf	fsr0l
  5737  0F56  0084               	movlw 1	; select bank2/3
  5738  0F57  3001               	movwf fsr0h	
  5739  0F58  0085               	
  5740                           	movlw	04h
  5741  0F59  3004               	addwf	indf1,f
  5742  0F5A  0781               	moviw	[0]fsr0
  5743  0F5B  3F00               	movlb 2	; select bank2
  5744  0F5C  0142               	movwf	(vfpfcnvrt@f)^0100h
  5745  0F5D  00A6               	moviw	[1]fsr0
  5746  0F5E  3F01               	movwf	(vfpfcnvrt@f+1)^0100h
  5747  0F5F  00A7               	moviw	[2]fsr0
  5748  0F60  3F02               	movwf	(vfpfcnvrt@f+2)^0100h
  5749  0F61  00A8               	moviw	[3]fsr0
  5750  0F62  3F03               	movwf	(vfpfcnvrt@f+3)^0100h
  5751  0F63  00A9               	goto	l4214
  5752  0F64  2F65               	line	935
  5753                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 935:       
                                       }
  5754                           	
  5755                           l507:	
  5756  0F65                     	line	936
  5757                           	
  5758                           l4214:	
  5759  0F65                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 936:       
                                       *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  5760                           	movlb 1	; select bank1
  5761  0F65  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5762  0F66  0868               	movwf	fsr1l
  5763  0F67  0086               	movlw 1	; select bank2/3
  5764  0F68  3001               	movwf fsr1h	
  5765  0F69  0087               	
  5766                           	movlw	02h
  5767  0F6A  3002               	addwf	indf1,f
  5768  0F6B  0781               	addfsr	fsr1,1
  5769  0F6C  3141               	skipnc
  5770  0F6D  1803               	incf	indf1,f
  5771  0F6E  0A81               	line	938
  5772                           	
  5773                           l4216:	
  5774  0F6F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 938:       
                                       return efgtoa(fp, f, c);
  5775                           	movlb 2	; select bank2
  5776  0F6F  0142               	movf	(vfpfcnvrt@f+3)^0100h,w
  5777  0F70  0829               	movlb 1	; select bank1
  5778  0F71  0141               	movwf	(efgtoa@f+3)^080h
  5779  0F72  00AD               	movlb 2	; select bank2
  5780  0F73  0142               	movf	(vfpfcnvrt@f+2)^0100h,w
  5781  0F74  0828               	movlb 1	; select bank1
  5782  0F75  0141               	movwf	(efgtoa@f+2)^080h
  5783  0F76  00AC               	movlb 2	; select bank2
  5784  0F77  0142               	movf	(vfpfcnvrt@f+1)^0100h,w
  5785  0F78  0827               	movlb 1	; select bank1
  5786  0F79  0141               	movwf	(efgtoa@f+1)^080h
  5787  0F7A  00AB               	movlb 2	; select bank2
  5788  0F7B  0142               	movf	(vfpfcnvrt@f)^0100h,w
  5789  0F7C  0826               	movlb 1	; select bank1
  5790  0F7D  0141               	movwf	(efgtoa@f)^080h
  5791  0F7E  00AA               
  5792                           	movlb 2	; select bank2
  5793  0F7F  0142               	movf	(vfpfcnvrt@c)^0100h,w
  5794  0F80  082D               	movlb 1	; select bank1
  5795  0F81  0141               	movwf	(??_vfpfcnvrt+0)^080h+0
  5796  0F82  00EA               	movf	(??_vfpfcnvrt+0)^080h+0,w
  5797  0F83  086A               	movwf	(efgtoa@c)^080h
  5798  0F84  00AE               	movlb 2	; select bank2
  5799  0F85  0142               	movf	(vfpfcnvrt@fp)^0100h,w
  5800  0F86  082E               	fcall	_efgtoa
  5801  0F87  3193  2334  318C   	movlb 1	; select bank1
  5802  0F8A  0141               	movf	(1+(?_efgtoa))^080h,w
  5803  0F8B  082B               	movwf	(?_vfpfcnvrt+1)^080h
  5804  0F8C  00E9               	movf	(0+(?_efgtoa))^080h,w
  5805  0F8D  082A               	movwf	(?_vfpfcnvrt)^080h
  5806  0F8E  00E8               	goto	l500
  5807  0F8F  2FFF               	
  5808                           l4218:	
  5809  0F90                     	goto	l500
  5810  0F90  2FFF               	line	939
  5811                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 939:       
                                   }
  5812                           	
  5813                           l501:	
  5814  0F91                     	line	1350
  5815                           	
  5816                           l4220:	
  5817  0F91                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1350:      
                                    if ((*fmt)[0] == '%') {
  5818                           	movlb 1	; select bank1
  5819  0F91  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5820  0F92  0868               	movwf	fsr1l
  5821  0F93  0086               	movlw 1	; select bank2/3
  5822  0F94  3001               	movwf fsr1h	
  5823  0F95  0087               	
  5824                           	moviw	[0]fsr1
  5825  0F96  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5826  0F97  00EA               	moviw	[1]fsr1
  5827  0F98  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5828  0F99  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5829  0F9A  086A               	movwf	fsr0l
  5830  0F9B  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5831  0F9C  086B               	movwf	fsr0h
  5832  0F9D  0085               	moviw	fsr0++
  5833  0F9E  0012               xorlw	37
  5834  0F9F  3A25               	btfss	status,2
  5835  0FA0  1D03               	goto	u6031
  5836  0FA1  2FA3               	goto	u6030
  5837  0FA2  2FA4               u6031:
  5838  0FA3                     	goto	l4230
  5839  0FA3  2FC3               u6030:
  5840  0FA4                     	line	1351
  5841                           	
  5842                           l4222:	
  5843  0FA4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1351:      
                                        ++*fmt;
  5844                           	movf	(vfpfcnvrt@fmt)^080h,w
  5845  0FA4  0868               	movwf	fsr1l
  5846  0FA5  0086               	movlw 1	; select bank2/3
  5847  0FA6  3001               	movwf fsr1h	
  5848  0FA7  0087               	
  5849                           	movlw	01h
  5850  0FA8  3001               	addwf	indf1,f
  5851  0FA9  0781               	addfsr	fsr1,1
  5852  0FAA  3141               	skipnc
  5853  0FAB  1803               	incf	indf1,f
  5854  0FAC  0A81               	line	1352
  5855                           	
  5856                           l4224:	
  5857  0FAD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1352:      
                                        fputc((int)'%', fp);
  5858                           	movlw	025h
  5859  0FAD  3025               	movlb 0	; select bank0
  5860  0FAE  0140               	movwf	(fputc@c)
  5861  0FAF  00A0               	movlw	0
  5862  0FB0  3000               	movwf	((fputc@c))+1
  5863  0FB1  00A1               	movlb 2	; select bank2
  5864  0FB2  0142               	movf	(vfpfcnvrt@fp)^0100h,w
  5865  0FB3  082E               	movlb 1	; select bank1
  5866  0FB4  0141               	movwf	(??_vfpfcnvrt+0)^080h+0
  5867  0FB5  00EA               	movf	(??_vfpfcnvrt+0)^080h+0,w
  5868  0FB6  086A               	movlb 0	; select bank0
  5869  0FB7  0140               	movwf	(fputc@fp)
  5870  0FB8  00A2               	fcall	_fputc
  5871  0FB9  319C  2411  318C   	line	1353
  5872                           	
  5873                           l4226:	
  5874  0FBC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1353:      
                                        return 1;
  5875                           	movlw	01h
  5876  0FBC  3001               	movlb 1	; select bank1
  5877  0FBD  0141               	movwf	(?_vfpfcnvrt)^080h
  5878  0FBE  00E8               	movlw	0
  5879  0FBF  3000               	movwf	((?_vfpfcnvrt)^080h)+1
  5880  0FC0  00E9               	goto	l500
  5881  0FC1  2FFF               	
  5882                           l4228:	
  5883  0FC2                     	goto	l500
  5884  0FC2  2FFF               	line	1354
  5885                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1354:      
                                    }
  5886                           	
  5887                           l508:	
  5888  0FC3                     	line	1357
  5889                           	
  5890                           l4230:	
  5891  0FC3                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1357:      
                                    ++*fmt;
  5892                           	movf	(vfpfcnvrt@fmt)^080h,w
  5893  0FC3  0868               	movwf	fsr1l
  5894  0FC4  0086               	movlw 1	; select bank2/3
  5895  0FC5  3001               	movwf fsr1h	
  5896  0FC6  0087               	
  5897                           	movlw	01h
  5898  0FC7  3001               	addwf	indf1,f
  5899  0FC8  0781               	addfsr	fsr1,1
  5900  0FC9  3141               	skipnc
  5901  0FCA  1803               	incf	indf1,f
  5902  0FCB  0A81               	line	1358
  5903                           	
  5904                           l4232:	
  5905  0FCC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1358:      
                                    return 0;
  5906                           	clrf	(?_vfpfcnvrt)^080h
  5907  0FCC  01E8               	clrf	(?_vfpfcnvrt+1)^080h
  5908  0FCD  01E9               	goto	l500
  5909  0FCE  2FFF               	
  5910                           l4234:	
  5911  0FCF                     	goto	l500
  5912  0FCF  2FFF               	line	1359
  5913                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1359:     }
                                 
  5914                           	
  5915                           l476:	
  5916  0FD0                     	line	1362
  5917                           	
  5918                           l4236:	
  5919  0FD0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1362:     f
                                 putc((int)(*fmt)[0], fp);
  5920                           	movf	(vfpfcnvrt@fmt)^080h,w
  5921  0FD0  0868               	movwf	fsr1l
  5922  0FD1  0086               	movlw 1	; select bank2/3
  5923  0FD2  3001               	movwf fsr1h	
  5924  0FD3  0087               	
  5925                           	moviw	[0]fsr1
  5926  0FD4  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5927  0FD5  00EA               	moviw	[1]fsr1
  5928  0FD6  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5929  0FD7  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5930  0FD8  086A               	movwf	fsr0l
  5931  0FD9  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5932  0FDA  086B               	movwf	fsr0h
  5933  0FDB  0085               	movf	indf0,w ;code access
  5934  0FDC  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  5935  0FDD  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  5936  0FDE  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  5937  0FDF  086C               	movlb 0	; select bank0
  5938  0FE0  0140               	movwf	(fputc@c)
  5939  0FE1  00A0               	movlb 1	; select bank1
  5940  0FE2  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  5941  0FE3  086D               	movlb 0	; select bank0
  5942  0FE4  0140               	movwf	(fputc@c+1)
  5943  0FE5  00A1               	movlb 2	; select bank2
  5944  0FE6  0142               	movf	(vfpfcnvrt@fp)^0100h,w
  5945  0FE7  082E               	movlb 1	; select bank1
  5946  0FE8  0141               	movwf	(??_vfpfcnvrt+4)^080h+0
  5947  0FE9  00EE               	movf	(??_vfpfcnvrt+4)^080h+0,w
  5948  0FEA  086E               	movlb 0	; select bank0
  5949  0FEB  0140               	movwf	(fputc@fp)
  5950  0FEC  00A2               	fcall	_fputc
  5951  0FED  319C  2411  318C   	line	1363
  5952                           	
  5953                           l4238:	
  5954  0FF0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1363:     +
                                 +*fmt;
  5955                           	movlb 1	; select bank1
  5956  0FF0  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5957  0FF1  0868               	movwf	fsr1l
  5958  0FF2  0086               	movlw 1	; select bank2/3
  5959  0FF3  3001               	movwf fsr1h	
  5960  0FF4  0087               	
  5961                           	movlw	01h
  5962  0FF5  3001               	addwf	indf1,f
  5963  0FF6  0781               	addfsr	fsr1,1
  5964  0FF7  3141               	skipnc
  5965  0FF8  1803               	incf	indf1,f
  5966  0FF9  0A81               	line	1364
  5967                           	
  5968                           l4240:	
  5969  0FFA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1364:     r
                                 eturn 1;
  5970                           	movlw	01h
  5971  0FFA  3001               	movwf	(?_vfpfcnvrt)^080h
  5972  0FFB  00E8               	movlw	0
  5973  0FFC  3000               	movwf	((?_vfpfcnvrt)^080h)+1
  5974  0FFD  00E9               	goto	l500
  5975  0FFE  2FFF               	
  5976                           l4242:	
  5977  0FFF                     	line	1365
  5978                           	
  5979                           l500:	
  5980  0FFF                     	return
  5981  0FFF  0008               	opt stack 0
  5982                           GLOBAL	__end_of_vfpfcnvrt
  5983                           	__end_of_vfpfcnvrt:
  5984  1000                     	signat	_vfpfcnvrt,12410
  5985                           	global	_strncmp
  5986                           
  5987 ;; *************** function _strncmp *****************
  5988 ;; Defined at:
  5989 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  5990 ;; Parameters:    Size  Location     Type
  5991 ;;  _l              1    wreg     PTR const unsigned char 
  5992 ;;		 -> vfpfcnvrt@ct(3), 
  5993 ;;  _r              2    0[BANK0 ] PTR const unsigned char 
  5994 ;;		 -> STR_14(3), 
  5995 ;;  n               2    2[BANK0 ] unsigned int 
  5996 ;; Auto vars:     Size  Location     Type
  5997 ;;  _l              1    6[BANK0 ] PTR const unsigned char 
  5998 ;;		 -> vfpfcnvrt@ct(3), 
  5999 ;;  r               2    7[BANK0 ] PTR const unsigned char 
  6000 ;;		 -> STR_14(3), 
  6001 ;;  l               1    9[BANK0 ] PTR const unsigned char 
  6002 ;;		 -> vfpfcnvrt@ct(3), 
  6003 ;; Return value:  Size  Location     Type
  6004 ;;                  2    0[BANK0 ] int 
  6005 ;; Registers used:
  6006 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6007 ;; Tracked objects:
  6008 ;;		On entry : 0/0
  6009 ;;		On exit  : 0/0
  6010 ;;		Unchanged: 0/0
  6011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6012 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6013 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6014 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6015 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6016 ;;Total ram usage:       10 bytes
  6017 ;; Hardware stack levels used:    1
  6018 ;; Hardware stack levels required when called:    3
  6019 ;; This function calls:
  6020 ;;		Nothing
  6021 ;; This function is called by:
  6022 ;;		_vfpfcnvrt
  6023 ;; This function uses a non-reentrant model
  6024 ;;
  6025                           psect	text6,local,class=CODE,delta=2,merge=1,group=2
  6026                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  6027                           	line	3
  6028                           global __ptext6
  6029                           __ptext6:	;psect for function _strncmp
  6030  1CD9                     psect	text6
  6031                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  6032                           	line	3
  6033                           	global	__size_of_strncmp
  6034                           	__size_of_strncmp	equ	__end_of_strncmp-_strncmp
  6035  006B                     	
  6036                           _strncmp:	
  6037  1CD9                     ;incstack = 0
  6038                           	opt	stack 8
  6039                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  6040                           ;strncmp@_l stored from wreg
  6041                           	movlb 0	; select bank0
  6042  1CD9  0140               	movwf	(strncmp@_l)
  6043  1CDA  00A6               	line	5
  6044                           	
  6045                           l4100:	
  6046  1CDB                     	movf	(strncmp@_l),w
  6047  1CDB  0826               	movwf	(??_strncmp+0)+0
  6048  1CDC  00A4               	movf	(??_strncmp+0)+0,w
  6049  1CDD  0824               	movwf	(strncmp@l)
  6050  1CDE  00A9               	movf	(strncmp@_r+1),w
  6051  1CDF  0821               	movwf	(strncmp@r+1)
  6052  1CE0  00A8               	movf	(strncmp@_r),w
  6053  1CE1  0820               	movwf	(strncmp@r)
  6054  1CE2  00A7               	line	6
  6055                           	
  6056                           l4102:	
  6057  1CE3                     	movlw	01h
  6058  1CE3  3001               	subwf	(strncmp@n),f
  6059  1CE4  02A2               	movlw	0
  6060  1CE5  3000               	subwfb	(strncmp@n+1),f
  6061  1CE6  3BA3               		incf	(((strncmp@n))),w
  6062  1CE7  0A22               	skipz
  6063  1CE8  1D03               	goto	u5801
  6064  1CE9  2CEE               	incf	(((strncmp@n+1))),w
  6065  1CEA  0A23               	btfss	status,2
  6066  1CEB  1D03               	goto	u5801
  6067  1CEC  2CEE               	goto	u5800
  6068  1CED  2CEF               u5801:
  6069  1CEE                     	goto	l4114
  6070  1CEE  2D01               u5800:
  6071  1CEF                     	
  6072                           l4104:	
  6073  1CEF                     	clrf	(?_strncmp)
  6074  1CEF  01A0               	clrf	(?_strncmp+1)
  6075  1CF0  01A1               	goto	l1070
  6076  1CF1  2D43               	
  6077                           l4106:	
  6078  1CF2                     	goto	l1070
  6079  1CF2  2D43               	
  6080                           l1069:	
  6081  1CF3                     	line	7
  6082                           	goto	l4114
  6083  1CF3  2D01               	
  6084                           l1072:	
  6085  1CF4                     	
  6086                           l4108:	
  6087  1CF4                     	movlw	low(01h)
  6088  1CF4  3001               	movwf	(??_strncmp+0)+0
  6089  1CF5  00A4               	movf	(??_strncmp+0)+0,w
  6090  1CF6  0824               	addwf	(strncmp@l),f
  6091  1CF7  07A9               	
  6092                           l4110:	
  6093  1CF8                     	movlw	01h
  6094  1CF8  3001               	addwf	(strncmp@r),f
  6095  1CF9  07A7               	movlw	0
  6096  1CFA  3000               	addwfc	(strncmp@r+1),f
  6097  1CFB  3DA8               	
  6098                           l4112:	
  6099  1CFC                     	movlw	01h
  6100  1CFC  3001               	subwf	(strncmp@n),f
  6101  1CFD  02A2               	movlw	0
  6102  1CFE  3000               	subwfb	(strncmp@n+1),f
  6103  1CFF  3BA3               	goto	l4114
  6104  1D00  2D01               	
  6105                           l1071:	
  6106  1D01                     	
  6107                           l4114:	
  6108  1D01                     	movf	(strncmp@l),w
  6109  1D01  0829               	movwf	fsr1l
  6110  1D02  0086               	movlw 1	; select bank2/3
  6111  1D03  3001               	movwf fsr1h	
  6112  1D04  0087               	
  6113                           	movf	(indf1),w
  6114  1D05  0801               	btfsc	status,2
  6115  1D06  1903               	goto	u5811
  6116  1D07  2D09               	goto	u5810
  6117  1D08  2D0A               u5811:
  6118  1D09                     	goto	l4122
  6119  1D09  2D2B               u5810:
  6120  1D0A                     	
  6121                           l4116:	
  6122  1D0A                     	movf	(strncmp@r),w
  6123  1D0A  0827               	movwf	fsr0l
  6124  1D0B  0084               	movf	((strncmp@r+1)),w
  6125  1D0C  0828               	movwf	fsr0h
  6126  1D0D  0085               	moviw	fsr0++
  6127  1D0E  0012               	btfsc	status,2
  6128  1D0F  1903               	goto	u5821
  6129  1D10  2D12               	goto	u5820
  6130  1D11  2D13               u5821:
  6131  1D12                     	goto	l4122
  6132  1D12  2D2B               u5820:
  6133  1D13                     	
  6134                           l4118:	
  6135  1D13                     	movf	((strncmp@n)),w
  6136  1D13  0822               iorwf	((strncmp@n+1)),w
  6137  1D14  0423               	btfsc	status,2
  6138  1D15  1903               	goto	u5831
  6139  1D16  2D18               	goto	u5830
  6140  1D17  2D19               u5831:
  6141  1D18                     	goto	l4122
  6142  1D18  2D2B               u5830:
  6143  1D19                     	
  6144                           l4120:	
  6145  1D19                     	movf	(strncmp@r),w
  6146  1D19  0827               	movwf	fsr0l
  6147  1D1A  0084               	movf	((strncmp@r+1)),w
  6148  1D1B  0828               	movwf	fsr0h
  6149  1D1C  0085               	movf	indf0,w ;code access
  6150  1D1D  0800               	movwf	(??_strncmp+0)+0
  6151  1D1E  00A4               	movf	(strncmp@l),w
  6152  1D1F  0829               	movwf	fsr1l
  6153  1D20  0086               	movlw 1	; select bank2/3
  6154  1D21  3001               	movwf fsr1h	
  6155  1D22  0087               	
  6156                           	movf	indf1,w
  6157  1D23  0801               	xorwf	(??_strncmp+0)+0,w
  6158  1D24  0624               	skipnz
  6159  1D25  1903               	goto	u5841
  6160  1D26  2D28               	goto	u5840
  6161  1D27  2D29               u5841:
  6162  1D28                     	goto	l4108
  6163  1D28  2CF4               u5840:
  6164  1D29                     	goto	l4122
  6165  1D29  2D2B               	
  6166                           l1074:	
  6167  1D2A                     	goto	l4122
  6168  1D2A  2D2B               	
  6169                           l1075:	
  6170  1D2B                     	line	8
  6171                           	
  6172                           l4122:	
  6173  1D2B                     	movf	(strncmp@r),w
  6174  1D2B  0827               	movwf	fsr0l
  6175  1D2C  0084               	movf	((strncmp@r+1)),w
  6176  1D2D  0828               	movwf	fsr0h
  6177  1D2E  0085               	movf	indf0,w ;code access
  6178  1D2F  0800               	movwf	(??_strncmp+0)+0
  6179  1D30  00A4               	clrf	(??_strncmp+0)+0+1
  6180  1D31  01A5               	comf	(??_strncmp+0)+0,f
  6181  1D32  09A4               	comf	(??_strncmp+0)+1,f
  6182  1D33  09A5               	incf	(??_strncmp+0)+0,f
  6183  1D34  0AA4               	skipnz
  6184  1D35  1903               	incf	(??_strncmp+0)+1,f
  6185  1D36  0AA5               	movf	(strncmp@l),w
  6186  1D37  0829               	movwf	fsr1l
  6187  1D38  0086               	movlw 1	; select bank2/3
  6188  1D39  3001               	movwf fsr1h	
  6189  1D3A  0087               	
  6190                           	movf	indf1,w
  6191  1D3B  0801               	addwf	0+(??_strncmp+0)+0,w
  6192  1D3C  0724               	movwf	(?_strncmp)
  6193  1D3D  00A0               	movf	1+(??_strncmp+0)+0,w
  6194  1D3E  0825               	skipnc
  6195  1D3F  1803               	incf	1+(??_strncmp+0)+0,w
  6196  1D40  0A25               	movwf	((?_strncmp))+1
  6197  1D41  00A1               	goto	l1070
  6198  1D42  2D43               	
  6199                           l4124:	
  6200  1D43                     	line	9
  6201                           	
  6202                           l1070:	
  6203  1D43                     	return
  6204  1D43  0008               	opt stack 0
  6205                           GLOBAL	__end_of_strncmp
  6206                           	__end_of_strncmp:
  6207  1D44                     	signat	_strncmp,12410
  6208                           	global	_efgtoa
  6209                           
  6210 ;; *************** function _efgtoa *****************
  6211 ;; Defined at:
  6212 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;  fp              1    wreg     PTR struct _IO_FILE
  6215 ;;		 -> sprintf@f(5), 
  6216 ;;  f               4   10[BANK1 ] PTR struct _IO_FILE
  6217 ;;  c               1   14[BANK1 ] unsigned char 
  6218 ;; Auto vars:     Size  Location     Type
  6219 ;;  fp              1   43[BANK1 ] PTR struct _IO_FILE
  6220 ;;		 -> sprintf@f(5), 
  6221 ;;  u               4   68[BANK1 ] PTR struct _IO_FILE
  6222 ;;  g               4   60[BANK1 ] PTR struct _IO_FILE
  6223 ;;  l               4   54[BANK1 ] PTR struct _IO_FILE
  6224 ;;  h               4   50[BANK1 ] PTR struct _IO_FILE
  6225 ;;  ou              4   15[BANK1 ] PTR struct _IO_FILE
  6226 ;;  n               2   66[BANK1 ] int 
  6227 ;;  e               2   64[BANK1 ] int 
  6228 ;;  i               2   58[BANK1 ] int 
  6229 ;;  w               2   47[BANK1 ] int 
  6230 ;;  p               2   44[BANK1 ] int 
  6231 ;;  sign            2   41[BANK1 ] int 
  6232 ;;  d               2   39[BANK1 ] int 
  6233 ;;  ne              2   37[BANK1 ] int 
  6234 ;;  m               2   35[BANK1 ] int 
  6235 ;;  pp              2   33[BANK1 ] int 
  6236 ;;  t               2   31[BANK1 ] int 
  6237 ;;  mode            1   49[BANK1 ] unsigned char 
  6238 ;;  nmode           1   46[BANK1 ] unsigned char 
  6239 ;; Return value:  Size  Location     Type
  6240 ;;                  2   10[BANK1 ] int 
  6241 ;; Registers used:
  6242 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6243 ;; Tracked objects:
  6244 ;;		On entry : 0/0
  6245 ;;		On exit  : 0/0
  6246 ;;		Unchanged: 0/0
  6247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6248 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6249 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6250 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6251 ;;      Totals:         0       4      62       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6252 ;;Total ram usage:       66 bytes
  6253 ;; Hardware stack levels used:    1
  6254 ;; Hardware stack levels required when called:    7
  6255 ;; This function calls:
  6256 ;;		___awdiv
  6257 ;;		___awmod
  6258 ;;		___fladd
  6259 ;;		___fldiv
  6260 ;;		___fleq
  6261 ;;		___flge
  6262 ;;		___flmul
  6263 ;;		___flneg
  6264 ;;		___flsub
  6265 ;;		___fltol
  6266 ;;		___fpclassifyf
  6267 ;;		_floorf
  6268 ;;		_isupper
  6269 ;;		_pad
  6270 ;;		_strcpy
  6271 ;;		_tolower
  6272 ;; This function is called by:
  6273 ;;		_vfpfcnvrt
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  6277                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  6278                           	line	319
  6279                           global __ptext7
  6280                           __ptext7:	;psect for function _efgtoa
  6281  1334                     psect	text7
  6282                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  6283                           	line	319
  6284                           	global	__size_of_efgtoa
  6285                           	__size_of_efgtoa	equ	__end_of_efgtoa-_efgtoa
  6286  F473                     	
  6287                           _efgtoa:	
  6288  1334                     ;incstack = 0
  6289                           	opt	stack 4
  6290                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6291                           ;efgtoa@fp stored from wreg
  6292                           	movlb 1	; select bank1
  6293  1334  0141               	movwf	(efgtoa@fp)^080h
  6294  1335  00CB               	line	326
  6295                           	
  6296                           l3764:	
  6297  1336                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 319: static
                                  int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.00\
                                 pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\s
                                 ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
                                 xc8\v2.00\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
                                 t, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 323:  
                                    long double g, h, l, ou, u;
  6298                           	clrf	(efgtoa@sign)^080h
  6299  1336  01C9               	clrf	(efgtoa@sign+1)^080h
  6300  1337  01CA               	line	327
  6301                           	
  6302                           l3766:	
  6303  1338                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 327:     g 
                                 = f;
  6304                           	movf	(efgtoa@f+3)^080h,w
  6305  1338  082D               	movwf	(efgtoa@g+3)^080h
  6306  1339  00DF               	movf	(efgtoa@f+2)^080h,w
  6307  133A  082C               	movwf	(efgtoa@g+2)^080h
  6308  133B  00DE               	movf	(efgtoa@f+1)^080h,w
  6309  133C  082B               	movwf	(efgtoa@g+1)^080h
  6310  133D  00DD               	movf	(efgtoa@f)^080h,w
  6311  133E  082A               	movwf	(efgtoa@g)^080h
  6312  133F  00DC               
  6313                           	line	328
  6314                           	
  6315                           l3768:	
  6316  1340                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 328:     if
                                  (g < 0.0) {
  6317                           	movf	(efgtoa@g+3)^080h,w
  6318  1340  085F               	movlb 0	; select bank0
  6319  1341  0140               	movwf	(___flge@ff1+3)
  6320  1342  00CB               	movlb 1	; select bank1
  6321  1343  0141               	movf	(efgtoa@g+2)^080h,w
  6322  1344  085E               	movlb 0	; select bank0
  6323  1345  0140               	movwf	(___flge@ff1+2)
  6324  1346  00CA               	movlb 1	; select bank1
  6325  1347  0141               	movf	(efgtoa@g+1)^080h,w
  6326  1348  085D               	movlb 0	; select bank0
  6327  1349  0140               	movwf	(___flge@ff1+1)
  6328  134A  00C9               	movlb 1	; select bank1
  6329  134B  0141               	movf	(efgtoa@g)^080h,w
  6330  134C  085C               	movlb 0	; select bank0
  6331  134D  0140               	movwf	(___flge@ff1)
  6332  134E  00C8               
  6333                           	movlw	0x0
  6334  134F  3000               	movwf	(___flge@ff2+3)
  6335  1350  00CF               	movlw	0x0
  6336  1351  3000               	movwf	(___flge@ff2+2)
  6337  1352  00CE               	movlw	0x0
  6338  1353  3000               	movwf	(___flge@ff2+1)
  6339  1354  00CD               	movlw	0x0
  6340  1355  3000               	movwf	(___flge@ff2)
  6341  1356  00CC               
  6342                           	fcall	___flge
  6343  1357  3190  2027  3193   	btfsc	status,0
  6344  135A  1803               	goto	u5211
  6345  135B  2B5D               	goto	u5210
  6346  135C  2B5E               u5211:
  6347  135D                     	goto	l3774
  6348  135D  2B86               u5210:
  6349  135E                     	line	329
  6350                           	
  6351                           l3770:	
  6352  135E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 329:       
                                   sign = 1;
  6353                           	movlw	01h
  6354  135E  3001               	movlb 1	; select bank1
  6355  135F  0141               	movwf	(efgtoa@sign)^080h
  6356  1360  00C9               	movlw	0
  6357  1361  3000               	movwf	((efgtoa@sign)^080h)+1
  6358  1362  00CA               	line	330
  6359                           	
  6360                           l3772:	
  6361  1363                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 330:       
                                   g = -g;
  6362                           	movf	(efgtoa@g+3)^080h,w
  6363  1363  085F               	movlb 0	; select bank0
  6364  1364  0140               	movwf	(___flneg@f1+3)
  6365  1365  00A3               	movlb 1	; select bank1
  6366  1366  0141               	movf	(efgtoa@g+2)^080h,w
  6367  1367  085E               	movlb 0	; select bank0
  6368  1368  0140               	movwf	(___flneg@f1+2)
  6369  1369  00A2               	movlb 1	; select bank1
  6370  136A  0141               	movf	(efgtoa@g+1)^080h,w
  6371  136B  085D               	movlb 0	; select bank0
  6372  136C  0140               	movwf	(___flneg@f1+1)
  6373  136D  00A1               	movlb 1	; select bank1
  6374  136E  0141               	movf	(efgtoa@g)^080h,w
  6375  136F  085C               	movlb 0	; select bank0
  6376  1370  0140               	movwf	(___flneg@f1)
  6377  1371  00A0               
  6378                           	fcall	___flneg
  6379  1372  3198  2000  3193   	movlb 0	; select bank0
  6380  1375  0140               	movf	(3+(?___flneg)),w
  6381  1376  0823               	movlb 1	; select bank1
  6382  1377  0141               	movwf	(efgtoa@g+3)^080h
  6383  1378  00DF               	movlb 0	; select bank0
  6384  1379  0140               	movf	(2+(?___flneg)),w
  6385  137A  0822               	movlb 1	; select bank1
  6386  137B  0141               	movwf	(efgtoa@g+2)^080h
  6387  137C  00DE               	movlb 0	; select bank0
  6388  137D  0140               	movf	(1+(?___flneg)),w
  6389  137E  0821               	movlb 1	; select bank1
  6390  137F  0141               	movwf	(efgtoa@g+1)^080h
  6391  1380  00DD               	movlb 0	; select bank0
  6392  1381  0140               	movf	(0+(?___flneg)),w
  6393  1382  0820               	movlb 1	; select bank1
  6394  1383  0141               	movwf	(efgtoa@g)^080h
  6395  1384  00DC               
  6396                           	goto	l3774
  6397  1385  2B86               	line	331
  6398                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 331:     }

  6399                           	
  6400                           l385:	
  6401  1386                     	line	334
  6402                           	
  6403                           l3774:	
  6404  1386                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 334:     n 
                                 = 0;
  6405                           	movlb 1	; select bank1
  6406  1386  0141               	clrf	(efgtoa@n)^080h
  6407  1387  01E2               	clrf	(efgtoa@n+1)^080h
  6408  1388  01E3               	line	335
  6409                           	
  6410                           l3776:	
  6411  1389                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 335:     w 
                                 = width;
  6412                           	movlb 2	; select bank2
  6413  1389  0142               	movf	(_width+1)^0100h,w
  6414  138A  0865               	movlb 1	; select bank1
  6415  138B  0141               	movwf	(efgtoa@w+1)^080h
  6416  138C  00D0               	movlb 2	; select bank2
  6417  138D  0142               	movf	(_width)^0100h,w
  6418  138E  0864               	movlb 1	; select bank1
  6419  138F  0141               	movwf	(efgtoa@w)^080h
  6420  1390  00CF               	line	336
  6421                           	
  6422                           l3778:	
  6423  1391                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 336:     if
                                  (sign || (flags & (1 << 2))) {
  6424                           	movf	((efgtoa@sign)^080h),w
  6425  1391  0849               iorwf	((efgtoa@sign+1)^080h),w
  6426  1392  044A               	btfss	status,2
  6427  1393  1D03               	goto	u5221
  6428  1394  2B96               	goto	u5220
  6429  1395  2B97               u5221:
  6430  1396                     	goto	l3782
  6431  1396  2B9D               u5220:
  6432  1397                     	
  6433                           l3780:	
  6434  1397                     	movlb 2	; select bank2
  6435  1397  0142               	btfss	(_flags)^0100h,(2)&7
  6436  1398  1D68               	goto	u5231
  6437  1399  2B9B               	goto	u5230
  6438  139A  2B9C               u5231:
  6439  139B                     	goto	l3794
  6440  139B  2BC4               u5230:
  6441  139C                     	goto	l3782
  6442  139C  2B9D               	
  6443                           l388:	
  6444  139D                     	line	337
  6445                           	
  6446                           l3782:	
  6447  139D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 337:       
                                   dbuf[n] = sign ? '-' : '+';
  6448                           	movlb 1	; select bank1
  6449  139D  0141               	movf	((efgtoa@sign)^080h),w
  6450  139E  0849               iorwf	((efgtoa@sign+1)^080h),w
  6451  139F  044A               	btfss	status,2
  6452  13A0  1D03               	goto	u5241
  6453  13A1  2BA3               	goto	u5240
  6454  13A2  2BA4               u5241:
  6455  13A3                     	goto	l3786
  6456  13A3  2BA9               u5240:
  6457  13A4                     	
  6458                           l3784:	
  6459  13A4                     	movlw	02Bh
  6460  13A4  302B               	movwf	(_efgtoa$834)^080h
  6461  13A5  00B3               	movlw	0
  6462  13A6  3000               	movwf	((_efgtoa$834)^080h)+1
  6463  13A7  00B4               	goto	l3788
  6464  13A8  2BAE               	
  6465                           l390:	
  6466  13A9                     	
  6467                           l3786:	
  6468  13A9                     	movlw	02Dh
  6469  13A9  302D               	movwf	(_efgtoa$834)^080h
  6470  13AA  00B3               	movlw	0
  6471  13AB  3000               	movwf	((_efgtoa$834)^080h)+1
  6472  13AC  00B4               	goto	l3788
  6473  13AD  2BAE               	
  6474                           l392:	
  6475  13AE                     	
  6476                           l3788:	
  6477  13AE                     	movf	(_efgtoa$834)^080h,w
  6478  13AE  0833               	movlb 0	; select bank0
  6479  13AF  0140               	movwf	(??_efgtoa+0)+0
  6480  13B0  00EC               	movlb 1	; select bank1
  6481  13B1  0141               	movf	(efgtoa@n)^080h,w
  6482  13B2  0862               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  6483  13B3  3EA0               	movwf	fsr1l
  6484  13B4  0086               	movlw 2	; select bank5/6
  6485  13B5  3002               	movwf fsr1h	
  6486  13B6  0087               	
  6487                           	movlb 0	; select bank0
  6488  13B7  0140               	movf	(??_efgtoa+0)+0,w
  6489  13B8  086C               	movwf	indf1
  6490  13B9  0081               	line	338
  6491                           	
  6492                           l3790:	
  6493  13BA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 338:       
                                   ++n;
  6494                           	movlw	01h
  6495  13BA  3001               	movlb 1	; select bank1
  6496  13BB  0141               	addwf	(efgtoa@n)^080h,f
  6497  13BC  07E2               	movlw	0
  6498  13BD  3000               	addwfc	(efgtoa@n+1)^080h,f
  6499  13BE  3DE3               	line	339
  6500                           	
  6501                           l3792:	
  6502  13BF                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 339:       
                                   --w;
  6503                           	movlw	0FFh
  6504  13BF  30FF               	addwf	(efgtoa@w)^080h,f
  6505  13C0  07CF               	movlw	0FFh
  6506  13C1  30FF               	addwfc	(efgtoa@w+1)^080h,f
  6507  13C2  3DD0               	goto	l3794
  6508  13C3  2BC4               	line	340
  6509                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 340:     }

  6510                           	
  6511                           l386:	
  6512  13C4                     	line	343
  6513                           	
  6514                           l3794:	
  6515  13C4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 344:       
                                   if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6516                           	movlb 1	; select bank1
  6517  13C4  0141               	movf	(efgtoa@g+3)^080h,w
  6518  13C5  085F               	movlb 0	; select bank0
  6519  13C6  0140               	movwf	(___fpclassifyf@x+3)
  6520  13C7  00A3               	movlb 1	; select bank1
  6521  13C8  0141               	movf	(efgtoa@g+2)^080h,w
  6522  13C9  085E               	movlb 0	; select bank0
  6523  13CA  0140               	movwf	(___fpclassifyf@x+2)
  6524  13CB  00A2               	movlb 1	; select bank1
  6525  13CC  0141               	movf	(efgtoa@g+1)^080h,w
  6526  13CD  085D               	movlb 0	; select bank0
  6527  13CE  0140               	movwf	(___fpclassifyf@x+1)
  6528  13CF  00A1               	movlb 1	; select bank1
  6529  13D0  0141               	movf	(efgtoa@g)^080h,w
  6530  13D1  085C               	movlb 0	; select bank0
  6531  13D2  0140               	movwf	(___fpclassifyf@x)
  6532  13D3  00A0               
  6533                           	fcall	___fpclassifyf
  6534  13D4  319D  25B6  3193   	movlb 0	; select bank0
  6535  13D7  0140               		decf	((0+(?___fpclassifyf))),w
  6536  13D8  0320               iorwf	((1+(?___fpclassifyf))),w
  6537  13D9  0421               	btfss	status,2
  6538  13DA  1D03               	goto	u5251
  6539  13DB  2BDD               	goto	u5250
  6540  13DC  2BDF               u5251:
  6541  13DD                     	goto	l3812
  6542  13DD  3180  28B4         u5250:
  6543  13DF                     	line	344
  6544                           	
  6545                           l3796:	
  6546  13DF                     	movlb 1	; select bank1
  6547  13DF  0141               	movf	(efgtoa@c)^080h,w
  6548  13E0  082E               	addlw	low(0FFBFh)
  6549  13E1  3EBF               	movlb 0	; select bank0
  6550  13E2  0140               	movwf	(??_efgtoa+0)+0
  6551  13E3  00EC               	movlw	high(0FFBFh)
  6552  13E4  30FF               	skipnc
  6553  13E5  1803               	movlw	(high(0FFBFh)+1)&0ffh
  6554  13E6  3000               	movwf	((??_efgtoa+0)+0)+1
  6555  13E7  00ED               	movlw	0
  6556  13E8  3000               	subwf	1+(??_efgtoa+0)+0,w
  6557  13E9  026D               	movlw	01Ah
  6558  13EA  301A               	skipnz
  6559  13EB  1903               	subwf	0+(??_efgtoa+0)+0,w
  6560  13EC  026C               	skipc
  6561  13ED  1C03               	goto	u5261
  6562  13EE  2BF0               	goto	u5260
  6563  13EF  2BF2               u5261:
  6564  13F0                     	movlw	1
  6565  13F0  3001               	goto	u5270
  6566  13F1  2BF3               u5260:
  6567  13F2                     	movlw	0
  6568  13F2  3000               u5270:
  6569  13F3                     	movwf	(??_efgtoa+2)+0
  6570  13F3  00EE               	clrf	(??_efgtoa+2)+0+1
  6571  13F4  01EF               	movf	0+(??_efgtoa+2)+0,w
  6572  13F5  086E               	movlb 1	; select bank1
  6573  13F6  0141               	movwf	(_efgtoa$835)^080h
  6574  13F7  00B5               	movlb 0	; select bank0
  6575  13F8  0140               	movf	1+(??_efgtoa+2)+0,w
  6576  13F9  086F               	movlb 1	; select bank1
  6577  13FA  0141               	movwf	(_efgtoa$835+1)^080h
  6578  13FB  00B6               	goto	l3800
  6579  13FC  2C11               	
  6580                           l396:	
  6581  13FD                     	
  6582                           l3798:	
  6583  13FD                     	movf	(efgtoa@c)^080h,w
  6584  13FD  082E               	movlb 0	; select bank0
  6585  13FE  0140               	movwf	(??_efgtoa+0)+0
  6586  13FF  00EC               	clrf	(??_efgtoa+0)+0+1
  6587  1400  01ED               	movf	0+(??_efgtoa+0)+0,w
  6588  1401  086C               	movwf	(isupper@c)
  6589  1402  00A0               	movf	1+(??_efgtoa+0)+0,w
  6590  1403  086D               	movwf	(isupper@c+1)
  6591  1404  00A1               	fcall	_isupper
  6592  1405  31A7  2736  3193   	movlb 0	; select bank0
  6593  1408  0140               	movf	(1+(?_isupper)),w
  6594  1409  0821               	movlb 1	; select bank1
  6595  140A  0141               	movwf	(_efgtoa$835+1)^080h
  6596  140B  00B6               	movlb 0	; select bank0
  6597  140C  0140               	movf	(0+(?_isupper)),w
  6598  140D  0820               	movlb 1	; select bank1
  6599  140E  0141               	movwf	(_efgtoa$835)^080h
  6600  140F  00B5               	goto	l3800
  6601  1410  2C11               	
  6602                           l398:	
  6603  1411                     	
  6604                           l3800:	
  6605  1411                     	movf	((_efgtoa$835)^080h),w
  6606  1411  0835               iorwf	((_efgtoa$835+1)^080h),w
  6607  1412  0436               	btfsc	status,2
  6608  1413  1903               	goto	u5281
  6609  1414  2C16               	goto	u5280
  6610  1415  2C17               u5281:
  6611  1416                     	goto	l3804
  6612  1416  2C23               u5280:
  6613  1417                     	line	345
  6614                           	
  6615                           l3802:	
  6616  1417                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 345:       
                                       strcpy(&dbuf[n], "INF");
  6617                           	movlw	low(((STR_4)|8000h))
  6618  1417  3000               	movlb 0	; select bank0
  6619  1418  0140               	movwf	(strcpy@src)
  6620  1419  00A0               	movlw	high(((STR_4)|8000h))
  6621  141A  30A8               	movwf	((strcpy@src))+1
  6622  141B  00A1               	movlb 1	; select bank1
  6623  141C  0141               	movf	(efgtoa@n)^080h,w
  6624  141D  0862               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  6625  141E  3EA0               	fcall	_strcpy
  6626  141F  31A7  27DB  3193   	line	346
  6627                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 346:       
                                   } else {
  6628                           	goto	l3806
  6629  1422  2C2F               	
  6630                           l394:	
  6631  1423                     	line	347
  6632                           	
  6633                           l3804:	
  6634  1423                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 347:       
                                       strcpy(&dbuf[n], "inf");
  6635                           	movlw	low(((STR_5)|8000h))
  6636  1423  3008               	movlb 0	; select bank0
  6637  1424  0140               	movwf	(strcpy@src)
  6638  1425  00A0               	movlw	high(((STR_5)|8000h))
  6639  1426  30A8               	movwf	((strcpy@src))+1
  6640  1427  00A1               	movlb 1	; select bank1
  6641  1428  0141               	movf	(efgtoa@n)^080h,w
  6642  1429  0862               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  6643  142A  3EA0               	fcall	_strcpy
  6644  142B  31A7  27DB  3193   	goto	l3806
  6645  142E  2C2F               	line	348
  6646                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 348:       
                                   }
  6647                           	
  6648                           l399:	
  6649  142F                     	line	349
  6650                           	
  6651                           l3806:	
  6652  142F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 349:       
                                   w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  6653                           	movlw	0FDh
  6654  142F  30FD               	movlb 1	; select bank1
  6655  1430  0141               	addwf	(efgtoa@w)^080h,f
  6656  1431  07CF               	movlw	0FFh
  6657  1432  30FF               	addwfc	(efgtoa@w+1)^080h,f
  6658  1433  3DD0               	line	350
  6659                           	
  6660                           l3808:	
  6661  1434                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 350:       
                                   return pad(fp, &dbuf[0], w);
  6662                           	movlw	(low(_dbuf|((0x2)<<8)))&0ffh
  6663  1434  30A0               	movlb 0	; select bank0
  6664  1435  0140               	movwf	(??_efgtoa+0)+0
  6665  1436  00EC               	movf	(??_efgtoa+0)+0,w
  6666  1437  086C               	movwf	(pad@buf)
  6667  1438  00B0               	movlb 1	; select bank1
  6668  1439  0141               	movf	(efgtoa@w+1)^080h,w
  6669  143A  0850               	movlb 0	; select bank0
  6670  143B  0140               	movwf	(pad@p+1)
  6671  143C  00B2               	movlb 1	; select bank1
  6672  143D  0141               	movf	(efgtoa@w)^080h,w
  6673  143E  084F               	movlb 0	; select bank0
  6674  143F  0140               	movwf	(pad@p)
  6675  1440  00B1               	movlb 1	; select bank1
  6676  1441  0141               	movf	(efgtoa@fp)^080h,w
  6677  1442  084B               	fcall	_pad
  6678  1443  319B  2356  3193   	movlb 0	; select bank0
  6679  1446  0140               	movf	(1+(?_pad)),w
  6680  1447  0831               	movlb 1	; select bank1
  6681  1448  0141               	movwf	(?_efgtoa+1)^080h
  6682  1449  00AB               	movlb 0	; select bank0
  6683  144A  0140               	movf	(0+(?_pad)),w
  6684  144B  0830               	movlb 1	; select bank1
  6685  144C  0141               	movwf	(?_efgtoa)^080h
  6686  144D  00AA               	goto	l400
  6687  144E  3187  2FA6         	
  6688                           l3810:	
  6689  00B3                     	goto	l400
  6690  00B3  2FA6               	line	351
  6691                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 351:     }

  6692                           	
  6693                           l393:	
  6694  00B4                     	line	352
  6695                           	
  6696                           l3812:	
  6697  00B4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 353:       
                                   if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6698                           	movlb 1	; select bank1
  6699  00B4  0141               	movf	(efgtoa@g+3)^080h,w
  6700  00B5  085F               	movlb 0	; select bank0
  6701  00B6  0140               	movwf	(___fpclassifyf@x+3)
  6702  00B7  00A3               	movlb 1	; select bank1
  6703  00B8  0141               	movf	(efgtoa@g+2)^080h,w
  6704  00B9  085E               	movlb 0	; select bank0
  6705  00BA  0140               	movwf	(___fpclassifyf@x+2)
  6706  00BB  00A2               	movlb 1	; select bank1
  6707  00BC  0141               	movf	(efgtoa@g+1)^080h,w
  6708  00BD  085D               	movlb 0	; select bank0
  6709  00BE  0140               	movwf	(___fpclassifyf@x+1)
  6710  00BF  00A1               	movlb 1	; select bank1
  6711  00C0  0141               	movf	(efgtoa@g)^080h,w
  6712  00C1  085C               	movlb 0	; select bank0
  6713  00C2  0140               	movwf	(___fpclassifyf@x)
  6714  00C3  00A0               
  6715                           	fcall	___fpclassifyf
  6716  00C4  319D  25B6  3180   	movlb 0	; select bank0
  6717  00C7  0140               	movf	((0+(?___fpclassifyf))),w
  6718  00C8  0820               iorwf	((1+(?___fpclassifyf))),w
  6719  00C9  0421               	btfss	status,2
  6720  00CA  1D03               	goto	u5291
  6721  00CB  28CD               	goto	u5290
  6722  00CC  28CE               u5291:
  6723  00CD                     	goto	l3830
  6724  00CD  293F               u5290:
  6725  00CE                     	line	353
  6726                           	
  6727                           l3814:	
  6728  00CE                     	movlb 1	; select bank1
  6729  00CE  0141               	movf	(efgtoa@c)^080h,w
  6730  00CF  082E               	addlw	low(0FFBFh)
  6731  00D0  3EBF               	movlb 0	; select bank0
  6732  00D1  0140               	movwf	(??_efgtoa+0)+0
  6733  00D2  00EC               	movlw	high(0FFBFh)
  6734  00D3  30FF               	skipnc
  6735  00D4  1803               	movlw	(high(0FFBFh)+1)&0ffh
  6736  00D5  3000               	movwf	((??_efgtoa+0)+0)+1
  6737  00D6  00ED               	movlw	0
  6738  00D7  3000               	subwf	1+(??_efgtoa+0)+0,w
  6739  00D8  026D               	movlw	01Ah
  6740  00D9  301A               	skipnz
  6741  00DA  1903               	subwf	0+(??_efgtoa+0)+0,w
  6742  00DB  026C               	skipc
  6743  00DC  1C03               	goto	u5301
  6744  00DD  28DF               	goto	u5300
  6745  00DE  28E1               u5301:
  6746  00DF                     	movlw	1
  6747  00DF  3001               	goto	u5310
  6748  00E0  28E2               u5300:
  6749  00E1                     	movlw	0
  6750  00E1  3000               u5310:
  6751  00E2                     	movwf	(??_efgtoa+2)+0
  6752  00E2  00EE               	clrf	(??_efgtoa+2)+0+1
  6753  00E3  01EF               	movf	0+(??_efgtoa+2)+0,w
  6754  00E4  086E               	movlb 1	; select bank1
  6755  00E5  0141               	movwf	(_efgtoa$840)^080h
  6756  00E6  00B7               	movlb 0	; select bank0
  6757  00E7  0140               	movf	1+(??_efgtoa+2)+0,w
  6758  00E8  086F               	movlb 1	; select bank1
  6759  00E9  0141               	movwf	(_efgtoa$840+1)^080h
  6760  00EA  00B8               	goto	l3818
  6761  00EB  2900               	
  6762                           l404:	
  6763  00EC                     	
  6764                           l3816:	
  6765  00EC                     	movf	(efgtoa@c)^080h,w
  6766  00EC  082E               	movlb 0	; select bank0
  6767  00ED  0140               	movwf	(??_efgtoa+0)+0
  6768  00EE  00EC               	clrf	(??_efgtoa+0)+0+1
  6769  00EF  01ED               	movf	0+(??_efgtoa+0)+0,w
  6770  00F0  086C               	movwf	(isupper@c)
  6771  00F1  00A0               	movf	1+(??_efgtoa+0)+0,w
  6772  00F2  086D               	movwf	(isupper@c+1)
  6773  00F3  00A1               	fcall	_isupper
  6774  00F4  31A7  2736  3180   	movlb 0	; select bank0
  6775  00F7  0140               	movf	(1+(?_isupper)),w
  6776  00F8  0821               	movlb 1	; select bank1
  6777  00F9  0141               	movwf	(_efgtoa$840+1)^080h
  6778  00FA  00B8               	movlb 0	; select bank0
  6779  00FB  0140               	movf	(0+(?_isupper)),w
  6780  00FC  0820               	movlb 1	; select bank1
  6781  00FD  0141               	movwf	(_efgtoa$840)^080h
  6782  00FE  00B7               	goto	l3818
  6783  00FF  2900               	
  6784                           l406:	
  6785  0100                     	
  6786                           l3818:	
  6787  0100                     	movf	((_efgtoa$840)^080h),w
  6788  0100  0837               iorwf	((_efgtoa$840+1)^080h),w
  6789  0101  0438               	btfsc	status,2
  6790  0102  1903               	goto	u5321
  6791  0103  2905               	goto	u5320
  6792  0104  2906               u5321:
  6793  0105                     	goto	l3822
  6794  0105  2912               u5320:
  6795  0106                     	line	354
  6796                           	
  6797                           l3820:	
  6798  0106                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 354:       
                                       strcpy(&dbuf[n], "NAN");
  6799                           	movlw	low(((STR_8)|8000h))
  6800  0106  3004               	movlb 0	; select bank0
  6801  0107  0140               	movwf	(strcpy@src)
  6802  0108  00A0               	movlw	high(((STR_8)|8000h))
  6803  0109  30A8               	movwf	((strcpy@src))+1
  6804  010A  00A1               	movlb 1	; select bank1
  6805  010B  0141               	movf	(efgtoa@n)^080h,w
  6806  010C  0862               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  6807  010D  3EA0               	fcall	_strcpy
  6808  010E  31A7  27DB  3180   	line	355
  6809                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 355:       
                                   } else {
  6810                           	goto	l3824
  6811  0111  291E               	
  6812                           l402:	
  6813  0112                     	line	356
  6814                           	
  6815                           l3822:	
  6816  0112                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 356:       
                                       strcpy(&dbuf[n], "nan");
  6817                           	movlw	low(((STR_9)|8000h))
  6818  0112  300C               	movlb 0	; select bank0
  6819  0113  0140               	movwf	(strcpy@src)
  6820  0114  00A0               	movlw	high(((STR_9)|8000h))
  6821  0115  30A8               	movwf	((strcpy@src))+1
  6822  0116  00A1               	movlb 1	; select bank1
  6823  0117  0141               	movf	(efgtoa@n)^080h,w
  6824  0118  0862               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  6825  0119  3EA0               	fcall	_strcpy
  6826  011A  31A7  27DB  3180   	goto	l3824
  6827  011D  291E               	line	357
  6828                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 357:       
                                   }
  6829                           	
  6830                           l407:	
  6831  011E                     	line	358
  6832                           	
  6833                           l3824:	
  6834  011E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 358:       
                                   w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  6835                           	movlw	0FDh
  6836  011E  30FD               	movlb 1	; select bank1
  6837  011F  0141               	addwf	(efgtoa@w)^080h,f
  6838  0120  07CF               	movlw	0FFh
  6839  0121  30FF               	addwfc	(efgtoa@w+1)^080h,f
  6840  0122  3DD0               	line	359
  6841                           	
  6842                           l3826:	
  6843  0123                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 359:       
                                   return pad(fp, &dbuf[0], w);
  6844                           	movlw	(low(_dbuf|((0x2)<<8)))&0ffh
  6845  0123  30A0               	movlb 0	; select bank0
  6846  0124  0140               	movwf	(??_efgtoa+0)+0
  6847  0125  00EC               	movf	(??_efgtoa+0)+0,w
  6848  0126  086C               	movwf	(pad@buf)
  6849  0127  00B0               	movlb 1	; select bank1
  6850  0128  0141               	movf	(efgtoa@w+1)^080h,w
  6851  0129  0850               	movlb 0	; select bank0
  6852  012A  0140               	movwf	(pad@p+1)
  6853  012B  00B2               	movlb 1	; select bank1
  6854  012C  0141               	movf	(efgtoa@w)^080h,w
  6855  012D  084F               	movlb 0	; select bank0
  6856  012E  0140               	movwf	(pad@p)
  6857  012F  00B1               	movlb 1	; select bank1
  6858  0130  0141               	movf	(efgtoa@fp)^080h,w
  6859  0131  084B               	fcall	_pad
  6860  0132  319B  2356  3180   	movlb 0	; select bank0
  6861  0135  0140               	movf	(1+(?_pad)),w
  6862  0136  0831               	movlb 1	; select bank1
  6863  0137  0141               	movwf	(?_efgtoa+1)^080h
  6864  0138  00AB               	movlb 0	; select bank0
  6865  0139  0140               	movf	(0+(?_pad)),w
  6866  013A  0830               	movlb 1	; select bank1
  6867  013B  0141               	movwf	(?_efgtoa)^080h
  6868  013C  00AA               	goto	l400
  6869  013D  2FA6               	
  6870                           l3828:	
  6871  013E                     	goto	l400
  6872  013E  2FA6               	line	360
  6873                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 360:     }

  6874                           	
  6875                           l401:	
  6876  013F                     	line	363
  6877                           	
  6878                           l3830:	
  6879  013F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 363:     u 
                                 = 1.0;
  6880                           	movlw	0x3f
  6881  013F  303F               	movlb 1	; select bank1
  6882  0140  0141               	movwf	(efgtoa@u+3)^080h
  6883  0141  00E7               	movlw	0x80
  6884  0142  3080               	movwf	(efgtoa@u+2)^080h
  6885  0143  00E6               	movlw	0x0
  6886  0144  3000               	movwf	(efgtoa@u+1)^080h
  6887  0145  00E5               	movlw	0x0
  6888  0146  3000               	movwf	(efgtoa@u)^080h
  6889  0147  00E4               
  6890                           	line	364
  6891                           	
  6892                           l3832:	
  6893  0148                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 364:     e 
                                 = 0;
  6894                           	clrf	(efgtoa@e)^080h
  6895  0148  01E0               	clrf	(efgtoa@e+1)^080h
  6896  0149  01E1               	line	365
  6897                           	
  6898                           l3834:	
  6899  014A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 365:     if
                                  (!(g == 0.0)) {
  6900                           	movf	(efgtoa@g+3)^080h,w
  6901  014A  085F               	movlb 0	; select bank0
  6902  014B  0140               	movwf	(___fleq@ff1+3)
  6903  014C  00A3               	movlb 1	; select bank1
  6904  014D  0141               	movf	(efgtoa@g+2)^080h,w
  6905  014E  085E               	movlb 0	; select bank0
  6906  014F  0140               	movwf	(___fleq@ff1+2)
  6907  0150  00A2               	movlb 1	; select bank1
  6908  0151  0141               	movf	(efgtoa@g+1)^080h,w
  6909  0152  085D               	movlb 0	; select bank0
  6910  0153  0140               	movwf	(___fleq@ff1+1)
  6911  0154  00A1               	movlb 1	; select bank1
  6912  0155  0141               	movf	(efgtoa@g)^080h,w
  6913  0156  085C               	movlb 0	; select bank0
  6914  0157  0140               	movwf	(___fleq@ff1)
  6915  0158  00A0               
  6916                           	movlw	0x0
  6917  0159  3000               	movwf	(___fleq@ff2+3)
  6918  015A  00A7               	movlw	0x0
  6919  015B  3000               	movwf	(___fleq@ff2+2)
  6920  015C  00A6               	movlw	0x0
  6921  015D  3000               	movwf	(___fleq@ff2+1)
  6922  015E  00A5               	movlw	0x0
  6923  015F  3000               	movwf	(___fleq@ff2)
  6924  0160  00A4               
  6925                           	fcall	___fleq
  6926  0161  3187  27A7  3180   	btfsc	status,0
  6927  0164  1803               	goto	u5331
  6928  0165  2967               	goto	u5330
  6929  0166  2968               u5331:
  6930  0167                     	goto	l3850
  6931  0167  2A32               u5330:
  6932  0168                     	goto	l3842
  6933  0168  299B               	line	366
  6934                           	
  6935                           l3836:	
  6936  0169                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 366:       
                                   while (!(g < (u*10.0))) {
  6937                           	goto	l3842
  6938  0169  299B               	
  6939                           l410:	
  6940  016A                     	line	367
  6941                           	
  6942                           l3838:	
  6943  016A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 367:       
                                       u = u*10.0;
  6944                           	movlw	0x41
  6945  016A  3041               	movlb 0	; select bank0
  6946  016B  0140               	movwf	(___flmul@b+3)
  6947  016C  00B1               	movlw	0x20
  6948  016D  3020               	movwf	(___flmul@b+2)
  6949  016E  00B0               	movlw	0x0
  6950  016F  3000               	movwf	(___flmul@b+1)
  6951  0170  00AF               	movlw	0x0
  6952  0171  3000               	movwf	(___flmul@b)
  6953  0172  00AE               
  6954                           	movlb 1	; select bank1
  6955  0173  0141               	movf	(efgtoa@u+3)^080h,w
  6956  0174  0867               	movlb 0	; select bank0
  6957  0175  0140               	movwf	(___flmul@a+3)
  6958  0176  00B5               	movlb 1	; select bank1
  6959  0177  0141               	movf	(efgtoa@u+2)^080h,w
  6960  0178  0866               	movlb 0	; select bank0
  6961  0179  0140               	movwf	(___flmul@a+2)
  6962  017A  00B4               	movlb 1	; select bank1
  6963  017B  0141               	movf	(efgtoa@u+1)^080h,w
  6964  017C  0865               	movlb 0	; select bank0
  6965  017D  0140               	movwf	(___flmul@a+1)
  6966  017E  00B3               	movlb 1	; select bank1
  6967  017F  0141               	movf	(efgtoa@u)^080h,w
  6968  0180  0864               	movlb 0	; select bank0
  6969  0181  0140               	movwf	(___flmul@a)
  6970  0182  00B2               
  6971                           	fcall	___flmul
  6972  0183  3195  2595  3180   	movlb 0	; select bank0
  6973  0186  0140               	movf	(3+(?___flmul)),w
  6974  0187  0831               	movlb 1	; select bank1
  6975  0188  0141               	movwf	(efgtoa@u+3)^080h
  6976  0189  00E7               	movlb 0	; select bank0
  6977  018A  0140               	movf	(2+(?___flmul)),w
  6978  018B  0830               	movlb 1	; select bank1
  6979  018C  0141               	movwf	(efgtoa@u+2)^080h
  6980  018D  00E6               	movlb 0	; select bank0
  6981  018E  0140               	movf	(1+(?___flmul)),w
  6982  018F  082F               	movlb 1	; select bank1
  6983  0190  0141               	movwf	(efgtoa@u+1)^080h
  6984  0191  00E5               	movlb 0	; select bank0
  6985  0192  0140               	movf	(0+(?___flmul)),w
  6986  0193  082E               	movlb 1	; select bank1
  6987  0194  0141               	movwf	(efgtoa@u)^080h
  6988  0195  00E4               
  6989                           	line	368
  6990                           	
  6991                           l3840:	
  6992  0196                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 368:       
                                       ++e;
  6993                           	movlw	01h
  6994  0196  3001               	addwf	(efgtoa@e)^080h,f
  6995  0197  07E0               	movlw	0
  6996  0198  3000               	addwfc	(efgtoa@e+1)^080h,f
  6997  0199  3DE1               	goto	l3842
  6998  019A  299B               	line	369
  6999                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 369:       
                                   }
  7000                           	
  7001                           l409:	
  7002  019B                     	line	366
  7003                           	
  7004                           l3842:	
  7005  019B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 366:       
                                   while (!(g < (u*10.0))) {
  7006                           	movlb 1	; select bank1
  7007  019B  0141               	movf	(efgtoa@g+3)^080h,w
  7008  019C  085F               	movlb 0	; select bank0
  7009  019D  0140               	movwf	(___flge@ff1+3)
  7010  019E  00CB               	movlb 1	; select bank1
  7011  019F  0141               	movf	(efgtoa@g+2)^080h,w
  7012  01A0  085E               	movlb 0	; select bank0
  7013  01A1  0140               	movwf	(___flge@ff1+2)
  7014  01A2  00CA               	movlb 1	; select bank1
  7015  01A3  0141               	movf	(efgtoa@g+1)^080h,w
  7016  01A4  085D               	movlb 0	; select bank0
  7017  01A5  0140               	movwf	(___flge@ff1+1)
  7018  01A6  00C9               	movlb 1	; select bank1
  7019  01A7  0141               	movf	(efgtoa@g)^080h,w
  7020  01A8  085C               	movlb 0	; select bank0
  7021  01A9  0140               	movwf	(___flge@ff1)
  7022  01AA  00C8               
  7023                           	movlw	0x41
  7024  01AB  3041               	movwf	(___flmul@b+3)
  7025  01AC  00B1               	movlw	0x20
  7026  01AD  3020               	movwf	(___flmul@b+2)
  7027  01AE  00B0               	movlw	0x0
  7028  01AF  3000               	movwf	(___flmul@b+1)
  7029  01B0  00AF               	movlw	0x0
  7030  01B1  3000               	movwf	(___flmul@b)
  7031  01B2  00AE               
  7032                           	movlb 1	; select bank1
  7033  01B3  0141               	movf	(efgtoa@u+3)^080h,w
  7034  01B4  0867               	movlb 0	; select bank0
  7035  01B5  0140               	movwf	(___flmul@a+3)
  7036  01B6  00B5               	movlb 1	; select bank1
  7037  01B7  0141               	movf	(efgtoa@u+2)^080h,w
  7038  01B8  0866               	movlb 0	; select bank0
  7039  01B9  0140               	movwf	(___flmul@a+2)
  7040  01BA  00B4               	movlb 1	; select bank1
  7041  01BB  0141               	movf	(efgtoa@u+1)^080h,w
  7042  01BC  0865               	movlb 0	; select bank0
  7043  01BD  0140               	movwf	(___flmul@a+1)
  7044  01BE  00B3               	movlb 1	; select bank1
  7045  01BF  0141               	movf	(efgtoa@u)^080h,w
  7046  01C0  0864               	movlb 0	; select bank0
  7047  01C1  0140               	movwf	(___flmul@a)
  7048  01C2  00B2               
  7049                           	fcall	___flmul
  7050  01C3  3195  2595  3180   	movlb 0	; select bank0
  7051  01C6  0140               	movf	(3+(?___flmul)),w
  7052  01C7  0831               	movwf	(___flge@ff2+3)
  7053  01C8  00CF               	movf	(2+(?___flmul)),w
  7054  01C9  0830               	movwf	(___flge@ff2+2)
  7055  01CA  00CE               	movf	(1+(?___flmul)),w
  7056  01CB  082F               	movwf	(___flge@ff2+1)
  7057  01CC  00CD               	movf	(0+(?___flmul)),w
  7058  01CD  082E               	movwf	(___flge@ff2)
  7059  01CE  00CC               
  7060                           	fcall	___flge
  7061  01CF  3190  2027  3180   	btfsc	status,0
  7062  01D2  1803               	goto	u5341
  7063  01D3  29D5               	goto	u5340
  7064  01D4  29D6               u5341:
  7065  01D5                     	goto	l3838
  7066  01D5  296A               u5340:
  7067  01D6                     	goto	l3848
  7068  01D6  2A09               	
  7069                           l411:	
  7070  01D7                     	line	370
  7071                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 370:       
                                   while (g < u) {
  7072                           	goto	l3848
  7073  01D7  2A09               	
  7074                           l413:	
  7075  01D8                     	line	371
  7076                           	
  7077                           l3844:	
  7078  01D8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 371:       
                                       u = u/10.0;
  7079                           	movlw	0x41
  7080  01D8  3041               	movlb 0	; select bank0
  7081  01D9  0140               	movwf	(___fldiv@a+3)
  7082  01DA  00CB               	movlw	0x20
  7083  01DB  3020               	movwf	(___fldiv@a+2)
  7084  01DC  00CA               	movlw	0x0
  7085  01DD  3000               	movwf	(___fldiv@a+1)
  7086  01DE  00C9               	movlw	0x0
  7087  01DF  3000               	movwf	(___fldiv@a)
  7088  01E0  00C8               
  7089                           	movlb 1	; select bank1
  7090  01E1  0141               	movf	(efgtoa@u+3)^080h,w
  7091  01E2  0867               	movlb 0	; select bank0
  7092  01E3  0140               	movwf	(___fldiv@b+3)
  7093  01E4  00CF               	movlb 1	; select bank1
  7094  01E5  0141               	movf	(efgtoa@u+2)^080h,w
  7095  01E6  0866               	movlb 0	; select bank0
  7096  01E7  0140               	movwf	(___fldiv@b+2)
  7097  01E8  00CE               	movlb 1	; select bank1
  7098  01E9  0141               	movf	(efgtoa@u+1)^080h,w
  7099  01EA  0865               	movlb 0	; select bank0
  7100  01EB  0140               	movwf	(___fldiv@b+1)
  7101  01EC  00CD               	movlb 1	; select bank1
  7102  01ED  0141               	movf	(efgtoa@u)^080h,w
  7103  01EE  0864               	movlb 0	; select bank0
  7104  01EF  0140               	movwf	(___fldiv@b)
  7105  01F0  00CC               
  7106                           	fcall	___fldiv
  7107  01F1  3188  2010  3180   	movlb 0	; select bank0
  7108  01F4  0140               	movf	(3+(?___fldiv)),w
  7109  01F5  084B               	movlb 1	; select bank1
  7110  01F6  0141               	movwf	(efgtoa@u+3)^080h
  7111  01F7  00E7               	movlb 0	; select bank0
  7112  01F8  0140               	movf	(2+(?___fldiv)),w
  7113  01F9  084A               	movlb 1	; select bank1
  7114  01FA  0141               	movwf	(efgtoa@u+2)^080h
  7115  01FB  00E6               	movlb 0	; select bank0
  7116  01FC  0140               	movf	(1+(?___fldiv)),w
  7117  01FD  0849               	movlb 1	; select bank1
  7118  01FE  0141               	movwf	(efgtoa@u+1)^080h
  7119  01FF  00E5               	movlb 0	; select bank0
  7120  0200  0140               	movf	(0+(?___fldiv)),w
  7121  0201  0848               	movlb 1	; select bank1
  7122  0202  0141               	movwf	(efgtoa@u)^080h
  7123  0203  00E4               
  7124                           	line	372
  7125                           	
  7126                           l3846:	
  7127  0204                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 372:       
                                       --e;
  7128                           	movlw	0FFh
  7129  0204  30FF               	addwf	(efgtoa@e)^080h,f
  7130  0205  07E0               	movlw	0FFh
  7131  0206  30FF               	addwfc	(efgtoa@e+1)^080h,f
  7132  0207  3DE1               	goto	l3848
  7133  0208  2A09               	line	373
  7134                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 373:       
                                   }
  7135                           	
  7136                           l412:	
  7137  0209                     	line	370
  7138                           	
  7139                           l3848:	
  7140  0209                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 370:       
                                   while (g < u) {
  7141                           	movlb 1	; select bank1
  7142  0209  0141               	movf	(efgtoa@g+3)^080h,w
  7143  020A  085F               	movlb 0	; select bank0
  7144  020B  0140               	movwf	(___flge@ff1+3)
  7145  020C  00CB               	movlb 1	; select bank1
  7146  020D  0141               	movf	(efgtoa@g+2)^080h,w
  7147  020E  085E               	movlb 0	; select bank0
  7148  020F  0140               	movwf	(___flge@ff1+2)
  7149  0210  00CA               	movlb 1	; select bank1
  7150  0211  0141               	movf	(efgtoa@g+1)^080h,w
  7151  0212  085D               	movlb 0	; select bank0
  7152  0213  0140               	movwf	(___flge@ff1+1)
  7153  0214  00C9               	movlb 1	; select bank1
  7154  0215  0141               	movf	(efgtoa@g)^080h,w
  7155  0216  085C               	movlb 0	; select bank0
  7156  0217  0140               	movwf	(___flge@ff1)
  7157  0218  00C8               
  7158                           	movlb 1	; select bank1
  7159  0219  0141               	movf	(efgtoa@u+3)^080h,w
  7160  021A  0867               	movlb 0	; select bank0
  7161  021B  0140               	movwf	(___flge@ff2+3)
  7162  021C  00CF               	movlb 1	; select bank1
  7163  021D  0141               	movf	(efgtoa@u+2)^080h,w
  7164  021E  0866               	movlb 0	; select bank0
  7165  021F  0140               	movwf	(___flge@ff2+2)
  7166  0220  00CE               	movlb 1	; select bank1
  7167  0221  0141               	movf	(efgtoa@u+1)^080h,w
  7168  0222  0865               	movlb 0	; select bank0
  7169  0223  0140               	movwf	(___flge@ff2+1)
  7170  0224  00CD               	movlb 1	; select bank1
  7171  0225  0141               	movf	(efgtoa@u)^080h,w
  7172  0226  0864               	movlb 0	; select bank0
  7173  0227  0140               	movwf	(___flge@ff2)
  7174  0228  00CC               
  7175                           	fcall	___flge
  7176  0229  3190  2027  3180   	btfss	status,0
  7177  022C  1C03               	goto	u5351
  7178  022D  2A2F               	goto	u5350
  7179  022E  2A30               u5351:
  7180  022F                     	goto	l3844
  7181  022F  29D8               u5350:
  7182  0230                     	goto	l3850
  7183  0230  2A32               	
  7184                           l414:	
  7185  0231                     	goto	l3850
  7186  0231  2A32               	line	374
  7187                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 374:     }

  7188                           	
  7189                           l408:	
  7190  0232                     	line	377
  7191                           	
  7192                           l3850:	
  7193  0232                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 377:     mo
                                 de = tolower((int)c);
  7194                           	movlb 1	; select bank1
  7195  0232  0141               	movf	(efgtoa@c)^080h,w
  7196  0233  082E               	movlb 0	; select bank0
  7197  0234  0140               	movwf	(??_efgtoa+0)+0
  7198  0235  00EC               	clrf	(??_efgtoa+0)+0+1
  7199  0236  01ED               	movf	0+(??_efgtoa+0)+0,w
  7200  0237  086C               	movwf	(tolower@c)
  7201  0238  00A6               	movf	1+(??_efgtoa+0)+0,w
  7202  0239  086D               	movwf	(tolower@c+1)
  7203  023A  00A7               	fcall	_tolower
  7204  023B  3198  20F3  3180   	movlb 0	; select bank0
  7205  023E  0140               	movf	(0+(?_tolower)),w
  7206  023F  0826               	movwf	(??_efgtoa+2)+0
  7207  0240  00EE               	movf	(??_efgtoa+2)+0,w
  7208  0241  086E               	movlb 1	; select bank1
  7209  0242  0141               	movwf	(efgtoa@mode)^080h
  7210  0243  00D1               	line	378
  7211                           	
  7212                           l3852:	
  7213  0244                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 378:     nm
                                 ode = mode;
  7214                           	movf	(efgtoa@mode)^080h,w
  7215  0244  0851               	movlb 0	; select bank0
  7216  0245  0140               	movwf	(??_efgtoa+0)+0
  7217  0246  00EC               	movf	(??_efgtoa+0)+0,w
  7218  0247  086C               	movlb 1	; select bank1
  7219  0248  0141               	movwf	(efgtoa@nmode)^080h
  7220  0249  00CE               	line	379
  7221                           	
  7222                           l3854:	
  7223  024A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 379:     if
                                  (mode == 'g') {
  7224                           		movlw	103
  7225  024A  3067               	xorwf	((efgtoa@mode)^080h),w
  7226  024B  0651               	btfss	status,2
  7227  024C  1D03               	goto	u5361
  7228  024D  2A4F               	goto	u5360
  7229  024E  2A50               u5361:
  7230  024F                     	goto	l415
  7231  024F  2A7A               u5360:
  7232  0250                     	line	380
  7233                           	
  7234                           l3856:	
  7235  0250                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 380:   if (
                                 prec == 0) {
  7236                           	movlb 2	; select bank2
  7237  0250  0142               	movf	((_prec)^0100h),w
  7238  0251  0866               iorwf	((_prec+1)^0100h),w
  7239  0252  0467               	btfss	status,2
  7240  0253  1D03               	goto	u5371
  7241  0254  2A56               	goto	u5370
  7242  0255  2A57               u5371:
  7243  0256                     	goto	l416
  7244  0256  2A5B               u5370:
  7245  0257                     	line	381
  7246                           	
  7247                           l3858:	
  7248  0257                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 381:    pre
                                 c = 1;
  7249                           	movlw	01h
  7250  0257  3001               	movwf	(_prec)^0100h
  7251  0258  00E6               	movlw	0
  7252  0259  3000               	movwf	((_prec)^0100h)+1
  7253  025A  00E7               	line	382
  7254                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 382:   }
  7255                           	
  7256                           l416:	
  7257  025B                     	line	383
  7258                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 383:       
                                   p = (0 < prec) ? prec : 6;
  7259                           	movf	(_prec+1)^0100h,w
  7260  025B  0867               	xorlw	80h
  7261  025C  3A80               	movlb 0	; select bank0
  7262  025D  0140               	movwf	(??_efgtoa+0)+0
  7263  025E  00EC               	movlw	(0)^80h
  7264  025F  3080               	subwf	(??_efgtoa+0)+0,w
  7265  0260  026C               	skipz
  7266  0261  1D03               	goto	u5385
  7267  0262  2A66               	movlw	01h
  7268  0263  3001               	movlb 2	; select bank2
  7269  0264  0142               	subwf	(_prec)^0100h,w
  7270  0265  0266               u5385:
  7271  0266                     
  7272                           	skipnc
  7273  0266  1803               	goto	u5381
  7274  0267  2A69               	goto	u5380
  7275  0268  2A6A               u5381:
  7276  0269                     	goto	l3862
  7277  0269  2A70               u5380:
  7278  026A                     	
  7279                           l3860:	
  7280  026A                     	movlw	06h
  7281  026A  3006               	movlb 1	; select bank1
  7282  026B  0141               	movwf	(efgtoa@p)^080h
  7283  026C  00CC               	movlw	0
  7284  026D  3000               	movwf	((efgtoa@p)^080h)+1
  7285  026E  00CD               	goto	l3868
  7286  026F  2A8E               	
  7287                           l418:	
  7288  0270                     	
  7289                           l3862:	
  7290  0270                     	movlb 2	; select bank2
  7291  0270  0142               	movf	(_prec+1)^0100h,w
  7292  0271  0867               	movlb 1	; select bank1
  7293  0272  0141               	movwf	(efgtoa@p+1)^080h
  7294  0273  00CD               	movlb 2	; select bank2
  7295  0274  0142               	movf	(_prec)^0100h,w
  7296  0275  0866               	movlb 1	; select bank1
  7297  0276  0141               	movwf	(efgtoa@p)^080h
  7298  0277  00CC               	goto	l3868
  7299  0278  2A8E               	
  7300                           l420:	
  7301  0279                     	line	384
  7302                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 384:     } 
                                 else {
  7303                           	goto	l3868
  7304  0279  2A8E               	
  7305                           l415:	
  7306  027A                     	line	385
  7307                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 385:       
                                   p = (prec < 0) ? 6 : prec;
  7308                           	movlb 2	; select bank2
  7309  027A  0142               	btfsc	(_prec+1)^0100h,7
  7310  027B  1BE7               	goto	u5391
  7311  027C  2A7E               	goto	u5390
  7312  027D  2A7F               u5391:
  7313  027E                     	goto	l3866
  7314  027E  2A87               u5390:
  7315  027F                     	
  7316                           l3864:	
  7317  027F                     	movf	(_prec+1)^0100h,w
  7318  027F  0867               	movlb 1	; select bank1
  7319  0280  0141               	movwf	(efgtoa@p+1)^080h
  7320  0281  00CD               	movlb 2	; select bank2
  7321  0282  0142               	movf	(_prec)^0100h,w
  7322  0283  0866               	movlb 1	; select bank1
  7323  0284  0141               	movwf	(efgtoa@p)^080h
  7324  0285  00CC               	goto	l3868
  7325  0286  2A8E               	
  7326                           l423:	
  7327  0287                     	
  7328                           l3866:	
  7329  0287                     	movlw	06h
  7330  0287  3006               	movlb 1	; select bank1
  7331  0288  0141               	movwf	(efgtoa@p)^080h
  7332  0289  00CC               	movlw	0
  7333  028A  3000               	movwf	((efgtoa@p)^080h)+1
  7334  028B  00CD               	goto	l3868
  7335  028C  2A8E               	
  7336                           l425:	
  7337  028D                     	goto	l3868
  7338  028D  2A8E               	line	386
  7339                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 386:     }

  7340                           	
  7341                           l421:	
  7342  028E                     	line	389
  7343                           	
  7344                           l3868:	
  7345  028E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 389:     if
                                  (mode == 'g') {
  7346                           		movlw	103
  7347  028E  3067               	xorwf	((efgtoa@mode)^080h),w
  7348  028F  0651               	btfss	status,2
  7349  0290  1D03               	goto	u5401
  7350  0291  2A93               	goto	u5400
  7351  0292  2A94               u5401:
  7352  0293                     	goto	l426
  7353  0293  2ACD               u5400:
  7354  0294                     	line	390
  7355                           	
  7356                           l3870:	
  7357  0294                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 390:       
                                   if (!(e < -4) && !((p - 1) < e)) {
  7358                           	movf	(efgtoa@e+1)^080h,w
  7359  0294  0861               	xorlw	80h
  7360  0295  3A80               	movlb 0	; select bank0
  7361  0296  0140               	movwf	(??_efgtoa+0)+0
  7362  0297  00EC               	movlw	(0FFh)^80h
  7363  0298  307F               	subwf	(??_efgtoa+0)+0,w
  7364  0299  026C               	skipz
  7365  029A  1D03               	goto	u5415
  7366  029B  2A9F               	movlw	0FCh
  7367  029C  30FC               	movlb 1	; select bank1
  7368  029D  0141               	subwf	(efgtoa@e)^080h,w
  7369  029E  0260               u5415:
  7370  029F                     
  7371                           	skipc
  7372  029F  1C03               	goto	u5411
  7373  02A0  2AA2               	goto	u5410
  7374  02A1  2AA3               u5411:
  7375  02A2                     	goto	l3876
  7376  02A2  2AC6               u5410:
  7377  02A3                     	
  7378                           l3872:	
  7379  02A3                     	movlb 1	; select bank1
  7380  02A3  0141               	movf	(efgtoa@p)^080h,w
  7381  02A4  084C               	addlw	0FFh
  7382  02A5  3EFF               	movlb 0	; select bank0
  7383  02A6  0140               	movwf	(??_efgtoa+0)+0
  7384  02A7  00EC               	movlw	0FFh
  7385  02A8  30FF               	movlb 1	; select bank1
  7386  02A9  0141               	addwfc	(efgtoa@p+1)^080h,w
  7387  02AA  3D4D               	movlb 0	; select bank0
  7388  02AB  0140               	movwf	1+(??_efgtoa+0)+0
  7389  02AC  00ED               	movf	1+(??_efgtoa+0)+0,w
  7390  02AD  086D               	xorlw	80h
  7391  02AE  3A80               	movwf	(??_efgtoa+2)+0
  7392  02AF  00EE               	movlb 1	; select bank1
  7393  02B0  0141               	movf	(efgtoa@e+1)^080h,w
  7394  02B1  0861               	xorlw	80h
  7395  02B2  3A80               	movlb 0	; select bank0
  7396  02B3  0140               	subwf	(??_efgtoa+2)+0,w
  7397  02B4  026E               	skipz
  7398  02B5  1D03               	goto	u5425
  7399  02B6  2ABB               	movlb 1	; select bank1
  7400  02B7  0141               	movf	(efgtoa@e)^080h,w
  7401  02B8  0860               	movlb 0	; select bank0
  7402  02B9  0140               	subwf	0+(??_efgtoa+0)+0,w
  7403  02BA  026C               u5425:
  7404  02BB                     
  7405                           	skipc
  7406  02BB  1C03               	goto	u5421
  7407  02BC  2ABE               	goto	u5420
  7408  02BD  2ABF               u5421:
  7409  02BE                     	goto	l3876
  7410  02BE  2AC6               u5420:
  7411  02BF                     	line	391
  7412                           	
  7413                           l3874:	
  7414  02BF                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 391:       
                                       nmode = 'f';
  7415                           	movlw	low(066h)
  7416  02BF  3066               	movlb 0	; select bank0
  7417  02C0  0140               	movwf	(??_efgtoa+0)+0
  7418  02C1  00EC               	movf	(??_efgtoa+0)+0,w
  7419  02C2  086C               	movlb 1	; select bank1
  7420  02C3  0141               	movwf	(efgtoa@nmode)^080h
  7421  02C4  00CE               	line	392
  7422                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 392:       
                                   } else {
  7423                           	goto	l426
  7424  02C5  2ACD               	
  7425                           l427:	
  7426  02C6                     	line	393
  7427                           	
  7428                           l3876:	
  7429  02C6                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 393:       
                                       nmode = 'e';
  7430                           	movlw	low(065h)
  7431  02C6  3065               	movlb 0	; select bank0
  7432  02C7  0140               	movwf	(??_efgtoa+0)+0
  7433  02C8  00EC               	movf	(??_efgtoa+0)+0,w
  7434  02C9  086C               	movlb 1	; select bank1
  7435  02CA  0141               	movwf	(efgtoa@nmode)^080h
  7436  02CB  00CE               	goto	l426
  7437  02CC  2ACD               	line	394
  7438                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 394:       
                                   }
  7439                           	
  7440                           l428:	
  7441  02CD                     	line	395
  7442                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 395:     }

  7443                           	
  7444                           l426:	
  7445  02CD                     	line	398
  7446                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 398:     m 
                                 = p;
  7447                           	movf	(efgtoa@p+1)^080h,w
  7448  02CD  084D               	movwf	(efgtoa@m+1)^080h
  7449  02CE  00C4               	movf	(efgtoa@p)^080h,w
  7450  02CF  084C               	movwf	(efgtoa@m)^080h
  7451  02D0  00C3               	line	399
  7452                           	
  7453                           l3878:	
  7454  02D1                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 399:     if
                                  (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  7455                           		movlw	103
  7456  02D1  3067               	xorwf	((efgtoa@mode)^080h),w
  7457  02D2  0651               	btfss	status,2
  7458  02D3  1D03               	goto	u5431
  7459  02D4  2AD6               	goto	u5430
  7460  02D5  2AD7               u5431:
  7461  02D6                     	goto	l3884
  7462  02D6  2AE2               u5430:
  7463  02D7                     	
  7464                           l3880:	
  7465  02D7                     		movlw	102
  7466  02D7  3066               	xorwf	((efgtoa@nmode)^080h),w
  7467  02D8  064E               	btfss	status,2
  7468  02D9  1D03               	goto	u5441
  7469  02DA  2ADC               	goto	u5440
  7470  02DB  2ADD               u5441:
  7471  02DC                     	goto	l3886
  7472  02DC  2AE7               u5440:
  7473  02DD                     	
  7474                           l3882:	
  7475  02DD                     	btfss	(efgtoa@e+1)^080h,7
  7476  02DD  1FE1               	goto	u5451
  7477  02DE  2AE0               	goto	u5450
  7478  02DF  2AE1               u5451:
  7479  02E0                     	goto	l3886
  7480  02E0  2AE7               u5450:
  7481  02E1                     	goto	l3884
  7482  02E1  2AE2               	
  7483                           l431:	
  7484  02E2                     	line	400
  7485                           	
  7486                           l3884:	
  7487  02E2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 400:       
                                   ++m;
  7488                           	movlw	01h
  7489  02E2  3001               	addwf	(efgtoa@m)^080h,f
  7490  02E3  07C3               	movlw	0
  7491  02E4  3000               	addwfc	(efgtoa@m+1)^080h,f
  7492  02E5  3DC4               	goto	l3886
  7493  02E6  2AE7               	line	401
  7494                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 401:     }

  7495                           	
  7496                           l429:	
  7497  02E7                     	line	404
  7498                           	
  7499                           l3886:	
  7500  02E7                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 404:     if
                                  (nmode == 'f') {
  7501                           		movlw	102
  7502  02E7  3066               	xorwf	((efgtoa@nmode)^080h),w
  7503  02E8  064E               	btfss	status,2
  7504  02E9  1D03               	goto	u5461
  7505  02EA  2AEC               	goto	u5460
  7506  02EB  2AED               u5461:
  7507  02EC                     	goto	l3898
  7508  02EC  2B08               u5460:
  7509  02ED                     	line	405
  7510                           	
  7511                           l3888:	
  7512  02ED                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 405:       
                                   if (e < 0) {
  7513                           	btfss	(efgtoa@e+1)^080h,7
  7514  02ED  1FE1               	goto	u5471
  7515  02EE  2AF0               	goto	u5470
  7516  02EF  2AF1               u5471:
  7517  02F0                     	goto	l3894
  7518  02F0  2AFC               u5470:
  7519  02F1                     	line	406
  7520                           	
  7521                           l3890:	
  7522  02F1                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 406:       
                                       u = 1.0;
  7523                           	movlw	0x3f
  7524  02F1  303F               	movwf	(efgtoa@u+3)^080h
  7525  02F2  00E7               	movlw	0x80
  7526  02F3  3080               	movwf	(efgtoa@u+2)^080h
  7527  02F4  00E6               	movlw	0x0
  7528  02F5  3000               	movwf	(efgtoa@u+1)^080h
  7529  02F6  00E5               	movlw	0x0
  7530  02F7  3000               	movwf	(efgtoa@u)^080h
  7531  02F8  00E4               
  7532                           	line	407
  7533                           	
  7534                           l3892:	
  7535  02F9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 407:       
                                       e = 0;
  7536                           	clrf	(efgtoa@e)^080h
  7537  02F9  01E0               	clrf	(efgtoa@e+1)^080h
  7538  02FA  01E1               	goto	l3894
  7539  02FB  2AFC               	line	408
  7540                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 408:       
                                   }
  7541                           	
  7542                           l433:	
  7543  02FC                     	line	409
  7544                           	
  7545                           l3894:	
  7546  02FC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 409:       
                                   if (!(mode == 'g')) {
  7547                           		movlw	103
  7548  02FC  3067               	xorwf	((efgtoa@mode)^080h),w
  7549  02FD  0651               	btfsc	status,2
  7550  02FE  1903               	goto	u5481
  7551  02FF  2B01               	goto	u5480
  7552  0300  2B02               u5481:
  7553  0301                     	goto	l3898
  7554  0301  2B08               u5480:
  7555  0302                     	line	410
  7556                           	
  7557                           l3896:	
  7558  0302                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 410:       
                                       m += e;
  7559                           	movf	(efgtoa@e)^080h,w
  7560  0302  0860               	addwf	(efgtoa@m)^080h,f
  7561  0303  07C3               	movf	(efgtoa@e+1)^080h,w
  7562  0304  0861               	addwfc	(efgtoa@m+1)^080h,f
  7563  0305  3DC4               	goto	l3898
  7564  0306  2B08               	line	411
  7565                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 411:       
                                   }
  7566                           	
  7567                           l434:	
  7568  0307                     	goto	l3898
  7569  0307  2B08               	line	412
  7570                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 412:     }

  7571                           	
  7572                           l432:	
  7573  0308                     	line	415
  7574                           	
  7575                           l3898:	
  7576  0308                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 415:     i 
                                 = 0;
  7577                           	clrf	(efgtoa@i)^080h
  7578  0308  01DA               	clrf	(efgtoa@i+1)^080h
  7579  0309  01DB               	line	416
  7580                           	
  7581                           l3900:	
  7582  030A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 416:     h 
                                 = g;
  7583                           	movf	(efgtoa@g+3)^080h,w
  7584  030A  085F               	movwf	(efgtoa@h+3)^080h
  7585  030B  00D5               	movf	(efgtoa@g+2)^080h,w
  7586  030C  085E               	movwf	(efgtoa@h+2)^080h
  7587  030D  00D4               	movf	(efgtoa@g+1)^080h,w
  7588  030E  085D               	movwf	(efgtoa@h+1)^080h
  7589  030F  00D3               	movf	(efgtoa@g)^080h,w
  7590  0310  085C               	movwf	(efgtoa@h)^080h
  7591  0311  00D2               
  7592                           	line	417
  7593                           	
  7594                           l3902:	
  7595  0312                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 417:     ou
                                  = u;
  7596                           	movf	(efgtoa@u+3)^080h,w
  7597  0312  0867               	movwf	(efgtoa@ou+3)^080h
  7598  0313  00B2               	movf	(efgtoa@u+2)^080h,w
  7599  0314  0866               	movwf	(efgtoa@ou+2)^080h
  7600  0315  00B1               	movf	(efgtoa@u+1)^080h,w
  7601  0316  0865               	movwf	(efgtoa@ou+1)^080h
  7602  0317  00B0               	movf	(efgtoa@u)^080h,w
  7603  0318  0864               	movwf	(efgtoa@ou)^080h
  7604  0319  00AF               
  7605                           	line	418
  7606                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 418:     wh
                                 ile (i < m) {
  7607                           	goto	l3908
  7608  031A  2BF3               	
  7609                           l436:	
  7610  031B                     	line	419
  7611                           	
  7612                           l3904:	
  7613  031B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 419:       
                                   l = floorf(h/u);
  7614                           	movlb 1	; select bank1
  7615  031B  0141               	movf	(efgtoa@u+3)^080h,w
  7616  031C  0867               	movlb 0	; select bank0
  7617  031D  0140               	movwf	(___fldiv@a+3)
  7618  031E  00CB               	movlb 1	; select bank1
  7619  031F  0141               	movf	(efgtoa@u+2)^080h,w
  7620  0320  0866               	movlb 0	; select bank0
  7621  0321  0140               	movwf	(___fldiv@a+2)
  7622  0322  00CA               	movlb 1	; select bank1
  7623  0323  0141               	movf	(efgtoa@u+1)^080h,w
  7624  0324  0865               	movlb 0	; select bank0
  7625  0325  0140               	movwf	(___fldiv@a+1)
  7626  0326  00C9               	movlb 1	; select bank1
  7627  0327  0141               	movf	(efgtoa@u)^080h,w
  7628  0328  0864               	movlb 0	; select bank0
  7629  0329  0140               	movwf	(___fldiv@a)
  7630  032A  00C8               
  7631                           	movlb 1	; select bank1
  7632  032B  0141               	movf	(efgtoa@h+3)^080h,w
  7633  032C  0855               	movlb 0	; select bank0
  7634  032D  0140               	movwf	(___fldiv@b+3)
  7635  032E  00CF               	movlb 1	; select bank1
  7636  032F  0141               	movf	(efgtoa@h+2)^080h,w
  7637  0330  0854               	movlb 0	; select bank0
  7638  0331  0140               	movwf	(___fldiv@b+2)
  7639  0332  00CE               	movlb 1	; select bank1
  7640  0333  0141               	movf	(efgtoa@h+1)^080h,w
  7641  0334  0853               	movlb 0	; select bank0
  7642  0335  0140               	movwf	(___fldiv@b+1)
  7643  0336  00CD               	movlb 1	; select bank1
  7644  0337  0141               	movf	(efgtoa@h)^080h,w
  7645  0338  0852               	movlb 0	; select bank0
  7646  0339  0140               	movwf	(___fldiv@b)
  7647  033A  00CC               
  7648                           	fcall	___fldiv
  7649  033B  3188  2010  3180   	movlb 0	; select bank0
  7650  033E  0140               	movf	(3+(?___fldiv)),w
  7651  033F  084B               	movwf	(floorf@x+3)
  7652  0340  00E5               	movf	(2+(?___fldiv)),w
  7653  0341  084A               	movwf	(floorf@x+2)
  7654  0342  00E4               	movf	(1+(?___fldiv)),w
  7655  0343  0849               	movwf	(floorf@x+1)
  7656  0344  00E3               	movf	(0+(?___fldiv)),w
  7657  0345  0848               	movwf	(floorf@x)
  7658  0346  00E2               
  7659                           	fcall	_floorf
  7660  0347  3194  2450  3180   	movlb 0	; select bank0
  7661  034A  0140               	movf	(3+(?_floorf)),w
  7662  034B  0865               	movlb 1	; select bank1
  7663  034C  0141               	movwf	(efgtoa@l+3)^080h
  7664  034D  00D9               	movlb 0	; select bank0
  7665  034E  0140               	movf	(2+(?_floorf)),w
  7666  034F  0864               	movlb 1	; select bank1
  7667  0350  0141               	movwf	(efgtoa@l+2)^080h
  7668  0351  00D8               	movlb 0	; select bank0
  7669  0352  0140               	movf	(1+(?_floorf)),w
  7670  0353  0863               	movlb 1	; select bank1
  7671  0354  0141               	movwf	(efgtoa@l+1)^080h
  7672  0355  00D7               	movlb 0	; select bank0
  7673  0356  0140               	movf	(0+(?_floorf)),w
  7674  0357  0862               	movlb 1	; select bank1
  7675  0358  0141               	movwf	(efgtoa@l)^080h
  7676  0359  00D6               
  7677                           	line	420
  7678                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 420:       
                                   d = (int)l;
  7679                           	movf	(efgtoa@l+3)^080h,w
  7680  035A  0859               	movlb 0	; select bank0
  7681  035B  0140               	movwf	(___fltol@f1+3)
  7682  035C  00A3               	movlb 1	; select bank1
  7683  035D  0141               	movf	(efgtoa@l+2)^080h,w
  7684  035E  0858               	movlb 0	; select bank0
  7685  035F  0140               	movwf	(___fltol@f1+2)
  7686  0360  00A2               	movlb 1	; select bank1
  7687  0361  0141               	movf	(efgtoa@l+1)^080h,w
  7688  0362  0857               	movlb 0	; select bank0
  7689  0363  0140               	movwf	(___fltol@f1+1)
  7690  0364  00A1               	movlb 1	; select bank1
  7691  0365  0141               	movf	(efgtoa@l)^080h,w
  7692  0366  0856               	movlb 0	; select bank0
  7693  0367  0140               	movwf	(___fltol@f1)
  7694  0368  00A0               
  7695                           	fcall	___fltol
  7696  0369  319E  26C4  3180   	movlb 0	; select bank0
  7697  036C  0140               	movf	(1+(?___fltol)),w
  7698  036D  0821               	movlb 1	; select bank1
  7699  036E  0141               	movwf	(efgtoa@d+1)^080h
  7700  036F  00C8               	movlb 0	; select bank0
  7701  0370  0140               	movf	(0+(?___fltol)),w
  7702  0371  0820               	movlb 1	; select bank1
  7703  0372  0141               	movwf	(efgtoa@d)^080h
  7704  0373  00C7               	line	421
  7705                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 421:       
                                   h -= l*u;
  7706                           	movf	(efgtoa@l+3)^080h,w
  7707  0374  0859               	movlb 0	; select bank0
  7708  0375  0140               	movwf	(___flmul@a+3)
  7709  0376  00B5               	movlb 1	; select bank1
  7710  0377  0141               	movf	(efgtoa@l+2)^080h,w
  7711  0378  0858               	movlb 0	; select bank0
  7712  0379  0140               	movwf	(___flmul@a+2)
  7713  037A  00B4               	movlb 1	; select bank1
  7714  037B  0141               	movf	(efgtoa@l+1)^080h,w
  7715  037C  0857               	movlb 0	; select bank0
  7716  037D  0140               	movwf	(___flmul@a+1)
  7717  037E  00B3               	movlb 1	; select bank1
  7718  037F  0141               	movf	(efgtoa@l)^080h,w
  7719  0380  0856               	movlb 0	; select bank0
  7720  0381  0140               	movwf	(___flmul@a)
  7721  0382  00B2               
  7722                           	movlb 1	; select bank1
  7723  0383  0141               	movf	(efgtoa@u+3)^080h,w
  7724  0384  0867               	movlb 0	; select bank0
  7725  0385  0140               	movwf	(___flmul@b+3)
  7726  0386  00B1               	movlb 1	; select bank1
  7727  0387  0141               	movf	(efgtoa@u+2)^080h,w
  7728  0388  0866               	movlb 0	; select bank0
  7729  0389  0140               	movwf	(___flmul@b+2)
  7730  038A  00B0               	movlb 1	; select bank1
  7731  038B  0141               	movf	(efgtoa@u+1)^080h,w
  7732  038C  0865               	movlb 0	; select bank0
  7733  038D  0140               	movwf	(___flmul@b+1)
  7734  038E  00AF               	movlb 1	; select bank1
  7735  038F  0141               	movf	(efgtoa@u)^080h,w
  7736  0390  0864               	movlb 0	; select bank0
  7737  0391  0140               	movwf	(___flmul@b)
  7738  0392  00AE               
  7739                           	fcall	___flmul
  7740  0393  3195  2595  3180   	movlb 0	; select bank0
  7741  0396  0140               	movf	(3+(?___flmul)),w
  7742  0397  0831               	movwf	(___flsub@a+3)
  7743  0398  00CB               	movf	(2+(?___flmul)),w
  7744  0399  0830               	movwf	(___flsub@a+2)
  7745  039A  00CA               	movf	(1+(?___flmul)),w
  7746  039B  082F               	movwf	(___flsub@a+1)
  7747  039C  00C9               	movf	(0+(?___flmul)),w
  7748  039D  082E               	movwf	(___flsub@a)
  7749  039E  00C8               
  7750                           	movlb 1	; select bank1
  7751  039F  0141               	movf	(efgtoa@h+3)^080h,w
  7752  03A0  0855               	movlb 0	; select bank0
  7753  03A1  0140               	movwf	(___flsub@b+3)
  7754  03A2  00CF               	movlb 1	; select bank1
  7755  03A3  0141               	movf	(efgtoa@h+2)^080h,w
  7756  03A4  0854               	movlb 0	; select bank0
  7757  03A5  0140               	movwf	(___flsub@b+2)
  7758  03A6  00CE               	movlb 1	; select bank1
  7759  03A7  0141               	movf	(efgtoa@h+1)^080h,w
  7760  03A8  0853               	movlb 0	; select bank0
  7761  03A9  0140               	movwf	(___flsub@b+1)
  7762  03AA  00CD               	movlb 1	; select bank1
  7763  03AB  0141               	movf	(efgtoa@h)^080h,w
  7764  03AC  0852               	movlb 0	; select bank0
  7765  03AD  0140               	movwf	(___flsub@b)
  7766  03AE  00CC               
  7767                           	fcall	___flsub
  7768  03AF  31A7  2750  3180   	movlb 0	; select bank0
  7769  03B2  0140               	movf	(3+(?___flsub)),w
  7770  03B3  084B               	movlb 1	; select bank1
  7771  03B4  0141               	movwf	(efgtoa@h+3)^080h
  7772  03B5  00D5               	movlb 0	; select bank0
  7773  03B6  0140               	movf	(2+(?___flsub)),w
  7774  03B7  084A               	movlb 1	; select bank1
  7775  03B8  0141               	movwf	(efgtoa@h+2)^080h
  7776  03B9  00D4               	movlb 0	; select bank0
  7777  03BA  0140               	movf	(1+(?___flsub)),w
  7778  03BB  0849               	movlb 1	; select bank1
  7779  03BC  0141               	movwf	(efgtoa@h+1)^080h
  7780  03BD  00D3               	movlb 0	; select bank0
  7781  03BE  0140               	movf	(0+(?___flsub)),w
  7782  03BF  0848               	movlb 1	; select bank1
  7783  03C0  0141               	movwf	(efgtoa@h)^080h
  7784  03C1  00D2               
  7785                           	line	422
  7786                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 422:       
                                   u = u/10.0;
  7787                           	movlw	0x41
  7788  03C2  3041               	movlb 0	; select bank0
  7789  03C3  0140               	movwf	(___fldiv@a+3)
  7790  03C4  00CB               	movlw	0x20
  7791  03C5  3020               	movwf	(___fldiv@a+2)
  7792  03C6  00CA               	movlw	0x0
  7793  03C7  3000               	movwf	(___fldiv@a+1)
  7794  03C8  00C9               	movlw	0x0
  7795  03C9  3000               	movwf	(___fldiv@a)
  7796  03CA  00C8               
  7797                           	movlb 1	; select bank1
  7798  03CB  0141               	movf	(efgtoa@u+3)^080h,w
  7799  03CC  0867               	movlb 0	; select bank0
  7800  03CD  0140               	movwf	(___fldiv@b+3)
  7801  03CE  00CF               	movlb 1	; select bank1
  7802  03CF  0141               	movf	(efgtoa@u+2)^080h,w
  7803  03D0  0866               	movlb 0	; select bank0
  7804  03D1  0140               	movwf	(___fldiv@b+2)
  7805  03D2  00CE               	movlb 1	; select bank1
  7806  03D3  0141               	movf	(efgtoa@u+1)^080h,w
  7807  03D4  0865               	movlb 0	; select bank0
  7808  03D5  0140               	movwf	(___fldiv@b+1)
  7809  03D6  00CD               	movlb 1	; select bank1
  7810  03D7  0141               	movf	(efgtoa@u)^080h,w
  7811  03D8  0864               	movlb 0	; select bank0
  7812  03D9  0140               	movwf	(___fldiv@b)
  7813  03DA  00CC               
  7814                           	fcall	___fldiv
  7815  03DB  3188  2010  3180   	movlb 0	; select bank0
  7816  03DE  0140               	movf	(3+(?___fldiv)),w
  7817  03DF  084B               	movlb 1	; select bank1
  7818  03E0  0141               	movwf	(efgtoa@u+3)^080h
  7819  03E1  00E7               	movlb 0	; select bank0
  7820  03E2  0140               	movf	(2+(?___fldiv)),w
  7821  03E3  084A               	movlb 1	; select bank1
  7822  03E4  0141               	movwf	(efgtoa@u+2)^080h
  7823  03E5  00E6               	movlb 0	; select bank0
  7824  03E6  0140               	movf	(1+(?___fldiv)),w
  7825  03E7  0849               	movlb 1	; select bank1
  7826  03E8  0141               	movwf	(efgtoa@u+1)^080h
  7827  03E9  00E5               	movlb 0	; select bank0
  7828  03EA  0140               	movf	(0+(?___fldiv)),w
  7829  03EB  0848               	movlb 1	; select bank1
  7830  03EC  0141               	movwf	(efgtoa@u)^080h
  7831  03ED  00E4               
  7832                           	line	423
  7833                           	
  7834                           l3906:	
  7835  03EE                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 423:       
                                   ++i;
  7836                           	movlw	01h
  7837  03EE  3001               	addwf	(efgtoa@i)^080h,f
  7838  03EF  07DA               	movlw	0
  7839  03F0  3000               	addwfc	(efgtoa@i+1)^080h,f
  7840  03F1  3DDB               	goto	l3908
  7841  03F2  2BF3               	line	424
  7842                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 424:     }

  7843                           	
  7844                           l435:	
  7845  03F3                     	line	418
  7846                           	
  7847                           l3908:	
  7848  03F3                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 418:     wh
                                 ile (i < m) {
  7849                           	movf	(efgtoa@i+1)^080h,w
  7850  03F3  085B               	xorlw	80h
  7851  03F4  3A80               	movlb 0	; select bank0
  7852  03F5  0140               	movwf	(??_efgtoa+0)+0
  7853  03F6  00EC               	movlb 1	; select bank1
  7854  03F7  0141               	movf	(efgtoa@m+1)^080h,w
  7855  03F8  0844               	xorlw	80h
  7856  03F9  3A80               	movlb 0	; select bank0
  7857  03FA  0140               	subwf	(??_efgtoa+0)+0,w
  7858  03FB  026C               	skipz
  7859  03FC  1D03               	goto	u5495
  7860  03FD  2C01               	movlb 1	; select bank1
  7861  03FE  0141               	movf	(efgtoa@m)^080h,w
  7862  03FF  0843               	subwf	(efgtoa@i)^080h,w
  7863  0400  025A               u5495:
  7864  0401                     
  7865                           	skipc
  7866  0401  1C03               	goto	u5491
  7867  0402  2C04               	goto	u5490
  7868  0403  2C05               u5491:
  7869  0404                     	goto	l3904
  7870  0404  2B1B               u5490:
  7871  0405                     	goto	l3910
  7872  0405  2C06               	
  7873                           l437:	
  7874  0406                     	line	427
  7875                           	
  7876                           l3910:	
  7877  0406                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 427:     l 
                                 = u*5.0;
  7878                           	movlw	0x40
  7879  0406  3040               	movlb 0	; select bank0
  7880  0407  0140               	movwf	(___flmul@b+3)
  7881  0408  00B1               	movlw	0xa0
  7882  0409  30A0               	movwf	(___flmul@b+2)
  7883  040A  00B0               	movlw	0x0
  7884  040B  3000               	movwf	(___flmul@b+1)
  7885  040C  00AF               	movlw	0x0
  7886  040D  3000               	movwf	(___flmul@b)
  7887  040E  00AE               
  7888                           	movlb 1	; select bank1
  7889  040F  0141               	movf	(efgtoa@u+3)^080h,w
  7890  0410  0867               	movlb 0	; select bank0
  7891  0411  0140               	movwf	(___flmul@a+3)
  7892  0412  00B5               	movlb 1	; select bank1
  7893  0413  0141               	movf	(efgtoa@u+2)^080h,w
  7894  0414  0866               	movlb 0	; select bank0
  7895  0415  0140               	movwf	(___flmul@a+2)
  7896  0416  00B4               	movlb 1	; select bank1
  7897  0417  0141               	movf	(efgtoa@u+1)^080h,w
  7898  0418  0865               	movlb 0	; select bank0
  7899  0419  0140               	movwf	(___flmul@a+1)
  7900  041A  00B3               	movlb 1	; select bank1
  7901  041B  0141               	movf	(efgtoa@u)^080h,w
  7902  041C  0864               	movlb 0	; select bank0
  7903  041D  0140               	movwf	(___flmul@a)
  7904  041E  00B2               
  7905                           	fcall	___flmul
  7906  041F  3195  2595  3180   	movlb 0	; select bank0
  7907  0422  0140               	movf	(3+(?___flmul)),w
  7908  0423  0831               	movlb 1	; select bank1
  7909  0424  0141               	movwf	(efgtoa@l+3)^080h
  7910  0425  00D9               	movlb 0	; select bank0
  7911  0426  0140               	movf	(2+(?___flmul)),w
  7912  0427  0830               	movlb 1	; select bank1
  7913  0428  0141               	movwf	(efgtoa@l+2)^080h
  7914  0429  00D8               	movlb 0	; select bank0
  7915  042A  0140               	movf	(1+(?___flmul)),w
  7916  042B  082F               	movlb 1	; select bank1
  7917  042C  0141               	movwf	(efgtoa@l+1)^080h
  7918  042D  00D7               	movlb 0	; select bank0
  7919  042E  0140               	movf	(0+(?___flmul)),w
  7920  042F  082E               	movlb 1	; select bank1
  7921  0430  0141               	movwf	(efgtoa@l)^080h
  7922  0431  00D6               
  7923                           	line	428
  7924                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 428:     if
                                  (h < l) {
  7925                           	movf	(efgtoa@h+3)^080h,w
  7926  0432  0855               	movlb 0	; select bank0
  7927  0433  0140               	movwf	(___flge@ff1+3)
  7928  0434  00CB               	movlb 1	; select bank1
  7929  0435  0141               	movf	(efgtoa@h+2)^080h,w
  7930  0436  0854               	movlb 0	; select bank0
  7931  0437  0140               	movwf	(___flge@ff1+2)
  7932  0438  00CA               	movlb 1	; select bank1
  7933  0439  0141               	movf	(efgtoa@h+1)^080h,w
  7934  043A  0853               	movlb 0	; select bank0
  7935  043B  0140               	movwf	(___flge@ff1+1)
  7936  043C  00C9               	movlb 1	; select bank1
  7937  043D  0141               	movf	(efgtoa@h)^080h,w
  7938  043E  0852               	movlb 0	; select bank0
  7939  043F  0140               	movwf	(___flge@ff1)
  7940  0440  00C8               
  7941                           	movlb 1	; select bank1
  7942  0441  0141               	movf	(efgtoa@l+3)^080h,w
  7943  0442  0859               	movlb 0	; select bank0
  7944  0443  0140               	movwf	(___flge@ff2+3)
  7945  0444  00CF               	movlb 1	; select bank1
  7946  0445  0141               	movf	(efgtoa@l+2)^080h,w
  7947  0446  0858               	movlb 0	; select bank0
  7948  0447  0140               	movwf	(___flge@ff2+2)
  7949  0448  00CE               	movlb 1	; select bank1
  7950  0449  0141               	movf	(efgtoa@l+1)^080h,w
  7951  044A  0857               	movlb 0	; select bank0
  7952  044B  0140               	movwf	(___flge@ff2+1)
  7953  044C  00CD               	movlb 1	; select bank1
  7954  044D  0141               	movf	(efgtoa@l)^080h,w
  7955  044E  0856               	movlb 0	; select bank0
  7956  044F  0140               	movwf	(___flge@ff2)
  7957  0450  00CC               
  7958                           	fcall	___flge
  7959  0451  3190  2027  3180   	btfsc	status,0
  7960  0454  1803               	goto	u5501
  7961  0455  2C57               	goto	u5500
  7962  0456  2C58               u5501:
  7963  0457                     	goto	l3914
  7964  0457  2C62               u5500:
  7965  0458                     	line	429
  7966                           	
  7967                           l3912:	
  7968  0458                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 429:       
                                   l = 0.0;
  7969                           	movlw	0x0
  7970  0458  3000               	movlb 1	; select bank1
  7971  0459  0141               	movwf	(efgtoa@l+3)^080h
  7972  045A  00D9               	movlw	0x0
  7973  045B  3000               	movwf	(efgtoa@l+2)^080h
  7974  045C  00D8               	movlw	0x0
  7975  045D  3000               	movwf	(efgtoa@l+1)^080h
  7976  045E  00D7               	movlw	0x0
  7977  045F  3000               	movwf	(efgtoa@l)^080h
  7978  0460  00D6               
  7979                           	line	430
  7980                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 430:     } 
                                 else {
  7981                           	goto	l3920
  7982  0461  2C98               	
  7983                           l438:	
  7984  0462                     	line	432
  7985                           	
  7986                           l3914:	
  7987  0462                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 432:       
                                   if ((h == l) && !(d % 2)) {
  7988                           	movlb 1	; select bank1
  7989  0462  0141               	movf	(efgtoa@h+3)^080h,w
  7990  0463  0855               	movlb 0	; select bank0
  7991  0464  0140               	movwf	(___fleq@ff1+3)
  7992  0465  00A3               	movlb 1	; select bank1
  7993  0466  0141               	movf	(efgtoa@h+2)^080h,w
  7994  0467  0854               	movlb 0	; select bank0
  7995  0468  0140               	movwf	(___fleq@ff1+2)
  7996  0469  00A2               	movlb 1	; select bank1
  7997  046A  0141               	movf	(efgtoa@h+1)^080h,w
  7998  046B  0853               	movlb 0	; select bank0
  7999  046C  0140               	movwf	(___fleq@ff1+1)
  8000  046D  00A1               	movlb 1	; select bank1
  8001  046E  0141               	movf	(efgtoa@h)^080h,w
  8002  046F  0852               	movlb 0	; select bank0
  8003  0470  0140               	movwf	(___fleq@ff1)
  8004  0471  00A0               
  8005                           	movlb 1	; select bank1
  8006  0472  0141               	movf	(efgtoa@l+3)^080h,w
  8007  0473  0859               	movlb 0	; select bank0
  8008  0474  0140               	movwf	(___fleq@ff2+3)
  8009  0475  00A7               	movlb 1	; select bank1
  8010  0476  0141               	movf	(efgtoa@l+2)^080h,w
  8011  0477  0858               	movlb 0	; select bank0
  8012  0478  0140               	movwf	(___fleq@ff2+2)
  8013  0479  00A6               	movlb 1	; select bank1
  8014  047A  0141               	movf	(efgtoa@l+1)^080h,w
  8015  047B  0857               	movlb 0	; select bank0
  8016  047C  0140               	movwf	(___fleq@ff2+1)
  8017  047D  00A5               	movlb 1	; select bank1
  8018  047E  0141               	movf	(efgtoa@l)^080h,w
  8019  047F  0856               	movlb 0	; select bank0
  8020  0480  0140               	movwf	(___fleq@ff2)
  8021  0481  00A4               
  8022                           	fcall	___fleq
  8023  0482  3187  27A7  3180   	btfss	status,0
  8024  0485  1C03               	goto	u5511
  8025  0486  2C88               	goto	u5510
  8026  0487  2C89               u5511:
  8027  0488                     	goto	l3920
  8028  0488  2C98               u5510:
  8029  0489                     	
  8030                           l3916:	
  8031  0489                     	movlb 1	; select bank1
  8032  0489  0141               	btfsc	(efgtoa@d)^080h,(0)&7
  8033  048A  1847               	goto	u5521
  8034  048B  2C8D               	goto	u5520
  8035  048C  2C8E               u5521:
  8036  048D                     	goto	l3920
  8037  048D  2C98               u5520:
  8038  048E                     	line	433
  8039                           	
  8040                           l3918:	
  8041  048E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 433:       
                                       l = 0.0;
  8042                           	movlw	0x0
  8043  048E  3000               	movwf	(efgtoa@l+3)^080h
  8044  048F  00D9               	movlw	0x0
  8045  0490  3000               	movwf	(efgtoa@l+2)^080h
  8046  0491  00D8               	movlw	0x0
  8047  0492  3000               	movwf	(efgtoa@l+1)^080h
  8048  0493  00D7               	movlw	0x0
  8049  0494  3000               	movwf	(efgtoa@l)^080h
  8050  0495  00D6               
  8051                           	goto	l3920
  8052  0496  2C98               	line	434
  8053                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 434:       
                                   }
  8054                           	
  8055                           l440:	
  8056  0497                     	goto	l3920
  8057  0497  2C98               	line	435
  8058                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 435:     }

  8059                           	
  8060                           l439:	
  8061  0498                     	line	438
  8062                           	
  8063                           l3920:	
  8064  0498                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 438:     h 
                                 = g + l;
  8065                           	movlb 1	; select bank1
  8066  0498  0141               	movf	(efgtoa@l+3)^080h,w
  8067  0499  0859               	movlb 0	; select bank0
  8068  049A  0140               	movwf	(___fladd@b+3)
  8069  049B  00A3               	movlb 1	; select bank1
  8070  049C  0141               	movf	(efgtoa@l+2)^080h,w
  8071  049D  0858               	movlb 0	; select bank0
  8072  049E  0140               	movwf	(___fladd@b+2)
  8073  049F  00A2               	movlb 1	; select bank1
  8074  04A0  0141               	movf	(efgtoa@l+1)^080h,w
  8075  04A1  0857               	movlb 0	; select bank0
  8076  04A2  0140               	movwf	(___fladd@b+1)
  8077  04A3  00A1               	movlb 1	; select bank1
  8078  04A4  0141               	movf	(efgtoa@l)^080h,w
  8079  04A5  0856               	movlb 0	; select bank0
  8080  04A6  0140               	movwf	(___fladd@b)
  8081  04A7  00A0               
  8082                           	movlb 1	; select bank1
  8083  04A8  0141               	movf	(efgtoa@g+3)^080h,w
  8084  04A9  085F               	movlb 0	; select bank0
  8085  04AA  0140               	movwf	(___fladd@a+3)
  8086  04AB  00A7               	movlb 1	; select bank1
  8087  04AC  0141               	movf	(efgtoa@g+2)^080h,w
  8088  04AD  085E               	movlb 0	; select bank0
  8089  04AE  0140               	movwf	(___fladd@a+2)
  8090  04AF  00A6               	movlb 1	; select bank1
  8091  04B0  0141               	movf	(efgtoa@g+1)^080h,w
  8092  04B1  085D               	movlb 0	; select bank0
  8093  04B2  0140               	movwf	(___fladd@a+1)
  8094  04B3  00A5               	movlb 1	; select bank1
  8095  04B4  0141               	movf	(efgtoa@g)^080h,w
  8096  04B5  085C               	movlb 0	; select bank0
  8097  04B6  0140               	movwf	(___fladd@a)
  8098  04B7  00A4               
  8099                           	fcall	___fladd
  8100  04B8  3189  21EF  3180   	movlb 0	; select bank0
  8101  04BB  0140               	movf	(3+(?___fladd)),w
  8102  04BC  0823               	movlb 1	; select bank1
  8103  04BD  0141               	movwf	(efgtoa@h+3)^080h
  8104  04BE  00D5               	movlb 0	; select bank0
  8105  04BF  0140               	movf	(2+(?___fladd)),w
  8106  04C0  0822               	movlb 1	; select bank1
  8107  04C1  0141               	movwf	(efgtoa@h+2)^080h
  8108  04C2  00D4               	movlb 0	; select bank0
  8109  04C3  0140               	movf	(1+(?___fladd)),w
  8110  04C4  0821               	movlb 1	; select bank1
  8111  04C5  0141               	movwf	(efgtoa@h+1)^080h
  8112  04C6  00D3               	movlb 0	; select bank0
  8113  04C7  0140               	movf	(0+(?___fladd)),w
  8114  04C8  0820               	movlb 1	; select bank1
  8115  04C9  0141               	movwf	(efgtoa@h)^080h
  8116  04CA  00D2               
  8117                           	line	441
  8118                           	
  8119                           l3922:	
  8120  04CB                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 441:     u 
                                 = ou;
  8121                           	movf	(efgtoa@ou+3)^080h,w
  8122  04CB  0832               	movwf	(efgtoa@u+3)^080h
  8123  04CC  00E7               	movf	(efgtoa@ou+2)^080h,w
  8124  04CD  0831               	movwf	(efgtoa@u+2)^080h
  8125  04CE  00E6               	movf	(efgtoa@ou+1)^080h,w
  8126  04CF  0830               	movwf	(efgtoa@u+1)^080h
  8127  04D0  00E5               	movf	(efgtoa@ou)^080h,w
  8128  04D1  082F               	movwf	(efgtoa@u)^080h
  8129  04D2  00E4               
  8130                           	line	442
  8131                           	
  8132                           l3924:	
  8133  04D3                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 442:     ne
                                  = (nmode == 'e') ? 0 : e;
  8134                           		movlw	101
  8135  04D3  3065               	xorwf	((efgtoa@nmode)^080h),w
  8136  04D4  064E               	btfsc	status,2
  8137  04D5  1903               	goto	u5531
  8138  04D6  2CD8               	goto	u5530
  8139  04D7  2CD9               u5531:
  8140  04D8                     	goto	l3928
  8141  04D8  2CDE               u5530:
  8142  04D9                     	
  8143                           l3926:	
  8144  04D9                     	movf	(efgtoa@e+1)^080h,w
  8145  04D9  0861               	movwf	(efgtoa@ne+1)^080h
  8146  04DA  00C6               	movf	(efgtoa@e)^080h,w
  8147  04DB  0860               	movwf	(efgtoa@ne)^080h
  8148  04DC  00C5               	goto	l444
  8149  04DD  2CE0               	
  8150                           l442:	
  8151  04DE                     	
  8152                           l3928:	
  8153  04DE                     	clrf	(efgtoa@ne)^080h
  8154  04DE  01C5               	clrf	(efgtoa@ne+1)^080h
  8155  04DF  01C6               	
  8156                           l444:	
  8157  04E0                     	line	443
  8158                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 443:     pp
                                  = 0;
  8159                           	clrf	(efgtoa@pp)^080h
  8160  04E0  01C1               	clrf	(efgtoa@pp+1)^080h
  8161  04E1  01C2               	line	444
  8162                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 444:     t 
                                 = 0;
  8163                           	clrf	(efgtoa@t)^080h
  8164  04E2  01BF               	clrf	(efgtoa@t+1)^080h
  8165  04E3  01C0               	line	445
  8166                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 445:     i 
                                 = 0;
  8167                           	clrf	(efgtoa@i)^080h
  8168  04E4  01DA               	clrf	(efgtoa@i+1)^080h
  8169  04E5  01DB               	line	446
  8170                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 446:     wh
                                 ile ((i < m) && (n < (80 - 5))) {
  8171                           	goto	l3978
  8172  04E6  2E3C               	
  8173                           l446:	
  8174  04E7                     	line	447
  8175                           	
  8176                           l3930:	
  8177  04E7                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 447:       
                                   l = floorf(h/u);
  8178                           	movlb 1	; select bank1
  8179  04E7  0141               	movf	(efgtoa@u+3)^080h,w
  8180  04E8  0867               	movlb 0	; select bank0
  8181  04E9  0140               	movwf	(___fldiv@a+3)
  8182  04EA  00CB               	movlb 1	; select bank1
  8183  04EB  0141               	movf	(efgtoa@u+2)^080h,w
  8184  04EC  0866               	movlb 0	; select bank0
  8185  04ED  0140               	movwf	(___fldiv@a+2)
  8186  04EE  00CA               	movlb 1	; select bank1
  8187  04EF  0141               	movf	(efgtoa@u+1)^080h,w
  8188  04F0  0865               	movlb 0	; select bank0
  8189  04F1  0140               	movwf	(___fldiv@a+1)
  8190  04F2  00C9               	movlb 1	; select bank1
  8191  04F3  0141               	movf	(efgtoa@u)^080h,w
  8192  04F4  0864               	movlb 0	; select bank0
  8193  04F5  0140               	movwf	(___fldiv@a)
  8194  04F6  00C8               
  8195                           	movlb 1	; select bank1
  8196  04F7  0141               	movf	(efgtoa@h+3)^080h,w
  8197  04F8  0855               	movlb 0	; select bank0
  8198  04F9  0140               	movwf	(___fldiv@b+3)
  8199  04FA  00CF               	movlb 1	; select bank1
  8200  04FB  0141               	movf	(efgtoa@h+2)^080h,w
  8201  04FC  0854               	movlb 0	; select bank0
  8202  04FD  0140               	movwf	(___fldiv@b+2)
  8203  04FE  00CE               	movlb 1	; select bank1
  8204  04FF  0141               	movf	(efgtoa@h+1)^080h,w
  8205  0500  0853               	movlb 0	; select bank0
  8206  0501  0140               	movwf	(___fldiv@b+1)
  8207  0502  00CD               	movlb 1	; select bank1
  8208  0503  0141               	movf	(efgtoa@h)^080h,w
  8209  0504  0852               	movlb 0	; select bank0
  8210  0505  0140               	movwf	(___fldiv@b)
  8211  0506  00CC               
  8212                           	fcall	___fldiv
  8213  0507  3188  2010  3180   	movlb 0	; select bank0
  8214  050A  0140               	movf	(3+(?___fldiv)),w
  8215  050B  084B               	movwf	(floorf@x+3)
  8216  050C  00E5               	movf	(2+(?___fldiv)),w
  8217  050D  084A               	movwf	(floorf@x+2)
  8218  050E  00E4               	movf	(1+(?___fldiv)),w
  8219  050F  0849               	movwf	(floorf@x+1)
  8220  0510  00E3               	movf	(0+(?___fldiv)),w
  8221  0511  0848               	movwf	(floorf@x)
  8222  0512  00E2               
  8223                           	fcall	_floorf
  8224  0513  3194  2450  3180   	movlb 0	; select bank0
  8225  0516  0140               	movf	(3+(?_floorf)),w
  8226  0517  0865               	movlb 1	; select bank1
  8227  0518  0141               	movwf	(efgtoa@l+3)^080h
  8228  0519  00D9               	movlb 0	; select bank0
  8229  051A  0140               	movf	(2+(?_floorf)),w
  8230  051B  0864               	movlb 1	; select bank1
  8231  051C  0141               	movwf	(efgtoa@l+2)^080h
  8232  051D  00D8               	movlb 0	; select bank0
  8233  051E  0140               	movf	(1+(?_floorf)),w
  8234  051F  0863               	movlb 1	; select bank1
  8235  0520  0141               	movwf	(efgtoa@l+1)^080h
  8236  0521  00D7               	movlb 0	; select bank0
  8237  0522  0140               	movf	(0+(?_floorf)),w
  8238  0523  0862               	movlb 1	; select bank1
  8239  0524  0141               	movwf	(efgtoa@l)^080h
  8240  0525  00D6               
  8241                           	line	448
  8242                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 448:       
                                   d = (int)l;
  8243                           	movf	(efgtoa@l+3)^080h,w
  8244  0526  0859               	movlb 0	; select bank0
  8245  0527  0140               	movwf	(___fltol@f1+3)
  8246  0528  00A3               	movlb 1	; select bank1
  8247  0529  0141               	movf	(efgtoa@l+2)^080h,w
  8248  052A  0858               	movlb 0	; select bank0
  8249  052B  0140               	movwf	(___fltol@f1+2)
  8250  052C  00A2               	movlb 1	; select bank1
  8251  052D  0141               	movf	(efgtoa@l+1)^080h,w
  8252  052E  0857               	movlb 0	; select bank0
  8253  052F  0140               	movwf	(___fltol@f1+1)
  8254  0530  00A1               	movlb 1	; select bank1
  8255  0531  0141               	movf	(efgtoa@l)^080h,w
  8256  0532  0856               	movlb 0	; select bank0
  8257  0533  0140               	movwf	(___fltol@f1)
  8258  0534  00A0               
  8259                           	fcall	___fltol
  8260  0535  319E  26C4  3180   	movlb 0	; select bank0
  8261  0538  0140               	movf	(1+(?___fltol)),w
  8262  0539  0821               	movlb 1	; select bank1
  8263  053A  0141               	movwf	(efgtoa@d+1)^080h
  8264  053B  00C8               	movlb 0	; select bank0
  8265  053C  0140               	movf	(0+(?___fltol)),w
  8266  053D  0820               	movlb 1	; select bank1
  8267  053E  0141               	movwf	(efgtoa@d)^080h
  8268  053F  00C7               	line	449
  8269                           	
  8270                           l3932:	
  8271  0540                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 449:       
                                   if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  8272                           	movlb 2	; select bank2
  8273  0540  0142               	btfsc	(_flags)^0100h,(4)&7
  8274  0541  1A68               	goto	u5541
  8275  0542  2D44               	goto	u5540
  8276  0543  2D45               u5541:
  8277  0544                     	goto	l3942
  8278  0544  2D5B               u5540:
  8279  0545                     	
  8280                           l3934:	
  8281  0545                     	movlb 1	; select bank1
  8282  0545  0141               	movf	((efgtoa@d)^080h),w
  8283  0546  0847               iorwf	((efgtoa@d+1)^080h),w
  8284  0547  0448               	btfss	status,2
  8285  0548  1D03               	goto	u5551
  8286  0549  2D4B               	goto	u5550
  8287  054A  2D4C               u5551:
  8288  054B                     	goto	l3942
  8289  054B  2D5B               u5550:
  8290  054C                     	
  8291                           l3936:	
  8292  054C                     		movlw	103
  8293  054C  3067               	xorwf	((efgtoa@mode)^080h),w
  8294  054D  0651               	btfss	status,2
  8295  054E  1D03               	goto	u5561
  8296  054F  2D51               	goto	u5560
  8297  0550  2D52               u5561:
  8298  0551                     	goto	l3942
  8299  0551  2D5B               u5560:
  8300  0552                     	
  8301                           l3938:	
  8302  0552                     	btfss	(efgtoa@ne+1)^080h,7
  8303  0552  1FC6               	goto	u5571
  8304  0553  2D55               	goto	u5570
  8305  0554  2D56               u5571:
  8306  0555                     	goto	l3942
  8307  0555  2D5B               u5570:
  8308  0556                     	line	450
  8309                           	
  8310                           l3940:	
  8311  0556                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 450:       
                                       ++t;
  8312                           	movlw	01h
  8313  0556  3001               	addwf	(efgtoa@t)^080h,f
  8314  0557  07BF               	movlw	0
  8315  0558  3000               	addwfc	(efgtoa@t+1)^080h,f
  8316  0559  3DC0               	line	451
  8317                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 451:       
                                   } else {
  8318                           	goto	l3970
  8319  055A  2DB9               	
  8320                           l447:	
  8321  055B                     	line	452
  8322                           	
  8323                           l3942:	
  8324  055B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 452:       
                                       if (!pp && (ne < 0)) {
  8325                           	movlb 1	; select bank1
  8326  055B  0141               	movf	((efgtoa@pp)^080h),w
  8327  055C  0841               iorwf	((efgtoa@pp+1)^080h),w
  8328  055D  0442               	btfss	status,2
  8329  055E  1D03               	goto	u5581
  8330  055F  2D61               	goto	u5580
  8331  0560  2D62               u5581:
  8332  0561                     	goto	l3962
  8333  0561  2D9B               u5580:
  8334  0562                     	
  8335                           l3944:	
  8336  0562                     	btfss	(efgtoa@ne+1)^080h,7
  8337  0562  1FC6               	goto	u5591
  8338  0563  2D65               	goto	u5590
  8339  0564  2D66               u5591:
  8340  0565                     	goto	l3962
  8341  0565  2D9B               u5590:
  8342  0566                     	line	453
  8343                           	
  8344                           l3946:	
  8345  0566                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 453:       
                                           dbuf[n++] = '.';
  8346                           	movlw	low(02Eh)
  8347  0566  302E               	movlb 0	; select bank0
  8348  0567  0140               	movwf	(??_efgtoa+0)+0
  8349  0568  00EC               	movlb 1	; select bank1
  8350  0569  0141               	movf	(efgtoa@n)^080h,w
  8351  056A  0862               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  8352  056B  3EA0               	movwf	fsr1l
  8353  056C  0086               	movlw 2	; select bank5/6
  8354  056D  3002               	movwf fsr1h	
  8355  056E  0087               	
  8356                           	movlb 0	; select bank0
  8357  056F  0140               	movf	(??_efgtoa+0)+0,w
  8358  0570  086C               	movwf	indf1
  8359  0571  0081               	
  8360                           l3948:	
  8361  0572                     	movlw	01h
  8362  0572  3001               	movlb 1	; select bank1
  8363  0573  0141               	addwf	(efgtoa@n)^080h,f
  8364  0574  07E2               	movlw	0
  8365  0575  3000               	addwfc	(efgtoa@n+1)^080h,f
  8366  0576  3DE3               	line	454
  8367                           	
  8368                           l3950:	
  8369  0577                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 454:       
                                           --w;
  8370                           	movlw	0FFh
  8371  0577  30FF               	addwf	(efgtoa@w)^080h,f
  8372  0578  07CF               	movlw	0FFh
  8373  0579  30FF               	addwfc	(efgtoa@w+1)^080h,f
  8374  057A  3DD0               	line	455
  8375                           	
  8376                           l3952:	
  8377  057B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 455:       
                                           pp = 1;
  8378                           	movlw	01h
  8379  057B  3001               	movwf	(efgtoa@pp)^080h
  8380  057C  00C1               	movlw	0
  8381  057D  3000               	movwf	((efgtoa@pp)^080h)+1
  8382  057E  00C2               	goto	l3962
  8383  057F  2D9B               	line	456
  8384                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 456:       
                                       }
  8385                           	
  8386                           l449:	
  8387  0580                     	line	457
  8388                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 457:       
                                       while (t) {
  8389                           	goto	l3962
  8390  0580  2D9B               	
  8391                           l451:	
  8392  0581                     	line	458
  8393                           	
  8394                           l3954:	
  8395  0581                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 458:       
                                           dbuf[n++] = '0';
  8396                           	movlw	low(030h)
  8397  0581  3030               	movlb 0	; select bank0
  8398  0582  0140               	movwf	(??_efgtoa+0)+0
  8399  0583  00EC               	movlb 1	; select bank1
  8400  0584  0141               	movf	(efgtoa@n)^080h,w
  8401  0585  0862               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  8402  0586  3EA0               	movwf	fsr1l
  8403  0587  0086               	movlw 2	; select bank5/6
  8404  0588  3002               	movwf fsr1h	
  8405  0589  0087               	
  8406                           	movlb 0	; select bank0
  8407  058A  0140               	movf	(??_efgtoa+0)+0,w
  8408  058B  086C               	movwf	indf1
  8409  058C  0081               	
  8410                           l3956:	
  8411  058D                     	movlw	01h
  8412  058D  3001               	movlb 1	; select bank1
  8413  058E  0141               	addwf	(efgtoa@n)^080h,f
  8414  058F  07E2               	movlw	0
  8415  0590  3000               	addwfc	(efgtoa@n+1)^080h,f
  8416  0591  3DE3               	line	459
  8417                           	
  8418                           l3958:	
  8419  0592                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 459:       
                                           --w;
  8420                           	movlw	0FFh
  8421  0592  30FF               	addwf	(efgtoa@w)^080h,f
  8422  0593  07CF               	movlw	0FFh
  8423  0594  30FF               	addwfc	(efgtoa@w+1)^080h,f
  8424  0595  3DD0               	line	460
  8425                           	
  8426                           l3960:	
  8427  0596                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 460:       
                                           --t;
  8428                           	movlw	0FFh
  8429  0596  30FF               	addwf	(efgtoa@t)^080h,f
  8430  0597  07BF               	movlw	0FFh
  8431  0598  30FF               	addwfc	(efgtoa@t+1)^080h,f
  8432  0599  3DC0               	goto	l3962
  8433  059A  2D9B               	line	461
  8434                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 461:       
                                       }
  8435                           	
  8436                           l450:	
  8437  059B                     	line	457
  8438                           	
  8439                           l3962:	
  8440  059B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 457:       
                                       while (t) {
  8441                           	movf	((efgtoa@t)^080h),w
  8442  059B  083F               iorwf	((efgtoa@t+1)^080h),w
  8443  059C  0440               	btfss	status,2
  8444  059D  1D03               	goto	u5601
  8445  059E  2DA0               	goto	u5600
  8446  059F  2DA1               u5601:
  8447  05A0                     	goto	l3954
  8448  05A0  2D81               u5600:
  8449  05A1                     	goto	l3964
  8450  05A1  2DA2               	
  8451                           l452:	
  8452  05A2                     	line	462
  8453                           	
  8454                           l3964:	
  8455  05A2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 462:       
                                       dbuf[n++] = '0' + d;
  8456                           	movf	(efgtoa@d)^080h,w
  8457  05A2  0847               	addlw	030h
  8458  05A3  3E30               	movlb 0	; select bank0
  8459  05A4  0140               	movwf	(??_efgtoa+0)+0
  8460  05A5  00EC               	movlb 1	; select bank1
  8461  05A6  0141               	movf	(efgtoa@n)^080h,w
  8462  05A7  0862               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  8463  05A8  3EA0               	movwf	fsr1l
  8464  05A9  0086               	movlw 2	; select bank5/6
  8465  05AA  3002               	movwf fsr1h	
  8466  05AB  0087               	
  8467                           	movlb 0	; select bank0
  8468  05AC  0140               	movf	(??_efgtoa+0)+0,w
  8469  05AD  086C               	movwf	indf1
  8470  05AE  0081               	
  8471                           l3966:	
  8472  05AF                     	movlw	01h
  8473  05AF  3001               	movlb 1	; select bank1
  8474  05B0  0141               	addwf	(efgtoa@n)^080h,f
  8475  05B1  07E2               	movlw	0
  8476  05B2  3000               	addwfc	(efgtoa@n+1)^080h,f
  8477  05B3  3DE3               	line	463
  8478                           	
  8479                           l3968:	
  8480  05B4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 463:       
                                       --w;
  8481                           	movlw	0FFh
  8482  05B4  30FF               	addwf	(efgtoa@w)^080h,f
  8483  05B5  07CF               	movlw	0FFh
  8484  05B6  30FF               	addwfc	(efgtoa@w+1)^080h,f
  8485  05B7  3DD0               	goto	l3970
  8486  05B8  2DB9               	line	464
  8487                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 464:       
                                   }
  8488                           	
  8489                           l448:	
  8490  05B9                     	line	465
  8491                           	
  8492                           l3970:	
  8493  05B9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 465:       
                                   h -= l*u;
  8494                           	movf	(efgtoa@l+3)^080h,w
  8495  05B9  0859               	movlb 0	; select bank0
  8496  05BA  0140               	movwf	(___flmul@a+3)
  8497  05BB  00B5               	movlb 1	; select bank1
  8498  05BC  0141               	movf	(efgtoa@l+2)^080h,w
  8499  05BD  0858               	movlb 0	; select bank0
  8500  05BE  0140               	movwf	(___flmul@a+2)
  8501  05BF  00B4               	movlb 1	; select bank1
  8502  05C0  0141               	movf	(efgtoa@l+1)^080h,w
  8503  05C1  0857               	movlb 0	; select bank0
  8504  05C2  0140               	movwf	(___flmul@a+1)
  8505  05C3  00B3               	movlb 1	; select bank1
  8506  05C4  0141               	movf	(efgtoa@l)^080h,w
  8507  05C5  0856               	movlb 0	; select bank0
  8508  05C6  0140               	movwf	(___flmul@a)
  8509  05C7  00B2               
  8510                           	movlb 1	; select bank1
  8511  05C8  0141               	movf	(efgtoa@u+3)^080h,w
  8512  05C9  0867               	movlb 0	; select bank0
  8513  05CA  0140               	movwf	(___flmul@b+3)
  8514  05CB  00B1               	movlb 1	; select bank1
  8515  05CC  0141               	movf	(efgtoa@u+2)^080h,w
  8516  05CD  0866               	movlb 0	; select bank0
  8517  05CE  0140               	movwf	(___flmul@b+2)
  8518  05CF  00B0               	movlb 1	; select bank1
  8519  05D0  0141               	movf	(efgtoa@u+1)^080h,w
  8520  05D1  0865               	movlb 0	; select bank0
  8521  05D2  0140               	movwf	(___flmul@b+1)
  8522  05D3  00AF               	movlb 1	; select bank1
  8523  05D4  0141               	movf	(efgtoa@u)^080h,w
  8524  05D5  0864               	movlb 0	; select bank0
  8525  05D6  0140               	movwf	(___flmul@b)
  8526  05D7  00AE               
  8527                           	fcall	___flmul
  8528  05D8  3195  2595  3180   	movlb 0	; select bank0
  8529  05DB  0140               	movf	(3+(?___flmul)),w
  8530  05DC  0831               	movwf	(___flsub@a+3)
  8531  05DD  00CB               	movf	(2+(?___flmul)),w
  8532  05DE  0830               	movwf	(___flsub@a+2)
  8533  05DF  00CA               	movf	(1+(?___flmul)),w
  8534  05E0  082F               	movwf	(___flsub@a+1)
  8535  05E1  00C9               	movf	(0+(?___flmul)),w
  8536  05E2  082E               	movwf	(___flsub@a)
  8537  05E3  00C8               
  8538                           	movlb 1	; select bank1
  8539  05E4  0141               	movf	(efgtoa@h+3)^080h,w
  8540  05E5  0855               	movlb 0	; select bank0
  8541  05E6  0140               	movwf	(___flsub@b+3)
  8542  05E7  00CF               	movlb 1	; select bank1
  8543  05E8  0141               	movf	(efgtoa@h+2)^080h,w
  8544  05E9  0854               	movlb 0	; select bank0
  8545  05EA  0140               	movwf	(___flsub@b+2)
  8546  05EB  00CE               	movlb 1	; select bank1
  8547  05EC  0141               	movf	(efgtoa@h+1)^080h,w
  8548  05ED  0853               	movlb 0	; select bank0
  8549  05EE  0140               	movwf	(___flsub@b+1)
  8550  05EF  00CD               	movlb 1	; select bank1
  8551  05F0  0141               	movf	(efgtoa@h)^080h,w
  8552  05F1  0852               	movlb 0	; select bank0
  8553  05F2  0140               	movwf	(___flsub@b)
  8554  05F3  00CC               
  8555                           	fcall	___flsub
  8556  05F4  31A7  2750  3180   	movlb 0	; select bank0
  8557  05F7  0140               	movf	(3+(?___flsub)),w
  8558  05F8  084B               	movlb 1	; select bank1
  8559  05F9  0141               	movwf	(efgtoa@h+3)^080h
  8560  05FA  00D5               	movlb 0	; select bank0
  8561  05FB  0140               	movf	(2+(?___flsub)),w
  8562  05FC  084A               	movlb 1	; select bank1
  8563  05FD  0141               	movwf	(efgtoa@h+2)^080h
  8564  05FE  00D4               	movlb 0	; select bank0
  8565  05FF  0140               	movf	(1+(?___flsub)),w
  8566  0600  0849               	movlb 1	; select bank1
  8567  0601  0141               	movwf	(efgtoa@h+1)^080h
  8568  0602  00D3               	movlb 0	; select bank0
  8569  0603  0140               	movf	(0+(?___flsub)),w
  8570  0604  0848               	movlb 1	; select bank1
  8571  0605  0141               	movwf	(efgtoa@h)^080h
  8572  0606  00D2               
  8573                           	line	466
  8574                           	
  8575                           l3972:	
  8576  0607                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 466:       
                                   u = u/10.0;
  8577                           	movlw	0x41
  8578  0607  3041               	movlb 0	; select bank0
  8579  0608  0140               	movwf	(___fldiv@a+3)
  8580  0609  00CB               	movlw	0x20
  8581  060A  3020               	movwf	(___fldiv@a+2)
  8582  060B  00CA               	movlw	0x0
  8583  060C  3000               	movwf	(___fldiv@a+1)
  8584  060D  00C9               	movlw	0x0
  8585  060E  3000               	movwf	(___fldiv@a)
  8586  060F  00C8               
  8587                           	movlb 1	; select bank1
  8588  0610  0141               	movf	(efgtoa@u+3)^080h,w
  8589  0611  0867               	movlb 0	; select bank0
  8590  0612  0140               	movwf	(___fldiv@b+3)
  8591  0613  00CF               	movlb 1	; select bank1
  8592  0614  0141               	movf	(efgtoa@u+2)^080h,w
  8593  0615  0866               	movlb 0	; select bank0
  8594  0616  0140               	movwf	(___fldiv@b+2)
  8595  0617  00CE               	movlb 1	; select bank1
  8596  0618  0141               	movf	(efgtoa@u+1)^080h,w
  8597  0619  0865               	movlb 0	; select bank0
  8598  061A  0140               	movwf	(___fldiv@b+1)
  8599  061B  00CD               	movlb 1	; select bank1
  8600  061C  0141               	movf	(efgtoa@u)^080h,w
  8601  061D  0864               	movlb 0	; select bank0
  8602  061E  0140               	movwf	(___fldiv@b)
  8603  061F  00CC               
  8604                           	fcall	___fldiv
  8605  0620  3188  2010  3180   	movlb 0	; select bank0
  8606  0623  0140               	movf	(3+(?___fldiv)),w
  8607  0624  084B               	movlb 1	; select bank1
  8608  0625  0141               	movwf	(efgtoa@u+3)^080h
  8609  0626  00E7               	movlb 0	; select bank0
  8610  0627  0140               	movf	(2+(?___fldiv)),w
  8611  0628  084A               	movlb 1	; select bank1
  8612  0629  0141               	movwf	(efgtoa@u+2)^080h
  8613  062A  00E6               	movlb 0	; select bank0
  8614  062B  0140               	movf	(1+(?___fldiv)),w
  8615  062C  0849               	movlb 1	; select bank1
  8616  062D  0141               	movwf	(efgtoa@u+1)^080h
  8617  062E  00E5               	movlb 0	; select bank0
  8618  062F  0140               	movf	(0+(?___fldiv)),w
  8619  0630  0848               	movlb 1	; select bank1
  8620  0631  0141               	movwf	(efgtoa@u)^080h
  8621  0632  00E4               
  8622                           	line	467
  8623                           	
  8624                           l3974:	
  8625  0633                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 467:       
                                   --ne;
  8626                           	movlw	0FFh
  8627  0633  30FF               	addwf	(efgtoa@ne)^080h,f
  8628  0634  07C5               	movlw	0FFh
  8629  0635  30FF               	addwfc	(efgtoa@ne+1)^080h,f
  8630  0636  3DC6               	line	468
  8631                           	
  8632                           l3976:	
  8633  0637                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 468:       
                                   ++i;
  8634                           	movlw	01h
  8635  0637  3001               	addwf	(efgtoa@i)^080h,f
  8636  0638  07DA               	movlw	0
  8637  0639  3000               	addwfc	(efgtoa@i+1)^080h,f
  8638  063A  3DDB               	goto	l3978
  8639  063B  2E3C               	line	469
  8640                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 469:     }

  8641                           	
  8642                           l445:	
  8643  063C                     	line	446
  8644                           	
  8645                           l3978:	
  8646  063C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 446:     wh
                                 ile ((i < m) && (n < (80 - 5))) {
  8647                           	movf	(efgtoa@i+1)^080h,w
  8648  063C  085B               	xorlw	80h
  8649  063D  3A80               	movlb 0	; select bank0
  8650  063E  0140               	movwf	(??_efgtoa+0)+0
  8651  063F  00EC               	movlb 1	; select bank1
  8652  0640  0141               	movf	(efgtoa@m+1)^080h,w
  8653  0641  0844               	xorlw	80h
  8654  0642  3A80               	movlb 0	; select bank0
  8655  0643  0140               	subwf	(??_efgtoa+0)+0,w
  8656  0644  026C               	skipz
  8657  0645  1D03               	goto	u5615
  8658  0646  2E4A               	movlb 1	; select bank1
  8659  0647  0141               	movf	(efgtoa@m)^080h,w
  8660  0648  0843               	subwf	(efgtoa@i)^080h,w
  8661  0649  025A               u5615:
  8662  064A                     
  8663                           	skipnc
  8664  064A  1803               	goto	u5611
  8665  064B  2E4D               	goto	u5610
  8666  064C  2E4E               u5611:
  8667  064D                     	goto	l3982
  8668  064D  2E60               u5610:
  8669  064E                     	
  8670                           l3980:	
  8671  064E                     	movlb 1	; select bank1
  8672  064E  0141               	movf	(efgtoa@n+1)^080h,w
  8673  064F  0863               	xorlw	80h
  8674  0650  3A80               	movlb 0	; select bank0
  8675  0651  0140               	movwf	(??_efgtoa+0)+0
  8676  0652  00EC               	movlw	(0)^80h
  8677  0653  3080               	subwf	(??_efgtoa+0)+0,w
  8678  0654  026C               	skipz
  8679  0655  1D03               	goto	u5625
  8680  0656  2E5A               	movlw	04Bh
  8681  0657  304B               	movlb 1	; select bank1
  8682  0658  0141               	subwf	(efgtoa@n)^080h,w
  8683  0659  0262               u5625:
  8684  065A                     
  8685                           	skipc
  8686  065A  1C03               	goto	u5621
  8687  065B  2E5D               	goto	u5620
  8688  065C  2E5E               u5621:
  8689  065D                     	goto	l3930
  8690  065D  2CE7               u5620:
  8691  065E                     	goto	l3982
  8692  065E  2E60               	
  8693                           l454:	
  8694  065F                     	goto	l3982
  8695  065F  2E60               	
  8696                           l455:	
  8697  0660                     	line	470
  8698                           	
  8699                           l3982:	
  8700  0660                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 470:     if
                                  (!pp && (flags & (1 << 4))) {
  8701                           	movlb 1	; select bank1
  8702  0660  0141               	movf	((efgtoa@pp)^080h),w
  8703  0661  0841               iorwf	((efgtoa@pp+1)^080h),w
  8704  0662  0442               	btfss	status,2
  8705  0663  1D03               	goto	u5631
  8706  0664  2E66               	goto	u5630
  8707  0665  2E67               u5631:
  8708  0666                     	goto	l3990
  8709  0666  2E7E               u5630:
  8710  0667                     	
  8711                           l3984:	
  8712  0667                     	movlb 2	; select bank2
  8713  0667  0142               	btfss	(_flags)^0100h,(4)&7
  8714  0668  1E68               	goto	u5641
  8715  0669  2E6B               	goto	u5640
  8716  066A  2E6C               u5641:
  8717  066B                     	goto	l3990
  8718  066B  2E7E               u5640:
  8719  066C                     	line	471
  8720                           	
  8721                           l3986:	
  8722  066C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 471:       
                                   dbuf[n++] = '.';
  8723                           	movlw	low(02Eh)
  8724  066C  302E               	movlb 0	; select bank0
  8725  066D  0140               	movwf	(??_efgtoa+0)+0
  8726  066E  00EC               	movlb 1	; select bank1
  8727  066F  0141               	movf	(efgtoa@n)^080h,w
  8728  0670  0862               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  8729  0671  3EA0               	movwf	fsr1l
  8730  0672  0086               	movlw 2	; select bank5/6
  8731  0673  3002               	movwf fsr1h	
  8732  0674  0087               	
  8733                           	movlb 0	; select bank0
  8734  0675  0140               	movf	(??_efgtoa+0)+0,w
  8735  0676  086C               	movwf	indf1
  8736  0677  0081               	
  8737                           l3988:	
  8738  0678                     	movlw	01h
  8739  0678  3001               	movlb 1	; select bank1
  8740  0679  0141               	addwf	(efgtoa@n)^080h,f
  8741  067A  07E2               	movlw	0
  8742  067B  3000               	addwfc	(efgtoa@n+1)^080h,f
  8743  067C  3DE3               	goto	l3990
  8744  067D  2E7E               	line	472
  8745                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 472:     }

  8746                           	
  8747                           l456:	
  8748  067E                     	line	473
  8749                           	
  8750                           l3990:	
  8751  067E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 473:     db
                                 uf[n] = '\0';
  8752                           	movlb 1	; select bank1
  8753  067E  0141               	movf	(efgtoa@n)^080h,w
  8754  067F  0862               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  8755  0680  3EA0               	movwf	fsr1l
  8756  0681  0086               	movlw 2	; select bank5/6
  8757  0682  3002               	movwf fsr1h	
  8758  0683  0087               	
  8759                           	clrf	indf1
  8760  0684  0181               	line	476
  8761                           	
  8762                           l3992:	
  8763  0685                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 476:     if
                                  (nmode == 'e') {
  8764                           		movlw	101
  8765  0685  3065               	xorwf	((efgtoa@nmode)^080h),w
  8766  0686  064E               	btfss	status,2
  8767  0687  1D03               	goto	u5651
  8768  0688  2E8A               	goto	u5650
  8769  0689  2E8B               u5651:
  8770  068A                     	goto	l4052
  8771  068A  2F8B               u5650:
  8772  068B                     	line	477
  8773                           	
  8774                           l3994:	
  8775  068B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 477:       
                                   i = sizeof(dbuf) - 1;
  8776                           	movlw	04Fh
  8777  068B  304F               	movwf	(efgtoa@i)^080h
  8778  068C  00DA               	movlw	0
  8779  068D  3000               	movwf	((efgtoa@i)^080h)+1
  8780  068E  00DB               	line	478
  8781                           	
  8782                           l3996:	
  8783  068F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 478:       
                                   dbuf[i] = '\0';
  8784                           	movf	(efgtoa@i)^080h,w
  8785  068F  085A               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  8786  0690  3EA0               	movwf	fsr1l
  8787  0691  0086               	movlw 2	; select bank5/6
  8788  0692  3002               	movwf fsr1h	
  8789  0693  0087               	
  8790                           	clrf	indf1
  8791  0694  0181               	line	479
  8792                           	
  8793                           l3998:	
  8794  0695                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 479:       
                                   sign = 0;
  8795                           	clrf	(efgtoa@sign)^080h
  8796  0695  01C9               	clrf	(efgtoa@sign+1)^080h
  8797  0696  01CA               	line	480
  8798                           	
  8799                           l4000:	
  8800  0697                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 480:       
                                   if (e < 0) {
  8801                           	btfss	(efgtoa@e+1)^080h,7
  8802  0697  1FE1               	goto	u5661
  8803  0698  2E9A               	goto	u5660
  8804  0699  2E9B               u5661:
  8805  069A                     	goto	l4006
  8806  069A  2EA5               u5660:
  8807  069B                     	line	481
  8808                           	
  8809                           l4002:	
  8810  069B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 481:       
                                       sign = 1;
  8811                           	movlw	01h
  8812  069B  3001               	movwf	(efgtoa@sign)^080h
  8813  069C  00C9               	movlw	0
  8814  069D  3000               	movwf	((efgtoa@sign)^080h)+1
  8815  069E  00CA               	line	482
  8816                           	
  8817                           l4004:	
  8818  069F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 482:       
                                       e = -e;
  8819                           	comf	(efgtoa@e)^080h,f
  8820  069F  09E0               	comf	(efgtoa@e+1)^080h,f
  8821  06A0  09E1               	incf	(efgtoa@e)^080h,f
  8822  06A1  0AE0               	skipnz
  8823  06A2  1903               	incf	(efgtoa@e+1)^080h,f
  8824  06A3  0AE1               	goto	l4006
  8825  06A4  2EA5               	line	483
  8826                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 483:       
                                   }
  8827                           	
  8828                           l458:	
  8829  06A5                     	line	484
  8830                           	
  8831                           l4006:	
  8832  06A5                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 484:       
                                   p = 2;
  8833                           	movlw	02h
  8834  06A5  3002               	movwf	(efgtoa@p)^080h
  8835  06A6  00CC               	movlw	0
  8836  06A7  3000               	movwf	((efgtoa@p)^080h)+1
  8837  06A8  00CD               	line	485
  8838                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 485:       
                                   while (e || (0 < p)) {
  8839                           	goto	l4018
  8840  06A9  2EEC               	
  8841                           l460:	
  8842  06AA                     	line	486
  8843                           	
  8844                           l4008:	
  8845  06AA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 486:       
                                       --i;
  8846                           	movlw	0FFh
  8847  06AA  30FF               	movlb 1	; select bank1
  8848  06AB  0141               	addwf	(efgtoa@i)^080h,f
  8849  06AC  07DA               	movlw	0FFh
  8850  06AD  30FF               	addwfc	(efgtoa@i+1)^080h,f
  8851  06AE  3DDB               	line	487
  8852                           	
  8853                           l4010:	
  8854  06AF                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 487:       
                                       dbuf[i] = '0' + (e % 10);
  8855                           	movlw	0Ah
  8856  06AF  300A               	movlb 0	; select bank0
  8857  06B0  0140               	movwf	(___awmod@divisor)
  8858  06B1  00A0               	movlw	0
  8859  06B2  3000               	movwf	((___awmod@divisor))+1
  8860  06B3  00A1               	movlb 1	; select bank1
  8861  06B4  0141               	movf	(efgtoa@e+1)^080h,w
  8862  06B5  0861               	movlb 0	; select bank0
  8863  06B6  0140               	movwf	(___awmod@dividend+1)
  8864  06B7  00A3               	movlb 1	; select bank1
  8865  06B8  0141               	movf	(efgtoa@e)^080h,w
  8866  06B9  0860               	movlb 0	; select bank0
  8867  06BA  0140               	movwf	(___awmod@dividend)
  8868  06BB  00A2               	fcall	___awmod
  8869  06BC  319B  23B3  3180   	movlb 0	; select bank0
  8870  06BF  0140               	movf	(0+(?___awmod)),w
  8871  06C0  0820               	addlw	030h
  8872  06C1  3E30               	movwf	(??_efgtoa+0)+0
  8873  06C2  00EC               	movlb 1	; select bank1
  8874  06C3  0141               	movf	(efgtoa@i)^080h,w
  8875  06C4  085A               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  8876  06C5  3EA0               	movwf	fsr1l
  8877  06C6  0086               	movlw 2	; select bank5/6
  8878  06C7  3002               	movwf fsr1h	
  8879  06C8  0087               	
  8880                           	movlb 0	; select bank0
  8881  06C9  0140               	movf	(??_efgtoa+0)+0,w
  8882  06CA  086C               	movwf	indf1
  8883  06CB  0081               	line	488
  8884                           	
  8885                           l4012:	
  8886  06CC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 488:       
                                       e = e / 10;
  8887                           	movlw	0Ah
  8888  06CC  300A               	movwf	(___awdiv@divisor)
  8889  06CD  00A0               	movlw	0
  8890  06CE  3000               	movwf	((___awdiv@divisor))+1
  8891  06CF  00A1               	movlb 1	; select bank1
  8892  06D0  0141               	movf	(efgtoa@e+1)^080h,w
  8893  06D1  0861               	movlb 0	; select bank0
  8894  06D2  0140               	movwf	(___awdiv@dividend+1)
  8895  06D3  00A3               	movlb 1	; select bank1
  8896  06D4  0141               	movf	(efgtoa@e)^080h,w
  8897  06D5  0860               	movlb 0	; select bank0
  8898  06D6  0140               	movwf	(___awdiv@dividend)
  8899  06D7  00A2               	fcall	___awdiv
  8900  06D8  319C  246F  3180   	movlb 0	; select bank0
  8901  06DB  0140               	movf	(1+(?___awdiv)),w
  8902  06DC  0821               	movlb 1	; select bank1
  8903  06DD  0141               	movwf	(efgtoa@e+1)^080h
  8904  06DE  00E1               	movlb 0	; select bank0
  8905  06DF  0140               	movf	(0+(?___awdiv)),w
  8906  06E0  0820               	movlb 1	; select bank1
  8907  06E1  0141               	movwf	(efgtoa@e)^080h
  8908  06E2  00E0               	line	489
  8909                           	
  8910                           l4014:	
  8911  06E3                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 489:       
                                       --p;
  8912                           	movlw	0FFh
  8913  06E3  30FF               	addwf	(efgtoa@p)^080h,f
  8914  06E4  07CC               	movlw	0FFh
  8915  06E5  30FF               	addwfc	(efgtoa@p+1)^080h,f
  8916  06E6  3DCD               	line	490
  8917                           	
  8918                           l4016:	
  8919  06E7                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 490:       
                                       --w;
  8920                           	movlw	0FFh
  8921  06E7  30FF               	addwf	(efgtoa@w)^080h,f
  8922  06E8  07CF               	movlw	0FFh
  8923  06E9  30FF               	addwfc	(efgtoa@w+1)^080h,f
  8924  06EA  3DD0               	goto	l4018
  8925  06EB  2EEC               	line	491
  8926                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 491:       
                                   }
  8927                           	
  8928                           l459:	
  8929  06EC                     	line	485
  8930                           	
  8931                           l4018:	
  8932  06EC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 485:       
                                   while (e || (0 < p)) {
  8933                           	movf	((efgtoa@e)^080h),w
  8934  06EC  0860               iorwf	((efgtoa@e+1)^080h),w
  8935  06ED  0461               	btfss	status,2
  8936  06EE  1D03               	goto	u5671
  8937  06EF  2EF1               	goto	u5670
  8938  06F0  2EF2               u5671:
  8939  06F1                     	goto	l4008
  8940  06F1  2EAA               u5670:
  8941  06F2                     	
  8942                           l4020:	
  8943  06F2                     	movf	(efgtoa@p+1)^080h,w
  8944  06F2  084D               	xorlw	80h
  8945  06F3  3A80               	movlb 0	; select bank0
  8946  06F4  0140               	movwf	(??_efgtoa+0)+0
  8947  06F5  00EC               	movlw	(0)^80h
  8948  06F6  3080               	subwf	(??_efgtoa+0)+0,w
  8949  06F7  026C               	skipz
  8950  06F8  1D03               	goto	u5685
  8951  06F9  2EFD               	movlw	01h
  8952  06FA  3001               	movlb 1	; select bank1
  8953  06FB  0141               	subwf	(efgtoa@p)^080h,w
  8954  06FC  024C               u5685:
  8955  06FD                     
  8956                           	skipnc
  8957  06FD  1803               	goto	u5681
  8958  06FE  2F00               	goto	u5680
  8959  06FF  2F01               u5681:
  8960  0700                     	goto	l4008
  8961  0700  2EAA               u5680:
  8962  0701                     	goto	l4022
  8963  0701  2F02               	
  8964                           l461:	
  8965  0702                     	line	492
  8966                           	
  8967                           l4022:	
  8968  0702                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 492:       
                                   --i;
  8969                           	movlw	0FFh
  8970  0702  30FF               	movlb 1	; select bank1
  8971  0703  0141               	addwf	(efgtoa@i)^080h,f
  8972  0704  07DA               	movlw	0FFh
  8973  0705  30FF               	addwfc	(efgtoa@i+1)^080h,f
  8974  0706  3DDB               	line	493
  8975                           	
  8976                           l4024:	
  8977  0707                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 493:       
                                   dbuf[i] = sign ? '-' : '+';
  8978                           	movf	((efgtoa@sign)^080h),w
  8979  0707  0849               iorwf	((efgtoa@sign+1)^080h),w
  8980  0708  044A               	btfss	status,2
  8981  0709  1D03               	goto	u5691
  8982  070A  2F0C               	goto	u5690
  8983  070B  2F0D               u5691:
  8984  070C                     	goto	l4028
  8985  070C  2F12               u5690:
  8986  070D                     	
  8987                           l4026:	
  8988  070D                     	movlw	02Bh
  8989  070D  302B               	movwf	(_efgtoa$844)^080h
  8990  070E  00B9               	movlw	0
  8991  070F  3000               	movwf	((_efgtoa$844)^080h)+1
  8992  0710  00BA               	goto	l4030
  8993  0711  2F17               	
  8994                           l463:	
  8995  0712                     	
  8996                           l4028:	
  8997  0712                     	movlw	02Dh
  8998  0712  302D               	movwf	(_efgtoa$844)^080h
  8999  0713  00B9               	movlw	0
  9000  0714  3000               	movwf	((_efgtoa$844)^080h)+1
  9001  0715  00BA               	goto	l4030
  9002  0716  2F17               	
  9003                           l465:	
  9004  0717                     	
  9005                           l4030:	
  9006  0717                     	movf	(_efgtoa$844)^080h,w
  9007  0717  0839               	movlb 0	; select bank0
  9008  0718  0140               	movwf	(??_efgtoa+0)+0
  9009  0719  00EC               	movlb 1	; select bank1
  9010  071A  0141               	movf	(efgtoa@i)^080h,w
  9011  071B  085A               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  9012  071C  3EA0               	movwf	fsr1l
  9013  071D  0086               	movlw 2	; select bank5/6
  9014  071E  3002               	movwf fsr1h	
  9015  071F  0087               	
  9016                           	movlb 0	; select bank0
  9017  0720  0140               	movf	(??_efgtoa+0)+0,w
  9018  0721  086C               	movwf	indf1
  9019  0722  0081               	line	494
  9020                           	
  9021                           l4032:	
  9022  0723                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 494:       
                                   --w;
  9023                           	movlw	0FFh
  9024  0723  30FF               	movlb 1	; select bank1
  9025  0724  0141               	addwf	(efgtoa@w)^080h,f
  9026  0725  07CF               	movlw	0FFh
  9027  0726  30FF               	addwfc	(efgtoa@w+1)^080h,f
  9028  0727  3DD0               	line	495
  9029                           	
  9030                           l4034:	
  9031  0728                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 496:       
                                   dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  9032                           	movlw	0FFh
  9033  0728  30FF               	addwf	(efgtoa@i)^080h,f
  9034  0729  07DA               	movlw	0FFh
  9035  072A  30FF               	addwfc	(efgtoa@i+1)^080h,f
  9036  072B  3DDB               	line	496
  9037                           	
  9038                           l4036:	
  9039  072C                     	movf	(efgtoa@c)^080h,w
  9040  072C  082E               	addlw	low(0FFBFh)
  9041  072D  3EBF               	movlb 0	; select bank0
  9042  072E  0140               	movwf	(??_efgtoa+0)+0
  9043  072F  00EC               	movlw	high(0FFBFh)
  9044  0730  30FF               	skipnc
  9045  0731  1803               	movlw	(high(0FFBFh)+1)&0ffh
  9046  0732  3000               	movwf	((??_efgtoa+0)+0)+1
  9047  0733  00ED               	movlw	0
  9048  0734  3000               	subwf	1+(??_efgtoa+0)+0,w
  9049  0735  026D               	movlw	01Ah
  9050  0736  301A               	skipnz
  9051  0737  1903               	subwf	0+(??_efgtoa+0)+0,w
  9052  0738  026C               	skipc
  9053  0739  1C03               	goto	u5701
  9054  073A  2F3C               	goto	u5700
  9055  073B  2F3E               u5701:
  9056  073C                     	movlw	1
  9057  073C  3001               	goto	u5710
  9058  073D  2F3F               u5700:
  9059  073E                     	movlw	0
  9060  073E  3000               u5710:
  9061  073F                     	movwf	(??_efgtoa+2)+0
  9062  073F  00EE               	clrf	(??_efgtoa+2)+0+1
  9063  0740  01EF               	movf	0+(??_efgtoa+2)+0,w
  9064  0741  086E               	movlb 1	; select bank1
  9065  0742  0141               	movwf	(_efgtoa$846)^080h
  9066  0743  00BD               	movlb 0	; select bank0
  9067  0744  0140               	movf	1+(??_efgtoa+2)+0,w
  9068  0745  086F               	movlb 1	; select bank1
  9069  0746  0141               	movwf	(_efgtoa$846+1)^080h
  9070  0747  00BE               	goto	l4040
  9071  0748  2F5D               	
  9072                           l471:	
  9073  0749                     	
  9074                           l4038:	
  9075  0749                     	movf	(efgtoa@c)^080h,w
  9076  0749  082E               	movlb 0	; select bank0
  9077  074A  0140               	movwf	(??_efgtoa+0)+0
  9078  074B  00EC               	clrf	(??_efgtoa+0)+0+1
  9079  074C  01ED               	movf	0+(??_efgtoa+0)+0,w
  9080  074D  086C               	movwf	(isupper@c)
  9081  074E  00A0               	movf	1+(??_efgtoa+0)+0,w
  9082  074F  086D               	movwf	(isupper@c+1)
  9083  0750  00A1               	fcall	_isupper
  9084  0751  31A7  2736  3180   	movlb 0	; select bank0
  9085  0754  0140               	movf	(1+(?_isupper)),w
  9086  0755  0821               	movlb 1	; select bank1
  9087  0756  0141               	movwf	(_efgtoa$846+1)^080h
  9088  0757  00BE               	movlb 0	; select bank0
  9089  0758  0140               	movf	(0+(?_isupper)),w
  9090  0759  0820               	movlb 1	; select bank1
  9091  075A  0141               	movwf	(_efgtoa$846)^080h
  9092  075B  00BD               	goto	l4040
  9093  075C  2F5D               	
  9094                           l473:	
  9095  075D                     	
  9096                           l4040:	
  9097  075D                     	movf	((_efgtoa$846)^080h),w
  9098  075D  083D               iorwf	((_efgtoa$846+1)^080h),w
  9099  075E  043E               	btfss	status,2
  9100  075F  1D03               	goto	u5721
  9101  0760  2F62               	goto	u5720
  9102  0761  2F63               u5721:
  9103  0762                     	goto	l4044
  9104  0762  2F68               u5720:
  9105  0763                     	
  9106                           l4042:	
  9107  0763                     	movlw	065h
  9108  0763  3065               	movwf	(_efgtoa$845)^080h
  9109  0764  00BB               	movlw	0
  9110  0765  3000               	movwf	((_efgtoa$845)^080h)+1
  9111  0766  00BC               	goto	l4046
  9112  0767  2F6D               	
  9113                           l467:	
  9114  0768                     	
  9115                           l4044:	
  9116  0768                     	movlw	045h
  9117  0768  3045               	movwf	(_efgtoa$845)^080h
  9118  0769  00BB               	movlw	0
  9119  076A  3000               	movwf	((_efgtoa$845)^080h)+1
  9120  076B  00BC               	goto	l4046
  9121  076C  2F6D               	
  9122                           l469:	
  9123  076D                     	
  9124                           l4046:	
  9125  076D                     	movf	(_efgtoa$845)^080h,w
  9126  076D  083B               	movlb 0	; select bank0
  9127  076E  0140               	movwf	(??_efgtoa+0)+0
  9128  076F  00EC               	movlb 1	; select bank1
  9129  0770  0141               	movf	(efgtoa@i)^080h,w
  9130  0771  085A               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  9131  0772  3EA0               	movwf	fsr1l
  9132  0773  0086               	movlw 2	; select bank5/6
  9133  0774  3002               	movwf fsr1h	
  9134  0775  0087               	
  9135                           	movlb 0	; select bank0
  9136  0776  0140               	movf	(??_efgtoa+0)+0,w
  9137  0777  086C               	movwf	indf1
  9138  0778  0081               	line	497
  9139                           	
  9140                           l4048:	
  9141  0779                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 497:       
                                   --w;
  9142                           	movlw	0FFh
  9143  0779  30FF               	movlb 1	; select bank1
  9144  077A  0141               	addwf	(efgtoa@w)^080h,f
  9145  077B  07CF               	movlw	0FFh
  9146  077C  30FF               	addwfc	(efgtoa@w+1)^080h,f
  9147  077D  3DD0               	line	498
  9148                           	
  9149                           l4050:	
  9150  077E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 498:       
                                   strcpy(&dbuf[n], &dbuf[i]);
  9151                           	movf	(efgtoa@i)^080h,w
  9152  077E  085A               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  9153  077F  3EA0               	movlb 0	; select bank0
  9154  0780  0140               	movwf	(strcpy@src)
  9155  0781  00A0               	movlw	0x2
  9156  0782  3002               
  9157                           	movwf	(strcpy@src+1)
  9158  0783  00A1               	movlb 1	; select bank1
  9159  0784  0141               	movf	(efgtoa@n)^080h,w
  9160  0785  0862               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  9161  0786  3EA0               	fcall	_strcpy
  9162  0787  31A7  27DB  3180   	goto	l4052
  9163  078A  2F8B               	line	499
  9164                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 499:     }

  9165                           	
  9166                           l457:	
  9167  078B                     	line	502
  9168                           	
  9169                           l4052:	
  9170  078B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 502:     re
                                 turn pad(fp, &dbuf[0], w);
  9171                           	movlw	(low(_dbuf|((0x2)<<8)))&0ffh
  9172  078B  30A0               	movlb 0	; select bank0
  9173  078C  0140               	movwf	(??_efgtoa+0)+0
  9174  078D  00EC               	movf	(??_efgtoa+0)+0,w
  9175  078E  086C               	movwf	(pad@buf)
  9176  078F  00B0               	movlb 1	; select bank1
  9177  0790  0141               	movf	(efgtoa@w+1)^080h,w
  9178  0791  0850               	movlb 0	; select bank0
  9179  0792  0140               	movwf	(pad@p+1)
  9180  0793  00B2               	movlb 1	; select bank1
  9181  0794  0141               	movf	(efgtoa@w)^080h,w
  9182  0795  084F               	movlb 0	; select bank0
  9183  0796  0140               	movwf	(pad@p)
  9184  0797  00B1               	movlb 1	; select bank1
  9185  0798  0141               	movf	(efgtoa@fp)^080h,w
  9186  0799  084B               	fcall	_pad
  9187  079A  319B  2356  3180   	movlb 0	; select bank0
  9188  079D  0140               	movf	(1+(?_pad)),w
  9189  079E  0831               	movlb 1	; select bank1
  9190  079F  0141               	movwf	(?_efgtoa+1)^080h
  9191  07A0  00AB               	movlb 0	; select bank0
  9192  07A1  0140               	movf	(0+(?_pad)),w
  9193  07A2  0830               	movlb 1	; select bank1
  9194  07A3  0141               	movwf	(?_efgtoa)^080h
  9195  07A4  00AA               	goto	l400
  9196  07A5  2FA6               	
  9197                           l4054:	
  9198  07A6                     	line	503
  9199                           	
  9200                           l400:	
  9201  07A6                     	return
  9202  07A6  0008               	opt stack 0
  9203                           GLOBAL	__end_of_efgtoa
  9204                           	__end_of_efgtoa:
  9205  07A7                     	signat	_efgtoa,12410
  9206                           	global	_tolower
  9207                           
  9208 ;; *************** function _tolower *****************
  9209 ;; Defined at:
  9210 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\tolower.c"
  9211 ;; Parameters:    Size  Location     Type
  9212 ;;  c               2    6[BANK0 ] int 
  9213 ;; Auto vars:     Size  Location     Type
  9214 ;;		None
  9215 ;; Return value:  Size  Location     Type
  9216 ;;                  2    6[BANK0 ] int 
  9217 ;; Registers used:
  9218 ;;		wreg, status,2, status,0, pclath, cstack
  9219 ;; Tracked objects:
  9220 ;;		On entry : 0/0
  9221 ;;		On exit  : 0/0
  9222 ;;		Unchanged: 0/0
  9223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9224 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9225 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9226 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9227 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9228 ;;Total ram usage:        8 bytes
  9229 ;; Hardware stack levels used:    1
  9230 ;; Hardware stack levels required when called:    4
  9231 ;; This function calls:
  9232 ;;		_isupper
  9233 ;; This function is called by:
  9234 ;;		_efgtoa
  9235 ;;		_vfpfcnvrt
  9236 ;; This function uses a non-reentrant model
  9237 ;;
  9238                           psect	text8,local,class=CODE,delta=2,merge=1,group=2
  9239                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\tolower.c"
  9240                           	line	4
  9241                           global __ptext8
  9242                           __ptext8:	;psect for function _tolower
  9243  18F3                     psect	text8
  9244                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\tolower.c"
  9245                           	line	4
  9246                           	global	__size_of_tolower
  9247                           	__size_of_tolower	equ	__end_of_tolower-_tolower
  9248  0035                     	
  9249                           _tolower:	
  9250  18F3                     ;incstack = 0
  9251                           	opt	stack 7
  9252                           ; Regs used in _tolower: [wreg+status,2+status,0+pclath+cstack]
  9253                           	line	6
  9254                           	
  9255                           l3222:	
  9256  18F3                     	movlb 0	; select bank0
  9257  18F3  0140               	movf	(tolower@c),w
  9258  18F4  0826               	addlw	0BFh
  9259  18F5  3EBF               	movwf	(??_tolower+0)+0
  9260  18F6  00A8               	movlw	0FFh
  9261  18F7  30FF               	addwfc	(tolower@c+1),w
  9262  18F8  3D27               	movwf	1+(??_tolower+0)+0
  9263  18F9  00A9               	movlw	0
  9264  18FA  3000               	subwf	1+(??_tolower+0)+0,w
  9265  18FB  0229               	movlw	01Ah
  9266  18FC  301A               	skipnz
  9267  18FD  1903               	subwf	0+(??_tolower+0)+0,w
  9268  18FE  0228               	skipc
  9269  18FF  1C03               	goto	u4041
  9270  1900  2902               	goto	u4040
  9271  1901  2904               u4041:
  9272  1902                     	movlw	1
  9273  1902  3001               	goto	u4050
  9274  1903  2905               u4040:
  9275  1904                     	movlw	0
  9276  1904  3000               u4050:
  9277  1905                     	movwf	(??_tolower+2)+0
  9278  1905  00AA               	clrf	(??_tolower+2)+0+1
  9279  1906  01AB               	movf	0+(??_tolower+2)+0,w
  9280  1907  082A               	movwf	(_tolower$1291)
  9281  1908  00AC               	movf	1+(??_tolower+2)+0,w
  9282  1909  082B               	movwf	(_tolower$1291+1)
  9283  190A  00AD               	goto	l3226
  9284  190B  2919               	
  9285                           l1092:	
  9286  190C                     	
  9287                           l3224:	
  9288  190C                     	movf	(tolower@c+1),w
  9289  190C  0827               	movwf	(isupper@c+1)
  9290  190D  00A1               	movf	(tolower@c),w
  9291  190E  0826               	movwf	(isupper@c)
  9292  190F  00A0               	fcall	_isupper
  9293  1910  31A7  2736  3198   	movlb 0	; select bank0
  9294  1913  0140               	movf	(1+(?_isupper)),w
  9295  1914  0821               	movwf	(_tolower$1291+1)
  9296  1915  00AD               	movf	(0+(?_isupper)),w
  9297  1916  0820               	movwf	(_tolower$1291)
  9298  1917  00AC               	goto	l3226
  9299  1918  2919               	
  9300                           l1094:	
  9301  1919                     	
  9302                           l3226:	
  9303  1919                     	movf	((_tolower$1291)),w
  9304  1919  082C               iorwf	((_tolower$1291+1)),w
  9305  191A  042D               	btfsc	status,2
  9306  191B  1903               	goto	u4061
  9307  191C  291E               	goto	u4060
  9308  191D  291F               u4061:
  9309  191E                     	goto	l1090
  9310  191E  2927               u4060:
  9311  191F                     	
  9312                           l3228:	
  9313  191F                     	movlw	020h
  9314  191F  3020               	iorwf	(tolower@c),w
  9315  1920  0426               	movwf	(?_tolower)
  9316  1921  00A6               	movlw	0
  9317  1922  3000               	iorwf	(tolower@c+1),w
  9318  1923  0427               	movwf	1+(?_tolower)
  9319  1924  00A7               	goto	l1095
  9320  1925  2927               	
  9321                           l3230:	
  9322  1926                     	goto	l1095
  9323  1926  2927               	
  9324                           l1090:	
  9325  1927                     	line	7
  9326                           	line	8
  9327                           	
  9328                           l1095:	
  9329  1927                     	return
  9330  1927  0008               	opt stack 0
  9331                           GLOBAL	__end_of_tolower
  9332                           	__end_of_tolower:
  9333  1928                     	signat	_tolower,4218
  9334                           	global	_isupper
  9335                           
  9336 ;; *************** function _isupper *****************
  9337 ;; Defined at:
  9338 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isupper.c"
  9339 ;; Parameters:    Size  Location     Type
  9340 ;;  c               2    0[BANK0 ] int 
  9341 ;; Auto vars:     Size  Location     Type
  9342 ;;		None
  9343 ;; Return value:  Size  Location     Type
  9344 ;;                  2    0[BANK0 ] int 
  9345 ;; Registers used:
  9346 ;;		wreg, status,2, status,0
  9347 ;; Tracked objects:
  9348 ;;		On entry : 0/0
  9349 ;;		On exit  : 0/0
  9350 ;;		Unchanged: 0/0
  9351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9352 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9354 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9355 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9356 ;;Total ram usage:        6 bytes
  9357 ;; Hardware stack levels used:    1
  9358 ;; Hardware stack levels required when called:    3
  9359 ;; This function calls:
  9360 ;;		Nothing
  9361 ;; This function is called by:
  9362 ;;		_efgtoa
  9363 ;;		_vfpfcnvrt
  9364 ;;		_tolower
  9365 ;; This function uses a non-reentrant model
  9366 ;;
  9367                           psect	text9,local,class=CODE,delta=2,merge=1,group=2
  9368                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isupper.c"
  9369                           	line	5
  9370                           global __ptext9
  9371                           __ptext9:	;psect for function _isupper
  9372  2736                     psect	text9
  9373                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isupper.c"
  9374                           	line	5
  9375                           	global	__size_of_isupper
  9376                           	__size_of_isupper	equ	__end_of_isupper-_isupper
  9377  001A                     	
  9378                           _isupper:	
  9379  2736                     ;incstack = 0
  9380                           	opt	stack 7
  9381                           ; Regs used in _isupper: [wreg+status,2+status,0]
  9382                           	line	7
  9383                           	
  9384                           l2954:	
  9385  2736                     	movlb 0	; select bank0
  9386  2736  0140               	movf	(isupper@c),w
  9387  2737  0820               	addlw	0BFh
  9388  2738  3EBF               	movwf	(??_isupper+0)+0
  9389  2739  00A2               	movlw	0FFh
  9390  273A  30FF               	addwfc	(isupper@c+1),w
  9391  273B  3D21               	movwf	1+(??_isupper+0)+0
  9392  273C  00A3               	movlw	0
  9393  273D  3000               	subwf	1+(??_isupper+0)+0,w
  9394  273E  0223               	movlw	01Ah
  9395  273F  301A               	skipnz
  9396  2740  1903               	subwf	0+(??_isupper+0)+0,w
  9397  2741  0222               	skipc
  9398  2742  1C03               	goto	u3401
  9399  2743  2F45               	goto	u3400
  9400  2744  2F47               u3401:
  9401  2745                     	movlw	1
  9402  2745  3001               	goto	u3410
  9403  2746  2F48               u3400:
  9404  2747                     	movlw	0
  9405  2747  3000               u3410:
  9406  2748                     	movwf	(??_isupper+2)+0
  9407  2748  00A4               	clrf	(??_isupper+2)+0+1
  9408  2749  01A5               	movf	0+(??_isupper+2)+0,w
  9409  274A  0824               	movwf	(?_isupper)
  9410  274B  00A0               	movf	1+(??_isupper+2)+0,w
  9411  274C  0825               	movwf	(?_isupper+1)
  9412  274D  00A1               	goto	l1021
  9413  274E  2F4F               	
  9414                           l2956:	
  9415  274F                     	line	8
  9416                           	
  9417                           l1021:	
  9418  274F                     	return
  9419  274F  0008               	opt stack 0
  9420                           GLOBAL	__end_of_isupper
  9421                           	__end_of_isupper:
  9422  2750                     	signat	_isupper,4218
  9423                           	global	_strcpy
  9424                           
  9425 ;; *************** function _strcpy *****************
  9426 ;; Defined at:
  9427 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  9428 ;; Parameters:    Size  Location     Type
  9429 ;;  dest            1    wreg     PTR unsigned char 
  9430 ;;		 -> dbuf(80), 
  9431 ;;  src             2    0[BANK0 ] PTR const unsigned char 
  9432 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  9433 ;;		 -> dbuf(80), 
  9434 ;; Auto vars:     Size  Location     Type
  9435 ;;  dest            1    7[BANK0 ] PTR unsigned char 
  9436 ;;		 -> dbuf(80), 
  9437 ;;  s               2    4[BANK0 ] PTR const unsigned char 
  9438 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  9439 ;;		 -> dbuf(80), 
  9440 ;;  d               1    6[BANK0 ] PTR unsigned char 
  9441 ;;		 -> dbuf(80), 
  9442 ;; Return value:  Size  Location     Type
  9443 ;;                  1    wreg      PTR unsigned char 
  9444 ;; Registers used:
  9445 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  9446 ;; Tracked objects:
  9447 ;;		On entry : 0/0
  9448 ;;		On exit  : 0/0
  9449 ;;		Unchanged: 0/0
  9450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9451 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9452 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9453 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9454 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9455 ;;Total ram usage:        8 bytes
  9456 ;; Hardware stack levels used:    1
  9457 ;; Hardware stack levels required when called:    3
  9458 ;; This function calls:
  9459 ;;		Nothing
  9460 ;; This function is called by:
  9461 ;;		_efgtoa
  9462 ;; This function uses a non-reentrant model
  9463 ;;
  9464                           psect	text10,local,class=CODE,delta=2,merge=1,group=2
  9465                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  9466                           	line	7
  9467                           global __ptext10
  9468                           __ptext10:	;psect for function _strcpy
  9469  27DB                     psect	text10
  9470                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  9471                           	line	7
  9472                           	global	__size_of_strcpy
  9473                           	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
  9474  0025                     	
  9475                           _strcpy:	
  9476  27DB                     ;incstack = 0
  9477                           	opt	stack 7
  9478                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  9479                           ;strcpy@dest stored from wreg
  9480                           	movlb 0	; select bank0
  9481  27DB  0140               	movwf	(strcpy@dest)
  9482  27DC  00A7               	line	13
  9483                           	
  9484                           l3218:	
  9485  27DD                     	movf	(strcpy@src+1),w
  9486  27DD  0821               	movwf	(strcpy@s+1)
  9487  27DE  00A5               	movf	(strcpy@src),w
  9488  27DF  0820               	movwf	(strcpy@s)
  9489  27E0  00A4               	line	14
  9490                           	movf	(strcpy@dest),w
  9491  27E1  0827               	movwf	(??_strcpy+0)+0
  9492  27E2  00A2               	movf	(??_strcpy+0)+0,w
  9493  27E3  0822               	movwf	(strcpy@d)
  9494  27E4  00A6               	line	15
  9495                           	goto	l3220
  9496  27E5  2FE7               	
  9497                           l1058:	
  9498  27E6                     	goto	l3220
  9499  27E6  2FE7               	
  9500                           l1057:	
  9501  27E7                     	
  9502                           l3220:	
  9503  27E7                     	movf	(strcpy@d),w
  9504  27E7  0826               	movwf	fsr1l
  9505  27E8  0086               	movlw 2	; select bank4/5
  9506  27E9  3002               	movwf fsr1h	
  9507  27EA  0087               	
  9508                           	incf	(strcpy@d),f
  9509  27EB  0AA6               	movf	(strcpy@s+1),w
  9510  27EC  0825               	movwf	(??_strcpy+0)+0+1
  9511  27ED  00A3               	movf	(strcpy@s),w
  9512  27EE  0824               	movwf	(??_strcpy+0)+0
  9513  27EF  00A2               	incf	(strcpy@s),f
  9514  27F0  0AA4               	skipnz
  9515  27F1  1903               	incf	(strcpy@s+1),f
  9516  27F2  0AA5               	movf	0+(??_strcpy+0)+0,w
  9517  27F3  0822               	movwf	fsr0l
  9518  27F4  0084               	movf	(1+(??_strcpy+0)+0),w
  9519  27F5  0823               	movwf	fsr0h
  9520  27F6  0085               	movf	indf0,w ;code access
  9521  27F7  0800               	movwi	[0]fsr1
  9522  27F8  3FC0               	movf	wreg
  9523  27F9  0889               	btfss	status,2
  9524  27FA  1D03               	goto	u4031
  9525  27FB  2FFD               	goto	u4030
  9526  27FC  2FFE               u4031:
  9527  27FD                     	goto	l3220
  9528  27FD  2FE7               u4030:
  9529  27FE                     	goto	l1060
  9530  27FE  2FFF               	
  9531                           l1059:	
  9532  27FF                     	line	18
  9533                           ;	Return value of _strcpy is never used
  9534                           	
  9535                           l1060:	
  9536  27FF                     	return
  9537  27FF  0008               	opt stack 0
  9538                           GLOBAL	__end_of_strcpy
  9539                           	__end_of_strcpy:
  9540  2800                     	signat	_strcpy,8313
  9541                           	global	_pad
  9542                           
  9543 ;; *************** function _pad *****************
  9544 ;; Defined at:
  9545 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  9546 ;; Parameters:    Size  Location     Type
  9547 ;;  fp              1    wreg     PTR struct _IO_FILE
  9548 ;;		 -> sprintf@f(5), 
  9549 ;;  buf             1   16[BANK0 ] PTR unsigned char 
  9550 ;;		 -> dbuf(80), 
  9551 ;;  p               2   17[BANK0 ] int 
  9552 ;; Auto vars:     Size  Location     Type
  9553 ;;  fp              1   24[BANK0 ] PTR struct _IO_FILE
  9554 ;;		 -> sprintf@f(5), 
  9555 ;;  w               2   22[BANK0 ] int 
  9556 ;;  i               2   20[BANK0 ] int 
  9557 ;; Return value:  Size  Location     Type
  9558 ;;                  2   16[BANK0 ] int 
  9559 ;; Registers used:
  9560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9561 ;; Tracked objects:
  9562 ;;		On entry : 0/0
  9563 ;;		On exit  : 0/0
  9564 ;;		Unchanged: 0/0
  9565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9566 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9567 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9568 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9569 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9570 ;;Total ram usage:        9 bytes
  9571 ;; Hardware stack levels used:    1
  9572 ;; Hardware stack levels required when called:    6
  9573 ;; This function calls:
  9574 ;;		_fputc
  9575 ;;		_fputs
  9576 ;;		_strlen
  9577 ;; This function is called by:
  9578 ;;		_efgtoa
  9579 ;; This function uses a non-reentrant model
  9580 ;;
  9581                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  9582                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  9583                           	line	72
  9584                           global __ptext11
  9585                           __ptext11:	;psect for function _pad
  9586  1B56                     psect	text11
  9587                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  9588                           	line	72
  9589                           	global	__size_of_pad
  9590                           	__size_of_pad	equ	__end_of_pad-_pad
  9591  005D                     	
  9592                           _pad:	
  9593  1B56                     ;incstack = 0
  9594                           	opt	stack 4
  9595                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9596                           ;pad@fp stored from wreg
  9597                           	movlb 0	; select bank0
  9598  1B56  0140               	movwf	(pad@fp)
  9599  1B57  00B8               	line	77
  9600                           	
  9601                           l3172:	
  9602  1B58                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 72: static 
                                 int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
                                 es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99
                                 \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
                                 es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  9603                           	movlb 2	; select bank2
  9604  1B58  0142               	btfss	(_flags)^0100h,(0)&7
  9605  1B59  1C68               	goto	u3911
  9606  1B5A  2B5C               	goto	u3910
  9607  1B5B  2B5D               u3911:
  9608  1B5C                     	goto	l3176
  9609  1B5C  2B67               u3910:
  9610  1B5D                     	line	78
  9611                           	
  9612                           l3174:	
  9613  1B5D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 78:        
                                  fputs((const char *)buf, fp);
  9614                           	movlb 0	; select bank0
  9615  1B5D  0140               	movf	(pad@fp),w
  9616  1B5E  0838               	movwf	(??_pad+0)+0
  9617  1B5F  00B3               	movf	(??_pad+0)+0,w
  9618  1B60  0833               	movwf	(fputs@fp)
  9619  1B61  00A8               	movf	(pad@buf),w
  9620  1B62  0830               	fcall	_fputs
  9621  1B63  3198  2037  319B   	goto	l3176
  9622  1B66  2B67               	line	79
  9623                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 79:     }
  9624                           	
  9625                           l373:	
  9626  1B67                     	line	82
  9627                           	
  9628                           l3176:	
  9629  1B67                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 82:     w =
                                  (p < 0) ? 0 : p;
  9630                           	movlb 0	; select bank0
  9631  1B67  0140               	btfsc	(pad@p+1),7
  9632  1B68  1BB2               	goto	u3921
  9633  1B69  2B6B               	goto	u3920
  9634  1B6A  2B6C               u3921:
  9635  1B6B                     	goto	l3180
  9636  1B6B  2B71               u3920:
  9637  1B6C                     	
  9638                           l3178:	
  9639  1B6C                     	movf	(pad@p+1),w
  9640  1B6C  0832               	movwf	(pad@w+1)
  9641  1B6D  00B7               	movf	(pad@p),w
  9642  1B6E  0831               	movwf	(pad@w)
  9643  1B6F  00B6               	goto	l377
  9644  1B70  2B73               	
  9645                           l375:	
  9646  1B71                     	
  9647                           l3180:	
  9648  1B71                     	clrf	(pad@w)
  9649  1B71  01B6               	clrf	(pad@w+1)
  9650  1B72  01B7               	
  9651                           l377:	
  9652  1B73                     	line	83
  9653                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 83:     i =
                                  0;
  9654                           	clrf	(pad@i)
  9655  1B73  01B4               	clrf	(pad@i+1)
  9656  1B74  01B5               	line	84
  9657                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
                                 le (i < w) {
  9658                           	goto	l3186
  9659  1B75  2B88               	
  9660                           l379:	
  9661  1B76                     	line	85
  9662                           	
  9663                           l3182:	
  9664  1B76                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 85:        
                                  fputc(' ', fp);
  9665                           	movlw	020h
  9666  1B76  3020               	movlb 0	; select bank0
  9667  1B77  0140               	movwf	(fputc@c)
  9668  1B78  00A0               	movlw	0
  9669  1B79  3000               	movwf	((fputc@c))+1
  9670  1B7A  00A1               	movf	(pad@fp),w
  9671  1B7B  0838               	movwf	(??_pad+0)+0
  9672  1B7C  00B3               	movf	(??_pad+0)+0,w
  9673  1B7D  0833               	movwf	(fputc@fp)
  9674  1B7E  00A2               	fcall	_fputc
  9675  1B7F  319C  2411  319B   	line	86
  9676                           	
  9677                           l3184:	
  9678  1B82                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 86:        
                                  ++i;
  9679                           	movlw	01h
  9680  1B82  3001               	movlb 0	; select bank0
  9681  1B83  0140               	addwf	(pad@i),f
  9682  1B84  07B4               	movlw	0
  9683  1B85  3000               	addwfc	(pad@i+1),f
  9684  1B86  3DB5               	goto	l3186
  9685  1B87  2B88               	line	87
  9686                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 87:     }
  9687                           	
  9688                           l378:	
  9689  1B88                     	line	84
  9690                           	
  9691                           l3186:	
  9692  1B88                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
                                 le (i < w) {
  9693                           	movf	(pad@i+1),w
  9694  1B88  0835               	xorlw	80h
  9695  1B89  3A80               	movwf	(??_pad+0)+0
  9696  1B8A  00B3               	movf	(pad@w+1),w
  9697  1B8B  0837               	xorlw	80h
  9698  1B8C  3A80               	subwf	(??_pad+0)+0,w
  9699  1B8D  0233               	skipz
  9700  1B8E  1D03               	goto	u3935
  9701  1B8F  2B92               	movf	(pad@w),w
  9702  1B90  0836               	subwf	(pad@i),w
  9703  1B91  0234               u3935:
  9704  1B92                     
  9705                           	skipc
  9706  1B92  1C03               	goto	u3931
  9707  1B93  2B95               	goto	u3930
  9708  1B94  2B96               u3931:
  9709  1B95                     	goto	l3182
  9710  1B95  2B76               u3930:
  9711  1B96                     	
  9712                           l380:	
  9713  1B96                     	line	90
  9714                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 90:     if 
                                 (!(flags & (1 << 0))) {
  9715                           	movlb 2	; select bank2
  9716  1B96  0142               	btfsc	(_flags)^0100h,(0)&7
  9717  1B97  1868               	goto	u3941
  9718  1B98  2B9A               	goto	u3940
  9719  1B99  2B9B               u3941:
  9720  1B9A                     	goto	l3190
  9721  1B9A  2BA5               u3940:
  9722  1B9B                     	line	91
  9723                           	
  9724                           l3188:	
  9725  1B9B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 91:        
                                  fputs((const char *)buf, fp);
  9726                           	movlb 0	; select bank0
  9727  1B9B  0140               	movf	(pad@fp),w
  9728  1B9C  0838               	movwf	(??_pad+0)+0
  9729  1B9D  00B3               	movf	(??_pad+0)+0,w
  9730  1B9E  0833               	movwf	(fputs@fp)
  9731  1B9F  00A8               	movf	(pad@buf),w
  9732  1BA0  0830               	fcall	_fputs
  9733  1BA1  3198  2037  319B   	goto	l3190
  9734  1BA4  2BA5               	line	92
  9735                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 92:     }
  9736                           	
  9737                           l381:	
  9738  1BA5                     	line	94
  9739                           	
  9740                           l3190:	
  9741  1BA5                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 94:     ret
                                 urn strlen(buf) + w;
  9742                           	movlb 0	; select bank0
  9743  1BA5  0140               	movf	(pad@buf),w
  9744  1BA6  0830               	fcall	_strlen
  9745  1BA7  3198  2062  319B   	movlb 0	; select bank0
  9746  1BAA  0140               	movf	(pad@w),w
  9747  1BAB  0836               	addwf	(0+(?_strlen)),w
  9748  1BAC  0720               	movwf	(?_pad)
  9749  1BAD  00B0               	movf	(pad@w+1),w
  9750  1BAE  0837               	addwfc	(1+(?_strlen)),w
  9751  1BAF  3D21               	movwf	1+(?_pad)
  9752  1BB0  00B1               	goto	l382
  9753  1BB1  2BB2               	
  9754                           l3192:	
  9755  1BB2                     	line	95
  9756                           	
  9757                           l382:	
  9758  1BB2                     	return
  9759  1BB2  0008               	opt stack 0
  9760                           GLOBAL	__end_of_pad
  9761                           	__end_of_pad:
  9762  1BB3                     	signat	_pad,12410
  9763                           	global	_strlen
  9764                           
  9765 ;; *************** function _strlen *****************
  9766 ;; Defined at:
  9767 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  9768 ;; Parameters:    Size  Location     Type
  9769 ;;  s               1    wreg     PTR const unsigned char 
  9770 ;;		 -> dbuf(80), 
  9771 ;; Auto vars:     Size  Location     Type
  9772 ;;  s               1    7[BANK0 ] PTR const unsigned char 
  9773 ;;		 -> dbuf(80), 
  9774 ;;  a               1    6[BANK0 ] PTR const unsigned char 
  9775 ;;		 -> dbuf(80), 
  9776 ;; Return value:  Size  Location     Type
  9777 ;;                  2    0[BANK0 ] unsigned int 
  9778 ;; Registers used:
  9779 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9780 ;; Tracked objects:
  9781 ;;		On entry : 0/0
  9782 ;;		On exit  : 0/0
  9783 ;;		Unchanged: 0/0
  9784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9785 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9786 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9787 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9788 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9789 ;;Total ram usage:        8 bytes
  9790 ;; Hardware stack levels used:    1
  9791 ;; Hardware stack levels required when called:    3
  9792 ;; This function calls:
  9793 ;;		Nothing
  9794 ;; This function is called by:
  9795 ;;		_pad
  9796 ;; This function uses a non-reentrant model
  9797 ;;
  9798                           psect	text12,local,class=CODE,delta=2,merge=1,group=2
  9799                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  9800                           	line	12
  9801                           global __ptext12
  9802                           __ptext12:	;psect for function _strlen
  9803  1862                     psect	text12
  9804                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  9805                           	line	12
  9806                           	global	__size_of_strlen
  9807                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  9808  002B                     	
  9809                           _strlen:	
  9810  1862                     ;incstack = 0
  9811                           	opt	stack 6
  9812                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  9813                           ;strlen@s stored from wreg
  9814                           	movlb 0	; select bank0
  9815  1862  0140               	movwf	(strlen@s)
  9816  1863  00A7               	line	14
  9817                           	
  9818                           l2944:	
  9819  1864                     	movf	(strlen@s),w
  9820  1864  0827               	movwf	(??_strlen+0)+0
  9821  1865  00A2               	movf	(??_strlen+0)+0,w
  9822  1866  0822               	movwf	(strlen@a)
  9823  1867  00A6               	line	16
  9824                           	goto	l2948
  9825  1868  286E               	
  9826                           l1064:	
  9827  1869                     	line	17
  9828                           	
  9829                           l2946:	
  9830  1869                     	movlw	low(01h)
  9831  1869  3001               	movwf	(??_strlen+0)+0
  9832  186A  00A2               	movf	(??_strlen+0)+0,w
  9833  186B  0822               	addwf	(strlen@s),f
  9834  186C  07A7               	goto	l2948
  9835  186D  286E               	line	18
  9836                           	
  9837                           l1063:	
  9838  186E                     	line	16
  9839                           	
  9840                           l2948:	
  9841  186E                     	movf	(strlen@s),w
  9842  186E  0827               	movwf	fsr1l
  9843  186F  0086               	movlw 2	; select bank4/5
  9844  1870  3002               	movwf fsr1h	
  9845  1871  0087               	
  9846                           	movf	(indf1),w
  9847  1872  0801               	btfss	status,2
  9848  1873  1D03               	goto	u3391
  9849  1874  2876               	goto	u3390
  9850  1875  2877               u3391:
  9851  1876                     	goto	l2946
  9852  1876  2869               u3390:
  9853  1877                     	goto	l2950
  9854  1877  2878               	
  9855                           l1065:	
  9856  1878                     	line	25
  9857                           	
  9858                           l2950:	
  9859  1878                     	movf	(strlen@a),w
  9860  1878  0826               	movwf	(??_strlen+0)+0
  9861  1879  00A2               	movlw	(0x2)
  9862  187A  3002               	movwf	(??_strlen+0)+0+1
  9863  187B  00A3               	comf	(??_strlen+0)+0,f
  9864  187C  09A2               	comf	(??_strlen+0)+1,f
  9865  187D  09A3               	incf	(??_strlen+0)+0,f
  9866  187E  0AA2               	skipnz
  9867  187F  1903               	incf	(??_strlen+0)+1,f
  9868  1880  0AA3               	movf	(strlen@s),w
  9869  1881  0827               	movwf	(??_strlen+2)+0
  9870  1882  00A4               	movlw	(0x2)
  9871  1883  3002               	movwf	(??_strlen+2)+0+1
  9872  1884  00A5               	movf	0+(??_strlen+0)+0,w
  9873  1885  0822               	addwf	0+(??_strlen+2)+0,w
  9874  1886  0724               	movwf	(?_strlen)
  9875  1887  00A0               	movf	1+(??_strlen+0)+0,w
  9876  1888  0823               	addwfc	1+(??_strlen+2)+0,w
  9877  1889  3D25               	movwf	1+(?_strlen)
  9878  188A  00A1               	goto	l1066
  9879  188B  288C               	
  9880                           l2952:	
  9881  188C                     	line	26
  9882                           	
  9883                           l1066:	
  9884  188C                     	return
  9885  188C  0008               	opt stack 0
  9886                           GLOBAL	__end_of_strlen
  9887                           	__end_of_strlen:
  9888  188D                     	signat	_strlen,4218
  9889                           	global	_fputs
  9890                           
  9891 ;; *************** function _fputs *****************
  9892 ;; Defined at:
  9893 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  9894 ;; Parameters:    Size  Location     Type
  9895 ;;  s               1    wreg     PTR const unsigned char 
  9896 ;;		 -> dbuf(80), 
  9897 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
  9898 ;;		 -> sprintf@f(5), 
  9899 ;; Auto vars:     Size  Location     Type
  9900 ;;  s               1   15[BANK0 ] PTR const unsigned char 
  9901 ;;		 -> dbuf(80), 
  9902 ;;  i               2   13[BANK0 ] int 
  9903 ;;  c               1   12[BANK0 ] unsigned char 
  9904 ;; Return value:  Size  Location     Type
  9905 ;;                  2    8[BANK0 ] int 
  9906 ;; Registers used:
  9907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9908 ;; Tracked objects:
  9909 ;;		On entry : 0/0
  9910 ;;		On exit  : 0/0
  9911 ;;		Unchanged: 0/0
  9912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9913 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9914 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9915 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9916 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9917 ;;Total ram usage:        8 bytes
  9918 ;; Hardware stack levels used:    1
  9919 ;; Hardware stack levels required when called:    5
  9920 ;; This function calls:
  9921 ;;		_fputc
  9922 ;; This function is called by:
  9923 ;;		_pad
  9924 ;; This function uses a non-reentrant model
  9925 ;;
  9926                           psect	text13,local,class=CODE,delta=2,merge=1,group=2
  9927                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  9928                           	line	8
  9929                           global __ptext13
  9930                           __ptext13:	;psect for function _fputs
  9931  1837                     psect	text13
  9932                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  9933                           	line	8
  9934                           	global	__size_of_fputs
  9935                           	__size_of_fputs	equ	__end_of_fputs-_fputs
  9936  002B                     	
  9937                           _fputs:	
  9938  1837                     ;incstack = 0
  9939                           	opt	stack 4
  9940                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9941                           ;fputs@s stored from wreg
  9942                           	movlb 0	; select bank0
  9943  1837  0140               	movwf	(fputs@s)
  9944  1838  00AF               	line	13
  9945                           	
  9946                           l2936:	
  9947  1839                     	clrf	(fputs@i)
  9948  1839  01AD               	clrf	(fputs@i+1)
  9949  183A  01AE               	line	14
  9950                           	goto	l2942
  9951  183B  2850               	
  9952                           l1042:	
  9953  183C                     	line	15
  9954                           	
  9955                           l2938:	
  9956  183C                     	movf	(fputs@c),w
  9957  183C  082C               	movwf	(??_fputs+0)+0
  9958  183D  00A9               	clrf	(??_fputs+0)+0+1
  9959  183E  01AA               	movf	0+(??_fputs+0)+0,w
  9960  183F  0829               	movwf	(fputc@c)
  9961  1840  00A0               	movf	1+(??_fputs+0)+0,w
  9962  1841  082A               	movwf	(fputc@c+1)
  9963  1842  00A1               	movf	(fputs@fp),w
  9964  1843  0828               	movwf	(??_fputs+2)+0
  9965  1844  00AB               	movf	(??_fputs+2)+0,w
  9966  1845  082B               	movwf	(fputc@fp)
  9967  1846  00A2               	fcall	_fputc
  9968  1847  319C  2411  3198   	line	16
  9969                           	
  9970                           l2940:	
  9971  184A                     	movlw	01h
  9972  184A  3001               	movlb 0	; select bank0
  9973  184B  0140               	addwf	(fputs@i),f
  9974  184C  07AD               	movlw	0
  9975  184D  3000               	addwfc	(fputs@i+1),f
  9976  184E  3DAE               	goto	l2942
  9977  184F  2850               	line	17
  9978                           	
  9979                           l1041:	
  9980  1850                     	line	14
  9981                           	
  9982                           l2942:	
  9983  1850                     	movf	(fputs@i),w
  9984  1850  082D               	addwf	(fputs@s),w
  9985  1851  072F               	movwf	(??_fputs+0)+0
  9986  1852  00A9               	movf	0+(??_fputs+0)+0,w
  9987  1853  0829               	movwf	fsr1l
  9988  1854  0086               	movlw 2	; select bank4/5
  9989  1855  3002               	movwf fsr1h	
  9990  1856  0087               	
  9991                           	movf	indf1,w
  9992  1857  0801               	movwf	(??_fputs+1)+0
  9993  1858  00AA               	movf	(??_fputs+1)+0,w
  9994  1859  082A               	movwf	(fputs@c)
  9995  185A  00AC               	movf	(((fputs@c))),w
  9996  185B  082C               	btfss	status,2
  9997  185C  1D03               	goto	u3381
  9998  185D  285F               	goto	u3380
  9999  185E  2860               u3381:
 10000  185F                     	goto	l2938
 10001  185F  283C               u3380:
 10002  1860                     	goto	l1044
 10003  1860  2861               	
 10004                           l1043:	
 10005  1861                     	line	19
 10006                           ;	Return value of _fputs is never used
 10007                           	
 10008                           l1044:	
 10009  1861                     	return
 10010  1861  0008               	opt stack 0
 10011                           GLOBAL	__end_of_fputs
 10012                           	__end_of_fputs:
 10013  1862                     	signat	_fputs,8314
 10014                           	global	_fputc
 10015                           
 10016 ;; *************** function _fputc *****************
 10017 ;; Defined at:
 10018 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
 10019 ;; Parameters:    Size  Location     Type
 10020 ;;  c               2    0[BANK0 ] int 
 10021 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
 10022 ;;		 -> sprintf@f(5), 
 10023 ;; Auto vars:     Size  Location     Type
 10024 ;;		None
 10025 ;; Return value:  Size  Location     Type
 10026 ;;                  2    0[BANK0 ] int 
 10027 ;; Registers used:
 10028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10029 ;; Tracked objects:
 10030 ;;		On entry : 0/0
 10031 ;;		On exit  : 0/0
 10032 ;;		Unchanged: 0/0
 10033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10034 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10036 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10037 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10038 ;;Total ram usage:        8 bytes
 10039 ;; Hardware stack levels used:    1
 10040 ;; Hardware stack levels required when called:    4
 10041 ;; This function calls:
 10042 ;;		_putch
 10043 ;; This function is called by:
 10044 ;;		_pad
 10045 ;;		_vfpfcnvrt
 10046 ;;		_fputs
 10047 ;; This function uses a non-reentrant model
 10048 ;;
 10049                           psect	text14,local,class=CODE,delta=2,merge=1,group=2
 10050                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
 10051                           	line	8
 10052                           global __ptext14
 10053                           __ptext14:	;psect for function _fputc
 10054  1C11                     psect	text14
 10055                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
 10056                           	line	8
 10057                           	global	__size_of_fputc
 10058                           	__size_of_fputc	equ	__end_of_fputc-_fputc
 10059  005E                     	
 10060                           _fputc:	
 10061  1C11                     ;incstack = 0
 10062                           	opt	stack 7
 10063                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10064                           	line	12
 10065                           	
 10066                           l2914:	
 10067  1C11                     	movlb 0	; select bank0
 10068  1C11  0140               	movf	((fputc@fp)),w
 10069  1C12  0822               	btfsc	status,2
 10070  1C13  1903               	goto	u3341
 10071  1C14  2C16               	goto	u3340
 10072  1C15  2C17               u3341:
 10073  1C16                     	goto	l2918
 10074  1C16  2C1D               u3340:
 10075  1C17                     	
 10076                           l2916:	
 10077  1C17                     	movf	((fputc@fp)),w
 10078  1C17  0822               	btfss	status,2
 10079  1C18  1D03               	goto	u3351
 10080  1C19  2C1B               	goto	u3350
 10081  1C1A  2C1C               u3351:
 10082  1C1B                     	goto	l2920
 10083  1C1B  2C22               u3350:
 10084  1C1C                     	goto	l2918
 10085  1C1C  2C1D               	
 10086                           l1031:	
 10087  1C1D                     	line	13
 10088                           	
 10089                           l2918:	
 10090  1C1D                     	movf	(fputc@c),w
 10091  1C1D  0820               	fcall	_putch
 10092  1C1E  3180  2003  319C   	line	14
 10093                           	goto	l1036
 10094  1C21  2C6E               	
 10095                           l1029:	
 10096  1C22                     	line	15
 10097                           	
 10098                           l2920:	
 10099  1C22                     	movlb 0	; select bank0
 10100  1C22  0140               	movf	(fputc@fp),w
 10101  1C23  0822               	addlw	03h
 10102  1C24  3E03               	movwf	fsr1l
 10103  1C25  0086               	movlw 1	; select bank2/3
 10104  1C26  3001               	movwf fsr1h	
 10105  1C27  0087               	
 10106                           		moviw	fsr1++
 10107  1C28  0016               	iorwf	indf1,w
 10108  1C29  0401               	btfsc	status,2
 10109  1C2A  1903               	goto	u3361
 10110  1C2B  2C2D               	goto	u3360
 10111  1C2C  2C2E               
 10112                           u3361:
 10113  1C2D                     	goto	l2924
 10114  1C2D  2C4E               u3360:
 10115  1C2E                     	
 10116                           l2922:	
 10117  1C2E                     	movf	(fputc@fp),w
 10118  1C2E  0822               	addlw	03h
 10119  1C2F  3E03               	movwf	fsr1l
 10120  1C30  0086               	movlw 1	; select bank2/3
 10121  1C31  3001               	movwf fsr1h	
 10122  1C32  0087               	
 10123                           	moviw	[0]fsr1
 10124  1C33  3F40               	movwf	(??_fputc+0)+0
 10125  1C34  00A3               	moviw	[1]fsr1
 10126  1C35  3F41               	movwf	(??_fputc+0)+0+1
 10127  1C36  00A4               	incf	(fputc@fp),w
 10128  1C37  0A22               	movwf	fsr1l
 10129  1C38  0086               	movlw 1	; select bank2/3
 10130  1C39  3001               	movwf fsr1h	
 10131  1C3A  0087               	
 10132                           	moviw	[0]fsr1
 10133  1C3B  3F40               	movwf	(??_fputc+2)+0
 10134  1C3C  00A5               	moviw	[1]fsr1
 10135  1C3D  3F41               	movwf	(??_fputc+2)+0+1
 10136  1C3E  00A6               	movf	1+(??_fputc+2)+0,w
 10137  1C3F  0826               	xorlw	80h
 10138  1C40  3A80               	movwf	(??_fputc+4)+0
 10139  1C41  00A7               	movf	1+(??_fputc+0)+0,w
 10140  1C42  0824               	xorlw	80h
 10141  1C43  3A80               	subwf	(??_fputc+4)+0,w
 10142  1C44  0227               	skipz
 10143  1C45  1D03               	goto	u3375
 10144  1C46  2C49               	movf	0+(??_fputc+0)+0,w
 10145  1C47  0823               	subwf	0+(??_fputc+2)+0,w
 10146  1C48  0225               u3375:
 10147  1C49                     
 10148                           	skipnc
 10149  1C49  1803               	goto	u3371
 10150  1C4A  2C4C               	goto	u3370
 10151  1C4B  2C4D               u3371:
 10152  1C4C                     	goto	l1036
 10153  1C4C  2C6E               u3370:
 10154  1C4D                     	goto	l2924
 10155  1C4D  2C4E               	
 10156                           l1035:	
 10157  1C4E                     	line	16
 10158                           	
 10159                           l2924:	
 10160  1C4E                     	movlb 0	; select bank0
 10161  1C4E  0140               	movf	(fputc@c),w
 10162  1C4F  0820               	movwf	(??_fputc+0)+0
 10163  1C50  00A3               	movf	(fputc@fp),w
 10164  1C51  0822               	movwf	fsr1l
 10165  1C52  0086               	movlw 1	; select bank2/3
 10166  1C53  3001               	movwf fsr1h	
 10167  1C54  0087               	
 10168                           	incf	(fputc@fp),w
 10169  1C55  0A22               	movwf	fsr0l
 10170  1C56  0084               	movlw 1	; select bank2/3
 10171  1C57  3001               	movwf fsr0h	
 10172  1C58  0085               	
 10173                           	movf	indf0,w
 10174  1C59  0800               	addwf	indf1,w
 10175  1C5A  0701               	movwf	(??_fputc+1)+0
 10176  1C5B  00A4               	movf	0+(??_fputc+1)+0,w
 10177  1C5C  0824               	movwf	fsr1l
 10178  1C5D  0086               	movlw 1	; select bank2/3
 10179  1C5E  3001               	movwf fsr1h	
 10180  1C5F  0087               	
 10181                           	movf	(??_fputc+0)+0,w
 10182  1C60  0823               	movwf	indf1
 10183  1C61  0081               	line	17
 10184                           	
 10185                           l2926:	
 10186  1C62                     	incf	(fputc@fp),w
 10187  1C62  0A22               	movwf	fsr1l
 10188  1C63  0086               	movlw 1	; select bank2/3
 10189  1C64  3001               	movwf fsr1h	
 10190  1C65  0087               	
 10191                           	movlw	01h
 10192  1C66  3001               	addwf	indf1,f
 10193  1C67  0781               	addfsr	fsr1,1
 10194  1C68  3141               	skipnc
 10195  1C69  1803               	incf	indf1,f
 10196  1C6A  0A81               	goto	l1036
 10197  1C6B  2C6E               	line	18
 10198                           	
 10199                           l1033:	
 10200  1C6C                     	goto	l1036
 10201  1C6C  2C6E               	line	19
 10202                           	
 10203                           l1032:	
 10204  1C6D                     	goto	l1036
 10205  1C6D  2C6E               	line	20
 10206                           	
 10207                           l2928:	
 10208  1C6E                     	line	21
 10209                           ;	Return value of _fputc is never used
 10210                           	
 10211                           l1036:	
 10212  1C6E                     	return
 10213  1C6E  0008               	opt stack 0
 10214                           GLOBAL	__end_of_fputc
 10215                           	__end_of_fputc:
 10216  1C6F                     	signat	_fputc,8314
 10217                           	global	_putch
 10218                           
 10219 ;; *************** function _putch *****************
 10220 ;; Defined at:
 10221 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
 10222 ;; Parameters:    Size  Location     Type
 10223 ;;  c               1    wreg     unsigned char 
 10224 ;; Auto vars:     Size  Location     Type
 10225 ;;  c               1    0[COMMON] unsigned char 
 10226 ;; Return value:  Size  Location     Type
 10227 ;;                  1    wreg      void 
 10228 ;; Registers used:
 10229 ;;		wreg
 10230 ;; Tracked objects:
 10231 ;;		On entry : 0/0
 10232 ;;		On exit  : 0/0
 10233 ;;		Unchanged: 0/0
 10234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10239 ;;Total ram usage:        0 bytes
 10240 ;; Hardware stack levels used:    1
 10241 ;; Hardware stack levels required when called:    3
 10242 ;; This function calls:
 10243 ;;		Nothing
 10244 ;; This function is called by:
 10245 ;;		_fputc
 10246 ;; This function uses a non-reentrant model
 10247 ;;
 10248                           psect	text15,local,class=CODE,delta=2,merge=1,group=2
 10249                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
 10250                           	line	7
 10251                           global __ptext15
 10252                           __ptext15:	;psect for function _putch
 10253  0003                     psect	text15
 10254                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
 10255                           	line	7
 10256                           	global	__size_of_putch
 10257                           	__size_of_putch	equ	__end_of_putch-_putch
 10258  0001                     	
 10259                           _putch:	
 10260  0003                     ;incstack = 0
 10261                           	opt	stack 7
 10262                           ; Regs used in _putch: [wreg]
 10263                           	line	9
 10264                           	
 10265                           l1054:	
 10266  0003                     	return
 10267  0003  0008               	opt stack 0
 10268                           GLOBAL	__end_of_putch
 10269                           	__end_of_putch:
 10270  0004                     	signat	_putch,4217
 10271                           	global	_floorf
 10272                           
 10273 ;; *************** function _floorf *****************
 10274 ;; Defined at:
 10275 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\floorf.c"
 10276 ;; Parameters:    Size  Location     Type
 10277 ;;  x               4   66[BANK0 ] float 
 10278 ;; Auto vars:     Size  Location     Type
 10279 ;;  u               4    6[BANK1 ] struct .
 10280 ;;  m               4    0[BANK1 ] unsigned long 
 10281 ;;  e               2    4[BANK1 ] int 
 10282 ;; Return value:  Size  Location     Type
 10283 ;;                  4   66[BANK0 ] float 
 10284 ;; Registers used:
 10285 ;;		wreg, status,2, status,0
 10286 ;; Tracked objects:
 10287 ;;		On entry : 0/0
 10288 ;;		On exit  : 0/0
 10289 ;;		Unchanged: 0/0
 10290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10291 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10292 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10293 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10294 ;;      Totals:         0      10      10       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10295 ;;Total ram usage:       20 bytes
 10296 ;; Hardware stack levels used:    1
 10297 ;; Hardware stack levels required when called:    3
 10298 ;; This function calls:
 10299 ;;		Nothing
 10300 ;; This function is called by:
 10301 ;;		_efgtoa
 10302 ;; This function uses a non-reentrant model
 10303 ;;
 10304                           psect	text16,local,class=CODE,delta=2,merge=1,group=2
 10305                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\floorf.c"
 10306                           	line	3
 10307                           global __ptext16
 10308                           __ptext16:	;psect for function _floorf
 10309  1450                     psect	text16
 10310                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\floorf.c"
 10311                           	line	3
 10312                           	global	__size_of_floorf
 10313                           	__size_of_floorf	equ	__end_of_floorf-_floorf
 10314  0145                     	
 10315                           _floorf:	
 10316  1450                     ;incstack = 0
 10317                           	opt	stack 7
 10318                           ; Regs used in _floorf: [wreg+status,2+status,0]
 10319                           	line	5
 10320                           	
 10321                           l3232:	
 10322  1450                     	movlb 4	; select bank4
 10323  1450  0144               	movf	(floorf@F514+3)^0200h,w
 10324  1451  0823               	movlb 1	; select bank1
 10325  1452  0141               	movwf	(floorf@u+3)^080h
 10326  1453  00A9               	movlb 4	; select bank4
 10327  1454  0144               	movf	(floorf@F514+2)^0200h,w
 10328  1455  0822               	movlb 1	; select bank1
 10329  1456  0141               	movwf	(floorf@u+2)^080h
 10330  1457  00A8               	movlb 4	; select bank4
 10331  1458  0144               	movf	(floorf@F514+1)^0200h,w
 10332  1459  0821               	movlb 1	; select bank1
 10333  145A  0141               	movwf	(floorf@u+1)^080h
 10334  145B  00A7               	movlb 4	; select bank4
 10335  145C  0144               	movf	(floorf@F514)^0200h,w
 10336  145D  0820               	movlb 1	; select bank1
 10337  145E  0141               	movwf	(floorf@u)^080h
 10338  145F  00A6               
 10339                           	movlb 0	; select bank0
 10340  1460  0140               	movf	(floorf@x+3),w
 10341  1461  0865               	movlb 1	; select bank1
 10342  1462  0141               	movwf	(floorf@u+3)^080h
 10343  1463  00A9               	movlb 0	; select bank0
 10344  1464  0140               	movf	(floorf@x+2),w
 10345  1465  0864               	movlb 1	; select bank1
 10346  1466  0141               	movwf	(floorf@u+2)^080h
 10347  1467  00A8               	movlb 0	; select bank0
 10348  1468  0140               	movf	(floorf@x+1),w
 10349  1469  0863               	movlb 1	; select bank1
 10350  146A  0141               	movwf	(floorf@u+1)^080h
 10351  146B  00A7               	movlb 0	; select bank0
 10352  146C  0140               	movf	(floorf@x),w
 10353  146D  0862               	movlb 1	; select bank1
 10354  146E  0141               	movwf	(floorf@u)^080h
 10355  146F  00A6               
 10356                           	line	6
 10357                           	
 10358                           l3234:	
 10359  1470                     	movf	(floorf@u)^080h,w
 10360  1470  0826               	movlb 0	; select bank0
 10361  1471  0140               	movwf	(??_floorf+0)+0
 10362  1472  00E6               	movlb 1	; select bank1
 10363  1473  0141               	movf	(floorf@u+1)^080h,w
 10364  1474  0827               	movlb 0	; select bank0
 10365  1475  0140               	movwf	((??_floorf+0)+0+1)
 10366  1476  00E7               	movlb 1	; select bank1
 10367  1477  0141               	movf	(floorf@u+2)^080h,w
 10368  1478  0828               	movlb 0	; select bank0
 10369  1479  0140               	movwf	((??_floorf+0)+0+2)
 10370  147A  00E8               	movlb 1	; select bank1
 10371  147B  0141               	movf	(floorf@u+3)^080h,w
 10372  147C  0829               	movlb 0	; select bank0
 10373  147D  0140               	movwf	((??_floorf+0)+0+3)
 10374  147E  00E9               	movlw	017h
 10375  147F  3017               u4075:
 10376  1480                     	lsrf	(??_floorf+0)+3,f
 10377  1480  36E9               	rrf	(??_floorf+0)+2,f
 10378  1481  0CE8               	rrf	(??_floorf+0)+1,f
 10379  1482  0CE7               	rrf	(??_floorf+0)+0,f
 10380  1483  0CE6               u4070:
 10381  1484                     	decfsz	wreg,f
 10382  1484  0B89               	goto	u4075
 10383  1485  2C80               	movlw	0FFh
 10384  1486  30FF               	andwf	0+(??_floorf+0)+0,w
 10385  1487  0566               	movwf	(??_floorf+4)+0
 10386  1488  00EA               	movlw	0
 10387  1489  3000               	andwf	1+(??_floorf+0)+0,w
 10388  148A  0567               	movwf	1+(??_floorf+4)+0
 10389  148B  00EB               	movf	0+(??_floorf+4)+0,w
 10390  148C  086A               	addlw	081h
 10391  148D  3E81               	movlb 1	; select bank1
 10392  148E  0141               	movwf	(floorf@e)^080h
 10393  148F  00A4               	movlw	0FFh
 10394  1490  30FF               	movlb 0	; select bank0
 10395  1491  0140               	addwfc	1+(??_floorf+4)+0,w
 10396  1492  3D6B               	movlb 1	; select bank1
 10397  1493  0141               	movwf	1+(floorf@e)^080h
 10398  1494  00A5               	line	9
 10399                           	
 10400                           l3236:	
 10401  1495                     	movf	(floorf@e+1)^080h,w
 10402  1495  0825               	xorlw	80h
 10403  1496  3A80               	movlb 0	; select bank0
 10404  1497  0140               	movwf	(??_floorf+0)+0
 10405  1498  00E6               	movlw	(0)^80h
 10406  1499  3080               	subwf	(??_floorf+0)+0,w
 10407  149A  0266               	skipz
 10408  149B  1D03               	goto	u4085
 10409  149C  2CA0               	movlw	017h
 10410  149D  3017               	movlb 1	; select bank1
 10411  149E  0141               	subwf	(floorf@e)^080h,w
 10412  149F  0224               u4085:
 10413  14A0                     
 10414                           	skipc
 10415  14A0  1C03               	goto	u4081
 10416  14A1  2CA3               	goto	u4080
 10417  14A2  2CA4               u4081:
 10418  14A3                     	goto	l996
 10419  14A3  2CA5               u4080:
 10420  14A4                     	line	10
 10421                           	
 10422                           l3238:	
 10423  14A4                     	goto	l997
 10424  14A4  2D94               	
 10425                           l996:	
 10426  14A5                     	line	11
 10427                           	movlb 1	; select bank1
 10428  14A5  0141               	btfsc	(floorf@e+1)^080h,7
 10429  14A6  1BA5               	goto	u4091
 10430  14A7  2CA9               	goto	u4090
 10431  14A8  2CAA               u4091:
 10432  14A9                     	goto	l3252
 10433  14A9  2D31               u4090:
 10434  14AA                     	line	12
 10435                           	
 10436                           l3240:	
 10437  14AA                     	movlw	0FFh
 10438  14AA  30FF               	movlb 0	; select bank0
 10439  14AB  0140               	movwf	((??_floorf+0)+0)
 10440  14AC  00E6               	movlw	0FFh
 10441  14AD  30FF               	movwf	((??_floorf+0)+0+1)
 10442  14AE  00E7               	movlw	07Fh
 10443  14AF  307F               	movwf	((??_floorf+0)+0+2)
 10444  14B0  00E8               	movlw	0
 10445  14B1  3000               	movwf	((??_floorf+0)+0+3)
 10446  14B2  00E9               	movlb 1	; select bank1
 10447  14B3  0141               	incf	(floorf@e)^080h,w
 10448  14B4  0A24               	movlb 0	; select bank0
 10449  14B5  0140               	goto	u4100
 10450  14B6  2CBB               u4105:
 10451  14B7                     	asrf	(??_floorf+0)+3,f
 10452  14B7  37E9               	rrf	(??_floorf+0)+2,f
 10453  14B8  0CE8               	rrf	(??_floorf+0)+1,f
 10454  14B9  0CE7               	rrf	(??_floorf+0)+0,f
 10455  14BA  0CE6               u4100:
 10456  14BB                     	decfsz	wreg,f
 10457  14BB  0B89               	goto	u4105
 10458  14BC  2CB7               	movf	3+(??_floorf+0)+0,w
 10459  14BD  0869               	movlb 1	; select bank1
 10460  14BE  0141               	movwf	(floorf@m+3)^080h
 10461  14BF  00A3               	movlb 0	; select bank0
 10462  14C0  0140               	movf	2+(??_floorf+0)+0,w
 10463  14C1  0868               	movlb 1	; select bank1
 10464  14C2  0141               	movwf	(floorf@m+2)^080h
 10465  14C3  00A2               	movlb 0	; select bank0
 10466  14C4  0140               	movf	1+(??_floorf+0)+0,w
 10467  14C5  0867               	movlb 1	; select bank1
 10468  14C6  0141               	movwf	(floorf@m+1)^080h
 10469  14C7  00A1               	movlb 0	; select bank0
 10470  14C8  0140               	movf	0+(??_floorf+0)+0,w
 10471  14C9  0866               	movlb 1	; select bank1
 10472  14CA  0141               	movwf	(floorf@m)^080h
 10473  14CB  00A0               
 10474                           	line	13
 10475                           	
 10476                           l3242:	
 10477  14CC                     	movf	(floorf@u)^080h,w
 10478  14CC  0826               	andwf	(floorf@m)^080h,w
 10479  14CD  0520               	movlb 0	; select bank0
 10480  14CE  0140               	movwf	((??_floorf+0)+0+0)
 10481  14CF  00E6               	movlb 1	; select bank1
 10482  14D0  0141               	movf	(floorf@u+1)^080h,w
 10483  14D1  0827               	andwf	(floorf@m+1)^080h,w
 10484  14D2  0521               	movlb 0	; select bank0
 10485  14D3  0140               	movwf	((??_floorf+0)+0+1)
 10486  14D4  00E7               	movlb 1	; select bank1
 10487  14D5  0141               	movf	(floorf@u+2)^080h,w
 10488  14D6  0828               	andwf	(floorf@m+2)^080h,w
 10489  14D7  0522               	movlb 0	; select bank0
 10490  14D8  0140               	movwf	((??_floorf+0)+0+2)
 10491  14D9  00E8               	movlb 1	; select bank1
 10492  14DA  0141               	movf	(floorf@u+3)^080h,w
 10493  14DB  0829               	andwf	(floorf@m+3)^080h,w
 10494  14DC  0523               	movlb 0	; select bank0
 10495  14DD  0140               	movwf	((??_floorf+0)+0+3)
 10496  14DE  00E9               	movf	3+(??_floorf+0)+0,w
 10497  14DF  0869               	iorwf	2+(??_floorf+0)+0,w
 10498  14E0  0468               	iorwf	1+(??_floorf+0)+0,w
 10499  14E1  0467               	iorwf	0+(??_floorf+0)+0,w
 10500  14E2  0466               	skipz
 10501  14E3  1D03               	goto	u4111
 10502  14E4  2CE6               	goto	u4110
 10503  14E5  2CE7               u4111:
 10504  14E6                     	goto	l3246
 10505  14E6  2CE8               u4110:
 10506  14E7                     	line	14
 10507                           	
 10508                           l3244:	
 10509  14E7                     	goto	l997
 10510  14E7  2D94               	
 10511                           l999:	
 10512  14E8                     	line	16
 10513                           	
 10514                           l3246:	
 10515  14E8                     	movlb 1	; select bank1
 10516  14E8  0141               	movf	(floorf@u)^080h,w
 10517  14E9  0826               	movlb 0	; select bank0
 10518  14EA  0140               	movwf	(??_floorf+0)+0
 10519  14EB  00E6               	movlb 1	; select bank1
 10520  14EC  0141               	movf	(floorf@u+1)^080h,w
 10521  14ED  0827               	movlb 0	; select bank0
 10522  14EE  0140               	movwf	((??_floorf+0)+0+1)
 10523  14EF  00E7               	movlb 1	; select bank1
 10524  14F0  0141               	movf	(floorf@u+2)^080h,w
 10525  14F1  0828               	movlb 0	; select bank0
 10526  14F2  0140               	movwf	((??_floorf+0)+0+2)
 10527  14F3  00E8               	movlb 1	; select bank1
 10528  14F4  0141               	movf	(floorf@u+3)^080h,w
 10529  14F5  0829               	movlb 0	; select bank0
 10530  14F6  0140               	movwf	((??_floorf+0)+0+3)
 10531  14F7  00E9               	movlw	01Fh
 10532  14F8  301F               u4125:
 10533  14F9                     	lsrf	(??_floorf+0)+3,f
 10534  14F9  36E9               	rrf	(??_floorf+0)+2,f
 10535  14FA  0CE8               	rrf	(??_floorf+0)+1,f
 10536  14FB  0CE7               	rrf	(??_floorf+0)+0,f
 10537  14FC  0CE6               u4120:
 10538  14FD                     	decfsz	wreg,f
 10539  14FD  0B89               	goto	u4125
 10540  14FE  2CF9               	movf	3+(??_floorf+0)+0,w
 10541  14FF  0869               	iorwf	2+(??_floorf+0)+0,w
 10542  1500  0468               	iorwf	1+(??_floorf+0)+0,w
 10543  1501  0467               	iorwf	0+(??_floorf+0)+0,w
 10544  1502  0466               	skipnz
 10545  1503  1903               	goto	u4131
 10546  1504  2D06               	goto	u4130
 10547  1505  2D07               u4131:
 10548  1506                     	goto	l3250
 10549  1506  2D11               u4130:
 10550  1507                     	line	17
 10551                           	
 10552                           l3248:	
 10553  1507                     	movlb 1	; select bank1
 10554  1507  0141               	movf	(floorf@m)^080h,w
 10555  1508  0820               	addwf	(floorf@u)^080h,f
 10556  1509  07A6               	movf	(floorf@m+1)^080h,w
 10557  150A  0821               	addwfc	(floorf@u+1)^080h,f
 10558  150B  3DA7               	movf	(floorf@m+2)^080h,w
 10559  150C  0822               	addwfc	(floorf@u+2)^080h,f
 10560  150D  3DA8               	movf	(floorf@m+3)^080h,w
 10561  150E  0823               	addwfc	(floorf@u+3)^080h,f
 10562  150F  3DA9               	goto	l3250
 10563  1510  2D11               	
 10564                           l1000:	
 10565  1511                     	line	18
 10566                           	
 10567                           l3250:	
 10568  1511                     	movlb 1	; select bank1
 10569  1511  0141               	comf	(floorf@m)^080h,w
 10570  1512  0920               	movlb 0	; select bank0
 10571  1513  0140               	movwf	(??_floorf+0)+0
 10572  1514  00E6               	movlb 1	; select bank1
 10573  1515  0141               	comf	(floorf@m+1)^080h,w
 10574  1516  0921               	movlb 0	; select bank0
 10575  1517  0140               	movwf	((??_floorf+0)+0+1)
 10576  1518  00E7               	movlb 1	; select bank1
 10577  1519  0141               	comf	(floorf@m+2)^080h,w
 10578  151A  0922               	movlb 0	; select bank0
 10579  151B  0140               	movwf	((??_floorf+0)+0+2)
 10580  151C  00E8               	movlb 1	; select bank1
 10581  151D  0141               	comf	(floorf@m+3)^080h,w
 10582  151E  0923               	movlb 0	; select bank0
 10583  151F  0140               	movwf	((??_floorf+0)+0+3)
 10584  1520  00E9               
 10585                           	movf	0+(??_floorf+0)+0,w
 10586  1521  0866               	movlb 1	; select bank1
 10587  1522  0141               	andwf	(floorf@u)^080h,f
 10588  1523  05A6               	movlb 0	; select bank0
 10589  1524  0140               	movf	1+(??_floorf+0)+0,w
 10590  1525  0867               	movlb 1	; select bank1
 10591  1526  0141               	andwf	(floorf@u+1)^080h,f
 10592  1527  05A7               	movlb 0	; select bank0
 10593  1528  0140               	movf	2+(??_floorf+0)+0,w
 10594  1529  0868               	movlb 1	; select bank1
 10595  152A  0141               	andwf	(floorf@u+2)^080h,f
 10596  152B  05A8               	movlb 0	; select bank0
 10597  152C  0140               	movf	3+(??_floorf+0)+0,w
 10598  152D  0869               	movlb 1	; select bank1
 10599  152E  0141               	andwf	(floorf@u+3)^080h,f
 10600  152F  05A9               	line	19
 10601                           	goto	l1001
 10602  1530  2D83               	
 10603                           l998:	
 10604  1531                     	line	21
 10605                           	
 10606                           l3252:	
 10607  1531                     	movf	(floorf@u)^080h,w
 10608  1531  0826               	movlb 0	; select bank0
 10609  1532  0140               	movwf	(??_floorf+0)+0
 10610  1533  00E6               	movlb 1	; select bank1
 10611  1534  0141               	movf	(floorf@u+1)^080h,w
 10612  1535  0827               	movlb 0	; select bank0
 10613  1536  0140               	movwf	((??_floorf+0)+0+1)
 10614  1537  00E7               	movlb 1	; select bank1
 10615  1538  0141               	movf	(floorf@u+2)^080h,w
 10616  1539  0828               	movlb 0	; select bank0
 10617  153A  0140               	movwf	((??_floorf+0)+0+2)
 10618  153B  00E8               	movlb 1	; select bank1
 10619  153C  0141               	movf	(floorf@u+3)^080h,w
 10620  153D  0829               	movlb 0	; select bank0
 10621  153E  0140               	movwf	((??_floorf+0)+0+3)
 10622  153F  00E9               	movlw	01Fh
 10623  1540  301F               u4145:
 10624  1541                     	lsrf	(??_floorf+0)+3,f
 10625  1541  36E9               	rrf	(??_floorf+0)+2,f
 10626  1542  0CE8               	rrf	(??_floorf+0)+1,f
 10627  1543  0CE7               	rrf	(??_floorf+0)+0,f
 10628  1544  0CE6               u4140:
 10629  1545                     	decfsz	wreg,f
 10630  1545  0B89               	goto	u4145
 10631  1546  2D41               	movf	3+(??_floorf+0)+0,w
 10632  1547  0869               	iorwf	2+(??_floorf+0)+0,w
 10633  1548  0468               	iorwf	1+(??_floorf+0)+0,w
 10634  1549  0467               	iorwf	0+(??_floorf+0)+0,w
 10635  154A  0466               	skipz
 10636  154B  1D03               	goto	u4151
 10637  154C  2D4E               	goto	u4150
 10638  154D  2D4F               u4151:
 10639  154E                     	goto	l3256
 10640  154E  2D59               u4150:
 10641  154F                     	line	22
 10642                           	
 10643                           l3254:	
 10644  154F                     	movlw	high highword(0)
 10645  154F  3000               	movlb 1	; select bank1
 10646  1550  0141               	movwf	(floorf@u+3)^080h
 10647  1551  00A9               	movlw	low highword(0)
 10648  1552  3000               	movwf	(floorf@u+2)^080h
 10649  1553  00A8               	movlw	high(0)
 10650  1554  3000               	movwf	(floorf@u+1)^080h
 10651  1555  00A7               	movlw	low(0)
 10652  1556  3000               	movwf	(floorf@u)^080h
 10653  1557  00A6               
 10654                           	goto	l1001
 10655  1558  2D83               	line	23
 10656                           	
 10657                           l1002:	
 10658  1559                     	
 10659                           l3256:	
 10660  1559                     	movlb 1	; select bank1
 10661  1559  0141               	movf	(floorf@u)^080h,w
 10662  155A  0826               	movlb 0	; select bank0
 10663  155B  0140               	movwf	(??_floorf+0)+0
 10664  155C  00E6               	movlb 1	; select bank1
 10665  155D  0141               	movf	(floorf@u+1)^080h,w
 10666  155E  0827               	movlb 0	; select bank0
 10667  155F  0140               	movwf	((??_floorf+0)+0+1)
 10668  1560  00E7               	movlb 1	; select bank1
 10669  1561  0141               	movf	(floorf@u+2)^080h,w
 10670  1562  0828               	movlb 0	; select bank0
 10671  1563  0140               	movwf	((??_floorf+0)+0+2)
 10672  1564  00E8               	movlb 1	; select bank1
 10673  1565  0141               	movf	(floorf@u+3)^080h,w
 10674  1566  0829               	movlb 0	; select bank0
 10675  1567  0140               	movwf	((??_floorf+0)+0+3)
 10676  1568  00E9               	movlw	01h
 10677  1569  3001               u4165:
 10678  156A                     	lslf	(??_floorf+0)+0,f
 10679  156A  35E6               	rlf	(??_floorf+0)+1,f
 10680  156B  0DE7               	rlf	(??_floorf+0)+2,f
 10681  156C  0DE8               	rlf	(??_floorf+0)+3,f
 10682  156D  0DE9               u4160:
 10683  156E                     	decfsz	wreg,f
 10684  156E  0B89               	goto	u4165
 10685  156F  2D6A               	movf	3+(??_floorf+0)+0,w
 10686  1570  0869               	iorwf	2+(??_floorf+0)+0,w
 10687  1571  0468               	iorwf	1+(??_floorf+0)+0,w
 10688  1572  0467               	iorwf	0+(??_floorf+0)+0,w
 10689  1573  0466               	skipnz
 10690  1574  1903               	goto	u4171
 10691  1575  2D77               	goto	u4170
 10692  1576  2D78               u4171:
 10693  1577                     	goto	l1001
 10694  1577  2D83               u4170:
 10695  1578                     	line	24
 10696                           	
 10697                           l3258:	
 10698  1578                     	movlw	0xbf
 10699  1578  30BF               	movlb 1	; select bank1
 10700  1579  0141               	movwf	(floorf@u+3)^080h
 10701  157A  00A9               	movlw	0x80
 10702  157B  3080               	movwf	(floorf@u+2)^080h
 10703  157C  00A8               	movlw	0x0
 10704  157D  3000               	movwf	(floorf@u+1)^080h
 10705  157E  00A7               	movlw	0x0
 10706  157F  3000               	movwf	(floorf@u)^080h
 10707  1580  00A6               
 10708                           	goto	l1001
 10709  1581  2D83               	
 10710                           l1004:	
 10711  1582                     	goto	l1001
 10712  1582  2D83               	
 10713                           l1003:	
 10714  1583                     	line	25
 10715                           	
 10716                           l1001:	
 10717  1583                     	line	26
 10718                           	movlb 1	; select bank1
 10719  1583  0141               	movf	(floorf@u+3)^080h,w
 10720  1584  0829               	movlb 0	; select bank0
 10721  1585  0140               	movwf	(?_floorf+3)
 10722  1586  00E5               	movlb 1	; select bank1
 10723  1587  0141               	movf	(floorf@u+2)^080h,w
 10724  1588  0828               	movlb 0	; select bank0
 10725  1589  0140               	movwf	(?_floorf+2)
 10726  158A  00E4               	movlb 1	; select bank1
 10727  158B  0141               	movf	(floorf@u+1)^080h,w
 10728  158C  0827               	movlb 0	; select bank0
 10729  158D  0140               	movwf	(?_floorf+1)
 10730  158E  00E3               	movlb 1	; select bank1
 10731  158F  0141               	movf	(floorf@u)^080h,w
 10732  1590  0826               	movlb 0	; select bank0
 10733  1591  0140               	movwf	(?_floorf)
 10734  1592  00E2               
 10735                           	goto	l997
 10736  1593  2D94               	
 10737                           l3260:	
 10738  1594                     	line	27
 10739                           	
 10740                           l997:	
 10741  1594                     	return
 10742  1594  0008               	opt stack 0
 10743                           GLOBAL	__end_of_floorf
 10744                           	__end_of_floorf:
 10745  1595                     	signat	_floorf,4220
 10746                           	global	___fpclassifyf
 10747                           
 10748 ;; *************** function ___fpclassifyf *****************
 10749 ;; Defined at:
 10750 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__fpclassifyf.c"
 10751 ;; Parameters:    Size  Location     Type
 10752 ;;  x               4    0[BANK0 ] float 
 10753 ;; Auto vars:     Size  Location     Type
 10754 ;;  u               4   12[BANK0 ] struct .
 10755 ;;  e               2   10[BANK0 ] int 
 10756 ;; Return value:  Size  Location     Type
 10757 ;;                  2    0[BANK0 ] int 
 10758 ;; Registers used:
 10759 ;;		wreg, status,2, status,0
 10760 ;; Tracked objects:
 10761 ;;		On entry : 0/0
 10762 ;;		On exit  : 0/0
 10763 ;;		Unchanged: 0/0
 10764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10765 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10766 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10767 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10768 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10769 ;;Total ram usage:       16 bytes
 10770 ;; Hardware stack levels used:    1
 10771 ;; Hardware stack levels required when called:    3
 10772 ;; This function calls:
 10773 ;;		Nothing
 10774 ;; This function is called by:
 10775 ;;		_efgtoa
 10776 ;; This function uses a non-reentrant model
 10777 ;;
 10778                           psect	text17,local,class=CODE,delta=2,merge=1,group=2
 10779                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__fpclassifyf.c
                                 "
 10780                           	line	4
 10781                           global __ptext17
 10782                           __ptext17:	;psect for function ___fpclassifyf
 10783  1DB6                     psect	text17
 10784                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__fpclassifyf.c
                                 "
 10785                           	line	4
 10786                           	global	__size_of___fpclassifyf
 10787                           	__size_of___fpclassifyf	equ	__end_of___fpclassifyf-___fpclassifyf
 10788  0083                     	
 10789                           ___fpclassifyf:	
 10790  1DB6                     ;incstack = 0
 10791                           	opt	stack 7
 10792                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
 10793                           	line	6
 10794                           	
 10795                           l3194:	
 10796  1DB6                     	movlb 4	; select bank4
 10797  1DB6  0144               	movf	(___fpclassifyf@F453+3)^0200h,w
 10798  1DB7  0827               	movlb 0	; select bank0
 10799  1DB8  0140               	movwf	(___fpclassifyf@u+3)
 10800  1DB9  00AF               	movlb 4	; select bank4
 10801  1DBA  0144               	movf	(___fpclassifyf@F453+2)^0200h,w
 10802  1DBB  0826               	movlb 0	; select bank0
 10803  1DBC  0140               	movwf	(___fpclassifyf@u+2)
 10804  1DBD  00AE               	movlb 4	; select bank4
 10805  1DBE  0144               	movf	(___fpclassifyf@F453+1)^0200h,w
 10806  1DBF  0825               	movlb 0	; select bank0
 10807  1DC0  0140               	movwf	(___fpclassifyf@u+1)
 10808  1DC1  00AD               	movlb 4	; select bank4
 10809  1DC2  0144               	movf	(___fpclassifyf@F453)^0200h,w
 10810  1DC3  0824               	movlb 0	; select bank0
 10811  1DC4  0140               	movwf	(___fpclassifyf@u)
 10812  1DC5  00AC               
 10813                           	movf	(___fpclassifyf@x+3),w
 10814  1DC6  0823               	movwf	(___fpclassifyf@u+3)
 10815  1DC7  00AF               	movf	(___fpclassifyf@x+2),w
 10816  1DC8  0822               	movwf	(___fpclassifyf@u+2)
 10817  1DC9  00AE               	movf	(___fpclassifyf@x+1),w
 10818  1DCA  0821               	movwf	(___fpclassifyf@u+1)
 10819  1DCB  00AD               	movf	(___fpclassifyf@x),w
 10820  1DCC  0820               	movwf	(___fpclassifyf@u)
 10821  1DCD  00AC               
 10822                           	line	7
 10823                           	
 10824                           l3196:	
 10825  1DCE                     	movf	(___fpclassifyf@u),w
 10826  1DCE  082C               	movwf	(??___fpclassifyf+0)+0
 10827  1DCF  00A4               	movf	(___fpclassifyf@u+1),w
 10828  1DD0  082D               	movwf	((??___fpclassifyf+0)+0+1)
 10829  1DD1  00A5               	movf	(___fpclassifyf@u+2),w
 10830  1DD2  082E               	movwf	((??___fpclassifyf+0)+0+2)
 10831  1DD3  00A6               	movf	(___fpclassifyf@u+3),w
 10832  1DD4  082F               	movwf	((??___fpclassifyf+0)+0+3)
 10833  1DD5  00A7               	movlw	017h
 10834  1DD6  3017               u3955:
 10835  1DD7                     	lsrf	(??___fpclassifyf+0)+3,f
 10836  1DD7  36A7               	rrf	(??___fpclassifyf+0)+2,f
 10837  1DD8  0CA6               	rrf	(??___fpclassifyf+0)+1,f
 10838  1DD9  0CA5               	rrf	(??___fpclassifyf+0)+0,f
 10839  1DDA  0CA4               u3950:
 10840  1DDB                     	decfsz	wreg,f
 10841  1DDB  0B89               	goto	u3955
 10842  1DDC  2DD7               	movlw	0FFh
 10843  1DDD  30FF               	andwf	0+(??___fpclassifyf+0)+0,w
 10844  1DDE  0524               	movwf	(___fpclassifyf@e)
 10845  1DDF  00AA               	movlw	0
 10846  1DE0  3000               	andwf	1+(??___fpclassifyf+0)+0,w
 10847  1DE1  0525               	movwf	1+(___fpclassifyf@e)
 10848  1DE2  00AB               	line	8
 10849                           	
 10850                           l3198:	
 10851  1DE3                     	movf	((___fpclassifyf@e)),w
 10852  1DE3  082A               iorwf	((___fpclassifyf@e+1)),w
 10853  1DE4  042B               	btfss	status,2
 10854  1DE5  1D03               	goto	u3961
 10855  1DE6  2DE8               	goto	u3960
 10856  1DE7  2DE9               u3961:
 10857  1DE8                     	goto	l3208
 10858  1DE8  2E0C               u3960:
 10859  1DE9                     	
 10860                           l3200:	
 10861  1DE9                     	movf	(___fpclassifyf@u),w
 10862  1DE9  082C               	movwf	(??___fpclassifyf+0)+0
 10863  1DEA  00A4               	movf	(___fpclassifyf@u+1),w
 10864  1DEB  082D               	movwf	((??___fpclassifyf+0)+0+1)
 10865  1DEC  00A5               	movf	(___fpclassifyf@u+2),w
 10866  1DED  082E               	movwf	((??___fpclassifyf+0)+0+2)
 10867  1DEE  00A6               	movf	(___fpclassifyf@u+3),w
 10868  1DEF  082F               	movwf	((??___fpclassifyf+0)+0+3)
 10869  1DF0  00A7               	movlw	01h
 10870  1DF1  3001               u3975:
 10871  1DF2                     	lslf	(??___fpclassifyf+0)+0,f
 10872  1DF2  35A4               	rlf	(??___fpclassifyf+0)+1,f
 10873  1DF3  0DA5               	rlf	(??___fpclassifyf+0)+2,f
 10874  1DF4  0DA6               	rlf	(??___fpclassifyf+0)+3,f
 10875  1DF5  0DA7               u3970:
 10876  1DF6                     	decfsz	wreg,f
 10877  1DF6  0B89               	goto	u3975
 10878  1DF7  2DF2               	movf	3+(??___fpclassifyf+0)+0,w
 10879  1DF8  0827               	iorwf	2+(??___fpclassifyf+0)+0,w
 10880  1DF9  0426               	iorwf	1+(??___fpclassifyf+0)+0,w
 10881  1DFA  0425               	iorwf	0+(??___fpclassifyf+0)+0,w
 10882  1DFB  0424               	skipz
 10883  1DFC  1D03               	goto	u3981
 10884  1DFD  2DFF               	goto	u3980
 10885  1DFE  2E00               u3981:
 10886  1DFF                     	goto	l3204
 10887  1DFF  2E05               u3980:
 10888  1E00                     	
 10889                           l3202:	
 10890  1E00                     	movlw	02h
 10891  1E00  3002               	movwf	(?___fpclassifyf)
 10892  1E01  00A0               	movlw	0
 10893  1E02  3000               	movwf	((?___fpclassifyf))+1
 10894  1E03  00A1               	goto	l959
 10895  1E04  2E38               	
 10896                           l956:	
 10897  1E05                     	
 10898                           l3204:	
 10899  1E05                     	movlw	03h
 10900  1E05  3003               	movwf	(?___fpclassifyf)
 10901  1E06  00A0               	movlw	0
 10902  1E07  3000               	movwf	((?___fpclassifyf))+1
 10903  1E08  00A1               	goto	l959
 10904  1E09  2E38               	
 10905                           l958:	
 10906  1E0A                     	goto	l959
 10907  1E0A  2E38               	
 10908                           l3206:	
 10909  1E0B                     	goto	l959
 10910  1E0B  2E38               	
 10911                           l954:	
 10912  1E0C                     	line	9
 10913                           	
 10914                           l3208:	
 10915  1E0C                     		incf	((___fpclassifyf@e)),w
 10916  1E0C  0A2A               iorwf	((___fpclassifyf@e+1)),w
 10917  1E0D  042B               	btfss	status,2
 10918  1E0E  1D03               	goto	u3991
 10919  1E0F  2E11               	goto	u3990
 10920  1E10  2E12               u3991:
 10921  1E11                     	goto	l3214
 10922  1E11  2E33               u3990:
 10923  1E12                     	
 10924                           l3210:	
 10925  1E12                     	movf	(___fpclassifyf@u),w
 10926  1E12  082C               	movwf	(??___fpclassifyf+0)+0
 10927  1E13  00A4               	movf	(___fpclassifyf@u+1),w
 10928  1E14  082D               	movwf	((??___fpclassifyf+0)+0+1)
 10929  1E15  00A5               	movf	(___fpclassifyf@u+2),w
 10930  1E16  082E               	movwf	((??___fpclassifyf+0)+0+2)
 10931  1E17  00A6               	movf	(___fpclassifyf@u+3),w
 10932  1E18  082F               	movwf	((??___fpclassifyf+0)+0+3)
 10933  1E19  00A7               	movlw	09h
 10934  1E1A  3009               u4005:
 10935  1E1B                     	lslf	(??___fpclassifyf+0)+0,f
 10936  1E1B  35A4               	rlf	(??___fpclassifyf+0)+1,f
 10937  1E1C  0DA5               	rlf	(??___fpclassifyf+0)+2,f
 10938  1E1D  0DA6               	rlf	(??___fpclassifyf+0)+3,f
 10939  1E1E  0DA7               u4000:
 10940  1E1F                     	decfsz	wreg,f
 10941  1E1F  0B89               	goto	u4005
 10942  1E20  2E1B               	movf	3+(??___fpclassifyf+0)+0,w
 10943  1E21  0827               	iorwf	2+(??___fpclassifyf+0)+0,w
 10944  1E22  0426               	iorwf	1+(??___fpclassifyf+0)+0,w
 10945  1E23  0425               	iorwf	0+(??___fpclassifyf+0)+0,w
 10946  1E24  0424               	skipnz
 10947  1E25  1903               	goto	u4011
 10948  1E26  2E28               	goto	u4010
 10949  1E27  2E2A               u4011:
 10950  1E28                     	movlw	1
 10951  1E28  3001               	goto	u4020
 10952  1E29  2E2B               u4010:
 10953  1E2A                     	movlw	0
 10954  1E2A  3000               u4020:
 10955  1E2B                     	movwf	(??___fpclassifyf+4)+0
 10956  1E2B  00A8               	clrf	(??___fpclassifyf+4)+0+1
 10957  1E2C  01A9               	movf	0+(??___fpclassifyf+4)+0,w
 10958  1E2D  0828               	movwf	(?___fpclassifyf)
 10959  1E2E  00A0               	movf	1+(??___fpclassifyf+4)+0,w
 10960  1E2F  0829               	movwf	(?___fpclassifyf+1)
 10961  1E30  00A1               	goto	l959
 10962  1E31  2E38               	
 10963                           l3212:	
 10964  1E32                     	goto	l959
 10965  1E32  2E38               	
 10966                           l960:	
 10967  1E33                     	line	10
 10968                           	
 10969                           l3214:	
 10970  1E33                     	movlw	04h
 10971  1E33  3004               	movwf	(?___fpclassifyf)
 10972  1E34  00A0               	movlw	0
 10973  1E35  3000               	movwf	((?___fpclassifyf))+1
 10974  1E36  00A1               	goto	l959
 10975  1E37  2E38               	
 10976                           l3216:	
 10977  1E38                     	line	11
 10978                           	
 10979                           l959:	
 10980  1E38                     	return
 10981  1E38  0008               	opt stack 0
 10982                           GLOBAL	__end_of___fpclassifyf
 10983                           	__end_of___fpclassifyf:
 10984  1E39                     	signat	___fpclassifyf,4218
 10985                           	global	___fltol
 10986                           
 10987 ;; *************** function ___fltol *****************
 10988 ;; Defined at:
 10989 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
 10990 ;; Parameters:    Size  Location     Type
 10991 ;;  f1              4    0[BANK0 ] int 
 10992 ;; Auto vars:     Size  Location     Type
 10993 ;;  exp1            1   10[BANK0 ] unsigned char 
 10994 ;;  sign1           1    9[BANK0 ] unsigned char 
 10995 ;; Return value:  Size  Location     Type
 10996 ;;                  4    0[BANK0 ] long 
 10997 ;; Registers used:
 10998 ;;		wreg, status,2, status,0
 10999 ;; Tracked objects:
 11000 ;;		On entry : 0/0
 11001 ;;		On exit  : 0/0
 11002 ;;		Unchanged: 0/0
 11003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11004 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11005 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11006 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11007 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11008 ;;Total ram usage:       11 bytes
 11009 ;; Hardware stack levels used:    1
 11010 ;; Hardware stack levels required when called:    3
 11011 ;; This function calls:
 11012 ;;		Nothing
 11013 ;; This function is called by:
 11014 ;;		_efgtoa
 11015 ;; This function uses a non-reentrant model
 11016 ;;
 11017                           psect	text18,local,class=CODE,delta=2,merge=1,group=1
 11018                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
 11019                           	line	43
 11020                           global __ptext18
 11021                           __ptext18:	;psect for function ___fltol
 11022  1EC4                     psect	text18
 11023                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
 11024                           	line	43
 11025                           	global	__size_of___fltol
 11026                           	__size_of___fltol	equ	__end_of___fltol-___fltol
 11027  0095                     	
 11028                           ___fltol:	
 11029  1EC4                     ;incstack = 0
 11030                           	opt	stack 7
 11031                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 11032                           	line	47
 11033                           	
 11034                           l3408:	
 11035  1EC4                     	movlb 0	; select bank0
 11036  1EC4  0140               	movf	(___fltol@f1),w
 11037  1EC5  0820               	movwf	(??___fltol+0)+0
 11038  1EC6  00A4               	movf	(___fltol@f1+1),w
 11039  1EC7  0821               	movwf	((??___fltol+0)+0+1)
 11040  1EC8  00A5               	movf	(___fltol@f1+2),w
 11041  1EC9  0822               	movwf	((??___fltol+0)+0+2)
 11042  1ECA  00A6               	movf	(___fltol@f1+3),w
 11043  1ECB  0823               	movwf	((??___fltol+0)+0+3)
 11044  1ECC  00A7               	clrc
 11045  1ECD  1003               	rlf	(??___fltol+0)+2,w
 11046  1ECE  0D26               	rlf	(??___fltol+0)+3,w
 11047  1ECF  0D27               	movwf	(??___fltol+4)+0
 11048  1ED0  00A8               	movf	(??___fltol+4)+0,w
 11049  1ED1  0828               	movwf	(___fltol@exp1)
 11050  1ED2  00AA               	movf	(((___fltol@exp1))),w
 11051  1ED3  082A               	btfss	status,2
 11052  1ED4  1D03               	goto	u4521
 11053  1ED5  2ED7               	goto	u4520
 11054  1ED6  2ED8               u4521:
 11055  1ED7                     	goto	l3414
 11056  1ED7  2EE2               u4520:
 11057  1ED8                     	line	48
 11058                           	
 11059                           l3410:	
 11060  1ED8                     	movlw	high highword(0)
 11061  1ED8  3000               	movwf	(?___fltol+3)
 11062  1ED9  00A3               	movlw	low highword(0)
 11063  1EDA  3000               	movwf	(?___fltol+2)
 11064  1EDB  00A2               	movlw	high(0)
 11065  1EDC  3000               	movwf	(?___fltol+1)
 11066  1EDD  00A1               	movlw	low(0)
 11067  1EDE  3000               	movwf	(?___fltol)
 11068  1EDF  00A0               
 11069                           	goto	l712
 11070  1EE0  2F58               	
 11071                           l3412:	
 11072  1EE1                     	goto	l712
 11073  1EE1  2F58               	
 11074                           l711:	
 11075  1EE2                     	line	49
 11076                           	
 11077                           l3414:	
 11078  1EE2                     	movf	(___fltol@f1),w
 11079  1EE2  0820               	movwf	(??___fltol+0)+0
 11080  1EE3  00A4               	movf	(___fltol@f1+1),w
 11081  1EE4  0821               	movwf	((??___fltol+0)+0+1)
 11082  1EE5  00A5               	movf	(___fltol@f1+2),w
 11083  1EE6  0822               	movwf	((??___fltol+0)+0+2)
 11084  1EE7  00A6               	movf	(___fltol@f1+3),w
 11085  1EE8  0823               	movwf	((??___fltol+0)+0+3)
 11086  1EE9  00A7               	movlw	01Fh
 11087  1EEA  301F               u4535:
 11088  1EEB                     	lsrf	(??___fltol+0)+3,f
 11089  1EEB  36A7               	rrf	(??___fltol+0)+2,f
 11090  1EEC  0CA6               	rrf	(??___fltol+0)+1,f
 11091  1EED  0CA5               	rrf	(??___fltol+0)+0,f
 11092  1EEE  0CA4               u4530:
 11093  1EEF                     	decfsz	wreg,f
 11094  1EEF  0B89               	goto	u4535
 11095  1EF0  2EEB               	movf	0+(??___fltol+0)+0,w
 11096  1EF1  0824               	movwf	(??___fltol+4)+0
 11097  1EF2  00A8               	movf	(??___fltol+4)+0,w
 11098  1EF3  0828               	movwf	(___fltol@sign1)
 11099  1EF4  00A9               	line	50
 11100                           	
 11101                           l3416:	
 11102  1EF5                     	bsf	(___fltol@f1)+(23/8),(23)&7
 11103  1EF5  17A2               	line	51
 11104                           	
 11105                           l3418:	
 11106  1EF6                     	movlw	0FFh
 11107  1EF6  30FF               	andwf	(___fltol@f1),f
 11108  1EF7  05A0               	movlw	0FFh
 11109  1EF8  30FF               	andwf	(___fltol@f1+1),f
 11110  1EF9  05A1               	movlw	0FFh
 11111  1EFA  30FF               	andwf	(___fltol@f1+2),f
 11112  1EFB  05A2               	movlw	0
 11113  1EFC  3000               	andwf	(___fltol@f1+3),f
 11114  1EFD  05A3               	line	52
 11115                           	
 11116                           l3420:	
 11117  1EFE                     	movlw	096h
 11118  1EFE  3096               	subwf	(___fltol@exp1),f
 11119  1EFF  02AA               	line	53
 11120                           	
 11121                           l3422:	
 11122  1F00                     	btfss	(___fltol@exp1),7
 11123  1F00  1FAA               	goto	u4541
 11124  1F01  2F03               	goto	u4540
 11125  1F02  2F04               u4541:
 11126  1F03                     	goto	l3432
 11127  1F03  2F27               u4540:
 11128  1F04                     	line	54
 11129                           	
 11130                           l3424:	
 11131  1F04                     	movf	(___fltol@exp1),w
 11132  1F04  082A               	xorlw	80h
 11133  1F05  3A80               	addlw	-((-23)^80h)
 11134  1F06  3E97               	skipnc
 11135  1F07  1803               	goto	u4551
 11136  1F08  2F0A               	goto	u4550
 11137  1F09  2F0B               u4551:
 11138  1F0A                     	goto	l3430
 11139  1F0A  2F16               u4550:
 11140  1F0B                     	line	55
 11141                           	
 11142                           l3426:	
 11143  1F0B                     	movlw	high highword(0)
 11144  1F0B  3000               	movwf	(?___fltol+3)
 11145  1F0C  00A3               	movlw	low highword(0)
 11146  1F0D  3000               	movwf	(?___fltol+2)
 11147  1F0E  00A2               	movlw	high(0)
 11148  1F0F  3000               	movwf	(?___fltol+1)
 11149  1F10  00A1               	movlw	low(0)
 11150  1F11  3000               	movwf	(?___fltol)
 11151  1F12  00A0               
 11152                           	goto	l712
 11153  1F13  2F58               	
 11154                           l3428:	
 11155  1F14                     	goto	l712
 11156  1F14  2F58               	
 11157                           l714:	
 11158  1F15                     	goto	l3430
 11159  1F15  2F16               	line	56
 11160                           	
 11161                           l715:	
 11162  1F16                     	line	57
 11163                           	
 11164                           l3430:	
 11165  1F16                     	movlw	01h
 11166  1F16  3001               u4565:
 11167  1F17                     	lsrf	(___fltol@f1+3),f
 11168  1F17  36A3               	rrf	(___fltol@f1+2),f
 11169  1F18  0CA2               	rrf	(___fltol@f1+1),f
 11170  1F19  0CA1               	rrf	(___fltol@f1),f
 11171  1F1A  0CA0               	decfsz	wreg,f
 11172  1F1B  0B89               	goto	u4565
 11173  1F1C  2F17               
 11174                           	movlw	low(01h)
 11175  1F1D  3001               	movwf	(??___fltol+0)+0
 11176  1F1E  00A4               	movf	(??___fltol+0)+0,w
 11177  1F1F  0824               	addwf	(___fltol@exp1),f
 11178  1F20  07AA               	btfss	status,2
 11179  1F21  1D03               	goto	u4571
 11180  1F22  2F24               	goto	u4570
 11181  1F23  2F25               u4571:
 11182  1F24                     	goto	l3430
 11183  1F24  2F16               u4570:
 11184  1F25                     	goto	l3440
 11185  1F25  2F48               	
 11186                           l716:	
 11187  1F26                     	line	59
 11188                           	goto	l3440
 11189  1F26  2F48               	
 11190                           l713:	
 11191  1F27                     	line	60
 11192                           	
 11193                           l3432:	
 11194  1F27                     	movlw	low(020h)
 11195  1F27  3020               	subwf	(___fltol@exp1),w
 11196  1F28  022A               	skipc
 11197  1F29  1C03               	goto	u4581
 11198  1F2A  2F2C               	goto	u4580
 11199  1F2B  2F2D               u4581:
 11200  1F2C                     	goto	l719
 11201  1F2C  2F41               u4580:
 11202  1F2D                     	line	61
 11203                           	
 11204                           l3434:	
 11205  1F2D                     	movlw	high highword(0)
 11206  1F2D  3000               	movwf	(?___fltol+3)
 11207  1F2E  00A3               	movlw	low highword(0)
 11208  1F2F  3000               	movwf	(?___fltol+2)
 11209  1F30  00A2               	movlw	high(0)
 11210  1F31  3000               	movwf	(?___fltol+1)
 11211  1F32  00A1               	movlw	low(0)
 11212  1F33  3000               	movwf	(?___fltol)
 11213  1F34  00A0               
 11214                           	goto	l712
 11215  1F35  2F58               	
 11216                           l3436:	
 11217  1F36                     	goto	l712
 11218  1F36  2F58               	
 11219                           l718:	
 11220  1F37                     	line	62
 11221                           	goto	l719
 11222  1F37  2F41               	
 11223                           l720:	
 11224  1F38                     	line	63
 11225                           	
 11226                           l3438:	
 11227  1F38                     	movlw	01h
 11228  1F38  3001               u4595:
 11229  1F39                     	lslf	(___fltol@f1),f
 11230  1F39  35A0               	rlf	(___fltol@f1+1),f
 11231  1F3A  0DA1               	rlf	(___fltol@f1+2),f
 11232  1F3B  0DA2               	rlf	(___fltol@f1+3),f
 11233  1F3C  0DA3               	decfsz	wreg,f
 11234  1F3D  0B89               	goto	u4595
 11235  1F3E  2F39               	line	64
 11236                           	movlw	01h
 11237  1F3F  3001               	subwf	(___fltol@exp1),f
 11238  1F40  02AA               	line	65
 11239                           	
 11240                           l719:	
 11241  1F41                     	line	62
 11242                           	movf	((___fltol@exp1)),w
 11243  1F41  082A               	btfss	status,2
 11244  1F42  1D03               	goto	u4601
 11245  1F43  2F45               	goto	u4600
 11246  1F44  2F46               u4601:
 11247  1F45                     	goto	l3438
 11248  1F45  2F38               u4600:
 11249  1F46                     	goto	l3440
 11250  1F46  2F48               	
 11251                           l721:	
 11252  1F47                     	goto	l3440
 11253  1F47  2F48               	line	66
 11254                           	
 11255                           l717:	
 11256  1F48                     	line	67
 11257                           	
 11258                           l3440:	
 11259  1F48                     	movf	((___fltol@sign1)),w
 11260  1F48  0829               	btfsc	status,2
 11261  1F49  1903               	goto	u4611
 11262  1F4A  2F4C               	goto	u4610
 11263  1F4B  2F4D               u4611:
 11264  1F4C                     	goto	l722
 11265  1F4C  2F58               u4610:
 11266  1F4D                     	line	68
 11267                           	
 11268                           l3442:	
 11269  1F4D                     	comf	(___fltol@f1),f
 11270  1F4D  09A0               	comf	(___fltol@f1+1),f
 11271  1F4E  09A1               	comf	(___fltol@f1+2),f
 11272  1F4F  09A2               	comf	(___fltol@f1+3),f
 11273  1F50  09A3               	incf	(___fltol@f1),f
 11274  1F51  0AA0               	skipnz
 11275  1F52  1903               	incf	(___fltol@f1+1),f
 11276  1F53  0AA1               	skipnz
 11277  1F54  1903               	incf	(___fltol@f1+2),f
 11278  1F55  0AA2               	skipnz
 11279  1F56  1903               	incf	(___fltol@f1+3),f
 11280  1F57  0AA3               	
 11281                           l722:	
 11282  1F58                     	line	69
 11283                           	line	70
 11284                           	
 11285                           l712:	
 11286  1F58                     	return
 11287  1F58  0008               	opt stack 0
 11288                           GLOBAL	__end_of___fltol
 11289                           	__end_of___fltol:
 11290  1F59                     	signat	___fltol,4220
 11291                           	global	___flsub
 11292                           
 11293 ;; *************** function ___flsub *****************
 11294 ;; Defined at:
 11295 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
 11296 ;; Parameters:    Size  Location     Type
 11297 ;;  a               4   40[BANK0 ] long 
 11298 ;;  b               4   44[BANK0 ] long 
 11299 ;; Auto vars:     Size  Location     Type
 11300 ;;		None
 11301 ;; Return value:  Size  Location     Type
 11302 ;;                  4   40[BANK0 ] long 
 11303 ;; Registers used:
 11304 ;;		wreg, status,2, status,0, pclath, cstack
 11305 ;; Tracked objects:
 11306 ;;		On entry : 0/0
 11307 ;;		On exit  : 0/0
 11308 ;;		Unchanged: 0/0
 11309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11310 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11313 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11314 ;;Total ram usage:        8 bytes
 11315 ;; Hardware stack levels used:    1
 11316 ;; Hardware stack levels required when called:    4
 11317 ;; This function calls:
 11318 ;;		___fladd
 11319 ;; This function is called by:
 11320 ;;		_efgtoa
 11321 ;; This function uses a non-reentrant model
 11322 ;;
 11323                           psect	text19,local,class=CODE,delta=2,merge=1,group=1
 11324                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
 11325                           	line	242
 11326                           global __ptext19
 11327                           __ptext19:	;psect for function ___flsub
 11328  2750                     psect	text19
 11329                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
 11330                           	line	242
 11331                           	global	__size_of___flsub
 11332                           	__size_of___flsub	equ	__end_of___flsub-___flsub
 11333  0021                     	
 11334                           ___flsub:	
 11335  2750                     ;incstack = 0
 11336                           	opt	stack 6
 11337                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 11338                           	line	248
 11339                           	
 11340                           l3444:	
 11341  2750                     	movlw	080h
 11342  2750  3080               	movlb 0	; select bank0
 11343  2751  0140               	xorwf	(___flsub@a+3),f
 11344  2752  06CB               	line	249
 11345                           	
 11346                           l3446:	
 11347  2753                     	movf	(___flsub@b+3),w
 11348  2753  084F               	movwf	(___fladd@b+3)
 11349  2754  00A3               	movf	(___flsub@b+2),w
 11350  2755  084E               	movwf	(___fladd@b+2)
 11351  2756  00A2               	movf	(___flsub@b+1),w
 11352  2757  084D               	movwf	(___fladd@b+1)
 11353  2758  00A1               	movf	(___flsub@b),w
 11354  2759  084C               	movwf	(___fladd@b)
 11355  275A  00A0               
 11356                           	movf	(___flsub@a+3),w
 11357  275B  084B               	movwf	(___fladd@a+3)
 11358  275C  00A7               	movf	(___flsub@a+2),w
 11359  275D  084A               	movwf	(___fladd@a+2)
 11360  275E  00A6               	movf	(___flsub@a+1),w
 11361  275F  0849               	movwf	(___fladd@a+1)
 11362  2760  00A5               	movf	(___flsub@a),w
 11363  2761  0848               	movwf	(___fladd@a)
 11364  2762  00A4               
 11365                           	fcall	___fladd
 11366  2763  3189  21EF  31A7   	movlb 0	; select bank0
 11367  2766  0140               	movf	(3+(?___fladd)),w
 11368  2767  0823               	movwf	(?___flsub+3)
 11369  2768  00CB               	movf	(2+(?___fladd)),w
 11370  2769  0822               	movwf	(?___flsub+2)
 11371  276A  00CA               	movf	(1+(?___fladd)),w
 11372  276B  0821               	movwf	(?___flsub+1)
 11373  276C  00C9               	movf	(0+(?___fladd)),w
 11374  276D  0820               	movwf	(?___flsub)
 11375  276E  00C8               
 11376                           	goto	l865
 11377  276F  2F70               	
 11378                           l3448:	
 11379  2770                     	line	250
 11380                           	
 11381                           l865:	
 11382  2770                     	return
 11383  2770  0008               	opt stack 0
 11384                           GLOBAL	__end_of___flsub
 11385                           	__end_of___flsub:
 11386  2771                     	signat	___flsub,8316
 11387                           	global	___fladd
 11388                           
 11389 ;; *************** function ___fladd *****************
 11390 ;; Defined at:
 11391 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
 11392 ;; Parameters:    Size  Location     Type
 11393 ;;  b               4    0[BANK0 ] long 
 11394 ;;  a               4    4[BANK0 ] long 
 11395 ;; Auto vars:     Size  Location     Type
 11396 ;;  grs             1   23[BANK0 ] unsigned char 
 11397 ;;  bexp            1   22[BANK0 ] unsigned char 
 11398 ;;  aexp            1   21[BANK0 ] unsigned char 
 11399 ;;  signs           1   20[BANK0 ] unsigned char 
 11400 ;; Return value:  Size  Location     Type
 11401 ;;                  4    0[BANK0 ] unsigned char 
 11402 ;; Registers used:
 11403 ;;		wreg, status,2, status,0
 11404 ;; Tracked objects:
 11405 ;;		On entry : 0/0
 11406 ;;		On exit  : 0/0
 11407 ;;		Unchanged: 0/0
 11408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11409 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11410 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11411 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11412 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11413 ;;Total ram usage:       24 bytes
 11414 ;; Hardware stack levels used:    1
 11415 ;; Hardware stack levels required when called:    3
 11416 ;; This function calls:
 11417 ;;		Nothing
 11418 ;; This function is called by:
 11419 ;;		_efgtoa
 11420 ;;		___flsub
 11421 ;; This function uses a non-reentrant model
 11422 ;;
 11423                           psect	text20,local,class=CODE,delta=2,merge=1,group=1
 11424                           	line	10
 11425                           global __ptext20
 11426                           __ptext20:	;psect for function ___fladd
 11427  09EF                     psect	text20
 11428                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
 11429                           	line	10
 11430                           	global	__size_of___fladd
 11431                           	__size_of___fladd	equ	__end_of___fladd-___fladd
 11432  0272                     	
 11433                           ___fladd:	
 11434  09EF                     ;incstack = 0
 11435                           	opt	stack 6
 11436                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 11437                           	line	21
 11438                           	
 11439                           l2958:	
 11440  09EF                     	movlb 0	; select bank0
 11441  09EF  0140               	movf	0+(___fladd@b)+03h,w
 11442  09F0  0823               	andlw	080h
 11443  09F1  3980               	movwf	(??___fladd+0)+0
 11444  09F2  00A8               	movf	(??___fladd+0)+0,w
 11445  09F3  0828               	movwf	(___fladd@signs)
 11446  09F4  00B4               	line	22
 11447                           	
 11448                           l2960:	
 11449  09F5                     	lslf	0+(___fladd@b)+03h,w
 11450  09F5  3523               	movwf	(??___fladd+0)+0
 11451  09F6  00A8               	movf	(??___fladd+0)+0,w
 11452  09F7  0828               	movwf	(___fladd@bexp)
 11453  09F8  00B6               	line	23
 11454                           	
 11455                           l2962:	
 11456  09F9                     	btfss	0+(___fladd@b)+02h,(7)&7
 11457  09F9  1FA2               	goto	u3421
 11458  09FA  29FC               	goto	u3420
 11459  09FB  29FD               u3421:
 11460  09FC                     	goto	l2966
 11461  09FC  29FF               u3420:
 11462  09FD                     	line	24
 11463                           	
 11464                           l2964:	
 11465  09FD                     	bsf	(___fladd@bexp)+(0/8),(0)&7
 11466  09FD  1436               	goto	l2966
 11467  09FE  29FF               	line	25
 11468                           	
 11469                           l811:	
 11470  09FF                     	line	28
 11471                           	
 11472                           l2966:	
 11473  09FF                     	movf	((___fladd@bexp)),w
 11474  09FF  0836               	btfsc	status,2
 11475  0A00  1903               	goto	u3431
 11476  0A01  2A03               	goto	u3430
 11477  0A02  2A04               u3431:
 11478  0A03                     	goto	l2976
 11479  0A03  2A15               u3430:
 11480  0A04                     	line	30
 11481                           	
 11482                           l2968:	
 11483  0A04                     		incf	((___fladd@bexp)),w
 11484  0A04  0A36               	btfss	status,2
 11485  0A05  1D03               	goto	u3441
 11486  0A06  2A08               	goto	u3440
 11487  0A07  2A09               u3441:
 11488  0A08                     	goto	l2972
 11489  0A08  2A12               u3440:
 11490  0A09                     	line	32
 11491                           	
 11492                           l2970:	
 11493  0A09                     	movlw	0x0
 11494  0A09  3000               	movwf	(___fladd@b+3)
 11495  0A0A  00A3               	movlw	0x0
 11496  0A0B  3000               	movwf	(___fladd@b+2)
 11497  0A0C  00A2               	movlw	0x0
 11498  0A0D  3000               	movwf	(___fladd@b+1)
 11499  0A0E  00A1               	movlw	0x0
 11500  0A0F  3000               	movwf	(___fladd@b)
 11501  0A10  00A0               
 11502                           	goto	l2972
 11503  0A11  2A12               	line	33
 11504                           	
 11505                           l813:	
 11506  0A12                     	line	35
 11507                           	
 11508                           l2972:	
 11509  0A12                     	bsf	(___fladd@b)+(23/8),(23)&7
 11510  0A12  17A2               	line	37
 11511                           	
 11512                           l2974:	
 11513  0A13                     	clrf	0+(___fladd@b)+03h
 11514  0A13  01A3               	line	38
 11515                           	goto	l2978
 11516  0A14  2A1E               	line	39
 11517                           	
 11518                           l812:	
 11519  0A15                     	line	41
 11520                           	
 11521                           l2976:	
 11522  0A15                     	movlw	0x0
 11523  0A15  3000               	movwf	(___fladd@b+3)
 11524  0A16  00A3               	movlw	0x0
 11525  0A17  3000               	movwf	(___fladd@b+2)
 11526  0A18  00A2               	movlw	0x0
 11527  0A19  3000               	movwf	(___fladd@b+1)
 11528  0A1A  00A1               	movlw	0x0
 11529  0A1B  3000               	movwf	(___fladd@b)
 11530  0A1C  00A0               
 11531                           	goto	l2978
 11532  0A1D  2A1E               	line	42
 11533                           	
 11534                           l814:	
 11535  0A1E                     	line	44
 11536                           	
 11537                           l2978:	
 11538  0A1E                     	movf	0+(___fladd@a)+03h,w
 11539  0A1E  0827               	andlw	080h
 11540  0A1F  3980               	movwf	(??___fladd+0)+0
 11541  0A20  00A8               	movf	(??___fladd+0)+0,w
 11542  0A21  0828               	movwf	(___fladd@aexp)
 11543  0A22  00B5               	line	46
 11544                           	
 11545                           l2980:	
 11546  0A23                     	movf	(___fladd@aexp),w
 11547  0A23  0835               	xorwf	(___fladd@signs),w
 11548  0A24  0634               	skipnz
 11549  0A25  1903               	goto	u3451
 11550  0A26  2A28               	goto	u3450
 11551  0A27  2A29               u3451:
 11552  0A28                     	goto	l2984
 11553  0A28  2A2B               u3450:
 11554  0A29                     	line	47
 11555                           	
 11556                           l2982:	
 11557  0A29                     	bsf	(___fladd@signs)+(6/8),(6)&7
 11558  0A29  1734               	goto	l2984
 11559  0A2A  2A2B               	line	48
 11560                           	
 11561                           l815:	
 11562  0A2B                     	line	49
 11563                           	
 11564                           l2984:	
 11565  0A2B                     	lslf	0+(___fladd@a)+03h,w
 11566  0A2B  3527               	movwf	(??___fladd+0)+0
 11567  0A2C  00A8               	movf	(??___fladd+0)+0,w
 11568  0A2D  0828               	movwf	(___fladd@aexp)
 11569  0A2E  00B5               	line	50
 11570                           	
 11571                           l2986:	
 11572  0A2F                     	btfss	0+(___fladd@a)+02h,(7)&7
 11573  0A2F  1FA6               	goto	u3461
 11574  0A30  2A32               	goto	u3460
 11575  0A31  2A33               u3461:
 11576  0A32                     	goto	l2990
 11577  0A32  2A35               u3460:
 11578  0A33                     	line	51
 11579                           	
 11580                           l2988:	
 11581  0A33                     	bsf	(___fladd@aexp)+(0/8),(0)&7
 11582  0A33  1435               	goto	l2990
 11583  0A34  2A35               	line	52
 11584                           	
 11585                           l816:	
 11586  0A35                     	line	55
 11587                           	
 11588                           l2990:	
 11589  0A35                     	movf	((___fladd@aexp)),w
 11590  0A35  0835               	btfsc	status,2
 11591  0A36  1903               	goto	u3471
 11592  0A37  2A39               	goto	u3470
 11593  0A38  2A3A               u3471:
 11594  0A39                     	goto	l3000
 11595  0A39  2A4B               u3470:
 11596  0A3A                     	line	57
 11597                           	
 11598                           l2992:	
 11599  0A3A                     		incf	((___fladd@aexp)),w
 11600  0A3A  0A35               	btfss	status,2
 11601  0A3B  1D03               	goto	u3481
 11602  0A3C  2A3E               	goto	u3480
 11603  0A3D  2A3F               u3481:
 11604  0A3E                     	goto	l2996
 11605  0A3E  2A48               u3480:
 11606  0A3F                     	line	59
 11607                           	
 11608                           l2994:	
 11609  0A3F                     	movlw	0x0
 11610  0A3F  3000               	movwf	(___fladd@a+3)
 11611  0A40  00A7               	movlw	0x0
 11612  0A41  3000               	movwf	(___fladd@a+2)
 11613  0A42  00A6               	movlw	0x0
 11614  0A43  3000               	movwf	(___fladd@a+1)
 11615  0A44  00A5               	movlw	0x0
 11616  0A45  3000               	movwf	(___fladd@a)
 11617  0A46  00A4               
 11618                           	goto	l2996
 11619  0A47  2A48               	line	60
 11620                           	
 11621                           l818:	
 11622  0A48                     	line	62
 11623                           	
 11624                           l2996:	
 11625  0A48                     	bsf	(___fladd@a)+(23/8),(23)&7
 11626  0A48  17A6               	line	64
 11627                           	
 11628                           l2998:	
 11629  0A49                     	clrf	0+(___fladd@a)+03h
 11630  0A49  01A7               	line	65
 11631                           	goto	l819
 11632  0A4A  2A53               	line	66
 11633                           	
 11634                           l817:	
 11635  0A4B                     	line	68
 11636                           	
 11637                           l3000:	
 11638  0A4B                     	movlw	0x0
 11639  0A4B  3000               	movwf	(___fladd@a+3)
 11640  0A4C  00A7               	movlw	0x0
 11641  0A4D  3000               	movwf	(___fladd@a+2)
 11642  0A4E  00A6               	movlw	0x0
 11643  0A4F  3000               	movwf	(___fladd@a+1)
 11644  0A50  00A5               	movlw	0x0
 11645  0A51  3000               	movwf	(___fladd@a)
 11646  0A52  00A4               
 11647                           	line	69
 11648                           	
 11649                           l819:	
 11650  0A53                     	line	75
 11651                           	movf	(___fladd@bexp),w
 11652  0A53  0836               	subwf	(___fladd@aexp),w
 11653  0A54  0235               	skipnc
 11654  0A55  1803               	goto	u3491
 11655  0A56  2A58               	goto	u3490
 11656  0A57  2A59               u3491:
 11657  0A58                     	goto	l3036
 11658  0A58  2A9F               u3490:
 11659  0A59                     	line	77
 11660                           	
 11661                           l3002:	
 11662  0A59                     	btfss	(___fladd@signs),(6)&7
 11663  0A59  1F34               	goto	u3501
 11664  0A5A  2A5C               	goto	u3500
 11665  0A5B  2A5D               u3501:
 11666  0A5C                     	goto	l3006
 11667  0A5C  2A62               u3500:
 11668  0A5D                     	line	78
 11669                           	
 11670                           l3004:	
 11671  0A5D                     	movlw	low(080h)
 11672  0A5D  3080               	movwf	(??___fladd+0)+0
 11673  0A5E  00A8               	movf	(??___fladd+0)+0,w
 11674  0A5F  0828               	xorwf	(___fladd@signs),f
 11675  0A60  06B4               	goto	l3006
 11676  0A61  2A62               	line	79
 11677                           	
 11678                           l821:	
 11679  0A62                     	line	81
 11680                           	
 11681                           l3006:	
 11682  0A62                     	movf	(___fladd@bexp),w
 11683  0A62  0836               	movwf	(??___fladd+0)+0
 11684  0A63  00A8               	movf	(??___fladd+0)+0,w
 11685  0A64  0828               	movwf	(___fladd@grs)
 11686  0A65  00B7               	line	82
 11687                           	
 11688                           l3008:	
 11689  0A66                     	movf	(___fladd@aexp),w
 11690  0A66  0835               	movwf	(??___fladd+0)+0
 11691  0A67  00A8               	movf	(??___fladd+0)+0,w
 11692  0A68  0828               	movwf	(___fladd@bexp)
 11693  0A69  00B6               	line	83
 11694                           	
 11695                           l3010:	
 11696  0A6A                     	movf	(___fladd@grs),w
 11697  0A6A  0837               	movwf	(??___fladd+0)+0
 11698  0A6B  00A8               	movf	(??___fladd+0)+0,w
 11699  0A6C  0828               	movwf	(___fladd@aexp)
 11700  0A6D  00B5               	line	84
 11701                           	
 11702                           l3012:	
 11703  0A6E                     	movf	(___fladd@b),w
 11704  0A6E  0820               	movwf	(??___fladd+0)+0
 11705  0A6F  00A8               	movf	(??___fladd+0)+0,w
 11706  0A70  0828               	movwf	(___fladd@grs)
 11707  0A71  00B7               	line	85
 11708                           	
 11709                           l3014:	
 11710  0A72                     	movf	(___fladd@a),w
 11711  0A72  0824               	movwf	(??___fladd+0)+0
 11712  0A73  00A8               	movf	(??___fladd+0)+0,w
 11713  0A74  0828               	movwf	(___fladd@b)
 11714  0A75  00A0               	line	86
 11715                           	
 11716                           l3016:	
 11717  0A76                     	movf	(___fladd@grs),w
 11718  0A76  0837               	movwf	(??___fladd+0)+0
 11719  0A77  00A8               	movf	(??___fladd+0)+0,w
 11720  0A78  0828               	movwf	(___fladd@a)
 11721  0A79  00A4               	line	87
 11722                           	
 11723                           l3018:	
 11724  0A7A                     	movf	0+(___fladd@b)+01h,w
 11725  0A7A  0821               	movwf	(??___fladd+0)+0
 11726  0A7B  00A8               	movf	(??___fladd+0)+0,w
 11727  0A7C  0828               	movwf	(___fladd@grs)
 11728  0A7D  00B7               	line	88
 11729                           	
 11730                           l3020:	
 11731  0A7E                     	movf	0+(___fladd@a)+01h,w
 11732  0A7E  0825               	movwf	(??___fladd+0)+0
 11733  0A7F  00A8               	movf	(??___fladd+0)+0,w
 11734  0A80  0828               	movwf	0+(___fladd@b)+01h
 11735  0A81  00A1               	line	89
 11736                           	
 11737                           l3022:	
 11738  0A82                     	movf	(___fladd@grs),w
 11739  0A82  0837               	movwf	(??___fladd+0)+0
 11740  0A83  00A8               	movf	(??___fladd+0)+0,w
 11741  0A84  0828               	movwf	0+(___fladd@a)+01h
 11742  0A85  00A5               	line	90
 11743                           	
 11744                           l3024:	
 11745  0A86                     	movf	0+(___fladd@b)+02h,w
 11746  0A86  0822               	movwf	(??___fladd+0)+0
 11747  0A87  00A8               	movf	(??___fladd+0)+0,w
 11748  0A88  0828               	movwf	(___fladd@grs)
 11749  0A89  00B7               	line	91
 11750                           	
 11751                           l3026:	
 11752  0A8A                     	movf	0+(___fladd@a)+02h,w
 11753  0A8A  0826               	movwf	(??___fladd+0)+0
 11754  0A8B  00A8               	movf	(??___fladd+0)+0,w
 11755  0A8C  0828               	movwf	0+(___fladd@b)+02h
 11756  0A8D  00A2               	line	92
 11757                           	
 11758                           l3028:	
 11759  0A8E                     	movf	(___fladd@grs),w
 11760  0A8E  0837               	movwf	(??___fladd+0)+0
 11761  0A8F  00A8               	movf	(??___fladd+0)+0,w
 11762  0A90  0828               	movwf	0+(___fladd@a)+02h
 11763  0A91  00A6               	line	93
 11764                           	
 11765                           l3030:	
 11766  0A92                     	movf	0+(___fladd@b)+03h,w
 11767  0A92  0823               	movwf	(??___fladd+0)+0
 11768  0A93  00A8               	movf	(??___fladd+0)+0,w
 11769  0A94  0828               	movwf	(___fladd@grs)
 11770  0A95  00B7               	line	94
 11771                           	
 11772                           l3032:	
 11773  0A96                     	movf	0+(___fladd@a)+03h,w
 11774  0A96  0827               	movwf	(??___fladd+0)+0
 11775  0A97  00A8               	movf	(??___fladd+0)+0,w
 11776  0A98  0828               	movwf	0+(___fladd@b)+03h
 11777  0A99  00A3               	line	95
 11778                           	
 11779                           l3034:	
 11780  0A9A                     	movf	(___fladd@grs),w
 11781  0A9A  0837               	movwf	(??___fladd+0)+0
 11782  0A9B  00A8               	movf	(??___fladd+0)+0,w
 11783  0A9C  0828               	movwf	0+(___fladd@a)+03h
 11784  0A9D  00A7               	goto	l3036
 11785  0A9E  2A9F               	line	96
 11786                           	
 11787                           l820:	
 11788  0A9F                     	line	98
 11789                           	
 11790                           l3036:	
 11791  0A9F                     	clrf	(___fladd@grs)
 11792  0A9F  01B7               	line	100
 11793                           	
 11794                           l3038:	
 11795  0AA0                     	movf	(___fladd@bexp),w
 11796  0AA0  0836               	movwf	(??___fladd+0)+0
 11797  0AA1  00A8               	clrf	(??___fladd+0)+0+1
 11798  0AA2  01A9               	comf	(??___fladd+0)+0,f
 11799  0AA3  09A8               	comf	(??___fladd+0)+1,f
 11800  0AA4  09A9               	incf	(??___fladd+0)+0,f
 11801  0AA5  0AA8               	skipnz
 11802  0AA6  1903               	incf	(??___fladd+0)+1,f
 11803  0AA7  0AA9               	movf	(___fladd@aexp),w
 11804  0AA8  0835               	addwf	0+(??___fladd+0)+0,w
 11805  0AA9  0728               	movwf	(??___fladd+2)+0
 11806  0AAA  00AA               	movf	1+(??___fladd+0)+0,w
 11807  0AAB  0829               	skipnc
 11808  0AAC  1803               	incf	1+(??___fladd+0)+0,w
 11809  0AAD  0A29               	movwf	((??___fladd+2)+0)+1
 11810  0AAE  00AB               	movf	1+(??___fladd+2)+0,w
 11811  0AAF  082B               	xorlw	80h
 11812  0AB0  3A80               	movwf	(??___fladd+4)+0
 11813  0AB1  00AC               	movlw	(0)^80h
 11814  0AB2  3080               	subwf	(??___fladd+4)+0,w
 11815  0AB3  022C               	skipz
 11816  0AB4  1D03               	goto	u3515
 11817  0AB5  2AB8               	movlw	01Ah
 11818  0AB6  301A               	subwf	0+(??___fladd+2)+0,w
 11819  0AB7  022A               u3515:
 11820  0AB8                     
 11821                           	skipc
 11822  0AB8  1C03               	goto	u3511
 11823  0AB9  2ABB               	goto	u3510
 11824  0ABA  2ABC               u3511:
 11825  0ABB                     	goto	l3054
 11826  0ABB  2AF8               u3510:
 11827  0ABC                     	line	101
 11828                           	
 11829                           l3040:	
 11830  0ABC                     	movlb 0	; select bank0
 11831  0ABC  0140               	movf	(___fladd@b+3),w
 11832  0ABD  0823               	iorwf	(___fladd@b+2),w
 11833  0ABE  0422               	iorwf	(___fladd@b+1),w
 11834  0ABF  0421               	iorwf	(___fladd@b),w
 11835  0AC0  0420               	skipz
 11836  0AC1  1D03               	goto	u3521
 11837  0AC2  2AC4               	goto	u3520
 11838  0AC3  2AC6               u3521:
 11839  0AC4                     	movlw	1
 11840  0AC4  3001               	goto	u3530
 11841  0AC5  2AC7               u3520:
 11842  0AC6                     	movlw	0
 11843  0AC6  3000               u3530:
 11844  0AC7                     	movwf	(??___fladd+0)+0
 11845  0AC7  00A8               	movf	(??___fladd+0)+0,w
 11846  0AC8  0828               	movwf	(___fladd@grs)
 11847  0AC9  00B7               	line	102
 11848                           	movlw	high highword(0)
 11849  0ACA  3000               	movwf	(___fladd@b+3)
 11850  0ACB  00A3               	movlw	low highword(0)
 11851  0ACC  3000               	movwf	(___fladd@b+2)
 11852  0ACD  00A2               	movlw	high(0)
 11853  0ACE  3000               	movwf	(___fladd@b+1)
 11854  0ACF  00A1               	movlw	low(0)
 11855  0AD0  3000               	movwf	(___fladd@b)
 11856  0AD1  00A0               
 11857                           	line	103
 11858                           	movf	(___fladd@aexp),w
 11859  0AD2  0835               	movwf	(??___fladd+0)+0
 11860  0AD3  00A8               	movf	(??___fladd+0)+0,w
 11861  0AD4  0828               	movwf	(___fladd@bexp)
 11862  0AD5  00B6               	line	104
 11863                           	goto	l823
 11864  0AD6  2B00               	line	105
 11865                           	
 11866                           l822:	
 11867  0AD7                     	line	106
 11868                           	goto	l3054
 11869  0AD7  2AF8               	
 11870                           l825:	
 11871  0AD8                     	line	109
 11872                           	btfss	(___fladd@grs),(0)&7
 11873  0AD8  1C37               	goto	u3541
 11874  0AD9  2ADB               	goto	u3540
 11875  0ADA  2ADC               u3541:
 11876  0ADB                     	goto	l3044
 11877  0ADB  2AE2               u3540:
 11878  0ADC                     	line	110
 11879                           	
 11880                           l3042:	
 11881  0ADC                     	lsrf	(___fladd@grs),w
 11882  0ADC  3637               	iorlw	01h
 11883  0ADD  3801               	movwf	(??___fladd+0)+0
 11884  0ADE  00A8               	movf	(??___fladd+0)+0,w
 11885  0ADF  0828               	movwf	(___fladd@grs)
 11886  0AE0  00B7               	line	111
 11887                           	goto	l3046
 11888  0AE1  2AE5               	line	112
 11889                           	
 11890                           l826:	
 11891  0AE2                     	line	113
 11892                           	
 11893                           l3044:	
 11894  0AE2                     	clrc
 11895  0AE2  1003               	rrf	(___fladd@grs),f
 11896  0AE3  0CB7               
 11897                           	goto	l3046
 11898  0AE4  2AE5               	line	114
 11899                           	
 11900                           l827:	
 11901  0AE5                     	line	115
 11902                           	
 11903                           l3046:	
 11904  0AE5                     	btfss	(___fladd@b),(0)&7
 11905  0AE5  1C20               	goto	u3551
 11906  0AE6  2AE8               	goto	u3550
 11907  0AE7  2AE9               u3551:
 11908  0AE8                     	goto	l3050
 11909  0AE8  2AEB               u3550:
 11910  0AE9                     	line	116
 11911                           	
 11912                           l3048:	
 11913  0AE9                     	bsf	(___fladd@grs)+(7/8),(7)&7
 11914  0AE9  17B7               	goto	l3050
 11915  0AEA  2AEB               	line	117
 11916                           	
 11917                           l828:	
 11918  0AEB                     	line	118
 11919                           	
 11920                           l3050:	
 11921  0AEB                     	movlw	01h
 11922  0AEB  3001               	movwf	(??___fladd+0)+0
 11923  0AEC  00A8               u3565:
 11924  0AED                     	asrf	(___fladd@b+3),f
 11925  0AED  37A3               	rrf	(___fladd@b+2),f
 11926  0AEE  0CA2               	rrf	(___fladd@b+1),f
 11927  0AEF  0CA1               	rrf	(___fladd@b),f
 11928  0AF0  0CA0               	decfsz	(??___fladd+0)+0&07fh,f
 11929  0AF1  0BA8               	goto	u3565
 11930  0AF2  2AED               
 11931                           	line	119
 11932                           	
 11933                           l3052:	
 11934  0AF3                     	movlw	low(01h)
 11935  0AF3  3001               	movwf	(??___fladd+0)+0
 11936  0AF4  00A8               	movf	(??___fladd+0)+0,w
 11937  0AF5  0828               	addwf	(___fladd@bexp),f
 11938  0AF6  07B6               	goto	l3054
 11939  0AF7  2AF8               	line	120
 11940                           	
 11941                           l824:	
 11942  0AF8                     	line	106
 11943                           	
 11944                           l3054:	
 11945  0AF8                     	movlb 0	; select bank0
 11946  0AF8  0140               	movf	(___fladd@aexp),w
 11947  0AF9  0835               	subwf	(___fladd@bexp),w
 11948  0AFA  0236               	skipc
 11949  0AFB  1C03               	goto	u3571
 11950  0AFC  2AFE               	goto	u3570
 11951  0AFD  2AFF               u3571:
 11952  0AFE                     	goto	l825
 11953  0AFE  2AD8               u3570:
 11954  0AFF                     	goto	l823
 11955  0AFF  2B00               	
 11956                           l829:	
 11957  0B00                     	line	121
 11958                           	
 11959                           l823:	
 11960  0B00                     	line	124
 11961                           	btfsc	(___fladd@signs),(6)&7
 11962  0B00  1B34               	goto	u3581
 11963  0B01  2B03               	goto	u3580
 11964  0B02  2B04               u3581:
 11965  0B03                     	goto	l3080
 11966  0B03  2B40               u3580:
 11967  0B04                     	line	127
 11968                           	
 11969                           l3056:	
 11970  0B04                     	movf	((___fladd@bexp)),w
 11971  0B04  0836               	btfss	status,2
 11972  0B05  1D03               	goto	u3591
 11973  0B06  2B08               	goto	u3590
 11974  0B07  2B09               u3591:
 11975  0B08                     	goto	l3062
 11976  0B08  2B13               u3590:
 11977  0B09                     	line	128
 11978                           	
 11979                           l3058:	
 11980  0B09                     	movlw	0x0
 11981  0B09  3000               	movwf	(?___fladd+3)
 11982  0B0A  00A3               	movlw	0x0
 11983  0B0B  3000               	movwf	(?___fladd+2)
 11984  0B0C  00A2               	movlw	0x0
 11985  0B0D  3000               	movwf	(?___fladd+1)
 11986  0B0E  00A1               	movlw	0x0
 11987  0B0F  3000               	movwf	(?___fladd)
 11988  0B10  00A0               
 11989                           	goto	l832
 11990  0B11  2C60               	
 11991                           l3060:	
 11992  0B12                     	goto	l832
 11993  0B12  2C60               	line	129
 11994                           	
 11995                           l831:	
 11996  0B13                     	line	132
 11997                           	
 11998                           l3062:	
 11999  0B13                     	movf	(___fladd@a),w
 12000  0B13  0824               	addwf	(___fladd@b),f
 12001  0B14  07A0               	movf	(___fladd@a+1),w
 12002  0B15  0825               	addwfc	(___fladd@b+1),f
 12003  0B16  3DA1               	movf	(___fladd@a+2),w
 12004  0B17  0826               	addwfc	(___fladd@b+2),f
 12005  0B18  3DA2               	movf	(___fladd@a+3),w
 12006  0B19  0827               	addwfc	(___fladd@b+3),f
 12007  0B1A  3DA3               	line	134
 12008                           	
 12009                           l3064:	
 12010  0B1B                     	btfss	(___fladd@b+3),(24)&7
 12011  0B1B  1C23               	goto	u3601
 12012  0B1C  2B1E               	goto	u3600
 12013  0B1D  2B1F               u3601:
 12014  0B1E                     	goto	l3114
 12015  0B1E  2BE7               u3600:
 12016  0B1F                     	line	135
 12017                           	
 12018                           l3066:	
 12019  0B1F                     	btfss	(___fladd@grs),(0)&7
 12020  0B1F  1C37               	goto	u3611
 12021  0B20  2B22               	goto	u3610
 12022  0B21  2B23               u3611:
 12023  0B22                     	goto	l3070
 12024  0B22  2B29               u3610:
 12025  0B23                     	line	136
 12026                           	
 12027                           l3068:	
 12028  0B23                     	lsrf	(___fladd@grs),w
 12029  0B23  3637               	iorlw	01h
 12030  0B24  3801               	movwf	(??___fladd+0)+0
 12031  0B25  00A8               	movf	(??___fladd+0)+0,w
 12032  0B26  0828               	movwf	(___fladd@grs)
 12033  0B27  00B7               	line	137
 12034                           	goto	l3072
 12035  0B28  2B2C               	line	138
 12036                           	
 12037                           l834:	
 12038  0B29                     	line	139
 12039                           	
 12040                           l3070:	
 12041  0B29                     	clrc
 12042  0B29  1003               	rrf	(___fladd@grs),f
 12043  0B2A  0CB7               
 12044                           	goto	l3072
 12045  0B2B  2B2C               	line	140
 12046                           	
 12047                           l835:	
 12048  0B2C                     	line	141
 12049                           	
 12050                           l3072:	
 12051  0B2C                     	btfss	(___fladd@b),(0)&7
 12052  0B2C  1C20               	goto	u3621
 12053  0B2D  2B2F               	goto	u3620
 12054  0B2E  2B30               u3621:
 12055  0B2F                     	goto	l3076
 12056  0B2F  2B32               u3620:
 12057  0B30                     	line	142
 12058                           	
 12059                           l3074:	
 12060  0B30                     	bsf	(___fladd@grs)+(7/8),(7)&7
 12061  0B30  17B7               	goto	l3076
 12062  0B31  2B32               	line	143
 12063                           	
 12064                           l836:	
 12065  0B32                     	line	144
 12066                           	
 12067                           l3076:	
 12068  0B32                     	movlw	01h
 12069  0B32  3001               	movwf	(??___fladd+0)+0
 12070  0B33  00A8               u3635:
 12071  0B34                     	asrf	(___fladd@b+3),f
 12072  0B34  37A3               	rrf	(___fladd@b+2),f
 12073  0B35  0CA2               	rrf	(___fladd@b+1),f
 12074  0B36  0CA1               	rrf	(___fladd@b),f
 12075  0B37  0CA0               	decfsz	(??___fladd+0)+0&07fh,f
 12076  0B38  0BA8               	goto	u3635
 12077  0B39  2B34               
 12078                           	line	145
 12079                           	
 12080                           l3078:	
 12081  0B3A                     	movlw	low(01h)
 12082  0B3A  3001               	movwf	(??___fladd+0)+0
 12083  0B3B  00A8               	movf	(??___fladd+0)+0,w
 12084  0B3C  0828               	addwf	(___fladd@bexp),f
 12085  0B3D  07B6               	goto	l3114
 12086  0B3E  2BE7               	line	146
 12087                           	
 12088                           l833:	
 12089  0B3F                     	line	148
 12090                           	goto	l3114
 12091  0B3F  2BE7               	line	149
 12092                           	
 12093                           l830:	
 12094  0B40                     	line	153
 12095                           	
 12096                           l3080:	
 12097  0B40                     	movf	(___fladd@b+3),w
 12098  0B40  0823               	xorlw	80h
 12099  0B41  3A80               	movwf	(??___fladd+0)+0
 12100  0B42  00A8               	movf	(___fladd@a+3),w
 12101  0B43  0827               	xorlw	80h
 12102  0B44  3A80               	subwf	(??___fladd+0)+0,w
 12103  0B45  0228               	
 12104                           	skipz
 12105  0B46  1D03               	goto	u3643
 12106  0B47  2B52               	movf	(___fladd@a+2),w
 12107  0B48  0826               	subwf	(___fladd@b+2),w
 12108  0B49  0222               	skipz
 12109  0B4A  1D03               	goto	u3643
 12110  0B4B  2B52               	movf	(___fladd@a+1),w
 12111  0B4C  0825               	subwf	(___fladd@b+1),w
 12112  0B4D  0221               	skipz
 12113  0B4E  1D03               	goto	u3643
 12114  0B4F  2B52               	movf	(___fladd@a),w
 12115  0B50  0824               	subwf	(___fladd@b),w
 12116  0B51  0220               u3643:
 12117  0B52                     	skipnc
 12118  0B52  1803               	goto	u3641
 12119  0B53  2B55               	goto	u3640
 12120  0B54  2B56               u3641:
 12121  0B55                     	goto	l3090
 12122  0B55  2BA2               u3640:
 12123  0B56                     	line	154
 12124                           	
 12125                           l3082:	
 12126  0B56                     	movlw	0FFh
 12127  0B56  30FF               	movwf	((??___fladd+0)+0)
 12128  0B57  00A8               	movlw	0FFh
 12129  0B58  30FF               	movwf	((??___fladd+0)+0+1)
 12130  0B59  00A9               	movlw	0FFh
 12131  0B5A  30FF               	movwf	((??___fladd+0)+0+2)
 12132  0B5B  00AA               	movlw	0FFh
 12133  0B5C  30FF               	movwf	((??___fladd+0)+0+3)
 12134  0B5D  00AB               	movf	(___fladd@a),w
 12135  0B5E  0824               	movwf	(??___fladd+4)+0
 12136  0B5F  00AC               	movf	(___fladd@a+1),w
 12137  0B60  0825               	movwf	((??___fladd+4)+0+1)
 12138  0B61  00AD               	movf	(___fladd@a+2),w
 12139  0B62  0826               	movwf	((??___fladd+4)+0+2)
 12140  0B63  00AE               	movf	(___fladd@a+3),w
 12141  0B64  0827               	movwf	((??___fladd+4)+0+3)
 12142  0B65  00AF               	comf	(___fladd@b),w
 12143  0B66  0920               	movwf	(??___fladd+8)+0
 12144  0B67  00B0               	comf	(___fladd@b+1),w
 12145  0B68  0921               	movwf	((??___fladd+8)+0+1)
 12146  0B69  00B1               	comf	(___fladd@b+2),w
 12147  0B6A  0922               	movwf	((??___fladd+8)+0+2)
 12148  0B6B  00B2               	comf	(___fladd@b+3),w
 12149  0B6C  0923               	movwf	((??___fladd+8)+0+3)
 12150  0B6D  00B3               	incf	(??___fladd+8)+0,f
 12151  0B6E  0AB0               	skipnz
 12152  0B6F  1903               	incf	((??___fladd+8)+0+1),f
 12153  0B70  0AB1               	skipnz
 12154  0B71  1903               	incf	((??___fladd+8)+0+2),f
 12155  0B72  0AB2               	skipnz
 12156  0B73  1903               	incf	((??___fladd+8)+0+3),f
 12157  0B74  0AB3               	movf	0+(??___fladd+8)+0,w
 12158  0B75  0830               	addwf	(??___fladd+4)+0,f
 12159  0B76  07AC               	movf	1+(??___fladd+8)+0,w
 12160  0B77  0831               	addwfc	(??___fladd+4)+1,f
 12161  0B78  3DAD               	movf	2+(??___fladd+8)+0,w
 12162  0B79  0832               	addwfc	(??___fladd+4)+2,f
 12163  0B7A  3DAE               	movf	3+(??___fladd+8)+0,w
 12164  0B7B  0833               	addwfc	(??___fladd+4)+3,f
 12165  0B7C  3DAF               	movf	0+(??___fladd+4)+0,w
 12166  0B7D  082C               	addwf	(??___fladd+0)+0,f
 12167  0B7E  07A8               	movf	1+(??___fladd+4)+0,w
 12168  0B7F  082D               	addwfc	(??___fladd+0)+1,f
 12169  0B80  3DA9               	movf	2+(??___fladd+4)+0,w
 12170  0B81  082E               	addwfc	(??___fladd+0)+2,f
 12171  0B82  3DAA               	movf	3+(??___fladd+4)+0,w
 12172  0B83  082F               	addwfc	(??___fladd+0)+3,f
 12173  0B84  3DAB               	movf	3+(??___fladd+0)+0,w
 12174  0B85  082B               	movwf	(___fladd@b+3)
 12175  0B86  00A3               	movf	2+(??___fladd+0)+0,w
 12176  0B87  082A               	movwf	(___fladd@b+2)
 12177  0B88  00A2               	movf	1+(??___fladd+0)+0,w
 12178  0B89  0829               	movwf	(___fladd@b+1)
 12179  0B8A  00A1               	movf	0+(??___fladd+0)+0,w
 12180  0B8B  0828               	movwf	(___fladd@b)
 12181  0B8C  00A0               
 12182                           	line	155
 12183                           	movlw	low(080h)
 12184  0B8D  3080               	movwf	(??___fladd+0)+0
 12185  0B8E  00A8               	movf	(??___fladd+0)+0,w
 12186  0B8F  0828               	xorwf	(___fladd@signs),f
 12187  0B90  06B4               	line	156
 12188                           	
 12189                           l3084:	
 12190  0B91                     	comf	(___fladd@grs),f
 12191  0B91  09B7               	incf	(___fladd@grs),f
 12192  0B92  0AB7               	line	157
 12193                           	
 12194                           l3086:	
 12195  0B93                     	movf	((___fladd@grs)),w
 12196  0B93  0837               	btfss	status,2
 12197  0B94  1D03               	goto	u3651
 12198  0B95  2B97               	goto	u3650
 12199  0B96  2B98               u3651:
 12200  0B97                     	goto	l840
 12201  0B97  2BAA               u3650:
 12202  0B98                     	line	158
 12203                           	
 12204                           l3088:	
 12205  0B98                     	movlw	01h
 12206  0B98  3001               	addwf	(___fladd@b),f
 12207  0B99  07A0               	movlw	0
 12208  0B9A  3000               	addwfc	(___fladd@b+1),f
 12209  0B9B  3DA1               	movlw	0
 12210  0B9C  3000               	addwfc	(___fladd@b+2),f
 12211  0B9D  3DA2               	movlw	0
 12212  0B9E  3000               	addwfc	(___fladd@b+3),f
 12213  0B9F  3DA3               	goto	l840
 12214  0BA0  2BAA               	line	159
 12215                           	
 12216                           l839:	
 12217  0BA1                     	line	160
 12218                           	goto	l840
 12219  0BA1  2BAA               	line	161
 12220                           	
 12221                           l838:	
 12222  0BA2                     	line	162
 12223                           	
 12224                           l3090:	
 12225  0BA2                     	movf	(___fladd@a),w
 12226  0BA2  0824               	subwf	(___fladd@b),f
 12227  0BA3  02A0               	movf	(___fladd@a+1),w
 12228  0BA4  0825               	subwfb	(___fladd@b+1),f
 12229  0BA5  3BA1               	movf	(___fladd@a+2),w
 12230  0BA6  0826               	subwfb	(___fladd@b+2),f
 12231  0BA7  3BA2               	movf	(___fladd@a+3),w
 12232  0BA8  0827               	subwfb	(___fladd@b+3),f
 12233  0BA9  3BA3               	line	163
 12234                           	
 12235                           l840:	
 12236  0BAA                     	line	166
 12237                           	movf	(___fladd@b+3),w
 12238  0BAA  0823               	iorwf	(___fladd@b+2),w
 12239  0BAB  0422               	iorwf	(___fladd@b+1),w
 12240  0BAC  0421               	iorwf	(___fladd@b),w
 12241  0BAD  0420               	skipz
 12242  0BAE  1D03               	goto	u3661
 12243  0BAF  2BB1               	goto	u3660
 12244  0BB0  2BB2               u3661:
 12245  0BB1                     	goto	l3112
 12246  0BB1  2BE1               u3660:
 12247  0BB2                     	
 12248                           l3092:	
 12249  0BB2                     	movf	((___fladd@grs)),w
 12250  0BB2  0837               	btfss	status,2
 12251  0BB3  1D03               	goto	u3671
 12252  0BB4  2BB6               	goto	u3670
 12253  0BB5  2BB7               u3671:
 12254  0BB6                     	goto	l3112
 12255  0BB6  2BE1               u3670:
 12256  0BB7                     	line	167
 12257                           	
 12258                           l3094:	
 12259  0BB7                     	movlw	0x0
 12260  0BB7  3000               	movwf	(?___fladd+3)
 12261  0BB8  00A3               	movlw	0x0
 12262  0BB9  3000               	movwf	(?___fladd+2)
 12263  0BBA  00A2               	movlw	0x0
 12264  0BBB  3000               	movwf	(?___fladd+1)
 12265  0BBC  00A1               	movlw	0x0
 12266  0BBD  3000               	movwf	(?___fladd)
 12267  0BBE  00A0               
 12268                           	goto	l832
 12269  0BBF  2C60               	
 12270                           l3096:	
 12271  0BC0                     	goto	l832
 12272  0BC0  2C60               	line	168
 12273                           	
 12274                           l841:	
 12275  0BC1                     	line	171
 12276                           	goto	l3112
 12277  0BC1  2BE1               	
 12278                           l843:	
 12279  0BC2                     	line	172
 12280                           	
 12281                           l3098:	
 12282  0BC2                     	movlw	01h
 12283  0BC2  3001               u3685:
 12284  0BC3                     	lslf	(___fladd@b),f
 12285  0BC3  35A0               	rlf	(___fladd@b+1),f
 12286  0BC4  0DA1               	rlf	(___fladd@b+2),f
 12287  0BC5  0DA2               	rlf	(___fladd@b+3),f
 12288  0BC6  0DA3               	decfsz	wreg,f
 12289  0BC7  0B89               	goto	u3685
 12290  0BC8  2BC3               	line	173
 12291                           	
 12292                           l3100:	
 12293  0BC9                     	btfss	(___fladd@grs),(7)&7
 12294  0BC9  1FB7               	goto	u3691
 12295  0BCA  2BCC               	goto	u3690
 12296  0BCB  2BCD               u3691:
 12297  0BCC                     	goto	l844
 12298  0BCC  2BCE               u3690:
 12299  0BCD                     	line	174
 12300                           	
 12301                           l3102:	
 12302  0BCD                     	bsf	(___fladd@b)+(0/8),(0)&7
 12303  0BCD  1420               	line	175
 12304                           	
 12305                           l844:	
 12306  0BCE                     	line	176
 12307                           	btfss	(___fladd@grs),(0)&7
 12308  0BCE  1C37               	goto	u3701
 12309  0BCF  2BD1               	goto	u3700
 12310  0BD0  2BD2               u3701:
 12311  0BD1                     	goto	l3106
 12312  0BD1  2BD5               u3700:
 12313  0BD2                     	line	177
 12314                           	
 12315                           l3104:	
 12316  0BD2                     	setc
 12317  0BD2  1403               	rlf	(___fladd@grs),f
 12318  0BD3  0DB7               	line	178
 12319                           	goto	l3108
 12320  0BD4  2BD8               	line	179
 12321                           	
 12322                           l845:	
 12323  0BD5                     	line	180
 12324                           	
 12325                           l3106:	
 12326  0BD5                     	clrc
 12327  0BD5  1003               	rlf	(___fladd@grs),f
 12328  0BD6  0DB7               
 12329                           	goto	l3108
 12330  0BD7  2BD8               	line	181
 12331                           	
 12332                           l846:	
 12333  0BD8                     	line	182
 12334                           	
 12335                           l3108:	
 12336  0BD8                     	movf	((___fladd@bexp)),w
 12337  0BD8  0836               	btfsc	status,2
 12338  0BD9  1903               	goto	u3711
 12339  0BDA  2BDC               	goto	u3710
 12340  0BDB  2BDD               u3711:
 12341  0BDC                     	goto	l3112
 12342  0BDC  2BE1               u3710:
 12343  0BDD                     	line	183
 12344                           	
 12345                           l3110:	
 12346  0BDD                     	movlw	01h
 12347  0BDD  3001               	subwf	(___fladd@bexp),f
 12348  0BDE  02B6               	goto	l3112
 12349  0BDF  2BE1               	line	184
 12350                           	
 12351                           l847:	
 12352  0BE0                     	goto	l3112
 12353  0BE0  2BE1               	line	185
 12354                           	
 12355                           l842:	
 12356  0BE1                     	line	171
 12357                           	
 12358                           l3112:	
 12359  0BE1                     	btfss	(___fladd@b+2),(23)&7
 12360  0BE1  1FA2               	goto	u3721
 12361  0BE2  2BE4               	goto	u3720
 12362  0BE3  2BE5               u3721:
 12363  0BE4                     	goto	l3098
 12364  0BE4  2BC2               u3720:
 12365  0BE5                     	goto	l3114
 12366  0BE5  2BE7               	
 12367                           l848:	
 12368  0BE6                     	goto	l3114
 12369  0BE6  2BE7               	line	186
 12370                           	
 12371                           l837:	
 12372  0BE7                     	line	192
 12373                           	
 12374                           l3114:	
 12375  0BE7                     	clrf	(___fladd@aexp)
 12376  0BE7  01B5               	line	193
 12377                           	
 12378                           l3116:	
 12379  0BE8                     	btfss	(___fladd@grs),(7)&7
 12380  0BE8  1FB7               	goto	u3731
 12381  0BE9  2BEB               	goto	u3730
 12382  0BEA  2BEC               u3731:
 12383  0BEB                     	goto	l3124
 12384  0BEB  2BFE               u3730:
 12385  0BEC                     	line	194
 12386                           	
 12387                           l3118:	
 12388  0BEC                     	movf	(___fladd@grs),w
 12389  0BEC  0837               	andlw	07Fh
 12390  0BED  397F               	btfsc	status,2
 12391  0BEE  1903               	goto	u3741
 12392  0BEF  2BF1               	goto	u3740
 12393  0BF0  2BF2               u3741:
 12394  0BF1                     	goto	l850
 12395  0BF1  2BF5               u3740:
 12396  0BF2                     	line	195
 12397                           	
 12398                           l3120:	
 12399  0BF2                     	clrf	(___fladd@aexp)
 12400  0BF2  01B5               	incf	(___fladd@aexp),f
 12401  0BF3  0AB5               	line	196
 12402                           	goto	l3124
 12403  0BF4  2BFE               	line	197
 12404                           	
 12405                           l850:	
 12406  0BF5                     	line	198
 12407                           	btfss	(___fladd@b),(0)&7
 12408  0BF5  1C20               	goto	u3751
 12409  0BF6  2BF8               	goto	u3750
 12410  0BF7  2BF9               u3751:
 12411  0BF8                     	goto	l3124
 12412  0BF8  2BFE               u3750:
 12413  0BF9                     	line	199
 12414                           	
 12415                           l3122:	
 12416  0BF9                     	clrf	(___fladd@aexp)
 12417  0BF9  01B5               	incf	(___fladd@aexp),f
 12418  0BFA  0AB5               	goto	l3124
 12419  0BFB  2BFE               	line	200
 12420                           	
 12421                           l852:	
 12422  0BFC                     	goto	l3124
 12423  0BFC  2BFE               	line	201
 12424                           	
 12425                           l851:	
 12426  0BFD                     	goto	l3124
 12427  0BFD  2BFE               	line	202
 12428                           	
 12429                           l849:	
 12430  0BFE                     	line	203
 12431                           	
 12432                           l3124:	
 12433  0BFE                     	movf	((___fladd@aexp)),w
 12434  0BFE  0835               	btfsc	status,2
 12435  0BFF  1903               	goto	u3761
 12436  0C00  2C02               	goto	u3760
 12437  0C01  2C03               u3761:
 12438  0C02                     	goto	l853
 12439  0C02  2C32               u3760:
 12440  0C03                     	line	204
 12441                           	
 12442                           l3126:	
 12443  0C03                     	movlw	01h
 12444  0C03  3001               	addwf	(___fladd@b),f
 12445  0C04  07A0               	movlw	0
 12446  0C05  3000               	addwfc	(___fladd@b+1),f
 12447  0C06  3DA1               	movlw	0
 12448  0C07  3000               	addwfc	(___fladd@b+2),f
 12449  0C08  3DA2               	movlw	0
 12450  0C09  3000               	addwfc	(___fladd@b+3),f
 12451  0C0A  3DA3               	line	205
 12452                           	
 12453                           l3128:	
 12454  0C0B                     	btfss	(___fladd@b+3),(24)&7
 12455  0C0B  1C23               	goto	u3771
 12456  0C0C  2C0E               	goto	u3770
 12457  0C0D  2C0F               u3771:
 12458  0C0E                     	goto	l853
 12459  0C0E  2C32               u3770:
 12460  0C0F                     	line	206
 12461                           	
 12462                           l3130:	
 12463  0C0F                     	movf	(___fladd@b),w
 12464  0C0F  0820               	movwf	(??___fladd+0)+0
 12465  0C10  00A8               	movf	(___fladd@b+1),w
 12466  0C11  0821               	movwf	((??___fladd+0)+0+1)
 12467  0C12  00A9               	movf	(___fladd@b+2),w
 12468  0C13  0822               	movwf	((??___fladd+0)+0+2)
 12469  0C14  00AA               	movf	(___fladd@b+3),w
 12470  0C15  0823               	movwf	((??___fladd+0)+0+3)
 12471  0C16  00AB               	movlw	01h
 12472  0C17  3001               	movwf	(??___fladd+4)+0
 12473  0C18  00AC               u3785:
 12474  0C19                     	asrf	(??___fladd+0)+3,f
 12475  0C19  37AB               	rrf	(??___fladd+0)+2,f
 12476  0C1A  0CAA               	rrf	(??___fladd+0)+1,f
 12477  0C1B  0CA9               	rrf	(??___fladd+0)+0,f
 12478  0C1C  0CA8               u3780:
 12479  0C1D                     	decfsz	(??___fladd+4)+0,f
 12480  0C1D  0BAC               	goto	u3785
 12481  0C1E  2C19               	movf	3+(??___fladd+0)+0,w
 12482  0C1F  082B               	movwf	(___fladd@b+3)
 12483  0C20  00A3               	movf	2+(??___fladd+0)+0,w
 12484  0C21  082A               	movwf	(___fladd@b+2)
 12485  0C22  00A2               	movf	1+(??___fladd+0)+0,w
 12486  0C23  0829               	movwf	(___fladd@b+1)
 12487  0C24  00A1               	movf	0+(??___fladd+0)+0,w
 12488  0C25  0828               	movwf	(___fladd@b)
 12489  0C26  00A0               
 12490                           	line	207
 12491                           		incf	((___fladd@bexp)),w
 12492  0C27  0A36               	btfsc	status,2
 12493  0C28  1903               	goto	u3791
 12494  0C29  2C2B               	goto	u3790
 12495  0C2A  2C2C               u3791:
 12496  0C2B                     	goto	l853
 12497  0C2B  2C32               u3790:
 12498  0C2C                     	line	208
 12499                           	
 12500                           l3132:	
 12501  0C2C                     	movlw	low(01h)
 12502  0C2C  3001               	movwf	(??___fladd+0)+0
 12503  0C2D  00A8               	movf	(??___fladd+0)+0,w
 12504  0C2E  0828               	addwf	(___fladd@bexp),f
 12505  0C2F  07B6               	goto	l853
 12506  0C30  2C32               	line	209
 12507                           	
 12508                           l855:	
 12509  0C31                     	goto	l853
 12510  0C31  2C32               	line	210
 12511                           	
 12512                           l854:	
 12513  0C32                     	line	211
 12514                           	
 12515                           l853:	
 12516  0C32                     	line	215
 12517                           		incf	((___fladd@bexp)),w
 12518  0C32  0A36               	btfsc	status,2
 12519  0C33  1903               	goto	u3801
 12520  0C34  2C36               	goto	u3800
 12521  0C35  2C37               u3801:
 12522  0C36                     	goto	l3136
 12523  0C36  2C3D               u3800:
 12524  0C37                     	
 12525                           l3134:	
 12526  0C37                     	movf	((___fladd@bexp)),w
 12527  0C37  0836               	btfss	status,2
 12528  0C38  1D03               	goto	u3811
 12529  0C39  2C3B               	goto	u3810
 12530  0C3A  2C3C               u3811:
 12531  0C3B                     	goto	l3142
 12532  0C3B  2C4D               u3810:
 12533  0C3C                     	goto	l3136
 12534  0C3C  2C3D               	
 12535                           l858:	
 12536  0C3D                     	line	216
 12537                           	
 12538                           l3136:	
 12539  0C3D                     	movlw	high highword(0)
 12540  0C3D  3000               	movwf	(___fladd@b+3)
 12541  0C3E  00A3               	movlw	low highword(0)
 12542  0C3F  3000               	movwf	(___fladd@b+2)
 12543  0C40  00A2               	movlw	high(0)
 12544  0C41  3000               	movwf	(___fladd@b+1)
 12545  0C42  00A1               	movlw	low(0)
 12546  0C43  3000               	movwf	(___fladd@b)
 12547  0C44  00A0               
 12548                           	line	218
 12549                           	
 12550                           l3138:	
 12551  0C45                     	movf	((___fladd@bexp)),w
 12552  0C45  0836               	btfss	status,2
 12553  0C46  1D03               	goto	u3821
 12554  0C47  2C49               	goto	u3820
 12555  0C48  2C4A               u3821:
 12556  0C49                     	goto	l3142
 12557  0C49  2C4D               u3820:
 12558  0C4A                     	line	219
 12559                           	
 12560                           l3140:	
 12561  0C4A                     	clrf	(___fladd@signs)
 12562  0C4A  01B4               	goto	l3142
 12563  0C4B  2C4D               	line	220
 12564                           	
 12565                           l859:	
 12566  0C4C                     	goto	l3142
 12567  0C4C  2C4D               	line	221
 12568                           	
 12569                           l856:	
 12570  0C4D                     	line	225
 12571                           	
 12572                           l3142:	
 12573  0C4D                     	btfss	(___fladd@bexp),(0)&7
 12574  0C4D  1C36               	goto	u3831
 12575  0C4E  2C50               	goto	u3830
 12576  0C4F  2C51               u3831:
 12577  0C50                     	goto	l3146
 12578  0C50  2C53               u3830:
 12579  0C51                     	line	226
 12580                           	
 12581                           l3144:	
 12582  0C51                     	bsf	0+(___fladd@b)+02h+(7/8),(7)&7
 12583  0C51  17A2               	line	227
 12584                           	goto	l861
 12585  0C52  2C57               	line	229
 12586                           	
 12587                           l860:	
 12588  0C53                     	line	230
 12589                           	
 12590                           l3146:	
 12591  0C53                     	movlw	low(07Fh)
 12592  0C53  307F               	movwf	(??___fladd+0)+0
 12593  0C54  00A8               	movf	(??___fladd+0)+0,w
 12594  0C55  0828               	andwf	0+(___fladd@b)+02h,f
 12595  0C56  05A2               	line	231
 12596                           	
 12597                           l861:	
 12598  0C57                     	line	232
 12599                           	lsrf	(___fladd@bexp),w
 12600  0C57  3636               	movwf	(??___fladd+0)+0
 12601  0C58  00A8               	movf	(??___fladd+0)+0,w
 12602  0C59  0828               	movwf	0+(___fladd@b)+03h
 12603  0C5A  00A3               	line	233
 12604                           	
 12605                           l3148:	
 12606  0C5B                     	btfss	(___fladd@signs),(7)&7
 12607  0C5B  1FB4               	goto	u3841
 12608  0C5C  2C5E               	goto	u3840
 12609  0C5D  2C5F               u3841:
 12610  0C5E                     	goto	l862
 12611  0C5E  2C60               u3840:
 12612  0C5F                     	line	234
 12613                           	
 12614                           l3150:	
 12615  0C5F                     	bsf	0+(___fladd@b)+03h+(7/8),(7)&7
 12616  0C5F  17A3               	line	235
 12617                           	
 12618                           l862:	
 12619  0C60                     	line	236
 12620                           	line	237
 12621                           	
 12622                           l832:	
 12623  0C60                     	return
 12624  0C60  0008               	opt stack 0
 12625                           GLOBAL	__end_of___fladd
 12626                           	__end_of___fladd:
 12627  0C61                     	signat	___fladd,8316
 12628                           	global	___flneg
 12629                           
 12630 ;; *************** function ___flneg *****************
 12631 ;; Defined at:
 12632 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flneg.c"
 12633 ;; Parameters:    Size  Location     Type
 12634 ;;  f1              4    0[BANK0 ] unsigned char 
 12635 ;; Auto vars:     Size  Location     Type
 12636 ;;		None
 12637 ;; Return value:  Size  Location     Type
 12638 ;;                  4    0[BANK0 ] unsigned char 
 12639 ;; Registers used:
 12640 ;;		wreg
 12641 ;; Tracked objects:
 12642 ;;		On entry : 0/0
 12643 ;;		On exit  : 0/0
 12644 ;;		Unchanged: 0/0
 12645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12646 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12649 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12650 ;;Total ram usage:        4 bytes
 12651 ;; Hardware stack levels used:    1
 12652 ;; Hardware stack levels required when called:    3
 12653 ;; This function calls:
 12654 ;;		Nothing
 12655 ;; This function is called by:
 12656 ;;		_efgtoa
 12657 ;; This function uses a non-reentrant model
 12658 ;;
 12659                           psect	text21,local,class=CODE,delta=2,merge=1,group=1
 12660                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flneg.c"
 12661                           	line	15
 12662                           global __ptext21
 12663                           __ptext21:	;psect for function ___flneg
 12664  1800                     psect	text21
 12665                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flneg.c"
 12666                           	line	15
 12667                           	global	__size_of___flneg
 12668                           	__size_of___flneg	equ	__end_of___flneg-___flneg
 12669  000E                     	
 12670                           ___flneg:	
 12671  1800                     ;incstack = 0
 12672                           	opt	stack 7
 12673                           ; Regs used in ___flneg: [wreg]
 12674                           	line	17
 12675                           	
 12676                           l3400:	
 12677  1800                     	movlb 0	; select bank0
 12678  1800  0140               	movf	(___flneg@f1+3),w
 12679  1801  0823               	iorwf	(___flneg@f1+2),w
 12680  1802  0422               	iorwf	(___flneg@f1+1),w
 12681  1803  0421               	iorwf	(___flneg@f1),w
 12682  1804  0420               	skipnz
 12683  1805  1903               	goto	u4511
 12684  1806  2808               	goto	u4510
 12685  1807  2809               u4511:
 12686  1808                     	goto	l3404
 12687  1808  280C               u4510:
 12688  1809                     	line	18
 12689                           	
 12690                           l3402:	
 12691  1809                     	movlw	080h
 12692  1809  3080               	xorwf	(___flneg@f1+3),f
 12693  180A  06A3               	goto	l3404
 12694  180B  280C               	
 12695                           l707:	
 12696  180C                     	line	19
 12697                           	
 12698                           l3404:	
 12699  180C                     	goto	l708
 12700  180C  280D               	
 12701                           l3406:	
 12702  180D                     	line	20
 12703                           	
 12704                           l708:	
 12705  180D                     	return
 12706  180D  0008               	opt stack 0
 12707                           GLOBAL	__end_of___flneg
 12708                           	__end_of___flneg:
 12709  180E                     	signat	___flneg,4220
 12710                           	global	___flge
 12711                           
 12712 ;; *************** function ___flge *****************
 12713 ;; Defined at:
 12714 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flge.c"
 12715 ;; Parameters:    Size  Location     Type
 12716 ;;  ff1             4   40[BANK0 ] unsigned char 
 12717 ;;  ff2             4   44[BANK0 ] unsigned char 
 12718 ;; Auto vars:     Size  Location     Type
 12719 ;;		None
 12720 ;; Return value:  Size  Location     Type
 12721 ;;		None               void
 12722 ;; Registers used:
 12723 ;;		wreg, status,2, status,0
 12724 ;; Tracked objects:
 12725 ;;		On entry : 0/0
 12726 ;;		On exit  : 0/0
 12727 ;;		Unchanged: 0/0
 12728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12729 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12731 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12732 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12733 ;;Total ram usage:       16 bytes
 12734 ;; Hardware stack levels used:    1
 12735 ;; Hardware stack levels required when called:    3
 12736 ;; This function calls:
 12737 ;;		Nothing
 12738 ;; This function is called by:
 12739 ;;		_efgtoa
 12740 ;; This function uses a non-reentrant model
 12741 ;;
 12742                           psect	text22,local,class=CODE,delta=2,merge=1,group=1
 12743                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flge.c"
 12744                           	line	4
 12745                           global __ptext22
 12746                           __ptext22:	;psect for function ___flge
 12747  1027                     psect	text22
 12748                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flge.c"
 12749                           	line	4
 12750                           	global	__size_of___flge
 12751                           	__size_of___flge	equ	__end_of___flge-___flge
 12752  00AE                     	
 12753                           ___flge:	
 12754  1027                     ;incstack = 0
 12755                           	opt	stack 7
 12756                           ; Regs used in ___flge: [wreg+status,2+status,0]
 12757                           	line	7
 12758                           	
 12759                           l3374:	
 12760  1027                     	movlw	0
 12761  1027  3000               	movlb 0	; select bank0
 12762  1028  0140               	andwf	(___flge@ff1),w
 12763  1029  0548               	movwf	(??___flge+0)+0
 12764  102A  00D0               	movlw	0
 12765  102B  3000               	andwf	(___flge@ff1+1),w
 12766  102C  0549               	movwf	((??___flge+0)+0+1)
 12767  102D  00D1               	movlw	080h
 12768  102E  3080               	andwf	(___flge@ff1+2),w
 12769  102F  054A               	movwf	((??___flge+0)+0+2)
 12770  1030  00D2               	movlw	07Fh
 12771  1031  307F               	andwf	(___flge@ff1+3),w
 12772  1032  054B               	movwf	((??___flge+0)+0+3)
 12773  1033  00D3               	movf	3+(??___flge+0)+0,w
 12774  1034  0853               	iorwf	2+(??___flge+0)+0,w
 12775  1035  0452               	iorwf	1+(??___flge+0)+0,w
 12776  1036  0451               	iorwf	0+(??___flge+0)+0,w
 12777  1037  0450               	skipz
 12778  1038  1D03               	goto	u4461
 12779  1039  283B               	goto	u4460
 12780  103A  283C               u4461:
 12781  103B                     	goto	l696
 12782  103B  2844               u4460:
 12783  103C                     	line	8
 12784                           	
 12785                           l3376:	
 12786  103C                     	movlw	high highword(0)
 12787  103C  3000               	movwf	(___flge@ff1+3)
 12788  103D  00CB               	movlw	low highword(0)
 12789  103E  3000               	movwf	(___flge@ff1+2)
 12790  103F  00CA               	movlw	high(0)
 12791  1040  3000               	movwf	(___flge@ff1+1)
 12792  1041  00C9               	movlw	low(0)
 12793  1042  3000               	movwf	(___flge@ff1)
 12794  1043  00C8               
 12795                           	
 12796                           l696:	
 12797  1044                     	line	9
 12798                           	movlw	0
 12799  1044  3000               	andwf	(___flge@ff2),w
 12800  1045  054C               	movwf	(??___flge+0)+0
 12801  1046  00D0               	movlw	0
 12802  1047  3000               	andwf	(___flge@ff2+1),w
 12803  1048  054D               	movwf	((??___flge+0)+0+1)
 12804  1049  00D1               	movlw	080h
 12805  104A  3080               	andwf	(___flge@ff2+2),w
 12806  104B  054E               	movwf	((??___flge+0)+0+2)
 12807  104C  00D2               	movlw	07Fh
 12808  104D  307F               	andwf	(___flge@ff2+3),w
 12809  104E  054F               	movwf	((??___flge+0)+0+3)
 12810  104F  00D3               	movf	3+(??___flge+0)+0,w
 12811  1050  0853               	iorwf	2+(??___flge+0)+0,w
 12812  1051  0452               	iorwf	1+(??___flge+0)+0,w
 12813  1052  0451               	iorwf	0+(??___flge+0)+0,w
 12814  1053  0450               	skipz
 12815  1054  1D03               	goto	u4471
 12816  1055  2857               	goto	u4470
 12817  1056  2858               u4471:
 12818  1057                     	goto	l3380
 12819  1057  2861               u4470:
 12820  1058                     	line	10
 12821                           	
 12822                           l3378:	
 12823  1058                     	movlw	high highword(0)
 12824  1058  3000               	movwf	(___flge@ff2+3)
 12825  1059  00CF               	movlw	low highword(0)
 12826  105A  3000               	movwf	(___flge@ff2+2)
 12827  105B  00CE               	movlw	high(0)
 12828  105C  3000               	movwf	(___flge@ff2+1)
 12829  105D  00CD               	movlw	low(0)
 12830  105E  3000               	movwf	(___flge@ff2)
 12831  105F  00CC               
 12832                           	goto	l3380
 12833  1060  2861               	
 12834                           l697:	
 12835  1061                     	line	12
 12836                           	
 12837                           l3380:	
 12838  1061                     	btfss	(___flge@ff1+3),(31)&7
 12839  1061  1FCB               	goto	u4481
 12840  1062  2864               	goto	u4480
 12841  1063  2865               u4481:
 12842  1064                     	goto	l3384
 12843  1064  288D               u4480:
 12844  1065                     	line	13
 12845                           	
 12846                           l3382:	
 12847  1065                     	movlw	0
 12848  1065  3000               	movwf	((??___flge+0)+0)
 12849  1066  00D0               	movlw	0
 12850  1067  3000               	movwf	((??___flge+0)+0+1)
 12851  1068  00D1               	movlw	0
 12852  1069  3000               	movwf	((??___flge+0)+0+2)
 12853  106A  00D2               	movlw	080h
 12854  106B  3080               	movwf	((??___flge+0)+0+3)
 12855  106C  00D3               	comf	(___flge@ff1),w
 12856  106D  0948               	movwf	(??___flge+4)+0
 12857  106E  00D4               	comf	(___flge@ff1+1),w
 12858  106F  0949               	movwf	((??___flge+4)+0+1)
 12859  1070  00D5               	comf	(___flge@ff1+2),w
 12860  1071  094A               	movwf	((??___flge+4)+0+2)
 12861  1072  00D6               	comf	(___flge@ff1+3),w
 12862  1073  094B               	movwf	((??___flge+4)+0+3)
 12863  1074  00D7               	incf	(??___flge+4)+0,f
 12864  1075  0AD4               	skipnz
 12865  1076  1903               	incf	((??___flge+4)+0+1),f
 12866  1077  0AD5               	skipnz
 12867  1078  1903               	incf	((??___flge+4)+0+2),f
 12868  1079  0AD6               	skipnz
 12869  107A  1903               	incf	((??___flge+4)+0+3),f
 12870  107B  0AD7               	movf	0+(??___flge+4)+0,w
 12871  107C  0854               	addwf	(??___flge+0)+0,f
 12872  107D  07D0               	movf	1+(??___flge+4)+0,w
 12873  107E  0855               	addwfc	(??___flge+0)+1,f
 12874  107F  3DD1               	movf	2+(??___flge+4)+0,w
 12875  1080  0856               	addwfc	(??___flge+0)+2,f
 12876  1081  3DD2               	movf	3+(??___flge+4)+0,w
 12877  1082  0857               	addwfc	(??___flge+0)+3,f
 12878  1083  3DD3               	movf	3+(??___flge+0)+0,w
 12879  1084  0853               	movwf	(___flge@ff1+3)
 12880  1085  00CB               	movf	2+(??___flge+0)+0,w
 12881  1086  0852               	movwf	(___flge@ff1+2)
 12882  1087  00CA               	movf	1+(??___flge+0)+0,w
 12883  1088  0851               	movwf	(___flge@ff1+1)
 12884  1089  00C9               	movf	0+(??___flge+0)+0,w
 12885  108A  0850               	movwf	(___flge@ff1)
 12886  108B  00C8               
 12887                           	goto	l3384
 12888  108C  288D               	
 12889                           l698:	
 12890  108D                     	line	14
 12891                           	
 12892                           l3384:	
 12893  108D                     	btfss	(___flge@ff2+3),(31)&7
 12894  108D  1FCF               	goto	u4491
 12895  108E  2890               	goto	u4490
 12896  108F  2891               u4491:
 12897  1090                     	goto	l3388
 12898  1090  28B9               u4490:
 12899  1091                     	line	15
 12900                           	
 12901                           l3386:	
 12902  1091                     	movlw	0
 12903  1091  3000               	movwf	((??___flge+0)+0)
 12904  1092  00D0               	movlw	0
 12905  1093  3000               	movwf	((??___flge+0)+0+1)
 12906  1094  00D1               	movlw	0
 12907  1095  3000               	movwf	((??___flge+0)+0+2)
 12908  1096  00D2               	movlw	080h
 12909  1097  3080               	movwf	((??___flge+0)+0+3)
 12910  1098  00D3               	comf	(___flge@ff2),w
 12911  1099  094C               	movwf	(??___flge+4)+0
 12912  109A  00D4               	comf	(___flge@ff2+1),w
 12913  109B  094D               	movwf	((??___flge+4)+0+1)
 12914  109C  00D5               	comf	(___flge@ff2+2),w
 12915  109D  094E               	movwf	((??___flge+4)+0+2)
 12916  109E  00D6               	comf	(___flge@ff2+3),w
 12917  109F  094F               	movwf	((??___flge+4)+0+3)
 12918  10A0  00D7               	incf	(??___flge+4)+0,f
 12919  10A1  0AD4               	skipnz
 12920  10A2  1903               	incf	((??___flge+4)+0+1),f
 12921  10A3  0AD5               	skipnz
 12922  10A4  1903               	incf	((??___flge+4)+0+2),f
 12923  10A5  0AD6               	skipnz
 12924  10A6  1903               	incf	((??___flge+4)+0+3),f
 12925  10A7  0AD7               	movf	0+(??___flge+4)+0,w
 12926  10A8  0854               	addwf	(??___flge+0)+0,f
 12927  10A9  07D0               	movf	1+(??___flge+4)+0,w
 12928  10AA  0855               	addwfc	(??___flge+0)+1,f
 12929  10AB  3DD1               	movf	2+(??___flge+4)+0,w
 12930  10AC  0856               	addwfc	(??___flge+0)+2,f
 12931  10AD  3DD2               	movf	3+(??___flge+4)+0,w
 12932  10AE  0857               	addwfc	(??___flge+0)+3,f
 12933  10AF  3DD3               	movf	3+(??___flge+0)+0,w
 12934  10B0  0853               	movwf	(___flge@ff2+3)
 12935  10B1  00CF               	movf	2+(??___flge+0)+0,w
 12936  10B2  0852               	movwf	(___flge@ff2+2)
 12937  10B3  00CE               	movf	1+(??___flge+0)+0,w
 12938  10B4  0851               	movwf	(___flge@ff2+1)
 12939  10B5  00CD               	movf	0+(??___flge+0)+0,w
 12940  10B6  0850               	movwf	(___flge@ff2)
 12941  10B7  00CC               
 12942                           	goto	l3388
 12943  10B8  28B9               	
 12944                           l699:	
 12945  10B9                     	line	16
 12946                           	
 12947                           l3388:	
 12948  10B9                     	movlw	080h
 12949  10B9  3080               	xorwf	(___flge@ff1+3),f
 12950  10BA  06CB               	line	17
 12951                           	
 12952                           l3390:	
 12953  10BB                     	movlw	080h
 12954  10BB  3080               	xorwf	(___flge@ff2+3),f
 12955  10BC  06CF               	line	18
 12956                           	
 12957                           l3392:	
 12958  10BD                     	movf	(___flge@ff2+3),w
 12959  10BD  084F               	subwf	(___flge@ff1+3),w
 12960  10BE  024B               	skipz
 12961  10BF  1D03               	goto	u4505
 12962  10C0  28CB               	movf	(___flge@ff2+2),w
 12963  10C1  084E               	subwf	(___flge@ff1+2),w
 12964  10C2  024A               	skipz
 12965  10C3  1D03               	goto	u4505
 12966  10C4  28CB               	movf	(___flge@ff2+1),w
 12967  10C5  084D               	subwf	(___flge@ff1+1),w
 12968  10C6  0249               	skipz
 12969  10C7  1D03               	goto	u4505
 12970  10C8  28CB               	movf	(___flge@ff2),w
 12971  10C9  084C               	subwf	(___flge@ff1),w
 12972  10CA  0248               u4505:
 12973  10CB                     	skipnc
 12974  10CB  1803               	goto	u4501
 12975  10CC  28CE               	goto	u4500
 12976  10CD  28CF               u4501:
 12977  10CE                     	goto	l3396
 12978  10CE  28D1               u4500:
 12979  10CF                     	
 12980                           l3394:	
 12981  10CF                     	clrc
 12982  10CF  1003               	
 12983                           	goto	l704
 12984  10D0  28D4               	
 12985                           l701:	
 12986  10D1                     	
 12987                           l3396:	
 12988  10D1                     	setc
 12989  10D1  1403               	
 12990                           	goto	l704
 12991  10D2  28D4               	
 12992                           l703:	
 12993  10D3                     	goto	l704
 12994  10D3  28D4               	
 12995                           l3398:	
 12996  10D4                     	line	19
 12997                           	
 12998                           l704:	
 12999  10D4                     	return
 13000  10D4  0008               	opt stack 0
 13001                           GLOBAL	__end_of___flge
 13002                           	__end_of___flge:
 13003  10D5                     	signat	___flge,8312
 13004                           	global	___fleq
 13005                           
 13006 ;; *************** function ___fleq *****************
 13007 ;; Defined at:
 13008 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fleq.c"
 13009 ;; Parameters:    Size  Location     Type
 13010 ;;  ff1             4    0[BANK0 ] unsigned char 
 13011 ;;  ff2             4    4[BANK0 ] unsigned char 
 13012 ;; Auto vars:     Size  Location     Type
 13013 ;;		None
 13014 ;; Return value:  Size  Location     Type
 13015 ;;		None               void
 13016 ;; Registers used:
 13017 ;;		wreg, status,2, status,0
 13018 ;; Tracked objects:
 13019 ;;		On entry : 0/0
 13020 ;;		On exit  : 0/0
 13021 ;;		Unchanged: 0/0
 13022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13023 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13025 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13026 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13027 ;;Total ram usage:       12 bytes
 13028 ;; Hardware stack levels used:    1
 13029 ;; Hardware stack levels required when called:    3
 13030 ;; This function calls:
 13031 ;;		Nothing
 13032 ;; This function is called by:
 13033 ;;		_efgtoa
 13034 ;; This function uses a non-reentrant model
 13035 ;;
 13036                           psect	text23,local,class=CODE,delta=2,merge=1,group=1
 13037                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fleq.c"
 13038                           	line	4
 13039                           global __ptext23
 13040                           __ptext23:	;psect for function ___fleq
 13041  07A7                     psect	text23
 13042                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fleq.c"
 13043                           	line	4
 13044                           	global	__size_of___fleq
 13045                           	__size_of___fleq	equ	__end_of___fleq-___fleq
 13046  0051                     	
 13047                           ___fleq:	
 13048  07A7                     ;incstack = 0
 13049                           	opt	stack 7
 13050                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 13051                           	line	7
 13052                           	
 13053                           l3362:	
 13054  07A7                     	movlw	0
 13055  07A7  3000               	movlb 0	; select bank0
 13056  07A8  0140               	andwf	(___fleq@ff1),w
 13057  07A9  0520               	movwf	(??___fleq+0)+0
 13058  07AA  00A8               	movlw	0
 13059  07AB  3000               	andwf	(___fleq@ff1+1),w
 13060  07AC  0521               	movwf	((??___fleq+0)+0+1)
 13061  07AD  00A9               	movlw	080h
 13062  07AE  3080               	andwf	(___fleq@ff1+2),w
 13063  07AF  0522               	movwf	((??___fleq+0)+0+2)
 13064  07B0  00AA               	movlw	07Fh
 13065  07B1  307F               	andwf	(___fleq@ff1+3),w
 13066  07B2  0523               	movwf	((??___fleq+0)+0+3)
 13067  07B3  00AB               	movf	3+(??___fleq+0)+0,w
 13068  07B4  082B               	iorwf	2+(??___fleq+0)+0,w
 13069  07B5  042A               	iorwf	1+(??___fleq+0)+0,w
 13070  07B6  0429               	iorwf	0+(??___fleq+0)+0,w
 13071  07B7  0428               	skipz
 13072  07B8  1D03               	goto	u4431
 13073  07B9  2FBB               	goto	u4430
 13074  07BA  2FBC               u4431:
 13075  07BB                     	goto	l687
 13076  07BB  2FC4               u4430:
 13077  07BC                     	line	8
 13078                           	
 13079                           l3364:	
 13080  07BC                     	movlw	high highword(0)
 13081  07BC  3000               	movwf	(___fleq@ff1+3)
 13082  07BD  00A3               	movlw	low highword(0)
 13083  07BE  3000               	movwf	(___fleq@ff1+2)
 13084  07BF  00A2               	movlw	high(0)
 13085  07C0  3000               	movwf	(___fleq@ff1+1)
 13086  07C1  00A1               	movlw	low(0)
 13087  07C2  3000               	movwf	(___fleq@ff1)
 13088  07C3  00A0               
 13089                           	
 13090                           l687:	
 13091  07C4                     	line	9
 13092                           	movlw	0
 13093  07C4  3000               	andwf	(___fleq@ff2),w
 13094  07C5  0524               	movwf	(??___fleq+0)+0
 13095  07C6  00A8               	movlw	0
 13096  07C7  3000               	andwf	(___fleq@ff2+1),w
 13097  07C8  0525               	movwf	((??___fleq+0)+0+1)
 13098  07C9  00A9               	movlw	080h
 13099  07CA  3080               	andwf	(___fleq@ff2+2),w
 13100  07CB  0526               	movwf	((??___fleq+0)+0+2)
 13101  07CC  00AA               	movlw	07Fh
 13102  07CD  307F               	andwf	(___fleq@ff2+3),w
 13103  07CE  0527               	movwf	((??___fleq+0)+0+3)
 13104  07CF  00AB               	movf	3+(??___fleq+0)+0,w
 13105  07D0  082B               	iorwf	2+(??___fleq+0)+0,w
 13106  07D1  042A               	iorwf	1+(??___fleq+0)+0,w
 13107  07D2  0429               	iorwf	0+(??___fleq+0)+0,w
 13108  07D3  0428               	skipz
 13109  07D4  1D03               	goto	u4441
 13110  07D5  2FD7               	goto	u4440
 13111  07D6  2FD8               u4441:
 13112  07D7                     	goto	l688
 13113  07D7  2FE0               u4440:
 13114  07D8                     	line	10
 13115                           	
 13116                           l3366:	
 13117  07D8                     	movlw	high highword(0)
 13118  07D8  3000               	movwf	(___fleq@ff2+3)
 13119  07D9  00A7               	movlw	low highword(0)
 13120  07DA  3000               	movwf	(___fleq@ff2+2)
 13121  07DB  00A6               	movlw	high(0)
 13122  07DC  3000               	movwf	(___fleq@ff2+1)
 13123  07DD  00A5               	movlw	low(0)
 13124  07DE  3000               	movwf	(___fleq@ff2)
 13125  07DF  00A4               
 13126                           	
 13127                           l688:	
 13128  07E0                     	line	11
 13129                           	movf	(___fleq@ff2+3),w
 13130  07E0  0827               	xorwf	(___fleq@ff1+3),w
 13131  07E1  0623               	skipz
 13132  07E2  1D03               	goto	u4455
 13133  07E3  2FEE               	movf	(___fleq@ff2+2),w
 13134  07E4  0826               	xorwf	(___fleq@ff1+2),w
 13135  07E5  0622               	skipz
 13136  07E6  1D03               	goto	u4455
 13137  07E7  2FEE               	movf	(___fleq@ff2+1),w
 13138  07E8  0825               	xorwf	(___fleq@ff1+1),w
 13139  07E9  0621               	skipz
 13140  07EA  1D03               	goto	u4455
 13141  07EB  2FEE               	movf	(___fleq@ff2),w
 13142  07EC  0824               	xorwf	(___fleq@ff1),w
 13143  07ED  0620               u4455:
 13144  07EE                     	skipnz
 13145  07EE  1903               	goto	u4451
 13146  07EF  2FF1               	goto	u4450
 13147  07F0  2FF2               u4451:
 13148  07F1                     	goto	l3370
 13149  07F1  2FF4               u4450:
 13150  07F2                     	
 13151                           l3368:	
 13152  07F2                     	clrc
 13153  07F2  1003               	
 13154                           	goto	l693
 13155  07F3  2FF7               	
 13156                           l690:	
 13157  07F4                     	
 13158                           l3370:	
 13159  07F4                     	setc
 13160  07F4  1403               	
 13161                           	goto	l693
 13162  07F5  2FF7               	
 13163                           l692:	
 13164  07F6                     	goto	l693
 13165  07F6  2FF7               	
 13166                           l3372:	
 13167  07F7                     	line	12
 13168                           	
 13169                           l693:	
 13170  07F7                     	return
 13171  07F7  0008               	opt stack 0
 13172                           GLOBAL	__end_of___fleq
 13173                           	__end_of___fleq:
 13174  07F8                     	signat	___fleq,8312
 13175                           	global	___awmod
 13176                           
 13177 ;; *************** function ___awmod *****************
 13178 ;; Defined at:
 13179 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 13180 ;; Parameters:    Size  Location     Type
 13181 ;;  divisor         2    0[BANK0 ] int 
 13182 ;;  dividend        2    2[BANK0 ] int 
 13183 ;; Auto vars:     Size  Location     Type
 13184 ;;  sign            1    6[BANK0 ] unsigned char 
 13185 ;;  counter         1    5[BANK0 ] unsigned char 
 13186 ;; Return value:  Size  Location     Type
 13187 ;;                  2    0[BANK0 ] int 
 13188 ;; Registers used:
 13189 ;;		wreg, status,2, status,0
 13190 ;; Tracked objects:
 13191 ;;		On entry : 0/0
 13192 ;;		On exit  : 0/0
 13193 ;;		Unchanged: 0/0
 13194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13195 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13196 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13197 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13198 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13199 ;;Total ram usage:        7 bytes
 13200 ;; Hardware stack levels used:    1
 13201 ;; Hardware stack levels required when called:    3
 13202 ;; This function calls:
 13203 ;;		Nothing
 13204 ;; This function is called by:
 13205 ;;		_efgtoa
 13206 ;; This function uses a non-reentrant model
 13207 ;;
 13208                           psect	text24,local,class=CODE,delta=2,merge=1,group=1
 13209                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 13210                           	line	5
 13211                           global __ptext24
 13212                           __ptext24:	;psect for function ___awmod
 13213  1BB3                     psect	text24
 13214                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 13215                           	line	5
 13216                           	global	__size_of___awmod
 13217                           	__size_of___awmod	equ	__end_of___awmod-___awmod
 13218  005E                     	
 13219                           ___awmod:	
 13220  1BB3                     ;incstack = 0
 13221                           	opt	stack 7
 13222                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 13223                           	line	12
 13224                           	
 13225                           l3324:	
 13226  1BB3                     	movlb 0	; select bank0
 13227  1BB3  0140               	clrf	(___awmod@sign)
 13228  1BB4  01A6               	line	13
 13229                           	
 13230                           l3326:	
 13231  1BB5                     	btfss	(___awmod@dividend+1),7
 13232  1BB5  1FA3               	goto	u4341
 13233  1BB6  2BB8               	goto	u4340
 13234  1BB7  2BB9               u4341:
 13235  1BB8                     	goto	l3332
 13236  1BB8  2BC1               u4340:
 13237  1BB9                     	line	14
 13238                           	
 13239                           l3328:	
 13240  1BB9                     	comf	(___awmod@dividend),f
 13241  1BB9  09A2               	comf	(___awmod@dividend+1),f
 13242  1BBA  09A3               	incf	(___awmod@dividend),f
 13243  1BBB  0AA2               	skipnz
 13244  1BBC  1903               	incf	(___awmod@dividend+1),f
 13245  1BBD  0AA3               	line	15
 13246                           	
 13247                           l3330:	
 13248  1BBE                     	clrf	(___awmod@sign)
 13249  1BBE  01A6               	incf	(___awmod@sign),f
 13250  1BBF  0AA6               	goto	l3332
 13251  1BC0  2BC1               	line	16
 13252                           	
 13253                           l674:	
 13254  1BC1                     	line	17
 13255                           	
 13256                           l3332:	
 13257  1BC1                     	btfss	(___awmod@divisor+1),7
 13258  1BC1  1FA1               	goto	u4351
 13259  1BC2  2BC4               	goto	u4350
 13260  1BC3  2BC5               u4351:
 13261  1BC4                     	goto	l3336
 13262  1BC4  2BCB               u4350:
 13263  1BC5                     	line	18
 13264                           	
 13265                           l3334:	
 13266  1BC5                     	comf	(___awmod@divisor),f
 13267  1BC5  09A0               	comf	(___awmod@divisor+1),f
 13268  1BC6  09A1               	incf	(___awmod@divisor),f
 13269  1BC7  0AA0               	skipnz
 13270  1BC8  1903               	incf	(___awmod@divisor+1),f
 13271  1BC9  0AA1               	goto	l3336
 13272  1BCA  2BCB               	
 13273                           l675:	
 13274  1BCB                     	line	19
 13275                           	
 13276                           l3336:	
 13277  1BCB                     	movf	((___awmod@divisor)),w
 13278  1BCB  0820               iorwf	((___awmod@divisor+1)),w
 13279  1BCC  0421               	btfsc	status,2
 13280  1BCD  1903               	goto	u4361
 13281  1BCE  2BD0               	goto	u4360
 13282  1BCF  2BD1               u4361:
 13283  1BD0                     	goto	l3354
 13284  1BD0  2C00               u4360:
 13285  1BD1                     	line	20
 13286                           	
 13287                           l3338:	
 13288  1BD1                     	clrf	(___awmod@counter)
 13289  1BD1  01A5               	incf	(___awmod@counter),f
 13290  1BD2  0AA5               	line	21
 13291                           	goto	l3344
 13292  1BD3  2BDE               	
 13293                           l678:	
 13294  1BD4                     	line	22
 13295                           	
 13296                           l3340:	
 13297  1BD4                     	movlw	01h
 13298  1BD4  3001               	
 13299                           u4375:
 13300  1BD5                     	lslf	(___awmod@divisor),f
 13301  1BD5  35A0               	rlf	(___awmod@divisor+1),f
 13302  1BD6  0DA1               	decfsz	wreg,f
 13303  1BD7  0B89               	goto	u4375
 13304  1BD8  2BD5               	line	23
 13305                           	
 13306                           l3342:	
 13307  1BD9                     	movlw	low(01h)
 13308  1BD9  3001               	movwf	(??___awmod+0)+0
 13309  1BDA  00A4               	movf	(??___awmod+0)+0,w
 13310  1BDB  0824               	addwf	(___awmod@counter),f
 13311  1BDC  07A5               	goto	l3344
 13312  1BDD  2BDE               	line	24
 13313                           	
 13314                           l677:	
 13315  1BDE                     	line	21
 13316                           	
 13317                           l3344:	
 13318  1BDE                     	btfss	(___awmod@divisor+1),(15)&7
 13319  1BDE  1FA1               	goto	u4381
 13320  1BDF  2BE1               	goto	u4380
 13321  1BE0  2BE2               u4381:
 13322  1BE1                     	goto	l3340
 13323  1BE1  2BD4               u4380:
 13324  1BE2                     	goto	l3346
 13325  1BE2  2BE4               	
 13326                           l679:	
 13327  1BE3                     	goto	l3346
 13328  1BE3  2BE4               	line	25
 13329                           	
 13330                           l680:	
 13331  1BE4                     	line	26
 13332                           	
 13333                           l3346:	
 13334  1BE4                     	movf	(___awmod@divisor+1),w
 13335  1BE4  0821               	subwf	(___awmod@dividend+1),w
 13336  1BE5  0223               	skipz
 13337  1BE6  1D03               	goto	u4395
 13338  1BE7  2BEA               	movf	(___awmod@divisor),w
 13339  1BE8  0820               	subwf	(___awmod@dividend),w
 13340  1BE9  0222               u4395:
 13341  1BEA                     	skipc
 13342  1BEA  1C03               	goto	u4391
 13343  1BEB  2BED               	goto	u4390
 13344  1BEC  2BEE               u4391:
 13345  1BED                     	goto	l3350
 13346  1BED  2BF3               u4390:
 13347  1BEE                     	line	27
 13348                           	
 13349                           l3348:	
 13350  1BEE                     	movf	(___awmod@divisor),w
 13351  1BEE  0820               	subwf	(___awmod@dividend),f
 13352  1BEF  02A2               	movf	(___awmod@divisor+1),w
 13353  1BF0  0821               	subwfb	(___awmod@dividend+1),f
 13354  1BF1  3BA3               	goto	l3350
 13355  1BF2  2BF3               	
 13356                           l681:	
 13357  1BF3                     	line	28
 13358                           	
 13359                           l3350:	
 13360  1BF3                     	movlw	01h
 13361  1BF3  3001               	
 13362                           u4405:
 13363  1BF4                     	lsrf	(___awmod@divisor+1),f
 13364  1BF4  36A1               	rrf	(___awmod@divisor),f
 13365  1BF5  0CA0               	decfsz	wreg,f
 13366  1BF6  0B89               	goto	u4405
 13367  1BF7  2BF4               	line	29
 13368                           	
 13369                           l3352:	
 13370  1BF8                     	movlw	01h
 13371  1BF8  3001               	subwf	(___awmod@counter),f
 13372  1BF9  02A5               	btfss	status,2
 13373  1BFA  1D03               	goto	u4411
 13374  1BFB  2BFD               	goto	u4410
 13375  1BFC  2BFE               u4411:
 13376  1BFD                     	goto	l3346
 13377  1BFD  2BE4               u4410:
 13378  1BFE                     	goto	l3354
 13379  1BFE  2C00               	
 13380                           l682:	
 13381  1BFF                     	goto	l3354
 13382  1BFF  2C00               	line	30
 13383                           	
 13384                           l676:	
 13385  1C00                     	line	31
 13386                           	
 13387                           l3354:	
 13388  1C00                     	movf	((___awmod@sign)),w
 13389  1C00  0826               	btfsc	status,2
 13390  1C01  1903               	goto	u4421
 13391  1C02  2C04               	goto	u4420
 13392  1C03  2C05               u4421:
 13393  1C04                     	goto	l3358
 13394  1C04  2C0B               u4420:
 13395  1C05                     	line	32
 13396                           	
 13397                           l3356:	
 13398  1C05                     	comf	(___awmod@dividend),f
 13399  1C05  09A2               	comf	(___awmod@dividend+1),f
 13400  1C06  09A3               	incf	(___awmod@dividend),f
 13401  1C07  0AA2               	skipnz
 13402  1C08  1903               	incf	(___awmod@dividend+1),f
 13403  1C09  0AA3               	goto	l3358
 13404  1C0A  2C0B               	
 13405                           l683:	
 13406  1C0B                     	line	33
 13407                           	
 13408                           l3358:	
 13409  1C0B                     	movf	(___awmod@dividend+1),w
 13410  1C0B  0823               	movwf	(?___awmod+1)
 13411  1C0C  00A1               	movf	(___awmod@dividend),w
 13412  1C0D  0822               	movwf	(?___awmod)
 13413  1C0E  00A0               	goto	l684
 13414  1C0F  2C10               	
 13415                           l3360:	
 13416  1C10                     	line	34
 13417                           	
 13418                           l684:	
 13419  1C10                     	return
 13420  1C10  0008               	opt stack 0
 13421                           GLOBAL	__end_of___awmod
 13422                           	__end_of___awmod:
 13423  1C11                     	signat	___awmod,8314
 13424                           	global	___awdiv
 13425                           
 13426 ;; *************** function ___awdiv *****************
 13427 ;; Defined at:
 13428 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 13429 ;; Parameters:    Size  Location     Type
 13430 ;;  divisor         2    0[BANK0 ] int 
 13431 ;;  dividend        2    2[BANK0 ] int 
 13432 ;; Auto vars:     Size  Location     Type
 13433 ;;  quotient        2    7[BANK0 ] int 
 13434 ;;  sign            1    6[BANK0 ] unsigned char 
 13435 ;;  counter         1    5[BANK0 ] unsigned char 
 13436 ;; Return value:  Size  Location     Type
 13437 ;;                  2    0[BANK0 ] int 
 13438 ;; Registers used:
 13439 ;;		wreg, status,2, status,0
 13440 ;; Tracked objects:
 13441 ;;		On entry : 0/0
 13442 ;;		On exit  : 0/0
 13443 ;;		Unchanged: 0/0
 13444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13445 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13446 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13447 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13448 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13449 ;;Total ram usage:        9 bytes
 13450 ;; Hardware stack levels used:    1
 13451 ;; Hardware stack levels required when called:    3
 13452 ;; This function calls:
 13453 ;;		Nothing
 13454 ;; This function is called by:
 13455 ;;		_efgtoa
 13456 ;; This function uses a non-reentrant model
 13457 ;;
 13458                           psect	text25,local,class=CODE,delta=2,merge=1,group=1
 13459                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 13460                           	line	5
 13461                           global __ptext25
 13462                           __ptext25:	;psect for function ___awdiv
 13463  1C6F                     psect	text25
 13464                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 13465                           	line	5
 13466                           	global	__size_of___awdiv
 13467                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 13468  006A                     	
 13469                           ___awdiv:	
 13470  1C6F                     ;incstack = 0
 13471                           	opt	stack 7
 13472                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13473                           	line	13
 13474                           	
 13475                           l3280:	
 13476  1C6F                     	movlb 0	; select bank0
 13477  1C6F  0140               	clrf	(___awdiv@sign)
 13478  1C70  01A6               	line	14
 13479                           	
 13480                           l3282:	
 13481  1C71                     	btfss	(___awdiv@divisor+1),7
 13482  1C71  1FA1               	goto	u4241
 13483  1C72  2C74               	goto	u4240
 13484  1C73  2C75               u4241:
 13485  1C74                     	goto	l3288
 13486  1C74  2C7D               u4240:
 13487  1C75                     	line	15
 13488                           	
 13489                           l3284:	
 13490  1C75                     	comf	(___awdiv@divisor),f
 13491  1C75  09A0               	comf	(___awdiv@divisor+1),f
 13492  1C76  09A1               	incf	(___awdiv@divisor),f
 13493  1C77  0AA0               	skipnz
 13494  1C78  1903               	incf	(___awdiv@divisor+1),f
 13495  1C79  0AA1               	line	16
 13496                           	
 13497                           l3286:	
 13498  1C7A                     	clrf	(___awdiv@sign)
 13499  1C7A  01A6               	incf	(___awdiv@sign),f
 13500  1C7B  0AA6               	goto	l3288
 13501  1C7C  2C7D               	line	17
 13502                           	
 13503                           l661:	
 13504  1C7D                     	line	18
 13505                           	
 13506                           l3288:	
 13507  1C7D                     	btfss	(___awdiv@dividend+1),7
 13508  1C7D  1FA3               	goto	u4251
 13509  1C7E  2C80               	goto	u4250
 13510  1C7F  2C81               u4251:
 13511  1C80                     	goto	l3294
 13512  1C80  2C8B               u4250:
 13513  1C81                     	line	19
 13514                           	
 13515                           l3290:	
 13516  1C81                     	comf	(___awdiv@dividend),f
 13517  1C81  09A2               	comf	(___awdiv@dividend+1),f
 13518  1C82  09A3               	incf	(___awdiv@dividend),f
 13519  1C83  0AA2               	skipnz
 13520  1C84  1903               	incf	(___awdiv@dividend+1),f
 13521  1C85  0AA3               	line	20
 13522                           	
 13523                           l3292:	
 13524  1C86                     	movlw	low(01h)
 13525  1C86  3001               	movwf	(??___awdiv+0)+0
 13526  1C87  00A4               	movf	(??___awdiv+0)+0,w
 13527  1C88  0824               	xorwf	(___awdiv@sign),f
 13528  1C89  06A6               	goto	l3294
 13529  1C8A  2C8B               	line	21
 13530                           	
 13531                           l662:	
 13532  1C8B                     	line	22
 13533                           	
 13534                           l3294:	
 13535  1C8B                     	clrf	(___awdiv@quotient)
 13536  1C8B  01A7               	clrf	(___awdiv@quotient+1)
 13537  1C8C  01A8               	line	23
 13538                           	
 13539                           l3296:	
 13540  1C8D                     	movf	((___awdiv@divisor)),w
 13541  1C8D  0820               iorwf	((___awdiv@divisor+1)),w
 13542  1C8E  0421               	btfsc	status,2
 13543  1C8F  1903               	goto	u4261
 13544  1C90  2C92               	goto	u4260
 13545  1C91  2C93               u4261:
 13546  1C92                     	goto	l3316
 13547  1C92  2CC8               u4260:
 13548  1C93                     	line	24
 13549                           	
 13550                           l3298:	
 13551  1C93                     	clrf	(___awdiv@counter)
 13552  1C93  01A5               	incf	(___awdiv@counter),f
 13553  1C94  0AA5               	line	25
 13554                           	goto	l3304
 13555  1C95  2CA0               	
 13556                           l665:	
 13557  1C96                     	line	26
 13558                           	
 13559                           l3300:	
 13560  1C96                     	movlw	01h
 13561  1C96  3001               	
 13562                           u4275:
 13563  1C97                     	lslf	(___awdiv@divisor),f
 13564  1C97  35A0               	rlf	(___awdiv@divisor+1),f
 13565  1C98  0DA1               	decfsz	wreg,f
 13566  1C99  0B89               	goto	u4275
 13567  1C9A  2C97               	line	27
 13568                           	
 13569                           l3302:	
 13570  1C9B                     	movlw	low(01h)
 13571  1C9B  3001               	movwf	(??___awdiv+0)+0
 13572  1C9C  00A4               	movf	(??___awdiv+0)+0,w
 13573  1C9D  0824               	addwf	(___awdiv@counter),f
 13574  1C9E  07A5               	goto	l3304
 13575  1C9F  2CA0               	line	28
 13576                           	
 13577                           l664:	
 13578  1CA0                     	line	25
 13579                           	
 13580                           l3304:	
 13581  1CA0                     	btfss	(___awdiv@divisor+1),(15)&7
 13582  1CA0  1FA1               	goto	u4281
 13583  1CA1  2CA3               	goto	u4280
 13584  1CA2  2CA4               u4281:
 13585  1CA3                     	goto	l3300
 13586  1CA3  2C96               u4280:
 13587  1CA4                     	goto	l3306
 13588  1CA4  2CA6               	
 13589                           l666:	
 13590  1CA5                     	goto	l3306
 13591  1CA5  2CA6               	line	29
 13592                           	
 13593                           l667:	
 13594  1CA6                     	line	30
 13595                           	
 13596                           l3306:	
 13597  1CA6                     	movlw	01h
 13598  1CA6  3001               	
 13599                           u4295:
 13600  1CA7                     	lslf	(___awdiv@quotient),f
 13601  1CA7  35A7               	rlf	(___awdiv@quotient+1),f
 13602  1CA8  0DA8               	decfsz	wreg,f
 13603  1CA9  0B89               	goto	u4295
 13604  1CAA  2CA7               	line	31
 13605                           	movf	(___awdiv@divisor+1),w
 13606  1CAB  0821               	subwf	(___awdiv@dividend+1),w
 13607  1CAC  0223               	skipz
 13608  1CAD  1D03               	goto	u4305
 13609  1CAE  2CB1               	movf	(___awdiv@divisor),w
 13610  1CAF  0820               	subwf	(___awdiv@dividend),w
 13611  1CB0  0222               u4305:
 13612  1CB1                     	skipc
 13613  1CB1  1C03               	goto	u4301
 13614  1CB2  2CB4               	goto	u4300
 13615  1CB3  2CB5               u4301:
 13616  1CB4                     	goto	l3312
 13617  1CB4  2CBB               u4300:
 13618  1CB5                     	line	32
 13619                           	
 13620                           l3308:	
 13621  1CB5                     	movf	(___awdiv@divisor),w
 13622  1CB5  0820               	subwf	(___awdiv@dividend),f
 13623  1CB6  02A2               	movf	(___awdiv@divisor+1),w
 13624  1CB7  0821               	subwfb	(___awdiv@dividend+1),f
 13625  1CB8  3BA3               	line	33
 13626                           	
 13627                           l3310:	
 13628  1CB9                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
 13629  1CB9  1427               	goto	l3312
 13630  1CBA  2CBB               	line	34
 13631                           	
 13632                           l668:	
 13633  1CBB                     	line	35
 13634                           	
 13635                           l3312:	
 13636  1CBB                     	movlw	01h
 13637  1CBB  3001               	
 13638                           u4315:
 13639  1CBC                     	lsrf	(___awdiv@divisor+1),f
 13640  1CBC  36A1               	rrf	(___awdiv@divisor),f
 13641  1CBD  0CA0               	decfsz	wreg,f
 13642  1CBE  0B89               	goto	u4315
 13643  1CBF  2CBC               	line	36
 13644                           	
 13645                           l3314:	
 13646  1CC0                     	movlw	01h
 13647  1CC0  3001               	subwf	(___awdiv@counter),f
 13648  1CC1  02A5               	btfss	status,2
 13649  1CC2  1D03               	goto	u4321
 13650  1CC3  2CC5               	goto	u4320
 13651  1CC4  2CC6               u4321:
 13652  1CC5                     	goto	l3306
 13653  1CC5  2CA6               u4320:
 13654  1CC6                     	goto	l3316
 13655  1CC6  2CC8               	
 13656                           l669:	
 13657  1CC7                     	goto	l3316
 13658  1CC7  2CC8               	line	37
 13659                           	
 13660                           l663:	
 13661  1CC8                     	line	38
 13662                           	
 13663                           l3316:	
 13664  1CC8                     	movf	((___awdiv@sign)),w
 13665  1CC8  0826               	btfsc	status,2
 13666  1CC9  1903               	goto	u4331
 13667  1CCA  2CCC               	goto	u4330
 13668  1CCB  2CCD               u4331:
 13669  1CCC                     	goto	l3320
 13670  1CCC  2CD3               u4330:
 13671  1CCD                     	line	39
 13672                           	
 13673                           l3318:	
 13674  1CCD                     	comf	(___awdiv@quotient),f
 13675  1CCD  09A7               	comf	(___awdiv@quotient+1),f
 13676  1CCE  09A8               	incf	(___awdiv@quotient),f
 13677  1CCF  0AA7               	skipnz
 13678  1CD0  1903               	incf	(___awdiv@quotient+1),f
 13679  1CD1  0AA8               	goto	l3320
 13680  1CD2  2CD3               	
 13681                           l670:	
 13682  1CD3                     	line	40
 13683                           	
 13684                           l3320:	
 13685  1CD3                     	movf	(___awdiv@quotient+1),w
 13686  1CD3  0828               	movwf	(?___awdiv+1)
 13687  1CD4  00A1               	movf	(___awdiv@quotient),w
 13688  1CD5  0827               	movwf	(?___awdiv)
 13689  1CD6  00A0               	goto	l671
 13690  1CD7  2CD8               	
 13691                           l3322:	
 13692  1CD8                     	line	41
 13693                           	
 13694                           l671:	
 13695  1CD8                     	return
 13696  1CD8  0008               	opt stack 0
 13697                           GLOBAL	__end_of___awdiv
 13698                           	__end_of___awdiv:
 13699  1CD9                     	signat	___awdiv,8314
 13700                           	global	_atoi
 13701                           
 13702 ;; *************** function _atoi *****************
 13703 ;; Defined at:
 13704 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\atoi.c"
 13705 ;; Parameters:    Size  Location     Type
 13706 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 13707 ;;		 -> STR_2(52), 
 13708 ;; Auto vars:     Size  Location     Type
 13709 ;;  n               2   19[BANK0 ] int 
 13710 ;;  neg             2   12[BANK0 ] int 
 13711 ;; Return value:  Size  Location     Type
 13712 ;;                  2    6[BANK0 ] int 
 13713 ;; Registers used:
 13714 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13715 ;; Tracked objects:
 13716 ;;		On entry : 0/0
 13717 ;;		On exit  : 0/0
 13718 ;;		Unchanged: 0/0
 13719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13720 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13721 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13722 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13723 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13724 ;;Total ram usage:       15 bytes
 13725 ;; Hardware stack levels used:    1
 13726 ;; Hardware stack levels required when called:    4
 13727 ;; This function calls:
 13728 ;;		___wmul
 13729 ;;		_isdigit
 13730 ;;		_isspace
 13731 ;; This function is called by:
 13732 ;;		_vfpfcnvrt
 13733 ;; This function uses a non-reentrant model
 13734 ;;
 13735                           psect	text26,local,class=CODE,delta=2,merge=1,group=2
 13736                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\atoi.c"
 13737                           	line	4
 13738                           global __ptext26
 13739                           __ptext26:	;psect for function _atoi
 13740  124D                     psect	text26
 13741                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\atoi.c"
 13742                           	line	4
 13743                           	global	__size_of_atoi
 13744                           	__size_of_atoi	equ	__end_of_atoi-_atoi
 13745  00E7                     	
 13746                           _atoi:	
 13747  124D                     ;incstack = 0
 13748                           	opt	stack 7
 13749                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13750                           	line	6
 13751                           	
 13752                           l4056:	
 13753  124D                     	movlb 0	; select bank0
 13754  124D  0140               	clrf	(atoi@n)
 13755  124E  01B3               	clrf	(atoi@n+1)
 13756  124F  01B4               	clrf	(atoi@neg)
 13757  1250  01AC               	clrf	(atoi@neg+1)
 13758  1251  01AD               	line	7
 13759                           	goto	l4060
 13760  1252  2A58               	
 13761                           l968:	
 13762  1253                     	
 13763                           l4058:	
 13764  1253                     	movlw	01h
 13765  1253  3001               	addwf	(atoi@s),f
 13766  1254  07A6               	movlw	0
 13767  1255  3000               	addwfc	(atoi@s+1),f
 13768  1256  3DA7               	goto	l4060
 13769  1257  2A58               	
 13770                           l967:	
 13771  1258                     	
 13772                           l4060:	
 13773  1258                     	clrf	(_atoi$1170)
 13774  1258  01B2               	incf	(_atoi$1170),f
 13775  1259  0AB2               	
 13776                           l4062:	
 13777  125A                     	movf	(atoi@s),w
 13778  125A  0826               	movwf	fsr0l
 13779  125B  0084               	movf	((atoi@s+1)),w
 13780  125C  0827               	movwf	fsr0h
 13781  125D  0085               	moviw	fsr0++
 13782  125E  0012               xorlw	32
 13783  125F  3A20               	btfsc	status,2
 13784  1260  1903               	goto	u5731
 13785  1261  2A63               	goto	u5730
 13786  1262  2A64               u5731:
 13787  1263                     	goto	l4068
 13788  1263  2A7A               u5730:
 13789  1264                     	
 13790                           l4064:	
 13791  1264                     	movf	(atoi@s),w
 13792  1264  0826               	movwf	fsr0l
 13793  1265  0084               	movf	((atoi@s+1)),w
 13794  1266  0827               	movwf	fsr0h
 13795  1267  0085               	movf	indf0,w ;code access
 13796  1268  0800               	addlw	low(0FFF7h)
 13797  1269  3EF7               	movwf	(??_atoi+0)+0
 13798  126A  00A8               	movlw	high(0FFF7h)
 13799  126B  30FF               	skipnc
 13800  126C  1803               	movlw	(high(0FFF7h)+1)&0ffh
 13801  126D  3000               	movwf	((??_atoi+0)+0)+1
 13802  126E  00A9               	movlw	0
 13803  126F  3000               	subwf	1+(??_atoi+0)+0,w
 13804  1270  0229               	movlw	05h
 13805  1271  3005               	skipnz
 13806  1272  1903               	subwf	0+(??_atoi+0)+0,w
 13807  1273  0228               	skipc
 13808  1274  1C03               	goto	u5741
 13809  1275  2A77               	goto	u5740
 13810  1276  2A78               u5741:
 13811  1277                     	goto	l4068
 13812  1277  2A7A               u5740:
 13813  1278                     	
 13814                           l4066:	
 13815  1278                     	clrf	(_atoi$1170)
 13816  1278  01B2               	goto	l4068
 13817  1279  2A7A               	
 13818                           l974:	
 13819  127A                     	
 13820                           l4068:	
 13821  127A                     	movf	(_atoi$1170),w
 13822  127A  0832               	movwf	(??_atoi+0)+0
 13823  127B  00A8               	clrf	(??_atoi+0)+0+1
 13824  127C  01A9               	movf	0+(??_atoi+0)+0,w
 13825  127D  0828               	movwf	(_atoi$1169)
 13826  127E  00AE               	movf	1+(??_atoi+0)+0,w
 13827  127F  0829               	movwf	(_atoi$1169+1)
 13828  1280  00AF               	goto	l4072
 13829  1281  2A96               	
 13830                           l970:	
 13831  1282                     	
 13832                           l4070:	
 13833  1282                     	movf	(atoi@s),w
 13834  1282  0826               	movwf	fsr0l
 13835  1283  0084               	movf	((atoi@s+1)),w
 13836  1284  0827               	movwf	fsr0h
 13837  1285  0085               	movf	indf0,w ;code access
 13838  1286  0800               	movwf	(??_atoi+0)+0
 13839  1287  00A8               	clrf	(??_atoi+0)+0+1
 13840  1288  01A9               	movf	0+(??_atoi+0)+0,w
 13841  1289  0828               	movwf	(isspace@c)
 13842  128A  00A0               	movf	1+(??_atoi+0)+0,w
 13843  128B  0829               	movwf	(isspace@c+1)
 13844  128C  00A1               	fcall	_isspace
 13845  128D  31A7  27B7  3192   	movlb 0	; select bank0
 13846  1290  0140               	movf	(1+(?_isspace)),w
 13847  1291  0821               	movwf	(_atoi$1169+1)
 13848  1292  00AF               	movf	(0+(?_isspace)),w
 13849  1293  0820               	movwf	(_atoi$1169)
 13850  1294  00AE               	goto	l4072
 13851  1295  2A96               	
 13852                           l972:	
 13853  1296                     	
 13854                           l4072:	
 13855  1296                     	movf	((_atoi$1169)),w
 13856  1296  082E               iorwf	((_atoi$1169+1)),w
 13857  1297  042F               	btfss	status,2
 13858  1298  1D03               	goto	u5751
 13859  1299  2A9B               	goto	u5750
 13860  129A  2A9C               u5751:
 13861  129B                     	goto	l4058
 13862  129B  2A53               u5750:
 13863  129C                     	goto	l4076
 13864  129C  2AA7               	
 13865                           l975:	
 13866  129D                     	line	8
 13867                           	goto	l4076
 13868  129D  2AA7               	line	9
 13869                           	
 13870                           l977:	
 13871  129E                     	
 13872                           l4074:	
 13873  129E                     	movlw	01h
 13874  129E  3001               	movwf	(atoi@neg)
 13875  129F  00AC               	movlw	0
 13876  12A0  3000               	movwf	((atoi@neg))+1
 13877  12A1  00AD               	line	10
 13878                           	
 13879                           l978:	
 13880  12A2                     	movlw	01h
 13881  12A2  3001               	addwf	(atoi@s),f
 13882  12A3  07A6               	movlw	0
 13883  12A4  3000               	addwfc	(atoi@s+1),f
 13884  12A5  3DA7               	line	11
 13885                           	goto	l4082
 13886  12A6  2AE3               	
 13887                           l976:	
 13888  12A7                     	
 13889                           l4076:	
 13890  12A7                     	movf	(atoi@s),w
 13891  12A7  0826               	movwf	fsr0l
 13892  12A8  0084               	movf	((atoi@s+1)),w
 13893  12A9  0827               	movwf	fsr0h
 13894  12AA  0085               	movf	indf0,w ;code access
 13895  12AB  0800               	movwf	(??_atoi+0)+0
 13896  12AC  00A8               	clrf	(??_atoi+0)+0+1
 13897  12AD  01A9               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 13898                           ; Switch size 1, requested type "space"
 13899                           ; Number of cases is 1, Range of values is 0 to 0
 13900                           ; switch strategies available:
 13901                           ; Name         Instructions Cycles
 13902                           ; simple_byte            4     3 (average)
 13903                           ; direct_byte            8     6 (fixed)
 13904                           ; jumptable            260     6 (fixed)
 13905                           ;	Chosen strategy is simple_byte
 13906                           
 13907                           	movf 1+(??_atoi+0)+0,w
 13908  12AE  0829               	opt asmopt_push
 13909                           	opt asmopt_off
 13910                           	xorlw	0^0	; case 0
 13911  12AF  3A00               	skipnz
 13912  12B0  1903               	goto	l4722
 13913  12B1  2AB3               	goto	l4082
 13914  12B2  2AE3               	opt asmopt_pop
 13915                           	
 13916                           l4722:	
 13917  12B3                     ; Switch size 1, requested type "space"
 13918                           ; Number of cases is 2, Range of values is 43 to 45
 13919                           ; switch strategies available:
 13920                           ; Name         Instructions Cycles
 13921                           ; simple_byte            7     4 (average)
 13922                           ; direct_byte           15     9 (fixed)
 13923                           ; jumptable            263     9 (fixed)
 13924                           ;	Chosen strategy is simple_byte
 13925                           
 13926                           	movf 0+(??_atoi+0)+0,w
 13927  12B3  0828               	opt asmopt_push
 13928                           	opt asmopt_off
 13929                           	xorlw	43^0	; case 43
 13930  12B4  3A2B               	skipnz
 13931  12B5  1903               	goto	l978
 13932  12B6  2AA2               	xorlw	45^43	; case 45
 13933  12B7  3A06               	skipnz
 13934  12B8  1903               	goto	l4074
 13935  12B9  2A9E               	goto	l4082
 13936  12BA  2AE3               	opt asmopt_pop
 13937                           
 13938                           	
 13939                           l979:	
 13940  12BB                     	line	13
 13941                           	goto	l4082
 13942  12BB  2AE3               	
 13943                           l981:	
 13944  12BC                     	line	14
 13945                           	
 13946                           l4078:	
 13947  12BC                     	movf	(atoi@s),w
 13948  12BC  0826               	movwf	fsr0l
 13949  12BD  0084               	movf	((atoi@s+1)),w
 13950  12BE  0827               	movwf	fsr0h
 13951  12BF  0085               	movf	indf0,w ;code access
 13952  12C0  0800               	addlw	low(0FFD0h)
 13953  12C1  3ED0               	movwf	(??_atoi+0)+0
 13954  12C2  00A8               	movlw	high(0FFD0h)
 13955  12C3  30FF               	skipnc
 13956  12C4  1803               	movlw	(high(0FFD0h)+1)&0ffh
 13957  12C5  3000               	movwf	((??_atoi+0)+0)+1
 13958  12C6  00A9               	comf	(??_atoi+0)+0,f
 13959  12C7  09A8               	comf	(??_atoi+0)+1,f
 13960  12C8  09A9               	incf	(??_atoi+0)+0,f
 13961  12C9  0AA8               	skipnz
 13962  12CA  1903               	incf	(??_atoi+0)+1,f
 13963  12CB  0AA9               	movf	(atoi@n+1),w
 13964  12CC  0834               	movwf	(___wmul@multiplier+1)
 13965  12CD  00A1               	movf	(atoi@n),w
 13966  12CE  0833               	movwf	(___wmul@multiplier)
 13967  12CF  00A0               	movlw	0Ah
 13968  12D0  300A               	movwf	(___wmul@multiplicand)
 13969  12D1  00A2               	movlw	0
 13970  12D2  3000               	movwf	((___wmul@multiplicand))+1
 13971  12D3  00A3               	fcall	___wmul
 13972  12D4  31A7  2794  3192   	movlb 0	; select bank0
 13973  12D7  0140               	movf	0+(??_atoi+0)+0,w
 13974  12D8  0828               	addwf	(0+(?___wmul)),w
 13975  12D9  0720               	movwf	(atoi@n)
 13976  12DA  00B3               	movf	1+(??_atoi+0)+0,w
 13977  12DB  0829               	addwfc	(1+(?___wmul)),w
 13978  12DC  3D21               	movwf	1+(atoi@n)
 13979  12DD  00B4               	
 13980                           l4080:	
 13981  12DE                     	movlw	01h
 13982  12DE  3001               	addwf	(atoi@s),f
 13983  12DF  07A6               	movlw	0
 13984  12E0  3000               	addwfc	(atoi@s+1),f
 13985  12E1  3DA7               	goto	l4082
 13986  12E2  2AE3               	
 13987                           l980:	
 13988  12E3                     	line	13
 13989                           	
 13990                           l4082:	
 13991  12E3                     	movf	(atoi@s),w
 13992  12E3  0826               	movwf	fsr0l
 13993  12E4  0084               	movf	((atoi@s+1)),w
 13994  12E5  0827               	movwf	fsr0h
 13995  12E6  0085               	movf	indf0,w ;code access
 13996  12E7  0800               	addlw	low(0FFD0h)
 13997  12E8  3ED0               	movwf	(??_atoi+0)+0
 13998  12E9  00A8               	movlw	high(0FFD0h)
 13999  12EA  30FF               	skipnc
 14000  12EB  1803               	movlw	(high(0FFD0h)+1)&0ffh
 14001  12EC  3000               	movwf	((??_atoi+0)+0)+1
 14002  12ED  00A9               	movlw	0
 14003  12EE  3000               	subwf	1+(??_atoi+0)+0,w
 14004  12EF  0229               	movlw	0Ah
 14005  12F0  300A               	skipnz
 14006  12F1  1903               	subwf	0+(??_atoi+0)+0,w
 14007  12F2  0228               	skipc
 14008  12F3  1C03               	goto	u5761
 14009  12F4  2AF6               	goto	u5760
 14010  12F5  2AF8               u5761:
 14011  12F6                     	movlw	1
 14012  12F6  3001               	goto	u5770
 14013  12F7  2AF9               u5760:
 14014  12F8                     	movlw	0
 14015  12F8  3000               u5770:
 14016  12F9                     	movwf	(??_atoi+2)+0
 14017  12F9  00AA               	clrf	(??_atoi+2)+0+1
 14018  12FA  01AB               	movf	0+(??_atoi+2)+0,w
 14019  12FB  082A               	movwf	(_atoi$1171)
 14020  12FC  00B0               	movf	1+(??_atoi+2)+0,w
 14021  12FD  082B               	movwf	(_atoi$1171+1)
 14022  12FE  00B1               	goto	l4086
 14023  12FF  2B14               	
 14024                           l983:	
 14025  1300                     	
 14026                           l4084:	
 14027  1300                     	movf	(atoi@s),w
 14028  1300  0826               	movwf	fsr0l
 14029  1301  0084               	movf	((atoi@s+1)),w
 14030  1302  0827               	movwf	fsr0h
 14031  1303  0085               	movf	indf0,w ;code access
 14032  1304  0800               	movwf	(??_atoi+0)+0
 14033  1305  00A8               	clrf	(??_atoi+0)+0+1
 14034  1306  01A9               	movf	0+(??_atoi+0)+0,w
 14035  1307  0828               	movwf	(isdigit@c)
 14036  1308  00A0               	movf	1+(??_atoi+0)+0,w
 14037  1309  0829               	movwf	(isdigit@c+1)
 14038  130A  00A1               	fcall	_isdigit
 14039  130B  31A7  271C  3192   	movlb 0	; select bank0
 14040  130E  0140               	movf	(1+(?_isdigit)),w
 14041  130F  0821               	movwf	(_atoi$1171+1)
 14042  1310  00B1               	movf	(0+(?_isdigit)),w
 14043  1311  0820               	movwf	(_atoi$1171)
 14044  1312  00B0               	goto	l4086
 14045  1313  2B14               	
 14046                           l985:	
 14047  1314                     	
 14048                           l4086:	
 14049  1314                     	movf	((_atoi$1171)),w
 14050  1314  0830               iorwf	((_atoi$1171+1)),w
 14051  1315  0431               	btfss	status,2
 14052  1316  1D03               	goto	u5781
 14053  1317  2B19               	goto	u5780
 14054  1318  2B1A               u5781:
 14055  1319                     	goto	l4078
 14056  1319  2ABC               u5780:
 14057  131A                     	goto	l4088
 14058  131A  2B1B               	
 14059                           l986:	
 14060  131B                     	line	15
 14061                           	
 14062                           l4088:	
 14063  131B                     	movf	((atoi@neg)),w
 14064  131B  082C               iorwf	((atoi@neg+1)),w
 14065  131C  042D               	btfss	status,2
 14066  131D  1D03               	goto	u5791
 14067  131E  2B20               	goto	u5790
 14068  131F  2B21               u5791:
 14069  1320                     	goto	l4092
 14070  1320  2B2D               u5790:
 14071  1321                     	
 14072                           l4090:	
 14073  1321                     	comf	(atoi@n),w
 14074  1321  0933               	movwf	(??_atoi+0)+0
 14075  1322  00A8               	comf	(atoi@n+1),w
 14076  1323  0934               	movwf	((??_atoi+0)+0+1)
 14077  1324  00A9               	incf	(??_atoi+0)+0,f
 14078  1325  0AA8               	skipnz
 14079  1326  1903               	incf	((??_atoi+0)+0+1),f
 14080  1327  0AA9               	movf	0+(??_atoi+0)+0,w
 14081  1328  0828               	movwf	(?_atoi)
 14082  1329  00A6               	movf	1+(??_atoi+0)+0,w
 14083  132A  0829               	movwf	(?_atoi+1)
 14084  132B  00A7               	goto	l991
 14085  132C  2B33               	
 14086                           l988:	
 14087  132D                     	
 14088                           l4092:	
 14089  132D                     	movf	(atoi@n+1),w
 14090  132D  0834               	movwf	(?_atoi+1)
 14091  132E  00A7               	movf	(atoi@n),w
 14092  132F  0833               	movwf	(?_atoi)
 14093  1330  00A6               	goto	l991
 14094  1331  2B33               	
 14095                           l990:	
 14096  1332                     	goto	l991
 14097  1332  2B33               	
 14098                           l4094:	
 14099  1333                     	line	16
 14100                           	
 14101                           l991:	
 14102  1333                     	return
 14103  1333  0008               	opt stack 0
 14104                           GLOBAL	__end_of_atoi
 14105                           	__end_of_atoi:
 14106  1334                     	signat	_atoi,4218
 14107                           	global	_isspace
 14108                           
 14109 ;; *************** function _isspace *****************
 14110 ;; Defined at:
 14111 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isspace.c"
 14112 ;; Parameters:    Size  Location     Type
 14113 ;;  c               2    0[BANK0 ] int 
 14114 ;; Auto vars:     Size  Location     Type
 14115 ;;		None
 14116 ;; Return value:  Size  Location     Type
 14117 ;;                  2    0[BANK0 ] int 
 14118 ;; Registers used:
 14119 ;;		wreg, status,2, status,0
 14120 ;; Tracked objects:
 14121 ;;		On entry : 0/0
 14122 ;;		On exit  : 0/0
 14123 ;;		Unchanged: 0/0
 14124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14125 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14126 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14127 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14128 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14129 ;;Total ram usage:        5 bytes
 14130 ;; Hardware stack levels used:    1
 14131 ;; Hardware stack levels required when called:    3
 14132 ;; This function calls:
 14133 ;;		Nothing
 14134 ;; This function is called by:
 14135 ;;		_atoi
 14136 ;; This function uses a non-reentrant model
 14137 ;;
 14138                           psect	text27,local,class=CODE,delta=2,merge=1,group=2
 14139                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isspace.c"
 14140                           	line	5
 14141                           global __ptext27
 14142                           __ptext27:	;psect for function _isspace
 14143  27B7                     psect	text27
 14144                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isspace.c"
 14145                           	line	5
 14146                           	global	__size_of_isspace
 14147                           	__size_of_isspace	equ	__end_of_isspace-_isspace
 14148  0024                     	
 14149                           _isspace:	
 14150  27B7                     ;incstack = 0
 14151                           	opt	stack 7
 14152                           ; Regs used in _isspace: [wreg+status,2+status,0]
 14153                           	line	7
 14154                           	
 14155                           l3730:	
 14156  27B7                     	movlb 0	; select bank0
 14157  27B7  0140               	clrf	(_isspace$1200)
 14158  27B8  01A4               	incf	(_isspace$1200),f
 14159  27B9  0AA4               	
 14160                           l3732:	
 14161  27BA                     		movlw	32
 14162  27BA  3020               	xorwf	((isspace@c)),w
 14163  27BB  0620               iorwf	((isspace@c+1)),w
 14164  27BC  0421               	btfsc	status,2
 14165  27BD  1903               	goto	u5171
 14166  27BE  2FC0               	goto	u5170
 14167  27BF  2FC1               u5171:
 14168  27C0                     	goto	l3738
 14169  27C0  2FD2               u5170:
 14170  27C1                     	
 14171                           l3734:	
 14172  27C1                     	movf	(isspace@c),w
 14173  27C1  0820               	addlw	0F7h
 14174  27C2  3EF7               	movwf	(??_isspace+0)+0
 14175  27C3  00A2               	movlw	0FFh
 14176  27C4  30FF               	addwfc	(isspace@c+1),w
 14177  27C5  3D21               	movwf	1+(??_isspace+0)+0
 14178  27C6  00A3               	movlw	0
 14179  27C7  3000               	subwf	1+(??_isspace+0)+0,w
 14180  27C8  0223               	movlw	05h
 14181  27C9  3005               	skipnz
 14182  27CA  1903               	subwf	0+(??_isspace+0)+0,w
 14183  27CB  0222               	skipc
 14184  27CC  1C03               	goto	u5181
 14185  27CD  2FCF               	goto	u5180
 14186  27CE  2FD0               u5181:
 14187  27CF                     	goto	l3738
 14188  27CF  2FD2               u5180:
 14189  27D0                     	
 14190                           l3736:	
 14191  27D0                     	clrf	(_isspace$1200)
 14192  27D0  01A4               	goto	l3738
 14193  27D1  2FD2               	
 14194                           l1014:	
 14195  27D2                     	
 14196                           l3738:	
 14197  27D2                     	movf	(_isspace$1200),w
 14198  27D2  0824               	movwf	(??_isspace+0)+0
 14199  27D3  00A2               	clrf	(??_isspace+0)+0+1
 14200  27D4  01A3               	movf	0+(??_isspace+0)+0,w
 14201  27D5  0822               	movwf	(?_isspace)
 14202  27D6  00A0               	movf	1+(??_isspace+0)+0,w
 14203  27D7  0823               	movwf	(?_isspace+1)
 14204  27D8  00A1               	goto	l1015
 14205  27D9  2FDA               	
 14206                           l3740:	
 14207  27DA                     	line	8
 14208                           	
 14209                           l1015:	
 14210  27DA                     	return
 14211  27DA  0008               	opt stack 0
 14212                           GLOBAL	__end_of_isspace
 14213                           	__end_of_isspace:
 14214  27DB                     	signat	_isspace,4218
 14215                           	global	_isdigit
 14216                           
 14217 ;; *************** function _isdigit *****************
 14218 ;; Defined at:
 14219 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isdigit.c"
 14220 ;; Parameters:    Size  Location     Type
 14221 ;;  c               2    0[BANK0 ] int 
 14222 ;; Auto vars:     Size  Location     Type
 14223 ;;		None
 14224 ;; Return value:  Size  Location     Type
 14225 ;;                  2    0[BANK0 ] int 
 14226 ;; Registers used:
 14227 ;;		wreg, status,2, status,0
 14228 ;; Tracked objects:
 14229 ;;		On entry : 0/0
 14230 ;;		On exit  : 0/0
 14231 ;;		Unchanged: 0/0
 14232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14233 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14235 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14236 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14237 ;;Total ram usage:        6 bytes
 14238 ;; Hardware stack levels used:    1
 14239 ;; Hardware stack levels required when called:    3
 14240 ;; This function calls:
 14241 ;;		Nothing
 14242 ;; This function is called by:
 14243 ;;		_vfpfcnvrt
 14244 ;;		_atoi
 14245 ;; This function uses a non-reentrant model
 14246 ;;
 14247                           psect	text28,local,class=CODE,delta=2,merge=1,group=2
 14248                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isdigit.c"
 14249                           	line	5
 14250                           global __ptext28
 14251                           __ptext28:	;psect for function _isdigit
 14252  271C                     psect	text28
 14253                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isdigit.c"
 14254                           	line	5
 14255                           	global	__size_of_isdigit
 14256                           	__size_of_isdigit	equ	__end_of_isdigit-_isdigit
 14257  001A                     	
 14258                           _isdigit:	
 14259  271C                     ;incstack = 0
 14260                           	opt	stack 8
 14261                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 14262                           	line	7
 14263                           	
 14264                           l3262:	
 14265  271C                     	movlb 0	; select bank0
 14266  271C  0140               	movf	(isdigit@c),w
 14267  271D  0820               	addlw	0D0h
 14268  271E  3ED0               	movwf	(??_isdigit+0)+0
 14269  271F  00A2               	movlw	0FFh
 14270  2720  30FF               	addwfc	(isdigit@c+1),w
 14271  2721  3D21               	movwf	1+(??_isdigit+0)+0
 14272  2722  00A3               	movlw	0
 14273  2723  3000               	subwf	1+(??_isdigit+0)+0,w
 14274  2724  0223               	movlw	0Ah
 14275  2725  300A               	skipnz
 14276  2726  1903               	subwf	0+(??_isdigit+0)+0,w
 14277  2727  0222               	skipc
 14278  2728  1C03               	goto	u4181
 14279  2729  2F2B               	goto	u4180
 14280  272A  2F2D               u4181:
 14281  272B                     	movlw	1
 14282  272B  3001               	goto	u4190
 14283  272C  2F2E               u4180:
 14284  272D                     	movlw	0
 14285  272D  3000               u4190:
 14286  272E                     	movwf	(??_isdigit+2)+0
 14287  272E  00A4               	clrf	(??_isdigit+2)+0+1
 14288  272F  01A5               	movf	0+(??_isdigit+2)+0,w
 14289  2730  0824               	movwf	(?_isdigit)
 14290  2731  00A0               	movf	1+(??_isdigit+2)+0,w
 14291  2732  0825               	movwf	(?_isdigit+1)
 14292  2733  00A1               	goto	l1007
 14293  2734  2F35               	
 14294                           l3264:	
 14295  2735                     	line	8
 14296                           	
 14297                           l1007:	
 14298  2735                     	return
 14299  2735  0008               	opt stack 0
 14300                           GLOBAL	__end_of_isdigit
 14301                           	__end_of_isdigit:
 14302  2736                     	signat	_isdigit,4218
 14303                           	global	___wmul
 14304                           
 14305 ;; *************** function ___wmul *****************
 14306 ;; Defined at:
 14307 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 14308 ;; Parameters:    Size  Location     Type
 14309 ;;  multiplier      2    0[BANK0 ] unsigned int 
 14310 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 14311 ;; Auto vars:     Size  Location     Type
 14312 ;;  product         2    4[BANK0 ] unsigned int 
 14313 ;; Return value:  Size  Location     Type
 14314 ;;                  2    0[BANK0 ] unsigned int 
 14315 ;; Registers used:
 14316 ;;		wreg, status,2, status,0
 14317 ;; Tracked objects:
 14318 ;;		On entry : 0/0
 14319 ;;		On exit  : 0/0
 14320 ;;		Unchanged: 0/0
 14321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14322 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14323 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14325 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14326 ;;Total ram usage:        6 bytes
 14327 ;; Hardware stack levels used:    1
 14328 ;; Hardware stack levels required when called:    3
 14329 ;; This function calls:
 14330 ;;		Nothing
 14331 ;; This function is called by:
 14332 ;;		_atoi
 14333 ;; This function uses a non-reentrant model
 14334 ;;
 14335                           psect	text29,local,class=CODE,delta=2,merge=1,group=1
 14336                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 14337                           	line	15
 14338                           global __ptext29
 14339                           __ptext29:	;psect for function ___wmul
 14340  2794                     psect	text29
 14341                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 14342                           	line	15
 14343                           	global	__size_of___wmul
 14344                           	__size_of___wmul	equ	__end_of___wmul-___wmul
 14345  0023                     	
 14346                           ___wmul:	
 14347  2794                     ;incstack = 0
 14348                           	opt	stack 7
 14349                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 14350                           	line	43
 14351                           	
 14352                           l3266:	
 14353  2794                     	movlb 0	; select bank0
 14354  2794  0140               	clrf	(___wmul@product)
 14355  2795  01A4               	clrf	(___wmul@product+1)
 14356  2796  01A5               	goto	l3268
 14357  2797  2F98               	line	44
 14358                           	
 14359                           l517:	
 14360  2798                     	line	45
 14361                           	
 14362                           l3268:	
 14363  2798                     	btfss	(___wmul@multiplier),(0)&7
 14364  2798  1C20               	goto	u4201
 14365  2799  2F9B               	goto	u4200
 14366  279A  2F9C               u4201:
 14367  279B                     	goto	l518
 14368  279B  2FA0               u4200:
 14369  279C                     	line	46
 14370                           	
 14371                           l3270:	
 14372  279C                     	movf	(___wmul@multiplicand),w
 14373  279C  0822               	addwf	(___wmul@product),f
 14374  279D  07A4               	movf	(___wmul@multiplicand+1),w
 14375  279E  0823               	addwfc	(___wmul@product+1),f
 14376  279F  3DA5               	
 14377                           l518:	
 14378  27A0                     	line	47
 14379                           	movlw	01h
 14380  27A0  3001               	
 14381                           u4215:
 14382  27A1                     	lslf	(___wmul@multiplicand),f
 14383  27A1  35A2               	rlf	(___wmul@multiplicand+1),f
 14384  27A2  0DA3               	decfsz	wreg,f
 14385  27A3  0B89               	goto	u4215
 14386  27A4  2FA1               	line	48
 14387                           	
 14388                           l3272:	
 14389  27A5                     	movlw	01h
 14390  27A5  3001               	
 14391                           u4225:
 14392  27A6                     	lsrf	(___wmul@multiplier+1),f
 14393  27A6  36A1               	rrf	(___wmul@multiplier),f
 14394  27A7  0CA0               	decfsz	wreg,f
 14395  27A8  0B89               	goto	u4225
 14396  27A9  2FA6               	line	49
 14397                           	
 14398                           l3274:	
 14399  27AA                     	movf	((___wmul@multiplier)),w
 14400  27AA  0820               iorwf	((___wmul@multiplier+1)),w
 14401  27AB  0421               	btfss	status,2
 14402  27AC  1D03               	goto	u4231
 14403  27AD  2FAF               	goto	u4230
 14404  27AE  2FB0               u4231:
 14405  27AF                     	goto	l3268
 14406  27AF  2F98               u4230:
 14407  27B0                     	goto	l3276
 14408  27B0  2FB1               	
 14409                           l519:	
 14410  27B1                     	line	52
 14411                           	
 14412                           l3276:	
 14413  27B1                     	movf	(___wmul@product+1),w
 14414  27B1  0825               	movwf	(?___wmul+1)
 14415  27B2  00A1               	movf	(___wmul@product),w
 14416  27B3  0824               	movwf	(?___wmul)
 14417  27B4  00A0               	goto	l520
 14418  27B5  2FB6               	
 14419                           l3278:	
 14420  27B6                     	line	53
 14421                           	
 14422                           l520:	
 14423  27B6                     	return
 14424  27B6  0008               	opt stack 0
 14425                           GLOBAL	__end_of___wmul
 14426                           	__end_of___wmul:
 14427  27B7                     	signat	___wmul,8314
 14428                           	global	_menuInput
 14429                           
 14430 ;; *************** function _menuInput *****************
 14431 ;; Defined at:
 14432 ;;		line 182 in file "main.c"
 14433 ;; Parameters:    Size  Location     Type
 14434 ;;  page            1    wreg     PTR unsigned char 
 14435 ;;		 -> showMenu@page(1), 
 14436 ;;  numPages        1    7[BANK0 ] const unsigned char 
 14437 ;;  menu            1    8[BANK0 ] PTR unsigned char 
 14438 ;;		 -> showMenu@menu(1), 
 14439 ;;  pbShort         1    9[BANK0 ] unsigned char 
 14440 ;;  pbLong          1   10[BANK0 ] unsigned char 
 14441 ;;  timeout         1   11[BANK0 ] unsigned char 
 14442 ;; Auto vars:     Size  Location     Type
 14443 ;;  page            1   17[BANK0 ] PTR unsigned char 
 14444 ;;		 -> showMenu@page(1), 
 14445 ;;  n               1   16[BANK0 ] unsigned char 
 14446 ;;  pb              1   15[BANK0 ] enum E7848
 14447 ;;  dir             1   14[BANK0 ] enum E7844
 14448 ;; Return value:  Size  Location     Type
 14449 ;;                  1    wreg      void 
 14450 ;; Registers used:
 14451 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14452 ;; Tracked objects:
 14453 ;;		On entry : 0/0
 14454 ;;		On exit  : 0/0
 14455 ;;		Unchanged: 0/0
 14456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14457 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14458 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14459 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14460 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14461 ;;Total ram usage:       11 bytes
 14462 ;; Hardware stack levels used:    1
 14463 ;; Hardware stack levels required when called:    8
 14464 ;; This function calls:
 14465 ;;		_OLED_returnHome
 14466 ;;		_OLED_scrollDisplayLeft
 14467 ;;		_OLED_scrollDisplayRight
 14468 ;;		_getPB
 14469 ;;		_getRotDir
 14470 ;; This function is called by:
 14471 ;;		_showMenu
 14472 ;; This function uses a non-reentrant model
 14473 ;;
 14474                           psect	text30,local,class=CODE,delta=2,merge=1,group=0
 14475                           	file	"main.c"
 14476                           	line	182
 14477                           global __ptext30
 14478                           __ptext30:	;psect for function _menuInput
 14479  118A                     psect	text30
 14480                           	file	"main.c"
 14481                           	line	182
 14482                           	global	__size_of_menuInput
 14483                           	__size_of_menuInput	equ	__end_of_menuInput-_menuInput
 14484  00C3                     	
 14485                           _menuInput:	
 14486  118A                     ;incstack = 0
 14487                           	opt	stack 6
 14488                           ; Regs used in _menuInput: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14489                           ;menuInput@page stored from wreg
 14490                           	movlb 0	; select bank0
 14491  118A  0140               	movwf	(menuInput@page)
 14492  118B  00B1               	line	189
 14493                           	
 14494                           l4302:	
 14495  118C                     ;main.c: 182: void menuInput(uint8_t *page, const uint8_t numPages, uint8_t *menu,;main.
                                 c: 183:  uint8_t pbShort, uint8_t pbLong, uint8_t timeout);main.c: 184: {;main.c: 185:  
                                 uint8_t n;;main.c: 186:  enum e_direction dir;;main.c: 187:  enum e_buttonPress pb;;main
                                 .c: 189:  PIE0bits.IOCIE = 0;
 14496                           	movlb 14	; select bank14
 14497  118C  014E               	bcf	(1814)^0700h,4	;volatile
 14498  118D  1216               	line	190
 14499                           	
 14500                           l4304:	
 14501  118E                     ;main.c: 190:  dir = getRotDir();
 14502                           	fcall	_getRotDir
 14503  118E  31A6  26D8  3191   	movlb 0	; select bank0
 14504  1191  0140               	movwf	(??_menuInput+0)+0
 14505  1192  00AC               	movf	(??_menuInput+0)+0,w
 14506  1193  082C               	movwf	(menuInput@dir)
 14507  1194  00AE               	line	191
 14508                           ;main.c: 191:  pb = getPB();
 14509                           	fcall	_getPB
 14510  1195  31A6  26F8  3191   	movlb 0	; select bank0
 14511  1198  0140               	movwf	(??_menuInput+0)+0
 14512  1199  00AC               	movf	(??_menuInput+0)+0,w
 14513  119A  082C               	movwf	(menuInput@pb)
 14514  119B  00AF               	line	193
 14515                           	
 14516                           l4306:	
 14517  119C                     ;main.c: 193:  if ((dir == ROT_CW) && (*page < numPages - 1)) {
 14518                           		decf	((menuInput@dir)),w
 14519  119C  032E               	btfss	status,2
 14520  119D  1D03               	goto	u6061
 14521  119E  29A0               	goto	u6060
 14522  119F  29A1               u6061:
 14523  11A0                     	goto	l4326
 14524  11A0  29E2               u6060:
 14525  11A1                     	
 14526                           l4308:	
 14527  11A1                     	movf	(menuInput@numPages),w
 14528  11A1  0827               	addlw	low(-1)
 14529  11A2  3EFF               	movwf	(??_menuInput+0)+0
 14530  11A3  00AC               	movlw	high(-1)
 14531  11A4  30FF               	skipnc
 14532  11A5  1803               	movlw	(high(-1)+1)&0ffh
 14533  11A6  3000               	movwf	((??_menuInput+0)+0)+1
 14534  11A7  00AD               	movf	(menuInput@page),w
 14535  11A8  0831               	movwf	fsr1l
 14536  11A9  0086               	movlw 1	; select bank2/3
 14537  11AA  3001               	movwf fsr1h	
 14538  11AB  0087               	
 14539                           	movf	1+(??_menuInput+0)+0,w
 14540  11AC  082D               	xorlw	80h
 14541  11AD  3A80               	sublw	080h
 14542  11AE  3C80               	skipz
 14543  11AF  1D03               	goto	u6075
 14544  11B0  29B3               	movf	0+(??_menuInput+0)+0,w
 14545  11B1  082C               	subwf	indf1,w
 14546  11B2  0201               u6075:
 14547  11B3                     
 14548                           	skipnc
 14549  11B3  1803               	goto	u6071
 14550  11B4  29B6               	goto	u6070
 14551  11B5  29B7               u6071:
 14552  11B6                     	goto	l4326
 14553  11B6  29E2               u6070:
 14554  11B7                     	line	194
 14555                           	
 14556                           l4310:	
 14557  11B7                     ;main.c: 194:   (*page)++;
 14558                           	movlw	low(01h)
 14559  11B7  3001               	movlb 0	; select bank0
 14560  11B8  0140               	movwf	(??_menuInput+0)+0
 14561  11B9  00AC               	movf	(menuInput@page),w
 14562  11BA  0831               	movwf	fsr1l
 14563  11BB  0086               	movlw 1	; select bank2/3
 14564  11BC  3001               	movwf fsr1h	
 14565  11BD  0087               	
 14566                           	movf	(??_menuInput+0)+0,w
 14567  11BE  082C               	addwf	indf1,f
 14568  11BF  0781               	line	195
 14569                           	
 14570                           l4312:	
 14571  11C0                     ;main.c: 195:   for(n = 0; n < 12; n++) {
 14572                           	clrf	(menuInput@n)
 14573  11C0  01B0               	
 14574                           l4314:	
 14575  11C1                     	movlw	low(0Ch)
 14576  11C1  300C               	subwf	(menuInput@n),w
 14577  11C2  0230               	skipc
 14578  11C3  1C03               	goto	u6081
 14579  11C4  29C6               	goto	u6080
 14580  11C5  29C7               u6081:
 14581  11C6                     	goto	l4318
 14582  11C6  29C9               u6080:
 14583  11C7                     	goto	l4346
 14584  11C7  2A1B               	
 14585                           l4316:	
 14586  11C8                     	goto	l4346
 14587  11C8  2A1B               	
 14588                           l203:	
 14589  11C9                     	line	196
 14590                           	
 14591                           l4318:	
 14592  11C9                     ;main.c: 196:    OLED_scrollDisplayLeft();
 14593                           	fcall	_OLED_scrollDisplayLeft
 14594  11C9  31A6  26B9  3191   	line	197
 14595                           	
 14596                           l4320:	
 14597  11CC                     ;main.c: 197:    _delay((unsigned long)((20)*(4000000/4000.0)));
 14598                           	opt asmopt_push
 14599                           opt asmopt_off
 14600                           movlw	26
 14601  11CC  301A               	movlb 0	; select bank0
 14602  11CD  0140               movwf	((??_menuInput+0)+0),f
 14603  11CE  00AC               	movlw	248
 14604  11CF  30F8               u6687:
 14605  11D0                     decfsz	wreg
 14606  11D0  0B89               	goto	u6687
 14607  11D1  29D0               	decfsz	((??_menuInput+0)+0),f
 14608  11D2  0BAC               	goto	u6687
 14609  11D3  29D0               	nop
 14610  11D4  0000               opt asmopt_pop
 14611                           
 14612                           	line	198
 14613                           	
 14614                           l4322:	
 14615  11D5                     ;main.c: 198:   }
 14616                           	movlw	low(01h)
 14617  11D5  3001               	movlb 0	; select bank0
 14618  11D6  0140               	movwf	(??_menuInput+0)+0
 14619  11D7  00AC               	movf	(??_menuInput+0)+0,w
 14620  11D8  082C               	addwf	(menuInput@n),f
 14621  11D9  07B0               	
 14622                           l4324:	
 14623  11DA                     	movlw	low(0Ch)
 14624  11DA  300C               	subwf	(menuInput@n),w
 14625  11DB  0230               	skipc
 14626  11DC  1C03               	goto	u6091
 14627  11DD  29DF               	goto	u6090
 14628  11DE  29E0               u6091:
 14629  11DF                     	goto	l4318
 14630  11DF  29C9               u6090:
 14631  11E0                     	goto	l4346
 14632  11E0  2A1B               	
 14633                           l204:	
 14634  11E1                     	line	199
 14635                           ;main.c: 199:  }
 14636                           	goto	l4346
 14637  11E1  2A1B               	line	200
 14638                           ;main.c: 200:  else if ((dir == ROT_CCW) && (*page > 0)) {
 14639                           	
 14640                           l202:	
 14641  11E2                     	
 14642                           l4326:	
 14643  11E2                     		movlw	2
 14644  11E2  3002               	movlb 0	; select bank0
 14645  11E3  0140               	xorwf	((menuInput@dir)),w
 14646  11E4  062E               	btfss	status,2
 14647  11E5  1D03               	goto	u6101
 14648  11E6  29E8               	goto	u6100
 14649  11E7  29E9               u6101:
 14650  11E8                     	goto	l4346
 14651  11E8  2A1B               u6100:
 14652  11E9                     	
 14653                           l4328:	
 14654  11E9                     	movf	(menuInput@page),w
 14655  11E9  0831               	movwf	fsr1l
 14656  11EA  0086               	movlw 1	; select bank2/3
 14657  11EB  3001               	movwf fsr1h	
 14658  11EC  0087               	
 14659                           	movf	(indf1),w
 14660  11ED  0801               	btfsc	status,2
 14661  11EE  1903               	goto	u6111
 14662  11EF  29F1               	goto	u6110
 14663  11F0  29F2               u6111:
 14664  11F1                     	goto	l4346
 14665  11F1  2A1B               u6110:
 14666  11F2                     	line	201
 14667                           	
 14668                           l4330:	
 14669  11F2                     ;main.c: 201:   (*page)--;
 14670                           	movf	(menuInput@page),w
 14671  11F2  0831               	movwf	fsr1l
 14672  11F3  0086               	movlw 1	; select bank2/3
 14673  11F4  3001               	movwf fsr1h	
 14674  11F5  0087               	
 14675                           	movlw	01h
 14676  11F6  3001               	subwf	indf1,f
 14677  11F7  0281               	line	202
 14678                           	
 14679                           l4332:	
 14680  11F8                     ;main.c: 202:   for(n = 0; n < 12; n++) {
 14681                           	clrf	(menuInput@n)
 14682  11F8  01B0               	
 14683                           l4334:	
 14684  11F9                     	movlw	low(0Ch)
 14685  11F9  300C               	subwf	(menuInput@n),w
 14686  11FA  0230               	skipc
 14687  11FB  1C03               	goto	u6121
 14688  11FC  29FE               	goto	u6120
 14689  11FD  29FF               u6121:
 14690  11FE                     	goto	l4338
 14691  11FE  2A01               u6120:
 14692  11FF                     	goto	l4346
 14693  11FF  2A1B               	
 14694                           l4336:	
 14695  1200                     	goto	l4346
 14696  1200  2A1B               	
 14697                           l207:	
 14698  1201                     	line	203
 14699                           	
 14700                           l4338:	
 14701  1201                     ;main.c: 203:    OLED_scrollDisplayRight();
 14702                           	fcall	_OLED_scrollDisplayRight
 14703  1201  31A6  26BE  3191   	line	204
 14704                           	
 14705                           l4340:	
 14706  1204                     ;main.c: 204:    _delay((unsigned long)((20)*(4000000/4000.0)));
 14707                           	opt asmopt_push
 14708                           opt asmopt_off
 14709                           movlw	26
 14710  1204  301A               	movlb 0	; select bank0
 14711  1205  0140               movwf	((??_menuInput+0)+0),f
 14712  1206  00AC               	movlw	248
 14713  1207  30F8               u6697:
 14714  1208                     decfsz	wreg
 14715  1208  0B89               	goto	u6697
 14716  1209  2A08               	decfsz	((??_menuInput+0)+0),f
 14717  120A  0BAC               	goto	u6697
 14718  120B  2A08               	nop
 14719  120C  0000               opt asmopt_pop
 14720                           
 14721                           	line	205
 14722                           	
 14723                           l4342:	
 14724  120D                     ;main.c: 205:   }
 14725                           	movlw	low(01h)
 14726  120D  3001               	movlb 0	; select bank0
 14727  120E  0140               	movwf	(??_menuInput+0)+0
 14728  120F  00AC               	movf	(??_menuInput+0)+0,w
 14729  1210  082C               	addwf	(menuInput@n),f
 14730  1211  07B0               	
 14731                           l4344:	
 14732  1212                     	movlw	low(0Ch)
 14733  1212  300C               	subwf	(menuInput@n),w
 14734  1213  0230               	skipc
 14735  1214  1C03               	goto	u6131
 14736  1215  2A17               	goto	u6130
 14737  1216  2A18               u6131:
 14738  1217                     	goto	l4338
 14739  1217  2A01               u6130:
 14740  1218                     	goto	l4346
 14741  1218  2A1B               	
 14742                           l208:	
 14743  1219                     	goto	l4346
 14744  1219  2A1B               	line	206
 14745                           ;main.c: 206:  }
 14746                           	
 14747                           l206:	
 14748  121A                     	goto	l4346
 14749  121A  2A1B               	
 14750                           l205:	
 14751  121B                     	line	207
 14752                           	
 14753                           l4346:	
 14754  121B                     ;main.c: 207:  if (pb == PB_SHORT) {
 14755                           		decf	((menuInput@pb)),w
 14756  121B  032F               	btfss	status,2
 14757  121C  1D03               	goto	u6141
 14758  121D  2A1F               	goto	u6140
 14759  121E  2A20               u6141:
 14760  121F                     	goto	l4354
 14761  121F  2A31               u6140:
 14762  1220                     	line	208
 14763                           	
 14764                           l4348:	
 14765  1220                     ;main.c: 208:   *menu = pbShort;
 14766                           	movf	(menuInput@pbShort),w
 14767  1220  0829               	movwf	(??_menuInput+0)+0
 14768  1221  00AC               	movf	(menuInput@menu),w
 14769  1222  0828               	movwf	fsr1l
 14770  1223  0086               	movlw 1	; select bank2/3
 14771  1224  3001               	movwf fsr1h	
 14772  1225  0087               	
 14773                           	movf	(??_menuInput+0)+0,w
 14774  1226  082C               	movwf	indf1
 14775  1227  0081               	line	209
 14776                           	
 14777                           l4350:	
 14778  1228                     ;main.c: 209:   *page = 0;
 14779                           	movf	(menuInput@page),w
 14780  1228  0831               	movwf	fsr1l
 14781  1229  0086               	movlw 1	; select bank2/3
 14782  122A  3001               	movwf fsr1h	
 14783  122B  0087               	
 14784                           	clrf	indf1
 14785  122C  0181               	line	210
 14786                           	
 14787                           l4352:	
 14788  122D                     ;main.c: 210:   OLED_returnHome();
 14789                           	fcall	_OLED_returnHome
 14790  122D  31A6  26B4  3191   	line	211
 14791                           ;main.c: 211:  } else if (pb == PB_LONG) {
 14792                           	goto	l4362
 14793  1230  2A4A               	
 14794                           l209:	
 14795  1231                     	
 14796                           l4354:	
 14797  1231                     		movlw	2
 14798  1231  3002               	movlb 0	; select bank0
 14799  1232  0140               	xorwf	((menuInput@pb)),w
 14800  1233  062F               	btfss	status,2
 14801  1234  1D03               	goto	u6151
 14802  1235  2A37               	goto	u6150
 14803  1236  2A38               u6151:
 14804  1237                     	goto	l4362
 14805  1237  2A4A               u6150:
 14806  1238                     	line	212
 14807                           	
 14808                           l4356:	
 14809  1238                     ;main.c: 212:   *menu = pbLong;
 14810                           	movf	(menuInput@pbLong),w
 14811  1238  082A               	movwf	(??_menuInput+0)+0
 14812  1239  00AC               	movf	(menuInput@menu),w
 14813  123A  0828               	movwf	fsr1l
 14814  123B  0086               	movlw 1	; select bank2/3
 14815  123C  3001               	movwf fsr1h	
 14816  123D  0087               	
 14817                           	movf	(??_menuInput+0)+0,w
 14818  123E  082C               	movwf	indf1
 14819  123F  0081               	line	213
 14820                           	
 14821                           l4358:	
 14822  1240                     ;main.c: 213:   *page = 0;
 14823                           	movf	(menuInput@page),w
 14824  1240  0831               	movwf	fsr1l
 14825  1241  0086               	movlw 1	; select bank2/3
 14826  1242  3001               	movwf fsr1h	
 14827  1243  0087               	
 14828                           	clrf	indf1
 14829  1244  0181               	line	214
 14830                           	
 14831                           l4360:	
 14832  1245                     ;main.c: 214:   OLED_returnHome();
 14833                           	fcall	_OLED_returnHome
 14834  1245  31A6  26B4  3191   	goto	l4362
 14835  1248  2A4A               	line	215
 14836                           ;main.c: 215:  }
 14837                           	
 14838                           l211:	
 14839  1249                     	goto	l4362
 14840  1249  2A4A               	
 14841                           l210:	
 14842  124A                     	line	216
 14843                           	
 14844                           l4362:	
 14845  124A                     ;main.c: 216:  PIE0bits.IOCIE = 1;
 14846                           	movlb 14	; select bank14
 14847  124A  014E               	bsf	(1814)^0700h,4	;volatile
 14848  124B  1616               	line	217
 14849                           	
 14850                           l212:	
 14851  124C                     	return
 14852  124C  0008               	opt stack 0
 14853                           GLOBAL	__end_of_menuInput
 14854                           	__end_of_menuInput:
 14855  124D                     	signat	_menuInput,24697
 14856                           	global	_getRotDir
 14857                           
 14858 ;; *************** function _getRotDir *****************
 14859 ;; Defined at:
 14860 ;;		line 219 in file "main.c"
 14861 ;; Parameters:    Size  Location     Type
 14862 ;;		None
 14863 ;; Auto vars:     Size  Location     Type
 14864 ;;  ret             1    1[BANK0 ] enum E7844
 14865 ;; Return value:  Size  Location     Type
 14866 ;;                  1    wreg      enum E7844
 14867 ;; Registers used:
 14868 ;;		wreg, status,2
 14869 ;; Tracked objects:
 14870 ;;		On entry : 0/0
 14871 ;;		On exit  : 0/0
 14872 ;;		Unchanged: 0/0
 14873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14875 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14876 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14877 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14878 ;;Total ram usage:        2 bytes
 14879 ;; Hardware stack levels used:    1
 14880 ;; Hardware stack levels required when called:    3
 14881 ;; This function calls:
 14882 ;;		Nothing
 14883 ;; This function is called by:
 14884 ;;		_menuInput
 14885 ;; This function uses a non-reentrant model
 14886 ;;
 14887                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
 14888                           	line	219
 14889                           global __ptext31
 14890                           __ptext31:	;psect for function _getRotDir
 14891  26D8                     psect	text31
 14892                           	file	"main.c"
 14893                           	line	219
 14894                           	global	__size_of_getRotDir
 14895                           	__size_of_getRotDir	equ	__end_of_getRotDir-_getRotDir
 14896  0009                     	
 14897                           _getRotDir:	
 14898  26D8                     ;incstack = 0
 14899                           	opt	stack 10
 14900                           ; Regs used in _getRotDir: [wreg+status,2]
 14901                           	line	221
 14902                           	
 14903                           l4254:	
 14904  26D8                     ;main.c: 221:  enum e_direction ret = g_rotDir;
 14905                           	movf	(_g_rotDir),w	;volatile
 14906  26D8  087A               	movlb 0	; select bank0
 14907  26D9  0140               	movwf	(??_getRotDir+0)+0
 14908  26DA  00A0               	movf	(??_getRotDir+0)+0,w
 14909  26DB  0820               	movwf	(getRotDir@ret)
 14910  26DC  00A1               	line	222
 14911                           	
 14912                           l4256:	
 14913  26DD                     ;main.c: 222:  g_rotDir = ROT_STOP;
 14914                           	clrf	(_g_rotDir)	;volatile
 14915  26DD  01FA               	line	223
 14916                           	
 14917                           l4258:	
 14918  26DE                     ;main.c: 223:  return ret;
 14919                           	movf	(getRotDir@ret),w
 14920  26DE  0821               	goto	l215
 14921  26DF  2EE0               	
 14922                           l4260:	
 14923  26E0                     	line	224
 14924                           	
 14925                           l215:	
 14926  26E0                     	return
 14927  26E0  0008               	opt stack 0
 14928                           GLOBAL	__end_of_getRotDir
 14929                           	__end_of_getRotDir:
 14930  26E1                     	signat	_getRotDir,89
 14931                           	global	_getPB
 14932                           
 14933 ;; *************** function _getPB *****************
 14934 ;; Defined at:
 14935 ;;		line 226 in file "main.c"
 14936 ;; Parameters:    Size  Location     Type
 14937 ;;		None
 14938 ;; Auto vars:     Size  Location     Type
 14939 ;;  ret             1    1[BANK0 ] enum E7848
 14940 ;; Return value:  Size  Location     Type
 14941 ;;                  1    wreg      enum E7848
 14942 ;; Registers used:
 14943 ;;		wreg, status,2
 14944 ;; Tracked objects:
 14945 ;;		On entry : 0/0
 14946 ;;		On exit  : 0/0
 14947 ;;		Unchanged: 0/0
 14948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14950 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14951 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14952 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14953 ;;Total ram usage:        2 bytes
 14954 ;; Hardware stack levels used:    1
 14955 ;; Hardware stack levels required when called:    3
 14956 ;; This function calls:
 14957 ;;		Nothing
 14958 ;; This function is called by:
 14959 ;;		_showMenu
 14960 ;;		_menuInput
 14961 ;; This function uses a non-reentrant model
 14962 ;;
 14963                           psect	text32,local,class=CODE,delta=2,merge=1,group=0
 14964                           	line	226
 14965                           global __ptext32
 14966                           __ptext32:	;psect for function _getPB
 14967  26F8                     psect	text32
 14968                           	file	"main.c"
 14969                           	line	226
 14970                           	global	__size_of_getPB
 14971                           	__size_of_getPB	equ	__end_of_getPB-_getPB
 14972  000C                     	
 14973                           _getPB:	
 14974  26F8                     ;incstack = 0
 14975                           	opt	stack 10
 14976                           ; Regs used in _getPB: [wreg+status,2]
 14977                           	line	228
 14978                           	
 14979                           l4246:	
 14980  26F8                     ;main.c: 228:  enum e_buttonPress ret = g_pbState;
 14981                           	movlb 2	; select bank2
 14982  26F8  0142               	movf	(_g_pbState)^0100h,w	;volatile
 14983  26F9  086B               	movlb 0	; select bank0
 14984  26FA  0140               	movwf	(??_getPB+0)+0
 14985  26FB  00A0               	movf	(??_getPB+0)+0,w
 14986  26FC  0820               	movwf	(getPB@ret)
 14987  26FD  00A1               	line	229
 14988                           	
 14989                           l4248:	
 14990  26FE                     ;main.c: 229:  g_pbState = PB_NONE;
 14991                           	movlb 2	; select bank2
 14992  26FE  0142               	clrf	(_g_pbState)^0100h	;volatile
 14993  26FF  01EB               	line	230
 14994                           	
 14995                           l4250:	
 14996  2700                     ;main.c: 230:  return ret;
 14997                           	movlb 0	; select bank0
 14998  2700  0140               	movf	(getPB@ret),w
 14999  2701  0821               	goto	l218
 15000  2702  2F03               	
 15001                           l4252:	
 15002  2703                     	line	231
 15003                           	
 15004                           l218:	
 15005  2703                     	return
 15006  2703  0008               	opt stack 0
 15007                           GLOBAL	__end_of_getPB
 15008                           	__end_of_getPB:
 15009  2704                     	signat	_getPB,89
 15010                           	global	_OLED_scrollDisplayRight
 15011                           
 15012 ;; *************** function _OLED_scrollDisplayRight *****************
 15013 ;; Defined at:
 15014 ;;		line 133 in file "oled.c"
 15015 ;; Parameters:    Size  Location     Type
 15016 ;;		None
 15017 ;; Auto vars:     Size  Location     Type
 15018 ;;		None
 15019 ;; Return value:  Size  Location     Type
 15020 ;;                  1    wreg      void 
 15021 ;; Registers used:
 15022 ;;		wreg, status,2, status,0, pclath, cstack
 15023 ;; Tracked objects:
 15024 ;;		On entry : 0/0
 15025 ;;		On exit  : 0/0
 15026 ;;		Unchanged: 0/0
 15027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15032 ;;Total ram usage:        0 bytes
 15033 ;; Hardware stack levels used:    1
 15034 ;; Hardware stack levels required when called:    7
 15035 ;; This function calls:
 15036 ;;		_OLED_command
 15037 ;; This function is called by:
 15038 ;;		_menuInput
 15039 ;; This function uses a non-reentrant model
 15040 ;;
 15041                           psect	text33,local,class=CODE,delta=2,merge=1,group=0
 15042                           	file	"oled.c"
 15043                           	line	133
 15044                           global __ptext33
 15045                           __ptext33:	;psect for function _OLED_scrollDisplayRight
 15046  26BE                     psect	text33
 15047                           	file	"oled.c"
 15048                           	line	133
 15049                           	global	__size_of_OLED_scrollDisplayRight
 15050                           	__size_of_OLED_scrollDisplayRight	equ	__end_of_OLED_scrollDisplayRight-_OLED_scrollDisp
                                 layRight
 15051  0005                     	
 15052                           _OLED_scrollDisplayRight:	
 15053  26BE                     ;incstack = 0
 15054                           	opt	stack 6
 15055                           ; Regs used in _OLED_scrollDisplayRight: [wreg+status,2+status,0+pclath+cstack]
 15056                           	line	135
 15057                           	
 15058                           l4264:	
 15059  26BE                     ;oled.c: 135:     OLED_command(0x10 | 0x08 | 0x04);
 15060                           	movlw	low(01Ch)
 15061  26BE  301C               	fcall	_OLED_command
 15062  26BF  31A6  26E1  31A6   	line	136
 15063                           	
 15064                           l314:	
 15065  26C2                     	return
 15066  26C2  0008               	opt stack 0
 15067                           GLOBAL	__end_of_OLED_scrollDisplayRight
 15068                           	__end_of_OLED_scrollDisplayRight:
 15069  26C3                     	signat	_OLED_scrollDisplayRight,89
 15070                           	global	_OLED_scrollDisplayLeft
 15071                           
 15072 ;; *************** function _OLED_scrollDisplayLeft *****************
 15073 ;; Defined at:
 15074 ;;		line 128 in file "oled.c"
 15075 ;; Parameters:    Size  Location     Type
 15076 ;;		None
 15077 ;; Auto vars:     Size  Location     Type
 15078 ;;		None
 15079 ;; Return value:  Size  Location     Type
 15080 ;;                  1    wreg      void 
 15081 ;; Registers used:
 15082 ;;		wreg, status,2, status,0, pclath, cstack
 15083 ;; Tracked objects:
 15084 ;;		On entry : 0/0
 15085 ;;		On exit  : 0/0
 15086 ;;		Unchanged: 0/0
 15087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15092 ;;Total ram usage:        0 bytes
 15093 ;; Hardware stack levels used:    1
 15094 ;; Hardware stack levels required when called:    7
 15095 ;; This function calls:
 15096 ;;		_OLED_command
 15097 ;; This function is called by:
 15098 ;;		_menuInput
 15099 ;; This function uses a non-reentrant model
 15100 ;;
 15101                           psect	text34,local,class=CODE,delta=2,merge=1,group=0
 15102                           	line	128
 15103                           global __ptext34
 15104                           __ptext34:	;psect for function _OLED_scrollDisplayLeft
 15105  26B9                     psect	text34
 15106                           	file	"oled.c"
 15107                           	line	128
 15108                           	global	__size_of_OLED_scrollDisplayLeft
 15109                           	__size_of_OLED_scrollDisplayLeft	equ	__end_of_OLED_scrollDisplayLeft-_OLED_scrollDispla
                                 yLeft
 15110  0005                     	
 15111                           _OLED_scrollDisplayLeft:	
 15112  26B9                     ;incstack = 0
 15113                           	opt	stack 6
 15114                           ; Regs used in _OLED_scrollDisplayLeft: [wreg+status,2+status,0+pclath+cstack]
 15115                           	line	130
 15116                           	
 15117                           l4262:	
 15118  26B9                     ;oled.c: 130:     OLED_command(0x10 | 0x08 | 0x00);
 15119                           	movlw	low(018h)
 15120  26B9  3018               	fcall	_OLED_command
 15121  26BA  31A6  26E1  31A6   	line	131
 15122                           	
 15123                           l311:	
 15124  26BD                     	return
 15125  26BD  0008               	opt stack 0
 15126                           GLOBAL	__end_of_OLED_scrollDisplayLeft
 15127                           	__end_of_OLED_scrollDisplayLeft:
 15128  26BE                     	signat	_OLED_scrollDisplayLeft,89
 15129                           	global	_OLED_returnHome
 15130                           
 15131 ;; *************** function _OLED_returnHome *****************
 15132 ;; Defined at:
 15133 ;;		line 163 in file "oled.c"
 15134 ;; Parameters:    Size  Location     Type
 15135 ;;		None
 15136 ;; Auto vars:     Size  Location     Type
 15137 ;;		None
 15138 ;; Return value:  Size  Location     Type
 15139 ;;                  1    wreg      void 
 15140 ;; Registers used:
 15141 ;;		wreg, status,2, status,0, pclath, cstack
 15142 ;; Tracked objects:
 15143 ;;		On entry : 0/0
 15144 ;;		On exit  : 0/0
 15145 ;;		Unchanged: 0/0
 15146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15151 ;;Total ram usage:        0 bytes
 15152 ;; Hardware stack levels used:    1
 15153 ;; Hardware stack levels required when called:    7
 15154 ;; This function calls:
 15155 ;;		_OLED_command
 15156 ;; This function is called by:
 15157 ;;		_main
 15158 ;;		_menuInput
 15159 ;; This function uses a non-reentrant model
 15160 ;;
 15161                           psect	text35,local,class=CODE,delta=2,merge=1,group=0
 15162                           	line	163
 15163                           global __ptext35
 15164                           __ptext35:	;psect for function _OLED_returnHome
 15165  26B4                     psect	text35
 15166                           	file	"oled.c"
 15167                           	line	163
 15168                           	global	__size_of_OLED_returnHome
 15169                           	__size_of_OLED_returnHome	equ	__end_of_OLED_returnHome-_OLED_returnHome
 15170  0005                     	
 15171                           _OLED_returnHome:	
 15172  26B4                     ;incstack = 0
 15173                           	opt	stack 6
 15174                           ; Regs used in _OLED_returnHome: [wreg+status,2+status,0+pclath+cstack]
 15175                           	line	164
 15176                           	
 15177                           l4244:	
 15178  26B4                     ;oled.c: 164:     OLED_command(0x02);
 15179                           	movlw	low(02h)
 15180  26B4  3002               	fcall	_OLED_command
 15181  26B5  31A6  26E1  31A6   	line	165
 15182                           	
 15183                           l336:	
 15184  26B8                     	return
 15185  26B8  0008               	opt stack 0
 15186                           GLOBAL	__end_of_OLED_returnHome
 15187                           	__end_of_OLED_returnHome:
 15188  26B9                     	signat	_OLED_returnHome,89
 15189                           	global	_OLED_print_xy
 15190                           
 15191 ;; *************** function _OLED_print_xy *****************
 15192 ;; Defined at:
 15193 ;;		line 153 in file "oled.c"
 15194 ;; Parameters:    Size  Location     Type
 15195 ;;  col             1    wreg     unsigned char 
 15196 ;;  row             1    7[BANK0 ] unsigned char 
 15197 ;;  s               2    8[BANK0 ] PTR unsigned char 
 15198 ;;		 -> STR_3(49), showMenu@s(61), STR_1(49), 
 15199 ;; Auto vars:     Size  Location     Type
 15200 ;;  col             1   15[BANK0 ] unsigned char 
 15201 ;;  row_offsets     4   11[BANK0 ] unsigned char [4]
 15202 ;; Return value:  Size  Location     Type
 15203 ;;                  1    wreg      void 
 15204 ;; Registers used:
 15205 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15206 ;; Tracked objects:
 15207 ;;		On entry : 0/0
 15208 ;;		On exit  : 0/0
 15209 ;;		Unchanged: 0/0
 15210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15211 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15212 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15213 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15214 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15215 ;;Total ram usage:        9 bytes
 15216 ;; Hardware stack levels used:    1
 15217 ;; Hardware stack levels required when called:    7
 15218 ;; This function calls:
 15219 ;;		_OLED_command
 15220 ;;		_OLED_write
 15221 ;; This function is called by:
 15222 ;;		_showMenu
 15223 ;; This function uses a non-reentrant model
 15224 ;;
 15225                           psect	text36,local,class=CODE,delta=2,merge=1,group=0
 15226                           	line	153
 15227                           global __ptext36
 15228                           __ptext36:	;psect for function _OLED_print_xy
 15229  1928                     psect	text36
 15230                           	file	"oled.c"
 15231                           	line	153
 15232                           	global	__size_of_OLED_print_xy
 15233                           	__size_of_OLED_print_xy	equ	__end_of_OLED_print_xy-_OLED_print_xy
 15234  0038                     	
 15235                           _OLED_print_xy:	
 15236  1928                     ;incstack = 0
 15237                           	opt	stack 7
 15238                           ; Regs used in _OLED_print_xy: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15239                           ;OLED_print_xy@col stored from wreg
 15240                           	movlb 0	; select bank0
 15241  1928  0140               	movwf	(OLED_print_xy@col)
 15242  1929  00AF               	line	154
 15243                           	
 15244                           l4280:	
 15245  192A                     ;oled.c: 154:     uint8_t row_offsets[] = { 0x00, 0x40, 0x14, 0x54 };
 15246                           	movlb 4	; select bank4
 15247  192A  0144               	movf	(OLED_print_xy@F7353+3)^0200h,w
 15248  192B  0852               	movlb 0	; select bank0
 15249  192C  0140               	movwf	(OLED_print_xy@row_offsets+3)
 15250  192D  00AE               	movlb 4	; select bank4
 15251  192E  0144               	movf	(OLED_print_xy@F7353+2)^0200h,w
 15252  192F  0851               	movlb 0	; select bank0
 15253  1930  0140               	movwf	(OLED_print_xy@row_offsets+2)
 15254  1931  00AD               	movlb 4	; select bank4
 15255  1932  0144               	movf	(OLED_print_xy@F7353+1)^0200h,w
 15256  1933  0850               	movlb 0	; select bank0
 15257  1934  0140               	movwf	(OLED_print_xy@row_offsets+1)
 15258  1935  00AC               	movlb 4	; select bank4
 15259  1936  0144               	movf	(OLED_print_xy@F7353)^0200h,w
 15260  1937  084F               	movlb 0	; select bank0
 15261  1938  0140               	movwf	(OLED_print_xy@row_offsets)
 15262  1939  00AB               
 15263                           	line	156
 15264                           	
 15265                           l4282:	
 15266  193A                     ;oled.c: 156:     OLED_command(0x80 | (col + row_offsets[row]));
 15267                           	movf	(OLED_print_xy@row),w
 15268  193A  0827               	addlw	low(OLED_print_xy@row_offsets|((0x0)<<8))&0ffh
 15269  193B  3E2B               	movwf	fsr1l
 15270  193C  0086               	clrf fsr1h	
 15271  193D  0187               	
 15272                           	movf	indf1,w
 15273  193E  0801               	addwf	(OLED_print_xy@col),w
 15274  193F  072F               	iorlw	080h
 15275  1940  3880               	fcall	_OLED_command
 15276  1941  31A6  26E1  3199   	line	157
 15277                           ;oled.c: 157:     while (*s != (char)((void*)0))
 15278                           	goto	l4288
 15279  1944  2954               	
 15280                           l331:	
 15281  1945                     	line	159
 15282                           	
 15283                           l4284:	
 15284  1945                     ;oled.c: 158:     {;oled.c: 159:         OLED_write(*s++);
 15285                           	movlb 0	; select bank0
 15286  1945  0140               	movf	(OLED_print_xy@s),w
 15287  1946  0828               	movwf	fsr0l
 15288  1947  0084               	movf	((OLED_print_xy@s+1)),w
 15289  1948  0829               	movwf	fsr0h
 15290  1949  0085               	movf	indf0,w ;code access
 15291  194A  0800               	fcall	_OLED_write
 15292  194B  31A6  26EC  3199   	
 15293                           l4286:	
 15294  194E                     	movlw	01h
 15295  194E  3001               	movlb 0	; select bank0
 15296  194F  0140               	addwf	(OLED_print_xy@s),f
 15297  1950  07A8               	movlw	0
 15298  1951  3000               	addwfc	(OLED_print_xy@s+1),f
 15299  1952  3DA9               	goto	l4288
 15300  1953  2954               	line	160
 15301                           ;oled.c: 160:     }
 15302                           	
 15303                           l330:	
 15304  1954                     	line	157
 15305                           	
 15306                           l4288:	
 15307  1954                     ;oled.c: 157:     while (*s != (char)((void*)0))
 15308                           	movlb 0	; select bank0
 15309  1954  0140               	movf	(OLED_print_xy@s),w
 15310  1955  0828               	movwf	fsr0l
 15311  1956  0084               	movf	((OLED_print_xy@s+1)),w
 15312  1957  0829               	movwf	fsr0h
 15313  1958  0085               	moviw	fsr0++
 15314  1959  0012               	btfss	status,2
 15315  195A  1D03               	goto	u6051
 15316  195B  295D               	goto	u6050
 15317  195C  295E               u6051:
 15318  195D                     	goto	l4284
 15319  195D  2945               u6050:
 15320  195E                     	goto	l333
 15321  195E  295F               	
 15322                           l332:	
 15323  195F                     	line	161
 15324                           	
 15325                           l333:	
 15326  195F                     	return
 15327  195F  0008               	opt stack 0
 15328                           GLOBAL	__end_of_OLED_print_xy
 15329                           	__end_of_OLED_print_xy:
 15330  1960                     	signat	_OLED_print_xy,12409
 15331                           	global	_OLED_write
 15332                           
 15333 ;; *************** function _OLED_write *****************
 15334 ;; Defined at:
 15335 ;;		line 74 in file "oled.c"
 15336 ;; Parameters:    Size  Location     Type
 15337 ;;  value           1    wreg     unsigned char 
 15338 ;; Auto vars:     Size  Location     Type
 15339 ;;  value           1    6[BANK0 ] unsigned char 
 15340 ;; Return value:  Size  Location     Type
 15341 ;;                  1    wreg      void 
 15342 ;; Registers used:
 15343 ;;		wreg, status,2, status,0, pclath, cstack
 15344 ;; Tracked objects:
 15345 ;;		On entry : 0/0
 15346 ;;		On exit  : 0/0
 15347 ;;		Unchanged: 0/0
 15348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15350 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15352 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15353 ;;Total ram usage:        1 bytes
 15354 ;; Hardware stack levels used:    1
 15355 ;; Hardware stack levels required when called:    6
 15356 ;; This function calls:
 15357 ;;		_OLED_send
 15358 ;;		_OLED_waitForReady
 15359 ;; This function is called by:
 15360 ;;		_OLED_print_xy
 15361 ;;		_OLED_print
 15362 ;; This function uses a non-reentrant model
 15363 ;;
 15364                           psect	text37,local,class=CODE,delta=2,merge=1,group=0
 15365                           	line	74
 15366                           global __ptext37
 15367                           __ptext37:	;psect for function _OLED_write
 15368  26EC                     psect	text37
 15369                           	file	"oled.c"
 15370                           	line	74
 15371                           	global	__size_of_OLED_write
 15372                           	__size_of_OLED_write	equ	__end_of_OLED_write-_OLED_write
 15373  000C                     	
 15374                           _OLED_write:	
 15375  26EC                     ;incstack = 0
 15376                           	opt	stack 7
 15377                           ; Regs used in _OLED_write: [wreg+status,2+status,0+pclath+cstack]
 15378                           ;OLED_write@value stored from wreg
 15379                           	movlb 0	; select bank0
 15380  26EC  0140               	movwf	(OLED_write@value)
 15381  26ED  00A6               	line	76
 15382                           	
 15383                           l4266:	
 15384  26EE                     ;oled.c: 74: void OLED_write(uint8_t value);oled.c: 75: {;oled.c: 76:     OLED_send(valu
                                 e, 1);
 15385                           	clrf	(OLED_send@mode)
 15386  26EE  01A3               	incf	(OLED_send@mode),f
 15387  26EF  0AA3               	movf	(OLED_write@value),w
 15388  26F0  0826               	fcall	_OLED_send
 15389  26F1  31A7  2704  31A6   	line	77
 15390                           ;oled.c: 77:     OLED_waitForReady();
 15391                           	fcall	_OLED_waitForReady
 15392  26F4  31A7  2771  31A6   	line	78
 15393                           	
 15394                           l305:	
 15395  26F7                     	return
 15396  26F7  0008               	opt stack 0
 15397                           GLOBAL	__end_of_OLED_write
 15398                           	__end_of_OLED_write:
 15399  26F8                     	signat	_OLED_write,4217
 15400                           	global	_readAnalogValues
 15401                           
 15402 ;; *************** function _readAnalogValues *****************
 15403 ;; Defined at:
 15404 ;;		line 137 in file "main.c"
 15405 ;; Parameters:    Size  Location     Type
 15406 ;;		None
 15407 ;; Auto vars:     Size  Location     Type
 15408 ;;  adc             2   70[BANK0 ] unsigned short 
 15409 ;; Return value:  Size  Location     Type
 15410 ;;                  1    wreg      void 
 15411 ;; Registers used:
 15412 ;;		wreg, status,2, status,0, pclath, cstack
 15413 ;; Tracked objects:
 15414 ;;		On entry : 0/0
 15415 ;;		On exit  : 0/0
 15416 ;;		Unchanged: 0/0
 15417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15419 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15421 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15422 ;;Total ram usage:        6 bytes
 15423 ;; Hardware stack levels used:    1
 15424 ;; Hardware stack levels required when called:    5
 15425 ;; This function calls:
 15426 ;;		___fldiv
 15427 ;;		___flmul
 15428 ;;		___xxtofl
 15429 ;; This function is called by:
 15430 ;;		_main
 15431 ;; This function uses a non-reentrant model
 15432 ;;
 15433                           psect	text38,local,class=CODE,delta=2,merge=1,group=0
 15434                           	file	"main.c"
 15435                           	line	137
 15436                           global __ptext38
 15437                           __ptext38:	;psect for function _readAnalogValues
 15438  1D44                     psect	text38
 15439                           	file	"main.c"
 15440                           	line	137
 15441                           	global	__size_of_readAnalogValues
 15442                           	__size_of_readAnalogValues	equ	__end_of_readAnalogValues-_readAnalogValues
 15443  0072                     	
 15444                           _readAnalogValues:	
 15445  1D44                     ;incstack = 0
 15446                           	opt	stack 10
 15447                           ; Regs used in _readAnalogValues: [wreg+status,2+status,0+pclath+cstack]
 15448                           	line	141
 15449                           	
 15450                           l4518:	
 15451  1D44                     ;main.c: 139:  uint16_t adc;;main.c: 141:  ADCON0bits.CHS = 0b010000;
 15452                           	movlb 1	; select bank1
 15453  1D44  0141               	movf	(157)^080h,w	;volatile
 15454  1D45  081D               	andlw	not (((1<<6)-1)<<2)
 15455  1D46  3903               	iorlw	(010h & ((1<<6)-1))<<2
 15456  1D47  3840               	movwf	(157)^080h	;volatile
 15457  1D48  009D               	line	142
 15458                           	
 15459                           l4520:	
 15460  1D49                     ;main.c: 142:  ADCON0bits.ADON = 1;
 15461                           	bsf	(157)^080h,0	;volatile
 15462  1D49  141D               	line	143
 15463                           ;main.c: 143:  while (ADCON0bits.GO);
 15464                           	goto	l181
 15465  1D4A  2D4B               	
 15466                           l182:	
 15467  1D4B                     	
 15468                           l181:	
 15469  1D4B                     	btfsc	(157)^080h,1	;volatile
 15470  1D4B  189D               	goto	u6341
 15471  1D4C  2D4E               	goto	u6340
 15472  1D4D  2D4F               u6341:
 15473  1D4E                     	goto	l181
 15474  1D4E  2D4B               u6340:
 15475  1D4F                     	goto	l4522
 15476  1D4F  2D50               	
 15477                           l183:	
 15478  1D50                     	line	144
 15479                           	
 15480                           l4522:	
 15481  1D50                     ;main.c: 144:  adc = (uint16_t)((ADRESH << 8) + ADRESL);
 15482                           	movf	(156)^080h,w	;volatile
 15483  1D50  081C               	movlb 0	; select bank0
 15484  1D51  0140               	movwf	(readAnalogValues@adc+1)
 15485  1D52  00E7               	movlb 1	; select bank1
 15486  1D53  0141               	movf	(155)^080h,w	;volatile
 15487  1D54  081B               	movlb 0	; select bank0
 15488  1D55  0140               	movwf	(readAnalogValues@adc)
 15489  1D56  00E6               	line	145
 15490                           	
 15491                           l4524:	
 15492  1D57                     ;main.c: 145:  g_voltage = (adc * 5.0 * (150.0 + 47.0)) / (1023.0 * 47.0);
 15493                           	movlw	0x40
 15494  1D57  3040               	movwf	(___flmul@b+3)
 15495  1D58  00B1               	movlw	0xa0
 15496  1D59  30A0               	movwf	(___flmul@b+2)
 15497  1D5A  00B0               	movlw	0x0
 15498  1D5B  3000               	movwf	(___flmul@b+1)
 15499  1D5C  00AF               	movlw	0x0
 15500  1D5D  3000               	movwf	(___flmul@b)
 15501  1D5E  00AE               
 15502                           	movf	(readAnalogValues@adc),w
 15503  1D5F  0866               	movwf	(___xxtofl@val)
 15504  1D60  00A0               	movf	(readAnalogValues@adc+1),w
 15505  1D61  0867               	movwf	((___xxtofl@val))+1
 15506  1D62  00A1               	clrf	2+((___xxtofl@val))
 15507  1D63  01A2               	clrf	3+((___xxtofl@val))
 15508  1D64  01A3               	movlw	low(0)
 15509  1D65  3000               	fcall	___xxtofl
 15510  1D66  3190  20D5  319D   	movlb 0	; select bank0
 15511  1D69  0140               	movf	(3+(?___xxtofl)),w
 15512  1D6A  0823               	movwf	(___flmul@a+3)
 15513  1D6B  00B5               	movf	(2+(?___xxtofl)),w
 15514  1D6C  0822               	movwf	(___flmul@a+2)
 15515  1D6D  00B4               	movf	(1+(?___xxtofl)),w
 15516  1D6E  0821               	movwf	(___flmul@a+1)
 15517  1D6F  00B3               	movf	(0+(?___xxtofl)),w
 15518  1D70  0820               	movwf	(___flmul@a)
 15519  1D71  00B2               
 15520                           	fcall	___flmul
 15521  1D72  3195  2595  319D   	movlb 0	; select bank0
 15522  1D75  0140               	movf	(3+(?___flmul)),w
 15523  1D76  0831               	movwf	(_readAnalogValues$1449+3)
 15524  1D77  00E5               	movf	(2+(?___flmul)),w
 15525  1D78  0830               	movwf	(_readAnalogValues$1449+2)
 15526  1D79  00E4               	movf	(1+(?___flmul)),w
 15527  1D7A  082F               	movwf	(_readAnalogValues$1449+1)
 15528  1D7B  00E3               	movf	(0+(?___flmul)),w
 15529  1D7C  082E               	movwf	(_readAnalogValues$1449)
 15530  1D7D  00E2               
 15531                           	
 15532                           l4526:	
 15533  1D7E                     ;main.c: 145:  g_voltage = (adc * 5.0 * (150.0 + 47.0)) / (1023.0 * 47.0);
 15534                           	movlw	0x47
 15535  1D7E  3047               	movwf	(___fldiv@a+3)
 15536  1D7F  00CB               	movlw	0x3b
 15537  1D80  303B               	movwf	(___fldiv@a+2)
 15538  1D81  00CA               	movlw	0xd1
 15539  1D82  30D1               	movwf	(___fldiv@a+1)
 15540  1D83  00C9               	movlw	0x0
 15541  1D84  3000               	movwf	(___fldiv@a)
 15542  1D85  00C8               
 15543                           	movlw	0x43
 15544  1D86  3043               	movwf	(___flmul@b+3)
 15545  1D87  00B1               	movlw	0x45
 15546  1D88  3045               	movwf	(___flmul@b+2)
 15547  1D89  00B0               	movlw	0x0
 15548  1D8A  3000               	movwf	(___flmul@b+1)
 15549  1D8B  00AF               	movlw	0x0
 15550  1D8C  3000               	movwf	(___flmul@b)
 15551  1D8D  00AE               
 15552                           	movf	(_readAnalogValues$1449+3),w
 15553  1D8E  0865               	movwf	(___flmul@a+3)
 15554  1D8F  00B5               	movf	(_readAnalogValues$1449+2),w
 15555  1D90  0864               	movwf	(___flmul@a+2)
 15556  1D91  00B4               	movf	(_readAnalogValues$1449+1),w
 15557  1D92  0863               	movwf	(___flmul@a+1)
 15558  1D93  00B3               	movf	(_readAnalogValues$1449),w
 15559  1D94  0862               	movwf	(___flmul@a)
 15560  1D95  00B2               
 15561                           	fcall	___flmul
 15562  1D96  3195  2595  319D   	movlb 0	; select bank0
 15563  1D99  0140               	movf	(3+(?___flmul)),w
 15564  1D9A  0831               	movwf	(___fldiv@b+3)
 15565  1D9B  00CF               	movf	(2+(?___flmul)),w
 15566  1D9C  0830               	movwf	(___fldiv@b+2)
 15567  1D9D  00CE               	movf	(1+(?___flmul)),w
 15568  1D9E  082F               	movwf	(___fldiv@b+1)
 15569  1D9F  00CD               	movf	(0+(?___flmul)),w
 15570  1DA0  082E               	movwf	(___fldiv@b)
 15571  1DA1  00CC               
 15572                           	fcall	___fldiv
 15573  1DA2  3188  2010  319D   	movlb 0	; select bank0
 15574  1DA5  0140               	movf	(3+(?___fldiv)),w
 15575  1DA6  084B               	movlb 2	; select bank2
 15576  1DA7  0142               	movwf	(_g_voltage+3)^0100h
 15577  1DA8  00E1               	movlb 0	; select bank0
 15578  1DA9  0140               	movf	(2+(?___fldiv)),w
 15579  1DAA  084A               	movlb 2	; select bank2
 15580  1DAB  0142               	movwf	(_g_voltage+2)^0100h
 15581  1DAC  00E0               	movlb 0	; select bank0
 15582  1DAD  0140               	movf	(1+(?___fldiv)),w
 15583  1DAE  0849               	movlb 2	; select bank2
 15584  1DAF  0142               	movwf	(_g_voltage+1)^0100h
 15585  1DB0  00DF               	movlb 0	; select bank0
 15586  1DB1  0140               	movf	(0+(?___fldiv)),w
 15587  1DB2  0848               	movlb 2	; select bank2
 15588  1DB3  0142               	movwf	(_g_voltage)^0100h
 15589  1DB4  00DE               
 15590                           	line	146
 15591                           	
 15592                           l184:	
 15593  1DB5                     	return
 15594  1DB5  0008               	opt stack 0
 15595                           GLOBAL	__end_of_readAnalogValues
 15596                           	__end_of_readAnalogValues:
 15597  1DB6                     	signat	_readAnalogValues,89
 15598                           	global	___flmul
 15599                           
 15600 ;; *************** function ___flmul *****************
 15601 ;; Defined at:
 15602 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
 15603 ;; Parameters:    Size  Location     Type
 15604 ;;  b               4   14[BANK0 ] void 
 15605 ;;  a               4   18[BANK0 ] void 
 15606 ;; Auto vars:     Size  Location     Type
 15607 ;;  prod            4   34[BANK0 ] struct .
 15608 ;;  grs             4   28[BANK0 ] unsigned long 
 15609 ;;  temp            2   38[BANK0 ] struct .
 15610 ;;  bexp            1   33[BANK0 ] unsigned char 
 15611 ;;  aexp            1   32[BANK0 ] unsigned char 
 15612 ;;  sign            1   27[BANK0 ] unsigned char 
 15613 ;; Return value:  Size  Location     Type
 15614 ;;                  4   14[BANK0 ] unsigned char 
 15615 ;; Registers used:
 15616 ;;		wreg, status,2, status,0, pclath, cstack
 15617 ;; Tracked objects:
 15618 ;;		On entry : 0/0
 15619 ;;		On exit  : 0/0
 15620 ;;		Unchanged: 0/0
 15621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15622 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15623 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15624 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15625 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15626 ;;Total ram usage:       26 bytes
 15627 ;; Hardware stack levels used:    1
 15628 ;; Hardware stack levels required when called:    4
 15629 ;; This function calls:
 15630 ;;		__Umul8_16
 15631 ;; This function is called by:
 15632 ;;		_readAnalogValues
 15633 ;;		_efgtoa
 15634 ;; This function uses a non-reentrant model
 15635 ;;
 15636                           psect	text39,local,class=CODE,delta=2,merge=1,group=1
 15637                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
 15638                           	line	8
 15639                           global __ptext39
 15640                           __ptext39:	;psect for function ___flmul
 15641  1595                     psect	text39
 15642                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
 15643                           	line	8
 15644                           	global	__size_of___flmul
 15645                           	__size_of___flmul	equ	__end_of___flmul-___flmul
 15646  026B                     	
 15647                           ___flmul:	
 15648  1595                     ;incstack = 0
 15649                           	opt	stack 6
 15650                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 15651                           	line	17
 15652                           	
 15653                           l3590:	
 15654  1595                     	movlb 0	; select bank0
 15655  1595  0140               	movf	0+(___flmul@b)+03h,w
 15656  1596  0831               	andlw	080h
 15657  1597  3980               	movwf	(??___flmul+0)+0
 15658  1598  00B6               	movf	(??___flmul+0)+0,w
 15659  1599  0836               	movwf	(___flmul@sign)
 15660  159A  00BB               	line	18
 15661                           	
 15662                           l3592:	
 15663  159B                     	lslf	0+(___flmul@b)+03h,w
 15664  159B  3531               	movwf	(??___flmul+0)+0
 15665  159C  00B6               	movf	(??___flmul+0)+0,w
 15666  159D  0836               	movwf	(___flmul@bexp)
 15667  159E  00C1               	line	19
 15668                           	
 15669                           l3594:	
 15670  159F                     	btfss	0+(___flmul@b)+02h,(7)&7
 15671  159F  1FB0               	goto	u4911
 15672  15A0  2DA2               	goto	u4910
 15673  15A1  2DA3               u4911:
 15674  15A2                     	goto	l3598
 15675  15A2  2DA5               u4910:
 15676  15A3                     	line	20
 15677                           	
 15678                           l3596:	
 15679  15A3                     	bsf	(___flmul@bexp)+(0/8),(0)&7
 15680  15A3  1441               	goto	l3598
 15681  15A4  2DA5               	line	21
 15682                           	
 15683                           l904:	
 15684  15A5                     	line	24
 15685                           	
 15686                           l3598:	
 15687  15A5                     	movf	((___flmul@bexp)),w
 15688  15A5  0841               	btfsc	status,2
 15689  15A6  1903               	goto	u4921
 15690  15A7  2DA9               	goto	u4920
 15691  15A8  2DAA               u4921:
 15692  15A9                     	goto	l3606
 15693  15A9  2DBA               u4920:
 15694  15AA                     	line	26
 15695                           	
 15696                           l3600:	
 15697  15AA                     		incf	((___flmul@bexp)),w
 15698  15AA  0A41               	btfss	status,2
 15699  15AB  1D03               	goto	u4931
 15700  15AC  2DAE               	goto	u4930
 15701  15AD  2DAF               u4931:
 15702  15AE                     	goto	l3604
 15703  15AE  2DB8               u4930:
 15704  15AF                     	line	28
 15705                           	
 15706                           l3602:	
 15707  15AF                     	movlw	0x0
 15708  15AF  3000               	movwf	(___flmul@b+3)
 15709  15B0  00B1               	movlw	0x0
 15710  15B1  3000               	movwf	(___flmul@b+2)
 15711  15B2  00B0               	movlw	0x0
 15712  15B3  3000               	movwf	(___flmul@b+1)
 15713  15B4  00AF               	movlw	0x0
 15714  15B5  3000               	movwf	(___flmul@b)
 15715  15B6  00AE               
 15716                           	goto	l3604
 15717  15B7  2DB8               	line	29
 15718                           	
 15719                           l906:	
 15720  15B8                     	line	31
 15721                           	
 15722                           l3604:	
 15723  15B8                     	bsf	(___flmul@b)+(23/8),(23)&7
 15724  15B8  17B0               	line	33
 15725                           	goto	l3608
 15726  15B9  2DC3               	line	34
 15727                           	
 15728                           l905:	
 15729  15BA                     	line	36
 15730                           	
 15731                           l3606:	
 15732  15BA                     	movlw	0x0
 15733  15BA  3000               	movwf	(___flmul@b+3)
 15734  15BB  00B1               	movlw	0x0
 15735  15BC  3000               	movwf	(___flmul@b+2)
 15736  15BD  00B0               	movlw	0x0
 15737  15BE  3000               	movwf	(___flmul@b+1)
 15738  15BF  00AF               	movlw	0x0
 15739  15C0  3000               	movwf	(___flmul@b)
 15740  15C1  00AE               
 15741                           	goto	l3608
 15742  15C2  2DC3               	line	37
 15743                           	
 15744                           l907:	
 15745  15C3                     	line	39
 15746                           	
 15747                           l3608:	
 15748  15C3                     	movf	0+(___flmul@a)+03h,w
 15749  15C3  0835               	andlw	080h
 15750  15C4  3980               	movwf	(??___flmul+0)+0
 15751  15C5  00B6               	movf	(??___flmul+0)+0,w
 15752  15C6  0836               	xorwf	(___flmul@sign),f
 15753  15C7  06BB               	line	40
 15754                           	
 15755                           l3610:	
 15756  15C8                     	lslf	0+(___flmul@a)+03h,w
 15757  15C8  3535               	movwf	(??___flmul+0)+0
 15758  15C9  00B6               	movf	(??___flmul+0)+0,w
 15759  15CA  0836               	movwf	(___flmul@aexp)
 15760  15CB  00C0               	line	41
 15761                           	
 15762                           l3612:	
 15763  15CC                     	btfss	0+(___flmul@a)+02h,(7)&7
 15764  15CC  1FB4               	goto	u4941
 15765  15CD  2DCF               	goto	u4940
 15766  15CE  2DD0               u4941:
 15767  15CF                     	goto	l3616
 15768  15CF  2DD2               u4940:
 15769  15D0                     	line	42
 15770                           	
 15771                           l3614:	
 15772  15D0                     	bsf	(___flmul@aexp)+(0/8),(0)&7
 15773  15D0  1440               	goto	l3616
 15774  15D1  2DD2               	line	43
 15775                           	
 15776                           l908:	
 15777  15D2                     	line	45
 15778                           	
 15779                           l3616:	
 15780  15D2                     	movf	((___flmul@aexp)),w
 15781  15D2  0840               	btfsc	status,2
 15782  15D3  1903               	goto	u4951
 15783  15D4  2DD6               	goto	u4950
 15784  15D5  2DD7               u4951:
 15785  15D6                     	goto	l3624
 15786  15D6  2DE7               u4950:
 15787  15D7                     	line	48
 15788                           	
 15789                           l3618:	
 15790  15D7                     		incf	((___flmul@aexp)),w
 15791  15D7  0A40               	btfss	status,2
 15792  15D8  1D03               	goto	u4961
 15793  15D9  2DDB               	goto	u4960
 15794  15DA  2DDC               u4961:
 15795  15DB                     	goto	l3622
 15796  15DB  2DE5               u4960:
 15797  15DC                     	line	50
 15798                           	
 15799                           l3620:	
 15800  15DC                     	movlw	0x0
 15801  15DC  3000               	movwf	(___flmul@a+3)
 15802  15DD  00B5               	movlw	0x0
 15803  15DE  3000               	movwf	(___flmul@a+2)
 15804  15DF  00B4               	movlw	0x0
 15805  15E0  3000               	movwf	(___flmul@a+1)
 15806  15E1  00B3               	movlw	0x0
 15807  15E2  3000               	movwf	(___flmul@a)
 15808  15E3  00B2               
 15809                           	goto	l3622
 15810  15E4  2DE5               	line	51
 15811                           	
 15812                           l910:	
 15813  15E5                     	line	53
 15814                           	
 15815                           l3622:	
 15816  15E5                     	bsf	(___flmul@a)+(23/8),(23)&7
 15817  15E5  17B4               	line	54
 15818                           	goto	l3626
 15819  15E6  2DF0               	line	55
 15820                           	
 15821                           l909:	
 15822  15E7                     	line	57
 15823                           	
 15824                           l3624:	
 15825  15E7                     	movlw	0x0
 15826  15E7  3000               	movwf	(___flmul@a+3)
 15827  15E8  00B5               	movlw	0x0
 15828  15E9  3000               	movwf	(___flmul@a+2)
 15829  15EA  00B4               	movlw	0x0
 15830  15EB  3000               	movwf	(___flmul@a+1)
 15831  15EC  00B3               	movlw	0x0
 15832  15ED  3000               	movwf	(___flmul@a)
 15833  15EE  00B2               
 15834                           	goto	l3626
 15835  15EF  2DF0               	line	58
 15836                           	
 15837                           l911:	
 15838  15F0                     	line	65
 15839                           	
 15840                           l3626:	
 15841  15F0                     	movf	((___flmul@aexp)),w
 15842  15F0  0840               	btfsc	status,2
 15843  15F1  1903               	goto	u4971
 15844  15F2  2DF4               	goto	u4970
 15845  15F3  2DF5               u4971:
 15846  15F4                     	goto	l3630
 15847  15F4  2DFB               u4970:
 15848  15F5                     	
 15849                           l3628:	
 15850  15F5                     	movf	((___flmul@bexp)),w
 15851  15F5  0841               	btfss	status,2
 15852  15F6  1D03               	goto	u4981
 15853  15F7  2DF9               	goto	u4980
 15854  15F8  2DFA               u4981:
 15855  15F9                     	goto	l3634
 15856  15F9  2E05               u4980:
 15857  15FA                     	goto	l3630
 15858  15FA  2DFB               	
 15859                           l914:	
 15860  15FB                     	line	66
 15861                           	
 15862                           l3630:	
 15863  15FB                     	movlw	0x0
 15864  15FB  3000               	movwf	(?___flmul+3)
 15865  15FC  00B1               	movlw	0x0
 15866  15FD  3000               	movwf	(?___flmul+2)
 15867  15FE  00B0               	movlw	0x0
 15868  15FF  3000               	movwf	(?___flmul+1)
 15869  1600  00AF               	movlw	0x0
 15870  1601  3000               	movwf	(?___flmul)
 15871  1602  00AE               
 15872                           	goto	l915
 15873  1603  2FFF               	
 15874                           l3632:	
 15875  1604                     	goto	l915
 15876  1604  2FFF               	line	67
 15877                           	
 15878                           l912:	
 15879  1605                     	line	119
 15880                           	
 15881                           l3634:	
 15882  1605                     	movf	(___flmul@b),w
 15883  1605  082E               	movwf	(??___flmul+0)+0
 15884  1606  00B6               	movf	(??___flmul+0)+0,w
 15885  1607  0836               	movwf	(__Umul8_16@multiplicand)
 15886  1608  00A0               	movf	0+(___flmul@a)+02h,w
 15887  1609  0834               	fcall	__Umul8_16
 15888  160A  3190  2000  3195   	movlb 0	; select bank0
 15889  160D  0140               	movf	(1+(?__Umul8_16)),w
 15890  160E  0821               	movwf	(___flmul@temp+1)
 15891  160F  00C7               	movf	(0+(?__Umul8_16)),w
 15892  1610  0820               	movwf	(___flmul@temp)
 15893  1611  00C6               	line	120
 15894                           	
 15895                           l3636:	
 15896  1612                     	movf	(___flmul@temp),w
 15897  1612  0846               	movwf	(??___flmul+0)+0
 15898  1613  00B6               	clrf	(??___flmul+0)+0+1
 15899  1614  01B7               	clrf	(??___flmul+0)+0+2
 15900  1615  01B8               	clrf	(??___flmul+0)+0+3
 15901  1616  01B9               	movf	3+(??___flmul+0)+0,w
 15902  1617  0839               	movwf	(___flmul@grs+3)
 15903  1618  00BF               	movf	2+(??___flmul+0)+0,w
 15904  1619  0838               	movwf	(___flmul@grs+2)
 15905  161A  00BE               	movf	1+(??___flmul+0)+0,w
 15906  161B  0837               	movwf	(___flmul@grs+1)
 15907  161C  00BD               	movf	0+(??___flmul+0)+0,w
 15908  161D  0836               	movwf	(___flmul@grs)
 15909  161E  00BC               
 15910                           	line	121
 15911                           	
 15912                           l3638:	
 15913  161F                     	movf	0+(___flmul@temp)+01h,w
 15914  161F  0847               	movwf	(??___flmul+0)+0
 15915  1620  00B6               	clrf	(??___flmul+0)+0+1
 15916  1621  01B7               	clrf	(??___flmul+0)+0+2
 15917  1622  01B8               	clrf	(??___flmul+0)+0+3
 15918  1623  01B9               	movf	3+(??___flmul+0)+0,w
 15919  1624  0839               	movwf	(___flmul@prod+3)
 15920  1625  00C5               	movf	2+(??___flmul+0)+0,w
 15921  1626  0838               	movwf	(___flmul@prod+2)
 15922  1627  00C4               	movf	1+(??___flmul+0)+0,w
 15923  1628  0837               	movwf	(___flmul@prod+1)
 15924  1629  00C3               	movf	0+(??___flmul+0)+0,w
 15925  162A  0836               	movwf	(___flmul@prod)
 15926  162B  00C2               
 15927                           	line	122
 15928                           	movf	0+(___flmul@b)+01h,w
 15929  162C  082F               	movwf	(??___flmul+0)+0
 15930  162D  00B6               	movf	(??___flmul+0)+0,w
 15931  162E  0836               	movwf	(__Umul8_16@multiplicand)
 15932  162F  00A0               	movf	0+(___flmul@a)+01h,w
 15933  1630  0833               	fcall	__Umul8_16
 15934  1631  3190  2000  3195   	movlb 0	; select bank0
 15935  1634  0140               	movf	(1+(?__Umul8_16)),w
 15936  1635  0821               	movwf	(___flmul@temp+1)
 15937  1636  00C7               	movf	(0+(?__Umul8_16)),w
 15938  1637  0820               	movwf	(___flmul@temp)
 15939  1638  00C6               	line	123
 15940                           	
 15941                           l3640:	
 15942  1639                     	movf	(___flmul@temp),w
 15943  1639  0846               	movwf	(??___flmul+0)+0
 15944  163A  00B6               	clrf	(??___flmul+0)+0+1
 15945  163B  01B7               	clrf	(??___flmul+0)+0+2
 15946  163C  01B8               	clrf	(??___flmul+0)+0+3
 15947  163D  01B9               	movf	0+(??___flmul+0)+0,w
 15948  163E  0836               	addwf	(___flmul@grs),f
 15949  163F  07BC               	movf	1+(??___flmul+0)+0,w
 15950  1640  0837               	addwfc	(___flmul@grs+1),f
 15951  1641  3DBD               	movf	2+(??___flmul+0)+0,w
 15952  1642  0838               	addwfc	(___flmul@grs+2),f
 15953  1643  3DBE               	movf	3+(??___flmul+0)+0,w
 15954  1644  0839               	addwfc	(___flmul@grs+3),f
 15955  1645  3DBF               	line	124
 15956                           	
 15957                           l3642:	
 15958  1646                     	movf	0+(___flmul@temp)+01h,w
 15959  1646  0847               	movwf	(??___flmul+0)+0
 15960  1647  00B6               	clrf	(??___flmul+0)+0+1
 15961  1648  01B7               	clrf	(??___flmul+0)+0+2
 15962  1649  01B8               	clrf	(??___flmul+0)+0+3
 15963  164A  01B9               	movf	0+(??___flmul+0)+0,w
 15964  164B  0836               	addwf	(___flmul@prod),f
 15965  164C  07C2               	movf	1+(??___flmul+0)+0,w
 15966  164D  0837               	addwfc	(___flmul@prod+1),f
 15967  164E  3DC3               	movf	2+(??___flmul+0)+0,w
 15968  164F  0838               	addwfc	(___flmul@prod+2),f
 15969  1650  3DC4               	movf	3+(??___flmul+0)+0,w
 15970  1651  0839               	addwfc	(___flmul@prod+3),f
 15971  1652  3DC5               	line	125
 15972                           	movf	0+(___flmul@b)+02h,w
 15973  1653  0830               	movwf	(??___flmul+0)+0
 15974  1654  00B6               	movf	(??___flmul+0)+0,w
 15975  1655  0836               	movwf	(__Umul8_16@multiplicand)
 15976  1656  00A0               	movf	(___flmul@a),w
 15977  1657  0832               	fcall	__Umul8_16
 15978  1658  3190  2000  3195   	movlb 0	; select bank0
 15979  165B  0140               	movf	(1+(?__Umul8_16)),w
 15980  165C  0821               	movwf	(___flmul@temp+1)
 15981  165D  00C7               	movf	(0+(?__Umul8_16)),w
 15982  165E  0820               	movwf	(___flmul@temp)
 15983  165F  00C6               	line	126
 15984                           	
 15985                           l3644:	
 15986  1660                     	movf	(___flmul@temp),w
 15987  1660  0846               	movwf	(??___flmul+0)+0
 15988  1661  00B6               	clrf	(??___flmul+0)+0+1
 15989  1662  01B7               	clrf	(??___flmul+0)+0+2
 15990  1663  01B8               	clrf	(??___flmul+0)+0+3
 15991  1664  01B9               	movf	0+(??___flmul+0)+0,w
 15992  1665  0836               	addwf	(___flmul@grs),f
 15993  1666  07BC               	movf	1+(??___flmul+0)+0,w
 15994  1667  0837               	addwfc	(___flmul@grs+1),f
 15995  1668  3DBD               	movf	2+(??___flmul+0)+0,w
 15996  1669  0838               	addwfc	(___flmul@grs+2),f
 15997  166A  3DBE               	movf	3+(??___flmul+0)+0,w
 15998  166B  0839               	addwfc	(___flmul@grs+3),f
 15999  166C  3DBF               	line	127
 16000                           	
 16001                           l3646:	
 16002  166D                     	movf	0+(___flmul@temp)+01h,w
 16003  166D  0847               	movwf	(??___flmul+0)+0
 16004  166E  00B6               	clrf	(??___flmul+0)+0+1
 16005  166F  01B7               	clrf	(??___flmul+0)+0+2
 16006  1670  01B8               	clrf	(??___flmul+0)+0+3
 16007  1671  01B9               	movf	0+(??___flmul+0)+0,w
 16008  1672  0836               	addwf	(___flmul@prod),f
 16009  1673  07C2               	movf	1+(??___flmul+0)+0,w
 16010  1674  0837               	addwfc	(___flmul@prod+1),f
 16011  1675  3DC3               	movf	2+(??___flmul+0)+0,w
 16012  1676  0838               	addwfc	(___flmul@prod+2),f
 16013  1677  3DC4               	movf	3+(??___flmul+0)+0,w
 16014  1678  0839               	addwfc	(___flmul@prod+3),f
 16015  1679  3DC5               	line	128
 16016                           	
 16017                           l3648:	
 16018  167A                     	movlw	08h
 16019  167A  3008               u4995:
 16020  167B                     	lslf	(___flmul@grs),f
 16021  167B  35BC               	rlf	(___flmul@grs+1),f
 16022  167C  0DBD               	rlf	(___flmul@grs+2),f
 16023  167D  0DBE               	rlf	(___flmul@grs+3),f
 16024  167E  0DBF               	decfsz	wreg,f
 16025  167F  0B89               	goto	u4995
 16026  1680  2E7B               	line	129
 16027                           	
 16028                           l3650:	
 16029  1681                     	movf	0+(___flmul@b)+01h,w
 16030  1681  082F               	movwf	(??___flmul+0)+0
 16031  1682  00B6               	movf	(??___flmul+0)+0,w
 16032  1683  0836               	movwf	(__Umul8_16@multiplicand)
 16033  1684  00A0               	movf	(___flmul@a),w
 16034  1685  0832               	fcall	__Umul8_16
 16035  1686  3190  2000  3195   	movlb 0	; select bank0
 16036  1689  0140               	movf	(1+(?__Umul8_16)),w
 16037  168A  0821               	movwf	(___flmul@temp+1)
 16038  168B  00C7               	movf	(0+(?__Umul8_16)),w
 16039  168C  0820               	movwf	(___flmul@temp)
 16040  168D  00C6               	line	130
 16041                           	
 16042                           l3652:	
 16043  168E                     	movf	(___flmul@temp),w
 16044  168E  0846               	addwf	(___flmul@grs),f
 16045  168F  07BC               	movf	(___flmul@temp+1),w
 16046  1690  0847               	addwfc	(___flmul@grs+1),f
 16047  1691  3DBD               	movlw	0
 16048  1692  3000               	addwfc	(___flmul@grs+2),f
 16049  1693  3DBE               	addwfc	(___flmul@grs+3),f
 16050  1694  3DBF               	line	131
 16051                           	
 16052                           l3654:	
 16053  1695                     	movf	(___flmul@b),w
 16054  1695  082E               	movwf	(??___flmul+0)+0
 16055  1696  00B6               	movf	(??___flmul+0)+0,w
 16056  1697  0836               	movwf	(__Umul8_16@multiplicand)
 16057  1698  00A0               	movf	0+(___flmul@a)+01h,w
 16058  1699  0833               	fcall	__Umul8_16
 16059  169A  3190  2000  3195   	movlb 0	; select bank0
 16060  169D  0140               	movf	(1+(?__Umul8_16)),w
 16061  169E  0821               	movwf	(___flmul@temp+1)
 16062  169F  00C7               	movf	(0+(?__Umul8_16)),w
 16063  16A0  0820               	movwf	(___flmul@temp)
 16064  16A1  00C6               	line	132
 16065                           	
 16066                           l3656:	
 16067  16A2                     	movf	(___flmul@temp),w
 16068  16A2  0846               	addwf	(___flmul@grs),f
 16069  16A3  07BC               	movf	(___flmul@temp+1),w
 16070  16A4  0847               	addwfc	(___flmul@grs+1),f
 16071  16A5  3DBD               	movlw	0
 16072  16A6  3000               	addwfc	(___flmul@grs+2),f
 16073  16A7  3DBE               	addwfc	(___flmul@grs+3),f
 16074  16A8  3DBF               	line	133
 16075                           	
 16076                           l3658:	
 16077  16A9                     	movlw	08h
 16078  16A9  3008               u5005:
 16079  16AA                     	lslf	(___flmul@grs),f
 16080  16AA  35BC               	rlf	(___flmul@grs+1),f
 16081  16AB  0DBD               	rlf	(___flmul@grs+2),f
 16082  16AC  0DBE               	rlf	(___flmul@grs+3),f
 16083  16AD  0DBF               	decfsz	wreg,f
 16084  16AE  0B89               	goto	u5005
 16085  16AF  2EAA               	line	134
 16086                           	movf	(___flmul@b),w
 16087  16B0  082E               	movwf	(??___flmul+0)+0
 16088  16B1  00B6               	movf	(??___flmul+0)+0,w
 16089  16B2  0836               	movwf	(__Umul8_16@multiplicand)
 16090  16B3  00A0               	movf	(___flmul@a),w
 16091  16B4  0832               	fcall	__Umul8_16
 16092  16B5  3190  2000  3195   	movlb 0	; select bank0
 16093  16B8  0140               	movf	(1+(?__Umul8_16)),w
 16094  16B9  0821               	movwf	(___flmul@temp+1)
 16095  16BA  00C7               	movf	(0+(?__Umul8_16)),w
 16096  16BB  0820               	movwf	(___flmul@temp)
 16097  16BC  00C6               	line	135
 16098                           	
 16099                           l3660:	
 16100  16BD                     	movf	(___flmul@temp),w
 16101  16BD  0846               	addwf	(___flmul@grs),f
 16102  16BE  07BC               	movf	(___flmul@temp+1),w
 16103  16BF  0847               	addwfc	(___flmul@grs+1),f
 16104  16C0  3DBD               	movlw	0
 16105  16C1  3000               	addwfc	(___flmul@grs+2),f
 16106  16C2  3DBE               	addwfc	(___flmul@grs+3),f
 16107  16C3  3DBF               	line	136
 16108                           	
 16109                           l3662:	
 16110  16C4                     	movf	0+(___flmul@b)+01h,w
 16111  16C4  082F               	movwf	(??___flmul+0)+0
 16112  16C5  00B6               	movf	(??___flmul+0)+0,w
 16113  16C6  0836               	movwf	(__Umul8_16@multiplicand)
 16114  16C7  00A0               	movf	0+(___flmul@a)+02h,w
 16115  16C8  0834               	fcall	__Umul8_16
 16116  16C9  3190  2000  3195   	movlb 0	; select bank0
 16117  16CC  0140               	movf	(1+(?__Umul8_16)),w
 16118  16CD  0821               	movwf	(___flmul@temp+1)
 16119  16CE  00C7               	movf	(0+(?__Umul8_16)),w
 16120  16CF  0820               	movwf	(___flmul@temp)
 16121  16D0  00C6               	line	137
 16122                           	movf	(___flmul@temp),w
 16123  16D1  0846               	addwf	(___flmul@prod),f
 16124  16D2  07C2               	movf	(___flmul@temp+1),w
 16125  16D3  0847               	addwfc	(___flmul@prod+1),f
 16126  16D4  3DC3               	movlw	0
 16127  16D5  3000               	addwfc	(___flmul@prod+2),f
 16128  16D6  3DC4               	addwfc	(___flmul@prod+3),f
 16129  16D7  3DC5               	line	138
 16130                           	
 16131                           l3664:	
 16132  16D8                     	movf	0+(___flmul@b)+02h,w
 16133  16D8  0830               	movwf	(??___flmul+0)+0
 16134  16D9  00B6               	movf	(??___flmul+0)+0,w
 16135  16DA  0836               	movwf	(__Umul8_16@multiplicand)
 16136  16DB  00A0               	movf	0+(___flmul@a)+01h,w
 16137  16DC  0833               	fcall	__Umul8_16
 16138  16DD  3190  2000  3195   	movlb 0	; select bank0
 16139  16E0  0140               	movf	(1+(?__Umul8_16)),w
 16140  16E1  0821               	movwf	(___flmul@temp+1)
 16141  16E2  00C7               	movf	(0+(?__Umul8_16)),w
 16142  16E3  0820               	movwf	(___flmul@temp)
 16143  16E4  00C6               	line	139
 16144                           	
 16145                           l3666:	
 16146  16E5                     	movf	(___flmul@temp),w
 16147  16E5  0846               	addwf	(___flmul@prod),f
 16148  16E6  07C2               	movf	(___flmul@temp+1),w
 16149  16E7  0847               	addwfc	(___flmul@prod+1),f
 16150  16E8  3DC3               	movlw	0
 16151  16E9  3000               	addwfc	(___flmul@prod+2),f
 16152  16EA  3DC4               	addwfc	(___flmul@prod+3),f
 16153  16EB  3DC5               	line	140
 16154                           	movf	0+(___flmul@b)+02h,w
 16155  16EC  0830               	movwf	(??___flmul+0)+0
 16156  16ED  00B6               	movf	(??___flmul+0)+0,w
 16157  16EE  0836               	movwf	(__Umul8_16@multiplicand)
 16158  16EF  00A0               	movf	0+(___flmul@a)+02h,w
 16159  16F0  0834               	fcall	__Umul8_16
 16160  16F1  3190  2000  3195   	movlb 0	; select bank0
 16161  16F4  0140               	movf	(1+(?__Umul8_16)),w
 16162  16F5  0821               	movwf	(___flmul@temp+1)
 16163  16F6  00C7               	movf	(0+(?__Umul8_16)),w
 16164  16F7  0820               	movwf	(___flmul@temp)
 16165  16F8  00C6               	line	141
 16166                           	
 16167                           l3668:	
 16168  16F9                     	movf	(___flmul@temp),w
 16169  16F9  0846               	movwf	((??___flmul+0)+0)
 16170  16FA  00B6               	movf	(___flmul@temp+1),w
 16171  16FB  0847               	movwf	((??___flmul+0)+0+1)
 16172  16FC  00B7               	clrf	((??___flmul+0)+0+2)
 16173  16FD  01B8               	clrf	((??___flmul+0)+0+3)
 16174  16FE  01B9               	movlw	08h
 16175  16FF  3008               u5015:
 16176  1700                     	lslf	(??___flmul+0)+0,f
 16177  1700  35B6               	rlf	(??___flmul+0)+1,f
 16178  1701  0DB7               	rlf	(??___flmul+0)+2,f
 16179  1702  0DB8               	rlf	(??___flmul+0)+3,f
 16180  1703  0DB9               u5010:
 16181  1704                     	decfsz	wreg,f
 16182  1704  0B89               	goto	u5015
 16183  1705  2F00               	movf	0+(??___flmul+0)+0,w
 16184  1706  0836               	addwf	(___flmul@prod),f
 16185  1707  07C2               	movf	1+(??___flmul+0)+0,w
 16186  1708  0837               	addwfc	(___flmul@prod+1),f
 16187  1709  3DC3               	movf	2+(??___flmul+0)+0,w
 16188  170A  0838               	addwfc	(___flmul@prod+2),f
 16189  170B  3DC4               	movf	3+(??___flmul+0)+0,w
 16190  170C  0839               	addwfc	(___flmul@prod+3),f
 16191  170D  3DC5               	line	145
 16192                           	
 16193                           l3670:	
 16194  170E                     	movf	(___flmul@grs),w
 16195  170E  083C               	movwf	(??___flmul+0)+0
 16196  170F  00B6               	movf	(___flmul@grs+1),w
 16197  1710  083D               	movwf	((??___flmul+0)+0+1)
 16198  1711  00B7               	movf	(___flmul@grs+2),w
 16199  1712  083E               	movwf	((??___flmul+0)+0+2)
 16200  1713  00B8               	movf	(___flmul@grs+3),w
 16201  1714  083F               	movwf	((??___flmul+0)+0+3)
 16202  1715  00B9               	movlw	018h
 16203  1716  3018               u5025:
 16204  1717                     	lsrf	(??___flmul+0)+3,f
 16205  1717  36B9               	rrf	(??___flmul+0)+2,f
 16206  1718  0CB8               	rrf	(??___flmul+0)+1,f
 16207  1719  0CB7               	rrf	(??___flmul+0)+0,f
 16208  171A  0CB6               u5020:
 16209  171B                     	decfsz	wreg,f
 16210  171B  0B89               	goto	u5025
 16211  171C  2F17               	movf	0+(??___flmul+0)+0,w
 16212  171D  0836               	addwf	(___flmul@prod),f
 16213  171E  07C2               	movf	1+(??___flmul+0)+0,w
 16214  171F  0837               	addwfc	(___flmul@prod+1),f
 16215  1720  3DC3               	movf	2+(??___flmul+0)+0,w
 16216  1721  0838               	addwfc	(___flmul@prod+2),f
 16217  1722  3DC4               	movf	3+(??___flmul+0)+0,w
 16218  1723  0839               	addwfc	(___flmul@prod+3),f
 16219  1724  3DC5               	line	146
 16220                           	
 16221                           l3672:	
 16222  1725                     	movlw	08h
 16223  1725  3008               u5035:
 16224  1726                     	lslf	(___flmul@grs),f
 16225  1726  35BC               	rlf	(___flmul@grs+1),f
 16226  1727  0DBD               	rlf	(___flmul@grs+2),f
 16227  1728  0DBE               	rlf	(___flmul@grs+3),f
 16228  1729  0DBF               	decfsz	wreg,f
 16229  172A  0B89               	goto	u5035
 16230  172B  2F26               	line	149
 16231                           	
 16232                           l3674:	
 16233  172C                     	movf	(___flmul@bexp),w
 16234  172C  0841               	addwf	(___flmul@aexp),w
 16235  172D  0740               	movwf	(??___flmul+0)+0
 16236  172E  00B6               	clrf	(??___flmul+0)+0+1
 16237  172F  01B7               	rlf	1+(??___flmul+0)+0,f
 16238  1730  0DB7               	
 16239                           	movf	0+(??___flmul+0)+0,w
 16240  1731  0836               	addlw	082h
 16241  1732  3E82               	movwf	(___flmul@temp)
 16242  1733  00C6               	movlw	0FFh
 16243  1734  30FF               	addwfc	1+(??___flmul+0)+0,w
 16244  1735  3D37               	movwf	1+(___flmul@temp)
 16245  1736  00C7               	line	152
 16246                           	goto	l3686
 16247  1737  2F51               	
 16248                           l917:	
 16249  1738                     	line	153
 16250                           	
 16251                           l3676:	
 16252  1738                     	movlw	01h
 16253  1738  3001               u5045:
 16254  1739                     	lslf	(___flmul@prod),f
 16255  1739  35C2               	rlf	(___flmul@prod+1),f
 16256  173A  0DC3               	rlf	(___flmul@prod+2),f
 16257  173B  0DC4               	rlf	(___flmul@prod+3),f
 16258  173C  0DC5               	decfsz	wreg,f
 16259  173D  0B89               	goto	u5045
 16260  173E  2F39               	line	154
 16261                           	
 16262                           l3678:	
 16263  173F                     	btfss	(___flmul@grs+3),(31)&7
 16264  173F  1FBF               	goto	u5051
 16265  1740  2F42               	goto	u5050
 16266  1741  2F43               u5051:
 16267  1742                     	goto	l3682
 16268  1742  2F45               u5050:
 16269  1743                     	line	155
 16270                           	
 16271                           l3680:	
 16272  1743                     	bsf	(___flmul@prod)+(0/8),(0)&7
 16273  1743  1442               	goto	l3682
 16274  1744  2F45               	line	156
 16275                           	
 16276                           l918:	
 16277  1745                     	line	157
 16278                           	
 16279                           l3682:	
 16280  1745                     	movlw	01h
 16281  1745  3001               u5065:
 16282  1746                     	lslf	(___flmul@grs),f
 16283  1746  35BC               	rlf	(___flmul@grs+1),f
 16284  1747  0DBD               	rlf	(___flmul@grs+2),f
 16285  1748  0DBE               	rlf	(___flmul@grs+3),f
 16286  1749  0DBF               	decfsz	wreg,f
 16287  174A  0B89               	goto	u5065
 16288  174B  2F46               	line	158
 16289                           	
 16290                           l3684:	
 16291  174C                     	movlw	0FFh
 16292  174C  30FF               	addwf	(___flmul@temp),f
 16293  174D  07C6               	movlw	0FFh
 16294  174E  30FF               	addwfc	(___flmul@temp+1),f
 16295  174F  3DC7               	goto	l3686
 16296  1750  2F51               	line	159
 16297                           	
 16298                           l916:	
 16299  1751                     	line	152
 16300                           	
 16301                           l3686:	
 16302  1751                     	btfss	(___flmul@prod+2),(23)&7
 16303  1751  1FC4               	goto	u5071
 16304  1752  2F54               	goto	u5070
 16305  1753  2F55               u5071:
 16306  1754                     	goto	l3676
 16307  1754  2F38               u5070:
 16308  1755                     	goto	l3688
 16309  1755  2F56               	
 16310                           l919:	
 16311  1756                     	line	163
 16312                           	
 16313                           l3688:	
 16314  1756                     	clrf	(___flmul@aexp)
 16315  1756  01C0               	line	164
 16316                           	
 16317                           l3690:	
 16318  1757                     	btfss	(___flmul@grs+3),(31)&7
 16319  1757  1FBF               	goto	u5081
 16320  1758  2F5A               	goto	u5080
 16321  1759  2F5B               u5081:
 16322  175A                     	goto	l3698
 16323  175A  2F7B               u5080:
 16324  175B                     	line	165
 16325                           	
 16326                           l3692:	
 16327  175B                     	movlw	0FFh
 16328  175B  30FF               	andwf	(___flmul@grs),w
 16329  175C  053C               	movwf	(??___flmul+0)+0
 16330  175D  00B6               	movlw	0FFh
 16331  175E  30FF               	andwf	(___flmul@grs+1),w
 16332  175F  053D               	movwf	((??___flmul+0)+0+1)
 16333  1760  00B7               	movlw	0FFh
 16334  1761  30FF               	andwf	(___flmul@grs+2),w
 16335  1762  053E               	movwf	((??___flmul+0)+0+2)
 16336  1763  00B8               	movlw	07Fh
 16337  1764  307F               	andwf	(___flmul@grs+3),w
 16338  1765  053F               	movwf	((??___flmul+0)+0+3)
 16339  1766  00B9               	movf	3+(??___flmul+0)+0,w
 16340  1767  0839               	iorwf	2+(??___flmul+0)+0,w
 16341  1768  0438               	iorwf	1+(??___flmul+0)+0,w
 16342  1769  0437               	iorwf	0+(??___flmul+0)+0,w
 16343  176A  0436               	skipnz
 16344  176B  1903               	goto	u5091
 16345  176C  2F6E               	goto	u5090
 16346  176D  2F6F               u5091:
 16347  176E                     	goto	l921
 16348  176E  2F72               u5090:
 16349  176F                     	line	166
 16350                           	
 16351                           l3694:	
 16352  176F                     	clrf	(___flmul@aexp)
 16353  176F  01C0               	incf	(___flmul@aexp),f
 16354  1770  0AC0               	line	167
 16355                           	goto	l3698
 16356  1771  2F7B               	line	168
 16357                           	
 16358                           l921:	
 16359  1772                     	line	169
 16360                           	btfss	(___flmul@prod),(0)&7
 16361  1772  1C42               	goto	u5101
 16362  1773  2F75               	goto	u5100
 16363  1774  2F76               u5101:
 16364  1775                     	goto	l3698
 16365  1775  2F7B               u5100:
 16366  1776                     	line	170
 16367                           	
 16368                           l3696:	
 16369  1776                     	clrf	(___flmul@aexp)
 16370  1776  01C0               	incf	(___flmul@aexp),f
 16371  1777  0AC0               	goto	l3698
 16372  1778  2F7B               	line	171
 16373                           	
 16374                           l923:	
 16375  1779                     	goto	l3698
 16376  1779  2F7B               	line	172
 16377                           	
 16378                           l922:	
 16379  177A                     	goto	l3698
 16380  177A  2F7B               	line	173
 16381                           	
 16382                           l920:	
 16383  177B                     	line	174
 16384                           	
 16385                           l3698:	
 16386  177B                     	movf	((___flmul@aexp)),w
 16387  177B  0840               	btfsc	status,2
 16388  177C  1903               	goto	u5111
 16389  177D  2F7F               	goto	u5110
 16390  177E  2F80               u5111:
 16391  177F                     	goto	l3708
 16392  177F  2FAA               u5110:
 16393  1780                     	line	175
 16394                           	
 16395                           l3700:	
 16396  1780                     	movlw	01h
 16397  1780  3001               	addwf	(___flmul@prod),f
 16398  1781  07C2               	movlw	0
 16399  1782  3000               	addwfc	(___flmul@prod+1),f
 16400  1783  3DC3               	movlw	0
 16401  1784  3000               	addwfc	(___flmul@prod+2),f
 16402  1785  3DC4               	movlw	0
 16403  1786  3000               	addwfc	(___flmul@prod+3),f
 16404  1787  3DC5               	line	176
 16405                           	
 16406                           l3702:	
 16407  1788                     	btfss	(___flmul@prod+3),(24)&7
 16408  1788  1C45               	goto	u5121
 16409  1789  2F8B               	goto	u5120
 16410  178A  2F8C               u5121:
 16411  178B                     	goto	l3708
 16412  178B  2FAA               u5120:
 16413  178C                     	line	177
 16414                           	
 16415                           l3704:	
 16416  178C                     	movf	(___flmul@prod),w
 16417  178C  0842               	movwf	(??___flmul+0)+0
 16418  178D  00B6               	movf	(___flmul@prod+1),w
 16419  178E  0843               	movwf	((??___flmul+0)+0+1)
 16420  178F  00B7               	movf	(___flmul@prod+2),w
 16421  1790  0844               	movwf	((??___flmul+0)+0+2)
 16422  1791  00B8               	movf	(___flmul@prod+3),w
 16423  1792  0845               	movwf	((??___flmul+0)+0+3)
 16424  1793  00B9               	movlw	01h
 16425  1794  3001               	movwf	(??___flmul+4)+0
 16426  1795  00BA               u5135:
 16427  1796                     	asrf	(??___flmul+0)+3,f
 16428  1796  37B9               	rrf	(??___flmul+0)+2,f
 16429  1797  0CB8               	rrf	(??___flmul+0)+1,f
 16430  1798  0CB7               	rrf	(??___flmul+0)+0,f
 16431  1799  0CB6               u5130:
 16432  179A                     	decfsz	(??___flmul+4)+0,f
 16433  179A  0BBA               	goto	u5135
 16434  179B  2F96               	movf	3+(??___flmul+0)+0,w
 16435  179C  0839               	movwf	(___flmul@prod+3)
 16436  179D  00C5               	movf	2+(??___flmul+0)+0,w
 16437  179E  0838               	movwf	(___flmul@prod+2)
 16438  179F  00C4               	movf	1+(??___flmul+0)+0,w
 16439  17A0  0837               	movwf	(___flmul@prod+1)
 16440  17A1  00C3               	movf	0+(??___flmul+0)+0,w
 16441  17A2  0836               	movwf	(___flmul@prod)
 16442  17A3  00C2               
 16443                           	line	178
 16444                           	
 16445                           l3706:	
 16446  17A4                     	movlw	01h
 16447  17A4  3001               	addwf	(___flmul@temp),f
 16448  17A5  07C6               	movlw	0
 16449  17A6  3000               	addwfc	(___flmul@temp+1),f
 16450  17A7  3DC7               	goto	l3708
 16451  17A8  2FAA               	line	179
 16452                           	
 16453                           l925:	
 16454  17A9                     	goto	l3708
 16455  17A9  2FAA               	line	180
 16456                           	
 16457                           l924:	
 16458  17AA                     	line	183
 16459                           	
 16460                           l3708:	
 16461  17AA                     	movf	(___flmul@temp+1),w
 16462  17AA  0847               	xorlw	80h
 16463  17AB  3A80               	movwf	(??___flmul+0)+0
 16464  17AC  00B6               	movlw	(0)^80h
 16465  17AD  3080               	subwf	(??___flmul+0)+0,w
 16466  17AE  0236               	skipz
 16467  17AF  1D03               	goto	u5145
 16468  17B0  2FB3               	movlw	0FFh
 16469  17B1  30FF               	subwf	(___flmul@temp),w
 16470  17B2  0246               u5145:
 16471  17B3                     
 16472                           	skipc
 16473  17B3  1C03               	goto	u5141
 16474  17B4  2FB6               	goto	u5140
 16475  17B5  2FB7               u5141:
 16476  17B6                     	goto	l3712
 16477  17B6  2FC1               u5140:
 16478  17B7                     	line	184
 16479                           	
 16480                           l3710:	
 16481  17B7                     	movlw	07Fh
 16482  17B7  307F               	movlb 0	; select bank0
 16483  17B8  0140               	movwf	(___flmul@prod+3)
 16484  17B9  00C5               	movlw	080h
 16485  17BA  3080               	movwf	(___flmul@prod+2)
 16486  17BB  00C4               	movlw	0
 16487  17BC  3000               	movwf	(___flmul@prod+1)
 16488  17BD  00C3               	movlw	0
 16489  17BE  3000               	movwf	(___flmul@prod)
 16490  17BF  00C2               
 16491                           	line	185
 16492                           	goto	l927
 16493  17C0  2FF2               	line	187
 16494                           	
 16495                           l926:	
 16496  17C1                     	
 16497                           l3712:	
 16498  17C1                     	movlb 0	; select bank0
 16499  17C1  0140               	movf	(___flmul@temp+1),w
 16500  17C2  0847               	xorlw	80h
 16501  17C3  3A80               	movwf	(??___flmul+0)+0
 16502  17C4  00B6               	movlw	(0)^80h
 16503  17C5  3080               	subwf	(??___flmul+0)+0,w
 16504  17C6  0236               	skipz
 16505  17C7  1D03               	goto	u5155
 16506  17C8  2FCB               	movlw	01h
 16507  17C9  3001               	subwf	(___flmul@temp),w
 16508  17CA  0246               u5155:
 16509  17CB                     
 16510                           	skipnc
 16511  17CB  1803               	goto	u5151
 16512  17CC  2FCE               	goto	u5150
 16513  17CD  2FCF               u5151:
 16514  17CE                     	goto	l3718
 16515  17CE  2FDA               u5150:
 16516  17CF                     	line	188
 16517                           	
 16518                           l3714:	
 16519  17CF                     	movlw	high highword(0)
 16520  17CF  3000               	movlb 0	; select bank0
 16521  17D0  0140               	movwf	(___flmul@prod+3)
 16522  17D1  00C5               	movlw	low highword(0)
 16523  17D2  3000               	movwf	(___flmul@prod+2)
 16524  17D3  00C4               	movlw	high(0)
 16525  17D4  3000               	movwf	(___flmul@prod+1)
 16526  17D5  00C3               	movlw	low(0)
 16527  17D6  3000               	movwf	(___flmul@prod)
 16528  17D7  00C2               
 16529                           	line	190
 16530                           	
 16531                           l3716:	
 16532  17D8                     	clrf	(___flmul@sign)
 16533  17D8  01BB               	line	191
 16534                           	goto	l927
 16535  17D9  2FF2               	line	192
 16536                           	
 16537                           l928:	
 16538  17DA                     	line	194
 16539                           	
 16540                           l3718:	
 16541  17DA                     	movlb 0	; select bank0
 16542  17DA  0140               	movf	(___flmul@temp),w
 16543  17DB  0846               	movwf	(??___flmul+0)+0
 16544  17DC  00B6               	movf	(??___flmul+0)+0,w
 16545  17DD  0836               	movwf	(___flmul@bexp)
 16546  17DE  00C1               	line	195
 16547                           	movlw	0FFh
 16548  17DF  30FF               	andwf	(___flmul@prod),f
 16549  17E0  05C2               	movlw	0FFh
 16550  17E1  30FF               	andwf	(___flmul@prod+1),f
 16551  17E2  05C3               	movlw	07Fh
 16552  17E3  307F               	andwf	(___flmul@prod+2),f
 16553  17E4  05C4               	movlw	0
 16554  17E5  3000               	andwf	(___flmul@prod+3),f
 16555  17E6  05C5               	line	196
 16556                           	
 16557                           l3720:	
 16558  17E7                     	btfss	(___flmul@bexp),(0)&7
 16559  17E7  1C41               	goto	u5161
 16560  17E8  2FEA               	goto	u5160
 16561  17E9  2FEB               u5161:
 16562  17EA                     	goto	l3724
 16563  17EA  2FED               u5160:
 16564  17EB                     	line	197
 16565                           	
 16566                           l3722:	
 16567  17EB                     	bsf	0+(___flmul@prod)+02h+(7/8),(7)&7
 16568  17EB  17C4               	goto	l3724
 16569  17EC  2FED               	line	198
 16570                           	
 16571                           l930:	
 16572  17ED                     	line	199
 16573                           	
 16574                           l3724:	
 16575  17ED                     	lsrf	(___flmul@bexp),w
 16576  17ED  3641               	movwf	(??___flmul+0)+0
 16577  17EE  00B6               	movf	(??___flmul+0)+0,w
 16578  17EF  0836               	movwf	0+(___flmul@prod)+03h
 16579  17F0  00C5               	goto	l927
 16580  17F1  2FF2               	line	200
 16581                           	
 16582                           l929:	
 16583  17F2                     	
 16584                           l927:	
 16585  17F2                     	line	201
 16586                           	movf	(___flmul@sign),w
 16587  17F2  083B               	movwf	(??___flmul+0)+0
 16588  17F3  00B6               	movf	(??___flmul+0)+0,w
 16589  17F4  0836               	iorwf	0+(___flmul@prod)+03h,f
 16590  17F5  04C5               	line	203
 16591                           	
 16592                           l3726:	
 16593  17F6                     	movf	(___flmul@prod+3),w
 16594  17F6  0845               	movwf	(?___flmul+3)
 16595  17F7  00B1               	movf	(___flmul@prod+2),w
 16596  17F8  0844               	movwf	(?___flmul+2)
 16597  17F9  00B0               	movf	(___flmul@prod+1),w
 16598  17FA  0843               	movwf	(?___flmul+1)
 16599  17FB  00AF               	movf	(___flmul@prod),w
 16600  17FC  0842               	movwf	(?___flmul)
 16601  17FD  00AE               
 16602                           	goto	l915
 16603  17FE  2FFF               	
 16604                           l3728:	
 16605  17FF                     	line	205
 16606                           	
 16607                           l915:	
 16608  17FF                     	return
 16609  17FF  0008               	opt stack 0
 16610                           GLOBAL	__end_of___flmul
 16611                           	__end_of___flmul:
 16612  1800                     	signat	___flmul,8316
 16613                           	global	__Umul8_16
 16614                           
 16615 ;; *************** function __Umul8_16 *****************
 16616 ;; Defined at:
 16617 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8_16.c"
 16618 ;; Parameters:    Size  Location     Type
 16619 ;;  multiplier      1    wreg     unsigned char 
 16620 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 16621 ;; Auto vars:     Size  Location     Type
 16622 ;;  multiplier      1    8[BANK0 ] unsigned char 
 16623 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 16624 ;;  product         2    4[BANK0 ] unsigned int 
 16625 ;; Return value:  Size  Location     Type
 16626 ;;                  2    0[BANK0 ] unsigned int 
 16627 ;; Registers used:
 16628 ;;		wreg, status,2, status,0
 16629 ;; Tracked objects:
 16630 ;;		On entry : 0/0
 16631 ;;		On exit  : 0/0
 16632 ;;		Unchanged: 0/0
 16633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16634 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16635 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16636 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16637 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16638 ;;Total ram usage:        9 bytes
 16639 ;; Hardware stack levels used:    1
 16640 ;; Hardware stack levels required when called:    3
 16641 ;; This function calls:
 16642 ;;		Nothing
 16643 ;; This function is called by:
 16644 ;;		___flmul
 16645 ;; This function uses a non-reentrant model
 16646 ;;
 16647                           psect	text40,local,class=CODE,delta=2,merge=1,group=1
 16648                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8_16.c"
 16649                           	line	4
 16650                           global __ptext40
 16651                           __ptext40:	;psect for function __Umul8_16
 16652  1000                     psect	text40
 16653                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8_16.c"
 16654                           	line	4
 16655                           	global	__size_of__Umul8_16
 16656                           	__size_of__Umul8_16	equ	__end_of__Umul8_16-__Umul8_16
 16657  0027                     	
 16658                           __Umul8_16:	
 16659  1000                     ;incstack = 0
 16660                           	opt	stack 6
 16661                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 16662                           ;__Umul8_16@multiplier stored from wreg
 16663                           	movlb 0	; select bank0
 16664  1000  0140               	movwf	(__Umul8_16@multiplier)
 16665  1001  00A8               	line	5
 16666                           	
 16667                           l3152:	
 16668  1002                     	clrf	(__Umul8_16@product)
 16669  1002  01A4               	clrf	(__Umul8_16@product+1)
 16670  1003  01A5               	line	6
 16671                           	
 16672                           l3154:	
 16673  1004                     	movf	(__Umul8_16@multiplicand),w
 16674  1004  0820               	movwf	(??__Umul8_16+0)+0
 16675  1005  00A2               	clrf	(??__Umul8_16+0)+0+1
 16676  1006  01A3               	movf	0+(??__Umul8_16+0)+0,w
 16677  1007  0822               	movwf	(__Umul8_16@word_mpld)
 16678  1008  00A6               	movf	1+(??__Umul8_16+0)+0,w
 16679  1009  0823               	movwf	(__Umul8_16@word_mpld+1)
 16680  100A  00A7               	goto	l3156
 16681  100B  280C               	line	50
 16682                           	
 16683                           l1101:	
 16684  100C                     	line	51
 16685                           	
 16686                           l3156:	
 16687  100C                     	btfss	(__Umul8_16@multiplier),(0)&7
 16688  100C  1C28               	goto	u3851
 16689  100D  280F               	goto	u3850
 16690  100E  2810               u3851:
 16691  100F                     	goto	l1102
 16692  100F  2814               u3850:
 16693  1010                     	line	52
 16694                           	
 16695                           l3158:	
 16696  1010                     	movf	(__Umul8_16@word_mpld),w
 16697  1010  0826               	addwf	(__Umul8_16@product),f
 16698  1011  07A4               	movf	(__Umul8_16@word_mpld+1),w
 16699  1012  0827               	addwfc	(__Umul8_16@product+1),f
 16700  1013  3DA5               	line	53
 16701                           	
 16702                           l1102:	
 16703  1014                     	line	54
 16704                           	movlw	01h
 16705  1014  3001               	
 16706                           u3865:
 16707  1015                     	lslf	(__Umul8_16@word_mpld),f
 16708  1015  35A6               	rlf	(__Umul8_16@word_mpld+1),f
 16709  1016  0DA7               	decfsz	wreg,f
 16710  1017  0B89               	goto	u3865
 16711  1018  2815               	line	55
 16712                           	clrc
 16713  1019  1003               	rrf	(__Umul8_16@multiplier),f
 16714  101A  0CA8               
 16715                           	line	56
 16716                           	
 16717                           l3160:	
 16718  101B                     	movf	((__Umul8_16@multiplier)),w
 16719  101B  0828               	btfss	status,2
 16720  101C  1D03               	goto	u3871
 16721  101D  281F               	goto	u3870
 16722  101E  2820               u3871:
 16723  101F                     	goto	l3156
 16724  101F  280C               u3870:
 16725  1020                     	goto	l3162
 16726  1020  2821               	
 16727                           l1103:	
 16728  1021                     	line	59
 16729                           	
 16730                           l3162:	
 16731  1021                     	movf	(__Umul8_16@product+1),w
 16732  1021  0825               	movwf	(?__Umul8_16+1)
 16733  1022  00A1               	movf	(__Umul8_16@product),w
 16734  1023  0824               	movwf	(?__Umul8_16)
 16735  1024  00A0               	goto	l1104
 16736  1025  2826               	
 16737                           l3164:	
 16738  1026                     	line	60
 16739                           	
 16740                           l1104:	
 16741  1026                     	return
 16742  1026  0008               	opt stack 0
 16743                           GLOBAL	__end_of__Umul8_16
 16744                           	__end_of__Umul8_16:
 16745  1027                     	signat	__Umul8_16,8314
 16746                           	global	___fldiv
 16747                           
 16748 ;; *************** function ___fldiv *****************
 16749 ;; Defined at:
 16750 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcdiv.c"
 16751 ;; Parameters:    Size  Location     Type
 16752 ;;  a               4   40[BANK0 ] unsigned int 
 16753 ;;  b               4   44[BANK0 ] unsigned int 
 16754 ;; Auto vars:     Size  Location     Type
 16755 ;;  grs             4   60[BANK0 ] unsigned long 
 16756 ;;  rem             4   53[BANK0 ] unsigned long 
 16757 ;;  new_exp         2   58[BANK0 ] int 
 16758 ;;  aexp            1   65[BANK0 ] unsigned char 
 16759 ;;  bexp            1   64[BANK0 ] unsigned char 
 16760 ;;  sign            1   57[BANK0 ] unsigned char 
 16761 ;; Return value:  Size  Location     Type
 16762 ;;                  4   40[BANK0 ] unsigned char 
 16763 ;; Registers used:
 16764 ;;		wreg, status,2, status,0
 16765 ;; Tracked objects:
 16766 ;;		On entry : 0/0
 16767 ;;		On exit  : 0/0
 16768 ;;		Unchanged: 0/0
 16769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16770 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16771 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16772 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16773 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16774 ;;Total ram usage:       26 bytes
 16775 ;; Hardware stack levels used:    1
 16776 ;; Hardware stack levels required when called:    3
 16777 ;; This function calls:
 16778 ;;		Nothing
 16779 ;; This function is called by:
 16780 ;;		_readAnalogValues
 16781 ;;		_efgtoa
 16782 ;; This function uses a non-reentrant model
 16783 ;;
 16784                           psect	text41,local,class=CODE,delta=2,merge=1,group=1
 16785                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcdiv.c"
 16786                           	line	8
 16787                           global __ptext41
 16788                           __ptext41:	;psect for function ___fldiv
 16789  0810                     psect	text41
 16790                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcdiv.c"
 16791                           	line	8
 16792                           	global	__size_of___fldiv
 16793                           	__size_of___fldiv	equ	__end_of___fldiv-___fldiv
 16794  01DF                     	
 16795                           ___fldiv:	
 16796  0810                     ;incstack = 0
 16797                           	opt	stack 7
 16798                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 16799                           	line	26
 16800                           	
 16801                           l3450:	
 16802  0810                     	movlb 0	; select bank0
 16803  0810  0140               	movf	0+(___fldiv@b)+03h,w
 16804  0811  084F               	andlw	080h
 16805  0812  3980               	movwf	(??___fldiv+0)+0
 16806  0813  00D0               	movf	(??___fldiv+0)+0,w
 16807  0814  0850               	movwf	(___fldiv@sign)
 16808  0815  00D9               	line	27
 16809                           	
 16810                           l3452:	
 16811  0816                     	lslf	0+(___fldiv@b)+03h,w
 16812  0816  354F               	movwf	(??___fldiv+0)+0
 16813  0817  00D0               	movf	(??___fldiv+0)+0,w
 16814  0818  0850               	movwf	(___fldiv@bexp)
 16815  0819  00E0               	line	28
 16816                           	
 16817                           l3454:	
 16818  081A                     	btfss	0+(___fldiv@b)+02h,(7)&7
 16819  081A  1FCE               	goto	u4621
 16820  081B  281D               	goto	u4620
 16821  081C  281E               u4621:
 16822  081D                     	goto	l3458
 16823  081D  2820               u4620:
 16824  081E                     	line	29
 16825                           	
 16826                           l3456:	
 16827  081E                     	bsf	(___fldiv@bexp)+(0/8),(0)&7
 16828  081E  1460               	goto	l3458
 16829  081F  2820               	line	30
 16830                           	
 16831                           l868:	
 16832  0820                     	line	33
 16833                           	
 16834                           l3458:	
 16835  0820                     	movf	((___fldiv@bexp)),w
 16836  0820  0860               	btfsc	status,2
 16837  0821  1903               	goto	u4631
 16838  0822  2824               	goto	u4630
 16839  0823  2825               u4631:
 16840  0824                     	goto	l3468
 16841  0824  2836               u4630:
 16842  0825                     	line	35
 16843                           	
 16844                           l3460:	
 16845  0825                     		incf	((___fldiv@bexp)),w
 16846  0825  0A60               	btfss	status,2
 16847  0826  1D03               	goto	u4641
 16848  0827  2829               	goto	u4640
 16849  0828  282A               u4641:
 16850  0829                     	goto	l3464
 16851  0829  2833               u4640:
 16852  082A                     	line	37
 16853                           	
 16854                           l3462:	
 16855  082A                     	movlw	0x0
 16856  082A  3000               	movwf	(___fldiv@b+3)
 16857  082B  00CF               	movlw	0x0
 16858  082C  3000               	movwf	(___fldiv@b+2)
 16859  082D  00CE               	movlw	0x0
 16860  082E  3000               	movwf	(___fldiv@b+1)
 16861  082F  00CD               	movlw	0x0
 16862  0830  3000               	movwf	(___fldiv@b)
 16863  0831  00CC               
 16864                           	goto	l3464
 16865  0832  2833               	line	38
 16866                           	
 16867                           l870:	
 16868  0833                     	line	40
 16869                           	
 16870                           l3464:	
 16871  0833                     	bsf	(___fldiv@b)+(23/8),(23)&7
 16872  0833  17CE               	line	42
 16873                           	
 16874                           l3466:	
 16875  0834                     	clrf	0+(___fldiv@b)+03h
 16876  0834  01CF               	line	43
 16877                           	goto	l3470
 16878  0835  283F               	line	44
 16879                           	
 16880                           l869:	
 16881  0836                     	line	46
 16882                           	
 16883                           l3468:	
 16884  0836                     	movlw	0x0
 16885  0836  3000               	movwf	(___fldiv@b+3)
 16886  0837  00CF               	movlw	0x0
 16887  0838  3000               	movwf	(___fldiv@b+2)
 16888  0839  00CE               	movlw	0x0
 16889  083A  3000               	movwf	(___fldiv@b+1)
 16890  083B  00CD               	movlw	0x0
 16891  083C  3000               	movwf	(___fldiv@b)
 16892  083D  00CC               
 16893                           	goto	l3470
 16894  083E  283F               	line	47
 16895                           	
 16896                           l871:	
 16897  083F                     	line	49
 16898                           	
 16899                           l3470:	
 16900  083F                     	movf	0+(___fldiv@a)+03h,w
 16901  083F  084B               	andlw	080h
 16902  0840  3980               	movwf	(??___fldiv+0)+0
 16903  0841  00D0               	movf	(??___fldiv+0)+0,w
 16904  0842  0850               	xorwf	(___fldiv@sign),f
 16905  0843  06D9               	line	50
 16906                           	
 16907                           l3472:	
 16908  0844                     	lslf	0+(___fldiv@a)+03h,w
 16909  0844  354B               	movwf	(??___fldiv+0)+0
 16910  0845  00D0               	movf	(??___fldiv+0)+0,w
 16911  0846  0850               	movwf	(___fldiv@aexp)
 16912  0847  00E1               	line	51
 16913                           	
 16914                           l3474:	
 16915  0848                     	btfss	0+(___fldiv@a)+02h,(7)&7
 16916  0848  1FCA               	goto	u4651
 16917  0849  284B               	goto	u4650
 16918  084A  284C               u4651:
 16919  084B                     	goto	l3478
 16920  084B  284E               u4650:
 16921  084C                     	line	52
 16922                           	
 16923                           l3476:	
 16924  084C                     	bsf	(___fldiv@aexp)+(0/8),(0)&7
 16925  084C  1461               	goto	l3478
 16926  084D  284E               	line	53
 16927                           	
 16928                           l872:	
 16929  084E                     	line	56
 16930                           	
 16931                           l3478:	
 16932  084E                     	movf	((___fldiv@aexp)),w
 16933  084E  0861               	btfsc	status,2
 16934  084F  1903               	goto	u4661
 16935  0850  2852               	goto	u4660
 16936  0851  2853               u4661:
 16937  0852                     	goto	l3488
 16938  0852  2864               u4660:
 16939  0853                     	line	58
 16940                           	
 16941                           l3480:	
 16942  0853                     		incf	((___fldiv@aexp)),w
 16943  0853  0A61               	btfss	status,2
 16944  0854  1D03               	goto	u4671
 16945  0855  2857               	goto	u4670
 16946  0856  2858               u4671:
 16947  0857                     	goto	l3484
 16948  0857  2861               u4670:
 16949  0858                     	line	60
 16950                           	
 16951                           l3482:	
 16952  0858                     	movlw	0x0
 16953  0858  3000               	movwf	(___fldiv@a+3)
 16954  0859  00CB               	movlw	0x0
 16955  085A  3000               	movwf	(___fldiv@a+2)
 16956  085B  00CA               	movlw	0x0
 16957  085C  3000               	movwf	(___fldiv@a+1)
 16958  085D  00C9               	movlw	0x0
 16959  085E  3000               	movwf	(___fldiv@a)
 16960  085F  00C8               
 16961                           	goto	l3484
 16962  0860  2861               	line	61
 16963                           	
 16964                           l874:	
 16965  0861                     	line	63
 16966                           	
 16967                           l3484:	
 16968  0861                     	bsf	(___fldiv@a)+(23/8),(23)&7
 16969  0861  17CA               	line	65
 16970                           	
 16971                           l3486:	
 16972  0862                     	clrf	0+(___fldiv@a)+03h
 16973  0862  01CB               	line	66
 16974                           	goto	l875
 16975  0863  286C               	line	67
 16976                           	
 16977                           l873:	
 16978  0864                     	line	69
 16979                           	
 16980                           l3488:	
 16981  0864                     	movlw	0x0
 16982  0864  3000               	movwf	(___fldiv@a+3)
 16983  0865  00CB               	movlw	0x0
 16984  0866  3000               	movwf	(___fldiv@a+2)
 16985  0867  00CA               	movlw	0x0
 16986  0868  3000               	movwf	(___fldiv@a+1)
 16987  0869  00C9               	movlw	0x0
 16988  086A  3000               	movwf	(___fldiv@a)
 16989  086B  00C8               
 16990                           	line	70
 16991                           	
 16992                           l875:	
 16993  086C                     	line	75
 16994                           	movf	(___fldiv@a+3),w
 16995  086C  084B               	iorwf	(___fldiv@a+2),w
 16996  086D  044A               	iorwf	(___fldiv@a+1),w
 16997  086E  0449               	iorwf	(___fldiv@a),w
 16998  086F  0448               	skipz
 16999  0870  1D03               	goto	u4681
 17000  0871  2873               	goto	u4680
 17001  0872  2874               u4681:
 17002  0873                     	goto	l3498
 17003  0873  288E               u4680:
 17004  0874                     	line	76
 17005                           	
 17006                           l3490:	
 17007  0874                     	movlw	high highword(0)
 17008  0874  3000               	movwf	(___fldiv@b+3)
 17009  0875  00CF               	movlw	low highword(0)
 17010  0876  3000               	movwf	(___fldiv@b+2)
 17011  0877  00CE               	movlw	high(0)
 17012  0878  3000               	movwf	(___fldiv@b+1)
 17013  0879  00CD               	movlw	low(0)
 17014  087A  3000               	movwf	(___fldiv@b)
 17015  087B  00CC               
 17016                           	line	77
 17017                           	movlw	080h
 17018  087C  3080               	iorwf	0+(___fldiv@b)+02h,f
 17019  087D  04CE               	movlw	07Fh
 17020  087E  307F               	iorwf	1+(___fldiv@b)+02h,f
 17021  087F  04CF               	line	78
 17022                           	
 17023                           l3492:	
 17024  0880                     	movf	(___fldiv@sign),w
 17025  0880  0859               	movwf	(??___fldiv+0)+0
 17026  0881  00D0               	movf	(??___fldiv+0)+0,w
 17027  0882  0850               	iorwf	0+(___fldiv@b)+03h,f
 17028  0883  04CF               	line	79
 17029                           	
 17030                           l3494:	
 17031  0884                     	movf	(___fldiv@b+3),w
 17032  0884  084F               	movwf	(?___fldiv+3)
 17033  0885  00CB               	movf	(___fldiv@b+2),w
 17034  0886  084E               	movwf	(?___fldiv+2)
 17035  0887  00CA               	movf	(___fldiv@b+1),w
 17036  0888  084D               	movwf	(?___fldiv+1)
 17037  0889  00C9               	movf	(___fldiv@b),w
 17038  088A  084C               	movwf	(?___fldiv)
 17039  088B  00C8               
 17040                           	goto	l877
 17041  088C  29EE               	
 17042                           l3496:	
 17043  088D                     	goto	l877
 17044  088D  29EE               	line	80
 17045                           	
 17046                           l876:	
 17047  088E                     	line	83
 17048                           	
 17049                           l3498:	
 17050  088E                     	movf	((___fldiv@bexp)),w
 17051  088E  0860               	btfss	status,2
 17052  088F  1D03               	goto	u4691
 17053  0890  2892               	goto	u4690
 17054  0891  2893               u4691:
 17055  0892                     	goto	l3504
 17056  0892  28A5               u4690:
 17057  0893                     	line	84
 17058                           	
 17059                           l3500:	
 17060  0893                     	movlw	high highword(0)
 17061  0893  3000               	movwf	(___fldiv@b+3)
 17062  0894  00CF               	movlw	low highword(0)
 17063  0895  3000               	movwf	(___fldiv@b+2)
 17064  0896  00CE               	movlw	high(0)
 17065  0897  3000               	movwf	(___fldiv@b+1)
 17066  0898  00CD               	movlw	low(0)
 17067  0899  3000               	movwf	(___fldiv@b)
 17068  089A  00CC               
 17069                           	line	85
 17070                           	movf	(___fldiv@b+3),w
 17071  089B  084F               	movwf	(?___fldiv+3)
 17072  089C  00CB               	movf	(___fldiv@b+2),w
 17073  089D  084E               	movwf	(?___fldiv+2)
 17074  089E  00CA               	movf	(___fldiv@b+1),w
 17075  089F  084D               	movwf	(?___fldiv+1)
 17076  08A0  00C9               	movf	(___fldiv@b),w
 17077  08A1  084C               	movwf	(?___fldiv)
 17078  08A2  00C8               
 17079                           	goto	l877
 17080  08A3  29EE               	
 17081                           l3502:	
 17082  08A4                     	goto	l877
 17083  08A4  29EE               	line	86
 17084                           	
 17085                           l878:	
 17086  08A5                     	line	89
 17087                           	
 17088                           l3504:	
 17089  08A5                     	movf	(___fldiv@aexp),w
 17090  08A5  0861               	movwf	(??___fldiv+0)+0
 17091  08A6  00D0               	clrf	(??___fldiv+0)+0+1
 17092  08A7  01D1               	comf	(??___fldiv+0)+0,f
 17093  08A8  09D0               	comf	(??___fldiv+0)+1,f
 17094  08A9  09D1               	incf	(??___fldiv+0)+0,f
 17095  08AA  0AD0               	skipnz
 17096  08AB  1903               	incf	(??___fldiv+0)+1,f
 17097  08AC  0AD1               	movf	(___fldiv@bexp),w
 17098  08AD  0860               	addwf	0+(??___fldiv+0)+0,w
 17099  08AE  0750               	movwf	(??___fldiv+2)+0
 17100  08AF  00D2               	movf	1+(??___fldiv+0)+0,w
 17101  08B0  0851               	skipnc
 17102  08B1  1803               	incf	1+(??___fldiv+0)+0,w
 17103  08B2  0A51               	movwf	((??___fldiv+2)+0)+1
 17104  08B3  00D3               	movf	0+(??___fldiv+2)+0,w
 17105  08B4  0852               	addlw	07Fh
 17106  08B5  3E7F               	movwf	(___fldiv@new_exp)
 17107  08B6  00DA               	movlw	0
 17108  08B7  3000               	addwfc	1+(??___fldiv+2)+0,w
 17109  08B8  3D53               	movwf	1+(___fldiv@new_exp)
 17110  08B9  00DB               	line	92
 17111                           	
 17112                           l3506:	
 17113  08BA                     	movf	(___fldiv@b+3),w
 17114  08BA  084F               	movwf	(___fldiv@rem+3)
 17115  08BB  00D8               	movf	(___fldiv@b+2),w
 17116  08BC  084E               	movwf	(___fldiv@rem+2)
 17117  08BD  00D7               	movf	(___fldiv@b+1),w
 17118  08BE  084D               	movwf	(___fldiv@rem+1)
 17119  08BF  00D6               	movf	(___fldiv@b),w
 17120  08C0  084C               	movwf	(___fldiv@rem)
 17121  08C1  00D5               
 17122                           	line	93
 17123                           	
 17124                           l3508:	
 17125  08C2                     	movlw	high highword(0)
 17126  08C2  3000               	movwf	(___fldiv@b+3)
 17127  08C3  00CF               	movlw	low highword(0)
 17128  08C4  3000               	movwf	(___fldiv@b+2)
 17129  08C5  00CE               	movlw	high(0)
 17130  08C6  3000               	movwf	(___fldiv@b+1)
 17131  08C7  00CD               	movlw	low(0)
 17132  08C8  3000               	movwf	(___fldiv@b)
 17133  08C9  00CC               
 17134                           	line	94
 17135                           	
 17136                           l3510:	
 17137  08CA                     	movlw	high highword(0)
 17138  08CA  3000               	movwf	(___fldiv@grs+3)
 17139  08CB  00DF               	movlw	low highword(0)
 17140  08CC  3000               	movwf	(___fldiv@grs+2)
 17141  08CD  00DE               	movlw	high(0)
 17142  08CE  3000               	movwf	(___fldiv@grs+1)
 17143  08CF  00DD               	movlw	low(0)
 17144  08D0  3000               	movwf	(___fldiv@grs)
 17145  08D1  00DC               
 17146                           	line	96
 17147                           	
 17148                           l3512:	
 17149  08D2                     	clrf	(___fldiv@aexp)
 17150  08D2  01E1               	line	97
 17151                           	goto	l3532
 17152  08D3  2916               	
 17153                           l880:	
 17154  08D4                     	line	100
 17155                           	
 17156                           l3514:	
 17157  08D4                     	movf	((___fldiv@aexp)),w
 17158  08D4  0861               	btfsc	status,2
 17159  08D5  1903               	goto	u4701
 17160  08D6  28D8               	goto	u4700
 17161  08D7  28D9               u4701:
 17162  08D8                     	goto	l3524
 17163  08D8  28F5               u4700:
 17164  08D9                     	line	101
 17165                           	
 17166                           l3516:	
 17167  08D9                     	movlw	01h
 17168  08D9  3001               u4715:
 17169  08DA                     	lslf	(___fldiv@rem),f
 17170  08DA  35D5               	rlf	(___fldiv@rem+1),f
 17171  08DB  0DD6               	rlf	(___fldiv@rem+2),f
 17172  08DC  0DD7               	rlf	(___fldiv@rem+3),f
 17173  08DD  0DD8               	decfsz	wreg,f
 17174  08DE  0B89               	goto	u4715
 17175  08DF  28DA               	line	102
 17176                           	movlw	01h
 17177  08E0  3001               u4725:
 17178  08E1                     	lslf	(___fldiv@b),f
 17179  08E1  35CC               	rlf	(___fldiv@b+1),f
 17180  08E2  0DCD               	rlf	(___fldiv@b+2),f
 17181  08E3  0DCE               	rlf	(___fldiv@b+3),f
 17182  08E4  0DCF               	decfsz	wreg,f
 17183  08E5  0B89               	goto	u4725
 17184  08E6  28E1               	line	103
 17185                           	
 17186                           l3518:	
 17187  08E7                     	btfss	(___fldiv@grs+3),(31)&7
 17188  08E7  1FDF               	goto	u4731
 17189  08E8  28EA               	goto	u4730
 17190  08E9  28EB               u4731:
 17191  08EA                     	goto	l3522
 17192  08EA  28ED               u4730:
 17193  08EB                     	line	104
 17194                           	
 17195                           l3520:	
 17196  08EB                     	bsf	(___fldiv@b)+(0/8),(0)&7
 17197  08EB  144C               	goto	l3522
 17198  08EC  28ED               	line	105
 17199                           	
 17200                           l882:	
 17201  08ED                     	line	106
 17202                           	
 17203                           l3522:	
 17204  08ED                     	movlw	01h
 17205  08ED  3001               u4745:
 17206  08EE                     	lslf	(___fldiv@grs),f
 17207  08EE  35DC               	rlf	(___fldiv@grs+1),f
 17208  08EF  0DDD               	rlf	(___fldiv@grs+2),f
 17209  08F0  0DDE               	rlf	(___fldiv@grs+3),f
 17210  08F1  0DDF               	decfsz	wreg,f
 17211  08F2  0B89               	goto	u4745
 17212  08F3  28EE               	goto	l3524
 17213  08F4  28F5               	line	107
 17214                           	
 17215                           l881:	
 17216  08F5                     	line	112
 17217                           	
 17218                           l3524:	
 17219  08F5                     	movf	(___fldiv@a+3),w
 17220  08F5  084B               	subwf	(___fldiv@rem+3),w
 17221  08F6  0258               	skipz
 17222  08F7  1D03               	goto	u4755
 17223  08F8  2903               	movf	(___fldiv@a+2),w
 17224  08F9  084A               	subwf	(___fldiv@rem+2),w
 17225  08FA  0257               	skipz
 17226  08FB  1D03               	goto	u4755
 17227  08FC  2903               	movf	(___fldiv@a+1),w
 17228  08FD  0849               	subwf	(___fldiv@rem+1),w
 17229  08FE  0256               	skipz
 17230  08FF  1D03               	goto	u4755
 17231  0900  2903               	movf	(___fldiv@a),w
 17232  0901  0848               	subwf	(___fldiv@rem),w
 17233  0902  0255               u4755:
 17234  0903                     	skipc
 17235  0903  1C03               	goto	u4751
 17236  0904  2906               	goto	u4750
 17237  0905  2907               u4751:
 17238  0906                     	goto	l3530
 17239  0906  2911               u4750:
 17240  0907                     	line	115
 17241                           	
 17242                           l3526:	
 17243  0907                     	bsf	(___fldiv@grs)+(30/8),(30)&7
 17244  0907  175F               	line	116
 17245                           	
 17246                           l3528:	
 17247  0908                     	movf	(___fldiv@a),w
 17248  0908  0848               	subwf	(___fldiv@rem),f
 17249  0909  02D5               	movf	(___fldiv@a+1),w
 17250  090A  0849               	subwfb	(___fldiv@rem+1),f
 17251  090B  3BD6               	movf	(___fldiv@a+2),w
 17252  090C  084A               	subwfb	(___fldiv@rem+2),f
 17253  090D  3BD7               	movf	(___fldiv@a+3),w
 17254  090E  084B               	subwfb	(___fldiv@rem+3),f
 17255  090F  3BD8               	goto	l3530
 17256  0910  2911               	line	117
 17257                           	
 17258                           l883:	
 17259  0911                     	line	118
 17260                           	
 17261                           l3530:	
 17262  0911                     	movlw	low(01h)
 17263  0911  3001               	movwf	(??___fldiv+0)+0
 17264  0912  00D0               	movf	(??___fldiv+0)+0,w
 17265  0913  0850               	addwf	(___fldiv@aexp),f
 17266  0914  07E1               	goto	l3532
 17267  0915  2916               	line	119
 17268                           	
 17269                           l879:	
 17270  0916                     	line	97
 17271                           	
 17272                           l3532:	
 17273  0916                     	movlw	low(01Ah)
 17274  0916  301A               	subwf	(___fldiv@aexp),w
 17275  0917  0261               	skipc
 17276  0918  1C03               	goto	u4761
 17277  0919  291B               	goto	u4760
 17278  091A  291C               u4761:
 17279  091B                     	goto	l3514
 17280  091B  28D4               u4760:
 17281  091C                     	goto	l3534
 17282  091C  291D               	
 17283                           l884:	
 17284  091D                     	line	122
 17285                           	
 17286                           l3534:	
 17287  091D                     	movf	(___fldiv@rem+3),w
 17288  091D  0858               	iorwf	(___fldiv@rem+2),w
 17289  091E  0457               	iorwf	(___fldiv@rem+1),w
 17290  091F  0456               	iorwf	(___fldiv@rem),w
 17291  0920  0455               	skipnz
 17292  0921  1903               	goto	u4771
 17293  0922  2924               	goto	u4770
 17294  0923  2925               u4771:
 17295  0924                     	goto	l3548
 17296  0924  2941               u4770:
 17297  0925                     	line	123
 17298                           	
 17299                           l3536:	
 17300  0925                     	bsf	(___fldiv@grs)+(0/8),(0)&7
 17301  0925  145C               	goto	l3548
 17302  0926  2941               	line	124
 17303                           	
 17304                           l885:	
 17305  0927                     	line	127
 17306                           	goto	l3548
 17307  0927  2941               	
 17308                           l887:	
 17309  0928                     	line	128
 17310                           	
 17311                           l3538:	
 17312  0928                     	movlw	01h
 17313  0928  3001               u4785:
 17314  0929                     	lslf	(___fldiv@b),f
 17315  0929  35CC               	rlf	(___fldiv@b+1),f
 17316  092A  0DCD               	rlf	(___fldiv@b+2),f
 17317  092B  0DCE               	rlf	(___fldiv@b+3),f
 17318  092C  0DCF               	decfsz	wreg,f
 17319  092D  0B89               	goto	u4785
 17320  092E  2929               	line	129
 17321                           	
 17322                           l3540:	
 17323  092F                     	btfss	(___fldiv@grs+3),(31)&7
 17324  092F  1FDF               	goto	u4791
 17325  0930  2932               	goto	u4790
 17326  0931  2933               u4791:
 17327  0932                     	goto	l3544
 17328  0932  2935               u4790:
 17329  0933                     	line	130
 17330                           	
 17331                           l3542:	
 17332  0933                     	bsf	(___fldiv@b)+(0/8),(0)&7
 17333  0933  144C               	goto	l3544
 17334  0934  2935               	line	131
 17335                           	
 17336                           l888:	
 17337  0935                     	line	132
 17338                           	
 17339                           l3544:	
 17340  0935                     	movlw	01h
 17341  0935  3001               u4805:
 17342  0936                     	lslf	(___fldiv@grs),f
 17343  0936  35DC               	rlf	(___fldiv@grs+1),f
 17344  0937  0DDD               	rlf	(___fldiv@grs+2),f
 17345  0938  0DDE               	rlf	(___fldiv@grs+3),f
 17346  0939  0DDF               	decfsz	wreg,f
 17347  093A  0B89               	goto	u4805
 17348  093B  2936               	line	133
 17349                           	
 17350                           l3546:	
 17351  093C                     	movlw	0FFh
 17352  093C  30FF               	addwf	(___fldiv@new_exp),f
 17353  093D  07DA               	movlw	0FFh
 17354  093E  30FF               	addwfc	(___fldiv@new_exp+1),f
 17355  093F  3DDB               	goto	l3548
 17356  0940  2941               	line	134
 17357                           	
 17358                           l886:	
 17359  0941                     	line	127
 17360                           	
 17361                           l3548:	
 17362  0941                     	btfss	(___fldiv@b+2),(23)&7
 17363  0941  1FCE               	goto	u4811
 17364  0942  2944               	goto	u4810
 17365  0943  2945               u4811:
 17366  0944                     	goto	l3538
 17367  0944  2928               u4810:
 17368  0945                     	goto	l3550
 17369  0945  2946               	
 17370                           l889:	
 17371  0946                     	line	139
 17372                           	
 17373                           l3550:	
 17374  0946                     	clrf	(___fldiv@aexp)
 17375  0946  01E1               	line	140
 17376                           	
 17377                           l3552:	
 17378  0947                     	btfss	(___fldiv@grs+3),(31)&7
 17379  0947  1FDF               	goto	u4821
 17380  0948  294A               	goto	u4820
 17381  0949  294B               u4821:
 17382  094A                     	goto	l3560
 17383  094A  296B               u4820:
 17384  094B                     	line	141
 17385                           	
 17386                           l3554:	
 17387  094B                     	movlw	0FFh
 17388  094B  30FF               	andwf	(___fldiv@grs),w
 17389  094C  055C               	movwf	(??___fldiv+0)+0
 17390  094D  00D0               	movlw	0FFh
 17391  094E  30FF               	andwf	(___fldiv@grs+1),w
 17392  094F  055D               	movwf	((??___fldiv+0)+0+1)
 17393  0950  00D1               	movlw	0FFh
 17394  0951  30FF               	andwf	(___fldiv@grs+2),w
 17395  0952  055E               	movwf	((??___fldiv+0)+0+2)
 17396  0953  00D2               	movlw	07Fh
 17397  0954  307F               	andwf	(___fldiv@grs+3),w
 17398  0955  055F               	movwf	((??___fldiv+0)+0+3)
 17399  0956  00D3               	movf	3+(??___fldiv+0)+0,w
 17400  0957  0853               	iorwf	2+(??___fldiv+0)+0,w
 17401  0958  0452               	iorwf	1+(??___fldiv+0)+0,w
 17402  0959  0451               	iorwf	0+(??___fldiv+0)+0,w
 17403  095A  0450               	skipnz
 17404  095B  1903               	goto	u4831
 17405  095C  295E               	goto	u4830
 17406  095D  295F               u4831:
 17407  095E                     	goto	l891
 17408  095E  2962               u4830:
 17409  095F                     	line	142
 17410                           	
 17411                           l3556:	
 17412  095F                     	clrf	(___fldiv@aexp)
 17413  095F  01E1               	incf	(___fldiv@aexp),f
 17414  0960  0AE1               	line	143
 17415                           	goto	l3560
 17416  0961  296B               	line	144
 17417                           	
 17418                           l891:	
 17419  0962                     	line	145
 17420                           	btfss	(___fldiv@b),(0)&7
 17421  0962  1C4C               	goto	u4841
 17422  0963  2965               	goto	u4840
 17423  0964  2966               u4841:
 17424  0965                     	goto	l3560
 17425  0965  296B               u4840:
 17426  0966                     	line	146
 17427                           	
 17428                           l3558:	
 17429  0966                     	clrf	(___fldiv@aexp)
 17430  0966  01E1               	incf	(___fldiv@aexp),f
 17431  0967  0AE1               	goto	l3560
 17432  0968  296B               	line	147
 17433                           	
 17434                           l893:	
 17435  0969                     	goto	l3560
 17436  0969  296B               	line	148
 17437                           	
 17438                           l892:	
 17439  096A                     	goto	l3560
 17440  096A  296B               	line	149
 17441                           	
 17442                           l890:	
 17443  096B                     	line	150
 17444                           	
 17445                           l3560:	
 17446  096B                     	movf	((___fldiv@aexp)),w
 17447  096B  0861               	btfsc	status,2
 17448  096C  1903               	goto	u4851
 17449  096D  296F               	goto	u4850
 17450  096E  2970               u4851:
 17451  096F                     	goto	l3570
 17452  096F  299A               u4850:
 17453  0970                     	line	151
 17454                           	
 17455                           l3562:	
 17456  0970                     	movlw	01h
 17457  0970  3001               	addwf	(___fldiv@b),f
 17458  0971  07CC               	movlw	0
 17459  0972  3000               	addwfc	(___fldiv@b+1),f
 17460  0973  3DCD               	movlw	0
 17461  0974  3000               	addwfc	(___fldiv@b+2),f
 17462  0975  3DCE               	movlw	0
 17463  0976  3000               	addwfc	(___fldiv@b+3),f
 17464  0977  3DCF               	line	152
 17465                           	
 17466                           l3564:	
 17467  0978                     	btfss	(___fldiv@b+3),(24)&7
 17468  0978  1C4F               	goto	u4861
 17469  0979  297B               	goto	u4860
 17470  097A  297C               u4861:
 17471  097B                     	goto	l3570
 17472  097B  299A               u4860:
 17473  097C                     	line	153
 17474                           	
 17475                           l3566:	
 17476  097C                     	movf	(___fldiv@b),w
 17477  097C  084C               	movwf	(??___fldiv+0)+0
 17478  097D  00D0               	movf	(___fldiv@b+1),w
 17479  097E  084D               	movwf	((??___fldiv+0)+0+1)
 17480  097F  00D1               	movf	(___fldiv@b+2),w
 17481  0980  084E               	movwf	((??___fldiv+0)+0+2)
 17482  0981  00D2               	movf	(___fldiv@b+3),w
 17483  0982  084F               	movwf	((??___fldiv+0)+0+3)
 17484  0983  00D3               	movlw	01h
 17485  0984  3001               	movwf	(??___fldiv+4)+0
 17486  0985  00D4               u4875:
 17487  0986                     	asrf	(??___fldiv+0)+3,f
 17488  0986  37D3               	rrf	(??___fldiv+0)+2,f
 17489  0987  0CD2               	rrf	(??___fldiv+0)+1,f
 17490  0988  0CD1               	rrf	(??___fldiv+0)+0,f
 17491  0989  0CD0               u4870:
 17492  098A                     	decfsz	(??___fldiv+4)+0,f
 17493  098A  0BD4               	goto	u4875
 17494  098B  2986               	movf	3+(??___fldiv+0)+0,w
 17495  098C  0853               	movwf	(___fldiv@b+3)
 17496  098D  00CF               	movf	2+(??___fldiv+0)+0,w
 17497  098E  0852               	movwf	(___fldiv@b+2)
 17498  098F  00CE               	movf	1+(??___fldiv+0)+0,w
 17499  0990  0851               	movwf	(___fldiv@b+1)
 17500  0991  00CD               	movf	0+(??___fldiv+0)+0,w
 17501  0992  0850               	movwf	(___fldiv@b)
 17502  0993  00CC               
 17503                           	line	154
 17504                           	
 17505                           l3568:	
 17506  0994                     	movlw	01h
 17507  0994  3001               	addwf	(___fldiv@new_exp),f
 17508  0995  07DA               	movlw	0
 17509  0996  3000               	addwfc	(___fldiv@new_exp+1),f
 17510  0997  3DDB               	goto	l3570
 17511  0998  299A               	line	155
 17512                           	
 17513                           l895:	
 17514  0999                     	goto	l3570
 17515  0999  299A               	line	156
 17516                           	
 17517                           l894:	
 17518  099A                     	line	159
 17519                           	
 17520                           l3570:	
 17521  099A                     	movf	(___fldiv@new_exp+1),w
 17522  099A  085B               	xorlw	80h
 17523  099B  3A80               	movwf	(??___fldiv+0)+0
 17524  099C  00D0               	movlw	(0)^80h
 17525  099D  3080               	subwf	(??___fldiv+0)+0,w
 17526  099E  0250               	skipz
 17527  099F  1D03               	goto	u4885
 17528  09A0  29A3               	movlw	0FFh
 17529  09A1  30FF               	subwf	(___fldiv@new_exp),w
 17530  09A2  025A               u4885:
 17531  09A3                     
 17532                           	skipc
 17533  09A3  1C03               	goto	u4881
 17534  09A4  29A6               	goto	u4880
 17535  09A5  29A7               u4881:
 17536  09A6                     	goto	l896
 17537  09A6  29B4               u4880:
 17538  09A7                     	line	160
 17539                           	
 17540                           l3572:	
 17541  09A7                     	movlw	0FFh
 17542  09A7  30FF               	movlb 0	; select bank0
 17543  09A8  0140               	movwf	(___fldiv@new_exp)
 17544  09A9  00DA               	movlw	0
 17545  09AA  3000               	movwf	((___fldiv@new_exp))+1
 17546  09AB  00DB               	line	161
 17547                           	movlw	high highword(0)
 17548  09AC  3000               	movwf	(___fldiv@b+3)
 17549  09AD  00CF               	movlw	low highword(0)
 17550  09AE  3000               	movwf	(___fldiv@b+2)
 17551  09AF  00CE               	movlw	high(0)
 17552  09B0  3000               	movwf	(___fldiv@b+1)
 17553  09B1  00CD               	movlw	low(0)
 17554  09B2  3000               	movwf	(___fldiv@b)
 17555  09B3  00CC               
 17556                           	line	162
 17557                           	
 17558                           l896:	
 17559  09B4                     	line	165
 17560                           	movlb 0	; select bank0
 17561  09B4  0140               	movf	(___fldiv@new_exp+1),w
 17562  09B5  085B               	xorlw	80h
 17563  09B6  3A80               	movwf	(??___fldiv+0)+0
 17564  09B7  00D0               	movlw	(0)^80h
 17565  09B8  3080               	subwf	(??___fldiv+0)+0,w
 17566  09B9  0250               	skipz
 17567  09BA  1D03               	goto	u4895
 17568  09BB  29BE               	movlw	01h
 17569  09BC  3001               	subwf	(___fldiv@new_exp),w
 17570  09BD  025A               u4895:
 17571  09BE                     
 17572                           	skipnc
 17573  09BE  1803               	goto	u4891
 17574  09BF  29C1               	goto	u4890
 17575  09C0  29C2               u4891:
 17576  09C1                     	goto	l897
 17577  09C1  29CE               u4890:
 17578  09C2                     	line	166
 17579                           	
 17580                           l3574:	
 17581  09C2                     	movlb 0	; select bank0
 17582  09C2  0140               	clrf	(___fldiv@new_exp)
 17583  09C3  01DA               	clrf	(___fldiv@new_exp+1)
 17584  09C4  01DB               	line	167
 17585                           	
 17586                           l3576:	
 17587  09C5                     	movlw	high highword(0)
 17588  09C5  3000               	movwf	(___fldiv@b+3)
 17589  09C6  00CF               	movlw	low highword(0)
 17590  09C7  3000               	movwf	(___fldiv@b+2)
 17591  09C8  00CE               	movlw	high(0)
 17592  09C9  3000               	movwf	(___fldiv@b+1)
 17593  09CA  00CD               	movlw	low(0)
 17594  09CB  3000               	movwf	(___fldiv@b)
 17595  09CC  00CC               
 17596                           	line	169
 17597                           	
 17598                           l3578:	
 17599  09CD                     	clrf	(___fldiv@sign)
 17600  09CD  01D9               	line	170
 17601                           	
 17602                           l897:	
 17603  09CE                     	line	173
 17604                           	movlb 0	; select bank0
 17605  09CE  0140               	movf	(___fldiv@new_exp),w
 17606  09CF  085A               	movwf	(??___fldiv+0)+0
 17607  09D0  00D0               	movf	(??___fldiv+0)+0,w
 17608  09D1  0850               	movwf	(___fldiv@bexp)
 17609  09D2  00E0               	line	175
 17610                           	
 17611                           l3580:	
 17612  09D3                     	btfss	(___fldiv@bexp),(0)&7
 17613  09D3  1C60               	goto	u4901
 17614  09D4  29D6               	goto	u4900
 17615  09D5  29D7               u4901:
 17616  09D6                     	goto	l3584
 17617  09D6  29D9               u4900:
 17618  09D7                     	line	176
 17619                           	
 17620                           l3582:	
 17621  09D7                     	bsf	0+(___fldiv@b)+02h+(7/8),(7)&7
 17622  09D7  17CE               	line	177
 17623                           	goto	l899
 17624  09D8  29DD               	line	179
 17625                           	
 17626                           l898:	
 17627  09D9                     	line	180
 17628                           	
 17629                           l3584:	
 17630  09D9                     	movlw	low(07Fh)
 17631  09D9  307F               	movwf	(??___fldiv+0)+0
 17632  09DA  00D0               	movf	(??___fldiv+0)+0,w
 17633  09DB  0850               	andwf	0+(___fldiv@b)+02h,f
 17634  09DC  05CE               	line	181
 17635                           	
 17636                           l899:	
 17637  09DD                     	line	182
 17638                           	lsrf	(___fldiv@bexp),w
 17639  09DD  3660               	movwf	(??___fldiv+0)+0
 17640  09DE  00D0               	movf	(??___fldiv+0)+0,w
 17641  09DF  0850               	movwf	0+(___fldiv@b)+03h
 17642  09E0  00CF               	line	183
 17643                           	movf	(___fldiv@sign),w
 17644  09E1  0859               	movwf	(??___fldiv+0)+0
 17645  09E2  00D0               	movf	(??___fldiv+0)+0,w
 17646  09E3  0850               	iorwf	0+(___fldiv@b)+03h,f
 17647  09E4  04CF               	line	184
 17648                           	
 17649                           l3586:	
 17650  09E5                     	movf	(___fldiv@b+3),w
 17651  09E5  084F               	movwf	(?___fldiv+3)
 17652  09E6  00CB               	movf	(___fldiv@b+2),w
 17653  09E7  084E               	movwf	(?___fldiv+2)
 17654  09E8  00CA               	movf	(___fldiv@b+1),w
 17655  09E9  084D               	movwf	(?___fldiv+1)
 17656  09EA  00C9               	movf	(___fldiv@b),w
 17657  09EB  084C               	movwf	(?___fldiv)
 17658  09EC  00C8               
 17659                           	goto	l877
 17660  09ED  29EE               	
 17661                           l3588:	
 17662  09EE                     	line	185
 17663                           	
 17664                           l877:	
 17665  09EE                     	return
 17666  09EE  0008               	opt stack 0
 17667                           GLOBAL	__end_of___fldiv
 17668                           	__end_of___fldiv:
 17669  09EF                     	signat	___fldiv,8316
 17670                           	global	_initialize
 17671                           
 17672 ;; *************** function _initialize *****************
 17673 ;; Defined at:
 17674 ;;		line 237 in file "main.c"
 17675 ;; Parameters:    Size  Location     Type
 17676 ;;		None
 17677 ;; Auto vars:     Size  Location     Type
 17678 ;;		None
 17679 ;; Return value:  Size  Location     Type
 17680 ;;                  1    wreg      void 
 17681 ;; Registers used:
 17682 ;;		wreg, status,2, status,0
 17683 ;; Tracked objects:
 17684 ;;		On entry : 0/0
 17685 ;;		On exit  : 0/0
 17686 ;;		Unchanged: 0/0
 17687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17692 ;;Total ram usage:        0 bytes
 17693 ;; Hardware stack levels used:    1
 17694 ;; Hardware stack levels required when called:    3
 17695 ;; This function calls:
 17696 ;;		Nothing
 17697 ;; This function is called by:
 17698 ;;		_main
 17699 ;; This function uses a non-reentrant model
 17700 ;;
 17701                           psect	text42,local,class=CODE,delta=2,merge=1,group=0
 17702                           	file	"main.c"
 17703                           	line	237
 17704                           global __ptext42
 17705                           __ptext42:	;psect for function _initialize
 17706  1A60                     psect	text42
 17707                           	file	"main.c"
 17708                           	line	237
 17709                           	global	__size_of_initialize
 17710                           	__size_of_initialize	equ	__end_of_initialize-_initialize
 17711  004B                     	
 17712                           _initialize:	
 17713  1A60                     ;incstack = 0
 17714                           	opt	stack 12
 17715                           ; Regs used in _initialize: [wreg+status,2+status,0]
 17716                           	line	239
 17717                           	
 17718                           l4424:	
 17719  1A60                     ;main.c: 239:  OSCFRQ = 0b00000010;
 17720                           	movlw	low(02h)
 17721  1A60  3002               	movlb 17	; select bank17
 17722  1A61  0151               	movwf	(2195)^0880h	;volatile
 17723  1A62  0093               	line	240
 17724                           ;main.c: 240:  OSCCON1 = 0b01100000;
 17725                           	movlw	low(060h)
 17726  1A63  3060               	movwf	(2189)^0880h	;volatile
 17727  1A64  008D               	line	241
 17728                           ;main.c: 241:  while (!OSCCON3bits.ORDY);
 17729                           	goto	l221
 17730  1A65  2A66               	
 17731                           l222:	
 17732  1A66                     	
 17733                           l221:	
 17734  1A66                     	btfss	(2191)^0880h,4	;volatile
 17735  1A66  1E0F               	goto	u6331
 17736  1A67  2A69               	goto	u6330
 17737  1A68  2A6A               u6331:
 17738  1A69                     	goto	l221
 17739  1A69  2A66               u6330:
 17740  1A6A                     	goto	l4426
 17741  1A6A  2A6B               	
 17742                           l223:	
 17743  1A6B                     	line	244
 17744                           	
 17745                           l4426:	
 17746  1A6B                     ;main.c: 244:  RX1DTPPSbits.RX1DTPPS = 0x17;
 17747                           	movlb 61	; select bank61
 17748  1A6B  017D               	movf	(7883)^01E80h,w	;volatile
 17749  1A6C  084B               	andlw	not (((1<<6)-1)<<0)
 17750  1A6D  39C0               	iorlw	(017h & ((1<<6)-1))<<0
 17751  1A6E  3817               	movwf	(7883)^01E80h	;volatile
 17752  1A6F  00CB               	line	245
 17753                           	
 17754                           l4428:	
 17755  1A70                     ;main.c: 245:  RC6PPS = 0x0F;
 17756                           	movlw	low(0Fh)
 17757  1A70  300F               	movlb 62	; select bank62
 17758  1A71  017E               	movwf	(7974)^01F00h	;volatile
 17759  1A72  00A6               	line	248
 17760                           	
 17761                           l4430:	
 17762  1A73                     ;main.c: 248:  ANSELA = 0b01000000;
 17763                           	movlw	low(040h)
 17764  1A73  3040               	movwf	(7992)^01F00h	;volatile
 17765  1A74  00B8               	line	249
 17766                           	
 17767                           l4432:	
 17768  1A75                     ;main.c: 249:  ANSELB = 0b00000000;
 17769                           	clrf	(8003)^01F00h	;volatile
 17770  1A75  01C3               	line	250
 17771                           	
 17772                           l4434:	
 17773  1A76                     ;main.c: 250:  ANSELC = 0b00000011;
 17774                           	movlw	low(03h)
 17775  1A76  3003               	movwf	(8014)^01F00h	;volatile
 17776  1A77  00CE               	line	253
 17777                           	
 17778                           l4436:	
 17779  1A78                     ;main.c: 253:  TRISA = 0b11110000;
 17780                           	movlw	low(0F0h)
 17781  1A78  30F0               	movlb 0	; select bank0
 17782  1A79  0140               	movwf	(18)	;volatile
 17783  1A7A  0092               	line	254
 17784                           	
 17785                           l4438:	
 17786  1A7B                     ;main.c: 254:  TRISB = 0b00000000;
 17787                           	clrf	(19)	;volatile
 17788  1A7B  0193               	line	255
 17789                           	
 17790                           l4440:	
 17791  1A7C                     ;main.c: 255:  TRISC = 0b10000111;
 17792                           	movlw	low(087h)
 17793  1A7C  3087               	movwf	(20)	;volatile
 17794  1A7D  0094               	line	258
 17795                           	
 17796                           l4442:	
 17797  1A7E                     ;main.c: 258:  ADCON1 = 0b11100000;
 17798                           	movlw	low(0E0h)
 17799  1A7E  30E0               	movlb 1	; select bank1
 17800  1A7F  0141               	movwf	(158)^080h	;volatile
 17801  1A80  009E               	line	261
 17802                           	
 17803                           l4444:	
 17804  1A81                     ;main.c: 261:  T0CON0 = 0b10000000;
 17805                           	movlw	low(080h)
 17806  1A81  3080               	movlb 11	; select bank11
 17807  1A82  014B               	movwf	(1438)^0580h	;volatile
 17808  1A83  009E               	line	262
 17809                           	
 17810                           l4446:	
 17811  1A84                     ;main.c: 262:  T0CON1 = 0b01000111;
 17812                           	movlw	low(047h)
 17813  1A84  3047               	movwf	(1439)^0580h	;volatile
 17814  1A85  009F               	line	263
 17815                           	
 17816                           l4448:	
 17817  1A86                     ;main.c: 263:  TMR0 = 178;
 17818                           	movlw	low(0B2h)
 17819  1A86  30B2               	movwf	(1436)^0580h	;volatile
 17820  1A87  009C               	line	266
 17821                           	
 17822                           l4450:	
 17823  1A88                     ;main.c: 266:  T1CON = 0b00110011;
 17824                           	movlw	low(033h)
 17825  1A88  3033               	movlb 4	; select bank4
 17826  1A89  0144               	movwf	(526)^0200h	;volatile
 17827  1A8A  008E               	line	267
 17828                           	
 17829                           l4452:	
 17830  1A8B                     ;main.c: 267:  T1CLK = 0b00000001;
 17831                           	movlw	low(01h)
 17832  1A8B  3001               	movwf	(529)^0200h	;volatile
 17833  1A8C  0091               	line	268
 17834                           	
 17835                           l4454:	
 17836  1A8D                     ;main.c: 268:  TMR1 = 53035;
 17837                           	movlw	0CFh
 17838  1A8D  30CF               	movwf	(524+1)^0200h	;volatile
 17839  1A8E  008D               	movlw	02Bh
 17840  1A8F  302B               	movwf	(524)^0200h	;volatile
 17841  1A90  008C               	line	271
 17842                           	
 17843                           l4456:	
 17844  1A91                     ;main.c: 271:  PIE0 = 0b00110000;
 17845                           	movlw	low(030h)
 17846  1A91  3030               	movlb 14	; select bank14
 17847  1A92  014E               	movwf	(1814)^0700h	;volatile
 17848  1A93  0096               	line	272
 17849                           	
 17850                           l4458:	
 17851  1A94                     ;main.c: 272:  PIE3 = 0b00100000;
 17852                           	movlw	low(020h)
 17853  1A94  3020               	movwf	(1817)^0700h	;volatile
 17854  1A95  0099               	line	273
 17855                           	
 17856                           l4460:	
 17857  1A96                     ;main.c: 273:  PIE4 = 0b00000001;
 17858                           	movlw	low(01h)
 17859  1A96  3001               	movwf	(1818)^0700h	;volatile
 17860  1A97  009A               	line	274
 17861                           	
 17862                           l4462:	
 17863  1A98                     ;main.c: 274:  INTCON = 0b11000000;
 17864                           	movlw	low(0C0h)
 17865  1A98  30C0               	movwf	(11)	;volatile
 17866  1A99  008B               	line	277
 17867                           	
 17868                           l4464:	
 17869  1A9A                     ;main.c: 277:  IOCAP = 0b10110000;
 17870                           	movlw	low(0B0h)
 17871  1A9A  30B0               	movlb 62	; select bank62
 17872  1A9B  017E               	movwf	(7997)^01F00h	;volatile
 17873  1A9C  00BD               	line	278
 17874                           	
 17875                           l4466:	
 17876  1A9D                     ;main.c: 278:  IOCAN = 0b10110000;
 17877                           	movlw	low(0B0h)
 17878  1A9D  30B0               	movwf	(7998)^01F00h	;volatile
 17879  1A9E  00BE               	line	279
 17880                           	
 17881                           l4468:	
 17882  1A9F                     ;main.c: 279:  IOCCN = 0b00000100;
 17883                           	movlw	low(04h)
 17884  1A9F  3004               	movwf	(8020)^01F00h	;volatile
 17885  1AA0  00D4               	line	283
 17886                           	
 17887                           l4470:	
 17888  1AA1                     ;main.c: 283:  BAUD1CON = 0b00001000;
 17889                           	movlw	low(08h)
 17890  1AA1  3008               	movlb 2	; select bank2
 17891  1AA2  0142               	movwf	(287)^0100h	;volatile
 17892  1AA3  009F               	line	284
 17893                           	
 17894                           l4472:	
 17895  1AA4                     ;main.c: 284:  SPBRGL = 25;
 17896                           	movlw	low(019h)
 17897  1AA4  3019               	movwf	(283)^0100h	;volatile
 17898  1AA5  009B               	line	285
 17899                           	
 17900                           l4474:	
 17901  1AA6                     ;main.c: 285:  RC1STA = 0b10010000;
 17902                           	movlw	low(090h)
 17903  1AA6  3090               	movwf	(285)^0100h	;volatile
 17904  1AA7  009D               	line	286
 17905                           	
 17906                           l4476:	
 17907  1AA8                     ;main.c: 286:  TX1STA = 0b00100000;
 17908                           	movlw	low(020h)
 17909  1AA8  3020               	movwf	(286)^0100h	;volatile
 17910  1AA9  009E               	line	287
 17911                           	
 17912                           l224:	
 17913  1AAA                     	return
 17914  1AAA  0008               	opt stack 0
 17915                           GLOBAL	__end_of_initialize
 17916                           	__end_of_initialize:
 17917  1AAB                     	signat	_initialize,89
 17918                           	global	_handleSensorData
 17919                           
 17920 ;; *************** function _handleSensorData *****************
 17921 ;; Defined at:
 17922 ;;		line 148 in file "main.c"
 17923 ;; Parameters:    Size  Location     Type
 17924 ;;		None
 17925 ;; Auto vars:     Size  Location     Type
 17926 ;;		None
 17927 ;; Return value:  Size  Location     Type
 17928 ;;                  1    wreg      void 
 17929 ;; Registers used:
 17930 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17931 ;; Tracked objects:
 17932 ;;		On entry : 0/0
 17933 ;;		On exit  : 0/0
 17934 ;;		Unchanged: 0/0
 17935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17938 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17939 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17940 ;;Total ram usage:        4 bytes
 17941 ;; Hardware stack levels used:    1
 17942 ;; Hardware stack levels required when called:    4
 17943 ;; This function calls:
 17944 ;;		___xxtofl
 17945 ;; This function is called by:
 17946 ;;		_main
 17947 ;; This function uses a non-reentrant model
 17948 ;;
 17949                           psect	text43,local,class=CODE,delta=2,merge=1,group=0
 17950                           	line	148
 17951                           global __ptext43
 17952                           __ptext43:	;psect for function _handleSensorData
 17953  1AFC                     psect	text43
 17954                           	file	"main.c"
 17955                           	line	148
 17956                           	global	__size_of_handleSensorData
 17957                           	__size_of_handleSensorData	equ	__end_of_handleSensorData-_handleSensorData
 17958  005A                     	
 17959                           _handleSensorData:	
 17960  1AFC                     ;incstack = 0
 17961                           	opt	stack 11
 17962                           ; Regs used in _handleSensorData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17963                           	line	150
 17964                           	
 17965                           l4532:	
 17966  1AFC                     ;main.c: 150:  if ((g_dataPacket.header == 0xAA) && (g_dataPacket.status == 1)) {
 17967                           		movlw	170
 17968  1AFC  30AA               	movlb 4	; select bank4
 17969  1AFD  0144               	xorwf	((_g_dataPacket)^0200h),w	;volatile
 17970  1AFE  0640               	btfss	status,2
 17971  1AFF  1D03               	goto	u6361
 17972  1B00  2B02               	goto	u6360
 17973  1B01  2B03               u6361:
 17974  1B02                     	goto	l189
 17975  1B02  2B55               u6360:
 17976  1B03                     	
 17977                           l4534:	
 17978  1B03                     		decf	(0+(_g_dataPacket)^0200h+02h),w	;volatile
 17979  1B03  0342               	btfss	status,2
 17980  1B04  1D03               	goto	u6371
 17981  1B05  2B07               	goto	u6370
 17982  1B06  2B08               u6371:
 17983  1B07                     	goto	l189
 17984  1B07  2B55               u6370:
 17985  1B08                     	line	151
 17986                           	
 17987                           l4536:	
 17988  1B08                     ;main.c: 151:   g_tempC = g_dataPacket.tempC;
 17989                           	movlw	low(03h)
 17990  1B08  3003               	addlw	low(_g_dataPacket|((0x2)<<8))&0ffh
 17991  1B09  3E40               	movwf	fsr1l
 17992  1B0A  0086               	movlw 2	; select bank4/5
 17993  1B0B  3002               	movwf fsr1h	
 17994  1B0C  0087               	
 17995                           	moviw	[0]fsr1
 17996  1B0D  3F40               	movlb 3	; select bank3
 17997  1B0E  0143               	movwf	(_g_tempC)^0180h
 17998  1B0F  00E6               	moviw	[1]fsr1
 17999  1B10  3F41               	movwf	(_g_tempC+1)^0180h
 18000  1B11  00E7               	moviw	[2]fsr1
 18001  1B12  3F42               	movwf	(_g_tempC+2)^0180h
 18002  1B13  00E8               	moviw	[3]fsr1
 18003  1B14  3F43               	movwf	(_g_tempC+3)^0180h
 18004  1B15  00E9               	line	152
 18005                           ;main.c: 152:   g_relHum = g_dataPacket.relHum;
 18006                           	movlw	low(07h)
 18007  1B16  3007               	addlw	low(_g_dataPacket|((0x2)<<8))&0ffh
 18008  1B17  3E40               	movwf	fsr1l
 18009  1B18  0086               	movlw 2	; select bank4/5
 18010  1B19  3002               	movwf fsr1h	
 18011  1B1A  0087               	
 18012                           	moviw	[0]fsr1
 18013  1B1B  3F40               	movwf	(_g_relHum)^0180h
 18014  1B1C  00E2               	moviw	[1]fsr1
 18015  1B1D  3F41               	movwf	(_g_relHum+1)^0180h
 18016  1B1E  00E3               	moviw	[2]fsr1
 18017  1B1F  3F42               	movwf	(_g_relHum+2)^0180h
 18018  1B20  00E4               	moviw	[3]fsr1
 18019  1B21  3F43               	movwf	(_g_relHum+3)^0180h
 18020  1B22  00E5               	line	153
 18021                           ;main.c: 153:   g_dewPointC = g_dataPacket.dewPointC;
 18022                           	movlw	low(0Bh)
 18023  1B23  300B               	addlw	low(_g_dataPacket|((0x2)<<8))&0ffh
 18024  1B24  3E40               	movwf	fsr1l
 18025  1B25  0086               	movlw 2	; select bank4/5
 18026  1B26  3002               	movwf fsr1h	
 18027  1B27  0087               	
 18028                           	moviw	[0]fsr1
 18029  1B28  3F40               	movwf	(_g_dewPointC)^0180h
 18030  1B29  00DE               	moviw	[1]fsr1
 18031  1B2A  3F41               	movwf	(_g_dewPointC+1)^0180h
 18032  1B2B  00DF               	moviw	[2]fsr1
 18033  1B2C  3F42               	movwf	(_g_dewPointC+2)^0180h
 18034  1B2D  00E0               	moviw	[3]fsr1
 18035  1B2E  3F43               	movwf	(_g_dewPointC+3)^0180h
 18036  1B2F  00E1               	line	154
 18037                           	
 18038                           l4538:	
 18039  1B30                     ;main.c: 154:   g_sensorVersion = g_dataPacket.version;
 18040                           	movlb 4	; select bank4
 18041  1B30  0144               	movf	0+(_g_dataPacket)^0200h+01h,w	;volatile
 18042  1B31  0841               	movlb 0	; select bank0
 18043  1B32  0140               	movwf	(??_handleSensorData+0)+0
 18044  1B33  00AE               	clrf	(??_handleSensorData+0)+0+1
 18045  1B34  01AF               	clrf	(??_handleSensorData+0)+0+2
 18046  1B35  01B0               	clrf	(??_handleSensorData+0)+0+3
 18047  1B36  01B1               	movf	3+(??_handleSensorData+0)+0,w
 18048  1B37  0831               	movwf	(___xxtofl@val+3)
 18049  1B38  00A3               	movf	2+(??_handleSensorData+0)+0,w
 18050  1B39  0830               	movwf	(___xxtofl@val+2)
 18051  1B3A  00A2               	movf	1+(??_handleSensorData+0)+0,w
 18052  1B3B  082F               	movwf	(___xxtofl@val+1)
 18053  1B3C  00A1               	movf	0+(??_handleSensorData+0)+0,w
 18054  1B3D  082E               	movwf	(___xxtofl@val)
 18055  1B3E  00A0               
 18056                           	movlw	low(0)
 18057  1B3F  3000               	fcall	___xxtofl
 18058  1B40  3190  20D5  319A   	movlb 0	; select bank0
 18059  1B43  0140               	movf	(3+(?___xxtofl)),w
 18060  1B44  0823               	movlb 4	; select bank4
 18061  1B45  0144               	movwf	(_g_sensorVersion+3)^0200h
 18062  1B46  00AB               	movlb 0	; select bank0
 18063  1B47  0140               	movf	(2+(?___xxtofl)),w
 18064  1B48  0822               	movlb 4	; select bank4
 18065  1B49  0144               	movwf	(_g_sensorVersion+2)^0200h
 18066  1B4A  00AA               	movlb 0	; select bank0
 18067  1B4B  0140               	movf	(1+(?___xxtofl)),w
 18068  1B4C  0821               	movlb 4	; select bank4
 18069  1B4D  0144               	movwf	(_g_sensorVersion+1)^0200h
 18070  1B4E  00A9               	movlb 0	; select bank0
 18071  1B4F  0140               	movf	(0+(?___xxtofl)),w
 18072  1B50  0820               	movlb 4	; select bank4
 18073  1B51  0144               	movwf	(_g_sensorVersion)^0200h
 18074  1B52  00A8               
 18075                           	line	155
 18076                           ;main.c: 155:  } else {
 18077                           	goto	l189
 18078  1B53  2B55               	
 18079                           l187:	
 18080  1B54                     	goto	l189
 18081  1B54  2B55               	line	157
 18082                           ;main.c: 157:  }
 18083                           	
 18084                           l188:	
 18085  1B55                     	line	158
 18086                           	
 18087                           l189:	
 18088  1B55                     	return
 18089  1B55  0008               	opt stack 0
 18090                           GLOBAL	__end_of_handleSensorData
 18091                           	__end_of_handleSensorData:
 18092  1B56                     	signat	_handleSensorData,89
 18093                           	global	___xxtofl
 18094                           
 18095 ;; *************** function ___xxtofl *****************
 18096 ;; Defined at:
 18097 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
 18098 ;; Parameters:    Size  Location     Type
 18099 ;;  sign            1    wreg     unsigned char 
 18100 ;;  val             4    0[BANK0 ] long 
 18101 ;; Auto vars:     Size  Location     Type
 18102 ;;  sign            1    8[BANK0 ] unsigned char 
 18103 ;;  arg             4   10[BANK0 ] unsigned long 
 18104 ;;  exp             1    9[BANK0 ] unsigned char 
 18105 ;; Return value:  Size  Location     Type
 18106 ;;                  4    0[BANK0 ] unsigned char 
 18107 ;; Registers used:
 18108 ;;		wreg, status,2, status,0
 18109 ;; Tracked objects:
 18110 ;;		On entry : 0/0
 18111 ;;		On exit  : 0/0
 18112 ;;		Unchanged: 0/0
 18113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18114 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18115 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18116 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18117 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18118 ;;Total ram usage:       14 bytes
 18119 ;; Hardware stack levels used:    1
 18120 ;; Hardware stack levels required when called:    3
 18121 ;; This function calls:
 18122 ;;		Nothing
 18123 ;; This function is called by:
 18124 ;;		_readAnalogValues
 18125 ;;		_handleSensorData
 18126 ;; This function uses a non-reentrant model
 18127 ;;
 18128                           psect	text44,local,class=CODE,delta=2,merge=1,group=1
 18129                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
 18130                           	line	10
 18131                           global __ptext44
 18132                           __ptext44:	;psect for function ___xxtofl
 18133  10D5                     psect	text44
 18134                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
 18135                           	line	10
 18136                           	global	__size_of___xxtofl
 18137                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
 18138  00B5                     	
 18139                           ___xxtofl:	
 18140  10D5                     ;incstack = 0
 18141                           	opt	stack 11
 18142                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 18143                           ;___xxtofl@sign stored from wreg
 18144                           	movlb 0	; select bank0
 18145  10D5  0140               	movwf	(___xxtofl@sign)
 18146  10D6  00A8               	line	15
 18147                           	
 18148                           l4380:	
 18149  10D7                     	movf	((___xxtofl@sign)),w
 18150  10D7  0828               	btfsc	status,2
 18151  10D8  1903               	goto	u6191
 18152  10D9  28DB               	goto	u6190
 18153  10DA  28DC               u6191:
 18154  10DB                     	goto	l4386
 18155  10DB  28F0               u6190:
 18156  10DC                     	
 18157                           l4382:	
 18158  10DC                     	btfss	(___xxtofl@val+3),7
 18159  10DC  1FA3               	goto	u6201
 18160  10DD  28DF               	goto	u6200
 18161  10DE  28E0               u6201:
 18162  10DF                     	goto	l4386
 18163  10DF  28F0               u6200:
 18164  10E0                     	line	16
 18165                           	
 18166                           l4384:	
 18167  10E0                     	comf	(___xxtofl@val)+0,w
 18168  10E0  0920               	movwf	(___xxtofl@arg)
 18169  10E1  00AA               	comf	(___xxtofl@val)+1,w
 18170  10E2  0921               	movwf	(___xxtofl@arg+1)
 18171  10E3  00AB               	comf	(___xxtofl@val)+2,w
 18172  10E4  0922               	movwf	(___xxtofl@arg+2)
 18173  10E5  00AC               	comf	(___xxtofl@val)+3,w
 18174  10E6  0923               	movwf	(___xxtofl@arg+3)
 18175  10E7  00AD               	incf	(___xxtofl@arg),f
 18176  10E8  0AAA               	skipnz
 18177  10E9  1903               	incf	(___xxtofl@arg+1),f
 18178  10EA  0AAB               	skipnz
 18179  10EB  1903               	incf	(___xxtofl@arg+2),f
 18180  10EC  0AAC               	skipnz
 18181  10ED  1903               	incf	(___xxtofl@arg+3),f
 18182  10EE  0AAD               	line	17
 18183                           	goto	l934
 18184  10EF  28F8               	line	18
 18185                           	
 18186                           l933:	
 18187  10F0                     	line	19
 18188                           	
 18189                           l4386:	
 18190  10F0                     	movf	(___xxtofl@val+3),w
 18191  10F0  0823               	movwf	(___xxtofl@arg+3)
 18192  10F1  00AD               	movf	(___xxtofl@val+2),w
 18193  10F2  0822               	movwf	(___xxtofl@arg+2)
 18194  10F3  00AC               	movf	(___xxtofl@val+1),w
 18195  10F4  0821               	movwf	(___xxtofl@arg+1)
 18196  10F5  00AB               	movf	(___xxtofl@val),w
 18197  10F6  0820               	movwf	(___xxtofl@arg)
 18198  10F7  00AA               
 18199                           	line	20
 18200                           	
 18201                           l934:	
 18202  10F8                     	line	21
 18203                           	movf	(___xxtofl@val+3),w
 18204  10F8  0823               	iorwf	(___xxtofl@val+2),w
 18205  10F9  0422               	iorwf	(___xxtofl@val+1),w
 18206  10FA  0421               	iorwf	(___xxtofl@val),w
 18207  10FB  0420               	skipz
 18208  10FC  1D03               	goto	u6211
 18209  10FD  28FF               	goto	u6210
 18210  10FE  2900               u6211:
 18211  10FF                     	goto	l4392
 18212  10FF  290A               u6210:
 18213  1100                     	line	22
 18214                           	
 18215                           l4388:	
 18216  1100                     	movlw	0x0
 18217  1100  3000               	movwf	(?___xxtofl+3)
 18218  1101  00A3               	movlw	0x0
 18219  1102  3000               	movwf	(?___xxtofl+2)
 18220  1103  00A2               	movlw	0x0
 18221  1104  3000               	movwf	(?___xxtofl+1)
 18222  1105  00A1               	movlw	0x0
 18223  1106  3000               	movwf	(?___xxtofl)
 18224  1107  00A0               
 18225                           	goto	l936
 18226  1108  2989               	
 18227                           l4390:	
 18228  1109                     	goto	l936
 18229  1109  2989               	
 18230                           l935:	
 18231  110A                     	line	23
 18232                           	
 18233                           l4392:	
 18234  110A                     	movlw	low(096h)
 18235  110A  3096               	movwf	(??___xxtofl+0)+0
 18236  110B  00A4               	movf	(??___xxtofl+0)+0,w
 18237  110C  0824               	movwf	(___xxtofl@exp)
 18238  110D  00A9               	line	24
 18239                           	goto	l4396
 18240  110E  291B               	
 18241                           l938:	
 18242  110F                     	line	25
 18243                           	
 18244                           l4394:	
 18245  110F                     	movlw	low(01h)
 18246  110F  3001               	movwf	(??___xxtofl+0)+0
 18247  1110  00A4               	movf	(??___xxtofl+0)+0,w
 18248  1111  0824               	addwf	(___xxtofl@exp),f
 18249  1112  07A9               	line	26
 18250                           	movlw	01h
 18251  1113  3001               u6225:
 18252  1114                     	lsrf	(___xxtofl@arg+3),f
 18253  1114  36AD               	rrf	(___xxtofl@arg+2),f
 18254  1115  0CAC               	rrf	(___xxtofl@arg+1),f
 18255  1116  0CAB               	rrf	(___xxtofl@arg),f
 18256  1117  0CAA               	decfsz	wreg,f
 18257  1118  0B89               	goto	u6225
 18258  1119  2914               
 18259                           	goto	l4396
 18260  111A  291B               	line	27
 18261                           	
 18262                           l937:	
 18263  111B                     	line	24
 18264                           	
 18265                           l4396:	
 18266  111B                     	movlw	high highword(0FE000000h)
 18267  111B  30FE               	andwf	(___xxtofl@arg+3),w
 18268  111C  052D               	btfss	status,2
 18269  111D  1D03               	goto	u6231
 18270  111E  2920               	goto	u6230
 18271  111F  2921               u6231:
 18272  1120                     	goto	l4394
 18273  1120  290F               u6230:
 18274  1121                     	goto	l940
 18275  1121  2936               	
 18276                           l939:	
 18277  1122                     	line	28
 18278                           	goto	l940
 18279  1122  2936               	
 18280                           l941:	
 18281  1123                     	line	29
 18282                           	
 18283                           l4398:	
 18284  1123                     	movlw	low(01h)
 18285  1123  3001               	movwf	(??___xxtofl+0)+0
 18286  1124  00A4               	movf	(??___xxtofl+0)+0,w
 18287  1125  0824               	addwf	(___xxtofl@exp),f
 18288  1126  07A9               	line	30
 18289                           	
 18290                           l4400:	
 18291  1127                     	movlw	01h
 18292  1127  3001               	addwf	(___xxtofl@arg),f
 18293  1128  07AA               	movlw	0
 18294  1129  3000               	addwfc	(___xxtofl@arg+1),f
 18295  112A  3DAB               	movlw	0
 18296  112B  3000               	addwfc	(___xxtofl@arg+2),f
 18297  112C  3DAC               	movlw	0
 18298  112D  3000               	addwfc	(___xxtofl@arg+3),f
 18299  112E  3DAD               	line	31
 18300                           	
 18301                           l4402:	
 18302  112F                     	movlw	01h
 18303  112F  3001               u6245:
 18304  1130                     	lsrf	(___xxtofl@arg+3),f
 18305  1130  36AD               	rrf	(___xxtofl@arg+2),f
 18306  1131  0CAC               	rrf	(___xxtofl@arg+1),f
 18307  1132  0CAB               	rrf	(___xxtofl@arg),f
 18308  1133  0CAA               	decfsz	wreg,f
 18309  1134  0B89               	goto	u6245
 18310  1135  2930               
 18311                           	line	32
 18312                           	
 18313                           l940:	
 18314  1136                     	line	28
 18315                           	movlw	high highword(0FF000000h)
 18316  1136  30FF               	andwf	(___xxtofl@arg+3),w
 18317  1137  052D               	btfss	status,2
 18318  1138  1D03               	goto	u6251
 18319  1139  293B               	goto	u6250
 18320  113A  293C               u6251:
 18321  113B                     	goto	l4398
 18322  113B  2923               u6250:
 18323  113C                     	goto	l4406
 18324  113C  2948               	
 18325                           l942:	
 18326  113D                     	line	33
 18327                           	goto	l4406
 18328  113D  2948               	
 18329                           l944:	
 18330  113E                     	line	34
 18331                           	
 18332                           l4404:	
 18333  113E                     	movlw	01h
 18334  113E  3001               	subwf	(___xxtofl@exp),f
 18335  113F  02A9               	line	35
 18336                           	movlw	01h
 18337  1140  3001               u6265:
 18338  1141                     	lslf	(___xxtofl@arg),f
 18339  1141  35AA               	rlf	(___xxtofl@arg+1),f
 18340  1142  0DAB               	rlf	(___xxtofl@arg+2),f
 18341  1143  0DAC               	rlf	(___xxtofl@arg+3),f
 18342  1144  0DAD               	decfsz	wreg,f
 18343  1145  0B89               	goto	u6265
 18344  1146  2941               	goto	l4406
 18345  1147  2948               	line	36
 18346                           	
 18347                           l943:	
 18348  1148                     	line	33
 18349                           	
 18350                           l4406:	
 18351  1148                     	btfsc	(___xxtofl@arg+2),(23)&7
 18352  1148  1BAC               	goto	u6271
 18353  1149  294B               	goto	u6270
 18354  114A  294C               u6271:
 18355  114B                     	goto	l947
 18356  114B  2953               u6270:
 18357  114C                     	
 18358                           l4408:	
 18359  114C                     	movlw	low(02h)
 18360  114C  3002               	subwf	(___xxtofl@exp),w
 18361  114D  0229               	skipnc
 18362  114E  1803               	goto	u6281
 18363  114F  2951               	goto	u6280
 18364  1150  2952               u6281:
 18365  1151                     	goto	l4404
 18366  1151  293E               u6280:
 18367  1152                     	goto	l947
 18368  1152  2953               	
 18369                           l946:	
 18370  1153                     	
 18371                           l947:	
 18372  1153                     	line	37
 18373                           	btfsc	(___xxtofl@exp),(0)&7
 18374  1153  1829               	goto	u6291
 18375  1154  2956               	goto	u6290
 18376  1155  2957               u6291:
 18377  1156                     	goto	l948
 18378  1156  295F               u6290:
 18379  1157                     	line	38
 18380                           	
 18381                           l4410:	
 18382  1157                     	movlw	0FFh
 18383  1157  30FF               	andwf	(___xxtofl@arg),f
 18384  1158  05AA               	movlw	0FFh
 18385  1159  30FF               	andwf	(___xxtofl@arg+1),f
 18386  115A  05AB               	movlw	07Fh
 18387  115B  307F               	andwf	(___xxtofl@arg+2),f
 18388  115C  05AC               	movlw	0FFh
 18389  115D  30FF               	andwf	(___xxtofl@arg+3),f
 18390  115E  05AD               	
 18391                           l948:	
 18392  115F                     	line	39
 18393                           	clrc
 18394  115F  1003               	rrf	(___xxtofl@exp),f
 18395  1160  0CA9               
 18396                           	line	40
 18397                           	
 18398                           l4412:	
 18399  1161                     	movf	(___xxtofl@exp),w
 18400  1161  0829               	movwf	(??___xxtofl+0)+0
 18401  1162  00A4               	clrf	(??___xxtofl+0)+0+1
 18402  1163  01A5               	clrf	(??___xxtofl+0)+0+2
 18403  1164  01A6               	clrf	(??___xxtofl+0)+0+3
 18404  1165  01A7               	movlw	018h
 18405  1166  3018               u6305:
 18406  1167                     	lslf	(??___xxtofl+0)+0,f
 18407  1167  35A4               	rlf	(??___xxtofl+0)+1,f
 18408  1168  0DA5               	rlf	(??___xxtofl+0)+2,f
 18409  1169  0DA6               	rlf	(??___xxtofl+0)+3,f
 18410  116A  0DA7               u6300:
 18411  116B                     	decfsz	wreg,f
 18412  116B  0B89               	goto	u6305
 18413  116C  2967               	movf	0+(??___xxtofl+0)+0,w
 18414  116D  0824               	iorwf	(___xxtofl@arg),f
 18415  116E  04AA               	movf	1+(??___xxtofl+0)+0,w
 18416  116F  0825               	iorwf	(___xxtofl@arg+1),f
 18417  1170  04AB               	movf	2+(??___xxtofl+0)+0,w
 18418  1171  0826               	iorwf	(___xxtofl@arg+2),f
 18419  1172  04AC               	movf	3+(??___xxtofl+0)+0,w
 18420  1173  0827               	iorwf	(___xxtofl@arg+3),f
 18421  1174  04AD               	line	41
 18422                           	
 18423                           l4414:	
 18424  1175                     	movf	((___xxtofl@sign)),w
 18425  1175  0828               	btfsc	status,2
 18426  1176  1903               	goto	u6311
 18427  1177  2979               	goto	u6310
 18428  1178  297A               u6311:
 18429  1179                     	goto	l4420
 18430  1179  2980               u6310:
 18431  117A                     	
 18432                           l4416:	
 18433  117A                     	btfss	(___xxtofl@val+3),7
 18434  117A  1FA3               	goto	u6321
 18435  117B  297D               	goto	u6320
 18436  117C  297E               u6321:
 18437  117D                     	goto	l4420
 18438  117D  2980               u6320:
 18439  117E                     	line	42
 18440                           	
 18441                           l4418:	
 18442  117E                     	bsf	(___xxtofl@arg)+(31/8),(31)&7
 18443  117E  17AD               	goto	l4420
 18444  117F  2980               	
 18445                           l949:	
 18446  1180                     	line	43
 18447                           	
 18448                           l4420:	
 18449  1180                     	movf	(___xxtofl@arg+3),w
 18450  1180  082D               	movwf	(?___xxtofl+3)
 18451  1181  00A3               	movf	(___xxtofl@arg+2),w
 18452  1182  082C               	movwf	(?___xxtofl+2)
 18453  1183  00A2               	movf	(___xxtofl@arg+1),w
 18454  1184  082B               	movwf	(?___xxtofl+1)
 18455  1185  00A1               	movf	(___xxtofl@arg),w
 18456  1186  082A               	movwf	(?___xxtofl)
 18457  1187  00A0               
 18458                           	goto	l936
 18459  1188  2989               	
 18460                           l4422:	
 18461  1189                     	line	44
 18462                           	
 18463                           l936:	
 18464  1189                     	return
 18465  1189  0008               	opt stack 0
 18466                           GLOBAL	__end_of___xxtofl
 18467                           	__end_of___xxtofl:
 18468  118A                     	signat	___xxtofl,8316
 18469                           	global	_OLED_init
 18470                           
 18471 ;; *************** function _OLED_init *****************
 18472 ;; Defined at:
 18473 ;;		line 80 in file "oled.c"
 18474 ;; Parameters:    Size  Location     Type
 18475 ;;		None
 18476 ;; Auto vars:     Size  Location     Type
 18477 ;;		None
 18478 ;; Return value:  Size  Location     Type
 18479 ;;                  1    wreg      void 
 18480 ;; Registers used:
 18481 ;;		wreg, status,2, status,0, pclath, cstack
 18482 ;; Tracked objects:
 18483 ;;		On entry : 0/0
 18484 ;;		On exit  : 0/0
 18485 ;;		Unchanged: 0/0
 18486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18489 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18490 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18491 ;;Total ram usage:        1 bytes
 18492 ;; Hardware stack levels used:    1
 18493 ;; Hardware stack levels required when called:    7
 18494 ;; This function calls:
 18495 ;;		_OLED_command
 18496 ;;		_OLED_write4bits
 18497 ;; This function is called by:
 18498 ;;		_main
 18499 ;; This function uses a non-reentrant model
 18500 ;;
 18501                           psect	text45,local,class=CODE,delta=2,merge=1,group=0
 18502                           	file	"oled.c"
 18503                           	line	80
 18504                           global __ptext45
 18505                           __ptext45:	;psect for function _OLED_init
 18506  1E39                     psect	text45
 18507                           	file	"oled.c"
 18508                           	line	80
 18509                           	global	__size_of_OLED_init
 18510                           	__size_of_OLED_init	equ	__end_of_OLED_init-_OLED_init
 18511  008B                     	
 18512                           _OLED_init:	
 18513  1E39                     ;incstack = 0
 18514                           	opt	stack 8
 18515                           ; Regs used in _OLED_init: [wreg+status,2+status,0+pclath+cstack]
 18516                           	line	82
 18517                           	
 18518                           l4478:	
 18519  1E39                     ;oled.c: 82:     LATBbits.LATB4 = 0;
 18520                           	movlb 0	; select bank0
 18521  1E39  0140               	bcf	(25),4	;volatile
 18522  1E3A  1219               	line	83
 18523                           ;oled.c: 83:     LATBbits.LATB2 = 0;
 18524                           	bcf	(25),2	;volatile
 18525  1E3B  1119               	line	84
 18526                           ;oled.c: 84:     LATBbits.LATB3 = 0;
 18527                           	bcf	(25),3	;volatile
 18528  1E3C  1199               	line	86
 18529                           	
 18530                           l4480:	
 18531  1E3D                     ;oled.c: 86:     _delay((unsigned long)((50)*(4000000/4000.0)));
 18532                           	opt asmopt_push
 18533                           opt asmopt_off
 18534                           movlw	65
 18535  1E3D  3041               	movlb 0	; select bank0
 18536  1E3E  0140               movwf	((??_OLED_init+0)+0),f
 18537  1E3F  00A7               	movlw	238
 18538  1E40  30EE               u6707:
 18539  1E41                     decfsz	wreg
 18540  1E41  0B89               	goto	u6707
 18541  1E42  2E41               	decfsz	((??_OLED_init+0)+0),f
 18542  1E43  0BA7               	goto	u6707
 18543  1E44  2E41               	nop
 18544  1E45  0000               opt asmopt_pop
 18545                           
 18546                           	line	90
 18547                           	
 18548                           l4482:	
 18549  1E46                     ;oled.c: 90:     LATBbits.LATB1 = 0;
 18550                           	movlb 0	; select bank0
 18551  1E46  0140               	bcf	(25),1	;volatile
 18552  1E47  1099               	line	91
 18553                           	
 18554                           l4484:	
 18555  1E48                     ;oled.c: 91:     LATBbits.LATB0 = 0;
 18556                           	bcf	(25),0	;volatile
 18557  1E48  1019               	line	92
 18558                           	
 18559                           l4486:	
 18560  1E49                     ;oled.c: 92:     LATCbits.LATC5 = 0;
 18561                           	bcf	(26),5	;volatile
 18562  1E49  129A               	line	93
 18563                           	
 18564                           l4488:	
 18565  1E4A                     ;oled.c: 93:     LATCbits.LATC4 = 0;
 18566                           	bcf	(26),4	;volatile
 18567  1E4A  121A               	line	104
 18568                           	
 18569                           l4490:	
 18570  1E4B                     ;oled.c: 104:     OLED_write4bits(0x03);
 18571                           	movlw	low(03h)
 18572  1E4B  3003               	fcall	_OLED_write4bits
 18573  1E4C  3199  21DB  319E   	line	105
 18574                           	
 18575                           l4492:	
 18576  1E4F                     ;oled.c: 105:     _delay((unsigned long)((5)*(4000000/4000.0)));
 18577                           	opt asmopt_push
 18578                           opt asmopt_off
 18579                           movlw	7
 18580  1E4F  3007               	movlb 0	; select bank0
 18581  1E50  0140               movwf	((??_OLED_init+0)+0),f
 18582  1E51  00A7               	movlw	125
 18583  1E52  307D               u6717:
 18584  1E53                     decfsz	wreg
 18585  1E53  0B89               	goto	u6717
 18586  1E54  2E53               	decfsz	((??_OLED_init+0)+0),f
 18587  1E55  0BA7               	goto	u6717
 18588  1E56  2E53               opt asmopt_pop
 18589                           
 18590                           	line	106
 18591                           ;oled.c: 106:     OLED_write4bits(0x08);
 18592                           	movlw	low(08h)
 18593  1E57  3008               	fcall	_OLED_write4bits
 18594  1E58  3199  21DB  319E   	line	107
 18595                           	
 18596                           l4494:	
 18597  1E5B                     ;oled.c: 107:     _delay((unsigned long)((5)*(4000000/4000.0)));
 18598                           	opt asmopt_push
 18599                           opt asmopt_off
 18600                           movlw	7
 18601  1E5B  3007               	movlb 0	; select bank0
 18602  1E5C  0140               movwf	((??_OLED_init+0)+0),f
 18603  1E5D  00A7               	movlw	125
 18604  1E5E  307D               u6727:
 18605  1E5F                     decfsz	wreg
 18606  1E5F  0B89               	goto	u6727
 18607  1E60  2E5F               	decfsz	((??_OLED_init+0)+0),f
 18608  1E61  0BA7               	goto	u6727
 18609  1E62  2E5F               opt asmopt_pop
 18610                           
 18611                           	line	109
 18612                           	
 18613                           l4496:	
 18614  1E63                     ;oled.c: 109:     OLED_write4bits(0x02);
 18615                           	movlw	low(02h)
 18616  1E63  3002               	fcall	_OLED_write4bits
 18617  1E64  3199  21DB  319E   	line	110
 18618                           ;oled.c: 110:     _delay((unsigned long)((5)*(4000000/4000.0)));
 18619                           	opt asmopt_push
 18620                           opt asmopt_off
 18621                           movlw	7
 18622  1E67  3007               	movlb 0	; select bank0
 18623  1E68  0140               movwf	((??_OLED_init+0)+0),f
 18624  1E69  00A7               	movlw	125
 18625  1E6A  307D               u6737:
 18626  1E6B                     decfsz	wreg
 18627  1E6B  0B89               	goto	u6737
 18628  1E6C  2E6B               	decfsz	((??_OLED_init+0)+0),f
 18629  1E6D  0BA7               	goto	u6737
 18630  1E6E  2E6B               opt asmopt_pop
 18631                           
 18632                           	line	111
 18633                           	
 18634                           l4498:	
 18635  1E6F                     ;oled.c: 111:     OLED_write4bits(0x02);
 18636                           	movlw	low(02h)
 18637  1E6F  3002               	fcall	_OLED_write4bits
 18638  1E70  3199  21DB  319E   	line	112
 18639                           	
 18640                           l4500:	
 18641  1E73                     ;oled.c: 112:     _delay((unsigned long)((5)*(4000000/4000.0)));
 18642                           	opt asmopt_push
 18643                           opt asmopt_off
 18644                           movlw	7
 18645  1E73  3007               	movlb 0	; select bank0
 18646  1E74  0140               movwf	((??_OLED_init+0)+0),f
 18647  1E75  00A7               	movlw	125
 18648  1E76  307D               u6747:
 18649  1E77                     decfsz	wreg
 18650  1E77  0B89               	goto	u6747
 18651  1E78  2E77               	decfsz	((??_OLED_init+0)+0),f
 18652  1E79  0BA7               	goto	u6747
 18653  1E7A  2E77               opt asmopt_pop
 18654                           
 18655                           	line	113
 18656                           ;oled.c: 113:     OLED_write4bits(0x08);
 18657                           	movlw	low(08h)
 18658  1E7B  3008               	fcall	_OLED_write4bits
 18659  1E7C  3199  21DB  319E   	line	114
 18660                           	
 18661                           l4502:	
 18662  1E7F                     ;oled.c: 114:     _delay((unsigned long)((5)*(4000000/4000.0)));
 18663                           	opt asmopt_push
 18664                           opt asmopt_off
 18665                           movlw	7
 18666  1E7F  3007               	movlb 0	; select bank0
 18667  1E80  0140               movwf	((??_OLED_init+0)+0),f
 18668  1E81  00A7               	movlw	125
 18669  1E82  307D               u6757:
 18670  1E83                     decfsz	wreg
 18671  1E83  0B89               	goto	u6757
 18672  1E84  2E83               	decfsz	((??_OLED_init+0)+0),f
 18673  1E85  0BA7               	goto	u6757
 18674  1E86  2E83               opt asmopt_pop
 18675                           
 18676                           	line	116
 18677                           	
 18678                           l4504:	
 18679  1E87                     ;oled.c: 116:     OLED_command(0x08);
 18680                           	movlw	low(08h)
 18681  1E87  3008               	fcall	_OLED_command
 18682  1E88  31A6  26E1  319E   	line	117
 18683                           ;oled.c: 117:     _delay((unsigned long)((5)*(4000000/4000.0)));
 18684                           	opt asmopt_push
 18685                           opt asmopt_off
 18686                           movlw	7
 18687  1E8B  3007               	movlb 0	; select bank0
 18688  1E8C  0140               movwf	((??_OLED_init+0)+0),f
 18689  1E8D  00A7               	movlw	125
 18690  1E8E  307D               u6767:
 18691  1E8F                     decfsz	wreg
 18692  1E8F  0B89               	goto	u6767
 18693  1E90  2E8F               	decfsz	((??_OLED_init+0)+0),f
 18694  1E91  0BA7               	goto	u6767
 18695  1E92  2E8F               opt asmopt_pop
 18696                           
 18697                           	line	118
 18698                           	
 18699                           l4506:	
 18700  1E93                     ;oled.c: 118:     OLED_command(0x01);
 18701                           	movlw	low(01h)
 18702  1E93  3001               	fcall	_OLED_command
 18703  1E94  31A6  26E1  319E   	line	119
 18704                           	
 18705                           l4508:	
 18706  1E97                     ;oled.c: 119:     _delay((unsigned long)((5)*(4000000/4000.0)));
 18707                           	opt asmopt_push
 18708                           opt asmopt_off
 18709                           movlw	7
 18710  1E97  3007               	movlb 0	; select bank0
 18711  1E98  0140               movwf	((??_OLED_init+0)+0),f
 18712  1E99  00A7               	movlw	125
 18713  1E9A  307D               u6777:
 18714  1E9B                     decfsz	wreg
 18715  1E9B  0B89               	goto	u6777
 18716  1E9C  2E9B               	decfsz	((??_OLED_init+0)+0),f
 18717  1E9D  0BA7               	goto	u6777
 18718  1E9E  2E9B               opt asmopt_pop
 18719                           
 18720                           	line	120
 18721                           ;oled.c: 120:     OLED_command(0x06);
 18722                           	movlw	low(06h)
 18723  1E9F  3006               	fcall	_OLED_command
 18724  1EA0  31A6  26E1  319E   	line	121
 18725                           	
 18726                           l4510:	
 18727  1EA3                     ;oled.c: 121:     _delay((unsigned long)((5)*(4000000/4000.0)));
 18728                           	opt asmopt_push
 18729                           opt asmopt_off
 18730                           movlw	7
 18731  1EA3  3007               	movlb 0	; select bank0
 18732  1EA4  0140               movwf	((??_OLED_init+0)+0),f
 18733  1EA5  00A7               	movlw	125
 18734  1EA6  307D               u6787:
 18735  1EA7                     decfsz	wreg
 18736  1EA7  0B89               	goto	u6787
 18737  1EA8  2EA7               	decfsz	((??_OLED_init+0)+0),f
 18738  1EA9  0BA7               	goto	u6787
 18739  1EAA  2EA7               opt asmopt_pop
 18740                           
 18741                           	line	122
 18742                           	
 18743                           l4512:	
 18744  1EAB                     ;oled.c: 122:     OLED_command(0x02);
 18745                           	movlw	low(02h)
 18746  1EAB  3002               	fcall	_OLED_command
 18747  1EAC  31A6  26E1  319E   	line	123
 18748                           ;oled.c: 123:     _delay((unsigned long)((5)*(4000000/4000.0)));
 18749                           	opt asmopt_push
 18750                           opt asmopt_off
 18751                           movlw	7
 18752  1EAF  3007               	movlb 0	; select bank0
 18753  1EB0  0140               movwf	((??_OLED_init+0)+0),f
 18754  1EB1  00A7               	movlw	125
 18755  1EB2  307D               u6797:
 18756  1EB3                     decfsz	wreg
 18757  1EB3  0B89               	goto	u6797
 18758  1EB4  2EB3               	decfsz	((??_OLED_init+0)+0),f
 18759  1EB5  0BA7               	goto	u6797
 18760  1EB6  2EB3               opt asmopt_pop
 18761                           
 18762                           	line	124
 18763                           	
 18764                           l4514:	
 18765  1EB7                     ;oled.c: 124:     OLED_command(0x0C);
 18766                           	movlw	low(0Ch)
 18767  1EB7  300C               	fcall	_OLED_command
 18768  1EB8  31A6  26E1  319E   	line	125
 18769                           	
 18770                           l4516:	
 18771  1EBB                     ;oled.c: 125:     _delay((unsigned long)((5)*(4000000/4000.0)));
 18772                           	opt asmopt_push
 18773                           opt asmopt_off
 18774                           movlw	7
 18775  1EBB  3007               	movlb 0	; select bank0
 18776  1EBC  0140               movwf	((??_OLED_init+0)+0),f
 18777  1EBD  00A7               	movlw	125
 18778  1EBE  307D               u6807:
 18779  1EBF                     decfsz	wreg
 18780  1EBF  0B89               	goto	u6807
 18781  1EC0  2EBF               	decfsz	((??_OLED_init+0)+0),f
 18782  1EC1  0BA7               	goto	u6807
 18783  1EC2  2EBF               opt asmopt_pop
 18784                           
 18785                           	line	126
 18786                           	
 18787                           l308:	
 18788  1EC3                     	return
 18789  1EC3  0008               	opt stack 0
 18790                           GLOBAL	__end_of_OLED_init
 18791                           	__end_of_OLED_init:
 18792  1EC4                     	signat	_OLED_init,89
 18793                           	global	_OLED_command
 18794                           
 18795 ;; *************** function _OLED_command *****************
 18796 ;; Defined at:
 18797 ;;		line 68 in file "oled.c"
 18798 ;; Parameters:    Size  Location     Type
 18799 ;;  value           1    wreg     unsigned char 
 18800 ;; Auto vars:     Size  Location     Type
 18801 ;;  value           1    6[BANK0 ] unsigned char 
 18802 ;; Return value:  Size  Location     Type
 18803 ;;                  1    wreg      void 
 18804 ;; Registers used:
 18805 ;;		wreg, status,2, status,0, pclath, cstack
 18806 ;; Tracked objects:
 18807 ;;		On entry : 0/0
 18808 ;;		On exit  : 0/0
 18809 ;;		Unchanged: 0/0
 18810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18812 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18814 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18815 ;;Total ram usage:        1 bytes
 18816 ;; Hardware stack levels used:    1
 18817 ;; Hardware stack levels required when called:    6
 18818 ;; This function calls:
 18819 ;;		_OLED_send
 18820 ;;		_OLED_waitForReady
 18821 ;; This function is called by:
 18822 ;;		_main
 18823 ;;		_OLED_init
 18824 ;;		_OLED_scrollDisplayLeft
 18825 ;;		_OLED_scrollDisplayRight
 18826 ;;		_OLED_print_xy
 18827 ;;		_OLED_returnHome
 18828 ;;		_OLED_setCursor
 18829 ;; This function uses a non-reentrant model
 18830 ;;
 18831                           psect	text46,local,class=CODE,delta=2,merge=1,group=0
 18832                           	line	68
 18833                           global __ptext46
 18834                           __ptext46:	;psect for function _OLED_command
 18835  26E1                     psect	text46
 18836                           	file	"oled.c"
 18837                           	line	68
 18838                           	global	__size_of_OLED_command
 18839                           	__size_of_OLED_command	equ	__end_of_OLED_command-_OLED_command
 18840  000B                     	
 18841                           _OLED_command:	
 18842  26E1                     ;incstack = 0
 18843                           	opt	stack 6
 18844                           ; Regs used in _OLED_command: [wreg+status,2+status,0+pclath+cstack]
 18845                           ;OLED_command@value stored from wreg
 18846                           	movlb 0	; select bank0
 18847  26E1  0140               	movwf	(OLED_command@value)
 18848  26E2  00A6               	line	70
 18849                           	
 18850                           l4126:	
 18851  26E3                     ;oled.c: 68: void OLED_command(uint8_t value);oled.c: 69: {;oled.c: 70:     OLED_send(va
                                 lue, 0);
 18852                           	clrf	(OLED_send@mode)
 18853  26E3  01A3               	movf	(OLED_command@value),w
 18854  26E4  0826               	fcall	_OLED_send
 18855  26E5  31A7  2704  31A6   	line	71
 18856                           ;oled.c: 71:     OLED_waitForReady();
 18857                           	fcall	_OLED_waitForReady
 18858  26E8  31A7  2771  31A6   	line	72
 18859                           	
 18860                           l302:	
 18861  26EB                     	return
 18862  26EB  0008               	opt stack 0
 18863                           GLOBAL	__end_of_OLED_command
 18864                           	__end_of_OLED_command:
 18865  26EC                     	signat	_OLED_command,4217
 18866                           	global	_OLED_waitForReady
 18867                           
 18868 ;; *************** function _OLED_waitForReady *****************
 18869 ;; Defined at:
 18870 ;;		line 40 in file "oled.c"
 18871 ;; Parameters:    Size  Location     Type
 18872 ;;		None
 18873 ;; Auto vars:     Size  Location     Type
 18874 ;;  busy            1    0[BANK0 ] unsigned char 
 18875 ;; Return value:  Size  Location     Type
 18876 ;;                  1    wreg      void 
 18877 ;; Registers used:
 18878 ;;		wreg, status,2, status,0, pclath, cstack
 18879 ;; Tracked objects:
 18880 ;;		On entry : 0/0
 18881 ;;		On exit  : 0/0
 18882 ;;		Unchanged: 0/0
 18883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18885 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18887 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18888 ;;Total ram usage:        1 bytes
 18889 ;; Hardware stack levels used:    1
 18890 ;; Hardware stack levels required when called:    4
 18891 ;; This function calls:
 18892 ;;		_OLED_pulseEnable
 18893 ;; This function is called by:
 18894 ;;		_OLED_command
 18895 ;;		_OLED_write
 18896 ;; This function uses a non-reentrant model
 18897 ;;
 18898                           psect	text47,local,class=CODE,delta=2,merge=1,group=0
 18899                           	line	40
 18900                           global __ptext47
 18901                           __ptext47:	;psect for function _OLED_waitForReady
 18902  2771                     psect	text47
 18903                           	file	"oled.c"
 18904                           	line	40
 18905                           	global	__size_of_OLED_waitForReady
 18906                           	__size_of_OLED_waitForReady	equ	__end_of_OLED_waitForReady-_OLED_waitForReady
 18907  0023                     	
 18908                           _OLED_waitForReady:	
 18909  2771                     ;incstack = 0
 18910                           	opt	stack 7
 18911                           ; Regs used in _OLED_waitForReady: [wreg+status,2+status,0+pclath+cstack]
 18912                           	line	43
 18913                           	
 18914                           l3750:	
 18915  2771                     ;oled.c: 43:     unsigned char busy = 1;
 18916                           	movlb 0	; select bank0
 18917  2771  0140               	clrf	(OLED_waitForReady@busy)
 18918  2772  01A0               	incf	(OLED_waitForReady@busy),f
 18919  2773  0AA0               	line	45
 18920                           ;oled.c: 45:     TRISCbits.TRISC4 = 1;
 18921                           	bsf	(20),4	;volatile
 18922  2774  1614               	line	46
 18923                           ;oled.c: 46:     LATBbits.LATB4 = 0;
 18924                           	bcf	(25),4	;volatile
 18925  2775  1219               	line	47
 18926                           ;oled.c: 47:     LATBbits.LATB3 = 1;
 18927                           	bsf	(25),3	;volatile
 18928  2776  1599               	line	49
 18929                           ;oled.c: 49:     do
 18930                           	
 18931                           l297:	
 18932  2777                     	line	51
 18933                           ;oled.c: 50:     {;oled.c: 51:         LATBbits.LATB2 = 0;
 18934                           	bcf	(25),2	;volatile
 18935  2777  1119               	line	52
 18936                           	
 18937                           l3752:	
 18938  2778                     ;oled.c: 52:         _delay((unsigned long)((10)*(4000000/4000000.0)));
 18939                           	opt asmopt_push
 18940                           opt asmopt_off
 18941                           	movlw	3
 18942  2778  3003               u6817:
 18943  2779                     decfsz	wreg
 18944  2779  0B89               	goto	u6817
 18945  277A  2F79               	nop
 18946  277B  0000               opt asmopt_pop
 18947                           
 18948                           	line	53
 18949                           	
 18950                           l3754:	
 18951  277C                     ;oled.c: 53:         LATBbits.LATB2 = 1;
 18952                           	movlb 0	; select bank0
 18953  277C  0140               	bsf	(25),2	;volatile
 18954  277D  1519               	line	55
 18955                           ;oled.c: 55:         _delay((unsigned long)((10)*(4000000/4000000.0)));
 18956                           	opt asmopt_push
 18957                           opt asmopt_off
 18958                           	movlw	3
 18959  277E  3003               u6827:
 18960  277F                     decfsz	wreg
 18961  277F  0B89               	goto	u6827
 18962  2780  2F7F               	nop
 18963  2781  0000               opt asmopt_pop
 18964                           
 18965                           	line	56
 18966                           	
 18967                           l3756:	
 18968  2782                     ;oled.c: 56:         busy = PORTCbits.RC4;
 18969                           	movlw	0
 18970  2782  3000               	movlb 0	; select bank0
 18971  2783  0140               	btfsc	(14),4	;volatile
 18972  2784  1A0E               	movlw	1
 18973  2785  3001               	movwf	(OLED_waitForReady@busy)
 18974  2786  00A0               	line	58
 18975                           	
 18976                           l3758:	
 18977  2787                     ;oled.c: 58:         LATBbits.LATB2 = 0;
 18978                           	bcf	(25),2	;volatile
 18979  2787  1119               	line	60
 18980                           	
 18981                           l3760:	
 18982  2788                     ;oled.c: 60:         OLED_pulseEnable();
 18983                           	fcall	_OLED_pulseEnable
 18984  2788  31A6  26CF  31A7   	line	61
 18985                           	
 18986                           l3762:	
 18987  278B                     ;oled.c: 61:     }
 18988                           	movlb 0	; select bank0
 18989  278B  0140               	movf	((OLED_waitForReady@busy)),w
 18990  278C  0820               	btfss	status,2
 18991  278D  1D03               	goto	u5201
 18992  278E  2F90               	goto	u5200
 18993  278F  2F91               u5201:
 18994  2790                     	goto	l297
 18995  2790  2F77               u5200:
 18996  2791                     	
 18997                           l298:	
 18998  2791                     	line	64
 18999                           ;oled.c: 64:     TRISCbits.TRISC4 = 0;
 19000                           	bcf	(20),4	;volatile
 19001  2791  1214               	line	65
 19002                           ;oled.c: 65:     LATBbits.LATB3 = 0;
 19003                           	bcf	(25),3	;volatile
 19004  2792  1199               	line	66
 19005                           	
 19006                           l299:	
 19007  2793                     	return
 19008  2793  0008               	opt stack 0
 19009                           GLOBAL	__end_of_OLED_waitForReady
 19010                           	__end_of_OLED_waitForReady:
 19011  2794                     	signat	_OLED_waitForReady,89
 19012                           	global	_OLED_send
 19013                           
 19014 ;; *************** function _OLED_send *****************
 19015 ;; Defined at:
 19016 ;;		line 30 in file "oled.c"
 19017 ;; Parameters:    Size  Location     Type
 19018 ;;  value           1    wreg     unsigned char 
 19019 ;;  mode            1    3[BANK0 ] unsigned char 
 19020 ;; Auto vars:     Size  Location     Type
 19021 ;;  value           1    5[BANK0 ] unsigned char 
 19022 ;; Return value:  Size  Location     Type
 19023 ;;                  1    wreg      void 
 19024 ;; Registers used:
 19025 ;;		wreg, status,2, status,0, pclath, cstack
 19026 ;; Tracked objects:
 19027 ;;		On entry : 0/0
 19028 ;;		On exit  : 0/0
 19029 ;;		Unchanged: 0/0
 19030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19031 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19032 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19033 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19034 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19035 ;;Total ram usage:        3 bytes
 19036 ;; Hardware stack levels used:    1
 19037 ;; Hardware stack levels required when called:    5
 19038 ;; This function calls:
 19039 ;;		_OLED_write4bits
 19040 ;; This function is called by:
 19041 ;;		_OLED_command
 19042 ;;		_OLED_write
 19043 ;; This function uses a non-reentrant model
 19044 ;;
 19045                           psect	text48,local,class=CODE,delta=2,merge=1,group=0
 19046                           	line	30
 19047                           global __ptext48
 19048                           __ptext48:	;psect for function _OLED_send
 19049  2704                     psect	text48
 19050                           	file	"oled.c"
 19051                           	line	30
 19052                           	global	__size_of_OLED_send
 19053                           	__size_of_OLED_send	equ	__end_of_OLED_send-_OLED_send
 19054  0018                     	
 19055                           _OLED_send:	
 19056  2704                     ;incstack = 0
 19057                           	opt	stack 6
 19058                           ; Regs used in _OLED_send: [wreg+status,2+status,0+pclath+cstack]
 19059                           ;OLED_send@value stored from wreg
 19060                           	movlb 0	; select bank0
 19061  2704  0140               	movwf	(OLED_send@value)
 19062  2705  00A5               	line	32
 19063                           	
 19064                           l3742:	
 19065  2706                     ;oled.c: 30: void OLED_send(uint8_t value, uint8_t mode);oled.c: 31: {;oled.c: 32:     L
                                 ATBbits.LATB4 = mode;
 19066                           	rrf	(OLED_send@mode),w
 19067  2706  0C23               	skipc
 19068  2707  1C03               	bcf	(25),4	;volatile
 19069  2708  1219               	skipnc
 19070  2709  1803               	bsf	(25),4	;volatile
 19071  270A  1619               	line	33
 19072                           	
 19073                           l3744:	
 19074  270B                     ;oled.c: 33:     LATBbits.LATB3 = 0;
 19075                           	bcf	(25),3	;volatile
 19076  270B  1199               	line	35
 19077                           	
 19078                           l3746:	
 19079  270C                     ;oled.c: 35:     OLED_write4bits(value>>4);
 19080                           	movf	(OLED_send@value),w
 19081  270C  0825               	movwf	(??_OLED_send+0)+0
 19082  270D  00A4               	movlw	04h
 19083  270E  3004               u5195:
 19084  270F                     	lsrf	(??_OLED_send+0)+0,f
 19085  270F  36A4               	decfsz	wreg,f
 19086  2710  0B89               	goto	u5195
 19087  2711  2F0F               	movf	0+(??_OLED_send+0)+0,w
 19088  2712  0824               	fcall	_OLED_write4bits
 19089  2713  3199  21DB  31A7   	line	36
 19090                           	
 19091                           l3748:	
 19092  2716                     ;oled.c: 36:     OLED_write4bits(value);
 19093                           	movlb 0	; select bank0
 19094  2716  0140               	movf	(OLED_send@value),w
 19095  2717  0825               	fcall	_OLED_write4bits
 19096  2718  3199  21DB  31A7   	line	37
 19097                           	
 19098                           l294:	
 19099  271B                     	return
 19100  271B  0008               	opt stack 0
 19101                           GLOBAL	__end_of_OLED_send
 19102                           	__end_of_OLED_send:
 19103  271C                     	signat	_OLED_send,8313
 19104                           	global	_OLED_write4bits
 19105                           
 19106 ;; *************** function _OLED_write4bits *****************
 19107 ;; Defined at:
 19108 ;;		line 19 in file "oled.c"
 19109 ;; Parameters:    Size  Location     Type
 19110 ;;  value           1    wreg     unsigned char 
 19111 ;; Auto vars:     Size  Location     Type
 19112 ;;  value           1    2[BANK0 ] unsigned char 
 19113 ;; Return value:  Size  Location     Type
 19114 ;;                  1    wreg      void 
 19115 ;; Registers used:
 19116 ;;		wreg, status,2, status,0, pclath, cstack
 19117 ;; Tracked objects:
 19118 ;;		On entry : 0/0
 19119 ;;		On exit  : 0/0
 19120 ;;		Unchanged: 0/0
 19121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19123 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19124 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19125 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19126 ;;Total ram usage:        3 bytes
 19127 ;; Hardware stack levels used:    1
 19128 ;; Hardware stack levels required when called:    4
 19129 ;; This function calls:
 19130 ;;		_OLED_pulseEnable
 19131 ;; This function is called by:
 19132 ;;		_OLED_send
 19133 ;;		_OLED_init
 19134 ;; This function uses a non-reentrant model
 19135 ;;
 19136                           psect	text49,local,class=CODE,delta=2,merge=1,group=0
 19137                           	line	19
 19138                           global __ptext49
 19139                           __ptext49:	;psect for function _OLED_write4bits
 19140  19DB                     psect	text49
 19141                           	file	"oled.c"
 19142                           	line	19
 19143                           	global	__size_of_OLED_write4bits
 19144                           	__size_of_OLED_write4bits	equ	__end_of_OLED_write4bits-_OLED_write4bits
 19145  0040                     	
 19146                           _OLED_write4bits:	
 19147  19DB                     ;incstack = 0
 19148                           	opt	stack 6
 19149                           ; Regs used in _OLED_write4bits: [wreg+status,2+status,0+pclath+cstack]
 19150                           ;OLED_write4bits@value stored from wreg
 19151                           	movlb 0	; select bank0
 19152  19DB  0140               	movwf	(OLED_write4bits@value)
 19153  19DC  00A2               	line	21
 19154                           	
 19155                           l3166:	
 19156  19DD                     ;oled.c: 19: void OLED_write4bits(uint8_t value);oled.c: 20: {;oled.c: 21:     LATBbits.
                                 LATB1 = (value >> 0) & 0x01;
 19157                           	movf	(OLED_write4bits@value),w
 19158  19DD  0822               	andlw	01h
 19159  19DE  3901               	movwf	(??_OLED_write4bits+0)+0
 19160  19DF  00A0               	rlf	(??_OLED_write4bits+0)+0,f
 19161  19E0  0DA0               	movf	(25),w	;volatile
 19162  19E1  0819               	xorwf	(??_OLED_write4bits+0)+0,w
 19163  19E2  0620               	andlw	not (((1<<1)-1)<<1)
 19164  19E3  39FD               	xorwf	(??_OLED_write4bits+0)+0,w
 19165  19E4  0620               	movwf	(25)	;volatile
 19166  19E5  0099               	line	22
 19167                           ;oled.c: 22:     LATBbits.LATB0 = (value >> 1) & 0x01;
 19168                           	movf	(OLED_write4bits@value),w
 19169  19E6  0822               	movwf	(??_OLED_write4bits+0)+0
 19170  19E7  00A0               	movlw	01h
 19171  19E8  3001               u3885:
 19172  19E9                     	lsrf	(??_OLED_write4bits+0)+0,f
 19173  19E9  36A0               	decfsz	wreg,f
 19174  19EA  0B89               	goto	u3885
 19175  19EB  29E9               	movlw	low(01h)
 19176  19EC  3001               	andwf	0+(??_OLED_write4bits+0)+0,w
 19177  19ED  0520               	movwf	(??_OLED_write4bits+1)+0
 19178  19EE  00A1               	movf	(25),w	;volatile
 19179  19EF  0819               	xorwf	0+(??_OLED_write4bits+1)+0,w
 19180  19F0  0621               	andlw	not ((1<<1)-1)
 19181  19F1  39FE               	xorwf	0+(??_OLED_write4bits+1)+0,w
 19182  19F2  0621               	movwf	(25)	;volatile
 19183  19F3  0099               	line	23
 19184                           ;oled.c: 23:     LATCbits.LATC5 = (value >> 2) & 0x01;
 19185                           	movf	(OLED_write4bits@value),w
 19186  19F4  0822               	movwf	(??_OLED_write4bits+0)+0
 19187  19F5  00A0               	movlw	02h
 19188  19F6  3002               u3895:
 19189  19F7                     	lsrf	(??_OLED_write4bits+0)+0,f
 19190  19F7  36A0               	decfsz	wreg,f
 19191  19F8  0B89               	goto	u3895
 19192  19F9  29F7               	movf	0+(??_OLED_write4bits+0)+0,w
 19193  19FA  0820               	andlw	01h
 19194  19FB  3901               	movwf	(??_OLED_write4bits+1)+0
 19195  19FC  00A1               	swapf	(??_OLED_write4bits+1)+0,f
 19196  19FD  0EA1               	rlf	(??_OLED_write4bits+1)+0,f
 19197  19FE  0DA1               	movf	(26),w	;volatile
 19198  19FF  081A               	xorwf	(??_OLED_write4bits+1)+0,w
 19199  1A00  0621               	andlw	not (((1<<1)-1)<<5)
 19200  1A01  39DF               	xorwf	(??_OLED_write4bits+1)+0,w
 19201  1A02  0621               	movwf	(26)	;volatile
 19202  1A03  009A               	line	24
 19203                           ;oled.c: 24:     LATCbits.LATC4 = (value >> 3) & 0x01;
 19204                           	movf	(OLED_write4bits@value),w
 19205  1A04  0822               	movwf	(??_OLED_write4bits+0)+0
 19206  1A05  00A0               	movlw	03h
 19207  1A06  3003               u3905:
 19208  1A07                     	lsrf	(??_OLED_write4bits+0)+0,f
 19209  1A07  36A0               	decfsz	wreg,f
 19210  1A08  0B89               	goto	u3905
 19211  1A09  2A07               	movf	0+(??_OLED_write4bits+0)+0,w
 19212  1A0A  0820               	andlw	01h
 19213  1A0B  3901               	movwf	(??_OLED_write4bits+1)+0
 19214  1A0C  00A1               	swapf	(??_OLED_write4bits+1)+0,f
 19215  1A0D  0EA1               	movf	(26),w	;volatile
 19216  1A0E  081A               	xorwf	(??_OLED_write4bits+1)+0,w
 19217  1A0F  0621               	andlw	not (((1<<1)-1)<<4)
 19218  1A10  39EF               	xorwf	(??_OLED_write4bits+1)+0,w
 19219  1A11  0621               	movwf	(26)	;volatile
 19220  1A12  009A               	line	26
 19221                           	
 19222                           l3168:	
 19223  1A13                     ;oled.c: 26:     _delay((unsigned long)((50)*(4000000/4000000.0)));
 19224                           	opt asmopt_push
 19225                           opt asmopt_off
 19226                           	movlw	16
 19227  1A13  3010               u6837:
 19228  1A14                     decfsz	wreg
 19229  1A14  0B89               	goto	u6837
 19230  1A15  2A14               	nop2
 19231  1A16  3200               opt asmopt_pop
 19232                           
 19233                           	line	27
 19234                           	
 19235                           l3170:	
 19236  1A17                     ;oled.c: 27:     OLED_pulseEnable();
 19237                           	fcall	_OLED_pulseEnable
 19238  1A17  31A6  26CF  3199   	line	28
 19239                           	
 19240                           l291:	
 19241  1A1A                     	return
 19242  1A1A  0008               	opt stack 0
 19243                           GLOBAL	__end_of_OLED_write4bits
 19244                           	__end_of_OLED_write4bits:
 19245  1A1B                     	signat	_OLED_write4bits,4217
 19246                           	global	_OLED_pulseEnable
 19247                           
 19248 ;; *************** function _OLED_pulseEnable *****************
 19249 ;; Defined at:
 19250 ;;		line 12 in file "oled.c"
 19251 ;; Parameters:    Size  Location     Type
 19252 ;;		None
 19253 ;; Auto vars:     Size  Location     Type
 19254 ;;		None
 19255 ;; Return value:  Size  Location     Type
 19256 ;;                  1    wreg      void 
 19257 ;; Registers used:
 19258 ;;		wreg
 19259 ;; Tracked objects:
 19260 ;;		On entry : 0/0
 19261 ;;		On exit  : 0/0
 19262 ;;		Unchanged: 0/0
 19263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19268 ;;Total ram usage:        0 bytes
 19269 ;; Hardware stack levels used:    1
 19270 ;; Hardware stack levels required when called:    3
 19271 ;; This function calls:
 19272 ;;		Nothing
 19273 ;; This function is called by:
 19274 ;;		_OLED_write4bits
 19275 ;;		_OLED_waitForReady
 19276 ;; This function uses a non-reentrant model
 19277 ;;
 19278                           psect	text50,local,class=CODE,delta=2,merge=1,group=0
 19279                           	line	12
 19280                           global __ptext50
 19281                           __ptext50:	;psect for function _OLED_pulseEnable
 19282  26CF                     psect	text50
 19283                           	file	"oled.c"
 19284                           	line	12
 19285                           	global	__size_of_OLED_pulseEnable
 19286                           	__size_of_OLED_pulseEnable	equ	__end_of_OLED_pulseEnable-_OLED_pulseEnable
 19287  0009                     	
 19288                           _OLED_pulseEnable:	
 19289  26CF                     ;incstack = 0
 19290                           	opt	stack 7
 19291                           ; Regs used in _OLED_pulseEnable: [wreg]
 19292                           	line	14
 19293                           	
 19294                           l2930:	
 19295  26CF                     ;oled.c: 14:     LATBbits.LATB2 = 1;
 19296                           	movlb 0	; select bank0
 19297  26CF  0140               	bsf	(25),2	;volatile
 19298  26D0  1519               	line	15
 19299                           	
 19300                           l2932:	
 19301  26D1                     ;oled.c: 15:     _delay((unsigned long)((50)*(4000000/4000000.0)));
 19302                           	opt asmopt_push
 19303                           opt asmopt_off
 19304                           	movlw	16
 19305  26D1  3010               u6847:
 19306  26D2                     decfsz	wreg
 19307  26D2  0B89               	goto	u6847
 19308  26D3  2ED2               	nop2
 19309  26D4  3200               opt asmopt_pop
 19310                           
 19311                           	line	16
 19312                           	
 19313                           l2934:	
 19314  26D5                     ;oled.c: 16:     LATBbits.LATB2 = 0;
 19315                           	movlb 0	; select bank0
 19316  26D5  0140               	bcf	(25),2	;volatile
 19317  26D6  1119               	line	17
 19318                           	
 19319                           l288:	
 19320  26D7                     	return
 19321  26D7  0008               	opt stack 0
 19322                           GLOBAL	__end_of_OLED_pulseEnable
 19323                           	__end_of_OLED_pulseEnable:
 19324  26D8                     	signat	_OLED_pulseEnable,89
 19325                           	global	_ISR
 19326                           
 19327 ;; *************** function _ISR *****************
 19328 ;; Defined at:
 19329 ;;		line 304 in file "main.c"
 19330 ;; Parameters:    Size  Location     Type
 19331 ;;		None
 19332 ;; Auto vars:     Size  Location     Type
 19333 ;;		None
 19334 ;; Return value:  Size  Location     Type
 19335 ;;                  1    wreg      void 
 19336 ;; Registers used:
 19337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19338 ;; Tracked objects:
 19339 ;;		On entry : 0/0
 19340 ;;		On exit  : 0/0
 19341 ;;		Unchanged: 0/0
 19342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19345 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19346 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19347 ;;Total ram usage:        1 bytes
 19348 ;; Hardware stack levels used:    1
 19349 ;; Hardware stack levels required when called:    2
 19350 ;; This function calls:
 19351 ;;		_pushButtonISR
 19352 ;;		_rotISR
 19353 ;;		_uartReceiveISR
 19354 ;; This function is called by:
 19355 ;;		Interrupt level 1
 19356 ;; This function uses a non-reentrant model
 19357 ;;
 19358                           psect	intentry,class=CODE,delta=2
 19359                           global __pintentry
 19360                           __pintentry:
 19361  0004                     psect	intentry
 19362                           	file	"main.c"
 19363                           	line	304
 19364                           	global	__size_of_ISR
 19365                           	__size_of_ISR	equ	__end_of_ISR-_ISR
 19366  0078                     	
 19367                           _ISR:	
 19368  0004                     ;incstack = 0
 19369                           	opt	stack 4
 19370                           	bsf int$flags,0 ;set compiler interrupt flag (level 1)
 19371  0004  147E               ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19372                           psect	intentry
 19373                           	pagesel	$
 19374  0005  3180               	line	306
 19375                           	
 19376                           i1l4638:	
 19377  0006                     ;main.c: 306:  if (PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1) {
 19378                           	movlb 14	; select bank14
 19379  0006  014E               	btfss	(1814)^0700h,5	;volatile
 19380  0007  1E96               	goto	u653_21
 19381  0008  280A               	goto	u653_20
 19382  0009  280B               u653_21:
 19383  000A                     	goto	i1l235
 19384  000A  2819               u653_20:
 19385  000B                     	
 19386                           i1l4640:	
 19387  000B                     	btfss	(1804)^0700h,5	;volatile
 19388  000B  1E8C               	goto	u654_21
 19389  000C  280E               	goto	u654_20
 19390  000D  280F               u654_21:
 19391  000E                     	goto	i1l235
 19392  000E  2819               u654_20:
 19393  000F                     	line	309
 19394                           	
 19395                           i1l4642:	
 19396  000F                     ;main.c: 309:   g_10msTick++;
 19397                           	movlw	low(01h)
 19398  000F  3001               	movwf	(??_ISR+0)+0
 19399  0010  00F8               	movf	(??_ISR+0)+0,w
 19400  0011  0878               	addwf	(_g_10msTick),f	;volatile
 19401  0012  07FD               	line	310
 19402                           	
 19403                           i1l4644:	
 19404  0013                     ;main.c: 310:   TMR0 = 178;
 19405                           	movlw	low(0B2h)
 19406  0013  30B2               	movlb 11	; select bank11
 19407  0014  014B               	movwf	(1436)^0580h	;volatile
 19408  0015  009C               	line	311
 19409                           	
 19410                           i1l4646:	
 19411  0016                     ;main.c: 311:   PIR0bits.TMR0IF = 0;
 19412                           	movlb 14	; select bank14
 19413  0016  014E               	bcf	(1804)^0700h,5	;volatile
 19414  0017  128C               	line	312
 19415                           ;main.c: 312:  } else if (PIE0bits.IOCIE == 1 && PIR0bits.IOCIF == 1) {
 19416                           	goto	i1l247
 19417  0018  287A               	
 19418                           i1l235:	
 19419  0019                     	btfss	(1814)^0700h,4	;volatile
 19420  0019  1E16               	goto	u655_21
 19421  001A  281C               	goto	u655_20
 19422  001B  281D               u655_21:
 19423  001C                     	goto	i1l237
 19424  001C  2843               u655_20:
 19425  001D                     	
 19426                           i1l4648:	
 19427  001D                     	btfss	(1804)^0700h,4	;volatile
 19428  001D  1E0C               	goto	u656_21
 19429  001E  2820               	goto	u656_20
 19430  001F  2821               u656_21:
 19431  0020                     	goto	i1l237
 19432  0020  2843               u656_20:
 19433  0021                     	line	314
 19434                           	
 19435                           i1l4650:	
 19436  0021                     ;main.c: 314:   if (IOCAFbits.IOCAF7 == 1) {
 19437                           	movlb 62	; select bank62
 19438  0021  017E               	btfss	(7999)^01F00h,7	;volatile
 19439  0022  1FBF               	goto	u657_21
 19440  0023  2825               	goto	u657_20
 19441  0024  2826               u657_21:
 19442  0025                     	goto	i1l4656
 19443  0025  282C               u657_20:
 19444  0026                     	line	315
 19445                           	
 19446                           i1l4652:	
 19447  0026                     ;main.c: 315:    pushButtonISR();
 19448                           	fcall	_pushButtonISR
 19449  0026  3198  20BF  3180   	line	316
 19450                           	
 19451                           i1l4654:	
 19452  0029                     ;main.c: 316:    IOCAFbits.IOCAF7 = 0;
 19453                           	movlb 62	; select bank62
 19454  0029  017E               	bcf	(7999)^01F00h,7	;volatile
 19455  002A  13BF               	goto	i1l4656
 19456  002B  282C               	line	317
 19457                           ;main.c: 317:   }
 19458                           	
 19459                           i1l238:	
 19460  002C                     	line	318
 19461                           	
 19462                           i1l4656:	
 19463  002C                     ;main.c: 318:   if (IOCAFbits.IOCAF4 == 1) {
 19464                           	btfss	(7999)^01F00h,4	;volatile
 19465  002C  1E3F               	goto	u658_21
 19466  002D  282F               	goto	u658_20
 19467  002E  2830               u658_21:
 19468  002F                     	goto	i1l4662
 19469  002F  2836               u658_20:
 19470  0030                     	line	319
 19471                           	
 19472                           i1l4658:	
 19473  0030                     ;main.c: 319:    rotISR();
 19474                           	fcall	_rotISR
 19475  0030  3199  2160  3180   	line	320
 19476                           	
 19477                           i1l4660:	
 19478  0033                     ;main.c: 320:    IOCAFbits.IOCAF4 = 0;
 19479                           	movlb 62	; select bank62
 19480  0033  017E               	bcf	(7999)^01F00h,4	;volatile
 19481  0034  123F               	goto	i1l4662
 19482  0035  2836               	line	321
 19483                           ;main.c: 321:   }
 19484                           	
 19485                           i1l239:	
 19486  0036                     	line	322
 19487                           	
 19488                           i1l4662:	
 19489  0036                     ;main.c: 322:   if (IOCAFbits.IOCAF5 == 1) {
 19490                           	btfss	(7999)^01F00h,5	;volatile
 19491  0036  1EBF               	goto	u659_21
 19492  0037  2839               	goto	u659_20
 19493  0038  283A               u659_21:
 19494  0039                     	goto	i1l4668
 19495  0039  2840               u659_20:
 19496  003A                     	line	323
 19497                           	
 19498                           i1l4664:	
 19499  003A                     ;main.c: 323:    rotISR();
 19500                           	fcall	_rotISR
 19501  003A  3199  2160  3180   	line	324
 19502                           	
 19503                           i1l4666:	
 19504  003D                     ;main.c: 324:    IOCAFbits.IOCAF5 = 0;
 19505                           	movlb 62	; select bank62
 19506  003D  017E               	bcf	(7999)^01F00h,5	;volatile
 19507  003E  12BF               	goto	i1l4668
 19508  003F  2840               	line	325
 19509                           ;main.c: 325:   }
 19510                           	
 19511                           i1l240:	
 19512  0040                     	line	326
 19513                           	
 19514                           i1l4668:	
 19515  0040                     ;main.c: 326:   PIR0bits.IOCIF = 0;
 19516                           	movlb 14	; select bank14
 19517  0040  014E               	bcf	(1804)^0700h,4	;volatile
 19518  0041  120C               	line	327
 19519                           ;main.c: 327:  } else if (INTCONbits.PEIE == 1) {
 19520                           	goto	i1l247
 19521  0042  287A               	
 19522                           i1l237:	
 19523  0043                     	btfss	(11),6	;volatile
 19524  0043  1F0B               	goto	u660_21
 19525  0044  2846               	goto	u660_20
 19526  0045  2847               u660_21:
 19527  0046                     	goto	i1l247
 19528  0046  287A               u660_20:
 19529  0047                     	line	328
 19530                           	
 19531                           i1l4670:	
 19532  0047                     ;main.c: 328:   if (PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1) {
 19533                           	btfss	(1818)^0700h,0	;volatile
 19534  0047  1C1A               	goto	u661_21
 19535  0048  284A               	goto	u661_20
 19536  0049  284B               u661_21:
 19537  004A                     	goto	i1l243
 19538  004A  2868               u661_20:
 19539  004B                     	
 19540                           i1l4672:	
 19541  004B                     	btfss	(1808)^0700h,0	;volatile
 19542  004B  1C10               	goto	u662_21
 19543  004C  284E               	goto	u662_20
 19544  004D  284F               u662_21:
 19545  004E                     	goto	i1l243
 19546  004E  2868               u662_20:
 19547  004F                     	line	330
 19548                           	
 19549                           i1l4674:	
 19550  004F                     ;main.c: 330:    if (++g_100msTick == 10) {
 19551                           	movlw	low(01h)
 19552  004F  3001               	movwf	(??_ISR+0)+0
 19553  0050  00F8               	movf	(??_ISR+0)+0,w
 19554  0051  0878               	addwf	(_g_100msTick),f	;volatile
 19555  0052  07FC               		movlw	10
 19556  0053  300A               	xorwf	(((_g_100msTick))),w	;volatile
 19557  0054  067C               	btfss	status,2
 19558  0055  1D03               	goto	u663_21
 19559  0056  2858               	goto	u663_20
 19560  0057  2859               u663_21:
 19561  0058                     	goto	i1l4680
 19562  0058  2860               u663_20:
 19563  0059                     	line	331
 19564                           	
 19565                           i1l4676:	
 19566  0059                     ;main.c: 331:     g_100msTick = 0;
 19567                           	clrf	(_g_100msTick)	;volatile
 19568  0059  01FC               	line	332
 19569                           	
 19570                           i1l4678:	
 19571  005A                     ;main.c: 332:     g_sensorTimer++;
 19572                           	movlw	low(01h)
 19573  005A  3001               	movwf	(??_ISR+0)+0
 19574  005B  00F8               	movf	(??_ISR+0)+0,w
 19575  005C  0878               	movlb 3	; select bank3
 19576  005D  0143               	addwf	(_g_sensorTimer)^0180h,f	;volatile
 19577  005E  07EB               	goto	i1l4680
 19578  005F  2860               	line	333
 19579                           ;main.c: 333:    }
 19580                           	
 19581                           i1l244:	
 19582  0060                     	line	334
 19583                           	
 19584                           i1l4680:	
 19585  0060                     ;main.c: 334:    TMR1 = 53035;
 19586                           	movlw	0CFh
 19587  0060  30CF               	movlb 4	; select bank4
 19588  0061  0144               	movwf	(524+1)^0200h	;volatile
 19589  0062  008D               	movlw	02Bh
 19590  0063  302B               	movwf	(524)^0200h	;volatile
 19591  0064  008C               	line	335
 19592                           	
 19593                           i1l4682:	
 19594  0065                     ;main.c: 335:    PIR4bits.TMR1IF = 0;
 19595                           	movlb 14	; select bank14
 19596  0065  014E               	bcf	(1808)^0700h,0	;volatile
 19597  0066  1010               	line	337
 19598                           ;main.c: 337:   } else if (PIE3bits.RC1IE == 1 && PIR3bits.RC1IF == 1) {
 19599                           	goto	i1l247
 19600  0067  287A               	
 19601                           i1l243:	
 19602  0068                     	btfss	(1817)^0700h,5	;volatile
 19603  0068  1E99               	goto	u664_21
 19604  0069  286B               	goto	u664_20
 19605  006A  286C               u664_21:
 19606  006B                     	goto	i1l247
 19607  006B  287A               u664_20:
 19608  006C                     	
 19609                           i1l4684:	
 19610  006C                     	btfss	(1807)^0700h,5	;volatile
 19611  006C  1E8F               	goto	u665_21
 19612  006D  286F               	goto	u665_20
 19613  006E  2870               u665_21:
 19614  006F                     	goto	i1l247
 19615  006F  287A               u665_20:
 19616  0070                     	line	338
 19617                           	
 19618                           i1l4686:	
 19619  0070                     ;main.c: 338:    uartReceiveISR();
 19620                           	fcall	_uartReceiveISR
 19621  0070  319A  22AB  3180   	line	339
 19622                           	
 19623                           i1l4688:	
 19624  0073                     ;main.c: 339:    PIR3bits.RC1IF = 0;
 19625                           	movlb 14	; select bank14
 19626  0073  014E               	bcf	(1807)^0700h,5	;volatile
 19627  0074  128F               	goto	i1l247
 19628  0075  287A               	line	340
 19629                           ;main.c: 340:   }
 19630                           	
 19631                           i1l246:	
 19632  0076                     	goto	i1l247
 19633  0076  287A               	
 19634                           i1l245:	
 19635  0077                     	goto	i1l247
 19636  0077  287A               	line	341
 19637                           ;main.c: 341:  }
 19638                           	
 19639                           i1l242:	
 19640  0078                     	goto	i1l247
 19641  0078  287A               	
 19642                           i1l241:	
 19643  0079                     	goto	i1l247
 19644  0079  287A               	
 19645                           i1l236:	
 19646  007A                     	line	342
 19647                           	
 19648                           i1l247:	
 19649  007A                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
 19650  007A  107E               	retfie
 19651  007B  0009               	opt stack 0
 19652                           GLOBAL	__end_of_ISR
 19653                           	__end_of_ISR:
 19654  007C                     	signat	_ISR,89
 19655                           	global	_uartReceiveISR
 19656                           
 19657 ;; *************** function _uartReceiveISR *****************
 19658 ;; Defined at:
 19659 ;;		line 348 in file "main.c"
 19660 ;; Parameters:    Size  Location     Type
 19661 ;;		None
 19662 ;; Auto vars:     Size  Location     Type
 19663 ;;		None
 19664 ;; Return value:  Size  Location     Type
 19665 ;;                  1    wreg      void 
 19666 ;; Registers used:
 19667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19668 ;; Tracked objects:
 19669 ;;		On entry : 0/0
 19670 ;;		On exit  : 0/0
 19671 ;;		Unchanged: 0/0
 19672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19675 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19676 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19677 ;;Total ram usage:        1 bytes
 19678 ;; Hardware stack levels used:    1
 19679 ;; Hardware stack levels required when called:    1
 19680 ;; This function calls:
 19681 ;;		_strncpy
 19682 ;; This function is called by:
 19683 ;;		_ISR
 19684 ;; This function uses a non-reentrant model
 19685 ;;
 19686                           psect	text52,local,class=CODE,delta=2,merge=1,group=0
 19687                           	line	348
 19688                           global __ptext52
 19689                           __ptext52:	;psect for function _uartReceiveISR
 19690  1AAB                     psect	text52
 19691                           	file	"main.c"
 19692                           	line	348
 19693                           	global	__size_of_uartReceiveISR
 19694                           	__size_of_uartReceiveISR	equ	__end_of_uartReceiveISR-_uartReceiveISR
 19695  0051                     	
 19696                           _uartReceiveISR:	
 19697  1AAB                     ;incstack = 0
 19698                           	opt	stack 4
 19699                           ; Regs used in _uartReceiveISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19700                           	line	354
 19701                           	
 19702                           i1l4586:	
 19703  1AAB                     ;main.c: 350:  static char buffer[20];;main.c: 351:  static uint8_t rxCount = 0;;main.c:
                                  352:  static uint8_t checksum = 0;;main.c: 354:  if (RC1STAbits.OERR)
 19704                           	movlb 2	; select bank2
 19705  1AAB  0142               	btfss	(285)^0100h,1	;volatile
 19706  1AAC  1C9D               	goto	u647_21
 19707  1AAD  2AAF               	goto	u647_20
 19708  1AAE  2AB0               u647_21:
 19709  1AAF                     	goto	i1l4592
 19710  1AAF  2AB7               u647_20:
 19711  1AB0                     	line	357
 19712                           	
 19713                           i1l4588:	
 19714  1AB0                     ;main.c: 355:  {;main.c: 357:   RC1STAbits.CREN = 0;
 19715                           	bcf	(285)^0100h,4	;volatile
 19716  1AB0  121D               	line	358
 19717                           ;main.c: 358:   RC1STAbits.CREN = 1;
 19718                           	bsf	(285)^0100h,4	;volatile
 19719  1AB1  161D               	line	359
 19720                           	
 19721                           i1l4590:	
 19722  1AB2                     ;main.c: 359:   g_rxOErrCount++;
 19723                           	movlw	low(01h)
 19724  1AB2  3001               	movwf	(??_uartReceiveISR+0)+0
 19725  1AB3  00F6               	movf	(??_uartReceiveISR+0)+0,w
 19726  1AB4  0876               	addwf	(_g_rxOErrCount)^0100h,f	;volatile
 19727  1AB5  07EC               	goto	i1l4592
 19728  1AB6  2AB7               	line	360
 19729                           ;main.c: 360:  }
 19730                           	
 19731                           i1l256:	
 19732  1AB7                     	line	361
 19733                           	
 19734                           i1l4592:	
 19735  1AB7                     ;main.c: 361:  if (RC1STAbits.FERR)
 19736                           	btfss	(285)^0100h,2	;volatile
 19737  1AB7  1D1D               	goto	u648_21
 19738  1AB8  2ABA               	goto	u648_20
 19739  1AB9  2ABB               u648_21:
 19740  1ABA                     	goto	i1l4598
 19741  1ABA  2AC2               u648_20:
 19742  1ABB                     	line	363
 19743                           	
 19744                           i1l4594:	
 19745  1ABB                     ;main.c: 362:  {;main.c: 363:   RC1STAbits.SPEN = 0;
 19746                           	bcf	(285)^0100h,7	;volatile
 19747  1ABB  139D               	line	364
 19748                           ;main.c: 364:   RC1STAbits.SPEN = 1;
 19749                           	bsf	(285)^0100h,7	;volatile
 19750  1ABC  179D               	line	365
 19751                           	
 19752                           i1l4596:	
 19753  1ABD                     ;main.c: 365:   g_rxFErrCount++;
 19754                           	movlw	low(01h)
 19755  1ABD  3001               	movwf	(??_uartReceiveISR+0)+0
 19756  1ABE  00F6               	movf	(??_uartReceiveISR+0)+0,w
 19757  1ABF  0876               	addwf	(_g_rxFErrCount)^0100h,f	;volatile
 19758  1AC0  07ED               	goto	i1l4598
 19759  1AC1  2AC2               	line	366
 19760                           ;main.c: 366:  }
 19761                           	
 19762                           i1l257:	
 19763  1AC2                     	line	368
 19764                           	
 19765                           i1l4598:	
 19766  1AC2                     ;main.c: 368:  if (rxCount < sizeof(g_dataPacket)) {
 19767                           	movlw	low(0Fh)
 19768  1AC2  300F               	subwf	(uartReceiveISR@rxCount),w
 19769  1AC3  0279               	skipnc
 19770  1AC4  1803               	goto	u649_21
 19771  1AC5  2AC7               	goto	u649_20
 19772  1AC6  2AC8               u649_21:
 19773  1AC7                     	goto	i1l4604
 19774  1AC7  2ADF               u649_20:
 19775  1AC8                     	line	369
 19776                           	
 19777                           i1l4600:	
 19778  1AC8                     ;main.c: 369:   buffer[rxCount] = RC1REG;
 19779                           	movf	(281)^0100h,w	;volatile
 19780  1AC8  0819               	movwf	(??_uartReceiveISR+0)+0
 19781  1AC9  00F6               	movf	(uartReceiveISR@rxCount),w
 19782  1ACA  0879               	addlw	low(uartReceiveISR@buffer|((0x2)<<8))&0ffh
 19783  1ACB  3E2C               	movwf	fsr1l
 19784  1ACC  0086               	movlw 2	; select bank4/5
 19785  1ACD  3002               	movwf fsr1h	
 19786  1ACE  0087               	
 19787                           	movf	(??_uartReceiveISR+0)+0,w
 19788  1ACF  0876               	movwf	indf1
 19789  1AD0  0081               	line	370
 19790                           ;main.c: 370:   checksum ^= buffer[rxCount];
 19791                           	movf	(uartReceiveISR@rxCount),w
 19792  1AD1  0879               	addlw	low(uartReceiveISR@buffer|((0x2)<<8))&0ffh
 19793  1AD2  3E2C               	movwf	fsr1l
 19794  1AD3  0086               	movlw 2	; select bank4/5
 19795  1AD4  3002               	movwf fsr1h	
 19796  1AD5  0087               	
 19797                           	movf	indf1,w
 19798  1AD6  0801               	movwf	(??_uartReceiveISR+0)+0
 19799  1AD7  00F6               	movf	(??_uartReceiveISR+0)+0,w
 19800  1AD8  0876               	xorwf	(uartReceiveISR@checksum)^0100h,f
 19801  1AD9  06EA               	line	371
 19802                           	
 19803                           i1l4602:	
 19804  1ADA                     ;main.c: 371:   rxCount++;
 19805                           	movlw	low(01h)
 19806  1ADA  3001               	movwf	(??_uartReceiveISR+0)+0
 19807  1ADB  00F6               	movf	(??_uartReceiveISR+0)+0,w
 19808  1ADC  0876               	addwf	(uartReceiveISR@rxCount),f
 19809  1ADD  07F9               	line	372
 19810                           ;main.c: 372:  } else {
 19811                           	goto	i1l261
 19812  1ADE  2AFB               	
 19813                           i1l258:	
 19814  1ADF                     	line	373
 19815                           	
 19816                           i1l4604:	
 19817  1ADF                     ;main.c: 373:   if (RC1REG == checksum) {
 19818                           	movf	(281)^0100h,w	;volatile
 19819  1ADF  0819               	xorwf	(uartReceiveISR@checksum)^0100h,w
 19820  1AE0  066A               	skipz
 19821  1AE1  1D03               	goto	u650_21
 19822  1AE2  2AE4               	goto	u650_20
 19823  1AE3  2AE5               u650_21:
 19824  1AE4                     	goto	i1l4610
 19825  1AE4  2AF7               u650_20:
 19826  1AE5                     	line	374
 19827                           	
 19828                           i1l4606:	
 19829  1AE5                     ;main.c: 374:    g_dataReady = 1;
 19830                           	movlw	low(01h)
 19831  1AE5  3001               	movwf	(??_uartReceiveISR+0)+0
 19832  1AE6  00F6               	movf	(??_uartReceiveISR+0)+0,w
 19833  1AE7  0876               	movlb 3	; select bank3
 19834  1AE8  0143               	movwf	(_g_dataReady)^0180h	;volatile
 19835  1AE9  00EA               	line	375
 19836                           	
 19837                           i1l4608:	
 19838  1AEA                     ;main.c: 375:    strncpy((char *) &g_dataPacket, buffer, sizeof(g_dataPacket));
 19839                           	movlw	(low(uartReceiveISR@buffer|((0x2)<<8)))&0ffh
 19840  1AEA  302C               	movwf	(??_uartReceiveISR+0)+0
 19841  1AEB  00F6               	movf	(??_uartReceiveISR+0)+0,w
 19842  1AEC  0876               	movwf	(strncpy@s)
 19843  1AED  00F0               	movlw	0Fh
 19844  1AEE  300F               	movwf	(strncpy@n)
 19845  1AEF  00F1               	movlw	0
 19846  1AF0  3000               	movwf	((strncpy@n))+1
 19847  1AF1  00F2               	movlw	(low(_g_dataPacket|((0x2)<<8)))&0ffh
 19848  1AF2  3040               	fcall	_strncpy
 19849  1AF3  3199  219D  319A   	goto	i1l4610
 19850  1AF6  2AF7               	line	376
 19851                           ;main.c: 376:   }
 19852                           	
 19853                           i1l260:	
 19854  1AF7                     	line	377
 19855                           	
 19856                           i1l4610:	
 19857  1AF7                     ;main.c: 377:   checksum = 0;
 19858                           	movlb 2	; select bank2
 19859  1AF7  0142               	clrf	(uartReceiveISR@checksum)^0100h
 19860  1AF8  01EA               	line	378
 19861                           	
 19862                           i1l4612:	
 19863  1AF9                     ;main.c: 378:   rxCount = 0;
 19864                           	clrf	(uartReceiveISR@rxCount)
 19865  1AF9  01F9               	goto	i1l261
 19866  1AFA  2AFB               	line	379
 19867                           ;main.c: 379:  }
 19868                           	
 19869                           i1l259:	
 19870  1AFB                     	line	380
 19871                           	
 19872                           i1l261:	
 19873  1AFB                     	return
 19874  1AFB  0008               	opt stack 0
 19875                           GLOBAL	__end_of_uartReceiveISR
 19876                           	__end_of_uartReceiveISR:
 19877  1AFC                     	signat	_uartReceiveISR,89
 19878                           	global	_strncpy
 19879                           
 19880 ;; *************** function _strncpy *****************
 19881 ;; Defined at:
 19882 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncpy.c"
 19883 ;; Parameters:    Size  Location     Type
 19884 ;;  d               1    wreg     PTR unsigned char 
 19885 ;;		 -> g_dataPacket(15), 
 19886 ;;  s               1    0[COMMON] PTR const unsigned char 
 19887 ;;		 -> uartReceiveISR@buffer(20), 
 19888 ;;  n               2    1[COMMON] unsigned int 
 19889 ;; Auto vars:     Size  Location     Type
 19890 ;;  d               1    4[COMMON] PTR unsigned char 
 19891 ;;		 -> g_dataPacket(15), 
 19892 ;;  cp              1    5[COMMON] PTR unsigned char 
 19893 ;;		 -> g_dataPacket(15), 
 19894 ;; Return value:  Size  Location     Type
 19895 ;;                  1    wreg      PTR unsigned char 
 19896 ;; Registers used:
 19897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 19898 ;; Tracked objects:
 19899 ;;		On entry : 0/0
 19900 ;;		On exit  : 0/0
 19901 ;;		Unchanged: 0/0
 19902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19903 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19904 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19905 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19906 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19907 ;;Total ram usage:        6 bytes
 19908 ;; Hardware stack levels used:    1
 19909 ;; This function calls:
 19910 ;;		Nothing
 19911 ;; This function is called by:
 19912 ;;		_uartReceiveISR
 19913 ;; This function uses a non-reentrant model
 19914 ;;
 19915                           psect	text53,local,class=CODE,delta=2,merge=1,group=2
 19916                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncpy.c"
 19917                           	line	7
 19918                           global __ptext53
 19919                           __ptext53:	;psect for function _strncpy
 19920  199D                     psect	text53
 19921                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncpy.c"
 19922                           	line	7
 19923                           	global	__size_of_strncpy
 19924                           	__size_of_strncpy	equ	__end_of_strncpy-_strncpy
 19925  003E                     	
 19926                           _strncpy:	
 19927  199D                     ;incstack = 0
 19928                           	opt	stack 4
 19929                           ; Regs used in _strncpy: [wreg-fsr1h+status,2+status,0]
 19930                           ;strncpy@d stored from wreg
 19931                           	movwf	(strncpy@d)
 19932  199D  00F4               	line	11
 19933                           	
 19934                           i1l4364:	
 19935  199E                     	movf	(strncpy@d),w
 19936  199E  0874               	movwf	(??_strncpy+0)+0
 19937  199F  00F3               	movf	(??_strncpy+0)+0,w
 19938  19A0  0873               	movwf	(strncpy@cp)
 19939  19A1  00F5               	line	12
 19940                           	goto	i1l4372
 19941  19A2  29BB               	
 19942                           i1l1079:	
 19943  19A3                     	line	13
 19944                           	
 19945                           i1l4366:	
 19946  19A3                     	movlw	01h
 19947  19A3  3001               	subwf	(strncpy@n),f
 19948  19A4  02F1               	movlw	0
 19949  19A5  3000               	subwfb	(strncpy@n+1),f
 19950  19A6  3BF2               	line	14
 19951                           	
 19952                           i1l4368:	
 19953  19A7                     	movf	(strncpy@cp),w
 19954  19A7  0875               	movwf	fsr1l
 19955  19A8  0086               	movlw 2	; select bank4/5
 19956  19A9  3002               	movwf fsr1h	
 19957  19AA  0087               	
 19958                           	incf	(strncpy@cp),f
 19959  19AB  0AF5               	movf	(strncpy@s),w
 19960  19AC  0870               	movwf	fsr0l
 19961  19AD  0084               	movlw 2	; select bank4/5
 19962  19AE  3002               	movwf fsr0h	
 19963  19AF  0085               	
 19964                           	incf	(strncpy@s),f
 19965  19B0  0AF0               	movf	indf0,w
 19966  19B1  0800               	movwi	[0]fsr1
 19967  19B2  3FC0               	movf	wreg
 19968  19B3  0889               	btfss	status,2
 19969  19B4  1D03               	goto	u616_21
 19970  19B5  29B7               	goto	u616_20
 19971  19B6  29B8               u616_21:
 19972  19B7                     	goto	i1l4372
 19973  19B7  29BB               u616_20:
 19974  19B8                     	goto	i1l4378
 19975  19B8  29CD               	line	15
 19976                           	
 19977                           i1l4370:	
 19978  19B9                     	goto	i1l4378
 19979  19B9  29CD               	
 19980                           i1l1080:	
 19981  19BA                     	goto	i1l4372
 19982  19BA  29BB               	line	16
 19983                           	
 19984                           i1l1078:	
 19985  19BB                     	line	12
 19986                           	
 19987                           i1l4372:	
 19988  19BB                     	movf	((strncpy@n)),w
 19989  19BB  0871               iorwf	((strncpy@n+1)),w
 19990  19BC  0472               	btfss	status,2
 19991  19BD  1D03               	goto	u617_21
 19992  19BE  29C0               	goto	u617_20
 19993  19BF  29C1               u617_21:
 19994  19C0                     	goto	i1l4366
 19995  19C0  29A3               u617_20:
 19996  19C1                     	goto	i1l4378
 19997  19C1  29CD               	
 19998                           i1l1081:	
 19999  19C2                     	line	17
 20000                           	goto	i1l4378
 20001  19C2  29CD               	
 20002                           i1l1083:	
 20003  19C3                     	line	18
 20004                           	
 20005                           i1l4374:	
 20006  19C3                     	movf	(strncpy@cp),w
 20007  19C3  0875               	movwf	fsr1l
 20008  19C4  0086               	movlw 2	; select bank4/5
 20009  19C5  3002               	movwf fsr1h	
 20010  19C6  0087               	
 20011                           	clrf	indf1
 20012  19C7  0181               	
 20013                           i1l4376:	
 20014  19C8                     	movlw	low(01h)
 20015  19C8  3001               	movwf	(??_strncpy+0)+0
 20016  19C9  00F3               	movf	(??_strncpy+0)+0,w
 20017  19CA  0873               	addwf	(strncpy@cp),f
 20018  19CB  07F5               	goto	i1l4378
 20019  19CC  29CD               	
 20020                           i1l1082:	
 20021  19CD                     	line	17
 20022                           	
 20023                           i1l4378:	
 20024  19CD                     	movlw	01h
 20025  19CD  3001               	subwf	(strncpy@n),f
 20026  19CE  02F1               	movlw	0
 20027  19CF  3000               	subwfb	(strncpy@n+1),f
 20028  19D0  3BF2               		incf	(((strncpy@n))),w
 20029  19D1  0A71               	skipz
 20030  19D2  1D03               	goto	u618_21
 20031  19D3  29D8               	incf	(((strncpy@n+1))),w
 20032  19D4  0A72               	btfss	status,2
 20033  19D5  1D03               	goto	u618_21
 20034  19D6  29D8               	goto	u618_20
 20035  19D7  29D9               u618_21:
 20036  19D8                     	goto	i1l4374
 20037  19D8  29C3               u618_20:
 20038  19D9                     	goto	i1l1085
 20039  19D9  29DA               	
 20040                           i1l1084:	
 20041  19DA                     	line	23
 20042                           ;	Return value of _strncpy is never used
 20043                           	
 20044                           i1l1085:	
 20045  19DA                     	return
 20046  19DA  0008               	opt stack 0
 20047                           GLOBAL	__end_of_strncpy
 20048                           	__end_of_strncpy:
 20049  19DB                     	signat	_strncpy,12409
 20050                           	global	_rotISR
 20051                           
 20052 ;; *************** function _rotISR *****************
 20053 ;; Defined at:
 20054 ;;		line 382 in file "main.c"
 20055 ;; Parameters:    Size  Location     Type
 20056 ;;		None
 20057 ;; Auto vars:     Size  Location     Type
 20058 ;;  input           1    7[COMMON] unsigned char 
 20059 ;; Return value:  Size  Location     Type
 20060 ;;                  1    wreg      void 
 20061 ;; Registers used:
 20062 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 20063 ;; Tracked objects:
 20064 ;;		On entry : 0/0
 20065 ;;		On exit  : 0/0
 20066 ;;		Unchanged: 0/0
 20067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20069 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20070 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20071 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20072 ;;Total ram usage:        8 bytes
 20073 ;; Hardware stack levels used:    1
 20074 ;; This function calls:
 20075 ;;		Nothing
 20076 ;; This function is called by:
 20077 ;;		_ISR
 20078 ;; This function uses a non-reentrant model
 20079 ;;
 20080                           psect	text54,local,class=CODE,delta=2,merge=1,group=0
 20081                           	file	"main.c"
 20082                           	line	382
 20083                           global __ptext54
 20084                           __ptext54:	;psect for function _rotISR
 20085  1960                     psect	text54
 20086                           	file	"main.c"
 20087                           	line	382
 20088                           	global	__size_of_rotISR
 20089                           	__size_of_rotISR	equ	__end_of_rotISR-_rotISR
 20090  003D                     	
 20091                           _rotISR:	
 20092  1960                     ;incstack = 0
 20093                           	opt	stack 5
 20094                           ; Regs used in _rotISR: [wreg-fsr0h+status,2+status,0+pclath]
 20095                           	line	386
 20096                           	
 20097                           i1l4572:	
 20098  1960                     ;main.c: 384:  uint8_t input;;main.c: 386:  input = (PORTAbits.RA5 << 1) | PORTAbits.RA4
                                 ;
 20099                           	movlb 0	; select bank0
 20100  1960  0140               	swapf	(12),w	;volatile
 20101  1961  0E0C               	andlw	(1<<1)-1
 20102  1962  3901               	movwf	(??_rotISR+0)+0
 20103  1963  00F0               	swapf	(12),w	;volatile
 20104  1964  0E0C               	rrf	wreg,f
 20105  1965  0C89               	andlw	(1<<1)-1
 20106  1966  3901               	addwf	wreg,w
 20107  1967  0709               	iorwf	(??_rotISR+0)+0,w
 20108  1968  0470               	movwf	(??_rotISR+1)+0
 20109  1969  00F1               	movf	(??_rotISR+1)+0,w
 20110  196A  0871               	movwf	(rotISR@input)
 20111  196B  00F7               	line	389
 20112                           	
 20113                           i1l4574:	
 20114  196C                     ;main.c: 389:  g_curRotState = transition_table[g_curRotState & 0b00000111][input];
 20115                           	movf	(_g_curRotState),w	;volatile
 20116  196C  087B               	andlw	07h
 20117  196D  3907               	movwf	(??_rotISR+0)+0
 20118  196E  00F0               	clrf	(??_rotISR+0)+0+1
 20119  196F  01F1               	lslf	(??_rotISR+0)+0,f
 20120  1970  35F0               	rlf	(??_rotISR+0)+1,f
 20121  1971  0DF1               	lslf	(??_rotISR+0)+0,f
 20122  1972  35F0               	rlf	(??_rotISR+0)+1,f
 20123  1973  0DF1               	movlw	low(((_transition_table)|8000h))
 20124  1974  3000               	movwf	(??_rotISR+2)+0
 20125  1975  00F2               	movlw	high(((_transition_table)|8000h))
 20126  1976  30A0               	movwf	(??_rotISR+2)+0+1
 20127  1977  00F3               	movf	0+(??_rotISR+0)+0,w
 20128  1978  0870               	addwf	0+(??_rotISR+2)+0,w
 20129  1979  0772               	movwf	(??_rotISR+4)+0
 20130  197A  00F4               	movf	1+(??_rotISR+0)+0,w
 20131  197B  0871               	addwfc	1+(??_rotISR+2)+0,w
 20132  197C  3D73               	movwf	1+(??_rotISR+4)+0
 20133  197D  00F5               	movf	(rotISR@input),w
 20134  197E  0877               	addwf	(??_rotISR+4)+0,w
 20135  197F  0774               	movwf	fsr0l
 20136  1980  0084               	movf	(??_rotISR+4)+1,w
 20137  1981  0875               	skipnc
 20138  1982  1803               	incf	(??_rotISR+4)+1,w
 20139  1983  0A75               	movwf	fsr0h
 20140  1984  0085               
 20141                           	movf	indf0,w ;code access
 20142  1985  0800               	movwf	(??_rotISR+6)+0
 20143  1986  00F6               	movf	(??_rotISR+6)+0,w
 20144  1987  0876               	movwf	(_g_curRotState)	;volatile
 20145  1988  00FB               	line	392
 20146                           	
 20147                           i1l4576:	
 20148  1989                     ;main.c: 392:  if (g_curRotState & CW_FLAG) g_rotDir = ROT_CW;
 20149                           	btfss	(_g_curRotState),(7)&7	;volatile
 20150  1989  1FFB               	goto	u645_21
 20151  198A  298C               	goto	u645_20
 20152  198B  298D               u645_21:
 20153  198C                     	goto	i1l4580
 20154  198C  2992               u645_20:
 20155  198D                     	
 20156                           i1l4578:	
 20157  198D                     	movlw	low(01h)
 20158  198D  3001               	movwf	(??_rotISR+0)+0
 20159  198E  00F0               	movf	(??_rotISR+0)+0,w
 20160  198F  0870               	movwf	(_g_rotDir)	;volatile
 20161  1990  00FA               	goto	i1l4580
 20162  1991  2992               	
 20163                           i1l264:	
 20164  1992                     	line	393
 20165                           	
 20166                           i1l4580:	
 20167  1992                     ;main.c: 393:  if (g_curRotState & CCW_FLAG) g_rotDir = ROT_CCW;
 20168                           	btfss	(_g_curRotState),(6)&7	;volatile
 20169  1992  1F7B               	goto	u646_21
 20170  1993  2995               	goto	u646_20
 20171  1994  2996               u646_21:
 20172  1995                     	goto	i1l4584
 20173  1995  299B               u646_20:
 20174  1996                     	
 20175                           i1l4582:	
 20176  1996                     	movlw	low(02h)
 20177  1996  3002               	movwf	(??_rotISR+0)+0
 20178  1997  00F0               	movf	(??_rotISR+0)+0,w
 20179  1998  0870               	movwf	(_g_rotDir)	;volatile
 20180  1999  00FA               	goto	i1l4584
 20181  199A  299B               	
 20182                           i1l265:	
 20183  199B                     	line	394
 20184                           	
 20185                           i1l4584:	
 20186  199B                     ;main.c: 394:  __nop();
 20187                           	opt	asmopt_push
 20188                           	opt	asmopt_off
 20189                           	nop
 20190  199B  0000               	opt	asmopt_pop
 20191                           	line	395
 20192                           	
 20193                           i1l266:	
 20194  199C                     	return
 20195  199C  0008               	opt stack 0
 20196                           GLOBAL	__end_of_rotISR
 20197                           	__end_of_rotISR:
 20198  199D                     	signat	_rotISR,89
 20199                           	global	_pushButtonISR
 20200                           
 20201 ;; *************** function _pushButtonISR *****************
 20202 ;; Defined at:
 20203 ;;		line 397 in file "main.c"
 20204 ;; Parameters:    Size  Location     Type
 20205 ;;		None
 20206 ;; Auto vars:     Size  Location     Type
 20207 ;;		None
 20208 ;; Return value:  Size  Location     Type
 20209 ;;                  1    wreg      void 
 20210 ;; Registers used:
 20211 ;;		wreg, status,2
 20212 ;; Tracked objects:
 20213 ;;		On entry : 0/0
 20214 ;;		On exit  : 0/0
 20215 ;;		Unchanged: 0/0
 20216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20219 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20220 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20221 ;;Total ram usage:        1 bytes
 20222 ;; Hardware stack levels used:    1
 20223 ;; This function calls:
 20224 ;;		Nothing
 20225 ;; This function is called by:
 20226 ;;		_ISR
 20227 ;; This function uses a non-reentrant model
 20228 ;;
 20229                           psect	text55,local,class=CODE,delta=2,merge=1,group=0
 20230                           	line	397
 20231                           global __ptext55
 20232                           __ptext55:	;psect for function _pushButtonISR
 20233  18BF                     psect	text55
 20234                           	file	"main.c"
 20235                           	line	397
 20236                           	global	__size_of_pushButtonISR
 20237                           	__size_of_pushButtonISR	equ	__end_of_pushButtonISR-_pushButtonISR
 20238  0034                     	
 20239                           _pushButtonISR:	
 20240  18BF                     ;incstack = 0
 20241                           	opt	stack 5
 20242                           ; Regs used in _pushButtonISR: [wreg+status,2]
 20243                           	line	400
 20244                           	
 20245                           i1l4554:	
 20246  18BF                     ;main.c: 400:  if (!PORTAbits.RA7) {
 20247                           	movlb 0	; select bank0
 20248  18BF  0140               	btfsc	(12),7	;volatile
 20249  18C0  1B8C               	goto	u640_21
 20250  18C1  28C3               	goto	u640_20
 20251  18C2  28C4               u640_21:
 20252  18C3                     	goto	i1l4558
 20253  18C3  28C6               u640_20:
 20254  18C4                     	line	401
 20255                           	
 20256                           i1l4556:	
 20257  18C4                     ;main.c: 401:   g_10msTick = 0;
 20258                           	clrf	(_g_10msTick)	;volatile
 20259  18C4  01FD               	line	402
 20260                           ;main.c: 402:  } else {
 20261                           	goto	i1l275
 20262  18C5  28F2               	
 20263                           i1l269:	
 20264  18C6                     	line	403
 20265                           	
 20266                           i1l4558:	
 20267  18C6                     ;main.c: 403:   if ((g_10msTick > 5) & (g_10msTick <= 50))
 20268                           	movlw	low(06h)
 20269  18C6  3006               	subwf	(_g_10msTick),w	;volatile
 20270  18C7  027D               	skipc
 20271  18C8  1C03               	goto	u641_21
 20272  18C9  28CB               	goto	u641_20
 20273  18CA  28CC               u641_21:
 20274  18CB                     	goto	i1l4564
 20275  18CB  28D8               u641_20:
 20276  18CC                     	
 20277                           i1l4560:	
 20278  18CC                     	movlw	low(033h)
 20279  18CC  3033               	subwf	(_g_10msTick),w	;volatile
 20280  18CD  027D               	skipnc
 20281  18CE  1803               	goto	u642_21
 20282  18CF  28D1               	goto	u642_20
 20283  18D0  28D2               u642_21:
 20284  18D1                     	goto	i1l4564
 20285  18D1  28D8               u642_20:
 20286  18D2                     	line	405
 20287                           	
 20288                           i1l4562:	
 20289  18D2                     ;main.c: 405:    g_pbState = PB_SHORT;
 20290                           	movlw	low(01h)
 20291  18D2  3001               	movwf	(??_pushButtonISR+0)+0
 20292  18D3  00F0               	movf	(??_pushButtonISR+0)+0,w
 20293  18D4  0870               	movlb 2	; select bank2
 20294  18D5  0142               	movwf	(_g_pbState)^0100h	;volatile
 20295  18D6  00EB               	goto	i1l275
 20296  18D7  28F2               	line	406
 20297                           ;main.c: 406:   else if ((g_10msTick > 50) & (g_10msTick <= 150))
 20298                           	
 20299                           i1l271:	
 20300  18D8                     	
 20301                           i1l4564:	
 20302  18D8                     	movlw	low(033h)
 20303  18D8  3033               	subwf	(_g_10msTick),w	;volatile
 20304  18D9  027D               	skipc
 20305  18DA  1C03               	goto	u643_21
 20306  18DB  28DD               	goto	u643_20
 20307  18DC  28DE               u643_21:
 20308  18DD                     	goto	i1l4570
 20309  18DD  28EA               u643_20:
 20310  18DE                     	
 20311                           i1l4566:	
 20312  18DE                     	movlw	low(097h)
 20313  18DE  3097               	subwf	(_g_10msTick),w	;volatile
 20314  18DF  027D               	skipnc
 20315  18E0  1803               	goto	u644_21
 20316  18E1  28E3               	goto	u644_20
 20317  18E2  28E4               u644_21:
 20318  18E3                     	goto	i1l4570
 20319  18E3  28EA               u644_20:
 20320  18E4                     	line	408
 20321                           	
 20322                           i1l4568:	
 20323  18E4                     ;main.c: 408:    g_pbState = PB_LONG;
 20324                           	movlw	low(02h)
 20325  18E4  3002               	movwf	(??_pushButtonISR+0)+0
 20326  18E5  00F0               	movf	(??_pushButtonISR+0)+0,w
 20327  18E6  0870               	movlb 2	; select bank2
 20328  18E7  0142               	movwf	(_g_pbState)^0100h	;volatile
 20329  18E8  00EB               	goto	i1l275
 20330  18E9  28F2               	line	409
 20331                           ;main.c: 409:   else
 20332                           	
 20333                           i1l273:	
 20334  18EA                     	line	411
 20335                           	
 20336                           i1l4570:	
 20337  18EA                     ;main.c: 411:    g_pbState = PB_ABORT;
 20338                           	movlw	low(03h)
 20339  18EA  3003               	movwf	(??_pushButtonISR+0)+0
 20340  18EB  00F0               	movf	(??_pushButtonISR+0)+0,w
 20341  18EC  0870               	movlb 2	; select bank2
 20342  18ED  0142               	movwf	(_g_pbState)^0100h	;volatile
 20343  18EE  00EB               	goto	i1l275
 20344  18EF  28F2               	
 20345                           i1l274:	
 20346  18F0                     	goto	i1l275
 20347  18F0  28F2               	
 20348                           i1l272:	
 20349  18F1                     	goto	i1l275
 20350  18F1  28F2               	line	412
 20351                           ;main.c: 412:  }
 20352                           	
 20353                           i1l270:	
 20354  18F2                     	line	413
 20355                           	
 20356                           i1l275:	
 20357  18F2                     	return
 20358  18F2  0008               	opt stack 0
 20359                           GLOBAL	__end_of_pushButtonISR
 20360                           	__end_of_pushButtonISR:
 20361  18F3                     	signat	_pushButtonISR,89
 20362                           global	___latbits
 20363                           ___latbits	equ	3
 20364  0003                     	global	btemp
 20365                           	btemp set 07Eh
 20366  007E                     
 20367                           	DABS	1,126,2	;btemp
 20368                           	global	int$flags
 20369                           	int$flags	set btemp
 20370  007E                     	global	wtemp0
 20371                           	wtemp0 set btemp+0
 20372  007E                     	end


Data Sizes:
    Strings     169
    Constant    28
    Data        8
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     58      78
    BANK3            80     62      78
    BANK4            80      0      55
    BANK5            80      0      80
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    strncpy@s	PTR const unsigned char  size(1) Largest target is 20
		 -> uartReceiveISR@buffer(BANK4[20]), 

    strncpy@d	PTR unsigned char  size(1) Largest target is 15
		 -> g_dataPacket(BANK4[15]), 

    strncpy@cp	PTR unsigned char  size(1) Largest target is 15
		 -> g_dataPacket(BANK4[15]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK2[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK2[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK5[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK5[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_2(CODE[52]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 61
		 -> showMenu@s(BANK3[61]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK2[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 61
		 -> showMenu@s(BANK3[61]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    S1213_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 61
		 -> showMenu@s(BANK3[61]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 61
		 -> showMenu@s(BANK3[61]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_2(CODE[52]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_2(CODE[52]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 52
		 -> STR_2(CODE[52]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK2[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    OLED_print_xy@s	PTR unsigned char  size(2) Largest target is 61
		 -> STR_3(CODE[49]), showMenu@s(BANK3[61]), STR_1(CODE[49]), 

    sp__strncpy	PTR unsigned char  size(1) Largest target is 15
		 -> g_dataPacket(BANK4[15]), 

    menuInput@menu	PTR unsigned char  size(1) Largest target is 1
		 -> showMenu@menu(BANK3[1]), 

    menuInput@page	PTR unsigned char  size(1) Largest target is 1
		 -> showMenu@page(BANK3[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_rotISR
    _uartReceiveISR->_strncpy

Critical Paths under _main in BANK0

    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->___wmul
    _atoi->_isdigit
    _OLED_scrollDisplayRight->_OLED_command
    _OLED_scrollDisplayLeft->_OLED_command
    _OLED_returnHome->_OLED_command
    _OLED_print_xy->_OLED_command
    _OLED_print_xy->_OLED_write
    _OLED_write->_OLED_send
    _readAnalogValues->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _handleSensorData->___xxtofl
    _OLED_init->_OLED_command
    _OLED_command->_OLED_send
    _OLED_send->_OLED_write4bits

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_showMenu
    _showMenu->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_showMenu

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ISR in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0   38933
                                             57 BANK2      1     1      0
                       _OLED_command
                          _OLED_init
                    _OLED_returnHome
                   _handleSensorData
                         _initialize
                   _readAnalogValues
                           _showMenu
                       _uartSendByte
 ---------------------------------------------------------------------------------
 (1) _uartSendByte                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _showMenu                                            64    64      0   31411
                                             55 BANK2      2     2      0
                                              0 BANK3     62    62      0
                      _OLED_print_xy
                              _getPB
                          _menuInput
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             32    10     22   27712
                                             23 BANK2     32    10     22
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   27396
                                             15 BANK2      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           39    37      2   27059
                                             72 BANK1      8     6      2
                                              0 BANK2     15    15      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             10     6      4     410
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              66    61      5   21507
                                             76 BANK0      4     4      0
                                             10 BANK1     62    57      5
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 BANK0      8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               8     6      2     641
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2907
                                             16 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               8     6      2     123
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1149
                                              8 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     834
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             66 BANK0     10     6      4
                                              0 BANK1     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       16    12      4     287
                                              0 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             11     7      4     381
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2637
                                             40 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             24    16      8    2288
                                              0 BANK0     24    16      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              16     8      8     790
                                             40 BANK0     16     8      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     394
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     448
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     452
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1237
                                              6 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              5     3      2     207
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _menuInput                                           11     6      5    2352
                                              7 BANK0     11     6      5
                    _OLED_returnHome
             _OLED_scrollDisplayLeft
            _OLED_scrollDisplayRight
                              _getPB
                          _getRotDir
 ---------------------------------------------------------------------------------
 (3) _getRotDir                                            2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _getPB                                                2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _OLED_scrollDisplayRight                              0     0      0     352
                       _OLED_command
 ---------------------------------------------------------------------------------
 (3) _OLED_scrollDisplayLeft                               0     0      0     352
                       _OLED_command
 ---------------------------------------------------------------------------------
 (3) _OLED_returnHome                                      0     0      0     352
                       _OLED_command
 ---------------------------------------------------------------------------------
 (2) _OLED_print_xy                                        9     6      3    1273
                                              7 BANK0      9     6      3
                       _OLED_command
                         _OLED_write
 ---------------------------------------------------------------------------------
 (3) _OLED_write                                           1     1      0     352
                                              6 BANK0      1     1      0
                          _OLED_send
                  _OLED_waitForReady
 ---------------------------------------------------------------------------------
 (1) _readAnalogValues                                     6     6      0    5882
                                             66 BANK0      6     6      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             26    18      8    3329
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             26    18      8    2033
                                             40 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _handleSensorData                                     4     4      0     474
                                             14 BANK0      4     4      0
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _OLED_init                                            1     1      0     440
                                              7 BANK0      1     1      0
                       _OLED_command
                    _OLED_write4bits
 ---------------------------------------------------------------------------------
 (4) _OLED_command                                         1     1      0     352
                                              6 BANK0      1     1      0
                          _OLED_send
                  _OLED_waitForReady
 ---------------------------------------------------------------------------------
 (5) _OLED_waitForReady                                    1     1      0      24
                                              0 BANK0      1     1      0
                   _OLED_pulseEnable
 ---------------------------------------------------------------------------------
 (5) _OLED_send                                            3     2      1     306
                                              3 BANK0      3     2      1
                    _OLED_write4bits
 ---------------------------------------------------------------------------------
 (6) _OLED_write4bits                                      3     3      0      88
                                              0 BANK0      3     3      0
                   _OLED_pulseEnable
 ---------------------------------------------------------------------------------
 (6) _OLED_pulseEnable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 1     1      0     349
                                              8 COMMON     1     1      0
                      _pushButtonISR
                             _rotISR
                     _uartReceiveISR
 ---------------------------------------------------------------------------------
 (11) _uartReceiveISR                                      1     1      0     326
                                              6 COMMON     1     1      0
                            _strncpy
 ---------------------------------------------------------------------------------
 (12) _strncpy                                             6     3      3     326
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (11) _rotISR                                              8     8      0      23
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (11) _pushButtonISR                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OLED_command
     _OLED_send
       _OLED_write4bits
         _OLED_pulseEnable
     _OLED_waitForReady
       _OLED_pulseEnable
   _OLED_init
     _OLED_command
       _OLED_send
         _OLED_write4bits
           _OLED_pulseEnable
       _OLED_waitForReady
         _OLED_pulseEnable
     _OLED_write4bits
       _OLED_pulseEnable
   _OLED_returnHome
     _OLED_command
       _OLED_send
         _OLED_write4bits
           _OLED_pulseEnable
       _OLED_waitForReady
         _OLED_pulseEnable
   _handleSensorData
     ___xxtofl
   _initialize
   _readAnalogValues
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl
   _showMenu
     _OLED_print_xy
       _OLED_command
         _OLED_send
           _OLED_write4bits
             _OLED_pulseEnable
         _OLED_waitForReady
           _OLED_pulseEnable
       _OLED_write
         _OLED_send
           _OLED_write4bits
             _OLED_pulseEnable
         _OLED_waitForReady
           _OLED_pulseEnable
     _getPB
     _menuInput
       _OLED_returnHome
         _OLED_command
           _OLED_send
             _OLED_write4bits
               _OLED_pulseEnable
           _OLED_waitForReady
             _OLED_pulseEnable
       _OLED_scrollDisplayLeft
         _OLED_command
           _OLED_send
             _OLED_write4bits
               _OLED_pulseEnable
           _OLED_waitForReady
             _OLED_pulseEnable
       _OLED_scrollDisplayRight
         _OLED_command
           _OLED_send
             _OLED_write4bits
               _OLED_pulseEnable
           _OLED_waitForReady
             _OLED_pulseEnable
       _getPB
       _getRotDir
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___flmul
               __Umul8_16
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _uartSendByte

 _ISR (ROOT)
   _pushButtonISR
   _rotISR
   _uartReceiveISR
     _strncpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
ABS                  0      0     1D1       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     3A      4E      10       97.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50     3E      4E      12       97.5%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      37      14       68.8%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      50      16      100.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              20      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     1D1      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Jan 19 22:07:02 2020

                   _pushButtonISR 18BF          __end_of_transition_table 201C                      ___fldiv@aexp 0061  
                    ___fldiv@bexp 0060                      ___fldiv@sign 0059                       __CFG_CP$OFF 0000  
                    ___awdiv@sign 0026               ___wmul@multiplicand 0022               __Umul8_16@word_mpld 0026  
                     __CFG_LVP$ON 0000                               l210 124A                               l202 11E2  
                             l211 1249                               l203 11C9                               l212 124C  
                             l204 11E1                               l221 1A66                               l205 121B  
                             l302 26EB                               l222 1A66                               l206 121A  
                             l230 080F                               l223 1A6B                               l311 26BD  
                             l215 26E0                               l207 1201                               l224 1AAA  
                             l208 1219                               l400 07A6                               l305 26F7  
                             l209 1231                               l401 013F                               l330 1954  
                             l314 26C2                               l218 2703                               l410 016A  
                             l402 0112                               l331 1945                               l411 01D7  
                             l227 0809                               l308 1EC3                               l332 195F  
                             l420 0279                               l412 0209                               l404 00EC  
                             l500 0FFF                               l228 0809                               l181 1D4B  
                             l333 195F                               l421 028E                               l413 01D8  
                             l501 0F91                               l229 080F                               l173 1A34  
                             l182 1D4B                               l414 0231                               l406 0100  
                             l502 0F50                               l174 1A45                               l183 1D50  
                             l431 02E2                               l423 0287                               l415 027A  
                             l407 011E                               l511 18AF                               l175 1A50  
                             l184 1DB5                               l336 26B8                               l520 27B6  
                             l440 0497                               l432 0308                               l416 025B  
                             l408 0232                               l504 0F12                               l512 1896  
                             l176 1A5D                               l433 02FC                               l425 028D  
                             l409 019B                               l513 18B9                               l177 1A5E  
                             l450 059B                               l442 04DE                               l434 0307  
                             l426 02CD                               l418 0270                               l506 0F35  
                             l514 18BE                               l178 1A5E                               l291 1A1A  
                             l187 1B54                               l451 0581                               l435 03F3  
                             l427 02C6                               l507 0F65                               l188 1B55  
                             l380 1B96                               l460 06AA                               l452 05A2  
                             l444 04E0                               l436 031B                               l428 02CD  
                             l508 0FC3                               l196 1FD9                               l189 1B55  
                             l517 2798                               l701 10D1                               l381 1BA5  
                             l373 1B67                               l461 0702                               l445 063C  
                             l437 0406                               l429 02E7                               l197 1FFF  
                             l294 271B                               l518 27A0                               l382 1BB2  
                             l454 065F                               l446 04E7                               l438 0462  
                             l390 13A9                               l198 1FFE                               l519 27B1  
                             l703 10D3                               l711 1EE2                               l375 1B71  
                             l471 0749                               l463 0712                               l455 0660  
                             l447 055B                               l439 0498                               l199 1FFF  
                             l288 26D7                               l704 10D4                               l720 1F38  
                             l712 1F58                               l456 067E                               l448 05B9  
                             l392 13AE                               l480 0CE0                               l297 2777  
                             l721 1F47                               l713 1F27                               l377 1B73  
                             l457 078B                               l473 075D                               l465 0717  
                             l449 0580                               l393 00B4                               l385 1386  
                             l481 0CD5                               l298 2791                               l722 1F58  
                             l714 1F15                               l378 1B88                               l458 06A5  
                             l394 1423                               l386 13C4                               l490 0DA0  
                             l299 2793                               l707 180C                               l811 09FF  
                             l715 1F16                               l379 1B76                               l467 0768  
                             l459 06EC                               l491 0D95                               l483 0D09  
                             l708 180D                               l820 0A9F                               l812 0A15  
                             l716 1F26                               l396 13FD                               l388 139D  
                             l476 0FD0                               l661 1C7D                               l821 0A62  
                             l813 0A12                               l717 1F48                               l469 076D  
                             l493 0DC9                               l485 0D2C                               l477 0CBF  
                             l910 15E5                               l670 1CD3                               l662 1C8B  
                             l830 0B40                               l822 0AD7                               l814 0A1E  
                             l718 1F37                               l398 1411                               l486 0D33  
                             l478 0CBE                               l911 15F0                               l671 1CD8  
                             l663 1CC8                               l831 0B13                               l823 0B00  
                             l815 0A2B                               l719 1F41                               l399 142F  
                             l487 0DF5                               l495 0DEC                               l479 0D34  
                             l920 177B                               l912 1605                               l904 15A5  
                             l664 1CA0                               l680 1BE4                               l840 0BAA  
                             l832 0C60                               l824 0AF8                               l816 0A35  
                             l496 0DF3                               l488 0D7F                               l921 1772  
                             l905 15BA                               l665 1C96                               l681 1BF3  
                             l841 0BC1                               l833 0B3F                               l825 0AD8  
                             l817 0A4B                               l497 0E6A                               l489 0DF4  
                             l930 17ED                               l922 177A                               l914 15FB  
                             l906 15B8                               l666 1CA5                               l682 1BFF  
                             l674 1BC1                               l690 07F4                               l850 0BF5  
                             l842 0BE1                               l834 0B29                               l826 0AE2  
                             l818 0A48                               l498 0E69                               l923 1779  
                             l915 17FF                               l907 15C3                               l667 1CA6  
                             l683 1C0B                               l675 1BCB                               l851 0BFD  
                             l843 0BC2                               l835 0B2C                               l827 0AE5  
                             l819 0A53                               l499 0EC0                               l940 1136  
                             l924 17AA                               l916 1751                               l908 15D2  
                             l668 1CBB                               l684 1C10                               l676 1C00  
                             l692 07F6                               l860 0C53                               l852 0BFC  
                             l844 0BCE                               l836 0B32                               l828 0AEB  
                             l941 1123                               l933 10F0                               l925 17A9  
                             l917 1738                               l909 15E7                               l669 1CC7  
                             l677 1BDE                               l693 07F7                               l861 0C57  
                             l853 0C32                               l837 0BE7                               l845 0BD5  
                             l829 0B00                               l942 113D                               l934 10F8  
                             l870 0833                               l926 17C1                               l918 1745  
                             l678 1BD4                               l862 0C60                               l854 0C32  
                             l846 0BD8                               l838 0BA2                               l943 1148  
                             l935 110A                               l871 083F                               l927 17F2  
                             l919 1756                               l679 1BE3                               l687 07C4  
                             l855 0C31                               l847 0BE0                               l839 0BA1  
                             l944 113E                               l936 1189                               l880 08D4  
                             l872 084E                               l928 17DA                               l688 07E0  
                             l696 1044                               l856 0C4D                               l848 0BE6  
                             l960 1E33                               l937 111B                               l881 08F5  
                             l873 0864                               l929 17F2                               l697 1061  
                             l849 0BFE                               l865 2770                               l946 1153  
                             l938 110F                               l890 096B                               l882 08ED  
                             l874 0861                               l970 1282                               l698 108D  
                             l858 0C3D                               l954 1E0C                               l947 1153  
                             l939 1122                               l891 0962                               l883 0911  
                             l875 086C                               l699 10B9                               l859 0C4C  
                             l948 115F                               l892 096A                               l884 091D  
                             l876 088E                               l868 0820                               l980 12E3  
                             l972 1296                               l956 1E05                               l949 1180  
                             l893 0969                               l885 0927                               l877 09EE  
                             l869 0836                               l981 12BC                               l894 099A  
                             l886 0941                               l878 08A5                               l990 1332  
                             l974 127A                               l958 1E0A                               l895 0999  
                             l887 0928                               l879 0916                               l991 1333  
                             l983 1300                               l975 129D                               l967 1258  
                             l959 1E38                               l896 09B4                               l888 0935  
                             l976 12A7                               l968 1253                               l897 09CE  
                             l889 0946                               l985 1314                               l977 129E  
                             l898 09D9                               l986 131B                               l978 12A2  
                             l899 09DD                               l979 12BB                               l988 132D  
                             l996 14A5                               l997 1594                               l998 1531  
                             l999 14E8                               _ISR 0004                               _pad 1B56  
                    ___awmod@sign 0026                      __CFG_BORV$LO 0000                               wreg 0009  
                    ___flmul@aexp 0040                      ___flmul@bexp 0041                      ___flmul@sign 003B  
                    ___flmul@temp 0046                      ___flmul@prod 0042                     __CFG_BBEN$OFF 0000  
                            ?_ISR 0070                      __CFG_ZCD$OFF 0000                      ___fltol@exp1 002A  
                            l1000 1511                              l1001 1583                              l1002 1559  
                            l1003 1583                              l1004 1582                              l1101 100C  
                            l1021 274F                              l1102 1014                              l1014 27D2  
                            l1103 1021                              l1007 2735                              l1015 27DA  
                            l1031 1C1D                              l1104 1026                              l1032 1C6D  
                            l1033 1C6C                              l1041 1850                              l1042 183C  
                            l1035 1C4E                              l1043 1861                              l1051 1836  
                            l1036 1C6E                              l1044 1861                              l1060 27FF  
                            l1029 1C22                              l1054 0003                              l1070 1D43  
                            l1063 186E                              l1071 1D01                              l3000 0A4B  
                            l1064 1869                              l1072 1CF4                              l1065 1878  
                            l1057 27E7                              l3010 0A6A                              l3002 0A59  
                            l1066 188C                              l1058 27E6                              l1090 1927  
                            l1074 1D2A                              l1059 27FF                              l1075 1D2B  
                            l3100 0BC9                              l3020 0A7E                              l3012 0A6E  
                            l3004 0A5D                              l1092 190C                              l1069 1CF3  
                            l3110 0BDD                              l3102 0BCD                              l3030 0A92  
                            l3022 0A82                              l3014 0A72                              l3006 0A62  
                            l1094 1919                              l1095 1927                              l3120 0BF2  
                            l3104 0BD2                              l3112 0BE1                              l3040 0ABC  
                            l3032 0A96                              l3024 0A86                              l3016 0A76  
                            l3008 0A66                              l3200 1DE9                              l4000 0697  
                            l3130 0C0F                              l3122 0BF9                              l3106 0BD5  
                            l3114 0BE7                              l3050 0AEB                              l3042 0ADC  
                            l3034 0A9A                              l3026 0A8A                              l3018 0A7A  
                            l3210 1E12                              l3202 1E00                              l4010 06AF  
                            l4002 069B                              l3300 1C96                              l3140 0C4A  
                            l3132 0C2C                              l3124 0BFE                              l3116 0BE8  
                            l3108 0BD8                              l3060 0B12                              l3052 0AF3  
                            l3044 0AE2                              l3028 0A8E                              l3036 0A9F  
                            l3212 1E32                              l3204 1E05                              l3220 27E7  
                            l4020 06F2                              l4012 06CC                              l4004 069F  
                            l4100 1CDB                              l3310 1CB9                              l3302 1C9B  
                            l3150 0C5F                              l3142 0C4D                              l3134 0C37  
                            l3126 0C03                              l3118 0BEC                              l3070 0B29  
                            l3062 0B13                              l3046 0AE5                              l3054 0AF8  
                            l3038 0AA0                              l3214 1E33                              l3206 1E0B  
                            l3230 1926                              l3222 18F3                              l4030 0717  
                            l4022 0702                              l4014 06E3                              l4006 06A5  
                            l4110 1CF8                              l4102 1CE3                              l3160 101B  
                            l3152 1002                              l3320 1CD3                              l3312 1CBB  
                            l3304 1CA0                              l3400 1800                              l3144 0C51  
                            l3136 0C3D                              l3128 0C0B                              l3072 0B2C  
                            l3064 0B1B                              l3056 0B04                              l3080 0B40  
                            l3048 0AE9                              l3216 1E38                              l3208 1E0C  
                            l3240 14AA                              l3232 1450                              l3224 190C  
                            l4040 075D                              l4032 0723                              l4024 0707  
                            l4016 06E7                              l4008 06AA                              l4120 1D19  
                            l4112 1CFC                              l4104 1CEF                              l4200 0EBF  
                            l3170 1A17                              l3162 1021                              l3154 1004  
                            l3322 1CD8                              l3314 1CC0                              l3306 1CA6  
                            l3330 1BBE                              l3402 1809                              l3146 0C53  
                            l3138 0C45                              l3082 0B56                              l3090 0BA2  
                            l3074 0B30                              l3066 0B1F                              l3058 0B09  
                            l3410 1ED8                              l3250 1511                              l3242 14CC  
                            l3234 1470                              l3218 27DD                              l3226 1919  
                            l4050 077E                              l4042 0763                              l4034 0728  
                            l4026 070D                              l4018 06EC                              l4122 1D2B  
                            l4106 1CF2                              l4114 1D01                              l4210 0F3B  
                            l4202 0EC0                              l4130 0C76                              l3500 0893  
                            l3164 1026                              l3156 100C                              l4060 1258  
                            l3308 1CB5                              l3316 1CC8                              l3340 1BD4  
                            l3332 1BC1                              l3324 1BB3                              l3404 180C  
                            l3148 0C5B                              l3092 0BB2                              l3084 0B91  
                            l3076 0B32                              l3068 0B23                              l3420 1EFE  
                            l3412 1EE1                              l3260 1594                              l3244 14E7  
                            l3252 1531                              l3236 1495                              l3180 1B71  
                            l3172 1B58                              l3228 191F                              l4044 0768  
                            l4036 072C                              l4028 0712                              l4052 078B  
                            l4124 1D43                              l4116 1D0A                              l4108 1CF4  
                            l4212 0F50                              l4204 0ED4                              l4220 0F91  
                            l4140 0CA4                              l4132 0C7F                              l4300 1836  
                            l3166 19DD                              l4126 26E3                              l3510 08CA  
                            l3502 08A4                              l3158 1010                              l4310 11B7  
                            l4302 118C                              l3270 279C                              l3262 271C  
                            l4070 1282                              l4062 125A                              l3318 1CCD  
                            l3350 1BF3                              l3342 1BD9                              l3334 1BC5  
                            l3326 1BB5                              l3406 180D                              l3094 0BB7  
                            l3086 0B93                              l3078 0B3A                              l3430 1F16  
                            l3422 1F00                              l3414 1EE2                              l3254 154F  
                            l3246 14E8                              l3238 14A4                              l3190 1BA5  
                            l3182 1B76                              l3174 1B5D                              l4054 07A6  
                            l4046 076D                              l4038 0749                              l4118 1D13  
                            l4222 0FA4                              l4230 0FC3                              l4214 0F65  
                            l4206 0F12                              l4150 0CD5                              l4142 0CB3  
                            l4134 0C84                              l3168 1A13                              l4400 1127  
                            l3520 08EB                              l3512 08D2                              l3504 08A5  
                            l3600 15AA                              l4320 11CC                              l4312 11C0  
                            l4304 118E                              l3272 27A5                              l3264 2735  
                            l4080 12DE                              l4072 1296                              l4064 1264  
                            l4056 124D                              l3280 1C6F                              l3360 1C10  
                            l3352 1BF8                              l3344 1BDE                              l3336 1BCB  
                            l3328 1BB9                              l3096 0BC0                              l3088 0B98  
                            l3440 1F48                              l3424 1F04                              l3432 1F27  
                            l3416 1EF5                              l3408 1EC4                              l3256 1559  
                            l3248 1507                              l3192 1BB2                              l3184 1B82  
                            l3176 1B67                              l4048 0779                              l4240 0FFA  
                            l4232 0FCC                              l4224 0FAD                              l4216 0F6F  
                            l4208 0F35                              l4160 0D47                              l4152 0CE0  
                            l4144 0CB7                              l4136 0C88                              l4128 0C63  
                            l4410 1157                              l4402 112F                              l3530 0911  
                            l3522 08ED                              l3514 08D4                              l3506 08BA  
                            l3450 0810                              l3610 15C8                              l3602 15AF  
                            l4250 2700                              l4330 11F2                              l4322 11D5  
                            l4314 11C1                              l4306 119C                              l3274 27AA  
                            l3266 2794                              l4090 1321                              l4082 12E3  
                            l4074 129E                              l4066 1278                              l4058 1253  
                            l3290 1C81                              l3282 1C71                              l3346 1BE4  
                            l3338 1BD1                              l3354 1C00                              l3370 07F4  
                            l3362 07A7                              l3098 0BC2                              l3442 1F4D  
                            l3434 1F2D                              l3426 1F0B                              l3418 1EF6  
                            l3194 1DB6                              l3258 1578                              l3186 1B88  
                            l3178 1B6C                              l4242 0FFF                              l4234 0FCF  
                            l4226 0FBC                              l4218 0F90                              l4170 0D7F  
                            l4162 0D4A                              l4154 0D09                              l4146 0CB8  
                            l4138 0C9B                              l4500 1E73                              l4420 1180  
                            l4412 1161                              l4404 113E                              l3540 092F  
                            l3516 08D9                              l3524 08F5                              l3532 0916  
                            l3508 08C2                              l3460 0825                              l3452 0816  
                            l3700 1780                              l3620 15DC                              l3612 15CC  
                            l3604 15B8                              l4244 26B4                              l4252 2703  
                            l4260 26E0                              l4340 1204                              l4332 11F8  
                            l4324 11DA                              l4316 11C8                              l4308 11A1  
                            l3276 27B1                              l3268 2798                              l4092 132D  
                            l4084 1300                              l4076 12A7                              l4068 127A  
                            l3292 1C86                              l3284 1C75                              l3356 1C05  
                            l3348 1BEE                              l3372 07F7                              l3364 07BC  
                            l3380 1061                              l3444 2750                              l3436 1F36  
                            l3428 1F14                              l3196 1DCE                              l3188 1B9B  
                            l4228 0FC2                              l4172 0D95                              l4164 0D54  
                            l4180 0DF5                              l4156 0D2C                              l4148 0CBF  
                            l4236 0FD0                              l4510 1EA3                              l4502 1E7F  
                            l4422 1189                              l4414 1175                              l4406 1148  
                            l4430 1A73                              l3550 0946                              l3542 0933  
                            l3534 091D                              l3526 0907                              l3518 08E7  
                            l3470 083F                              l3462 082A                              l3454 081A  
                            l3710 17B7                              l3702 1788                              l3630 15FB  
                            l3622 15E5                              l3614 15D0                              l3606 15BA  
                            l4262 26B9                              l4246 26F8                              l4254 26D8  
                            l4350 1228                              l4342 120D                              l4334 11F9  
                            l4318 11C9                              l4326 11E2                              l3278 27B6  
                            l4094 1333                              l4086 1314                              l4078 12BC  
                            l3294 1C8B                              l3286 1C7A                              l3358 1C0B  
                            l3366 07D8                              l3390 10BB                              l3382 1065  
                            l3374 1027                              l3446 2753                              l3438 1F38  
                            l3198 1DE3                              l4238 0FF0                              l4190 0E6A  
                            l4182 0E16                              l4174 0DA0                              l4166 0D66  
                            l4158 0D34                              l4270 1893                              l4512 1EAB  
                            l4504 1E87                              l4416 117A                              l4408 114C  
                            l4440 1A7C                              l4432 1A75                              l4424 1A60  
                            l3560 096B                              l3552 0947                              l3544 0935  
                            l3536 0925                              l3528 0908                              l3480 0853  
                            l3472 0844                              l3464 0833                              l3456 081E  
                            l3720 17E7                              l3712 17C1                              l3704 178C  
                            l3640 1639                              l3632 1604                              l3624 15E7  
                            l3616 15D2                              l3608 15C3                              l4520 1D49  
                            l4280 192A                              l4264 26BE                              l4248 26FE  
                            l4256 26DD                              l4360 1245                              l4352 122D  
                            l4344 1212                              l4336 1200                              l4328 11E9  
                            l4088 131B                              l3296 1C8D                              l3288 1C7D  
                            l3368 07F2                              l3392 10BD                              l3384 108D  
                            l3376 103C                              l3448 2770                              l2920 1C22  
                            l3800 1411                              l4192 0E70                              l4184 0E1B  
                            l4176 0DC9                              l4168 0D6F                              l4272 1896  
                            l2930 26CF                              l4514 1EB7                              l4506 1E93  
                            l4418 117E                              l4450 1A88                              l4442 1A7E  
                            l4434 1A76                              l4426 1A6B                              l3562 0970  
                            l3570 099A                              l3554 094B                              l3546 093C  
                            l3538 0928                              l3490 0874                              l3482 0858  
                            l3474 0848                              l3466 0834                              l3458 0820  
                            l3722 17EB                              l3714 17CF                              l3706 17A4  
                            l3650 1681                              l3642 1646                              l3634 1605  
                            l3626 15F0                              l3618 15D7                              l4522 1D50  
                            l4266 26EE                              l4282 193A                              l4258 26DE  
                            l4362 124A                              l4354 1231                              l4338 1201  
                            l4346 121B                              l3730 27B7                              l3298 1C93  
                            l3394 10CF                              l3386 1091                              l3378 1058  
                            l2922 1C2E                              l2914 1C11                              l3810 00B3  
                            l3802 1417                              l4194 0E82                              l4186 0E3F  
                            l4178 0DEC                              l4274 18AF                              l4290 1810  
                            l4530 0807                              l2932 26D1                              l4516 1EBB  
                            l4508 1E97                              l4380 10D7                              l4532 1AFC  
                            l4460 1A96                              l4452 1A8B                              l4444 1A81  
                            l4436 1A78                              l4428 1A70                              l3580 09D3  
                            l3572 09A7                              l3564 0978                              l3556 095F  
                            l3548 0941                              l3492 0880                              l3484 0861  
                            l3476 084C                              l3468 0836                              l3724 17ED  
                            l3716 17D8                              l3708 17AA                              l3660 16BD  
                            l3652 168E                              l3644 1660                              l3636 1612  
                            l3628 15F5                              l4524 1D57                              l4284 1945  
                            l4356 1238                              l4348 1220                              l3740 27DA  
                            l3732 27BA                              l3396 10D1                              l3388 10B9  
                            l2924 1C4E                              l2916 1C17                              l2940 184A  
                            l3900 030A                              l3820 0106                              l3804 1423  
                            l3812 00B4                              l4196 0E8C                              l4188 0E44  
                            l4276 18B9                              l4268 188F                              l4292 1818  
                            l4540 1F59                              l4620 1A2B                              l2934 26D5  
                            l3742 2706                              l3750 2771                              l4390 1109  
                            l4382 10DC                              l4534 1B03                              l4470 1AA1  
                            l4462 1A98                              l4454 1A8D                              l4446 1A84  
                            l4438 1A7B                              l3582 09D7                              l3574 09C2  
                            l3566 097C                              l3558 0966                              l3494 0884  
                            l3486 0862                              l3478 084E                              l3726 17F6  
                            l3718 17DA                              l3670 170E                              l3662 16C4  
                            l3654 1695                              l3646 166D                              l3638 161F  
                            l3590 1595                              l4526 1D7E                              l4518 1D44  
                            l4286 194E                              l4358 1240                              l3734 27C1  
                            l3398 10D4                              l2926 1C62                              l2918 1C1D  
                            l2942 1850                              l2950 1878                              l3910 0406  
                            l3902 0312                              l3822 0112                              l3814 00CE  
                            l3830 013F                              l3806 142F                              l4198 0E9F  
                            l4278 18BE                              l4294 181A                              l4550 1FDF  
                            l4542 1F61                              l4630 1A4B                              l4622 1A35  
                            l4614 1A1B                              ?_pad 0030                              l3744 270B  
                            l3760 2788                              l3752 2778                              l4480 1E3D  
                            l4392 110A                              l4384 10E0                              l4536 1B08  
                            l4472 1AA4                              l4464 1A9A                              l4456 1A91  
                            l4448 1A86                              l3584 09D9                              l3576 09C5  
                            l3568 0994                              l3496 088D                              l3488 0864  
                            l3728 17FF                              l3680 1743                              l3672 1725  
                            l3664 16D8                              l3656 16A2                              l3648 167A  
                            l3592 159B                              l4288 1954                              l3736 27D0  
                            l2960 09F5                              l2928 1C6E                              l2936 1839  
                            l2952 188C                              l2944 1864                              l3920 0498  
                            l3912 0458                              l3904 031B                              l3840 0196  
                            l3832 0148                              l3824 011E                              l3816 00EC  
                            l3808 1434                              l4296 181C                              l4552 1FE9  
                            l4544 1F66                              l4528 0804                              l4632 1A4C  
                            l4624 1A3F                              l4616 1A1E                              l3746 270C  
                            l3762 278B                              l3754 277C                              l4490 1E4B  
                            l4482 1E46                              l4394 110F                              l4386 10F0  
                            l4538 1B30                              l4474 1AA6                              l4466 1A9D  
                            l4458 1A94                              l3586 09E5                              l3578 09CD  
                            l3498 088E                              l3690 1757                              l3682 1745  
                            l3674 172C                              l3666 16E5                              l3658 16A9  
                            l3594 159F                              l3738 27D2                              l4722 12B3  
                            l2970 0A09                              l2962 09F9                              l2938 183C  
                            l2946 1869                              l2954 2736                              l3930 04E7  
                            l3922 04CB                              l3914 0462                              l3906 03EE  
                            l3842 019B                              l3850 0232                              l3834 014A  
                            l3826 0123                              l3818 0100                              l3770 135E  
                            l4298 182D                              l4546 1FC4                              l4634 1A50  
                            l4626 1A40                              l4618 1A20                              l3748 2716  
                            l3756 2782                              l4492 1E4F                              l4484 1E48  
                            l4396 111B                              l4388 1100                              l4476 1AA8  
                            l4468 1A9F                              l3588 09EE                              l3692 175B  
                            l3684 174C                              l3676 1738                              l3668 16F9  
                            l3596 15A3                              l2980 0A23                              l2972 0A12  
                            l2964 09FD                              l2948 186E                              l2956 274F  
                            l3940 0556                              l3932 0540                              l3924 04D3  
                            l3916 0489                              l3908 03F3                              l3860 026A  
                            l3852 0244                              l3844 01D8                              l3836 0169  
                            l3828 013E                              l3780 1397                              l3772 1363  
                            l3764 1336                              l4548 1FD9                              l4636 1A53  
                            l4628 1A45                              l3758 2787                              l4494 1E5B  
                            l4486 1E49                              l4478 1E39                              l4398 1123  
                            l3694 176F                              l3678 173F                              l3686 1751  
                            l3598 15A5                              l2990 0A35                              l2982 0A29  
                            l2974 0A13                              l2966 09FF                              l2958 09EF  
                            l3950 0577                              l3934 0545                              l3942 055B  
                            l3926 04D9                              l3918 048E                              l3870 0294  
                            l3862 0270                              l3854 024A                              l3846 0204  
                            l3838 016A                              l3790 13BA                              l3782 139D  
                            l3774 1386                              l3766 1338                              l4496 1E63  
                            l4488 1E4A                              l3696 1776                              l3688 1756  
                            l2992 0A3A                              l2984 0A2B                              l2968 0A04  
                            l2976 0A15                              l3960 0596                              l3952 057B  
                            l3944 0562                              l3936 054C                              l3928 04DE  
                            l3880 02D7                              l3872 02A3                              l3864 027F  
                            l3856 0250                              l3848 0209                              l3792 13BF  
                            l3784 13A4                              l3776 1389                              l3768 1340  
                            l4498 1E6F                              l3698 177B                              l2994 0A3F  
                            l2986 0A2F                              l2978 0A1E                              l3954 0581  
                            l3946 0566                              l3962 059B                              l3970 05B9  
                            l3938 0552                              l3890 02F1                              l3882 02DD  
                            l3874 02BF                              l3866 0287                              l3858 0257  
                            l3786 13A9                              l3794 13C4                              l3778 1391  
                            l2996 0A48                              l2988 0A33                              l3980 064E  
                            l3972 0607                              l3964 05A2                              l3956 058D  
                            l3948 0572                              l3892 02F9                              l3884 02E2  
                            l3876 02C6                              l3868 028E                              l3796 13DF  
                            l3788 13AE                              l2998 0A49                              l3990 067E  
                            l3982 0660                              l3974 0633                              l3966 05AF  
                            l3958 0592                              l3894 02FC                              l3886 02E7  
                            l3878 02D1                              l3798 13FD                              l3992 0685  
                            l3984 0667                              l3976 0637                              l3968 05B4  
                            l3896 0302                              l3888 02ED                              l3994 068B  
                            l3986 066C                              l3978 063C                              l3898 0308  
                            l3996 068F                              l3988 0678                              l3998 0695  
                            STR_1 2081                              STR_2 201C                              STR_3 2050  
                            STR_4 2800                              STR_5 2808                              STR_8 2804  
                            STR_9 280C                              u4000 1E1F                              u4010 1E2A  
                            u4011 1E28                              u4020 1E2B                              u4100 14BB  
                            u4005 1E1B                              u4110 14E7                              u4030 27FE  
                            u4111 14E6                              u4031 27FD                              u4200 279C  
                            u4120 14FD                              u3400 2747                              u4040 1904  
                            u4201 279B                              u4105 14B7                              u3401 2745  
                            u4041 1902                              u5010 1704                              u4130 1507  
                            u3410 2748                              u4050 1905                              u4131 1506  
                            u5100 1776                              u5020 171B                              u4300 1CB5  
                            u3500 0A5D                              u3420 09FD                              u4140 1545  
                            u3340 1C17                              u4060 191F                              u5101 1775  
                            u5005 16AA                              u4301 1CB4                              u3501 0A5C  
                            u3421 09FC                              u4125 14F9                              u3341 1C16  
                            u4061 191E                              u5110 1780                              u4230 27B0  
                            u3510 0ABC                              u3430 0A04                              u4150 154F  
                            u4070 1484                              u3350 1C1C                              _PIE0 0716  
                            u5111 177F                              u5015 1700                              u4231 27AF  
                            u4215 27A1                              u3511 0ABB                              u3431 0A03  
                            u4151 154E                              u3351 1C1B                              u5200 2791  
                            u5120 178C                              u4320 1CC6                              u4240 1C75  
                            u3600 0B1F                              u3520 0AC6                              u3440 0A09  
                            u4160 156E                              u4080 14A4                              u3360 1C2E  
                            u6000 0F07                              u5201 2790                              u5121 178B  
                            u5025 1717                              u4225 27A6                              u4321 1CC5  
                            u4305 1CB1                              u4241 1C74                              u3601 0B1E  
                            u3521 0AC4                              u3441 0A08                              u4145 1541  
                            u4081 14A3                              u3361 1C2D                              u6001 0F05  
                            _PIE3 0719                              u5130 179A                              u5050 1743  
                            u4330 1CCD                              u4250 1C81                              u4410 1BFE  
                            u3610 0B23                              u3530 0AC7                              u3450 0A29  
                            u4170 1578                              u4090 14AA                              u3370 1C4D  
                            u5210 135E                              u6010 0F08                              _PIE4 071A  
                            u5051 1742                              u5035 1726                              u4331 1CCC  
                            u4315 1CBC                              u4251 1C80                              u4411 1BFD  
                            u3611 0B22                              u3515 0AB8                              u3451 0A28  
                            u4171 1577                              u4091 14A9                              u4075 1480  
                            u3371 1C4C                              u5211 135D                              u5140 17B7  
                            u6100 11E9                              u4180 272D                              u4260 1C93  
                            u4420 1C05                              u4340 1BB9                              u4500 10CF  
                            u3700 0BD2                              u3620 0B30                              u3540 0ADC  
                            u3460 0A33                              u3380 1860                              u5300 00E1  
                            u5220 1397                              u6020 0F3B                              u5141 17B6  
                            u5045 1739                              u6101 11E8                              u4181 272B  
                            u4261 1C92                              u4421 1C04                              u4405 1BF4  
                            u4341 1BB8                              u4501 10CE                              u3701 0BD1  
                            u3621 0B2F                              u3541 0ADB                              u3461 0A32  
                            u4165 156A                              u4085 14A0                              u3381 185F  
                            u5301 00DF                              u5221 1396                              u6021 0F3A  
                            u5150 17CF                              u5070 1755                              u6110 11F2  
                            u4190 272E                              u4350 1BC5                              u4430 07BC  
                            u4510 1809                              u3710 0BDD                              u3550 0AE9  
                            u3470 0A3A                              u3390 1877                              u5310 00E2  
                            u5230 139C                              u6030 0FA4                              u5151 17CE  
                            u5135 1796                              u5071 1754                              u6111 11F1  
                            u4351 1BC4                              u4431 07BB                              u4511 1808  
                            u3711 0BDC                              u3551 0AE8                              u3471 0A39  
                            u3375 1C49                              u3391 1876                              u5231 139B  
                            u6031 0FA3                              u6200 10E0                              u5160 17EB  
                            u5080 175B                              u6120 11FF                              u4280 1CA4  
                            u4360 1BD1                              u4440 07D8                              u3800 0C37  
                            u3720 0BE5                              u3640 0B56                              u3480 0A3F  
                            u4600 1F46                              u4520 1ED8                              u5400 0294  
                            u5320 0106                              u5240 13A4                              u6040 18B8  
                            u6201 10DF                              u5161 17EA                              u5145 17B3  
                            u5081 175A                              u5065 1746                              u6121 11FE  
                            u4281 1CA3                              u4361 1BD0                              u4441 07D7  
                            u4505 10CB                              u3801 0C36                              u3721 0BE4  
                            u3641 0B55                              u3481 0A3E                              u4601 1F45  
                            u4521 1ED7                              u5401 0293                              u5321 0105  
                            u5241 13A3                              u6041 18B7                              u6210 1100  
                            u5090 176F                              u6050 195E                              u6130 1218  
                            u5170 27C1                              u4450 07F2                              u3810 0C3C  
                            u3730 0BEC                              u3650 0B98                              u3570 0AFF  
                            u3490 0A59                              u4610 1F4D                              u4530 1EEF  
                            u5410 02A3                              u5330 0168                              u5250 13DF  
                            u6211 10FF                              u5155 17CB                              u5091 176E  
                            u6051 195D                              u6131 1217                              u5171 27C0  
                            u4275 1C97                              u4451 07F1                              u3811 0C3B  
                            u3731 0BEB                              u3651 0B97                              u3643 0B52  
                            u3635 0B34                              u3571 0AFE                              u3491 0A58  
                            u4611 1F4C                              u5411 02A2                              u5331 0167  
                            u5251 13DD                              u6300 116B                              u4700 08D9  
                            u4620 081E                              u6140 1220                              u6060 11A1  
                            u5180 27D0                              u4380 1BE2                              u4460 103C  
                            u3820 0C4A                              u3740 0BF2                              u3660 0BB2  
                            u3580 0B04                              u4540 1F04                              u5500 0458  
                            u5420 02BF                              u5340 01D6                              u5260 13F2  
                            u4701 08D8                              u4621 081D                              u6141 121F  
                            u6061 11A0                              u5181 27CF                              u4381 1BE1  
                            u4461 103B                              u3821 0C49                              u3741 0BF1  
                            u3661 0BB1                              u3581 0B03                              u3565 0AED  
                            u4541 1F03                              u5501 0457                              u5421 02BE  
                            u5341 01D5                              u5261 13F0                              u6310 117A  
                            u6230 1121                              u4630 0825                              u6150 1238  
                            u6070 11B7                              u4390 1BEE                              u4470 1058  
                            u3830 0C51                              u3750 0BF9                              u3670 0BB7  
                            u3590 0B09                              u4550 1F0B                              u3910 1B5D  
                            u5510 0489                              u5430 02D7                              u5350 0230  
                            u5270 13F3                              u6311 1179                              u6231 1120  
                            u4631 0824                              u6151 1237                              u6071 11B6  
                            u4295 1CA7                              u4391 1BED                              u4375 1BD5  
                            u4455 07EE                              u4471 1057                              u3831 0C50  
                            u3751 0BF8                              u3671 0BB6                              u3591 0B08  
                            u4551 1F0A                              u4535 1EEB                              u3911 1B5C  
                            u5511 0488                              u5431 02D6                              u5415 029F  
                            u5351 022F                              u6320 117E                              u4640 082A  
                            u6080 11C7                              u4480 1065                              u3840 0C5F  
                            u3760 0C03                              u3920 1B6C                              u5600 05A1  
                            u5520 048E                              u5440 02DD                              u5360 0250  
                            u5280 1417                              u3905 1A07                              u6321 117D  
                            u6305 1167                              u6225 1114                              u4641 0829  
                            u6081 11C6                              u4481 1064                              u3841 0C5E  
                            u3761 0C02                              u3921 1B6B                              u5601 05A0  
                            u5521 048D                              u5441 02DC                              u5425 02BB  
                            u5361 024F                              u5281 1416                              u6250 113C  
                            u6330 1A6A                              u4810 0945                              u4730 08EB  
                            u4650 084C                              u3850 1010                              u6090 11E0  
                            u4490 1091                              u3770 0C0F                              u3690 0BCD  
                            u4570 1F25                              u3930 1B96                              u5610 064E  
                            u5530 04D9                              u5450 02E1                              u5370 0257  
                            u5290 00CE                              u5195 270F                              u6251 113B  
                            u6331 1A69                              u4811 0944                              u4731 08EA  
                            u4715 08DA                              u4651 084B                              u3851 100F  
                            u6091 11DF                              u6075 11B3                              u4395 1BEA  
                            u4491 1090                              u3771 0C0E                              u3691 0BCC  
                            u4571 1F24                              u3931 1B95                              u5611 064D  
                            u5531 04D8                              u5451 02E0                              u5371 0256  
                            u5291 00CD                              u4900 09D7                              u4820 094B  
                            u4660 0853                              u6340 1D4F                              u3780 0C1D  
                            u4580 1F2D                              u3940 1B9B                              u5700 073E  
                            u5620 065E                              u5540 0545                              u5460 02ED  
                            u5380 026A                              u6245 1130                              u4901 09D6  
                            u4821 094A                              u4805 0936                              u4725 08E1  
                            u4661 0852                              u6341 1D4E                              u3685 0BC3  
                            u4581 1F2C                              u4565 1F17                              u3941 1B9A  
                            u5701 073C                              u5621 065D                              u5541 0544  
                            u5461 02EC                              u5381 0269                              u6270 114C  
                            u6190 10DC                              u4830 095F                              u4750 0907  
                            u4670 0858                              u3870 1020                              u4910 15A3  
                            u3790 0C2C                              u3950 1DDB                              u5710 073F  
                            u5630 0667                              u5550 054C                              u5470 02F1  
                            u5390 027F                              u6350 080E                              u6510 1A3F  
                            u6271 114B                              u6191 10DB                              u4831 095E  
                            u4751 0906                              u4671 0857                              u3871 101F  
                            u4911 15A2                              u3791 0C2B                              u3935 1B92  
                            u5631 0666                              u5615 064A                              u5551 054B  
                            u5471 02F0                              u5391 027E                              u6351 080D  
                            u6511 1A3E                              u6280 1152                              u6360 1B03  
                            u4840 0966                              u4760 091C                              u4680 0874  
                            u4920 15AA                              u3960 1DE9                              u5720 0763  
                            u5640 066C                              u5560 0552                              u5480 0302  
                            u5800 1CEF                              u6520 1A4B                              u6281 1151  
                            u6265 1141                              u6361 1B02                              u4841 0965  
                            u4761 091B                              u4745 08EE                              u4681 0873  
                            u3865 1015                              u4921 15A9                              u3785 0C19  
                            u3961 1DE8                              u5721 0762                              u5641 066B  
                            u5625 065A                              u5561 0551                              u5481 0301  
                            u5385 0266                              u5801 1CEE                              u6521 1A4A  
                            u6290 1157                              u6370 1B08                              u4850 0970  
                            u4770 0925                              u4690 0893                              u4930 15AF  
                            u5730 1264                              u3970 1DF6                              u5650 068B  
                            u5570 0556                              u5490 0405                              u5810 1D0A  
                            u6291 1156                              u6371 1B07                              u4851 096F  
                            u4771 0924                              u4755 0903                              u4691 0892  
                            u4931 15AE                              u5731 1263                              u4595 1F39  
                            u3955 1DD7                              u5651 068A                              u5571 0555  
                            u5491 0404                              u5811 1D09                              u4860 097C  
                            u4940 15D0                              u5740 1278                              u3980 1E00  
                            u5660 069B                              u5580 0562                              u5820 1D13  
                            u5900 0D32                              u6380 1F66                              u3885 19E9  
                            u4861 097B                              u4941 15CF                              u5741 1277  
                            u3981 1DFF                              u5661 069A                              u5581 0561  
                            u5821 1D12                              u5901 0D31                              u6381 1F65  
                            u4870 098A                              u4790 0933                              u4950 15D7  
                            u5750 129C                              u3990 1E12                              u5670 06F2  
                            u5590 0566                              u5830 1D19                              u5910 0D47  
                            u6390 1FDF                              u3895 19F7                              u4791 0932  
                            u4951 15D6                              u5751 129B                              u3991 1E11  
                            u3975 1DF2                              u5671 06F1                              u5591 0565  
                            u5495 0401                              u5831 1D18                              u5911 0D46  
                            u6391 1FDE                              u4880 09A7                              u4960 15DC  
                            u5760 12F8                              u5680 0701                              u5840 1D29  
                            u5920 0D66                              u4881 09A6                              u4785 0929  
                            u4961 15DB                              u5761 12F6                              u5681 0700  
                            u5841 1D28                              u5921 0D65                              u4890 09C2  
                            u4970 15F5                              u5770 12F9                              u5690 070D  
                            u5930 0DBE                              u5850 0C76                              u6707 1E41  
                            u4891 09C1                              u4875 0986                              u4971 15F4  
                            u5691 070C                              u5931 0DBC                              u5851 0C75  
                            u4980 15FA                              u5780 131A                              u5940 0DBF  
                            u5860 0C9B                              u6717 1E53                              u4885 09A3  
                            u4981 15F9                              u5781 1319                              u5685 06FD  
                            u5861 0C9A                              u5790 1321                              u5950 0DF2  
                            u5870 0CB7                              u6807 1EBF                              u6727 1E5F  
                            u4895 09BE                              u5791 1320                              u5951 0DF1  
                            u5871 0CB6                              u5960 0E1B                              u5880 0CFE  
                            u6817 2779                              u6737 1E6B                              u5961 0E1A  
                            u5881 0CFC                              u5970 0E44                              u5890 0CFF  
                            u6827 277F                              u6747 1E77                              u4995 167B  
                            u5971 0E43                              u5980 0E70                              u6837 1A14  
                            u6757 1E83                              u5981 0E6F                              u6677 1A57  
                            u5990 0ED4                              u6847 26D2                              u6767 1E8F  
                            u6687 11D0                              u5991 0ED3                              u6777 1E9B  
                            u6697 1208                              u6787 1EA7                              u6797 1EB3  
                            _TMR0 059C                              _TMR1 020C         __size_of_OLED_pulseEnable 0009  
                   __CFG_FCMEN$ON 0000                     OLED_send@mode 0023                              _dbuf 02A0  
                            _atoi 124D                              _main 1A1B                              _prec 0166  
                            _nout 0162                              pad@i 0034                              pad@p 0031  
                            fsr0h 0005                              fsr1h 0007                              indf0 0000  
                            fsr0l 0004                              indf1 0001                              fsr1l 0006  
                            pad@w 0036                              btemp 007E                     __CFG_BOREN$ON 0000  
                   ___fpclassifyf 1DB6                              start 007C                       ?_OLED_write 0070  
                 ___fldiv@new_exp 005A                    ?_pushButtonISR 0070                      _tolower$1291 002C  
                   __CFG_CSWEN$ON 0000                     __CFG_MCLRE$ON 0000                             ??_ISR 0078  
                           ??_pad 0033                __size_of_OLED_init 008B                __size_of_OLED_send 0018  
                   ___fltol@sign1 0029                             ?_atoi 0026                   __end_of___fladd 0C61  
                           ?_main 0070                   __end_of___fldiv 09EF                   __end_of___awdiv 1CD9  
                 __end_of___flneg 180E                             STR_12 2810                             STR_14 2810  
                   __CFG_WDTE$OFF 0000                   __end_of___awmod 1C11                   __end_of___flmul 1800  
                 __end_of___flsub 2771                   __end_of___fltol 1F59                             _T1CLK 0211  
                 ___awdiv@divisor 0020                             _T1CON 020E                             _IOCAN 1F3E  
                           _IOCAP 1F3D                             _IOCCN 1F54                             i1l240 0040  
                           i1l241 0079                             i1l242 0078                             i1l243 0068  
                           i1l235 0019                             i1l260 1AF7                             i1l236 007A  
                           i1l244 0060                             i1l261 1AFB                             i1l245 0077  
                           i1l237 0043                             i1l270 18F2                             i1l246 0076  
                           i1l238 002C                             i1l271 18D8                             i1l239 0036  
                           i1l247 007A                             i1l272 18F1                             i1l264 1992  
                           i1l256 1AB7                             i1l273 18EA                             i1l265 199B  
                           i1l257 1AC2                             i1l274 18F0                             i1l266 199C  
                           i1l258 1ADF                             i1l275 18F2                             i1l259 1AFB  
                           i1l269 18C6                   ___awdiv@counter 0025                      vfpfcnvrt@fmt 00E8  
                           _TRISA 0012                             _TRISB 0013                             _TRISC 0014  
          uartReceiveISR@checksum 016A                     __CFG_WRTB$OFF 0000                     __CFG_WRTC$OFF 0000  
                  OLED_send@value 0025                             _getPB 26F8                             _flags 0168  
                           _fputc 1C11                             _fputs 1837                   __end_of_isdigit 2736  
                           atoi@n 0033                             pad@fp 0038                             atoi@s 0026  
                           _width 0164                             _putch 0003                   __end_of_isspace 27DB  
                 __end_of_isupper 2750                             status 0003                             wtemp0 007E  
                 __end_of_sprintf 1837                    ?___fpclassifyf 0020                   __end_of_tolower 1928  
                 __end_of_strncmp 1D44                   __end_of_strncpy 19DB                   __initialization 007E  
                    __end_of_atoi 1334                      __end_of_main 1A60                    __CFG_SAFEN$OFF 0000  
                      _g_10msTick 007D                            ??_atoi 0028                            ??_main 0159  
                _handleSensorData 1AFC                    OLED_print_xy@s 0028               __size_of_OLED_write 000C  
                          ?_getPB 0070           _OLED_scrollDisplayRight 26BE                            _ADCON1 009E  
                          ?_fputc 0020                            ?_fputs 0028                            _ADRESH 009C  
                          _ADRESL 009B                  ___awdiv@dividend 0022                            _ANSELA 1F38  
                          ?_putch 0070                            _ANSELB 1F43                            _ANSELC 1F4E  
              __CFG_RSTOSC$HFINT1 0000                            _T0CON0 059E                            _T0CON1 059F  
                 _g_sensorVersion 0228                            _RC1REG 0119                            _RC1STA 011D  
                          i1l1080 19BA                            i1l1081 19C2                            i1l1082 19CD  
                          i1l1083 19C3                            i1l1084 19DA                            i1l1085 19DA  
                          i1l1078 19BB                            i1l1079 19A3                            _RC6PPS 1F26  
                          i1l4600 1AC8                            i1l4370 19B9                            i1l4610 1AF7  
                          i1l4602 1ADA                            i1l4372 19BB                            i1l4364 199E  
                          i1l4612 1AF9                            i1l4604 1ADF                            i1l4374 19C3  
                          i1l4366 19A3                            i1l4606 1AE5                            i1l4560 18CC  
                          i1l4376 19C8                            i1l4368 19A7                            i1l4608 1AEA  
                          i1l4640 000B                    __CFG_WDTCCS$SC 0000                            i1l4570 18EA  
                          i1l4562 18D2                            i1l4554 18BF                            i1l4378 19CD  
                          i1l4650 0021                            i1l4642 000F                            i1l4564 18D8  
                          i1l4556 18C4                            i1l4580 1992                            i1l4572 1960  
                          i1l4660 0033                            i1l4652 0026                            i1l4644 0013  
                          i1l4566 18DE                            i1l4558 18C6                            i1l4582 1996  
                          i1l4574 196C                            i1l4590 1AB2                            i1l4670 0047  
                          i1l4662 0036                            i1l4654 0029                            i1l4646 0016  
                          i1l4638 0006                            i1l4568 18E4                            i1l4584 199B  
                          i1l4576 1989                            i1l4592 1AB7                            i1l4680 0060  
                          i1l4672 004B                            i1l4664 003A                            i1l4656 002C  
                          i1l4648 001D                            i1l4578 198D                            i1l4594 1ABB  
                          i1l4586 1AAB                            i1l4682 0065                            i1l4674 004F  
                          i1l4666 003D                            i1l4658 0030                            i1l4596 1ABD  
                          i1l4588 1AB0                            i1l4684 006C                            i1l4676 0059  
                          i1l4668 0040                            i1l4598 1AC2                            i1l4686 0070  
                          i1l4678 005A                            i1l4688 0073                            _INTCON 000B  
               __end_of_OLED_init 1EC4                 __end_of_OLED_send 271C                            u640_20 18C4  
                          u616_20 19B8                            u640_21 18C3                            u616_21 19B7  
                          u641_20 18CC                            u617_20 19C1                            u641_21 18CB  
                          u617_21 19C0                            u642_20 18D2                            u618_20 19D9  
                          u650_20 1AE5                            u642_21 18D1                            u618_21 19D8  
                          u650_21 1AE4                            u643_20 18DE                            u643_21 18DD  
                          u644_20 18E4                            u660_20 0047                            u644_21 18E3  
                          u660_21 0046                            _OSCFRQ 0893                            u645_20 198D  
                          u661_20 004B                            u653_20 000B                            u645_21 198C  
                          u661_21 004A                            u653_21 000A                            u646_20 1996  
                          u662_20 004F                            u654_20 000F                            u646_21 1995  
                          u662_21 004E                            u654_21 000E                            u647_20 1AB0  
                          u663_20 0059                            u655_20 001D                            u647_21 1AAF  
                          u663_21 0058                            u655_21 001C                            u648_20 1ABB  
                          u664_20 006C                            u656_20 0021                            u648_21 1ABA  
                          u664_21 006B                            u656_21 0020                            u649_20 1AC8  
                          u665_20 0070                            u657_20 0026                            u649_21 1AC7  
                          u665_21 006F                            u657_21 0025                            u658_20 0030  
                          u658_21 002F                            u659_20 003A                            u659_21 0039  
                          _SPBRGL 011B                            _TX1REG 011A                            _TX1STA 011E  
                __end_of___xxtofl 118A                   ??_pushButtonISR 0070                    __CFG_PWRTE$OFF 0000  
                    vfprintf@cfmt 0135                            ___flge 1027                            ___fleq 07A7  
                       ??___fladd 0028                            ___wmul 2794                         ??___fldiv 0050  
                       ??___awdiv 0024                         ??___flneg 0024                    __CFG_STVREN$ON 0000  
                       ??___awmod 0024                         ??___flmul 0036                         ??___flsub 0050  
                       ??___fltol 0024                            _efgtoa 1334          __size_of_OLED_returnHome 0005  
                          _floorf 1450                       menuInput@pb 002F                  ___awdiv@quotient 0027  
                 ___awmod@divisor 0020                            _rotISR 1960                     ?_OLED_command 0070  
                 ___awmod@counter 0025                            pad@buf 0030                            _strcpy 27DB  
                          _strlen 1862                 ?_readAnalogValues 0070                            fputc@c 0020  
                          fputs@c 002C                            fputs@i 002D                            fputs@s 002F  
                       ??_isdigit 0022                      _g_dataPacket 0240                __size_of__Umul8_16 0027  
                 ___fpclassifyf@e 002A                   ___fpclassifyf@u 002C                   ___fpclassifyf@x 0020  
              ??_readAnalogValues 0062                  __end_of_showMenu 2000             OLED_waitForReady@busy 0020  
                       ??_isspace 0022                         ??_isupper 0022                 OLED_command@value 0026  
                     _g_100msTick 007C                            putch@c 0070                  __end_of_vfprintf 18BF  
                       ??_sprintf 014D                         ??_tolower 0028                         ??_strncmp 0024  
                       ??_strncpy 0073                  _OLED_pulseEnable 26CF                        ___flge@ff1 0048  
                      ___flge@ff2 004C                   ??___fpclassifyf 0024                      ___xxtofl@arg 002A  
                    ___xxtofl@exp 0029                      ___xxtofl@val 0020                        ___fleq@ff1 0020  
                      ___fleq@ff2 0024           __end_of__initialization 00AF                        ___flneg@f1 0020  
                      ___fltol@f1 0020          __size_of_OLED_write4bits 0040                    __pcstackCOMMON 0070  
                    __pidataBANK4 07F8                     __end_of_getPB 2704              uartReceiveISR@buffer 022C  
                   __end_of_fputc 1C6F                     __end_of_fputs 1862                     __end_of_putch 0004  
                  ??_OLED_command 0026                __size_of_getRotDir 0009         ??_OLED_scrollDisplayRight 0027  
                         ??_getPB 0020            __size_of_OLED_print_xy 0038                           ??_fputc 0023  
                         ??_fputs 0029                           ??_putch 0020                        __pbssBANK2 015A  
                      __pbssBANK3 01DE                        __pbssBANK4 0220                        __pbssBANK5 02A0  
         __size_of_uartReceiveISR 0051                __size_of_menuInput 00C3                      ??_OLED_write 0026  
               __end_of__Umul8_16 1027                        _efgtoa$840 00B7                        _efgtoa$834 00B3  
                      _efgtoa$835 00B5                        _efgtoa$844 00B9                        _efgtoa$845 00BB  
                      _efgtoa$846 00BD                        __pmaintext 1A1B                           ?___flge 0048  
                         ?___fleq 0020                           ?___wmul 0020                   __CFG_PPS1WAY$ON 0000  
                      __pintentry 0004                           ?_efgtoa 00AA                           ?_floorf 0062  
               _OLED_waitForReady 2771                           ?_rotISR 0070          ??_OLED_scrollDisplayLeft 0027  
                         ?_strcpy 0020                           ?_strlen 0020                ?_OLED_waitForReady 0070  
               ??_OLED_returnHome 0027                         ?___xxtofl 0020                           _OSCCON1 088D  
              __size_of_vfpfcnvrt 039F                __end_of_OLED_write 26F8               ??_OLED_waitForReady 0020  
                     rotISR@input 0077          __end_of_handleSensorData 1B56                 __end_of_getRotDir 26E1  
                       ?_showMenu 0070                     _OLED_print_xy 1928         __end_of_OLED_waitForReady 2794  
                 __size_of___flge 00AE                   __size_of___fleq 0051                           ___fladd 09EF  
                         ___fldiv 0810                           ___awdiv 1C6F                           ___flneg 1800  
                         ___awmod 1BB3                           ___flmul 1595                           ___flsub 2750  
                         ___fltol 1EC4                   __size_of___wmul 0023                   OLED_write@value 0026  
                       ?_vfprintf 012F                   __size_of_efgtoa F473                     ?_uartSendByte 0070  
                 __size_of_floorf 0145                 ??_OLED_write4bits 0020                   menuInput@pbLong 002A  
                      _initialize 1A60                           _g_tempC 01E6                   __size_of_rotISR 003D  
                         __ptext1 0802                           __ptext2 1F59                           __ptext3 180E  
                         __ptext4 188D                           __ptext5 0C61                           __ptext6 1CD9  
                         __ptext7 1334                           __ptext8 18F3                           __ptext9 2736  
                         _g_power 015A                   __CFG_WRTAPP$OFF 0000                   __size_of_strcpy 0025  
                 __size_of_strlen 002B                      __size_of_ISR 0078                 __end_of_menuInput 124D  
                    __size_of_pad 005D                      menuInput@dir 002E                           _isdigit 271C  
                      ??___xxtofl 0024                  ___awmod@dividend 0022                           _isspace 27B7  
                       _IOCAFbits 1F3F                   __CFG_WRTSAF$OFF 0000                           _isupper 2736  
                         efgtoa@c 00AE                           efgtoa@d 00C7                           efgtoa@e 00E0  
                         efgtoa@f 00AA                           efgtoa@g 00DC                           efgtoa@h 00D2  
                         efgtoa@i 00DA                           efgtoa@l 00D6                           efgtoa@m 00C3  
                         efgtoa@n 00E2                           efgtoa@p 00CC                           efgtoa@t 00BF  
                         efgtoa@u 00E4                           efgtoa@w 00CF                           atoi@neg 002C  
                         _sprintf 180E                           _tolower 18F3                           clrloop0 26C4  
                         _strncmp 1CD9                           _strncpy 199D              end_of_initialization 00AF  
                         floorf@e 00A4                           floorf@m 00A0                           floorf@u 00A6  
                         floorf@x 0062              __end_of_OLED_command 26EC                           fputc@fp 0022  
                         init_ram 26C9                           fputs@fp 0028                           initloop 26CA  
                       _OLED_init 1E39                         _OLED_send 2704               OLED_setCursor@F7345 0253  
                  ?_OLED_print_xy 0027                OLED_print_xy@F7353 024F                 __end_of_vfpfcnvrt 1000  
                      efgtoa@mode 00D1                        efgtoa@sign 00C9                        ??_showMenu 0157  
                         psplit$0 210052                    ??_uartSendByte 0020  
                      ??_vfprintf 0132             __CFG_WDTCPS$WDTCPS_31 0000          __end_of_OLED_pulseEnable 26D8  
                         strcpy@d 0026                           strlen@a 0026                           strcpy@s 0024  
                         strlen@s 0027                         _PORTAbits 000C                         _PORTCbits 000E  
 __size_of_OLED_scrollDisplayLeft 0005                       ___fladd@grs 0037                     ___xxtofl@sign 0028  
                       _TRISCbits 0014                       ___fldiv@grs 005C                       ___fldiv@rem 0055  
                __CFG_FEXTOSC$OFF 0000                    _uartReceiveISR 1AAB                       ___flmul@grs 003C  
       __size_of_readAnalogValues 0072                        ?_OLED_init 0070                        ?_OLED_send 0023  
           __end_of_pushButtonISR 18F3        __size_of_OLED_waitForReady 0023                    __end_of___flge 10D5  
                  __end_of___fleq 07F8                       vfpfcnvrt@ap 00E9                       vfpfcnvrt@ct 012A  
                     vfpfcnvrt@fp 012E                    __end_of___wmul 27B7                    __end_of_efgtoa 07A7  
                     ?_initialize 0070                    __end_of_floorf 1595                        floorf@F514 0220  
                  __end_of_rotISR 199D                    __end_of_strcpy 2800                    __end_of_strlen 188D  
             start_initialization 007E             uartReceiveISR@rxCount 0079                       __end_of_ISR 007C  
                     __end_of_pad 1BB3          OLED_print_xy@row_offsets 002B            __end_of_uartReceiveISR 1AFC  
               pnum$text7_split_1 0052            _OLED_scrollDisplayLeft 26B9             __end_of___fpclassifyf 1E39  
                 ??_OLED_print_xy 002A                  __CFG_LPBOREN$OFF 0000                       vfprintf@fmt 012F  
                        ??___flge 0050                          ??___fleq 0028                   _OLED_returnHome 26B4  
                        ??___wmul 0024                        menuInput@n 0030                     _g_curRotState 007B  
                        ??_efgtoa 006C                         __Umul8_16 1000                       __pdataBANK4 024F  
                        ??_floorf 0066                       _g_dataReady 01EA                          ??_rotISR 0070  
                        ??_strcpy 0022                          ??_strlen 0022                  OLED_print_xy@col 002F  
                       ___fladd@a 0024                         ___fladd@b 0020                  OLED_print_xy@row 0027  
                       ___fldiv@a 0048                         ___fldiv@b 004C                       _g_dewPointC 01DE  
                       ___flmul@a 0032                         ___flmul@b 002E                       __pbssCOMMON 0079  
                       ___flsub@a 0048                         ___flsub@b 004C                         ___latbits 0003  
                   __pcstackBANK0 0020                     __pcstackBANK1 00A0                     __pcstackBANK2 0120  
                   __pcstackBANK3 01A0             __size_of_OLED_command 000B                 __size_of___xxtofl 00B5  
                 ?_uartReceiveISR 0070              __end_of_uartSendByte 0810               __size_of_initialize 004B  
                       _atoi$1170 0032                         _atoi$1171 0030                         _atoi$1169 002E  
               ?_handleSensorData 0070                   _OLED_write4bits 19DB                       ??_OLED_init 0027  
                     ??_OLED_send 0024                         _g_pbState 016B                ??_handleSensorData 002E  
                   _g_rxFErrCount 016D                          ?___fladd 0020                          ?___fldiv 0048  
                        ?___awdiv 0020                          ?___flneg 0020                          ?___awmod 0020  
                        ?___flmul 002E                          ?___flsub 0048                          ?___fltol 0020  
                       _getRotDir 26D8                        ?__Umul8_16 0020                 __size_of_showMenu 00A7  
                       _g_voltage 015E          ?_OLED_scrollDisplayRight 0070                      _OLED_command 26E1  
               __size_of_vfprintf 0032                 menuInput@numPages 0027                          _BAUD1CON 011F  
                        ?_isdigit 0020                          ?_isspace 0020                          ?_isupper 0020  
                  __size_of_getPB 000C                         _menuInput 118A                          ?_sprintf 0137  
                        ?_tolower 0026                    __size_of_fputc 005E                    __size_of_fputs 002B  
                        ?_strncmp 0020                          ?_strncpy 0070                     _g_rxOErrCount 016C  
                  __size_of_putch 0001                  _readAnalogValues 1D44                    ___wmul@product 0024  
                        _LATBbits 0019                          _LATCbits 001A           __end_of_OLED_returnHome 26B9  
                       clear_ram0 26C3                          _PIE0bits 0716                          _PIE3bits 0719  
                        _PIE4bits 071A                          _PIR0bits 070C                          _PIR3bits 070F  
                        _PIR4bits 0710                 __CFG_BBSIZE$BB512 0000                        showMenu@pb 01DD  
                      ?_getRotDir 0070                         _vfpfcnvrt 0C61                 ?_OLED_pulseEnable 0070  
                      _ADCON0bits 009D                 ___wmul@multiplier 0020                      _RX1DTPPSbits 1ECB  
              ??_OLED_pulseEnable 0020               readAnalogValues@adc 0066              OLED_write4bits@value 0022  
                    _isspace$1200 0024                  _transition_table 2000                        ?_menuInput 0027  
                      vfpfcnvrt@c 012D                        vfpfcnvrt@f 0126           __end_of_OLED_write4bits 1A1B  
                   _g_sensorTimer 01EB                     uartSendByte@s 0020                        vfprintf@ap 0131  
                      vfprintf@fp 0134   __end_of_OLED_scrollDisplayRight 26C3                       ??__Umul8_16 0022  
                __size_of___fladd 0272                  __size_of___fldiv 01DF                  __size_of___awdiv 006A  
                __size_of___flneg 000E                  __size_of___awmod 005E                  __size_of___flmul 026B  
                __size_of___flsub 0021                  __size_of___fltol 0095                        ?_vfpfcnvrt 00E8  
                    ??_initialize 0020                ___fpclassifyf@F453 0224                        sprintf@fmt 0137  
                      sprintf@ret 014E                          ___xxtofl 10D5                  __size_of_isdigit 001A  
           __size_of_uartSendByte 000E                  menuInput@pbShort 0029                          _g_relHum 01E2  
                __size_of_isspace 0024                          _g_rotDir 007A                          __ptext10 27DB  
                        __ptext11 1B56                          __ptext20 09EF                          __ptext12 1862  
                        __ptext21 1800                          __ptext13 1837                          __ptext30 118A  
                        __ptext22 1027                          __ptext14 1C11                          __ptext31 26D8  
                        __ptext23 07A7                          __ptext15 0003                          __ptext40 1000  
                        __ptext32 26F8                          __ptext24 1BB3                          __ptext16 1450  
                        __ptext41 0810                          __ptext33 26BE                          __ptext25 1C6F  
                        __ptext17 1DB6                          __ptext50 26CF                          __ptext42 1A60  
                        __ptext34 26B9                          __ptext26 124D                          __ptext18 1EC4  
                        __ptext43 1AFC                          __ptext35 26B4                          __ptext27 27B7  
                        __ptext19 2750                          __ptext52 1AAB                          __ptext44 10D5  
                        __ptext36 1928                          __ptext28 271C                          __ptext53 199D  
                        __ptext45 1E39                          __ptext37 26EC                          __ptext29 2794  
                        __ptext54 1960                          __ptext46 26E1                          __ptext38 1D44  
                        __ptext55 18BF                          __ptext47 2771                          __ptext39 1595  
                        __ptext48 2704                          __ptext49 19DB                  __size_of_isupper 001A  
         ?_OLED_scrollDisplayLeft 0070                  __size_of_sprintf 0029                  __size_of_tolower 0035  
                     _OSCCON3bits 088F                        strcpy@dest 0027                  __size_of_strncmp 006B  
                __size_of_strncpy 003E                  menuInput@timeout 002B                     __size_of_atoi 00E7  
                   __size_of_main 0045                         pnum$text7 0021                     menuInput@page 0031  
                   menuInput@menu 0028                          getPB@ret 0021                  ?_OLED_returnHome 0070  
              __end_of_initialize 1AAB              __CFG_WDTCWS$WDTCWS_7 0000                        _RC1STAbits 011D  
                        efgtoa@fp 00CB                          efgtoa@ne 00C5                          efgtoa@pp 00C1  
                        efgtoa@ou 00AF                         showMenu@s 01A0                          _showMenu 1F59  
                        int$flags 007E                       ??_getRotDir 0020                          _vfprintf 188D  
                    _uartSendByte 0802                  ??_uartReceiveISR 0076                        _INTCONbits 000B  
  __end_of_OLED_scrollDisplayLeft 26BE            __size_of_pushButtonISR 0034                          isdigit@c 0020  
                     ??_menuInput 002C                  ?_OLED_write4bits 0070                          intlevel1 0000  
                       sprintf@ap 0151                          isspace@c 0020                 __CFG_CLKOUTEN$OFF 0000  
                       strcpy@src 0020                          isupper@c 0020                        _OLED_write 26EC  
                       strncmp@_l 0026                         strncmp@_r 0020                         strncpy@cp 0075  
           __end_of_OLED_print_xy 1960                       efgtoa@nmode 00CE             _readAnalogValues$1449 0062  
                     ??_vfpfcnvrt 00EA                      getRotDir@ret 0021                     _vfpfcnvrt$860 0120  
                   _vfpfcnvrt$861 0122                     _vfpfcnvrt$865 0124                     __pstringtext1 2000  
                   __pstringtext2 2050                     __pstringtext3 2081                     __pstringtext4 2800  
                   __pstringtext5 2804                     __pstringtext6 2808                     __pstringtext7 280C  
                   __pstringtext8 2810                     __pstringtext9 0000          __end_of_readAnalogValues 1DB6  
          __Umul8_16@multiplicand 0020         __size_of_handleSensorData 005A                          sprintf@f 0152  
                    showMenu@page 01EC                          tolower@c 0026                          sprintf@s 0150  
                    showMenu@menu 01ED            __size_of___fpclassifyf 0083                          strncmp@l 0029  
                        strncmp@n 0022                          strncmp@r 0027                          strncpy@d 0074  
                        strncpy@n 0071                          strncpy@s 0070                     ___fladd@signs 0034  
__size_of_OLED_scrollDisplayRight 0005                      ___fladd@aexp 0035                      ___fladd@bexp 0036  
            __Umul8_16@multiplier 0028                 __Umul8_16@product 0024  
