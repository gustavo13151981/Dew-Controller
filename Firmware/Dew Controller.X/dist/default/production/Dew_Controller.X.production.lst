

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Jan 19 22:43:08 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F15356 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 110 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 130 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 277 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 510 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   120                           PORTB equ 0Dh ;# 
   121  000D                     # 572 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   122                           PORTC equ 0Eh ;# 
   123  000E                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   124                           PORTE equ 010h ;# 
   125  0010                     # 655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   126                           TRISA equ 012h ;# 
   127  0012                     # 717 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   128                           TRISB equ 013h ;# 
   129  0013                     # 779 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   130                           TRISC equ 014h ;# 
   131  0014                     # 841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   132                           TRISE equ 016h ;# 
   133  0016                     # 862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   134                           LATA equ 018h ;# 
   135  0018                     # 924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   136                           LATB equ 019h ;# 
   137  0019                     # 986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   138                           LATC equ 01Ah ;# 
   139  001A                     # 1048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   140                           ADRES equ 09Bh ;# 
   141  009B                     # 1055 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   142                           ADRESL equ 09Bh ;# 
   143  009B                     # 1125 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   144                           ADRESH equ 09Ch ;# 
   145  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   146                           ADCON0 equ 09Dh ;# 
   147  009D                     # 1272 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   148                           ADCON1 equ 09Eh ;# 
   149  009E                     # 1338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   150                           ADACT equ 09Fh ;# 
   151  009F                     # 1390 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   152                           RC1REG equ 0119h ;# 
   153  0119                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   154                           RCREG equ 0119h ;# 
   155  0119                     # 1399 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   156                           RCREG1 equ 0119h ;# 
   157  0119                     # 1444 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   158                           TX1REG equ 011Ah ;# 
   159  011A                     # 1449 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   160                           TXREG1 equ 011Ah ;# 
   161  011A                     # 1453 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   162                           TXREG equ 011Ah ;# 
   163  011A                     # 1498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   164                           SP1BRG equ 011Bh ;# 
   165  011B                     # 1505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   166                           SP1BRGL equ 011Bh ;# 
   167  011B                     # 1510 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   168                           SPBRG equ 011Bh ;# 
   169  011B                     # 1514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   170                           SPBRG1 equ 011Bh ;# 
   171  011B                     # 1518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   172                           SPBRGL equ 011Bh ;# 
   173  011B                     # 1575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   174                           SP1BRGH equ 011Ch ;# 
   175  011C                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   176                           SPBRGH equ 011Ch ;# 
   177  011C                     # 1584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   178                           SPBRGH1 equ 011Ch ;# 
   179  011C                     # 1629 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   180                           RC1STA equ 011Dh ;# 
   181  011D                     # 1634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   182                           RCSTA1 equ 011Dh ;# 
   183  011D                     # 1638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   184                           RCSTA equ 011Dh ;# 
   185  011D                     # 1809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   186                           TX1STA equ 011Eh ;# 
   187  011E                     # 1814 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   188                           TXSTA1 equ 011Eh ;# 
   189  011E                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   190                           TXSTA equ 011Eh ;# 
   191  011E                     # 1989 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   192                           BAUD1CON equ 011Fh ;# 
   193  011F                     # 1994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   194                           BAUDCON1 equ 011Fh ;# 
   195  011F                     # 1998 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   196                           BAUDCTL1 equ 011Fh ;# 
   197  011F                     # 2002 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   198                           BAUDCON equ 011Fh ;# 
   199  011F                     # 2006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   200                           BAUDCTL equ 011Fh ;# 
   201  011F                     # 2235 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   202                           SSP1BUF equ 018Ch ;# 
   203  018C                     # 2255 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   204                           SSP1ADD equ 018Dh ;# 
   205  018D                     # 2375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   206                           SSP1MSK equ 018Eh ;# 
   207  018E                     # 2445 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   208                           SSP1STAT equ 018Fh ;# 
   209  018F                     # 2809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   210                           SSP1CON1 equ 0190h ;# 
   211  0190                     # 2929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   212                           SSP1CON2 equ 0191h ;# 
   213  0191                     # 3116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   214                           SSP1CON3 equ 0192h ;# 
   215  0192                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   216                           SSP2BUF equ 0196h ;# 
   217  0196                     # 3198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   218                           SSP2ADD equ 0197h ;# 
   219  0197                     # 3318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   220                           SSP2MSK equ 0198h ;# 
   221  0198                     # 3388 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   222                           SSP2STAT equ 0199h ;# 
   223  0199                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   224                           SSP2CON1 equ 019Ah ;# 
   225  019A                     # 3872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   226                           SSP2CON2 equ 019Bh ;# 
   227  019B                     # 4059 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   228                           SSP2CON3 equ 019Ch ;# 
   229  019C                     # 4121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   230                           TMR1 equ 020Ch ;# 
   231  020C                     # 4128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   232                           TMR1L equ 020Ch ;# 
   233  020C                     # 4298 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   234                           TMR1H equ 020Dh ;# 
   235  020D                     # 4418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   236                           T1CON equ 020Eh ;# 
   237  020E                     # 4514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   238                           T1GCON equ 020Fh ;# 
   239  020F                     # 4519 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   240                           PR1 equ 020Fh ;# 
   241  020F                     # 4710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   242                           T1GATE equ 0210h ;# 
   243  0210                     # 4715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   244                           TMR1GATE equ 0210h ;# 
   245  0210                     # 4876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   246                           T1CLK equ 0211h ;# 
   247  0211                     # 4881 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   248                           TMR1CLK equ 0211h ;# 
   249  0211                     # 5018 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   250                           T2TMR equ 028Ch ;# 
   251  028C                     # 5023 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   252                           TMR2 equ 028Ch ;# 
   253  028C                     # 5072 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   254                           T2PR equ 028Dh ;# 
   255  028D                     # 5077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   256                           PR2 equ 028Dh ;# 
   257  028D                     # 5126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   258                           T2CON equ 028Eh ;# 
   259  028E                     # 5272 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   260                           T2HLT equ 028Fh ;# 
   261  028F                     # 5400 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   262                           T2CLKCON equ 0290h ;# 
   263  0290                     # 5480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   264                           T2RST equ 0291h ;# 
   265  0291                     # 5560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   266                           CCPR1 equ 030Ch ;# 
   267  030C                     # 5567 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   268                           CCPR1L equ 030Ch ;# 
   269  030C                     # 5587 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   270                           CCPR1H equ 030Dh ;# 
   271  030D                     # 5607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   272                           CCP1CON equ 030Eh ;# 
   273  030E                     # 5734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   274                           CCP1CAP equ 030Fh ;# 
   275  030F                     # 5802 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   276                           CCPR2 equ 0310h ;# 
   277  0310                     # 5809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   278                           CCPR2L equ 0310h ;# 
   279  0310                     # 5829 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   280                           CCPR2H equ 0311h ;# 
   281  0311                     # 5849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   282                           CCP2CON equ 0312h ;# 
   283  0312                     # 5976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   284                           CCP2CAP equ 0313h ;# 
   285  0313                     # 6044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   286                           PWM3DC equ 0314h ;# 
   287  0314                     # 6051 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   288                           PWM3DCL equ 0314h ;# 
   289  0314                     # 6117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   290                           PWM3DCH equ 0315h ;# 
   291  0315                     # 6287 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   292                           PWM3CON equ 0316h ;# 
   293  0316                     # 6343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   294                           PWM4DC equ 0318h ;# 
   295  0318                     # 6350 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   296                           PWM4DCL equ 0318h ;# 
   297  0318                     # 6416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   298                           PWM4DCH equ 0319h ;# 
   299  0319                     # 6586 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   300                           PWM4CON equ 031Ah ;# 
   301  031A                     # 6642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   302                           PWM5DC equ 031Ch ;# 
   303  031C                     # 6649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   304                           PWM5DCL equ 031Ch ;# 
   305  031C                     # 6715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   306                           PWM5DCH equ 031Dh ;# 
   307  031D                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   308                           PWM5CON equ 031Eh ;# 
   309  031E                     # 6941 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   310                           PWM6DC equ 038Ch ;# 
   311  038C                     # 6948 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   312                           PWM6DCL equ 038Ch ;# 
   313  038C                     # 7014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   314                           PWM6DCH equ 038Dh ;# 
   315  038D                     # 7184 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   316                           PWM6CON equ 038Eh ;# 
   317  038E                     # 7242 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   318                           NCO1ACC equ 058Ch ;# 
   319  058C                     # 7249 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   320                           NCO1ACCL equ 058Ch ;# 
   321  058C                     # 7319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   322                           NCO1ACCH equ 058Dh ;# 
   323  058D                     # 7389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   324                           NCO1ACCU equ 058Eh ;# 
   325  058E                     # 7437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   326                           NCO1INC equ 058Fh ;# 
   327  058F                     # 7444 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   328                           NCO1INCL equ 058Fh ;# 
   329  058F                     # 7514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   330                           NCO1INCH equ 0590h ;# 
   331  0590                     # 7584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   332                           NCO1INCU equ 0591h ;# 
   333  0591                     # 7630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   334                           NCO1CON equ 0592h ;# 
   335  0592                     # 7670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   336                           NCO1CLK equ 0593h ;# 
   337  0593                     # 7736 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   338                           TMR0L equ 059Ch ;# 
   339  059C                     # 7741 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   340                           TMR0 equ 059Ch ;# 
   341  059C                     # 7874 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   342                           TMR0H equ 059Dh ;# 
   343  059D                     # 7879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   344                           PR0 equ 059Dh ;# 
   345  059D                     # 8128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   346                           T0CON0 equ 059Eh ;# 
   347  059E                     # 8198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   348                           T0CON1 equ 059Fh ;# 
   349  059F                     # 8309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   350                           CWG1CLKCON equ 060Ch ;# 
   351  060C                     # 8337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   352                           CWG1DAT equ 060Dh ;# 
   353  060D                     # 8383 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   354                           CWG1DBR equ 060Eh ;# 
   355  060E                     # 8487 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   356                           CWG1DBF equ 060Fh ;# 
   357  060F                     # 8591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   358                           CWG1CON0 equ 0610h ;# 
   359  0610                     # 8692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   360                           CWG1CON1 equ 0611h ;# 
   361  0611                     # 8770 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   362                           CWG1AS0 equ 0612h ;# 
   363  0612                     # 8890 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   364                           CWG1AS1 equ 0613h ;# 
   365  0613                     # 8934 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   366                           CWG1STR equ 0614h ;# 
   367  0614                     # 9046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   368                           PIR0 equ 070Ch ;# 
   369  070C                     # 9079 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   370                           PIR1 equ 070Dh ;# 
   371  070D                     # 9118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   372                           PIR2 equ 070Eh ;# 
   373  070E                     # 9151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   374                           PIR3 equ 070Fh ;# 
   375  070F                     # 9213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   376                           PIR4 equ 0710h ;# 
   377  0710                     # 9239 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   378                           PIR5 equ 0711h ;# 
   379  0711                     # 9284 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   380                           PIR6 equ 0712h ;# 
   381  0712                     # 9310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   382                           PIR7 equ 0713h ;# 
   383  0713                     # 9352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   384                           PIE0 equ 0716h ;# 
   385  0716                     # 9385 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   386                           PIE1 equ 0717h ;# 
   387  0717                     # 9424 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   388                           PIE2 equ 0718h ;# 
   389  0718                     # 9457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   390                           PIE3 equ 0719h ;# 
   391  0719                     # 9519 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   392                           PIE4 equ 071Ah ;# 
   393  071A                     # 9545 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   394                           PIE5 equ 071Bh ;# 
   395  071B                     # 9590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   396                           PIE6 equ 071Ch ;# 
   397  071C                     # 9616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   398                           PIE7 equ 071Dh ;# 
   399  071D                     # 9658 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   400                           PMD0 equ 0796h ;# 
   401  0796                     # 9703 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   402                           PMD1 equ 0797h ;# 
   403  0797                     # 9751 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   404                           PMD2 equ 0798h ;# 
   405  0798                     # 9796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   406                           PMD3 equ 0799h ;# 
   407  0799                     # 9846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   408                           PMD4 equ 079Ah ;# 
   409  079A                     # 9891 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   410                           PMD5 equ 079Bh ;# 
   411  079B                     # 9930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   412                           WDTCON0 equ 080Ch ;# 
   413  080C                     # 10005 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   414                           WDTCON1 equ 080Dh ;# 
   415  080D                     # 10099 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   416                           WDTPSL equ 080Eh ;# 
   417  080E                     # 10227 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   418                           WDTPSH equ 080Fh ;# 
   419  080F                     # 10355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   420                           WDTTMR equ 0810h ;# 
   421  0810                     # 10437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   422                           BORCON equ 0811h ;# 
   423  0811                     # 10464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   424                           VREGCON equ 0812h ;# 
   425  0812                     # 10485 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   426                           PCON0 equ 0813h ;# 
   427  0813                     # 10547 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   428                           PCON1 equ 0814h ;# 
   429  0814                     # 10568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   430                           NVMADR equ 081Ah ;# 
   431  081A                     # 10575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   432                           NVMADRL equ 081Ah ;# 
   433  081A                     # 10637 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   434                           NVMADRH equ 081Bh ;# 
   435  081B                     # 10693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   436                           NVMDAT equ 081Ch ;# 
   437  081C                     # 10700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   438                           NVMDATL equ 081Ch ;# 
   439  081C                     # 10762 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   440                           NVMDATH equ 081Dh ;# 
   441  081D                     # 10812 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   442                           NVMCON1 equ 081Eh ;# 
   443  081E                     # 10868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   444                           NVMCON2 equ 081Fh ;# 
   445  081F                     # 10888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   446                           CPUDOZE equ 088Ch ;# 
   447  088C                     # 10953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   448                           OSCCON1 equ 088Dh ;# 
   449  088D                     # 11023 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   450                           OSCCON2 equ 088Eh ;# 
   451  088E                     # 11093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   452                           OSCCON3 equ 088Fh ;# 
   453  088F                     # 11133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   454                           OSCSTAT equ 0890h ;# 
   455  0890                     # 11190 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   456                           OSCEN equ 0891h ;# 
   457  0891                     # 11241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   458                           OSCTUNE equ 0892h ;# 
   459  0892                     # 11299 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   460                           OSCFRQ equ 0893h ;# 
   461  0893                     # 11339 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   462                           CLKRCON equ 0895h ;# 
   463  0895                     # 11404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   464                           CLKRCLK equ 0896h ;# 
   465  0896                     # 11450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   466                           FVRCON equ 090Ch ;# 
   467  090C                     # 11526 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   468                           DAC1CON0 equ 090Eh ;# 
   469  090E                     # 11627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   470                           DAC1CON1 equ 090Fh ;# 
   471  090F                     # 11679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   472                           ZCDCON equ 091Fh ;# 
   473  091F                     # 11725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   474                           CMOUT equ 098Fh ;# 
   475  098F                     # 11730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   476                           CMSTAT equ 098Fh ;# 
   477  098F                     # 11803 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   478                           CM1CON0 equ 0990h ;# 
   479  0990                     # 11883 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   480                           CM1CON1 equ 0991h ;# 
   481  0991                     # 11923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   482                           CM1NCH equ 0992h ;# 
   483  0992                     # 11983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   484                           CM1PCH equ 0993h ;# 
   485  0993                     # 12043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   486                           CM2CON0 equ 0994h ;# 
   487  0994                     # 12123 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   488                           CM2CON1 equ 0995h ;# 
   489  0995                     # 12163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   490                           CM2NCH equ 0996h ;# 
   491  0996                     # 12223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   492                           CM2PCH equ 0997h ;# 
   493  0997                     # 12283 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   494                           RC2REG equ 0A19h ;# 
   495  0A19                     # 12288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   496                           RCREG2 equ 0A19h ;# 
   497  0A19                     # 12321 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   498                           TX2REG equ 0A1Ah ;# 
   499  0A1A                     # 12326 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   500                           TXREG2 equ 0A1Ah ;# 
   501  0A1A                     # 12359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   502                           SP2BRG equ 0A1Bh ;# 
   503  0A1B                     # 12366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   504                           SP2BRGL equ 0A1Bh ;# 
   505  0A1B                     # 12371 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   506                           SPBRG2 equ 0A1Bh ;# 
   507  0A1B                     # 12404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   508                           SP2BRGH equ 0A1Ch ;# 
   509  0A1C                     # 12409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   510                           SPBRGH2 equ 0A1Ch ;# 
   511  0A1C                     # 12442 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   512                           RC2STA equ 0A1Dh ;# 
   513  0A1D                     # 12447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   514                           RCSTA2 equ 0A1Dh ;# 
   515  0A1D                     # 12564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   516                           TX2STA equ 0A1Eh ;# 
   517  0A1E                     # 12569 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   518                           TXSTA2 equ 0A1Eh ;# 
   519  0A1E                     # 12686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   520                           BAUD2CON equ 0A1Fh ;# 
   521  0A1F                     # 12691 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   522                           BAUDCON2 equ 0A1Fh ;# 
   523  0A1F                     # 12695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   524                           BAUDCTL2 equ 0A1Fh ;# 
   525  0A1F                     # 12836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   526                           CLCDATA equ 01E0Fh ;# 
   527  1E0F                     # 12874 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   528                           CLC1CON equ 01E10h ;# 
   529  1E10                     # 12992 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   530                           CLC1POL equ 01E11h ;# 
   531  1E11                     # 13070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   532                           CLC1SEL0 equ 01E12h ;# 
   533  1E12                     # 13174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   534                           CLC1SEL1 equ 01E13h ;# 
   535  1E13                     # 13278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   536                           CLC1SEL2 equ 01E14h ;# 
   537  1E14                     # 13382 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   538                           CLC1SEL3 equ 01E15h ;# 
   539  1E15                     # 13486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   540                           CLC1GLS0 equ 01E16h ;# 
   541  1E16                     # 13598 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   542                           CLC1GLS1 equ 01E17h ;# 
   543  1E17                     # 13710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   544                           CLC1GLS2 equ 01E18h ;# 
   545  1E18                     # 13822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   546                           CLC1GLS3 equ 01E19h ;# 
   547  1E19                     # 13934 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   548                           CLC2CON equ 01E1Ah ;# 
   549  1E1A                     # 14052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   550                           CLC2POL equ 01E1Bh ;# 
   551  1E1B                     # 14130 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   552                           CLC2SEL0 equ 01E1Ch ;# 
   553  1E1C                     # 14234 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   554                           CLC2SEL1 equ 01E1Dh ;# 
   555  1E1D                     # 14338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   556                           CLC2SEL2 equ 01E1Eh ;# 
   557  1E1E                     # 14442 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   558                           CLC2SEL3 equ 01E1Fh ;# 
   559  1E1F                     # 14546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   560                           CLC2GLS0 equ 01E20h ;# 
   561  1E20                     # 14658 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   562                           CLC2GLS1 equ 01E21h ;# 
   563  1E21                     # 14770 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   564                           CLC2GLS2 equ 01E22h ;# 
   565  1E22                     # 14882 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   566                           CLC2GLS3 equ 01E23h ;# 
   567  1E23                     # 14994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   568                           CLC3CON equ 01E24h ;# 
   569  1E24                     # 15112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   570                           CLC3POL equ 01E25h ;# 
   571  1E25                     # 15190 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   572                           CLC3SEL0 equ 01E26h ;# 
   573  1E26                     # 15294 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   574                           CLC3SEL1 equ 01E27h ;# 
   575  1E27                     # 15398 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   576                           CLC3SEL2 equ 01E28h ;# 
   577  1E28                     # 15502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   578                           CLC3SEL3 equ 01E29h ;# 
   579  1E29                     # 15606 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   580                           CLC3GLS0 equ 01E2Ah ;# 
   581  1E2A                     # 15718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   582                           CLC3GLS1 equ 01E2Bh ;# 
   583  1E2B                     # 15830 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   584                           CLC3GLS2 equ 01E2Ch ;# 
   585  1E2C                     # 15942 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   586                           CLC3GLS3 equ 01E2Dh ;# 
   587  1E2D                     # 16054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   588                           CLC4CON equ 01E2Eh ;# 
   589  1E2E                     # 16172 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   590                           CLC4POL equ 01E2Fh ;# 
   591  1E2F                     # 16250 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   592                           CLC4SEL0 equ 01E30h ;# 
   593  1E30                     # 16354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   594                           CLC4SEL1 equ 01E31h ;# 
   595  1E31                     # 16458 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   596                           CLC4SEL2 equ 01E32h ;# 
   597  1E32                     # 16562 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   598                           CLC4SEL3 equ 01E33h ;# 
   599  1E33                     # 16666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   600                           CLC4GLS0 equ 01E34h ;# 
   601  1E34                     # 16778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   602                           CLC4GLS1 equ 01E35h ;# 
   603  1E35                     # 16890 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   604                           CLC4GLS2 equ 01E36h ;# 
   605  1E36                     # 17002 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   606                           CLC4GLS3 equ 01E37h ;# 
   607  1E37                     # 17114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   608                           PPSLOCK equ 01E8Fh ;# 
   609  1E8F                     # 17134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   610                           INTPPS equ 01E90h ;# 
   611  1E90                     # 17192 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   612                           T0CKIPPS equ 01E91h ;# 
   613  1E91                     # 17250 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   614                           T1CKIPPS equ 01E92h ;# 
   615  1E92                     # 17308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   616                           T1GPPS equ 01E93h ;# 
   617  1E93                     # 17366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   618                           T2INPPS equ 01E9Ch ;# 
   619  1E9C                     # 17424 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   620                           CCP1PPS equ 01EA1h ;# 
   621  1EA1                     # 17482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   622                           CCP2PPS equ 01EA2h ;# 
   623  1EA2                     # 17540 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   624                           CWG1PPS equ 01EB1h ;# 
   625  1EB1                     # 17598 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   626                           CLCIN0PPS equ 01EBBh ;# 
   627  1EBB                     # 17656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   628                           CLCIN1PPS equ 01EBCh ;# 
   629  1EBC                     # 17714 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   630                           CLCIN2PPS equ 01EBDh ;# 
   631  1EBD                     # 17772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   632                           CLCIN3PPS equ 01EBEh ;# 
   633  1EBE                     # 17830 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   634                           ADACTPPS equ 01EC3h ;# 
   635  1EC3                     # 17888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   636                           SSP1CLKPPS equ 01EC5h ;# 
   637  1EC5                     # 17946 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   638                           SSP1DATPPS equ 01EC6h ;# 
   639  1EC6                     # 18004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   640                           SSP1SSPPS equ 01EC7h ;# 
   641  1EC7                     # 18062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   642                           SSP2CLKPPS equ 01EC8h ;# 
   643  1EC8                     # 18120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   644                           SSP2DATPPS equ 01EC9h ;# 
   645  1EC9                     # 18178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   646                           SSP2SSPPS equ 01ECAh ;# 
   647  1ECA                     # 18236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   648                           RX1DTPPS equ 01ECBh ;# 
   649  1ECB                     # 18294 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   650                           TX1CKPPS equ 01ECCh ;# 
   651  1ECC                     # 18352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   652                           RX2DTPPS equ 01ECDh ;# 
   653  1ECD                     # 18410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   654                           TX2CKPPS equ 01ECEh ;# 
   655  1ECE                     # 18468 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   656                           RA0PPS equ 01F10h ;# 
   657  1F10                     # 18512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   658                           RA1PPS equ 01F11h ;# 
   659  1F11                     # 18556 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   660                           RA2PPS equ 01F12h ;# 
   661  1F12                     # 18600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   662                           RA3PPS equ 01F13h ;# 
   663  1F13                     # 18644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   664                           RA4PPS equ 01F14h ;# 
   665  1F14                     # 18688 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   666                           RA5PPS equ 01F15h ;# 
   667  1F15                     # 18732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   668                           RA6PPS equ 01F16h ;# 
   669  1F16                     # 18776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   670                           RA7PPS equ 01F17h ;# 
   671  1F17                     # 18820 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   672                           RB0PPS equ 01F18h ;# 
   673  1F18                     # 18864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   674                           RB1PPS equ 01F19h ;# 
   675  1F19                     # 18908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   676                           RB2PPS equ 01F1Ah ;# 
   677  1F1A                     # 18952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   678                           RB3PPS equ 01F1Bh ;# 
   679  1F1B                     # 18996 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   680                           RB4PPS equ 01F1Ch ;# 
   681  1F1C                     # 19040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   682                           RB5PPS equ 01F1Dh ;# 
   683  1F1D                     # 19084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   684                           RB6PPS equ 01F1Eh ;# 
   685  1F1E                     # 19128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   686                           RB7PPS equ 01F1Fh ;# 
   687  1F1F                     # 19172 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   688                           RC0PPS equ 01F20h ;# 
   689  1F20                     # 19216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   690                           RC1PPS equ 01F21h ;# 
   691  1F21                     # 19260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   692                           RC2PPS equ 01F22h ;# 
   693  1F22                     # 19304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   694                           RC3PPS equ 01F23h ;# 
   695  1F23                     # 19348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   696                           RC4PPS equ 01F24h ;# 
   697  1F24                     # 19392 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   698                           RC5PPS equ 01F25h ;# 
   699  1F25                     # 19436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   700                           RC6PPS equ 01F26h ;# 
   701  1F26                     # 19480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   702                           RC7PPS equ 01F27h ;# 
   703  1F27                     # 19524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   704                           ANSELA equ 01F38h ;# 
   705  1F38                     # 19586 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   706                           WPUA equ 01F39h ;# 
   707  1F39                     # 19648 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   708                           ODCONA equ 01F3Ah ;# 
   709  1F3A                     # 19710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   710                           SLRCONA equ 01F3Bh ;# 
   711  1F3B                     # 19772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   712                           INLVLA equ 01F3Ch ;# 
   713  1F3C                     # 19834 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   714                           IOCAP equ 01F3Dh ;# 
   715  1F3D                     # 19896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   716                           IOCAN equ 01F3Eh ;# 
   717  1F3E                     # 19958 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   718                           IOCAF equ 01F3Fh ;# 
   719  1F3F                     # 20020 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   720                           ANSELB equ 01F43h ;# 
   721  1F43                     # 20082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   722                           WPUB equ 01F44h ;# 
   723  1F44                     # 20144 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   724                           ODCONB equ 01F45h ;# 
   725  1F45                     # 20206 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   726                           SLRCONB equ 01F46h ;# 
   727  1F46                     # 20268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   728                           INLVLB equ 01F47h ;# 
   729  1F47                     # 20330 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   730                           IOCBP equ 01F48h ;# 
   731  1F48                     # 20392 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   732                           IOCBN equ 01F49h ;# 
   733  1F49                     # 20454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   734                           IOCBF equ 01F4Ah ;# 
   735  1F4A                     # 20516 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   736                           ANSELC equ 01F4Eh ;# 
   737  1F4E                     # 20578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   738                           WPUC equ 01F4Fh ;# 
   739  1F4F                     # 20640 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   740                           ODCONC equ 01F50h ;# 
   741  1F50                     # 20702 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   742                           SLRCONC equ 01F51h ;# 
   743  1F51                     # 20764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   744                           INLVLC equ 01F52h ;# 
   745  1F52                     # 20826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   746                           IOCCP equ 01F53h ;# 
   747  1F53                     # 20888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   748                           IOCCN equ 01F54h ;# 
   749  1F54                     # 20950 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   750                           IOCCF equ 01F55h ;# 
   751  1F55                     # 21012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   752                           WPUE equ 01F65h ;# 
   753  1F65                     # 21033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   754                           INLVLE equ 01F68h ;# 
   755  1F68                     # 21054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   756                           IOCEP equ 01F69h ;# 
   757  1F69                     # 21075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   758                           IOCEN equ 01F6Ah ;# 
   759  1F6A                     # 21096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   760                           IOCEF equ 01F6Bh ;# 
   761  1F6B                     # 21117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   762                           STATUS_SHAD equ 01FE4h ;# 
   763  1FE4                     # 21137 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   764                           WREG_SHAD equ 01FE5h ;# 
   765  1FE5                     # 21157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   766                           BSR_SHAD equ 01FE6h ;# 
   767  1FE6                     # 21177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   768                           PCLATH_SHAD equ 01FE7h ;# 
   769  1FE7                     # 21197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   770                           FSR0_SHAD equ 01FE8h ;# 
   771  1FE8                     # 21204 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   772                           FSR0L_SHAD equ 01FE8h ;# 
   773  1FE8                     # 21224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   774                           FSR0H_SHAD equ 01FE9h ;# 
   775  1FE9                     # 21244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   776                           FSR1L_SHAD equ 01FEAh ;# 
   777  1FEA                     # 21264 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   778                           FSR1H_SHAD equ 01FEBh ;# 
   779  1FEB                     # 21284 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   780                           STKPTR equ 01FEDh ;# 
   781  1FED                     # 21328 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   782                           TOSL equ 01FEEh ;# 
   783  1FEE                     # 21398 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   784                           TOSH equ 01FEFh ;# 
   785  1FEF                     # 110 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   786                           INDF0 equ 00h ;# 
   787  0000                     # 130 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   788                           INDF1 equ 01h ;# 
   789  0001                     # 150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   790                           PCL equ 02h ;# 
   791  0002                     # 170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   792                           STATUS equ 03h ;# 
   793  0003                     # 233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   794                           FSR0L equ 04h ;# 
   795  0004                     # 253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   796                           FSR0H equ 05h ;# 
   797  0005                     # 277 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   798                           FSR1L equ 06h ;# 
   799  0006                     # 297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   800                           FSR1H equ 07h ;# 
   801  0007                     # 317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   802                           BSR equ 08h ;# 
   803  0008                     # 375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   804                           WREG equ 09h ;# 
   805  0009                     # 395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   806                           PCLATH equ 0Ah ;# 
   807  000A                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   808                           INTCON equ 0Bh ;# 
   809  000B                     # 448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   810                           PORTA equ 0Ch ;# 
   811  000C                     # 510 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   812                           PORTB equ 0Dh ;# 
   813  000D                     # 572 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   814                           PORTC equ 0Eh ;# 
   815  000E                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   816                           PORTE equ 010h ;# 
   817  0010                     # 655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   818                           TRISA equ 012h ;# 
   819  0012                     # 717 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   820                           TRISB equ 013h ;# 
   821  0013                     # 779 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   822                           TRISC equ 014h ;# 
   823  0014                     # 841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   824                           TRISE equ 016h ;# 
   825  0016                     # 862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   826                           LATA equ 018h ;# 
   827  0018                     # 924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   828                           LATB equ 019h ;# 
   829  0019                     # 986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   830                           LATC equ 01Ah ;# 
   831  001A                     # 1048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   832                           ADRES equ 09Bh ;# 
   833  009B                     # 1055 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   834                           ADRESL equ 09Bh ;# 
   835  009B                     # 1125 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   836                           ADRESH equ 09Ch ;# 
   837  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   838                           ADCON0 equ 09Dh ;# 
   839  009D                     # 1272 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   840                           ADCON1 equ 09Eh ;# 
   841  009E                     # 1338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   842                           ADACT equ 09Fh ;# 
   843  009F                     # 1390 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   844                           RC1REG equ 0119h ;# 
   845  0119                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   846                           RCREG equ 0119h ;# 
   847  0119                     # 1399 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   848                           RCREG1 equ 0119h ;# 
   849  0119                     # 1444 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   850                           TX1REG equ 011Ah ;# 
   851  011A                     # 1449 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   852                           TXREG1 equ 011Ah ;# 
   853  011A                     # 1453 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   854                           TXREG equ 011Ah ;# 
   855  011A                     # 1498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   856                           SP1BRG equ 011Bh ;# 
   857  011B                     # 1505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   858                           SP1BRGL equ 011Bh ;# 
   859  011B                     # 1510 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   860                           SPBRG equ 011Bh ;# 
   861  011B                     # 1514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   862                           SPBRG1 equ 011Bh ;# 
   863  011B                     # 1518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   864                           SPBRGL equ 011Bh ;# 
   865  011B                     # 1575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   866                           SP1BRGH equ 011Ch ;# 
   867  011C                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   868                           SPBRGH equ 011Ch ;# 
   869  011C                     # 1584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   870                           SPBRGH1 equ 011Ch ;# 
   871  011C                     # 1629 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   872                           RC1STA equ 011Dh ;# 
   873  011D                     # 1634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   874                           RCSTA1 equ 011Dh ;# 
   875  011D                     # 1638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   876                           RCSTA equ 011Dh ;# 
   877  011D                     # 1809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   878                           TX1STA equ 011Eh ;# 
   879  011E                     # 1814 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   880                           TXSTA1 equ 011Eh ;# 
   881  011E                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   882                           TXSTA equ 011Eh ;# 
   883  011E                     # 1989 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   884                           BAUD1CON equ 011Fh ;# 
   885  011F                     # 1994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   886                           BAUDCON1 equ 011Fh ;# 
   887  011F                     # 1998 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   888                           BAUDCTL1 equ 011Fh ;# 
   889  011F                     # 2002 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   890                           BAUDCON equ 011Fh ;# 
   891  011F                     # 2006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   892                           BAUDCTL equ 011Fh ;# 
   893  011F                     # 2235 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   894                           SSP1BUF equ 018Ch ;# 
   895  018C                     # 2255 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   896                           SSP1ADD equ 018Dh ;# 
   897  018D                     # 2375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   898                           SSP1MSK equ 018Eh ;# 
   899  018E                     # 2445 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   900                           SSP1STAT equ 018Fh ;# 
   901  018F                     # 2809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   902                           SSP1CON1 equ 0190h ;# 
   903  0190                     # 2929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   904                           SSP1CON2 equ 0191h ;# 
   905  0191                     # 3116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   906                           SSP1CON3 equ 0192h ;# 
   907  0192                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   908                           SSP2BUF equ 0196h ;# 
   909  0196                     # 3198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   910                           SSP2ADD equ 0197h ;# 
   911  0197                     # 3318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   912                           SSP2MSK equ 0198h ;# 
   913  0198                     # 3388 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   914                           SSP2STAT equ 0199h ;# 
   915  0199                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   916                           SSP2CON1 equ 019Ah ;# 
   917  019A                     # 3872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   918                           SSP2CON2 equ 019Bh ;# 
   919  019B                     # 4059 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   920                           SSP2CON3 equ 019Ch ;# 
   921  019C                     # 4121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   922                           TMR1 equ 020Ch ;# 
   923  020C                     # 4128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   924                           TMR1L equ 020Ch ;# 
   925  020C                     # 4298 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   926                           TMR1H equ 020Dh ;# 
   927  020D                     # 4418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   928                           T1CON equ 020Eh ;# 
   929  020E                     # 4514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   930                           T1GCON equ 020Fh ;# 
   931  020F                     # 4519 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   932                           PR1 equ 020Fh ;# 
   933  020F                     # 4710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   934                           T1GATE equ 0210h ;# 
   935  0210                     # 4715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   936                           TMR1GATE equ 0210h ;# 
   937  0210                     # 4876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   938                           T1CLK equ 0211h ;# 
   939  0211                     # 4881 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   940                           TMR1CLK equ 0211h ;# 
   941  0211                     # 5018 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   942                           T2TMR equ 028Ch ;# 
   943  028C                     # 5023 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   944                           TMR2 equ 028Ch ;# 
   945  028C                     # 5072 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   946                           T2PR equ 028Dh ;# 
   947  028D                     # 5077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   948                           PR2 equ 028Dh ;# 
   949  028D                     # 5126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   950                           T2CON equ 028Eh ;# 
   951  028E                     # 5272 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   952                           T2HLT equ 028Fh ;# 
   953  028F                     # 5400 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   954                           T2CLKCON equ 0290h ;# 
   955  0290                     # 5480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   956                           T2RST equ 0291h ;# 
   957  0291                     # 5560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   958                           CCPR1 equ 030Ch ;# 
   959  030C                     # 5567 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   960                           CCPR1L equ 030Ch ;# 
   961  030C                     # 5587 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   962                           CCPR1H equ 030Dh ;# 
   963  030D                     # 5607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   964                           CCP1CON equ 030Eh ;# 
   965  030E                     # 5734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   966                           CCP1CAP equ 030Fh ;# 
   967  030F                     # 5802 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   968                           CCPR2 equ 0310h ;# 
   969  0310                     # 5809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   970                           CCPR2L equ 0310h ;# 
   971  0310                     # 5829 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   972                           CCPR2H equ 0311h ;# 
   973  0311                     # 5849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   974                           CCP2CON equ 0312h ;# 
   975  0312                     # 5976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   976                           CCP2CAP equ 0313h ;# 
   977  0313                     # 6044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   978                           PWM3DC equ 0314h ;# 
   979  0314                     # 6051 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   980                           PWM3DCL equ 0314h ;# 
   981  0314                     # 6117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   982                           PWM3DCH equ 0315h ;# 
   983  0315                     # 6287 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   984                           PWM3CON equ 0316h ;# 
   985  0316                     # 6343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   986                           PWM4DC equ 0318h ;# 
   987  0318                     # 6350 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   988                           PWM4DCL equ 0318h ;# 
   989  0318                     # 6416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   990                           PWM4DCH equ 0319h ;# 
   991  0319                     # 6586 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   992                           PWM4CON equ 031Ah ;# 
   993  031A                     # 6642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   994                           PWM5DC equ 031Ch ;# 
   995  031C                     # 6649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   996                           PWM5DCL equ 031Ch ;# 
   997  031C                     # 6715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   998                           PWM5DCH equ 031Dh ;# 
   999  031D                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1000                           PWM5CON equ 031Eh ;# 
  1001  031E                     # 6941 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1002                           PWM6DC equ 038Ch ;# 
  1003  038C                     # 6948 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1004                           PWM6DCL equ 038Ch ;# 
  1005  038C                     # 7014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1006                           PWM6DCH equ 038Dh ;# 
  1007  038D                     # 7184 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1008                           PWM6CON equ 038Eh ;# 
  1009  038E                     # 7242 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1010                           NCO1ACC equ 058Ch ;# 
  1011  058C                     # 7249 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1012                           NCO1ACCL equ 058Ch ;# 
  1013  058C                     # 7319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1014                           NCO1ACCH equ 058Dh ;# 
  1015  058D                     # 7389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1016                           NCO1ACCU equ 058Eh ;# 
  1017  058E                     # 7437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1018                           NCO1INC equ 058Fh ;# 
  1019  058F                     # 7444 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1020                           NCO1INCL equ 058Fh ;# 
  1021  058F                     # 7514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1022                           NCO1INCH equ 0590h ;# 
  1023  0590                     # 7584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1024                           NCO1INCU equ 0591h ;# 
  1025  0591                     # 7630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1026                           NCO1CON equ 0592h ;# 
  1027  0592                     # 7670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1028                           NCO1CLK equ 0593h ;# 
  1029  0593                     # 7736 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1030                           TMR0L equ 059Ch ;# 
  1031  059C                     # 7741 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1032                           TMR0 equ 059Ch ;# 
  1033  059C                     # 7874 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1034                           TMR0H equ 059Dh ;# 
  1035  059D                     # 7879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1036                           PR0 equ 059Dh ;# 
  1037  059D                     # 8128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1038                           T0CON0 equ 059Eh ;# 
  1039  059E                     # 8198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1040                           T0CON1 equ 059Fh ;# 
  1041  059F                     # 8309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1042                           CWG1CLKCON equ 060Ch ;# 
  1043  060C                     # 8337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1044                           CWG1DAT equ 060Dh ;# 
  1045  060D                     # 8383 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1046                           CWG1DBR equ 060Eh ;# 
  1047  060E                     # 8487 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1048                           CWG1DBF equ 060Fh ;# 
  1049  060F                     # 8591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1050                           CWG1CON0 equ 0610h ;# 
  1051  0610                     # 8692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1052                           CWG1CON1 equ 0611h ;# 
  1053  0611                     # 8770 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1054                           CWG1AS0 equ 0612h ;# 
  1055  0612                     # 8890 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1056                           CWG1AS1 equ 0613h ;# 
  1057  0613                     # 8934 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1058                           CWG1STR equ 0614h ;# 
  1059  0614                     # 9046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1060                           PIR0 equ 070Ch ;# 
  1061  070C                     # 9079 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1062                           PIR1 equ 070Dh ;# 
  1063  070D                     # 9118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1064                           PIR2 equ 070Eh ;# 
  1065  070E                     # 9151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1066                           PIR3 equ 070Fh ;# 
  1067  070F                     # 9213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1068                           PIR4 equ 0710h ;# 
  1069  0710                     # 9239 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1070                           PIR5 equ 0711h ;# 
  1071  0711                     # 9284 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1072                           PIR6 equ 0712h ;# 
  1073  0712                     # 9310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1074                           PIR7 equ 0713h ;# 
  1075  0713                     # 9352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1076                           PIE0 equ 0716h ;# 
  1077  0716                     # 9385 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1078                           PIE1 equ 0717h ;# 
  1079  0717                     # 9424 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1080                           PIE2 equ 0718h ;# 
  1081  0718                     # 9457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1082                           PIE3 equ 0719h ;# 
  1083  0719                     # 9519 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1084                           PIE4 equ 071Ah ;# 
  1085  071A                     # 9545 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1086                           PIE5 equ 071Bh ;# 
  1087  071B                     # 9590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1088                           PIE6 equ 071Ch ;# 
  1089  071C                     # 9616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1090                           PIE7 equ 071Dh ;# 
  1091  071D                     # 9658 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1092                           PMD0 equ 0796h ;# 
  1093  0796                     # 9703 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1094                           PMD1 equ 0797h ;# 
  1095  0797                     # 9751 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1096                           PMD2 equ 0798h ;# 
  1097  0798                     # 9796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1098                           PMD3 equ 0799h ;# 
  1099  0799                     # 9846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1100                           PMD4 equ 079Ah ;# 
  1101  079A                     # 9891 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1102                           PMD5 equ 079Bh ;# 
  1103  079B                     # 9930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1104                           WDTCON0 equ 080Ch ;# 
  1105  080C                     # 10005 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1106                           WDTCON1 equ 080Dh ;# 
  1107  080D                     # 10099 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1108                           WDTPSL equ 080Eh ;# 
  1109  080E                     # 10227 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1110                           WDTPSH equ 080Fh ;# 
  1111  080F                     # 10355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1112                           WDTTMR equ 0810h ;# 
  1113  0810                     # 10437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1114                           BORCON equ 0811h ;# 
  1115  0811                     # 10464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1116                           VREGCON equ 0812h ;# 
  1117  0812                     # 10485 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1118                           PCON0 equ 0813h ;# 
  1119  0813                     # 10547 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1120                           PCON1 equ 0814h ;# 
  1121  0814                     # 10568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1122                           NVMADR equ 081Ah ;# 
  1123  081A                     # 10575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1124                           NVMADRL equ 081Ah ;# 
  1125  081A                     # 10637 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1126                           NVMADRH equ 081Bh ;# 
  1127  081B                     # 10693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1128                           NVMDAT equ 081Ch ;# 
  1129  081C                     # 10700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1130                           NVMDATL equ 081Ch ;# 
  1131  081C                     # 10762 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1132                           NVMDATH equ 081Dh ;# 
  1133  081D                     # 10812 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1134                           NVMCON1 equ 081Eh ;# 
  1135  081E                     # 10868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1136                           NVMCON2 equ 081Fh ;# 
  1137  081F                     # 10888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1138                           CPUDOZE equ 088Ch ;# 
  1139  088C                     # 10953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1140                           OSCCON1 equ 088Dh ;# 
  1141  088D                     # 11023 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1142                           OSCCON2 equ 088Eh ;# 
  1143  088E                     # 11093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1144                           OSCCON3 equ 088Fh ;# 
  1145  088F                     # 11133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1146                           OSCSTAT equ 0890h ;# 
  1147  0890                     # 11190 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1148                           OSCEN equ 0891h ;# 
  1149  0891                     # 11241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1150                           OSCTUNE equ 0892h ;# 
  1151  0892                     # 11299 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1152                           OSCFRQ equ 0893h ;# 
  1153  0893                     # 11339 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1154                           CLKRCON equ 0895h ;# 
  1155  0895                     # 11404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1156                           CLKRCLK equ 0896h ;# 
  1157  0896                     # 11450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1158                           FVRCON equ 090Ch ;# 
  1159  090C                     # 11526 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1160                           DAC1CON0 equ 090Eh ;# 
  1161  090E                     # 11627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1162                           DAC1CON1 equ 090Fh ;# 
  1163  090F                     # 11679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1164                           ZCDCON equ 091Fh ;# 
  1165  091F                     # 11725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1166                           CMOUT equ 098Fh ;# 
  1167  098F                     # 11730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1168                           CMSTAT equ 098Fh ;# 
  1169  098F                     # 11803 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1170                           CM1CON0 equ 0990h ;# 
  1171  0990                     # 11883 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1172                           CM1CON1 equ 0991h ;# 
  1173  0991                     # 11923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1174                           CM1NCH equ 0992h ;# 
  1175  0992                     # 11983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1176                           CM1PCH equ 0993h ;# 
  1177  0993                     # 12043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1178                           CM2CON0 equ 0994h ;# 
  1179  0994                     # 12123 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1180                           CM2CON1 equ 0995h ;# 
  1181  0995                     # 12163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1182                           CM2NCH equ 0996h ;# 
  1183  0996                     # 12223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1184                           CM2PCH equ 0997h ;# 
  1185  0997                     # 12283 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1186                           RC2REG equ 0A19h ;# 
  1187  0A19                     # 12288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1188                           RCREG2 equ 0A19h ;# 
  1189  0A19                     # 12321 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1190                           TX2REG equ 0A1Ah ;# 
  1191  0A1A                     # 12326 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1192                           TXREG2 equ 0A1Ah ;# 
  1193  0A1A                     # 12359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1194                           SP2BRG equ 0A1Bh ;# 
  1195  0A1B                     # 12366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1196                           SP2BRGL equ 0A1Bh ;# 
  1197  0A1B                     # 12371 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1198                           SPBRG2 equ 0A1Bh ;# 
  1199  0A1B                     # 12404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1200                           SP2BRGH equ 0A1Ch ;# 
  1201  0A1C                     # 12409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1202                           SPBRGH2 equ 0A1Ch ;# 
  1203  0A1C                     # 12442 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1204                           RC2STA equ 0A1Dh ;# 
  1205  0A1D                     # 12447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1206                           RCSTA2 equ 0A1Dh ;# 
  1207  0A1D                     # 12564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1208                           TX2STA equ 0A1Eh ;# 
  1209  0A1E                     # 12569 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1210                           TXSTA2 equ 0A1Eh ;# 
  1211  0A1E                     # 12686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1212                           BAUD2CON equ 0A1Fh ;# 
  1213  0A1F                     # 12691 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1214                           BAUDCON2 equ 0A1Fh ;# 
  1215  0A1F                     # 12695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1216                           BAUDCTL2 equ 0A1Fh ;# 
  1217  0A1F                     # 12836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1218                           CLCDATA equ 01E0Fh ;# 
  1219  1E0F                     # 12874 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1220                           CLC1CON equ 01E10h ;# 
  1221  1E10                     # 12992 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1222                           CLC1POL equ 01E11h ;# 
  1223  1E11                     # 13070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1224                           CLC1SEL0 equ 01E12h ;# 
  1225  1E12                     # 13174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1226                           CLC1SEL1 equ 01E13h ;# 
  1227  1E13                     # 13278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1228                           CLC1SEL2 equ 01E14h ;# 
  1229  1E14                     # 13382 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1230                           CLC1SEL3 equ 01E15h ;# 
  1231  1E15                     # 13486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1232                           CLC1GLS0 equ 01E16h ;# 
  1233  1E16                     # 13598 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1234                           CLC1GLS1 equ 01E17h ;# 
  1235  1E17                     # 13710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1236                           CLC1GLS2 equ 01E18h ;# 
  1237  1E18                     # 13822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1238                           CLC1GLS3 equ 01E19h ;# 
  1239  1E19                     # 13934 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1240                           CLC2CON equ 01E1Ah ;# 
  1241  1E1A                     # 14052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1242                           CLC2POL equ 01E1Bh ;# 
  1243  1E1B                     # 14130 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1244                           CLC2SEL0 equ 01E1Ch ;# 
  1245  1E1C                     # 14234 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1246                           CLC2SEL1 equ 01E1Dh ;# 
  1247  1E1D                     # 14338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1248                           CLC2SEL2 equ 01E1Eh ;# 
  1249  1E1E                     # 14442 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1250                           CLC2SEL3 equ 01E1Fh ;# 
  1251  1E1F                     # 14546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1252                           CLC2GLS0 equ 01E20h ;# 
  1253  1E20                     # 14658 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1254                           CLC2GLS1 equ 01E21h ;# 
  1255  1E21                     # 14770 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1256                           CLC2GLS2 equ 01E22h ;# 
  1257  1E22                     # 14882 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1258                           CLC2GLS3 equ 01E23h ;# 
  1259  1E23                     # 14994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1260                           CLC3CON equ 01E24h ;# 
  1261  1E24                     # 15112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1262                           CLC3POL equ 01E25h ;# 
  1263  1E25                     # 15190 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1264                           CLC3SEL0 equ 01E26h ;# 
  1265  1E26                     # 15294 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1266                           CLC3SEL1 equ 01E27h ;# 
  1267  1E27                     # 15398 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1268                           CLC3SEL2 equ 01E28h ;# 
  1269  1E28                     # 15502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1270                           CLC3SEL3 equ 01E29h ;# 
  1271  1E29                     # 15606 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1272                           CLC3GLS0 equ 01E2Ah ;# 
  1273  1E2A                     # 15718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1274                           CLC3GLS1 equ 01E2Bh ;# 
  1275  1E2B                     # 15830 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1276                           CLC3GLS2 equ 01E2Ch ;# 
  1277  1E2C                     # 15942 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1278                           CLC3GLS3 equ 01E2Dh ;# 
  1279  1E2D                     # 16054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1280                           CLC4CON equ 01E2Eh ;# 
  1281  1E2E                     # 16172 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1282                           CLC4POL equ 01E2Fh ;# 
  1283  1E2F                     # 16250 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1284                           CLC4SEL0 equ 01E30h ;# 
  1285  1E30                     # 16354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1286                           CLC4SEL1 equ 01E31h ;# 
  1287  1E31                     # 16458 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1288                           CLC4SEL2 equ 01E32h ;# 
  1289  1E32                     # 16562 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1290                           CLC4SEL3 equ 01E33h ;# 
  1291  1E33                     # 16666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1292                           CLC4GLS0 equ 01E34h ;# 
  1293  1E34                     # 16778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1294                           CLC4GLS1 equ 01E35h ;# 
  1295  1E35                     # 16890 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1296                           CLC4GLS2 equ 01E36h ;# 
  1297  1E36                     # 17002 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1298                           CLC4GLS3 equ 01E37h ;# 
  1299  1E37                     # 17114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1300                           PPSLOCK equ 01E8Fh ;# 
  1301  1E8F                     # 17134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1302                           INTPPS equ 01E90h ;# 
  1303  1E90                     # 17192 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1304                           T0CKIPPS equ 01E91h ;# 
  1305  1E91                     # 17250 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1306                           T1CKIPPS equ 01E92h ;# 
  1307  1E92                     # 17308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1308                           T1GPPS equ 01E93h ;# 
  1309  1E93                     # 17366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1310                           T2INPPS equ 01E9Ch ;# 
  1311  1E9C                     # 17424 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1312                           CCP1PPS equ 01EA1h ;# 
  1313  1EA1                     # 17482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1314                           CCP2PPS equ 01EA2h ;# 
  1315  1EA2                     # 17540 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1316                           CWG1PPS equ 01EB1h ;# 
  1317  1EB1                     # 17598 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1318                           CLCIN0PPS equ 01EBBh ;# 
  1319  1EBB                     # 17656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1320                           CLCIN1PPS equ 01EBCh ;# 
  1321  1EBC                     # 17714 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1322                           CLCIN2PPS equ 01EBDh ;# 
  1323  1EBD                     # 17772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1324                           CLCIN3PPS equ 01EBEh ;# 
  1325  1EBE                     # 17830 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1326                           ADACTPPS equ 01EC3h ;# 
  1327  1EC3                     # 17888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1328                           SSP1CLKPPS equ 01EC5h ;# 
  1329  1EC5                     # 17946 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1330                           SSP1DATPPS equ 01EC6h ;# 
  1331  1EC6                     # 18004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1332                           SSP1SSPPS equ 01EC7h ;# 
  1333  1EC7                     # 18062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1334                           SSP2CLKPPS equ 01EC8h ;# 
  1335  1EC8                     # 18120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1336                           SSP2DATPPS equ 01EC9h ;# 
  1337  1EC9                     # 18178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1338                           SSP2SSPPS equ 01ECAh ;# 
  1339  1ECA                     # 18236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1340                           RX1DTPPS equ 01ECBh ;# 
  1341  1ECB                     # 18294 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1342                           TX1CKPPS equ 01ECCh ;# 
  1343  1ECC                     # 18352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1344                           RX2DTPPS equ 01ECDh ;# 
  1345  1ECD                     # 18410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1346                           TX2CKPPS equ 01ECEh ;# 
  1347  1ECE                     # 18468 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1348                           RA0PPS equ 01F10h ;# 
  1349  1F10                     # 18512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1350                           RA1PPS equ 01F11h ;# 
  1351  1F11                     # 18556 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1352                           RA2PPS equ 01F12h ;# 
  1353  1F12                     # 18600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1354                           RA3PPS equ 01F13h ;# 
  1355  1F13                     # 18644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1356                           RA4PPS equ 01F14h ;# 
  1357  1F14                     # 18688 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1358                           RA5PPS equ 01F15h ;# 
  1359  1F15                     # 18732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1360                           RA6PPS equ 01F16h ;# 
  1361  1F16                     # 18776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1362                           RA7PPS equ 01F17h ;# 
  1363  1F17                     # 18820 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1364                           RB0PPS equ 01F18h ;# 
  1365  1F18                     # 18864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1366                           RB1PPS equ 01F19h ;# 
  1367  1F19                     # 18908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1368                           RB2PPS equ 01F1Ah ;# 
  1369  1F1A                     # 18952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1370                           RB3PPS equ 01F1Bh ;# 
  1371  1F1B                     # 18996 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1372                           RB4PPS equ 01F1Ch ;# 
  1373  1F1C                     # 19040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1374                           RB5PPS equ 01F1Dh ;# 
  1375  1F1D                     # 19084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1376                           RB6PPS equ 01F1Eh ;# 
  1377  1F1E                     # 19128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1378                           RB7PPS equ 01F1Fh ;# 
  1379  1F1F                     # 19172 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1380                           RC0PPS equ 01F20h ;# 
  1381  1F20                     # 19216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1382                           RC1PPS equ 01F21h ;# 
  1383  1F21                     # 19260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1384                           RC2PPS equ 01F22h ;# 
  1385  1F22                     # 19304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1386                           RC3PPS equ 01F23h ;# 
  1387  1F23                     # 19348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1388                           RC4PPS equ 01F24h ;# 
  1389  1F24                     # 19392 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1390                           RC5PPS equ 01F25h ;# 
  1391  1F25                     # 19436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1392                           RC6PPS equ 01F26h ;# 
  1393  1F26                     # 19480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1394                           RC7PPS equ 01F27h ;# 
  1395  1F27                     # 19524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1396                           ANSELA equ 01F38h ;# 
  1397  1F38                     # 19586 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1398                           WPUA equ 01F39h ;# 
  1399  1F39                     # 19648 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1400                           ODCONA equ 01F3Ah ;# 
  1401  1F3A                     # 19710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1402                           SLRCONA equ 01F3Bh ;# 
  1403  1F3B                     # 19772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1404                           INLVLA equ 01F3Ch ;# 
  1405  1F3C                     # 19834 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1406                           IOCAP equ 01F3Dh ;# 
  1407  1F3D                     # 19896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1408                           IOCAN equ 01F3Eh ;# 
  1409  1F3E                     # 19958 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1410                           IOCAF equ 01F3Fh ;# 
  1411  1F3F                     # 20020 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1412                           ANSELB equ 01F43h ;# 
  1413  1F43                     # 20082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1414                           WPUB equ 01F44h ;# 
  1415  1F44                     # 20144 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1416                           ODCONB equ 01F45h ;# 
  1417  1F45                     # 20206 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1418                           SLRCONB equ 01F46h ;# 
  1419  1F46                     # 20268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1420                           INLVLB equ 01F47h ;# 
  1421  1F47                     # 20330 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1422                           IOCBP equ 01F48h ;# 
  1423  1F48                     # 20392 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1424                           IOCBN equ 01F49h ;# 
  1425  1F49                     # 20454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1426                           IOCBF equ 01F4Ah ;# 
  1427  1F4A                     # 20516 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1428                           ANSELC equ 01F4Eh ;# 
  1429  1F4E                     # 20578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1430                           WPUC equ 01F4Fh ;# 
  1431  1F4F                     # 20640 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1432                           ODCONC equ 01F50h ;# 
  1433  1F50                     # 20702 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1434                           SLRCONC equ 01F51h ;# 
  1435  1F51                     # 20764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1436                           INLVLC equ 01F52h ;# 
  1437  1F52                     # 20826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1438                           IOCCP equ 01F53h ;# 
  1439  1F53                     # 20888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1440                           IOCCN equ 01F54h ;# 
  1441  1F54                     # 20950 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1442                           IOCCF equ 01F55h ;# 
  1443  1F55                     # 21012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1444                           WPUE equ 01F65h ;# 
  1445  1F65                     # 21033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1446                           INLVLE equ 01F68h ;# 
  1447  1F68                     # 21054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1448                           IOCEP equ 01F69h ;# 
  1449  1F69                     # 21075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1450                           IOCEN equ 01F6Ah ;# 
  1451  1F6A                     # 21096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1452                           IOCEF equ 01F6Bh ;# 
  1453  1F6B                     # 21117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1454                           STATUS_SHAD equ 01FE4h ;# 
  1455  1FE4                     # 21137 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1456                           WREG_SHAD equ 01FE5h ;# 
  1457  1FE5                     # 21157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1458                           BSR_SHAD equ 01FE6h ;# 
  1459  1FE6                     # 21177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1460                           PCLATH_SHAD equ 01FE7h ;# 
  1461  1FE7                     # 21197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1462                           FSR0_SHAD equ 01FE8h ;# 
  1463  1FE8                     # 21204 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1464                           FSR0L_SHAD equ 01FE8h ;# 
  1465  1FE8                     # 21224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1466                           FSR0H_SHAD equ 01FE9h ;# 
  1467  1FE9                     # 21244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1468                           FSR1L_SHAD equ 01FEAh ;# 
  1469  1FEA                     # 21264 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1470                           FSR1H_SHAD equ 01FEBh ;# 
  1471  1FEB                     # 21284 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1472                           STKPTR equ 01FEDh ;# 
  1473  1FED                     # 21328 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1474                           TOSL equ 01FEEh ;# 
  1475  1FEE                     # 21398 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1476                           TOSH equ 01FEFh ;# 
  1477  1FEF                     	FNCALL	_main,_OLED_command
  1478                           	FNCALL	_main,_OLED_init
  1479                           	FNCALL	_main,_OLED_returnHome
  1480                           	FNCALL	_main,_handleSensorData
  1481                           	FNCALL	_main,_initialize
  1482                           	FNCALL	_main,_readAnalogValues
  1483                           	FNCALL	_main,_showMenu
  1484                           	FNCALL	_main,_uartSendByte
  1485                           	FNCALL	_showMenu,_OLED_print_xy
  1486                           	FNCALL	_showMenu,_getPB
  1487                           	FNCALL	_showMenu,_menuInput
  1488                           	FNCALL	_showMenu,_sprintf
  1489                           	FNCALL	_sprintf,_vfprintf
  1490                           	FNCALL	_vfprintf,_vfpfcnvrt
  1491                           	FNCALL	_vfpfcnvrt,_atoi
  1492                           	FNCALL	_vfpfcnvrt,_efgtoa
  1493                           	FNCALL	_vfpfcnvrt,_fputc
  1494                           	FNCALL	_vfpfcnvrt,_isdigit
  1495                           	FNCALL	_vfpfcnvrt,_isupper
  1496                           	FNCALL	_vfpfcnvrt,_strncmp
  1497                           	FNCALL	_vfpfcnvrt,_tolower
  1498                           	FNCALL	_efgtoa,___awdiv
  1499                           	FNCALL	_efgtoa,___awmod
  1500                           	FNCALL	_efgtoa,___fladd
  1501                           	FNCALL	_efgtoa,___fldiv
  1502                           	FNCALL	_efgtoa,___fleq
  1503                           	FNCALL	_efgtoa,___flge
  1504                           	FNCALL	_efgtoa,___flmul
  1505                           	FNCALL	_efgtoa,___flneg
  1506                           	FNCALL	_efgtoa,___flsub
  1507                           	FNCALL	_efgtoa,___fltol
  1508                           	FNCALL	_efgtoa,___fpclassifyf
  1509                           	FNCALL	_efgtoa,_floorf
  1510                           	FNCALL	_efgtoa,_isupper
  1511                           	FNCALL	_efgtoa,_pad
  1512                           	FNCALL	_efgtoa,_strcpy
  1513                           	FNCALL	_efgtoa,_tolower
  1514                           	FNCALL	_tolower,_isupper
  1515                           	FNCALL	_pad,_fputc
  1516                           	FNCALL	_pad,_fputs
  1517                           	FNCALL	_pad,_strlen
  1518                           	FNCALL	_fputs,_fputc
  1519                           	FNCALL	_fputc,_putch
  1520                           	FNCALL	___flsub,___fladd
  1521                           	FNCALL	_atoi,___wmul
  1522                           	FNCALL	_atoi,_isdigit
  1523                           	FNCALL	_atoi,_isspace
  1524                           	FNCALL	_menuInput,_OLED_returnHome
  1525                           	FNCALL	_menuInput,_OLED_scrollDisplayLeft
  1526                           	FNCALL	_menuInput,_OLED_scrollDisplayRight
  1527                           	FNCALL	_menuInput,_getPB
  1528                           	FNCALL	_menuInput,_getRotDir
  1529                           	FNCALL	_OLED_scrollDisplayRight,_OLED_command
  1530                           	FNCALL	_OLED_scrollDisplayLeft,_OLED_command
  1531                           	FNCALL	_OLED_returnHome,_OLED_command
  1532                           	FNCALL	_OLED_print_xy,_OLED_command
  1533                           	FNCALL	_OLED_print_xy,_OLED_write
  1534                           	FNCALL	_OLED_write,_OLED_send
  1535                           	FNCALL	_OLED_write,_OLED_waitForReady
  1536                           	FNCALL	_readAnalogValues,___fldiv
  1537                           	FNCALL	_readAnalogValues,___flmul
  1538                           	FNCALL	_readAnalogValues,___xxtofl
  1539                           	FNCALL	___flmul,__Umul8_16
  1540                           	FNCALL	_handleSensorData,___xxtofl
  1541                           	FNCALL	_OLED_init,_OLED_command
  1542                           	FNCALL	_OLED_init,_OLED_write4bits
  1543                           	FNCALL	_OLED_command,_OLED_send
  1544                           	FNCALL	_OLED_command,_OLED_waitForReady
  1545                           	FNCALL	_OLED_waitForReady,_OLED_pulseEnable
  1546                           	FNCALL	_OLED_send,_OLED_write4bits
  1547                           	FNCALL	_OLED_write4bits,_OLED_pulseEnable
  1548                           	FNROOT	_main
  1549                           	FNCALL	_ISR,_pushButtonISR
  1550                           	FNCALL	_ISR,_rotISR
  1551                           	FNCALL	_ISR,_uartReceiveISR
  1552                           	FNCALL	_uartReceiveISR,_strncpy
  1553                           	FNCALL	intlevel1,_ISR
  1554                           	global	intlevel1
  1555                           	FNROOT	intlevel1
  1556                           	global	OLED_print_xy@F7353
  1557                           	global	OLED_setCursor@F7345
  1558                           psect	idataBANK4,class=CODE,space=0,delta=2,noexec
  1559                           global __pidataBANK4
  1560                           __pidataBANK4:
  1561  07F8                     	file	"oled.c"
  1562                           	line	153
  1563                           
  1564                           ;initializer for OLED_print_xy@F7353
  1565                           	retlw	low(0)
  1566  07F8  3400               	retlw	040h
  1567  07F9  3440               	retlw	014h
  1568  07FA  3414               	retlw	054h
  1569  07FB  3454               	line	139
  1570                           
  1571                           ;initializer for OLED_setCursor@F7345
  1572                           	retlw	low(0)
  1573  07FC  3400               	retlw	040h
  1574  07FD  3440               	retlw	014h
  1575  07FE  3414               	retlw	054h
  1576  07FF  3454               	global	_transition_table
  1577                           psect	stringtext1,class=STRCODE,delta=2,noexec
  1578                           global __pstringtext1
  1579                           __pstringtext1:
  1580  2000                     	file	"main.c"
  1581                           	line	67
  1582                           _transition_table:
  1583  2000                     	retlw	low(0)
  1584  2000  3400               	retlw	04h
  1585  2001  3404               	retlw	01h
  1586  2002  3401               	retlw	low(0)
  1587  2003  3400               	retlw	082h
  1588  2004  3482               	retlw	low(0)
  1589  2005  3400               	retlw	01h
  1590  2006  3401               	retlw	low(0)
  1591  2007  3400               	retlw	02h
  1592  2008  3402               	retlw	03h
  1593  2009  3403               	retlw	01h
  1594  200A  3401               	retlw	low(0)
  1595  200B  3400               	retlw	02h
  1596  200C  3402               	retlw	03h
  1597  200D  3403               	retlw	low(0)
  1598  200E  3400               	retlw	080h
  1599  200F  3480               	retlw	045h
  1600  2010  3445               	retlw	04h
  1601  2011  3404               	retlw	low(0)
  1602  2012  3400               	retlw	low(0)
  1603  2013  3400               	retlw	05h
  1604  2014  3405               	retlw	04h
  1605  2015  3404               	retlw	06h
  1606  2016  3406               	retlw	low(0)
  1607  2017  3400               	retlw	05h
  1608  2018  3405               	retlw	low(0)
  1609  2019  3400               	retlw	06h
  1610  201A  3406               	retlw	040h
  1611  201B  3440               	global __end_of_transition_table
  1612                           __end_of_transition_table:
  1613  201C                     	global	_transition_table
  1614                           	global	uartReceiveISR@rxCount
  1615                           	global	_g_rotDir
  1616                           	global	_g_curRotState
  1617                           	global	_g_100msTick
  1618                           	global	_g_10msTick
  1619                           	global	_g_dewPointC
  1620                           	global	_g_relHum
  1621                           	global	_nout
  1622                           	global	_width
  1623                           	global	_prec
  1624                           	global	_flags
  1625                           	global	uartReceiveISR@checksum
  1626                           	global	_g_pbState
  1627                           	global	_g_rxOErrCount
  1628                           	global	_g_rxFErrCount
  1629                           	global	_g_current
  1630                           	global	_g_voltage
  1631                           	global	_g_tempC
  1632                           	global	_g_dataReady
  1633                           	global	_g_sensorTimer
  1634                           	global	showMenu@page
  1635                           	global	showMenu@menu
  1636                           	global	floorf@F514
  1637                           	global	___fpclassifyf@F453
  1638                           	global	_g_power
  1639                           	global	_g_sensorVersion
  1640                           	global	uartReceiveISR@buffer
  1641                           	global	_g_dataPacket
  1642                           	global	_dbuf
  1643                           	global	_PORTCbits
  1644                           _PORTCbits	set	0xE
  1645  000E                     	global	_TRISCbits
  1646                           _TRISCbits	set	0x14
  1647  0014                     	global	_PORTAbits
  1648                           _PORTAbits	set	0xC
  1649  000C                     	global	_INTCONbits
  1650                           _INTCONbits	set	0xB
  1651  000B                     	global	_INTCON
  1652                           _INTCON	set	0xB
  1653  000B                     	global	_TRISC
  1654                           _TRISC	set	0x14
  1655  0014                     	global	_TRISB
  1656                           _TRISB	set	0x13
  1657  0013                     	global	_TRISA
  1658                           _TRISA	set	0x12
  1659  0012                     	global	_LATAbits
  1660                           _LATAbits	set	0x18
  1661  0018                     	global	_LATCbits
  1662                           _LATCbits	set	0x1A
  1663  001A                     	global	_LATBbits
  1664                           _LATBbits	set	0x19
  1665  0019                     	global	_ADCON1
  1666                           _ADCON1	set	0x9E
  1667  009E                     	global	_ADRESL
  1668                           _ADRESL	set	0x9B
  1669  009B                     	global	_ADRESH
  1670                           _ADRESH	set	0x9C
  1671  009C                     	global	_ADCON0bits
  1672                           _ADCON0bits	set	0x9D
  1673  009D                     	global	_RC1REG
  1674                           _RC1REG	set	0x119
  1675  0119                     	global	_RC1STAbits
  1676                           _RC1STAbits	set	0x11D
  1677  011D                     	global	_TX1REG
  1678                           _TX1REG	set	0x11A
  1679  011A                     	global	_TX1STA
  1680                           _TX1STA	set	0x11E
  1681  011E                     	global	_RC1STA
  1682                           _RC1STA	set	0x11D
  1683  011D                     	global	_SPBRGL
  1684                           _SPBRGL	set	0x11B
  1685  011B                     	global	_BAUD1CON
  1686                           _BAUD1CON	set	0x11F
  1687  011F                     	global	_TMR1
  1688                           _TMR1	set	0x20C
  1689  020C                     	global	_T1CLK
  1690                           _T1CLK	set	0x211
  1691  0211                     	global	_T1CON
  1692                           _T1CON	set	0x20E
  1693  020E                     	global	_TMR0
  1694                           _TMR0	set	0x59C
  1695  059C                     	global	_T0CON1
  1696                           _T0CON1	set	0x59F
  1697  059F                     	global	_T0CON0
  1698                           _T0CON0	set	0x59E
  1699  059E                     	global	_PIE3bits
  1700                           _PIE3bits	set	0x719
  1701  0719                     	global	_PIR4bits
  1702                           _PIR4bits	set	0x710
  1703  0710                     	global	_PIE4bits
  1704                           _PIE4bits	set	0x71A
  1705  071A                     	global	_PIR0bits
  1706                           _PIR0bits	set	0x70C
  1707  070C                     	global	_PIR3bits
  1708                           _PIR3bits	set	0x70F
  1709  070F                     	global	_PIE4
  1710                           _PIE4	set	0x71A
  1711  071A                     	global	_PIE3
  1712                           _PIE3	set	0x719
  1713  0719                     	global	_PIE0
  1714                           _PIE0	set	0x716
  1715  0716                     	global	_PIE0bits
  1716                           _PIE0bits	set	0x716
  1717  0716                     	global	_OSCCON3bits
  1718                           _OSCCON3bits	set	0x88F
  1719  088F                     	global	_OSCCON1
  1720                           _OSCCON1	set	0x88D
  1721  088D                     	global	_OSCFRQ
  1722                           _OSCFRQ	set	0x893
  1723  0893                     	global	_RX1DTPPSbits
  1724                           _RX1DTPPSbits	set	0x1ECB
  1725  1ECB                     	global	_IOCAFbits
  1726                           _IOCAFbits	set	0x1F3F
  1727  1F3F                     	global	_IOCCN
  1728                           _IOCCN	set	0x1F54
  1729  1F54                     	global	_IOCAN
  1730                           _IOCAN	set	0x1F3E
  1731  1F3E                     	global	_IOCAP
  1732                           _IOCAP	set	0x1F3D
  1733  1F3D                     	global	_ANSELC
  1734                           _ANSELC	set	0x1F4E
  1735  1F4E                     	global	_ANSELB
  1736                           _ANSELB	set	0x1F43
  1737  1F43                     	global	_ANSELA
  1738                           _ANSELA	set	0x1F38
  1739  1F38                     	global	_RC6PPS
  1740                           _RC6PPS	set	0x1F26
  1741  1F26                     	
  1742                           STR_2:	
  1743  201C                     	retlw	37	;'%'
  1744  201C  3425               	retlw	53	;'5'
  1745  201D  3435               	retlw	46	;'.'
  1746  201E  342E               	retlw	49	;'1'
  1747  201F  3431               	retlw	102	;'f'
  1748  2020  3466               	retlw	32	;' '
  1749  2021  3420               	retlw	-33
  1750  2022  34DF               	retlw	67	;'C'
  1751  2023  3443               	retlw	32	;' '
  1752  2024  3420               	retlw	32	;' '
  1753  2025  3420               	retlw	32	;' '
  1754  2026  3420               	retlw	32	;' '
  1755  2027  3420               	retlw	37	;'%'
  1756  2028  3425               	retlw	53	;'5'
  1757  2029  3435               	retlw	46	;'.'
  1758  202A  342E               	retlw	49	;'1'
  1759  202B  3431               	retlw	102	;'f'
  1760  202C  3466               	retlw	32	;' '
  1761  202D  3420               	retlw	37	;'%'
  1762  202E  3425               	retlw	37	;'%'
  1763  202F  3425               	retlw	32	;' '
  1764  2030  3420               	retlw	32	;' '
  1765  2031  3420               	retlw	32	;' '
  1766  2032  3420               	retlw	32	;' '
  1767  2033  3420               	retlw	32	;' '
  1768  2034  3420               	retlw	37	;'%'
  1769  2035  3425               	retlw	53	;'5'
  1770  2036  3435               	retlw	46	;'.'
  1771  2037  342E               	retlw	49	;'1'
  1772  2038  3431               	retlw	102	;'f'
  1773  2039  3466               	retlw	32	;' '
  1774  203A  3420               	retlw	-33
  1775  203B  34DF               	retlw	67	;'C'
  1776  203C  3443               	retlw	32	;' '
  1777  203D  3420               	retlw	32	;' '
  1778  203E  3420               	retlw	32	;' '
  1779  203F  3420               	retlw	32	;' '
  1780  2040  3420               	retlw	37	;'%'
  1781  2041  3425               	retlw	52	;'4'
  1782  2042  3434               	retlw	46	;'.'
  1783  2043  342E               	retlw	49	;'1'
  1784  2044  3431               	retlw	102	;'f'
  1785  2045  3466               	retlw	86	;'V'
  1786  2046  3456               	retlw	37	;'%'
  1787  2047  3425               	retlw	53	;'5'
  1788  2048  3435               	retlw	46	;'.'
  1789  2049  342E               	retlw	51	;'3'
  1790  204A  3433               	retlw	102	;'f'
  1791  204B  3466               	retlw	87	;'W'
  1792  204C  3457               	retlw	0
  1793  204D  3400               psect	stringtext2,class=STRCODE,delta=2,noexec
  1794                           global __pstringtext2
  1795                           __pstringtext2:
  1796  204E                     	
  1797                           STR_3:	
  1798  204E                     	retlw	67	;'C'
  1799  204E  3443               	retlw	104	;'h'
  1800  204F  3468               	retlw	49	;'1'
  1801  2050  3431               	retlw	58	;':'
  1802  2051  343A               	retlw	32	;' '
  1803  2052  3420               	retlw	120	;'x'
  1804  2053  3478               	retlw	120	;'x'
  1805  2054  3478               	retlw	32	;' '
  1806  2055  3420               	retlw	105	;'i'
  1807  2056  3469               	retlw	110	;'n'
  1808  2057  346E               	retlw	99	;'c'
  1809  2058  3463               	retlw	104	;'h'
  1810  2059  3468               	retlw	67	;'C'
  1811  205A  3443               	retlw	104	;'h'
  1812  205B  3468               	retlw	50	;'2'
  1813  205C  3432               	retlw	58	;':'
  1814  205D  343A               	retlw	32	;' '
  1815  205E  3420               	retlw	120	;'x'
  1816  205F  3478               	retlw	120	;'x'
  1817  2060  3478               	retlw	32	;' '
  1818  2061  3420               	retlw	105	;'i'
  1819  2062  3469               	retlw	110	;'n'
  1820  2063  346E               	retlw	99	;'c'
  1821  2064  3463               	retlw	104	;'h'
  1822  2065  3468               	retlw	67	;'C'
  1823  2066  3443               	retlw	104	;'h'
  1824  2067  3468               	retlw	51	;'3'
  1825  2068  3433               	retlw	58	;':'
  1826  2069  343A               	retlw	32	;' '
  1827  206A  3420               	retlw	120	;'x'
  1828  206B  3478               	retlw	120	;'x'
  1829  206C  3478               	retlw	32	;' '
  1830  206D  3420               	retlw	105	;'i'
  1831  206E  3469               	retlw	110	;'n'
  1832  206F  346E               	retlw	99	;'c'
  1833  2070  3463               	retlw	104	;'h'
  1834  2071  3468               	retlw	67	;'C'
  1835  2072  3443               	retlw	104	;'h'
  1836  2073  3468               	retlw	52	;'4'
  1837  2074  3434               	retlw	58	;':'
  1838  2075  343A               	retlw	32	;' '
  1839  2076  3420               	retlw	120	;'x'
  1840  2077  3478               	retlw	120	;'x'
  1841  2078  3478               	retlw	32	;' '
  1842  2079  3420               	retlw	105	;'i'
  1843  207A  3469               	retlw	110	;'n'
  1844  207B  346E               	retlw	99	;'c'
  1845  207C  3463               	retlw	104	;'h'
  1846  207D  3468               	retlw	0
  1847  207E  3400               psect	stringtext3,class=STRCODE,delta=2,noexec
  1848                           global __pstringtext3
  1849                           __pstringtext3:
  1850  207F                     	
  1851                           STR_1:	
  1852  207F                     	retlw	84	;'T'
  1853  207F  3454               	retlw	101	;'e'
  1854  2080  3465               	retlw	109	;'m'
  1855  2081  346D               	retlw	112	;'p'
  1856  2082  3470               	retlw	101	;'e'
  1857  2083  3465               	retlw	114	;'r'
  1858  2084  3472               	retlw	97	;'a'
  1859  2085  3461               	retlw	116	;'t'
  1860  2086  3474               	retlw	117	;'u'
  1861  2087  3475               	retlw	114	;'r'
  1862  2088  3472               	retlw	101	;'e'
  1863  2089  3465               	retlw	32	;' '
  1864  208A  3420               	retlw	82	;'R'
  1865  208B  3452               	retlw	101	;'e'
  1866  208C  3465               	retlw	108	;'l'
  1867  208D  346C               	retlw	46	;'.'
  1868  208E  342E               	retlw	104	;'h'
  1869  208F  3468               	retlw	117	;'u'
  1870  2090  3475               	retlw	109	;'m'
  1871  2091  346D               	retlw	105	;'i'
  1872  2092  3469               	retlw	100	;'d'
  1873  2093  3464               	retlw	105	;'i'
  1874  2094  3469               	retlw	116	;'t'
  1875  2095  3474               	retlw	121	;'y'
  1876  2096  3479               	retlw	68	;'D'
  1877  2097  3444               	retlw	101	;'e'
  1878  2098  3465               	retlw	119	;'w'
  1879  2099  3477               	retlw	112	;'p'
  1880  209A  3470               	retlw	111	;'o'
  1881  209B  346F               	retlw	105	;'i'
  1882  209C  3469               	retlw	110	;'n'
  1883  209D  346E               	retlw	116	;'t'
  1884  209E  3474               	retlw	32	;' '
  1885  209F  3420               	retlw	32	;' '
  1886  20A0  3420               	retlw	32	;' '
  1887  20A1  3420               	retlw	32	;' '
  1888  20A2  3420               	retlw	66	;'B'
  1889  20A3  3442               	retlw	97	;'a'
  1890  20A4  3461               	retlw	116	;'t'
  1891  20A5  3474               	retlw	46	;'.'
  1892  20A6  342E               	retlw	32	;' '
  1893  20A7  3420               	retlw	32	;' '
  1894  20A8  3420               	retlw	32	;' '
  1895  20A9  3420               	retlw	80	;'P'
  1896  20AA  3450               	retlw	111	;'o'
  1897  20AB  346F               	retlw	119	;'w'
  1898  20AC  3477               	retlw	101	;'e'
  1899  20AD  3465               	retlw	114	;'r'
  1900  20AE  3472               	retlw	0
  1901  20AF  3400               psect	stringtext4,class=STRCODE,delta=2,noexec
  1902                           global __pstringtext4
  1903                           __pstringtext4:
  1904  2800                     	
  1905                           STR_4:	
  1906  2800                     	retlw	73	;'I'
  1907  2800  3449               	retlw	78	;'N'
  1908  2801  344E               	retlw	70	;'F'
  1909  2802  3446               	retlw	0
  1910  2803  3400               psect	stringtext5,class=STRCODE,delta=2,noexec
  1911                           global __pstringtext5
  1912                           __pstringtext5:
  1913  2804                     	
  1914                           STR_8:	
  1915  2804                     	retlw	78	;'N'
  1916  2804  344E               	retlw	65	;'A'
  1917  2805  3441               	retlw	78	;'N'
  1918  2806  344E               	retlw	0
  1919  2807  3400               psect	stringtext6,class=STRCODE,delta=2,noexec
  1920                           global __pstringtext6
  1921                           __pstringtext6:
  1922  2808                     	
  1923                           STR_5:	
  1924  2808                     	retlw	105	;'i'
  1925  2808  3469               	retlw	110	;'n'
  1926  2809  346E               	retlw	102	;'f'
  1927  280A  3466               	retlw	0
  1928  280B  3400               psect	stringtext7,class=STRCODE,delta=2,noexec
  1929                           global __pstringtext7
  1930                           __pstringtext7:
  1931  280C                     	
  1932                           STR_9:	
  1933  280C                     	retlw	110	;'n'
  1934  280C  346E               	retlw	97	;'a'
  1935  280D  3461               	retlw	110	;'n'
  1936  280E  346E               	retlw	0
  1937  280F  3400               psect	stringtext8,class=STRCODE,delta=2,noexec
  1938                           global __pstringtext8
  1939                           __pstringtext8:
  1940  2810                     	
  1941                           STR_12:	
  1942  2810                     	retlw	108	;'l'
  1943  2810  346C               	retlw	102	;'f'
  1944  2811  3466               	retlw	0
  1945  2812  3400               psect	stringtext9,class=STRCODE,delta=2,noexec
  1946                           global __pstringtext9
  1947                           __pstringtext9:
  1948  0000                     STR_6	equ	STR_5+0
  1949  2808                     STR_7	equ	STR_5+0
  1950  2808                     STR_10	equ	STR_5+0
  1951  2808                     STR_11	equ	STR_5+0
  1952  2808                     STR_13	equ	STR_12+0
  1953  2810                     STR_14	equ	STR_12+0
  1954  2810                     STR_15	equ	STR_12+0
  1955  2810                     STR_16	equ	STR_12+0
  1956  2810                     ; #config settings
  1957                           global __CFG_FEXTOSC$OFF
  1958                           __CFG_FEXTOSC$OFF equ 0x0
  1959  0000                     global __CFG_RSTOSC$HFINT1
  1960                           __CFG_RSTOSC$HFINT1 equ 0x0
  1961  0000                     global __CFG_CLKOUTEN$OFF
  1962                           __CFG_CLKOUTEN$OFF equ 0x0
  1963  0000                     global __CFG_CSWEN$ON
  1964                           __CFG_CSWEN$ON equ 0x0
  1965  0000                     global __CFG_FCMEN$ON
  1966                           __CFG_FCMEN$ON equ 0x0
  1967  0000                     global __CFG_MCLRE$ON
  1968                           __CFG_MCLRE$ON equ 0x0
  1969  0000                     global __CFG_PWRTE$OFF
  1970                           __CFG_PWRTE$OFF equ 0x0
  1971  0000                     global __CFG_LPBOREN$OFF
  1972                           __CFG_LPBOREN$OFF equ 0x0
  1973  0000                     global __CFG_BOREN$ON
  1974                           __CFG_BOREN$ON equ 0x0
  1975  0000                     global __CFG_BORV$LO
  1976                           __CFG_BORV$LO equ 0x0
  1977  0000                     global __CFG_ZCD$OFF
  1978                           __CFG_ZCD$OFF equ 0x0
  1979  0000                     global __CFG_PPS1WAY$ON
  1980                           __CFG_PPS1WAY$ON equ 0x0
  1981  0000                     global __CFG_STVREN$ON
  1982                           __CFG_STVREN$ON equ 0x0
  1983  0000                     global __CFG_WDTCPS$WDTCPS_31
  1984                           __CFG_WDTCPS$WDTCPS_31 equ 0x0
  1985  0000                     global __CFG_WDTE$OFF
  1986                           __CFG_WDTE$OFF equ 0x0
  1987  0000                     global __CFG_WDTCWS$WDTCWS_7
  1988                           __CFG_WDTCWS$WDTCWS_7 equ 0x0
  1989  0000                     global __CFG_WDTCCS$SC
  1990                           __CFG_WDTCCS$SC equ 0x0
  1991  0000                     global __CFG_BBSIZE$BB512
  1992                           __CFG_BBSIZE$BB512 equ 0x0
  1993  0000                     global __CFG_BBEN$OFF
  1994                           __CFG_BBEN$OFF equ 0x0
  1995  0000                     global __CFG_SAFEN$OFF
  1996                           __CFG_SAFEN$OFF equ 0x0
  1997  0000                     global __CFG_WRTAPP$OFF
  1998                           __CFG_WRTAPP$OFF equ 0x0
  1999  0000                     global __CFG_WRTB$OFF
  2000                           __CFG_WRTB$OFF equ 0x0
  2001  0000                     global __CFG_WRTC$OFF
  2002                           __CFG_WRTC$OFF equ 0x0
  2003  0000                     global __CFG_WRTSAF$OFF
  2004                           __CFG_WRTSAF$OFF equ 0x0
  2005  0000                     global __CFG_LVP$ON
  2006                           __CFG_LVP$ON equ 0x0
  2007  0000                     global __CFG_CP$OFF
  2008                           __CFG_CP$OFF equ 0x0
  2009  0000                     	file	"C:\Users\Ondre\AppData\Local\Temp\s454."
  2010                           	line	#
  2011                           psect cinit,class=CODE,delta=2
  2012                           global start_initialization
  2013                           start_initialization:
  2014  007E                     
  2015                           global __initialization
  2016                           __initialization:
  2017  007E                     psect	bssCOMMON,class=COMMON,space=1,noexec
  2018                           global __pbssCOMMON
  2019                           __pbssCOMMON:
  2020  0079                     uartReceiveISR@rxCount:
  2021  0079                            ds      1
  2022  0079                     
  2023                           _g_rotDir:
  2024  007A                            ds      1
  2025  007A                     
  2026                           _g_curRotState:
  2027  007B                            ds      1
  2028  007B                     
  2029                           _g_100msTick:
  2030  007C                            ds      1
  2031  007C                     
  2032                           _g_10msTick:
  2033  007D                            ds      1
  2034  007D                     
  2035                           psect	bssBANK2,class=BANK2,space=1,noexec
  2036                           global __pbssBANK2
  2037                           __pbssBANK2:
  2038  015A                     _g_dewPointC:
  2039  015A                            ds      4
  2040  015A                     
  2041                           _g_relHum:
  2042  015E                            ds      4
  2043  015E                     
  2044                           _nout:
  2045  0162                            ds      2
  2046  0162                     
  2047                           _width:
  2048  0164                            ds      2
  2049  0164                     
  2050                           _prec:
  2051  0166                            ds      2
  2052  0166                     
  2053                           _flags:
  2054  0168                            ds      2
  2055  0168                     
  2056                           uartReceiveISR@checksum:
  2057  016A                            ds      1
  2058  016A                     
  2059                           _g_pbState:
  2060  016B                            ds      1
  2061  016B                     
  2062                           _g_rxOErrCount:
  2063  016C                            ds      1
  2064  016C                     
  2065                           _g_rxFErrCount:
  2066  016D                            ds      1
  2067  016D                     
  2068                           psect	bssBANK3,class=BANK3,space=1,noexec
  2069                           global __pbssBANK3
  2070                           __pbssBANK3:
  2071  01DE                     _g_current:
  2072  01DE                            ds      4
  2073  01DE                     
  2074                           _g_voltage:
  2075  01E2                            ds      4
  2076  01E2                     
  2077                           _g_tempC:
  2078  01E6                            ds      4
  2079  01E6                     
  2080                           _g_dataReady:
  2081  01EA                            ds      1
  2082  01EA                     
  2083                           _g_sensorTimer:
  2084  01EB                            ds      1
  2085  01EB                     
  2086                           showMenu@page:
  2087  01EC                            ds      1
  2088  01EC                     
  2089                           showMenu@menu:
  2090  01ED                            ds      1
  2091  01ED                     
  2092                           psect	bssBANK4,class=BANK4,space=1,noexec
  2093                           global __pbssBANK4
  2094                           __pbssBANK4:
  2095  0220                     floorf@F514:
  2096  0220                            ds      4
  2097  0220                     
  2098                           ___fpclassifyf@F453:
  2099  0224                            ds      4
  2100  0224                     
  2101                           _g_power:
  2102  0228                            ds      4
  2103  0228                     
  2104                           _g_sensorVersion:
  2105  022C                            ds      4
  2106  022C                     
  2107                           uartReceiveISR@buffer:
  2108  0230                            ds      20
  2109  0230                     
  2110                           _g_dataPacket:
  2111  0244                            ds      15
  2112  0244                     
  2113                           psect	dataBANK4,class=BANK4,space=1,noexec
  2114                           global __pdataBANK4
  2115                           __pdataBANK4:
  2116  0253                     	file	"oled.c"
  2117                           	line	153
  2118                           OLED_print_xy@F7353:
  2119  0253                            ds      4
  2120  0253                     
  2121                           psect	dataBANK4
  2122                           	file	"oled.c"
  2123                           	line	139
  2124                           OLED_setCursor@F7345:
  2125  0257                            ds      4
  2126  0257                     
  2127                           psect	bssBANK5,class=BANK5,space=1,noexec
  2128                           global __pbssBANK5
  2129                           __pbssBANK5:
  2130  02A0                     _dbuf:
  2131  02A0                            ds      80
  2132  02A0                     
  2133                           	file	"C:\Users\Ondre\AppData\Local\Temp\s454."
  2134                           	line	#
  2135                           psect inittext,class=CODE,delta=2
  2136                           global init_ram,btemp
  2137                           init_ram:
  2138  1000                     	movwf btemp,f
  2139  1000  00FE               initloop:
  2140  1001                     	moviw fsr0++
  2141  1001  0012               	movwi fsr1++
  2142  1002  001E               	decfsz btemp
  2143  1003  0BFE               	goto initloop
  2144  1004  2801               	retlw 0
  2145  1005  3400               ; Initialize objects allocated to BANK4
  2146                           	global __pidataBANK4,__pdataBANK4
  2147                           psect cinit,class=CODE,delta=2,merge=1
  2148                           	movlw low(__pidataBANK4)
  2149  007E  30F8               	movwf fsr0l
  2150  007F  0084               	movlw high(__pidataBANK4)|80h
  2151  0080  3087               	movwf fsr0h
  2152  0081  0085               	movlw low(__pdataBANK4)
  2153  0082  3053               	movwf fsr1l
  2154  0083  0086               	movlw high(__pdataBANK4)
  2155  0084  3002               	movwf fsr1h
  2156  0085  0087               	movlw 08h
  2157  0086  3008               	fcall init_ram
  2158  0087  3190  2000  3180   	line	#
  2159                           psect clrtext,class=CODE,delta=2
  2160                           global clear_ram0
  2161                           ;	Called with FSR0 containing the base address, and
  2162                           ;	WREG with the size to clear
  2163                           clear_ram0:
  2164  2640                     	clrwdt			;clear the watchdog before getting into this loop
  2165  2640  0064               clrloop0:
  2166  2641                     	clrf	indf0		;clear RAM location pointed to by FSR
  2167  2641  0180               	addfsr	0,1
  2168  2642  3101               	decfsz wreg		;Have we reached the end of clearing yet?
  2169  2643  0B89               	goto clrloop0	;have we reached the end yet?
  2170  2644  2E41               	retlw	0		;all done for this memory range, return
  2171  2645  3400               ; Clear objects allocated to COMMON
  2172                           psect cinit,class=CODE,delta=2,merge=1
  2173                           	global __pbssCOMMON
  2174                           	clrf	((__pbssCOMMON)+0)&07Fh
  2175  008A  01F9               	clrf	((__pbssCOMMON)+1)&07Fh
  2176  008B  01FA               	clrf	((__pbssCOMMON)+2)&07Fh
  2177  008C  01FB               	clrf	((__pbssCOMMON)+3)&07Fh
  2178  008D  01FC               	clrf	((__pbssCOMMON)+4)&07Fh
  2179  008E  01FD               ; Clear objects allocated to BANK2
  2180                           psect cinit,class=CODE,delta=2,merge=1
  2181                           	global __pbssBANK2
  2182                           	movlw	low(__pbssBANK2)
  2183  008F  305A               	movwf	fsr0l
  2184  0090  0084               	movlw	high(__pbssBANK2)
  2185  0091  3001               	movwf	fsr0h
  2186  0092  0085               	movlw	014h
  2187  0093  3014               	fcall	clear_ram0
  2188  0094  31A6  2640  3180   ; Clear objects allocated to BANK3
  2189                           psect cinit,class=CODE,delta=2,merge=1
  2190                           	global __pbssBANK3
  2191                           	movlw	low(__pbssBANK3)
  2192  0097  30DE               	movwf	fsr0l
  2193  0098  0084               	movlw	high(__pbssBANK3)
  2194  0099  3001               	movwf	fsr0h
  2195  009A  0085               	movlw	010h
  2196  009B  3010               	fcall	clear_ram0
  2197  009C  31A6  2640  3180   ; Clear objects allocated to BANK4
  2198                           psect cinit,class=CODE,delta=2,merge=1
  2199                           	global __pbssBANK4
  2200                           	movlw	low(__pbssBANK4)
  2201  009F  3020               	movwf	fsr0l
  2202  00A0  0084               	movlw	high(__pbssBANK4)
  2203  00A1  3002               	movwf	fsr0h
  2204  00A2  0085               	movlw	033h
  2205  00A3  3033               	fcall	clear_ram0
  2206  00A4  31A6  2640  3180   ; Clear objects allocated to BANK5
  2207                           psect cinit,class=CODE,delta=2,merge=1
  2208                           	global __pbssBANK5
  2209                           	movlw	low(__pbssBANK5)
  2210  00A7  30A0               	movwf	fsr0l
  2211  00A8  0084               	movlw	high(__pbssBANK5)
  2212  00A9  3002               	movwf	fsr0h
  2213  00AA  0085               	movlw	050h
  2214  00AB  3050               	fcall	clear_ram0
  2215  00AC  31A6  2640  3180   psect cinit,class=CODE,delta=2,merge=1
  2216                           global end_of_initialization,__end_of__initialization
  2217                           
  2218                           ;End of C runtime variable initialization code
  2219                           
  2220                           end_of_initialization:
  2221  00AF                     __end_of__initialization:
  2222  00AF                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  2223  00AF  107E               movlb 0
  2224  00B0  0140               ljmp _main	;jump to C main() function
  2225  00B1  3199  297A         psect	cstackBANK3,class=BANK3,space=1,noexec
  2226                           global __pcstackBANK3
  2227                           __pcstackBANK3:
  2228  01A0                     	global	showMenu@s
  2229                           showMenu@s:	; 61 bytes @ 0x0
  2230  01A0                     	ds	61
  2231  01A0                     	global	showMenu@pb
  2232                           showMenu@pb:	; 1 bytes @ 0x3D
  2233  01DD                     	ds	1
  2234  01DD                     psect	cstackBANK2,class=BANK2,space=1,noexec
  2235                           global __pcstackBANK2
  2236                           __pcstackBANK2:
  2237  0120                     	global	_vfpfcnvrt$890
  2238                           _vfpfcnvrt$890:	; 2 bytes @ 0x0
  2239  0120                     	ds	2
  2240  0120                     	global	_vfpfcnvrt$891
  2241                           _vfpfcnvrt$891:	; 2 bytes @ 0x2
  2242  0122                     	ds	2
  2243  0122                     	global	_vfpfcnvrt$895
  2244                           _vfpfcnvrt$895:	; 2 bytes @ 0x4
  2245  0124                     	ds	2
  2246  0124                     	global	vfpfcnvrt@f
  2247                           vfpfcnvrt@f:	; 4 bytes @ 0x6
  2248  0126                     	ds	4
  2249  0126                     	global	vfpfcnvrt@ct
  2250                           vfpfcnvrt@ct:	; 3 bytes @ 0xA
  2251  012A                     	ds	3
  2252  012A                     	global	vfpfcnvrt@c
  2253                           vfpfcnvrt@c:	; 1 bytes @ 0xD
  2254  012D                     	ds	1
  2255  012D                     	global	vfpfcnvrt@fp
  2256                           vfpfcnvrt@fp:	; 1 bytes @ 0xE
  2257  012E                     	ds	1
  2258  012E                     	global	?_vfprintf
  2259                           ?_vfprintf:	; 2 bytes @ 0xF
  2260  012F                     	global	vfprintf@fmt
  2261                           vfprintf@fmt:	; 2 bytes @ 0xF
  2262  012F                     	ds	2
  2263  012F                     	global	vfprintf@ap
  2264                           vfprintf@ap:	; 1 bytes @ 0x11
  2265  0131                     	ds	1
  2266  0131                     ??_vfprintf:	; 1 bytes @ 0x12
  2267  0132                     	ds	2
  2268  0132                     	global	vfprintf@fp
  2269                           vfprintf@fp:	; 1 bytes @ 0x14
  2270  0134                     	ds	1
  2271  0134                     	global	vfprintf@cfmt
  2272                           vfprintf@cfmt:	; 2 bytes @ 0x15
  2273  0135                     	ds	2
  2274  0135                     	global	?_sprintf
  2275                           ?_sprintf:	; 2 bytes @ 0x17
  2276  0137                     	global	sprintf@fmt
  2277                           sprintf@fmt:	; 2 bytes @ 0x17
  2278  0137                     	ds	22
  2279  0137                     ??_sprintf:	; 1 bytes @ 0x2D
  2280  014D                     	ds	1
  2281  014D                     	global	sprintf@ret
  2282                           sprintf@ret:	; 2 bytes @ 0x2E
  2283  014E                     	ds	2
  2284  014E                     	global	sprintf@s
  2285                           sprintf@s:	; 1 bytes @ 0x30
  2286  0150                     	ds	1
  2287  0150                     	global	sprintf@ap
  2288                           sprintf@ap:	; 1 bytes @ 0x31
  2289  0151                     	ds	1
  2290  0151                     	global	sprintf@f
  2291                           sprintf@f:	; 5 bytes @ 0x32
  2292  0152                     	ds	5
  2293  0152                     ??_showMenu:	; 1 bytes @ 0x37
  2294  0157                     	ds	2
  2295  0157                     ??_main:	; 1 bytes @ 0x39
  2296  0159                     	ds	1
  2297  0159                     psect	cstackBANK1,class=BANK1,space=1,noexec
  2298                           global __pcstackBANK1
  2299                           __pcstackBANK1:
  2300  00A0                     	global	floorf@m
  2301                           floorf@m:	; 4 bytes @ 0x0
  2302  00A0                     	ds	4
  2303  00A0                     	global	floorf@e
  2304                           floorf@e:	; 2 bytes @ 0x4
  2305  00A4                     	ds	2
  2306  00A4                     	global	floorf@u
  2307                           floorf@u:	; 4 bytes @ 0x6
  2308  00A6                     	ds	4
  2309  00A6                     	global	?_efgtoa
  2310                           ?_efgtoa:	; 2 bytes @ 0xA
  2311  00AA                     	global	efgtoa@f
  2312                           efgtoa@f:	; 4 bytes @ 0xA
  2313  00AA                     	ds	4
  2314  00AA                     	global	efgtoa@c
  2315                           efgtoa@c:	; 1 bytes @ 0xE
  2316  00AE                     	ds	1
  2317  00AE                     	global	efgtoa@ou
  2318                           efgtoa@ou:	; 4 bytes @ 0xF
  2319  00AF                     	ds	4
  2320  00AF                     	global	_efgtoa$864
  2321                           _efgtoa$864:	; 2 bytes @ 0x13
  2322  00B3                     	ds	2
  2323  00B3                     	global	_efgtoa$865
  2324                           _efgtoa$865:	; 2 bytes @ 0x15
  2325  00B5                     	ds	2
  2326  00B5                     	global	_efgtoa$870
  2327                           _efgtoa$870:	; 2 bytes @ 0x17
  2328  00B7                     	ds	2
  2329  00B7                     	global	_efgtoa$874
  2330                           _efgtoa$874:	; 2 bytes @ 0x19
  2331  00B9                     	ds	2
  2332  00B9                     	global	_efgtoa$875
  2333                           _efgtoa$875:	; 2 bytes @ 0x1B
  2334  00BB                     	ds	2
  2335  00BB                     	global	_efgtoa$876
  2336                           _efgtoa$876:	; 2 bytes @ 0x1D
  2337  00BD                     	ds	2
  2338  00BD                     	global	efgtoa@t
  2339                           efgtoa@t:	; 2 bytes @ 0x1F
  2340  00BF                     	ds	2
  2341  00BF                     	global	efgtoa@pp
  2342                           efgtoa@pp:	; 2 bytes @ 0x21
  2343  00C1                     	ds	2
  2344  00C1                     	global	efgtoa@m
  2345                           efgtoa@m:	; 2 bytes @ 0x23
  2346  00C3                     	ds	2
  2347  00C3                     	global	efgtoa@ne
  2348                           efgtoa@ne:	; 2 bytes @ 0x25
  2349  00C5                     	ds	2
  2350  00C5                     	global	efgtoa@d
  2351                           efgtoa@d:	; 2 bytes @ 0x27
  2352  00C7                     	ds	2
  2353  00C7                     	global	efgtoa@sign
  2354                           efgtoa@sign:	; 2 bytes @ 0x29
  2355  00C9                     	ds	2
  2356  00C9                     	global	efgtoa@fp
  2357                           efgtoa@fp:	; 1 bytes @ 0x2B
  2358  00CB                     	ds	1
  2359  00CB                     	global	efgtoa@p
  2360                           efgtoa@p:	; 2 bytes @ 0x2C
  2361  00CC                     	ds	2
  2362  00CC                     	global	efgtoa@nmode
  2363                           efgtoa@nmode:	; 1 bytes @ 0x2E
  2364  00CE                     	ds	1
  2365  00CE                     	global	efgtoa@w
  2366                           efgtoa@w:	; 2 bytes @ 0x2F
  2367  00CF                     	ds	2
  2368  00CF                     	global	efgtoa@mode
  2369                           efgtoa@mode:	; 1 bytes @ 0x31
  2370  00D1                     	ds	1
  2371  00D1                     	global	efgtoa@h
  2372                           efgtoa@h:	; 4 bytes @ 0x32
  2373  00D2                     	ds	4
  2374  00D2                     	global	efgtoa@l
  2375                           efgtoa@l:	; 4 bytes @ 0x36
  2376  00D6                     	ds	4
  2377  00D6                     	global	efgtoa@i
  2378                           efgtoa@i:	; 2 bytes @ 0x3A
  2379  00DA                     	ds	2
  2380  00DA                     	global	efgtoa@g
  2381                           efgtoa@g:	; 4 bytes @ 0x3C
  2382  00DC                     	ds	4
  2383  00DC                     	global	efgtoa@e
  2384                           efgtoa@e:	; 2 bytes @ 0x40
  2385  00E0                     	ds	2
  2386  00E0                     	global	efgtoa@n
  2387                           efgtoa@n:	; 2 bytes @ 0x42
  2388  00E2                     	ds	2
  2389  00E2                     	global	efgtoa@u
  2390                           efgtoa@u:	; 4 bytes @ 0x44
  2391  00E4                     	ds	4
  2392  00E4                     	global	?_vfpfcnvrt
  2393                           ?_vfpfcnvrt:	; 2 bytes @ 0x48
  2394  00E8                     	global	vfpfcnvrt@fmt
  2395                           vfpfcnvrt@fmt:	; 1 bytes @ 0x48
  2396  00E8                     	ds	1
  2397  00E8                     	global	vfpfcnvrt@ap
  2398                           vfpfcnvrt@ap:	; 1 bytes @ 0x49
  2399  00E9                     	ds	1
  2400  00E9                     ??_vfpfcnvrt:	; 1 bytes @ 0x4A
  2401  00EA                     	ds	6
  2402  00EA                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  2403                           global __pcstackCOMMON
  2404                           __pcstackCOMMON:
  2405  0070                     ?_initialize:	; 1 bytes @ 0x0
  2406  0070                     ?_OLED_init:	; 1 bytes @ 0x0
  2407  0070                     ?_OLED_returnHome:	; 1 bytes @ 0x0
  2408  0070                     ?_OLED_command:	; 1 bytes @ 0x0
  2409  0070                     ?_readAnalogValues:	; 1 bytes @ 0x0
  2410  0070                     ?_uartSendByte:	; 1 bytes @ 0x0
  2411  0070                     ?_handleSensorData:	; 1 bytes @ 0x0
  2412  0070                     ?_showMenu:	; 1 bytes @ 0x0
  2413  0070                     ?_getPB:	; 1 bytes @ 0x0
  2414  0070                     ?_getRotDir:	; 1 bytes @ 0x0
  2415  0070                     ?_OLED_scrollDisplayLeft:	; 1 bytes @ 0x0
  2416  0070                     ?_OLED_scrollDisplayRight:	; 1 bytes @ 0x0
  2417  0070                     ?_pushButtonISR:	; 1 bytes @ 0x0
  2418  0070                     ??_pushButtonISR:	; 1 bytes @ 0x0
  2419  0070                     ?_rotISR:	; 1 bytes @ 0x0
  2420  0070                     ??_rotISR:	; 1 bytes @ 0x0
  2421  0070                     ?_uartReceiveISR:	; 1 bytes @ 0x0
  2422  0070                     ?_strncpy:	; 1 bytes @ 0x0
  2423  0070                     ?_putch:	; 1 bytes @ 0x0
  2424  0070                     ?_main:	; 1 bytes @ 0x0
  2425  0070                     ?_ISR:	; 1 bytes @ 0x0
  2426  0070                     ?_OLED_pulseEnable:	; 1 bytes @ 0x0
  2427  0070                     ?_OLED_write4bits:	; 1 bytes @ 0x0
  2428  0070                     ?_OLED_waitForReady:	; 1 bytes @ 0x0
  2429  0070                     ?_OLED_write:	; 1 bytes @ 0x0
  2430  0070                     putch@c:	; 1 bytes @ 0x0
  2431  0070                     	global	strncpy@s
  2432                           strncpy@s:	; 1 bytes @ 0x0
  2433  0070                     	ds	1
  2434  0070                     	global	strncpy@n
  2435                           strncpy@n:	; 2 bytes @ 0x1
  2436  0071                     	ds	2
  2437  0071                     ??_strncpy:	; 1 bytes @ 0x3
  2438  0073                     	ds	1
  2439  0073                     	global	strncpy@d
  2440                           strncpy@d:	; 1 bytes @ 0x4
  2441  0074                     	ds	1
  2442  0074                     	global	strncpy@cp
  2443                           strncpy@cp:	; 1 bytes @ 0x5
  2444  0075                     	ds	1
  2445  0075                     ??_uartReceiveISR:	; 1 bytes @ 0x6
  2446  0076                     	ds	1
  2447  0076                     	global	rotISR@input
  2448                           rotISR@input:	; 1 bytes @ 0x7
  2449  0077                     	ds	1
  2450  0077                     ??_ISR:	; 1 bytes @ 0x8
  2451  0078                     	ds	1
  2452  0078                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2453                           global __pcstackBANK0
  2454                           __pcstackBANK0:
  2455  0020                     ?___fleq:	; 1 bit 
  2456  0020                     ??_initialize:	; 1 bytes @ 0x0
  2457  0020                     ??_uartSendByte:	; 1 bytes @ 0x0
  2458  0020                     ??_getPB:	; 1 bytes @ 0x0
  2459  0020                     ??_getRotDir:	; 1 bytes @ 0x0
  2460  0020                     ?_strcpy:	; 1 bytes @ 0x0
  2461  0020                     ??_putch:	; 1 bytes @ 0x0
  2462  0020                     ??_OLED_pulseEnable:	; 1 bytes @ 0x0
  2463  0020                     ??_OLED_write4bits:	; 1 bytes @ 0x0
  2464  0020                     ??_OLED_waitForReady:	; 1 bytes @ 0x0
  2465  0020                     ?_fputc:	; 2 bytes @ 0x0
  2466  0020                     	global	?_strlen
  2467                           ?_strlen:	; 2 bytes @ 0x0
  2468  0020                     	global	?___fpclassifyf
  2469                           ?___fpclassifyf:	; 2 bytes @ 0x0
  2470  0020                     	global	?_isupper
  2471                           ?_isupper:	; 2 bytes @ 0x0
  2472  0020                     	global	?_isdigit
  2473                           ?_isdigit:	; 2 bytes @ 0x0
  2474  0020                     	global	?_strncmp
  2475                           ?_strncmp:	; 2 bytes @ 0x0
  2476  0020                     	global	?__Umul8_16
  2477                           ?__Umul8_16:	; 2 bytes @ 0x0
  2478  0020                     	global	?_isspace
  2479                           ?_isspace:	; 2 bytes @ 0x0
  2480  0020                     	global	?___wmul
  2481                           ?___wmul:	; 2 bytes @ 0x0
  2482  0020                     	global	?___awdiv
  2483                           ?___awdiv:	; 2 bytes @ 0x0
  2484  0020                     	global	?___awmod
  2485                           ?___awmod:	; 2 bytes @ 0x0
  2486  0020                     	global	?___flneg
  2487                           ?___flneg:	; 4 bytes @ 0x0
  2488  0020                     	global	?___fltol
  2489                           ?___fltol:	; 4 bytes @ 0x0
  2490  0020                     	global	?___fladd
  2491                           ?___fladd:	; 4 bytes @ 0x0
  2492  0020                     	global	?___xxtofl
  2493                           ?___xxtofl:	; 4 bytes @ 0x0
  2494  0020                     	global	uartSendByte@s
  2495                           uartSendByte@s:	; 1 bytes @ 0x0
  2496  0020                     	global	OLED_waitForReady@busy
  2497                           OLED_waitForReady@busy:	; 1 bytes @ 0x0
  2498  0020                     	global	__Umul8_16@multiplicand
  2499                           __Umul8_16@multiplicand:	; 1 bytes @ 0x0
  2500  0020                     	global	___wmul@multiplier
  2501                           ___wmul@multiplier:	; 2 bytes @ 0x0
  2502  0020                     	global	___awdiv@divisor
  2503                           ___awdiv@divisor:	; 2 bytes @ 0x0
  2504  0020                     	global	___awmod@divisor
  2505                           ___awmod@divisor:	; 2 bytes @ 0x0
  2506  0020                     	global	isdigit@c
  2507                           isdigit@c:	; 2 bytes @ 0x0
  2508  0020                     	global	isspace@c
  2509                           isspace@c:	; 2 bytes @ 0x0
  2510  0020                     	global	isupper@c
  2511                           isupper@c:	; 2 bytes @ 0x0
  2512  0020                     	global	fputc@c
  2513                           fputc@c:	; 2 bytes @ 0x0
  2514  0020                     	global	strcpy@src
  2515                           strcpy@src:	; 2 bytes @ 0x0
  2516  0020                     	global	strncmp@_r
  2517                           strncmp@_r:	; 2 bytes @ 0x0
  2518  0020                     	global	___fleq@ff1
  2519                           ___fleq@ff1:	; 4 bytes @ 0x0
  2520  0020                     	global	___flneg@f1
  2521                           ___flneg@f1:	; 4 bytes @ 0x0
  2522  0020                     	global	___fltol@f1
  2523                           ___fltol@f1:	; 4 bytes @ 0x0
  2524  0020                     	global	___fladd@b
  2525                           ___fladd@b:	; 4 bytes @ 0x0
  2526  0020                     	global	___xxtofl@val
  2527                           ___xxtofl@val:	; 4 bytes @ 0x0
  2528  0020                     	global	___fpclassifyf@x
  2529                           ___fpclassifyf@x:	; 4 bytes @ 0x0
  2530  0020                     	ds	1
  2531  0020                     	global	getRotDir@ret
  2532                           getRotDir@ret:	; 1 bytes @ 0x1
  2533  0021                     	global	getPB@ret
  2534                           getPB@ret:	; 1 bytes @ 0x1
  2535  0021                     	ds	1
  2536  0021                     ??_strlen:	; 1 bytes @ 0x2
  2537  0022                     ??_isupper:	; 1 bytes @ 0x2
  2538  0022                     ??_strcpy:	; 1 bytes @ 0x2
  2539  0022                     ??_isdigit:	; 1 bytes @ 0x2
  2540  0022                     ??__Umul8_16:	; 1 bytes @ 0x2
  2541  0022                     ??_isspace:	; 1 bytes @ 0x2
  2542  0022                     	global	OLED_write4bits@value
  2543                           OLED_write4bits@value:	; 1 bytes @ 0x2
  2544  0022                     	global	fputc@fp
  2545                           fputc@fp:	; 1 bytes @ 0x2
  2546  0022                     	global	___wmul@multiplicand
  2547                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  2548  0022                     	global	___awdiv@dividend
  2549                           ___awdiv@dividend:	; 2 bytes @ 0x2
  2550  0022                     	global	___awmod@dividend
  2551                           ___awmod@dividend:	; 2 bytes @ 0x2
  2552  0022                     	global	strncmp@n
  2553                           strncmp@n:	; 2 bytes @ 0x2
  2554  0022                     	ds	1
  2555  0022                     ??_fputc:	; 1 bytes @ 0x3
  2556  0023                     ?_OLED_send:	; 1 bytes @ 0x3
  2557  0023                     	global	OLED_send@mode
  2558                           OLED_send@mode:	; 1 bytes @ 0x3
  2559  0023                     	ds	1
  2560  0023                     ??___fpclassifyf:	; 1 bytes @ 0x4
  2561  0024                     ??_strncmp:	; 1 bytes @ 0x4
  2562  0024                     ??_OLED_send:	; 1 bytes @ 0x4
  2563  0024                     ??___wmul:	; 1 bytes @ 0x4
  2564  0024                     ??___awdiv:	; 1 bytes @ 0x4
  2565  0024                     ??___awmod:	; 1 bytes @ 0x4
  2566  0024                     ??___flneg:	; 1 bytes @ 0x4
  2567  0024                     ??___fltol:	; 1 bytes @ 0x4
  2568  0024                     ??___xxtofl:	; 1 bytes @ 0x4
  2569  0024                     	global	_isspace$1230
  2570                           _isspace$1230:	; 1 bytes @ 0x4
  2571  0024                     	global	___wmul@product
  2572                           ___wmul@product:	; 2 bytes @ 0x4
  2573  0024                     	global	strcpy@s
  2574                           strcpy@s:	; 2 bytes @ 0x4
  2575  0024                     	global	__Umul8_16@product
  2576                           __Umul8_16@product:	; 2 bytes @ 0x4
  2577  0024                     	global	___fleq@ff2
  2578                           ___fleq@ff2:	; 4 bytes @ 0x4
  2579  0024                     	global	___fladd@a
  2580                           ___fladd@a:	; 4 bytes @ 0x4
  2581  0024                     	ds	1
  2582  0024                     	global	OLED_send@value
  2583                           OLED_send@value:	; 1 bytes @ 0x5
  2584  0025                     	global	___awdiv@counter
  2585                           ___awdiv@counter:	; 1 bytes @ 0x5
  2586  0025                     	global	___awmod@counter
  2587                           ___awmod@counter:	; 1 bytes @ 0x5
  2588  0025                     	ds	1
  2589  0025                     ??_OLED_command:	; 1 bytes @ 0x6
  2590  0026                     ??_OLED_write:	; 1 bytes @ 0x6
  2591  0026                     	global	?_tolower
  2592                           ?_tolower:	; 2 bytes @ 0x6
  2593  0026                     	global	?_atoi
  2594                           ?_atoi:	; 2 bytes @ 0x6
  2595  0026                     	global	OLED_command@value
  2596                           OLED_command@value:	; 1 bytes @ 0x6
  2597  0026                     	global	OLED_write@value
  2598                           OLED_write@value:	; 1 bytes @ 0x6
  2599  0026                     	global	___awdiv@sign
  2600                           ___awdiv@sign:	; 1 bytes @ 0x6
  2601  0026                     	global	___awmod@sign
  2602                           ___awmod@sign:	; 1 bytes @ 0x6
  2603  0026                     	global	strcpy@d
  2604                           strcpy@d:	; 1 bytes @ 0x6
  2605  0026                     	global	strlen@a
  2606                           strlen@a:	; 1 bytes @ 0x6
  2607  0026                     	global	strncmp@_l
  2608                           strncmp@_l:	; 1 bytes @ 0x6
  2609  0026                     	global	atoi@s
  2610                           atoi@s:	; 2 bytes @ 0x6
  2611  0026                     	global	tolower@c
  2612                           tolower@c:	; 2 bytes @ 0x6
  2613  0026                     	global	__Umul8_16@word_mpld
  2614                           __Umul8_16@word_mpld:	; 2 bytes @ 0x6
  2615  0026                     	ds	1
  2616  0026                     ??_OLED_init:	; 1 bytes @ 0x7
  2617  0027                     ??_OLED_returnHome:	; 1 bytes @ 0x7
  2618  0027                     ?_OLED_print_xy:	; 1 bytes @ 0x7
  2619  0027                     ?_menuInput:	; 1 bytes @ 0x7
  2620  0027                     ??_OLED_scrollDisplayLeft:	; 1 bytes @ 0x7
  2621  0027                     ??_OLED_scrollDisplayRight:	; 1 bytes @ 0x7
  2622  0027                     	global	menuInput@numPages
  2623                           menuInput@numPages:	; 1 bytes @ 0x7
  2624  0027                     	global	OLED_print_xy@row
  2625                           OLED_print_xy@row:	; 1 bytes @ 0x7
  2626  0027                     	global	strcpy@dest
  2627                           strcpy@dest:	; 1 bytes @ 0x7
  2628  0027                     	global	strlen@s
  2629                           strlen@s:	; 1 bytes @ 0x7
  2630  0027                     	global	___awdiv@quotient
  2631                           ___awdiv@quotient:	; 2 bytes @ 0x7
  2632  0027                     	global	strncmp@r
  2633                           strncmp@r:	; 2 bytes @ 0x7
  2634  0027                     	ds	1
  2635  0027                     ??_tolower:	; 1 bytes @ 0x8
  2636  0028                     ??_atoi:	; 1 bytes @ 0x8
  2637  0028                     ??___fleq:	; 1 bytes @ 0x8
  2638  0028                     ??___fladd:	; 1 bytes @ 0x8
  2639  0028                     ?_fputs:	; 2 bytes @ 0x8
  2640  0028                     	global	menuInput@menu
  2641                           menuInput@menu:	; 1 bytes @ 0x8
  2642  0028                     	global	___xxtofl@sign
  2643                           ___xxtofl@sign:	; 1 bytes @ 0x8
  2644  0028                     	global	fputs@fp
  2645                           fputs@fp:	; 1 bytes @ 0x8
  2646  0028                     	global	__Umul8_16@multiplier
  2647                           __Umul8_16@multiplier:	; 1 bytes @ 0x8
  2648  0028                     	global	OLED_print_xy@s
  2649                           OLED_print_xy@s:	; 2 bytes @ 0x8
  2650  0028                     	ds	1
  2651  0028                     ??_fputs:	; 1 bytes @ 0x9
  2652  0029                     	global	menuInput@pbShort
  2653                           menuInput@pbShort:	; 1 bytes @ 0x9
  2654  0029                     	global	___fltol@sign1
  2655                           ___fltol@sign1:	; 1 bytes @ 0x9
  2656  0029                     	global	___xxtofl@exp
  2657                           ___xxtofl@exp:	; 1 bytes @ 0x9
  2658  0029                     	global	strncmp@l
  2659                           strncmp@l:	; 1 bytes @ 0x9
  2660  0029                     	ds	1
  2661  0029                     ??_OLED_print_xy:	; 1 bytes @ 0xA
  2662  002A                     	global	menuInput@pbLong
  2663                           menuInput@pbLong:	; 1 bytes @ 0xA
  2664  002A                     	global	___fltol@exp1
  2665                           ___fltol@exp1:	; 1 bytes @ 0xA
  2666  002A                     	global	___fpclassifyf@e
  2667                           ___fpclassifyf@e:	; 2 bytes @ 0xA
  2668  002A                     	global	___xxtofl@arg
  2669                           ___xxtofl@arg:	; 4 bytes @ 0xA
  2670  002A                     	ds	1
  2671  002A                     	global	menuInput@timeout
  2672                           menuInput@timeout:	; 1 bytes @ 0xB
  2673  002B                     	global	OLED_print_xy@row_offsets
  2674                           OLED_print_xy@row_offsets:	; 4 bytes @ 0xB
  2675  002B                     	ds	1
  2676  002B                     ??_menuInput:	; 1 bytes @ 0xC
  2677  002C                     	global	fputs@c
  2678                           fputs@c:	; 1 bytes @ 0xC
  2679  002C                     	global	atoi@neg
  2680                           atoi@neg:	; 2 bytes @ 0xC
  2681  002C                     	global	_tolower$1321
  2682                           _tolower$1321:	; 2 bytes @ 0xC
  2683  002C                     	global	___fpclassifyf@u
  2684                           ___fpclassifyf@u:	; 4 bytes @ 0xC
  2685  002C                     	ds	1
  2686  002C                     	global	fputs@i
  2687                           fputs@i:	; 2 bytes @ 0xD
  2688  002D                     	ds	1
  2689  002D                     ??_handleSensorData:	; 1 bytes @ 0xE
  2690  002E                     	global	?___flmul
  2691                           ?___flmul:	; 4 bytes @ 0xE
  2692  002E                     	global	menuInput@dir
  2693                           menuInput@dir:	; 1 bytes @ 0xE
  2694  002E                     	global	_atoi$1199
  2695                           _atoi$1199:	; 2 bytes @ 0xE
  2696  002E                     	global	___flmul@b
  2697                           ___flmul@b:	; 4 bytes @ 0xE
  2698  002E                     	ds	1
  2699  002E                     	global	menuInput@pb
  2700                           menuInput@pb:	; 1 bytes @ 0xF
  2701  002F                     	global	OLED_print_xy@col
  2702                           OLED_print_xy@col:	; 1 bytes @ 0xF
  2703  002F                     	global	fputs@s
  2704                           fputs@s:	; 1 bytes @ 0xF
  2705  002F                     	ds	1
  2706  002F                     	global	?_pad
  2707                           ?_pad:	; 2 bytes @ 0x10
  2708  0030                     	global	menuInput@n
  2709                           menuInput@n:	; 1 bytes @ 0x10
  2710  0030                     	global	pad@buf
  2711                           pad@buf:	; 1 bytes @ 0x10
  2712  0030                     	global	_atoi$1201
  2713                           _atoi$1201:	; 2 bytes @ 0x10
  2714  0030                     	ds	1
  2715  0030                     	global	menuInput@page
  2716                           menuInput@page:	; 1 bytes @ 0x11
  2717  0031                     	global	pad@p
  2718                           pad@p:	; 2 bytes @ 0x11
  2719  0031                     	ds	1
  2720  0031                     	global	_atoi$1200
  2721                           _atoi$1200:	; 1 bytes @ 0x12
  2722  0032                     	global	___flmul@a
  2723                           ___flmul@a:	; 4 bytes @ 0x12
  2724  0032                     	ds	1
  2725  0032                     ??_pad:	; 1 bytes @ 0x13
  2726  0033                     	global	atoi@n
  2727                           atoi@n:	; 2 bytes @ 0x13
  2728  0033                     	ds	1
  2729  0033                     	global	___fladd@signs
  2730                           ___fladd@signs:	; 1 bytes @ 0x14
  2731  0034                     	global	pad@i
  2732                           pad@i:	; 2 bytes @ 0x14
  2733  0034                     	ds	1
  2734  0034                     	global	___fladd@aexp
  2735                           ___fladd@aexp:	; 1 bytes @ 0x15
  2736  0035                     	ds	1
  2737  0035                     ??___flmul:	; 1 bytes @ 0x16
  2738  0036                     	global	___fladd@bexp
  2739                           ___fladd@bexp:	; 1 bytes @ 0x16
  2740  0036                     	global	pad@w
  2741                           pad@w:	; 2 bytes @ 0x16
  2742  0036                     	ds	1
  2743  0036                     	global	___fladd@grs
  2744                           ___fladd@grs:	; 1 bytes @ 0x17
  2745  0037                     	ds	1
  2746  0037                     	global	pad@fp
  2747                           pad@fp:	; 1 bytes @ 0x18
  2748  0038                     	ds	3
  2749  0038                     	global	___flmul@sign
  2750                           ___flmul@sign:	; 1 bytes @ 0x1B
  2751  003B                     	ds	1
  2752  003B                     	global	___flmul@grs
  2753                           ___flmul@grs:	; 4 bytes @ 0x1C
  2754  003C                     	ds	4
  2755  003C                     	global	___flmul@aexp
  2756                           ___flmul@aexp:	; 1 bytes @ 0x20
  2757  0040                     	ds	1
  2758  0040                     	global	___flmul@bexp
  2759                           ___flmul@bexp:	; 1 bytes @ 0x21
  2760  0041                     	ds	1
  2761  0041                     	global	___flmul@prod
  2762                           ___flmul@prod:	; 4 bytes @ 0x22
  2763  0042                     	ds	4
  2764  0042                     	global	___flmul@temp
  2765                           ___flmul@temp:	; 2 bytes @ 0x26
  2766  0046                     	ds	2
  2767  0046                     ?___flge:	; 1 bit 
  2768  0048                     	global	?___flsub
  2769                           ?___flsub:	; 4 bytes @ 0x28
  2770  0048                     	global	?___fldiv
  2771                           ?___fldiv:	; 4 bytes @ 0x28
  2772  0048                     	global	___flge@ff1
  2773                           ___flge@ff1:	; 4 bytes @ 0x28
  2774  0048                     	global	___flsub@a
  2775                           ___flsub@a:	; 4 bytes @ 0x28
  2776  0048                     	global	___fldiv@a
  2777                           ___fldiv@a:	; 4 bytes @ 0x28
  2778  0048                     	ds	4
  2779  0048                     	global	___flge@ff2
  2780                           ___flge@ff2:	; 4 bytes @ 0x2C
  2781  004C                     	global	___flsub@b
  2782                           ___flsub@b:	; 4 bytes @ 0x2C
  2783  004C                     	global	___fldiv@b
  2784                           ___fldiv@b:	; 4 bytes @ 0x2C
  2785  004C                     	ds	4
  2786  004C                     ??___flge:	; 1 bytes @ 0x30
  2787  0050                     ??___flsub:	; 1 bytes @ 0x30
  2788  0050                     ??___fldiv:	; 1 bytes @ 0x30
  2789  0050                     	ds	5
  2790  0050                     	global	___fldiv@rem
  2791                           ___fldiv@rem:	; 4 bytes @ 0x35
  2792  0055                     	ds	4
  2793  0055                     	global	___fldiv@sign
  2794                           ___fldiv@sign:	; 1 bytes @ 0x39
  2795  0059                     	ds	1
  2796  0059                     	global	___fldiv@new_exp
  2797                           ___fldiv@new_exp:	; 2 bytes @ 0x3A
  2798  005A                     	ds	2
  2799  005A                     	global	___fldiv@grs
  2800                           ___fldiv@grs:	; 4 bytes @ 0x3C
  2801  005C                     	ds	4
  2802  005C                     	global	___fldiv@bexp
  2803                           ___fldiv@bexp:	; 1 bytes @ 0x40
  2804  0060                     	ds	1
  2805  0060                     	global	___fldiv@aexp
  2806                           ___fldiv@aexp:	; 1 bytes @ 0x41
  2807  0061                     	ds	1
  2808  0061                     ??_readAnalogValues:	; 1 bytes @ 0x42
  2809  0062                     	global	?_floorf
  2810                           ?_floorf:	; 4 bytes @ 0x42
  2811  0062                     	global	floorf@x
  2812                           floorf@x:	; 4 bytes @ 0x42
  2813  0062                     	global	_readAnalogValues$1479
  2814                           _readAnalogValues$1479:	; 4 bytes @ 0x42
  2815  0062                     	ds	4
  2816  0062                     ??_floorf:	; 1 bytes @ 0x46
  2817  0066                     	global	readAnalogValues@adc
  2818                           readAnalogValues@adc:	; 2 bytes @ 0x46
  2819  0066                     	ds	6
  2820  0066                     ??_efgtoa:	; 1 bytes @ 0x4C
  2821  006C                     	ds	4
  2822  006C                     ;!
  2823                           ;!Data Sizes:
  2824                           ;!    Strings     167
  2825                           ;!    Constant    28
  2826                           ;!    Data        8
  2827                           ;!    BSS         172
  2828                           ;!    Persistent  0
  2829                           ;!    Stack       0
  2830                           ;!
  2831                           ;!Auto Spaces:
  2832                           ;!    Space          Size  Autos    Used
  2833                           ;!    COMMON           14      9      14
  2834                           ;!    BANK0            80     80      80
  2835                           ;!    BANK1            80     80      80
  2836                           ;!    BANK2            80     58      78
  2837                           ;!    BANK3            80     62      78
  2838                           ;!    BANK4            80      0      59
  2839                           ;!    BANK5            80      0      80
  2840                           ;!    BANK6            80      0       0
  2841                           ;!    BANK7            80      0       0
  2842                           ;!    BANK8            80      0       0
  2843                           ;!    BANK9            80      0       0
  2844                           ;!    BANK10           80      0       0
  2845                           ;!    BANK11           80      0       0
  2846                           ;!    BANK12           80      0       0
  2847                           ;!    BANK13           80      0       0
  2848                           ;!    BANK14           80      0       0
  2849                           ;!    BANK15           80      0       0
  2850                           ;!    BANK16           80      0       0
  2851                           ;!    BANK17           80      0       0
  2852                           ;!    BANK18           80      0       0
  2853                           ;!    BANK19           80      0       0
  2854                           ;!    BANK20           80      0       0
  2855                           ;!    BANK21           80      0       0
  2856                           ;!    BANK22           80      0       0
  2857                           ;!    BANK23           80      0       0
  2858                           ;!    BANK24           80      0       0
  2859                           ;!    BANK25           32      0       0
  2860                           
  2861                           ;!
  2862                           ;!Pointer List with Targets:
  2863                           ;!
  2864                           ;!    strncpy@s	PTR const unsigned char  size(1) Largest target is 20
  2865                           ;!		 -> uartReceiveISR@buffer(BANK4[20]), 
  2866                           ;!
  2867                           ;!    strncpy@d	PTR unsigned char  size(1) Largest target is 15
  2868                           ;!		 -> g_dataPacket(BANK4[15]), 
  2869                           ;!
  2870                           ;!    strncpy@cp	PTR unsigned char  size(1) Largest target is 15
  2871                           ;!		 -> g_dataPacket(BANK4[15]), 
  2872                           ;!
  2873                           ;!    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
  2874                           ;!		 -> STR_14(CODE[3]), 
  2875                           ;!
  2876                           ;!    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
  2877                           ;!		 -> STR_14(CODE[3]), 
  2878                           ;!
  2879                           ;!    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
  2880                           ;!		 -> vfpfcnvrt@ct(BANK2[3]), 
  2881                           ;!
  2882                           ;!    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
  2883                           ;!		 -> vfpfcnvrt@ct(BANK2[3]), 
  2884                           ;!
  2885                           ;!    strlen@s	PTR const unsigned char  size(1) Largest target is 80
  2886                           ;!		 -> dbuf(BANK5[80]), 
  2887                           ;!
  2888                           ;!    strlen@a	PTR const unsigned char  size(1) Largest target is 80
  2889                           ;!		 -> dbuf(BANK5[80]), 
  2890                           ;!
  2891                           ;!    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
  2892                           ;!		 -> dbuf(BANK5[80]), 
  2893                           ;!
  2894                           ;!    strcpy@d	PTR unsigned char  size(1) Largest target is 80
  2895                           ;!		 -> dbuf(BANK5[80]), 
  2896                           ;!
  2897                           ;!    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
  2898                           ;!		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
  2899                           ;!		 -> dbuf(BANK5[80]), 
  2900                           ;!
  2901                           ;!    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
  2902                           ;!		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
  2903                           ;!		 -> dbuf(BANK5[80]), 
  2904                           ;!
  2905                           ;!    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 50
  2906                           ;!		 -> STR_2(CODE[50]), 
  2907                           ;!
  2908                           ;!    sprintf@s	PTR unsigned char  size(1) Largest target is 61
  2909                           ;!		 -> showMenu@s(BANK3[61]), 
  2910                           ;!
  2911                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  2912                           ;!		 -> ?_sprintf(BANK2[2]), 
  2913                           ;!
  2914                           ;!    f.buffer	PTR unsigned char  size(1) Largest target is 61
  2915                           ;!		 -> showMenu@s(BANK3[61]), 
  2916                           ;!
  2917                           ;!    fputs@s	PTR const unsigned char  size(1) Largest target is 80
  2918                           ;!		 -> dbuf(BANK5[80]), 
  2919                           ;!
  2920                           ;!    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
  2921                           ;!		 -> sprintf@f(BANK2[5]), 
  2922                           ;!
  2923                           ;!    S1243_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 61
  2924                           ;!		 -> showMenu@s(BANK3[61]), 
  2925                           ;!
  2926                           ;!    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 61
  2927                           ;!		 -> showMenu@s(BANK3[61]), 
  2928                           ;!
  2929                           ;!    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
  2930                           ;!		 -> sprintf@f(BANK2[5]), 
  2931                           ;!
  2932                           ;!    atoi@s	PTR const unsigned char  size(2) Largest target is 50
  2933                           ;!		 -> STR_2(CODE[50]), 
  2934                           ;!
  2935                           ;!    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
  2936                           ;!		 -> sprintf@ap(BANK2[1]), 
  2937                           ;!
  2938                           ;!    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
  2939                           ;!		 -> sprintf@f(BANK2[5]), 
  2940                           ;!
  2941                           ;!    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 50
  2942                           ;!		 -> STR_2(CODE[50]), 
  2943                           ;!
  2944                           ;!    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 50
  2945                           ;!		 -> STR_2(CODE[50]), 
  2946                           ;!
  2947                           ;!    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
  2948                           ;!		 -> sprintf@f(BANK2[5]), 
  2949                           ;!
  2950                           ;!    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
  2951                           ;!		 -> sprintf@ap(BANK2[1]), 
  2952                           ;!
  2953                           ;!    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
  2954                           ;!		 -> vfprintf@cfmt(BANK2[2]), 
  2955                           ;!
  2956                           ;!    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
  2957                           ;!		 -> sprintf@f(BANK2[5]), 
  2958                           ;!
  2959                           ;!    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
  2960                           ;!		 -> dbuf(BANK5[80]), 
  2961                           ;!
  2962                           ;!    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
  2963                           ;!		 -> sprintf@f(BANK2[5]), 
  2964                           ;!
  2965                           ;!    pad@buf	PTR unsigned char  size(1) Largest target is 80
  2966                           ;!		 -> dbuf(BANK5[80]), 
  2967                           ;!
  2968                           ;!    OLED_print_xy@s	PTR unsigned char  size(2) Largest target is 61
  2969                           ;!		 -> STR_3(CODE[49]), showMenu@s(BANK3[61]), STR_1(CODE[49]), 
  2970                           ;!
  2971                           ;!    sp__strncpy	PTR unsigned char  size(1) Largest target is 15
  2972                           ;!		 -> g_dataPacket(BANK4[15]), 
  2973                           ;!
  2974                           ;!    menuInput@menu	PTR unsigned char  size(1) Largest target is 1
  2975                           ;!		 -> showMenu@menu(BANK3[1]), 
  2976                           ;!
  2977                           ;!    menuInput@page	PTR unsigned char  size(1) Largest target is 1
  2978                           ;!		 -> showMenu@page(BANK3[1]), 
  2979                           ;!
  2980                           
  2981                           
  2982                           ;!
  2983                           ;!Critical Paths under _main in COMMON
  2984                           ;!
  2985                           ;!    None.
  2986                           ;!
  2987                           ;!Critical Paths under _ISR in COMMON
  2988                           ;!
  2989                           ;!    _ISR->_rotISR
  2990                           ;!    _uartReceiveISR->_strncpy
  2991                           ;!
  2992                           ;!Critical Paths under _main in BANK0
  2993                           ;!
  2994                           ;!    _vfpfcnvrt->_efgtoa
  2995                           ;!    _efgtoa->_floorf
  2996                           ;!    _tolower->_isupper
  2997                           ;!    _pad->_fputs
  2998                           ;!    _fputs->_fputc
  2999                           ;!    _floorf->___fldiv
  3000                           ;!    ___flsub->___flmul
  3001                           ;!    ___flge->___flmul
  3002                           ;!    _atoi->___wmul
  3003                           ;!    _atoi->_isdigit
  3004                           ;!    _OLED_scrollDisplayRight->_OLED_command
  3005                           ;!    _OLED_scrollDisplayLeft->_OLED_command
  3006                           ;!    _OLED_returnHome->_OLED_command
  3007                           ;!    _OLED_print_xy->_OLED_command
  3008                           ;!    _OLED_print_xy->_OLED_write
  3009                           ;!    _OLED_write->_OLED_send
  3010                           ;!    _readAnalogValues->___fldiv
  3011                           ;!    ___flmul->___xxtofl
  3012                           ;!    ___fldiv->___flmul
  3013                           ;!    _handleSensorData->___xxtofl
  3014                           ;!    _OLED_init->_OLED_command
  3015                           ;!    _OLED_command->_OLED_send
  3016                           ;!    _OLED_send->_OLED_write4bits
  3017                           ;!
  3018                           ;!Critical Paths under _ISR in BANK0
  3019                           ;!
  3020                           ;!    None.
  3021                           ;!
  3022                           ;!Critical Paths under _main in BANK1
  3023                           ;!
  3024                           ;!    _vfprintf->_vfpfcnvrt
  3025                           ;!    _vfpfcnvrt->_efgtoa
  3026                           ;!    _efgtoa->_floorf
  3027                           ;!
  3028                           ;!Critical Paths under _ISR in BANK1
  3029                           ;!
  3030                           ;!    None.
  3031                           ;!
  3032                           ;!Critical Paths under _main in BANK2
  3033                           ;!
  3034                           ;!    _main->_showMenu
  3035                           ;!    _showMenu->_sprintf
  3036                           ;!    _sprintf->_vfprintf
  3037                           ;!    _vfprintf->_vfpfcnvrt
  3038                           ;!
  3039                           ;!Critical Paths under _ISR in BANK2
  3040                           ;!
  3041                           ;!    None.
  3042                           ;!
  3043                           ;!Critical Paths under _main in BANK3
  3044                           ;!
  3045                           ;!    _main->_showMenu
  3046                           ;!
  3047                           ;!Critical Paths under _ISR in BANK3
  3048                           ;!
  3049                           ;!    None.
  3050                           ;!
  3051                           ;!Critical Paths under _main in BANK4
  3052                           ;!
  3053                           ;!    None.
  3054                           ;!
  3055                           ;!Critical Paths under _ISR in BANK4
  3056                           ;!
  3057                           ;!    None.
  3058                           ;!
  3059                           ;!Critical Paths under _main in BANK5
  3060                           ;!
  3061                           ;!    None.
  3062                           ;!
  3063                           ;!Critical Paths under _ISR in BANK5
  3064                           ;!
  3065                           ;!    None.
  3066                           ;!
  3067                           ;!Critical Paths under _main in BANK6
  3068                           ;!
  3069                           ;!    None.
  3070                           ;!
  3071                           ;!Critical Paths under _ISR in BANK6
  3072                           ;!
  3073                           ;!    None.
  3074                           ;!
  3075                           ;!Critical Paths under _main in BANK7
  3076                           ;!
  3077                           ;!    None.
  3078                           ;!
  3079                           ;!Critical Paths under _ISR in BANK7
  3080                           ;!
  3081                           ;!    None.
  3082                           ;!
  3083                           ;!Critical Paths under _main in BANK8
  3084                           ;!
  3085                           ;!    None.
  3086                           ;!
  3087                           ;!Critical Paths under _ISR in BANK8
  3088                           ;!
  3089                           ;!    None.
  3090                           ;!
  3091                           ;!Critical Paths under _main in BANK9
  3092                           ;!
  3093                           ;!    None.
  3094                           ;!
  3095                           ;!Critical Paths under _ISR in BANK9
  3096                           ;!
  3097                           ;!    None.
  3098                           ;!
  3099                           ;!Critical Paths under _main in BANK10
  3100                           ;!
  3101                           ;!    None.
  3102                           ;!
  3103                           ;!Critical Paths under _ISR in BANK10
  3104                           ;!
  3105                           ;!    None.
  3106                           ;!
  3107                           ;!Critical Paths under _main in BANK11
  3108                           ;!
  3109                           ;!    None.
  3110                           ;!
  3111                           ;!Critical Paths under _ISR in BANK11
  3112                           ;!
  3113                           ;!    None.
  3114                           ;!
  3115                           ;!Critical Paths under _main in BANK12
  3116                           ;!
  3117                           ;!    None.
  3118                           ;!
  3119                           ;!Critical Paths under _ISR in BANK12
  3120                           ;!
  3121                           ;!    None.
  3122                           ;!
  3123                           ;!Critical Paths under _main in BANK13
  3124                           ;!
  3125                           ;!    None.
  3126                           ;!
  3127                           ;!Critical Paths under _ISR in BANK13
  3128                           ;!
  3129                           ;!    None.
  3130                           ;!
  3131                           ;!Critical Paths under _main in BANK14
  3132                           ;!
  3133                           ;!    None.
  3134                           ;!
  3135                           ;!Critical Paths under _ISR in BANK14
  3136                           ;!
  3137                           ;!    None.
  3138                           ;!
  3139                           ;!Critical Paths under _main in BANK15
  3140                           ;!
  3141                           ;!    None.
  3142                           ;!
  3143                           ;!Critical Paths under _ISR in BANK15
  3144                           ;!
  3145                           ;!    None.
  3146                           ;!
  3147                           ;!Critical Paths under _main in BANK16
  3148                           ;!
  3149                           ;!    None.
  3150                           ;!
  3151                           ;!Critical Paths under _ISR in BANK16
  3152                           ;!
  3153                           ;!    None.
  3154                           ;!
  3155                           ;!Critical Paths under _main in BANK17
  3156                           ;!
  3157                           ;!    None.
  3158                           ;!
  3159                           ;!Critical Paths under _ISR in BANK17
  3160                           ;!
  3161                           ;!    None.
  3162                           ;!
  3163                           ;!Critical Paths under _main in BANK18
  3164                           ;!
  3165                           ;!    None.
  3166                           ;!
  3167                           ;!Critical Paths under _ISR in BANK18
  3168                           ;!
  3169                           ;!    None.
  3170                           ;!
  3171                           ;!Critical Paths under _main in BANK19
  3172                           ;!
  3173                           ;!    None.
  3174                           ;!
  3175                           ;!Critical Paths under _ISR in BANK19
  3176                           ;!
  3177                           ;!    None.
  3178                           ;!
  3179                           ;!Critical Paths under _main in BANK20
  3180                           ;!
  3181                           ;!    None.
  3182                           ;!
  3183                           ;!Critical Paths under _ISR in BANK20
  3184                           ;!
  3185                           ;!    None.
  3186                           ;!
  3187                           ;!Critical Paths under _main in BANK21
  3188                           ;!
  3189                           ;!    None.
  3190                           ;!
  3191                           ;!Critical Paths under _ISR in BANK21
  3192                           ;!
  3193                           ;!    None.
  3194                           ;!
  3195                           ;!Critical Paths under _main in BANK22
  3196                           ;!
  3197                           ;!    None.
  3198                           ;!
  3199                           ;!Critical Paths under _ISR in BANK22
  3200                           ;!
  3201                           ;!    None.
  3202                           ;!
  3203                           ;!Critical Paths under _main in BANK23
  3204                           ;!
  3205                           ;!    None.
  3206                           ;!
  3207                           ;!Critical Paths under _ISR in BANK23
  3208                           ;!
  3209                           ;!    None.
  3210                           ;!
  3211                           ;!Critical Paths under _main in BANK24
  3212                           ;!
  3213                           ;!    None.
  3214                           ;!
  3215                           ;!Critical Paths under _ISR in BANK24
  3216                           ;!
  3217                           ;!    None.
  3218                           ;!
  3219                           ;!Critical Paths under _main in BANK25
  3220                           ;!
  3221                           ;!    None.
  3222                           ;!
  3223                           ;!Critical Paths under _ISR in BANK25
  3224                           ;!
  3225                           ;!    None.
  3226                           
  3227 ;;
  3228 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3229 ;;
  3230                           
  3231                           ;!
  3232                           ;!Call Graph Tables:
  3233                           ;!
  3234                           ;! ---------------------------------------------------------------------------------
  3235                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3236                           ;! ---------------------------------------------------------------------------------
  3237                           ;! (0) _main                                                33    33      0   40020
  3238                           ;!                                             57 BANK2      1     1      0
  3239                           ;!                       _OLED_command
  3240                           ;!                          _OLED_init
  3241                           ;!                    _OLED_returnHome
  3242                           ;!                   _handleSensorData
  3243                           ;!                         _initialize
  3244                           ;!                   _readAnalogValues
  3245                           ;!                           _showMenu
  3246                           ;!                       _uartSendByte
  3247                           ;! ---------------------------------------------------------------------------------
  3248                           ;! (1) _uartSendByte                                         1     1      0      22
  3249                           ;!                                              0 BANK0      1     1      0
  3250                           ;! ---------------------------------------------------------------------------------
  3251                           ;! (1) _showMenu                                            64    64      0   31867
  3252                           ;!                                             55 BANK2      2     2      0
  3253                           ;!                                              0 BANK3     62    62      0
  3254                           ;!                      _OLED_print_xy
  3255                           ;!                              _getPB
  3256                           ;!                          _menuInput
  3257                           ;!                            _sprintf
  3258                           ;! ---------------------------------------------------------------------------------
  3259                           ;! (2) _sprintf                                             32    10     22   28168
  3260                           ;!                                             23 BANK2     32    10     22
  3261                           ;!                           _vfprintf
  3262                           ;! ---------------------------------------------------------------------------------
  3263                           ;! (3) _vfprintf                                             8     5      3   27852
  3264                           ;!                                             15 BANK2      8     5      3
  3265                           ;!                          _vfpfcnvrt
  3266                           ;! ---------------------------------------------------------------------------------
  3267                           ;! (4) _vfpfcnvrt                                           39    37      2   27515
  3268                           ;!                                             72 BANK1      8     6      2
  3269                           ;!                                              0 BANK2     15    15      0
  3270                           ;!                               _atoi
  3271                           ;!                             _efgtoa
  3272                           ;!                              _fputc
  3273                           ;!                            _isdigit
  3274                           ;!                            _isupper
  3275                           ;!                            _strncmp
  3276                           ;!                            _tolower
  3277                           ;! ---------------------------------------------------------------------------------
  3278                           ;! (5) _strncmp                                             10     6      4     410
  3279                           ;!                                              0 BANK0     10     6      4
  3280                           ;! ---------------------------------------------------------------------------------
  3281                           ;! (5) _efgtoa                                              66    61      5   21963
  3282                           ;!                                             76 BANK0      4     4      0
  3283                           ;!                                             10 BANK1     62    57      5
  3284                           ;!                            ___awdiv
  3285                           ;!                            ___awmod
  3286                           ;!                            ___fladd
  3287                           ;!                            ___fldiv
  3288                           ;!                             ___fleq
  3289                           ;!                             ___flge
  3290                           ;!                            ___flmul
  3291                           ;!                            ___flneg
  3292                           ;!                            ___flsub
  3293                           ;!                            ___fltol
  3294                           ;!                      ___fpclassifyf
  3295                           ;!                             _floorf
  3296                           ;!                            _isupper
  3297                           ;!                                _pad
  3298                           ;!                             _strcpy
  3299                           ;!                            _tolower
  3300                           ;! ---------------------------------------------------------------------------------
  3301                           ;! (5) _tolower                                              8     6      2     944
  3302                           ;!                                              6 BANK0      8     6      2
  3303                           ;!                            _isupper
  3304                           ;! ---------------------------------------------------------------------------------
  3305                           ;! (6) _isupper                                              6     4      2     465
  3306                           ;!                                              0 BANK0      6     4      2
  3307                           ;! ---------------------------------------------------------------------------------
  3308                           ;! (6) _strcpy                                               8     6      2     641
  3309                           ;!                                              0 BANK0      8     6      2
  3310                           ;! ---------------------------------------------------------------------------------
  3311                           ;! (6) _pad                                                  9     6      3    2907
  3312                           ;!                                             16 BANK0      9     6      3
  3313                           ;!                              _fputc
  3314                           ;!                              _fputs
  3315                           ;!                             _strlen
  3316                           ;! ---------------------------------------------------------------------------------
  3317                           ;! (7) _strlen                                               8     6      2     123
  3318                           ;!                                              0 BANK0      8     6      2
  3319                           ;! ---------------------------------------------------------------------------------
  3320                           ;! (7) _fputs                                                8     7      1    1149
  3321                           ;!                                              8 BANK0      8     7      1
  3322                           ;!                              _fputc
  3323                           ;! ---------------------------------------------------------------------------------
  3324                           ;! (5) _fputc                                                8     5      3     834
  3325                           ;!                                              0 BANK0      8     5      3
  3326                           ;!                              _putch
  3327                           ;! ---------------------------------------------------------------------------------
  3328                           ;! (6) _putch                                                1     1      0       0
  3329                           ;! ---------------------------------------------------------------------------------
  3330                           ;! (6) _floorf                                              20    16      4     490
  3331                           ;!                                             66 BANK0     10     6      4
  3332                           ;!                                              0 BANK1     10    10      0
  3333                           ;!                            ___fldiv (ARG)
  3334                           ;! ---------------------------------------------------------------------------------
  3335                           ;! (6) ___fpclassifyf                                       16    12      4     287
  3336                           ;!                                              0 BANK0     16    12      4
  3337                           ;! ---------------------------------------------------------------------------------
  3338                           ;! (6) ___fltol                                             11     7      4     381
  3339                           ;!                                              0 BANK0     11     7      4
  3340                           ;! ---------------------------------------------------------------------------------
  3341                           ;! (6) ___flsub                                              8     0      8    2637
  3342                           ;!                                             40 BANK0      8     0      8
  3343                           ;!                            ___fladd
  3344                           ;!                            ___flmul (ARG)
  3345                           ;! ---------------------------------------------------------------------------------
  3346                           ;! (7) ___fladd                                             24    16      8    2288
  3347                           ;!                                              0 BANK0     24    16      8
  3348                           ;! ---------------------------------------------------------------------------------
  3349                           ;! (6) ___flneg                                              4     0      4     121
  3350                           ;!                                              0 BANK0      4     0      4
  3351                           ;! ---------------------------------------------------------------------------------
  3352                           ;! (6) ___flge                                              16     8      8     790
  3353                           ;!                                             40 BANK0     16     8      8
  3354                           ;!                            ___flmul (ARG)
  3355                           ;! ---------------------------------------------------------------------------------
  3356                           ;! (6) ___fleq                                              12     4      8     394
  3357                           ;!                                              0 BANK0     12     4      8
  3358                           ;! ---------------------------------------------------------------------------------
  3359                           ;! (6) ___awmod                                              7     3      4     448
  3360                           ;!                                              0 BANK0      7     3      4
  3361                           ;! ---------------------------------------------------------------------------------
  3362                           ;! (6) ___awdiv                                              9     5      4     452
  3363                           ;!                                              0 BANK0      9     5      4
  3364                           ;! ---------------------------------------------------------------------------------
  3365                           ;! (5) _atoi                                                15    13      2    1237
  3366                           ;!                                              6 BANK0     15    13      2
  3367                           ;!                             ___wmul
  3368                           ;!                            _isdigit
  3369                           ;!                            _isspace
  3370                           ;! ---------------------------------------------------------------------------------
  3371                           ;! (6) _isspace                                              5     3      2     207
  3372                           ;!                                              0 BANK0      5     3      2
  3373                           ;! ---------------------------------------------------------------------------------
  3374                           ;! (5) _isdigit                                              6     4      2     313
  3375                           ;!                                              0 BANK0      6     4      2
  3376                           ;! ---------------------------------------------------------------------------------
  3377                           ;! (6) ___wmul                                               6     2      4     244
  3378                           ;!                                              0 BANK0      6     2      4
  3379                           ;! ---------------------------------------------------------------------------------
  3380                           ;! (2) _menuInput                                           11     6      5    2352
  3381                           ;!                                              7 BANK0     11     6      5
  3382                           ;!                    _OLED_returnHome
  3383                           ;!             _OLED_scrollDisplayLeft
  3384                           ;!            _OLED_scrollDisplayRight
  3385                           ;!                              _getPB
  3386                           ;!                          _getRotDir
  3387                           ;! ---------------------------------------------------------------------------------
  3388                           ;! (3) _getRotDir                                            2     2      0      23
  3389                           ;!                                              0 BANK0      2     2      0
  3390                           ;! ---------------------------------------------------------------------------------
  3391                           ;! (3) _getPB                                                2     2      0      23
  3392                           ;!                                              0 BANK0      2     2      0
  3393                           ;! ---------------------------------------------------------------------------------
  3394                           ;! (3) _OLED_scrollDisplayRight                              0     0      0     352
  3395                           ;!                       _OLED_command
  3396                           ;! ---------------------------------------------------------------------------------
  3397                           ;! (3) _OLED_scrollDisplayLeft                               0     0      0     352
  3398                           ;!                       _OLED_command
  3399                           ;! ---------------------------------------------------------------------------------
  3400                           ;! (3) _OLED_returnHome                                      0     0      0     352
  3401                           ;!                       _OLED_command
  3402                           ;! ---------------------------------------------------------------------------------
  3403                           ;! (2) _OLED_print_xy                                        9     6      3    1273
  3404                           ;!                                              7 BANK0      9     6      3
  3405                           ;!                       _OLED_command
  3406                           ;!                         _OLED_write
  3407                           ;! ---------------------------------------------------------------------------------
  3408                           ;! (3) _OLED_write                                           1     1      0     352
  3409                           ;!                                              6 BANK0      1     1      0
  3410                           ;!                          _OLED_send
  3411                           ;!                  _OLED_waitForReady
  3412                           ;! ---------------------------------------------------------------------------------
  3413                           ;! (1) _readAnalogValues                                     6     6      0    6437
  3414                           ;!                                             66 BANK0      6     6      0
  3415                           ;!                            ___fldiv
  3416                           ;!                            ___flmul
  3417                           ;!                           ___xxtofl
  3418                           ;! ---------------------------------------------------------------------------------
  3419                           ;! (6) ___flmul                                             26    18      8    3633
  3420                           ;!                                             14 BANK0     26    18      8
  3421                           ;!                          __Umul8_16
  3422                           ;!                           ___xxtofl (ARG)
  3423                           ;! ---------------------------------------------------------------------------------
  3424                           ;! (7) __Umul8_16                                            9     7      2     799
  3425                           ;!                                              0 BANK0      9     7      2
  3426                           ;! ---------------------------------------------------------------------------------
  3427                           ;! (6) ___fldiv                                             26    18      8    2185
  3428                           ;!                                             40 BANK0     26    18      8
  3429                           ;!                            ___flmul (ARG)
  3430                           ;!                           ___xxtofl (ARG)
  3431                           ;! ---------------------------------------------------------------------------------
  3432                           ;! (1) _initialize                                           0     0      0       0
  3433                           ;! ---------------------------------------------------------------------------------
  3434                           ;! (1) _handleSensorData                                     4     4      0     550
  3435                           ;!                                             14 BANK0      4     4      0
  3436                           ;!                           ___xxtofl
  3437                           ;! ---------------------------------------------------------------------------------
  3438                           ;! (2) ___xxtofl                                            14    10      4     550
  3439                           ;!                                              0 BANK0     14    10      4
  3440                           ;! ---------------------------------------------------------------------------------
  3441                           ;! (1) _OLED_init                                            1     1      0     440
  3442                           ;!                                              7 BANK0      1     1      0
  3443                           ;!                       _OLED_command
  3444                           ;!                    _OLED_write4bits
  3445                           ;! ---------------------------------------------------------------------------------
  3446                           ;! (4) _OLED_command                                         1     1      0     352
  3447                           ;!                                              6 BANK0      1     1      0
  3448                           ;!                          _OLED_send
  3449                           ;!                  _OLED_waitForReady
  3450                           ;! ---------------------------------------------------------------------------------
  3451                           ;! (5) _OLED_waitForReady                                    1     1      0      24
  3452                           ;!                                              0 BANK0      1     1      0
  3453                           ;!                   _OLED_pulseEnable
  3454                           ;! ---------------------------------------------------------------------------------
  3455                           ;! (5) _OLED_send                                            3     2      1     306
  3456                           ;!                                              3 BANK0      3     2      1
  3457                           ;!                    _OLED_write4bits
  3458                           ;! ---------------------------------------------------------------------------------
  3459                           ;! (6) _OLED_write4bits                                      3     3      0      88
  3460                           ;!                                              0 BANK0      3     3      0
  3461                           ;!                   _OLED_pulseEnable
  3462                           ;! ---------------------------------------------------------------------------------
  3463                           ;! (6) _OLED_pulseEnable                                     0     0      0       0
  3464                           ;! ---------------------------------------------------------------------------------
  3465                           ;! Estimated maximum stack depth 7
  3466                           ;! ---------------------------------------------------------------------------------
  3467                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3468                           ;! ---------------------------------------------------------------------------------
  3469                           ;! (10) _ISR                                                 1     1      0     349
  3470                           ;!                                              8 COMMON     1     1      0
  3471                           ;!                      _pushButtonISR
  3472                           ;!                             _rotISR
  3473                           ;!                     _uartReceiveISR
  3474                           ;! ---------------------------------------------------------------------------------
  3475                           ;! (11) _uartReceiveISR                                      1     1      0     326
  3476                           ;!                                              6 COMMON     1     1      0
  3477                           ;!                            _strncpy
  3478                           ;! ---------------------------------------------------------------------------------
  3479                           ;! (12) _strncpy                                             6     3      3     326
  3480                           ;!                                              0 COMMON     6     3      3
  3481                           ;! ---------------------------------------------------------------------------------
  3482                           ;! (11) _rotISR                                              8     8      0      23
  3483                           ;!                                              0 COMMON     8     8      0
  3484                           ;! ---------------------------------------------------------------------------------
  3485                           ;! (11) _pushButtonISR                                       1     1      0       0
  3486                           ;!                                              0 COMMON     1     1      0
  3487                           ;! ---------------------------------------------------------------------------------
  3488                           ;! Estimated maximum stack depth 12
  3489                           ;! ---------------------------------------------------------------------------------
  3490                           ;!
  3491                           ;! Call Graph Graphs:
  3492                           ;!
  3493                           ;! _main (ROOT)
  3494                           ;!   _OLED_command
  3495                           ;!     _OLED_send
  3496                           ;!       _OLED_write4bits
  3497                           ;!         _OLED_pulseEnable
  3498                           ;!     _OLED_waitForReady
  3499                           ;!       _OLED_pulseEnable
  3500                           ;!   _OLED_init
  3501                           ;!     _OLED_command
  3502                           ;!       _OLED_send
  3503                           ;!         _OLED_write4bits
  3504                           ;!           _OLED_pulseEnable
  3505                           ;!       _OLED_waitForReady
  3506                           ;!         _OLED_pulseEnable
  3507                           ;!     _OLED_write4bits
  3508                           ;!       _OLED_pulseEnable
  3509                           ;!   _OLED_returnHome
  3510                           ;!     _OLED_command
  3511                           ;!       _OLED_send
  3512                           ;!         _OLED_write4bits
  3513                           ;!           _OLED_pulseEnable
  3514                           ;!       _OLED_waitForReady
  3515                           ;!         _OLED_pulseEnable
  3516                           ;!   _handleSensorData
  3517                           ;!     ___xxtofl
  3518                           ;!   _initialize
  3519                           ;!   _readAnalogValues
  3520                           ;!     ___fldiv
  3521                           ;!       ___flmul (ARG)
  3522                           ;!         __Umul8_16
  3523                           ;!         ___xxtofl (ARG)
  3524                           ;!       ___xxtofl (ARG)
  3525                           ;!     ___flmul
  3526                           ;!       __Umul8_16
  3527                           ;!       ___xxtofl (ARG)
  3528                           ;!     ___xxtofl
  3529                           ;!   _showMenu
  3530                           ;!     _OLED_print_xy
  3531                           ;!       _OLED_command
  3532                           ;!         _OLED_send
  3533                           ;!           _OLED_write4bits
  3534                           ;!             _OLED_pulseEnable
  3535                           ;!         _OLED_waitForReady
  3536                           ;!           _OLED_pulseEnable
  3537                           ;!       _OLED_write
  3538                           ;!         _OLED_send
  3539                           ;!           _OLED_write4bits
  3540                           ;!             _OLED_pulseEnable
  3541                           ;!         _OLED_waitForReady
  3542                           ;!           _OLED_pulseEnable
  3543                           ;!     _getPB
  3544                           ;!     _menuInput
  3545                           ;!       _OLED_returnHome
  3546                           ;!         _OLED_command
  3547                           ;!           _OLED_send
  3548                           ;!             _OLED_write4bits
  3549                           ;!               _OLED_pulseEnable
  3550                           ;!           _OLED_waitForReady
  3551                           ;!             _OLED_pulseEnable
  3552                           ;!       _OLED_scrollDisplayLeft
  3553                           ;!         _OLED_command
  3554                           ;!           _OLED_send
  3555                           ;!             _OLED_write4bits
  3556                           ;!               _OLED_pulseEnable
  3557                           ;!           _OLED_waitForReady
  3558                           ;!             _OLED_pulseEnable
  3559                           ;!       _OLED_scrollDisplayRight
  3560                           ;!         _OLED_command
  3561                           ;!           _OLED_send
  3562                           ;!             _OLED_write4bits
  3563                           ;!               _OLED_pulseEnable
  3564                           ;!           _OLED_waitForReady
  3565                           ;!             _OLED_pulseEnable
  3566                           ;!       _getPB
  3567                           ;!       _getRotDir
  3568                           ;!     _sprintf
  3569                           ;!       _vfprintf
  3570                           ;!         _vfpfcnvrt
  3571                           ;!           _atoi
  3572                           ;!             ___wmul
  3573                           ;!             _isdigit
  3574                           ;!             _isspace
  3575                           ;!           _efgtoa
  3576                           ;!             ___awdiv
  3577                           ;!             ___awmod
  3578                           ;!             ___fladd
  3579                           ;!             ___fldiv
  3580                           ;!               ___flmul (ARG)
  3581                           ;!                 __Umul8_16
  3582                           ;!                 ___xxtofl (ARG)
  3583                           ;!               ___xxtofl (ARG)
  3584                           ;!             ___fleq
  3585                           ;!             ___flge
  3586                           ;!               ___flmul (ARG)
  3587                           ;!                 __Umul8_16
  3588                           ;!                 ___xxtofl (ARG)
  3589                           ;!             ___flmul
  3590                           ;!               __Umul8_16
  3591                           ;!               ___xxtofl (ARG)
  3592                           ;!             ___flneg
  3593                           ;!             ___flsub
  3594                           ;!               ___fladd
  3595                           ;!               ___flmul (ARG)
  3596                           ;!                 __Umul8_16
  3597                           ;!                 ___xxtofl (ARG)
  3598                           ;!             ___fltol
  3599                           ;!             ___fpclassifyf
  3600                           ;!             _floorf
  3601                           ;!               ___fldiv (ARG)
  3602                           ;!                 ___flmul (ARG)
  3603                           ;!                   __Umul8_16
  3604                           ;!                   ___xxtofl (ARG)
  3605                           ;!                 ___xxtofl (ARG)
  3606                           ;!             _isupper
  3607                           ;!             _pad
  3608                           ;!               _fputc
  3609                           ;!                 _putch
  3610                           ;!               _fputs
  3611                           ;!                 _fputc
  3612                           ;!                   _putch
  3613                           ;!               _strlen
  3614                           ;!             _strcpy
  3615                           ;!             _tolower
  3616                           ;!               _isupper
  3617                           ;!           _fputc
  3618                           ;!             _putch
  3619                           ;!           _isdigit
  3620                           ;!           _isupper
  3621                           ;!           _strncmp
  3622                           ;!           _tolower
  3623                           ;!             _isupper
  3624                           ;!   _uartSendByte
  3625                           ;!
  3626                           ;! _ISR (ROOT)
  3627                           ;!   _pushButtonISR
  3628                           ;!   _rotISR
  3629                           ;!   _uartReceiveISR
  3630                           ;!     _strncpy
  3631                           ;!
  3632                           
  3633                           ;! Address spaces:
  3634                           
  3635                           ;!Name               Size   Autos  Total    Cost      Usage
  3636                           ;!BIGRAM             7F0      0       0       0        0.0%
  3637                           ;!NULL                 0      0       0       0        0.0%
  3638                           ;!CODE                 0      0       0       0        0.0%
  3639                           ;!BITCOMMON            E      0       0       1        0.0%
  3640                           ;!BITSFR0              0      0       0       1        0.0%
  3641                           ;!SFR0                 0      0       0       1        0.0%
  3642                           ;!COMMON               E      9       E       2      100.0%
  3643                           ;!BITSFR1              0      0       0       2        0.0%
  3644                           ;!SFR1                 0      0       0       2        0.0%
  3645                           ;!BITSFR2              0      0       0       3        0.0%
  3646                           ;!SFR2                 0      0       0       3        0.0%
  3647                           ;!STACK                0      0       0       3        0.0%
  3648                           ;!BITBANK0            50      0       0       4        0.0%
  3649                           ;!BITSFR3              0      0       0       4        0.0%
  3650                           ;!SFR3                 0      0       0       4        0.0%
  3651                           ;!BANK0               50     50      50       5      100.0%
  3652                           ;!BITSFR4              0      0       0       5        0.0%
  3653                           ;!SFR4                 0      0       0       5        0.0%
  3654                           ;!BITBANK1            50      0       0       6        0.0%
  3655                           ;!BITSFR5              0      0       0       6        0.0%
  3656                           ;!SFR5                 0      0       0       6        0.0%
  3657                           ;!BANK1               50     50      50       7      100.0%
  3658                           ;!BITSFR6              0      0       0       7        0.0%
  3659                           ;!SFR6                 0      0       0       7        0.0%
  3660                           ;!BITSFR7              0      0       0       8        0.0%
  3661                           ;!SFR7                 0      0       0       8        0.0%
  3662                           ;!ABS                  0      0     1D5       8        0.0%
  3663                           ;!BITBANK2            50      0       0       9        0.0%
  3664                           ;!BITSFR8              0      0       0       9        0.0%
  3665                           ;!SFR8                 0      0       0       9        0.0%
  3666                           ;!BANK2               50     3A      4E      10       97.5%
  3667                           ;!BITSFR9              0      0       0      10        0.0%
  3668                           ;!SFR9                 0      0       0      10        0.0%
  3669                           ;!BITBANK3            50      0       0      11        0.0%
  3670                           ;!BITSFR10             0      0       0      11        0.0%
  3671                           ;!SFR10                0      0       0      11        0.0%
  3672                           ;!BANK3               50     3E      4E      12       97.5%
  3673                           ;!BITSFR11             0      0       0      12        0.0%
  3674                           ;!SFR11                0      0       0      12        0.0%
  3675                           ;!BITBANK4            50      0       0      13        0.0%
  3676                           ;!BITSFR12             0      0       0      13        0.0%
  3677                           ;!SFR12                0      0       0      13        0.0%
  3678                           ;!BANK4               50      0      3B      14       73.8%
  3679                           ;!BITSFR13             0      0       0      14        0.0%
  3680                           ;!SFR13                0      0       0      14        0.0%
  3681                           ;!BITBANK5            50      0       0      15        0.0%
  3682                           ;!BITSFR14             0      0       0      15        0.0%
  3683                           ;!SFR14                0      0       0      15        0.0%
  3684                           ;!BANK5               50      0      50      16      100.0%
  3685                           ;!BITSFR15             0      0       0      16        0.0%
  3686                           ;!SFR15                0      0       0      16        0.0%
  3687                           ;!BITBANK6            50      0       0      17        0.0%
  3688                           ;!BITSFR16             0      0       0      17        0.0%
  3689                           ;!SFR16                0      0       0      17        0.0%
  3690                           ;!BANK6               50      0       0      18        0.0%
  3691                           ;!BITSFR17             0      0       0      18        0.0%
  3692                           ;!SFR17                0      0       0      18        0.0%
  3693                           ;!BITBANK7            50      0       0      19        0.0%
  3694                           ;!BITSFR18             0      0       0      19        0.0%
  3695                           ;!SFR18                0      0       0      19        0.0%
  3696                           ;!BANK7               50      0       0      20        0.0%
  3697                           ;!BITSFR19             0      0       0      20        0.0%
  3698                           ;!SFR19                0      0       0      20        0.0%
  3699                           ;!BITBANK8            50      0       0      21        0.0%
  3700                           ;!BITSFR20             0      0       0      21        0.0%
  3701                           ;!SFR20                0      0       0      21        0.0%
  3702                           ;!BANK8               50      0       0      22        0.0%
  3703                           ;!BITSFR21             0      0       0      22        0.0%
  3704                           ;!SFR21                0      0       0      22        0.0%
  3705                           ;!BITBANK9            50      0       0      23        0.0%
  3706                           ;!BITSFR22             0      0       0      23        0.0%
  3707                           ;!SFR22                0      0       0      23        0.0%
  3708                           ;!BANK9               50      0       0      24        0.0%
  3709                           ;!BITSFR23             0      0       0      24        0.0%
  3710                           ;!SFR23                0      0       0      24        0.0%
  3711                           ;!BITBANK10           50      0       0      25        0.0%
  3712                           ;!BITSFR24             0      0       0      25        0.0%
  3713                           ;!SFR24                0      0       0      25        0.0%
  3714                           ;!BANK10              50      0       0      26        0.0%
  3715                           ;!BITSFR25             0      0       0      26        0.0%
  3716                           ;!SFR25                0      0       0      26        0.0%
  3717                           ;!BITBANK11           50      0       0      27        0.0%
  3718                           ;!BITSFR26             0      0       0      27        0.0%
  3719                           ;!SFR26                0      0       0      27        0.0%
  3720                           ;!BANK11              50      0       0      28        0.0%
  3721                           ;!BITSFR27             0      0       0      28        0.0%
  3722                           ;!SFR27                0      0       0      28        0.0%
  3723                           ;!BITBANK12           50      0       0      29        0.0%
  3724                           ;!BITSFR28             0      0       0      29        0.0%
  3725                           ;!SFR28                0      0       0      29        0.0%
  3726                           ;!BANK12              50      0       0      30        0.0%
  3727                           ;!BITSFR29             0      0       0      30        0.0%
  3728                           ;!SFR29                0      0       0      30        0.0%
  3729                           ;!BITBANK13           50      0       0      31        0.0%
  3730                           ;!BITSFR30             0      0       0      31        0.0%
  3731                           ;!SFR30                0      0       0      31        0.0%
  3732                           ;!BANK13              50      0       0      32        0.0%
  3733                           ;!BITSFR31             0      0       0      32        0.0%
  3734                           ;!SFR31                0      0       0      32        0.0%
  3735                           ;!BITBANK14           50      0       0      33        0.0%
  3736                           ;!BITSFR32             0      0       0      33        0.0%
  3737                           ;!SFR32                0      0       0      33        0.0%
  3738                           ;!BANK14              50      0       0      34        0.0%
  3739                           ;!BITSFR33             0      0       0      34        0.0%
  3740                           ;!SFR33                0      0       0      34        0.0%
  3741                           ;!BITBANK15           50      0       0      35        0.0%
  3742                           ;!BITSFR34             0      0       0      35        0.0%
  3743                           ;!SFR34                0      0       0      35        0.0%
  3744                           ;!BANK15              50      0       0      36        0.0%
  3745                           ;!BITSFR35             0      0       0      36        0.0%
  3746                           ;!SFR35                0      0       0      36        0.0%
  3747                           ;!BITBANK16           50      0       0      37        0.0%
  3748                           ;!BITSFR36             0      0       0      37        0.0%
  3749                           ;!SFR36                0      0       0      37        0.0%
  3750                           ;!BANK16              50      0       0      38        0.0%
  3751                           ;!BITSFR37             0      0       0      38        0.0%
  3752                           ;!SFR37                0      0       0      38        0.0%
  3753                           ;!BITBANK17           50      0       0      39        0.0%
  3754                           ;!BITSFR38             0      0       0      39        0.0%
  3755                           ;!SFR38                0      0       0      39        0.0%
  3756                           ;!BANK17              50      0       0      40        0.0%
  3757                           ;!BITSFR39             0      0       0      40        0.0%
  3758                           ;!SFR39                0      0       0      40        0.0%
  3759                           ;!BITBANK18           50      0       0      41        0.0%
  3760                           ;!BITSFR40             0      0       0      41        0.0%
  3761                           ;!SFR40                0      0       0      41        0.0%
  3762                           ;!BANK18              50      0       0      42        0.0%
  3763                           ;!BITSFR41             0      0       0      42        0.0%
  3764                           ;!SFR41                0      0       0      42        0.0%
  3765                           ;!BITBANK19           50      0       0      43        0.0%
  3766                           ;!BITSFR42             0      0       0      43        0.0%
  3767                           ;!SFR42                0      0       0      43        0.0%
  3768                           ;!BANK19              50      0       0      44        0.0%
  3769                           ;!BITSFR43             0      0       0      44        0.0%
  3770                           ;!SFR43                0      0       0      44        0.0%
  3771                           ;!BITBANK20           50      0       0      45        0.0%
  3772                           ;!BITSFR44             0      0       0      45        0.0%
  3773                           ;!SFR44                0      0       0      45        0.0%
  3774                           ;!BANK20              50      0       0      46        0.0%
  3775                           ;!BITSFR45             0      0       0      46        0.0%
  3776                           ;!SFR45                0      0       0      46        0.0%
  3777                           ;!BITBANK21           50      0       0      47        0.0%
  3778                           ;!BITSFR46             0      0       0      47        0.0%
  3779                           ;!SFR46                0      0       0      47        0.0%
  3780                           ;!BANK21              50      0       0      48        0.0%
  3781                           ;!BITSFR47             0      0       0      48        0.0%
  3782                           ;!SFR47                0      0       0      48        0.0%
  3783                           ;!BITBANK22           50      0       0      49        0.0%
  3784                           ;!BITSFR48             0      0       0      49        0.0%
  3785                           ;!SFR48                0      0       0      49        0.0%
  3786                           ;!BANK22              50      0       0      50        0.0%
  3787                           ;!BITSFR49             0      0       0      50        0.0%
  3788                           ;!SFR49                0      0       0      50        0.0%
  3789                           ;!BITBANK23           50      0       0      51        0.0%
  3790                           ;!BITSFR50             0      0       0      51        0.0%
  3791                           ;!SFR50                0      0       0      51        0.0%
  3792                           ;!BANK23              50      0       0      52        0.0%
  3793                           ;!BITSFR51             0      0       0      52        0.0%
  3794                           ;!SFR51                0      0       0      52        0.0%
  3795                           ;!BITBANK24           50      0       0      53        0.0%
  3796                           ;!BITSFR52             0      0       0      53        0.0%
  3797                           ;!SFR52                0      0       0      53        0.0%
  3798                           ;!BANK24              50      0       0      54        0.0%
  3799                           ;!BITSFR53             0      0       0      54        0.0%
  3800                           ;!SFR53                0      0       0      54        0.0%
  3801                           ;!BITBANK25           20      0       0      55        0.0%
  3802                           ;!BITSFR54             0      0       0      55        0.0%
  3803                           ;!SFR54                0      0       0      55        0.0%
  3804                           ;!BANK25              20      0       0      56        0.0%
  3805                           ;!BITSFR55             0      0       0      56        0.0%
  3806                           ;!SFR55                0      0       0      56        0.0%
  3807                           ;!BITSFR56             0      0       0      57        0.0%
  3808                           ;!SFR56                0      0       0      57        0.0%
  3809                           ;!DATA                 0      0     1D5      57        0.0%
  3810                           ;!BITSFR57             0      0       0      58        0.0%
  3811                           ;!SFR57                0      0       0      58        0.0%
  3812                           ;!BITSFR58             0      0       0      59        0.0%
  3813                           ;!SFR58                0      0       0      59        0.0%
  3814                           ;!BITSFR59             0      0       0      60        0.0%
  3815                           ;!SFR59                0      0       0      60        0.0%
  3816                           ;!BITSFR60             0      0       0      61        0.0%
  3817                           ;!SFR60                0      0       0      61        0.0%
  3818                           ;!BITSFR61             0      0       0      62        0.0%
  3819                           ;!SFR61                0      0       0      62        0.0%
  3820                           ;!BITSFR62             0      0       0      63        0.0%
  3821                           ;!SFR62                0      0       0      63        0.0%
  3822                           ;!BITSFR63             0      0       0      64        0.0%
  3823                           ;!SFR63                0      0       0      64        0.0%
  3824                           
  3825                           	global	_main
  3826                           
  3827 ;; *************** function _main *****************
  3828 ;; Defined at:
  3829 ;;		line 103 in file "main.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;		None
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;  s2             16    0        unsigned char [16]
  3834 ;;  s1             16    0        unsigned char [16]
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      void 
  3837 ;; Registers used:
  3838 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3839 ;; Tracked objects:
  3840 ;;		On entry : B3F/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3846 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3847 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3848 ;;Total ram usage:        1 bytes
  3849 ;; Hardware stack levels required when called:   12
  3850 ;; This function calls:
  3851 ;;		_OLED_command
  3852 ;;		_OLED_init
  3853 ;;		_OLED_returnHome
  3854 ;;		_handleSensorData
  3855 ;;		_initialize
  3856 ;;		_readAnalogValues
  3857 ;;		_showMenu
  3858 ;;		_uartSendByte
  3859 ;; This function is called by:
  3860 ;;		Startup code after reset
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
  3864                           	file	"main.c"
  3865                           	line	103
  3866                           global __pmaintext
  3867                           __pmaintext:	;psect for function _main
  3868  197A                     psect	maintext
  3869                           	file	"main.c"
  3870                           	line	103
  3871                           	global	__size_of_main
  3872                           	__size_of_main	equ	__end_of_main-_main
  3873  003E                     	
  3874                           _main:	
  3875  197A                     ;incstack = 0
  3876                           	opt	stack 4
  3877                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3878                           	line	107
  3879                           	
  3880                           l4645:	
  3881  197A                     ;main.c: 105:  char s1[16], s2[16];;main.c: 107:  initialize();
  3882                           	fcall	_initialize
  3883  197A  3199  21F8  3199   	line	108
  3884                           	
  3885                           l4647:	
  3886  197D                     ;main.c: 108:  LATBbits.LATB5 = 1;
  3887                           	movlb 0	; select bank0
  3888  197D  0140               	bsf	(25),5	;volatile
  3889  197E  1699               	line	109
  3890                           	
  3891                           l4649:	
  3892  197F                     ;main.c: 109:  LATCbits.LATC3 = 1;
  3893                           	bsf	(26),3	;volatile
  3894  197F  159A               	line	110
  3895                           ;main.c: 110:  OLED_init();
  3896                           	fcall	_OLED_init
  3897  1980  3190  2006  3199   	line	111
  3898                           ;main.c: 111:  OLED_returnHome();
  3899                           	fcall	_OLED_returnHome
  3900  1983  31A6  2631  3199   	line	112
  3901                           ;main.c: 112:  OLED_command(0x01);
  3902                           	movlw	low(01h)
  3903  1986  3001               	fcall	_OLED_command
  3904  1987  31A6  2658  3199   	line	115
  3905                           	
  3906                           l4651:	
  3907  198A                     ;main.c: 115:  LATAbits.LATA0 = 1;
  3908                           	movlb 0	; select bank0
  3909  198A  0140               	bsf	(24),0	;volatile
  3910  198B  1418               	line	117
  3911                           ;main.c: 117:  while (1) {
  3912                           	
  3913                           l177:	
  3914  198C                     	line	118
  3915                           # 118 "main.c"
  3916                           clrwdt ;# 
  3917  198C  0064               psect	maintext
  3918                           	line	119
  3919                           ;main.c: 119:   readAnalogValues();
  3920                           	fcall	_readAnalogValues
  3921  198D  3192  223B  3199   	line	121
  3922                           	
  3923                           l4653:	
  3924  1990                     ;main.c: 121:   if (g_sensorTimer >= 5) {
  3925                           	movlw	low(05h)
  3926  1990  3005               	movlb 3	; select bank3
  3927  1991  0143               	subwf	(_g_sensorTimer)^0180h,w	;volatile
  3928  1992  026B               	skipc
  3929  1993  1C03               	goto	u6531
  3930  1994  2996               	goto	u6530
  3931  1995  2997               u6531:
  3932  1996                     	goto	l4659
  3933  1996  299D               u6530:
  3934  1997                     	line	122
  3935                           	
  3936                           l4655:	
  3937  1997                     ;main.c: 122:    g_sensorTimer = 0;
  3938                           	clrf	(_g_sensorTimer)^0180h	;volatile
  3939  1997  01EB               	line	123
  3940                           	
  3941                           l4657:	
  3942  1998                     ;main.c: 123:    uartSendByte('?');
  3943                           	movlw	low(03Fh)
  3944  1998  303F               	fcall	_uartSendByte
  3945  1999  3188  2002  3199   	goto	l4659
  3946  199C  299D               	line	124
  3947                           ;main.c: 124:   }
  3948                           	
  3949                           l178:	
  3950  199D                     	line	126
  3951                           	
  3952                           l4659:	
  3953  199D                     ;main.c: 126:   if (g_dataReady == 1) {
  3954                           	movlb 3	; select bank3
  3955  199D  0143               		decf	((_g_dataReady)^0180h),w	;volatile
  3956  199E  036A               	btfss	status,2
  3957  199F  1D03               	goto	u6541
  3958  19A0  29A2               	goto	u6540
  3959  19A1  29A3               u6541:
  3960  19A2                     	goto	l4665
  3961  19A2  29A8               u6540:
  3962  19A3                     	line	127
  3963                           	
  3964                           l4661:	
  3965  19A3                     ;main.c: 127:    g_dataReady = 0;
  3966                           	clrf	(_g_dataReady)^0180h	;volatile
  3967  19A3  01EA               	line	128
  3968                           	
  3969                           l4663:	
  3970  19A4                     ;main.c: 128:    handleSensorData();
  3971                           	fcall	_handleSensorData
  3972  19A4  319A  2295  3199   	goto	l4665
  3973  19A7  29A8               	line	129
  3974                           ;main.c: 129:   }
  3975                           	
  3976                           l179:	
  3977  19A8                     	line	131
  3978                           	
  3979                           l4665:	
  3980  19A8                     ;main.c: 131:   showMenu();
  3981                           	fcall	_showMenu
  3982  19A8  319D  25F6  3199   	line	132
  3983                           	
  3984                           l4667:	
  3985  19AB                     ;main.c: 132:   _delay((unsigned long)((10)*(4000000/4000.0)));
  3986                           	opt asmopt_push
  3987                           opt asmopt_off
  3988                           movlw	13
  3989  19AB  300D               	movlb 2	; select bank2
  3990  19AC  0142               movwf	((??_main+0)^0100h+0),f
  3991  19AD  00D9               	movlw	251
  3992  19AE  30FB               u6697:
  3993  19AF                     decfsz	wreg
  3994  19AF  0B89               	goto	u6697
  3995  19B0  29AF               	decfsz	((??_main+0)^0100h+0),f
  3996  19B1  0BD9               	goto	u6697
  3997  19B2  29AF               	nop2
  3998  19B3  3200               opt asmopt_pop
  3999                           
  4000                           	goto	l177
  4001  19B4  298C               	line	134
  4002                           ;main.c: 134:  }
  4003                           	
  4004                           l180:	
  4005  19B5                     	goto	l177
  4006  19B5  298C               	
  4007                           l181:	
  4008  19B6                     	line	135
  4009                           	
  4010                           l182:	
  4011  19B6                     	global	start
  4012                           	ljmp	start
  4013  19B6  3180  287C         	opt stack 0
  4014                           GLOBAL	__end_of_main
  4015                           	__end_of_main:
  4016  19B8                     	signat	_main,89
  4017                           	global	_uartSendByte
  4018                           
  4019 ;; *************** function _uartSendByte *****************
  4020 ;; Defined at:
  4021 ;;		line 301 in file "main.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;  s               1    wreg     unsigned char 
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;  s               1    0[BANK0 ] unsigned char 
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  1    wreg      void 
  4028 ;; Registers used:
  4029 ;;		wreg
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4036 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4038 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4039 ;;Total ram usage:        1 bytes
  4040 ;; Hardware stack levels used:    1
  4041 ;; Hardware stack levels required when called:    3
  4042 ;; This function calls:
  4043 ;;		Nothing
  4044 ;; This function is called by:
  4045 ;;		_main
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  4049                           	line	301
  4050                           global __ptext1
  4051                           __ptext1:	;psect for function _uartSendByte
  4052  0802                     psect	text1
  4053                           	file	"main.c"
  4054                           	line	301
  4055                           	global	__size_of_uartSendByte
  4056                           	__size_of_uartSendByte	equ	__end_of_uartSendByte-_uartSendByte
  4057  000E                     	
  4058                           _uartSendByte:	
  4059  0802                     ;incstack = 0
  4060                           	opt	stack 12
  4061                           ; Regs used in _uartSendByte: [wreg]
  4062                           ;uartSendByte@s stored from wreg
  4063                           	movlb 0	; select bank0
  4064  0802  0140               	movwf	(uartSendByte@s)
  4065  0803  00A0               	line	303
  4066                           	
  4067                           l4559:	
  4068  0804                     ;main.c: 301: void uartSendByte(char s);main.c: 302: {;main.c: 303:  TX1REG = s;
  4069                           	movf	(uartSendByte@s),w
  4070  0804  0820               	movlb 2	; select bank2
  4071  0805  0142               	movwf	(282)^0100h	;volatile
  4072  0806  009A               	line	304
  4073                           	
  4074                           l4561:	
  4075  0807                     ;main.c: 304:  __nop();
  4076                           	opt	asmopt_push
  4077                           	opt	asmopt_off
  4078                           	nop
  4079  0807  0000               	opt	asmopt_pop
  4080                           	line	305
  4081                           ;main.c: 305:  while (!PIR3bits.TX1IF);
  4082                           	goto	l234
  4083  0808  2809               	
  4084                           l235:	
  4085  0809                     	
  4086                           l234:	
  4087  0809                     	movlb 14	; select bank14
  4088  0809  014E               	btfss	(1807)^0700h,4	;volatile
  4089  080A  1E0F               	goto	u6371
  4090  080B  280D               	goto	u6370
  4091  080C  280E               u6371:
  4092  080D                     	goto	l234
  4093  080D  2809               u6370:
  4094  080E                     	goto	l237
  4095  080E  280F               	
  4096                           l236:	
  4097  080F                     	line	306
  4098                           	
  4099                           l237:	
  4100  080F                     	return
  4101  080F  0008               	opt stack 0
  4102                           GLOBAL	__end_of_uartSendByte
  4103                           	__end_of_uartSendByte:
  4104  0810                     	signat	_uartSendByte,4217
  4105                           	global	_showMenu
  4106                           
  4107 ;; *************** function _showMenu *****************
  4108 ;; Defined at:
  4109 ;;		line 167 in file "main.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;		None
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;  s              61    0[BANK3 ] unsigned char [61]
  4114 ;;  pb              1   61[BANK3 ] enum E7849
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  1    wreg      void 
  4117 ;; Registers used:
  4118 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4125 ;;      Locals:         0       0       0       0      62       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4126 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4127 ;;      Totals:         0       0       0       2      62       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4128 ;;Total ram usage:       64 bytes
  4129 ;; Hardware stack levels used:    1
  4130 ;; Hardware stack levels required when called:   11
  4131 ;; This function calls:
  4132 ;;		_OLED_print_xy
  4133 ;;		_getPB
  4134 ;;		_menuInput
  4135 ;;		_sprintf
  4136 ;; This function is called by:
  4137 ;;		_main
  4138 ;; This function uses a non-reentrant model
  4139 ;;
  4140                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  4141                           	line	167
  4142                           global __ptext2
  4143                           __ptext2:	;psect for function _showMenu
  4144  1DF6                     psect	text2
  4145                           	file	"main.c"
  4146                           	line	167
  4147                           	global	__size_of_showMenu
  4148                           	__size_of_showMenu	equ	__end_of_showMenu-_showMenu
  4149  00A7                     	
  4150                           _showMenu:	
  4151  1DF6                     ;incstack = 0
  4152                           	opt	stack 4
  4153                           ; Regs used in _showMenu: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4154                           	line	174
  4155                           	
  4156                           l4571:	
  4157  1DF6                     ;main.c: 169:  static uint8_t menu = 0;;main.c: 170:  static uint8_t page = 0;;main.c: 1
                                 71:  enum e_buttonPress pb;;main.c: 172:  char s[61];;main.c: 174:  pb = getPB();
  4158                           	fcall	_getPB
  4159  1DF6  31A6  266F  319D   	movlb 2	; select bank2
  4160  1DF9  0142               	movwf	(??_showMenu+0)^0100h+0
  4161  1DFA  00D7               	movf	(??_showMenu+0)^0100h+0,w
  4162  1DFB  0857               	movlb 3	; select bank3
  4163  1DFC  0143               	movwf	(showMenu@pb)^0180h
  4164  1DFD  00DD               	line	175
  4165                           	
  4166                           l4573:	
  4167  1DFE                     ;main.c: 175:  if (menu == 0) {
  4168                           	movf	((showMenu@menu)^0180h),w
  4169  1DFE  086D               	btfss	status,2
  4170  1DFF  1D03               	goto	u6401
  4171  1E00  2E02               	goto	u6400
  4172  1E01  2E03               u6401:
  4173  1E02                     	goto	l4579
  4174  1E02  2E76               u6400:
  4175  1E03                     	line	177
  4176                           	
  4177                           l4575:	
  4178  1E03                     ;main.c: 177:   OLED_print_xy(0, 0, "Temperature Rel.humidityDewpoint    Bat.   Power");
                                 
  4179                           	movlb 0	; select bank0
  4180  1E03  0140               	clrf	(OLED_print_xy@row)
  4181  1E04  01A7               	movlw	low(((STR_1)|8000h))
  4182  1E05  307F               	movwf	(OLED_print_xy@s)
  4183  1E06  00A8               	movlw	high(((STR_1)|8000h))
  4184  1E07  30A0               	movwf	((OLED_print_xy@s))+1
  4185  1E08  00A9               	movlw	low(0)
  4186  1E09  3000               	fcall	_OLED_print_xy
  4187  1E0A  3198  20C7  319D   	line	178
  4188                           ;main.c: 178:   sprintf(s, "%5.1f \xdf\C    %5.1f %%     %5.1f \xdf\C    %4.1fV%5.3fW",

  4189                           	movlw	low(((STR_2)|8000h))
  4190  1E0D  301C               	movlb 2	; select bank2
  4191  1E0E  0142               	movwf	(sprintf@fmt)^0100h
  4192  1E0F  00B7               	movlw	high(((STR_2)|8000h))
  4193  1E10  30A0               	movwf	((sprintf@fmt)^0100h)+1
  4194  1E11  00B8               	movlb 3	; select bank3
  4195  1E12  0143               	movf	(_g_tempC+3)^0180h,w
  4196  1E13  0869               	movlb 2	; select bank2
  4197  1E14  0142               	movwf	3+(?_sprintf)^0100h+02h
  4198  1E15  00BC               	movlb 3	; select bank3
  4199  1E16  0143               	movf	(_g_tempC+2)^0180h,w
  4200  1E17  0868               	movlb 2	; select bank2
  4201  1E18  0142               	movwf	2+(?_sprintf)^0100h+02h
  4202  1E19  00BB               	movlb 3	; select bank3
  4203  1E1A  0143               	movf	(_g_tempC+1)^0180h,w
  4204  1E1B  0867               	movlb 2	; select bank2
  4205  1E1C  0142               	movwf	1+(?_sprintf)^0100h+02h
  4206  1E1D  00BA               	movlb 3	; select bank3
  4207  1E1E  0143               	movf	(_g_tempC)^0180h,w
  4208  1E1F  0866               	movlb 2	; select bank2
  4209  1E20  0142               	movwf	0+(?_sprintf)^0100h+02h
  4210  1E21  00B9               
  4211                           	movf	(_g_relHum+3)^0100h,w
  4212  1E22  0861               	movwf	3+(?_sprintf)^0100h+06h
  4213  1E23  00C0               	movf	(_g_relHum+2)^0100h,w
  4214  1E24  0860               	movwf	2+(?_sprintf)^0100h+06h
  4215  1E25  00BF               	movf	(_g_relHum+1)^0100h,w
  4216  1E26  085F               	movwf	1+(?_sprintf)^0100h+06h
  4217  1E27  00BE               	movf	(_g_relHum)^0100h,w
  4218  1E28  085E               	movwf	0+(?_sprintf)^0100h+06h
  4219  1E29  00BD               
  4220                           	movf	(_g_dewPointC+3)^0100h,w
  4221  1E2A  085D               	movwf	3+(?_sprintf)^0100h+0Ah
  4222  1E2B  00C4               	movf	(_g_dewPointC+2)^0100h,w
  4223  1E2C  085C               	movwf	2+(?_sprintf)^0100h+0Ah
  4224  1E2D  00C3               	movf	(_g_dewPointC+1)^0100h,w
  4225  1E2E  085B               	movwf	1+(?_sprintf)^0100h+0Ah
  4226  1E2F  00C2               	movf	(_g_dewPointC)^0100h,w
  4227  1E30  085A               	movwf	0+(?_sprintf)^0100h+0Ah
  4228  1E31  00C1               
  4229                           	movlb 3	; select bank3
  4230  1E32  0143               	movf	(_g_voltage+3)^0180h,w
  4231  1E33  0865               	movlb 2	; select bank2
  4232  1E34  0142               	movwf	3+(?_sprintf)^0100h+0Eh
  4233  1E35  00C8               	movlb 3	; select bank3
  4234  1E36  0143               	movf	(_g_voltage+2)^0180h,w
  4235  1E37  0864               	movlb 2	; select bank2
  4236  1E38  0142               	movwf	2+(?_sprintf)^0100h+0Eh
  4237  1E39  00C7               	movlb 3	; select bank3
  4238  1E3A  0143               	movf	(_g_voltage+1)^0180h,w
  4239  1E3B  0863               	movlb 2	; select bank2
  4240  1E3C  0142               	movwf	1+(?_sprintf)^0100h+0Eh
  4241  1E3D  00C6               	movlb 3	; select bank3
  4242  1E3E  0143               	movf	(_g_voltage)^0180h,w
  4243  1E3F  0862               	movlb 2	; select bank2
  4244  1E40  0142               	movwf	0+(?_sprintf)^0100h+0Eh
  4245  1E41  00C5               
  4246                           	movlb 3	; select bank3
  4247  1E42  0143               	movf	(_g_current+3)^0180h,w
  4248  1E43  0861               	movlb 2	; select bank2
  4249  1E44  0142               	movwf	3+(?_sprintf)^0100h+012h
  4250  1E45  00CC               	movlb 3	; select bank3
  4251  1E46  0143               	movf	(_g_current+2)^0180h,w
  4252  1E47  0860               	movlb 2	; select bank2
  4253  1E48  0142               	movwf	2+(?_sprintf)^0100h+012h
  4254  1E49  00CB               	movlb 3	; select bank3
  4255  1E4A  0143               	movf	(_g_current+1)^0180h,w
  4256  1E4B  085F               	movlb 2	; select bank2
  4257  1E4C  0142               	movwf	1+(?_sprintf)^0100h+012h
  4258  1E4D  00CA               	movlb 3	; select bank3
  4259  1E4E  0143               	movf	(_g_current)^0180h,w
  4260  1E4F  085E               	movlb 2	; select bank2
  4261  1E50  0142               	movwf	0+(?_sprintf)^0100h+012h
  4262  1E51  00C9               
  4263                           	movlw	(low(showMenu@s|((0x1)<<8)))&0ffh
  4264  1E52  30A0               	fcall	_sprintf
  4265  1E53  31A7  27AC  319D   	line	180
  4266                           ;main.c: 180:   OLED_print_xy(0, 1, s);
  4267                           	movlb 0	; select bank0
  4268  1E56  0140               	clrf	(OLED_print_xy@row)
  4269  1E57  01A7               	incf	(OLED_print_xy@row),f
  4270  1E58  0AA7               	movlw	low(showMenu@s)
  4271  1E59  30A0               	movwf	(OLED_print_xy@s)
  4272  1E5A  00A8               	movlw	high(showMenu@s)
  4273  1E5B  3001               	movwf	(OLED_print_xy@s+1)
  4274  1E5C  00A9               	movlw	low(0)
  4275  1E5D  3000               	fcall	_OLED_print_xy
  4276  1E5E  3198  20C7  319D   	line	181
  4277                           	
  4278                           l4577:	
  4279  1E61                     ;main.c: 181:   menuInput(&page, 4, &menu, 1, 0, 0);
  4280                           	movlw	low(04h)
  4281  1E61  3004               	movlb 2	; select bank2
  4282  1E62  0142               	movwf	(??_showMenu+0)^0100h+0
  4283  1E63  00D7               	movf	(??_showMenu+0)^0100h+0,w
  4284  1E64  0857               	movlb 0	; select bank0
  4285  1E65  0140               	movwf	(menuInput@numPages)
  4286  1E66  00A7               	movlw	(low(showMenu@menu|((0x1)<<8)))&0ffh
  4287  1E67  30ED               	movlb 2	; select bank2
  4288  1E68  0142               	movwf	(??_showMenu+1)^0100h+0
  4289  1E69  00D8               	movf	(??_showMenu+1)^0100h+0,w
  4290  1E6A  0858               	movlb 0	; select bank0
  4291  1E6B  0140               	movwf	(menuInput@menu)
  4292  1E6C  00A8               	clrf	(menuInput@pbShort)
  4293  1E6D  01A9               	incf	(menuInput@pbShort),f
  4294  1E6E  0AA9               	clrf	(menuInput@pbLong)
  4295  1E6F  01AA               	clrf	(menuInput@timeout)
  4296  1E70  01AB               	movlw	(low(showMenu@page|((0x1)<<8)))&0ffh
  4297  1E71  30EC               	fcall	_menuInput
  4298  1E72  3190  2091  319D   	line	182
  4299                           ;main.c: 182:  } else if (menu == 1) {
  4300                           	goto	l206
  4301  1E75  2E9C               	
  4302                           l203:	
  4303  1E76                     	
  4304                           l4579:	
  4305  1E76                     	movlb 3	; select bank3
  4306  1E76  0143               		decf	((showMenu@menu)^0180h),w
  4307  1E77  036D               	btfss	status,2
  4308  1E78  1D03               	goto	u6411
  4309  1E79  2E7B               	goto	u6410
  4310  1E7A  2E7C               u6411:
  4311  1E7B                     	goto	l206
  4312  1E7B  2E9C               u6410:
  4313  1E7C                     	line	184
  4314                           	
  4315                           l4581:	
  4316  1E7C                     ;main.c: 184:   OLED_print_xy(0, 0, "Ch1: xx inchCh2: xx inchCh3: xx inchCh4: xx inch");
                                 
  4317                           	movlb 0	; select bank0
  4318  1E7C  0140               	clrf	(OLED_print_xy@row)
  4319  1E7D  01A7               	movlw	low(((STR_3)|8000h))
  4320  1E7E  304E               	movwf	(OLED_print_xy@s)
  4321  1E7F  00A8               	movlw	high(((STR_3)|8000h))
  4322  1E80  30A0               	movwf	((OLED_print_xy@s))+1
  4323  1E81  00A9               	movlw	low(0)
  4324  1E82  3000               	fcall	_OLED_print_xy
  4325  1E83  3198  20C7  319D   	line	185
  4326                           	
  4327                           l4583:	
  4328  1E86                     ;main.c: 185:   menuInput(&page, 4, &menu, 1, 0, 0);
  4329                           	movlw	low(04h)
  4330  1E86  3004               	movlb 2	; select bank2
  4331  1E87  0142               	movwf	(??_showMenu+0)^0100h+0
  4332  1E88  00D7               	movf	(??_showMenu+0)^0100h+0,w
  4333  1E89  0857               	movlb 0	; select bank0
  4334  1E8A  0140               	movwf	(menuInput@numPages)
  4335  1E8B  00A7               	movlw	(low(showMenu@menu|((0x1)<<8)))&0ffh
  4336  1E8C  30ED               	movlb 2	; select bank2
  4337  1E8D  0142               	movwf	(??_showMenu+1)^0100h+0
  4338  1E8E  00D8               	movf	(??_showMenu+1)^0100h+0,w
  4339  1E8F  0858               	movlb 0	; select bank0
  4340  1E90  0140               	movwf	(menuInput@menu)
  4341  1E91  00A8               	clrf	(menuInput@pbShort)
  4342  1E92  01A9               	incf	(menuInput@pbShort),f
  4343  1E93  0AA9               	clrf	(menuInput@pbLong)
  4344  1E94  01AA               	clrf	(menuInput@timeout)
  4345  1E95  01AB               	movlw	(low(showMenu@page|((0x1)<<8)))&0ffh
  4346  1E96  30EC               	fcall	_menuInput
  4347  1E97  3190  2091  319D   	goto	l206
  4348  1E9A  2E9C               	line	186
  4349                           ;main.c: 186:  }
  4350                           	
  4351                           l205:	
  4352  1E9B                     	goto	l206
  4353  1E9B  2E9C               	
  4354                           l204:	
  4355  1E9C                     	line	187
  4356                           	
  4357                           l206:	
  4358  1E9C                     	return
  4359  1E9C  0008               	opt stack 0
  4360                           GLOBAL	__end_of_showMenu
  4361                           	__end_of_showMenu:
  4362  1E9D                     	signat	_showMenu,89
  4363                           	global	_sprintf
  4364                           
  4365 ;; *************** function _sprintf *****************
  4366 ;; Defined at:
  4367 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;  s               1    wreg     PTR unsigned char 
  4370 ;;		 -> showMenu@s(61), 
  4371 ;;  fmt             2   23[BANK2 ] PTR const unsigned char 
  4372 ;;		 -> STR_2(50), 
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;  s               1   48[BANK2 ] PTR unsigned char 
  4375 ;;		 -> showMenu@s(61), 
  4376 ;;  f               5   50[BANK2 ] struct _IO_FILE
  4377 ;;  ret             2   46[BANK2 ] int 
  4378 ;;  ap              1   49[BANK2 ] PTR void [1]
  4379 ;;		 -> ?_sprintf(2), 
  4380 ;; Return value:  Size  Location     Type
  4381 ;;                  2   23[BANK2 ] int 
  4382 ;; Registers used:
  4383 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4389 ;;      Params:         0       0       0      22       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4390 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4391 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4392 ;;      Totals:         0       0       0      32       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4393 ;;Total ram usage:       32 bytes
  4394 ;; Hardware stack levels used:    1
  4395 ;; Hardware stack levels required when called:   10
  4396 ;; This function calls:
  4397 ;;		_vfprintf
  4398 ;; This function is called by:
  4399 ;;		_showMenu
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           psect	text3,local,class=CODE,delta=2,merge=1,group=2
  4403                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  4404                           	line	9
  4405                           global __ptext3
  4406                           __ptext3:	;psect for function _sprintf
  4407  27AC                     psect	text3
  4408                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  4409                           	line	9
  4410                           	global	__size_of_sprintf
  4411                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  4412  0029                     	
  4413                           _sprintf:	
  4414  27AC                     ;incstack = 0
  4415                           	opt	stack 4
  4416                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4417                           ;sprintf@s stored from wreg
  4418                           	movlb 2	; select bank2
  4419  27AC  0142               	movwf	(sprintf@s)^0100h
  4420  27AD  00D0               	line	15
  4421                           	
  4422                           l4309:	
  4423  27AE                     	movlw	(low(?_sprintf|((0x1)<<8)+02h))&0ffh
  4424  27AE  3039               	movwf	(??_sprintf+0)^0100h+0
  4425  27AF  00CD               	movf	(??_sprintf+0)^0100h+0,w
  4426  27B0  084D               	movwf	(sprintf@ap)^0100h
  4427  27B1  00D1               	line	16
  4428                           	movf	(sprintf@s)^0100h,w
  4429  27B2  0850               	movwf	(??_sprintf+0)^0100h+0
  4430  27B3  00CD               	movf	(??_sprintf+0)^0100h+0,w
  4431  27B4  084D               	movwf	(sprintf@f)^0100h
  4432  27B5  00D2               	line	17
  4433                           	
  4434                           l4311:	
  4435  27B6                     	clrf	0+(sprintf@f)^0100h+01h
  4436  27B6  01D3               	clrf	1+(sprintf@f)^0100h+01h
  4437  27B7  01D4               	line	18
  4438                           	
  4439                           l4313:	
  4440  27B8                     	clrf	0+(sprintf@f)^0100h+03h
  4441  27B8  01D5               	clrf	1+(sprintf@f)^0100h+03h
  4442  27B9  01D6               	line	19
  4443                           	
  4444                           l4315:	
  4445  27BA                     	movf	(sprintf@fmt+1)^0100h,w
  4446  27BA  0838               	movwf	(vfprintf@fmt+1)^0100h
  4447  27BB  00B0               	movf	(sprintf@fmt)^0100h,w
  4448  27BC  0837               	movwf	(vfprintf@fmt)^0100h
  4449  27BD  00AF               	movlw	(low(sprintf@ap|((0x1)<<8)))&0ffh
  4450  27BE  3051               	movwf	(??_sprintf+0)^0100h+0
  4451  27BF  00CD               	movf	(??_sprintf+0)^0100h+0,w
  4452  27C0  084D               	movwf	(vfprintf@ap)^0100h
  4453  27C1  00B1               	movlw	(low(sprintf@f|((0x1)<<8)))&0ffh
  4454  27C2  3052               	fcall	_vfprintf
  4455  27C3  3198  202C  31A7   	movlb 2	; select bank2
  4456  27C6  0142               	movf	(1+(?_vfprintf))^0100h,w
  4457  27C7  0830               	movwf	(sprintf@ret+1)^0100h
  4458  27C8  00CF               	movf	(0+(?_vfprintf))^0100h,w
  4459  27C9  082F               	movwf	(sprintf@ret)^0100h
  4460  27CA  00CE               	line	20
  4461                           	
  4462                           l4317:	
  4463  27CB                     	movf	0+(sprintf@f)^0100h+01h,w
  4464  27CB  0853               	addwf	(sprintf@s)^0100h,w
  4465  27CC  0750               	movwf	(??_sprintf+0)^0100h+0
  4466  27CD  00CD               	movf	0+(??_sprintf+0)^0100h+0,w
  4467  27CE  084D               	movwf	fsr1l
  4468  27CF  0086               	movlw 1	; select bank2/3
  4469  27D0  3001               	movwf fsr1h	
  4470  27D1  0087               	
  4471                           	clrf	indf1
  4472  27D2  0181               	goto	l1058
  4473  27D3  2FD4               	line	22
  4474                           	
  4475                           l4319:	
  4476  27D4                     	line	23
  4477                           ;	Return value of _sprintf is never used
  4478                           	
  4479                           l1058:	
  4480  27D4                     	return
  4481  27D4  0008               	opt stack 0
  4482                           GLOBAL	__end_of_sprintf
  4483                           	__end_of_sprintf:
  4484  27D5                     	signat	_sprintf,4698
  4485                           	global	_vfprintf
  4486                           
  4487 ;; *************** function _vfprintf *****************
  4488 ;; Defined at:
  4489 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;  fp              1    wreg     PTR struct _IO_FILE
  4492 ;;		 -> sprintf@f(5), 
  4493 ;;  fmt             2   15[BANK2 ] PTR const unsigned char 
  4494 ;;		 -> STR_2(50), 
  4495 ;;  ap              1   17[BANK2 ] PTR PTR void 
  4496 ;;		 -> sprintf@ap(1), 
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;  fp              1   20[BANK2 ] PTR struct _IO_FILE
  4499 ;;		 -> sprintf@f(5), 
  4500 ;;  cfmt            2   21[BANK2 ] PTR unsigned char 
  4501 ;;		 -> STR_2(50), 
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  2   15[BANK2 ] int 
  4504 ;; Registers used:
  4505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4511 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4512 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4513 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4514 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4515 ;;Total ram usage:        8 bytes
  4516 ;; Hardware stack levels used:    1
  4517 ;; Hardware stack levels required when called:    9
  4518 ;; This function calls:
  4519 ;;		_vfpfcnvrt
  4520 ;; This function is called by:
  4521 ;;		_sprintf
  4522 ;; This function uses a non-reentrant model
  4523 ;;
  4524                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  4525                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  4526                           	line	1368
  4527                           global __ptext4
  4528                           __ptext4:	;psect for function _vfprintf
  4529  182C                     psect	text4
  4530                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  4531                           	line	1368
  4532                           	global	__size_of_vfprintf
  4533                           	__size_of_vfprintf	equ	__end_of_vfprintf-_vfprintf
  4534  0032                     	
  4535                           _vfprintf:	
  4536  182C                     ;incstack = 0
  4537                           	opt	stack 4
  4538                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4539                           ;vfprintf@fp stored from wreg
  4540                           	movlb 2	; select bank2
  4541  182C  0142               	movwf	(vfprintf@fp)^0100h
  4542  182D  00B4               	line	1373
  4543                           	
  4544                           l4287:	
  4545  182E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1368: int v
                                 fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
                                 0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pi
                                 c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
                                 8\v2.00\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4546                           	movf	(vfprintf@fmt+1)^0100h,w
  4547  182E  0830               	movwf	(vfprintf@cfmt+1)^0100h
  4548  182F  00B6               	movf	(vfprintf@fmt)^0100h,w
  4549  1830  082F               	movwf	(vfprintf@cfmt)^0100h
  4550  1831  00B5               	line	1374
  4551                           	
  4552                           l4289:	
  4553  1832                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1374:     n
                                 out = 0;
  4554                           	clrf	(_nout)^0100h
  4555  1832  01E2               	clrf	(_nout+1)^0100h
  4556  1833  01E3               	line	1375
  4557                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
                                 hile (*cfmt) {
  4558                           	goto	l4293
  4559  1834  284E               	
  4560                           l519:	
  4561  1835                     	line	1376
  4562                           	
  4563                           l4291:	
  4564  1835                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1376:      
                                    nout += vfpfcnvrt(fp, &cfmt, ap);
  4565                           	movlw	(low(vfprintf@cfmt|((0x1)<<8)))&0ffh
  4566  1835  3035               	movwf	(??_vfprintf+0)^0100h+0
  4567  1836  00B2               	movf	(??_vfprintf+0)^0100h+0,w
  4568  1837  0832               	movlb 1	; select bank1
  4569  1838  0141               	movwf	(vfpfcnvrt@fmt)^080h
  4570  1839  00E8               	movlb 2	; select bank2
  4571  183A  0142               	movf	(vfprintf@ap)^0100h,w
  4572  183B  0831               	movwf	(??_vfprintf+1)^0100h+0
  4573  183C  00B3               	movf	(??_vfprintf+1)^0100h+0,w
  4574  183D  0833               	movlb 1	; select bank1
  4575  183E  0141               	movwf	(vfpfcnvrt@ap)^080h
  4576  183F  00E9               	movlb 2	; select bank2
  4577  1840  0142               	movf	(vfprintf@fp)^0100h,w
  4578  1841  0834               	fcall	_vfpfcnvrt
  4579  1842  318C  2461  3198   	movlb 1	; select bank1
  4580  1845  0141               	movf	(0+(?_vfpfcnvrt))^080h,w
  4581  1846  0868               	movlb 2	; select bank2
  4582  1847  0142               	addwf	(_nout)^0100h,f
  4583  1848  07E2               	movlb 1	; select bank1
  4584  1849  0141               	movf	(1+(?_vfpfcnvrt))^080h,w
  4585  184A  0869               	movlb 2	; select bank2
  4586  184B  0142               	addwfc	(_nout+1)^0100h,f
  4587  184C  3DE3               	goto	l4293
  4588  184D  284E               	line	1377
  4589                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1377:     }
                                 
  4590                           	
  4591                           l518:	
  4592  184E                     	line	1375
  4593                           	
  4594                           l4293:	
  4595  184E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
                                 hile (*cfmt) {
  4596                           	movf	(vfprintf@cfmt)^0100h,w
  4597  184E  0835               	movwf	fsr0l
  4598  184F  0084               	movf	((vfprintf@cfmt+1)^0100h),w
  4599  1850  0836               	movwf	fsr0h
  4600  1851  0085               	moviw	fsr0++
  4601  1852  0012               	btfss	status,2
  4602  1853  1D03               	goto	u6051
  4603  1854  2856               	goto	u6050
  4604  1855  2857               u6051:
  4605  1856                     	goto	l4291
  4606  1856  2835               u6050:
  4607  1857                     	goto	l4295
  4608  1857  2858               	
  4609                           l520:	
  4610  1858                     	line	1378
  4611                           	
  4612                           l4295:	
  4613  1858                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1378:     r
                                 eturn nout;
  4614                           	movf	(_nout+1)^0100h,w
  4615  1858  0863               	movwf	(?_vfprintf+1)^0100h
  4616  1859  00B0               	movf	(_nout)^0100h,w
  4617  185A  0862               	movwf	(?_vfprintf)^0100h
  4618  185B  00AF               	goto	l521
  4619  185C  285D               	
  4620                           l4297:	
  4621  185D                     	line	1382
  4622                           	
  4623                           l521:	
  4624  185D                     	return
  4625  185D  0008               	opt stack 0
  4626                           GLOBAL	__end_of_vfprintf
  4627                           	__end_of_vfprintf:
  4628  185E                     	signat	_vfprintf,12410
  4629                           	global	_vfpfcnvrt
  4630                           
  4631 ;; *************** function _vfpfcnvrt *****************
  4632 ;; Defined at:
  4633 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;  fp              1    wreg     PTR struct _IO_FILE
  4636 ;;		 -> sprintf@f(5), 
  4637 ;;  fmt             1   72[BANK1 ] PTR PTR unsigned char 
  4638 ;;		 -> vfprintf@cfmt(2), 
  4639 ;;  ap              1   73[BANK1 ] PTR PTR void 
  4640 ;;		 -> sprintf@ap(1), 
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;  fp              1   14[BANK2 ] PTR struct _IO_FILE
  4643 ;;		 -> sprintf@f(5), 
  4644 ;;  f               4    6[BANK2 ] PTR struct _IO_FILE
  4645 ;;  llu             4    0        unsigned long 
  4646 ;;  ll              4    0        long 
  4647 ;;  ct              3   10[BANK2 ] unsigned char [3]
  4648 ;;  vp              2    0        PTR void 
  4649 ;;  i               2    0        int 
  4650 ;;  done            2    0        int 
  4651 ;;  cp              2    0        PTR unsigned char 
  4652 ;;  c               1   13[BANK2 ] unsigned char 
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  2   72[BANK1 ] int 
  4655 ;; Registers used:
  4656 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4662 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4663 ;;      Locals:         0       0       0      15       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4664 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4665 ;;      Totals:         0       0       8      15       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4666 ;;Total ram usage:       23 bytes
  4667 ;; Hardware stack levels used:    1
  4668 ;; Hardware stack levels required when called:    8
  4669 ;; This function calls:
  4670 ;;		_atoi
  4671 ;;		_efgtoa
  4672 ;;		_fputc
  4673 ;;		_isdigit
  4674 ;;		_isupper
  4675 ;;		_strncmp
  4676 ;;		_tolower
  4677 ;; This function is called by:
  4678 ;;		_vfprintf
  4679 ;; This function uses a non-reentrant model
  4680 ;;
  4681                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  4682                           	line	670
  4683                           global __ptext5
  4684                           __ptext5:	;psect for function _vfpfcnvrt
  4685  0C61                     psect	text5
  4686                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  4687                           	line	670
  4688                           	global	__size_of_vfpfcnvrt
  4689                           	__size_of_vfpfcnvrt	equ	__end_of_vfpfcnvrt-_vfpfcnvrt
  4690  039F                     	
  4691                           _vfpfcnvrt:	
  4692  0C61                     ;incstack = 0
  4693                           	opt	stack 4
  4694                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4695                           ;vfpfcnvrt@fp stored from wreg
  4696                           	movlb 2	; select bank2
  4697  0C61  0142               	movwf	(vfpfcnvrt@fp)^0100h
  4698  0C62  00AE               	line	680
  4699                           	
  4700                           l4147:	
  4701  0C63                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 670: static
                                  int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
                                 2.00\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.00\
                                 pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
                                 rochip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
                                  (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4702                           	movlb 1	; select bank1
  4703  0C63  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  4704  0C64  0868               	movwf	fsr1l
  4705  0C65  0086               	movlw 1	; select bank2/3
  4706  0C66  3001               	movwf fsr1h	
  4707  0C67  0087               	
  4708                           	moviw	[0]fsr1
  4709  0C68  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  4710  0C69  00EA               	moviw	[1]fsr1
  4711  0C6A  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  4712  0C6B  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  4713  0C6C  086A               	movwf	fsr0l
  4714  0C6D  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  4715  0C6E  086B               	movwf	fsr0h
  4716  0C6F  0085               	moviw	fsr0++
  4717  0C70  0012               xorlw	37
  4718  0C71  3A25               	btfss	status,2
  4719  0C72  1D03               	goto	u5861
  4720  0C73  2C75               	goto	u5860
  4721  0C74  2C76               u5861:
  4722  0C75                     	goto	l4255
  4723  0C75  2FD0               u5860:
  4724  0C76                     	line	681
  4725                           	
  4726                           l4149:	
  4727  0C76                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 681:       
                                   ++*fmt;
  4728                           	movf	(vfpfcnvrt@fmt)^080h,w
  4729  0C76  0868               	movwf	fsr1l
  4730  0C77  0086               	movlw 1	; select bank2/3
  4731  0C78  3001               	movwf fsr1h	
  4732  0C79  0087               	
  4733                           	movlw	01h
  4734  0C7A  3001               	addwf	indf1,f
  4735  0C7B  0781               	addfsr	fsr1,1
  4736  0C7C  3141               	skipnc
  4737  0C7D  1803               	incf	indf1,f
  4738  0C7E  0A81               	line	683
  4739                           	
  4740                           l4151:	
  4741  0C7F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 683:       
                                   flags = width = 0;
  4742                           	movlb 2	; select bank2
  4743  0C7F  0142               	clrf	(_width)^0100h
  4744  0C80  01E4               	clrf	(_width+1)^0100h
  4745  0C81  01E5               	clrf	(_flags)^0100h
  4746  0C82  01E8               	clrf	(_flags+1)^0100h
  4747  0C83  01E9               	line	684
  4748                           	
  4749                           l4153:	
  4750  0C84                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 684:       
                                   prec = -1;
  4751                           	movlw	0FFh
  4752  0C84  30FF               	movwf	(_prec)^0100h
  4753  0C85  00E6               	movlw	0FFh
  4754  0C86  30FF               	movwf	((_prec)^0100h)+1
  4755  0C87  00E7               	line	723
  4756                           	
  4757                           l4155:	
  4758  0C88                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 723:       
                                   if ((*fmt)[0] == '*') {
  4759                           	movlb 1	; select bank1
  4760  0C88  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  4761  0C89  0868               	movwf	fsr1l
  4762  0C8A  0086               	movlw 1	; select bank2/3
  4763  0C8B  3001               	movwf fsr1h	
  4764  0C8C  0087               	
  4765                           	moviw	[0]fsr1
  4766  0C8D  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  4767  0C8E  00EA               	moviw	[1]fsr1
  4768  0C8F  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  4769  0C90  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  4770  0C91  086A               	movwf	fsr0l
  4771  0C92  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  4772  0C93  086B               	movwf	fsr0h
  4773  0C94  0085               	moviw	fsr0++
  4774  0C95  0012               xorlw	42
  4775  0C96  3A2A               	btfss	status,2
  4776  0C97  1D03               	goto	u5871
  4777  0C98  2C9A               	goto	u5870
  4778  0C99  2C9B               u5871:
  4779  0C9A                     	goto	l4167
  4780  0C9A  2CBF               u5870:
  4781  0C9B                     	line	724
  4782                           	
  4783                           l4157:	
  4784  0C9B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 724:       
                                       ++*fmt;
  4785                           	movf	(vfpfcnvrt@fmt)^080h,w
  4786  0C9B  0868               	movwf	fsr1l
  4787  0C9C  0086               	movlw 1	; select bank2/3
  4788  0C9D  3001               	movwf fsr1h	
  4789  0C9E  0087               	
  4790                           	movlw	01h
  4791  0C9F  3001               	addwf	indf1,f
  4792  0CA0  0781               	addfsr	fsr1,1
  4793  0CA1  3141               	skipnc
  4794  0CA2  1803               	incf	indf1,f
  4795  0CA3  0A81               	line	725
  4796                           	
  4797                           l4159:	
  4798  0CA4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 725:       
                                       width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4799                           	movf	(vfpfcnvrt@ap)^080h,w
  4800  0CA4  0869               	movwf	fsr1l
  4801  0CA5  0086               	movlw 1	; select bank2/3
  4802  0CA6  3001               	movwf fsr1h	
  4803  0CA7  0087               	
  4804                           	movf	indf1,w
  4805  0CA8  0801               	movwf	fsr0l
  4806  0CA9  0084               	movlw 1	; select bank2/3
  4807  0CAA  3001               	movwf fsr0h	
  4808  0CAB  0085               	
  4809                           	movlw	02h
  4810  0CAC  3002               	addwf	indf1,f
  4811  0CAD  0781               	moviw	[0]fsr0
  4812  0CAE  3F00               	movlb 2	; select bank2
  4813  0CAF  0142               	movwf	(_width)^0100h
  4814  0CB0  00E4               	moviw	[1]fsr0
  4815  0CB1  3F01               	movwf	(_width+1)^0100h
  4816  0CB2  00E5               	line	726
  4817                           	
  4818                           l4161:	
  4819  0CB3                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 726:       
                                       if (width < 0) {
  4820                           	btfss	(_width+1)^0100h,7
  4821  0CB3  1FE5               	goto	u5881
  4822  0CB4  2CB6               	goto	u5880
  4823  0CB5  2CB7               u5881:
  4824  0CB6                     	goto	l4177
  4825  0CB6  2D34               u5880:
  4826  0CB7                     	line	727
  4827                           	
  4828                           l4163:	
  4829  0CB7                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 727:       
                                           flags |= (1 << 0);
  4830                           	bsf	(_flags)^0100h+(0/8),(0)&7
  4831  0CB7  1468               	line	728
  4832                           	
  4833                           l4165:	
  4834  0CB8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 728:       
                                           width = -width;
  4835                           	comf	(_width)^0100h,f
  4836  0CB8  09E4               	comf	(_width+1)^0100h,f
  4837  0CB9  09E5               	incf	(_width)^0100h,f
  4838  0CBA  0AE4               	skipnz
  4839  0CBB  1903               	incf	(_width+1)^0100h,f
  4840  0CBC  0AE5               	goto	l4177
  4841  0CBD  2D34               	line	729
  4842                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 729:       
                                       }
  4843                           	
  4844                           l485:	
  4845  0CBE                     	line	730
  4846                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 730:       
                                   } else {
  4847                           	goto	l4177
  4848  0CBE  2D34               	
  4849                           l484:	
  4850  0CBF                     	line	731
  4851                           	
  4852                           l4167:	
  4853  0CBF                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 731:       
                                       width = atoi(*fmt);
  4854                           	movlb 1	; select bank1
  4855  0CBF  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  4856  0CC0  0868               	movwf	fsr1l
  4857  0CC1  0086               	movlw 1	; select bank2/3
  4858  0CC2  3001               	movwf fsr1h	
  4859  0CC3  0087               	
  4860                           	moviw	[0]fsr1
  4861  0CC4  3F40               	movlb 0	; select bank0
  4862  0CC5  0140               	movwf	(atoi@s)
  4863  0CC6  00A6               	moviw	[1]fsr1
  4864  0CC7  3F41               	movwf	(atoi@s+1)
  4865  0CC8  00A7               	fcall	_atoi
  4866  0CC9  3191  2154  318C   	movlb 0	; select bank0
  4867  0CCC  0140               	movf	(1+(?_atoi)),w
  4868  0CCD  0827               	movlb 2	; select bank2
  4869  0CCE  0142               	movwf	(_width+1)^0100h
  4870  0CCF  00E5               	movlb 0	; select bank0
  4871  0CD0  0140               	movf	(0+(?_atoi)),w
  4872  0CD1  0826               	movlb 2	; select bank2
  4873  0CD2  0142               	movwf	(_width)^0100h
  4874  0CD3  00E4               	line	732
  4875                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 732:       
                                       while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4876                           	goto	l4171
  4877  0CD4  2CE0               	
  4878                           l488:	
  4879  0CD5                     	line	733
  4880                           	
  4881                           l4169:	
  4882  0CD5                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 733:       
                                           ++*fmt;
  4883                           	movlb 1	; select bank1
  4884  0CD5  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  4885  0CD6  0868               	movwf	fsr1l
  4886  0CD7  0086               	movlw 1	; select bank2/3
  4887  0CD8  3001               	movwf fsr1h	
  4888  0CD9  0087               	
  4889                           	movlw	01h
  4890  0CDA  3001               	addwf	indf1,f
  4891  0CDB  0781               	addfsr	fsr1,1
  4892  0CDC  3141               	skipnc
  4893  0CDD  1803               	incf	indf1,f
  4894  0CDE  0A81               	goto	l4171
  4895  0CDF  2CE0               	line	734
  4896                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 732:       
                                       while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4897                           	
  4898                           l487:	
  4899  0CE0                     	line	732
  4900                           	
  4901                           l4171:	
  4902  0CE0                     	movlb 1	; select bank1
  4903  0CE0  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  4904  0CE1  0868               	movwf	fsr1l
  4905  0CE2  0086               	movlw 1	; select bank2/3
  4906  0CE3  3001               	movwf fsr1h	
  4907  0CE4  0087               	
  4908                           	moviw	[0]fsr1
  4909  0CE5  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  4910  0CE6  00EA               	moviw	[1]fsr1
  4911  0CE7  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  4912  0CE8  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  4913  0CE9  086A               	movwf	fsr0l
  4914  0CEA  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  4915  0CEB  086B               	movwf	fsr0h
  4916  0CEC  0085               	movf	indf0,w ;code access
  4917  0CED  0800               	addlw	low(0FFD0h)
  4918  0CEE  3ED0               	movwf	(??_vfpfcnvrt+2)^080h+0
  4919  0CEF  00EC               	movlw	high(0FFD0h)
  4920  0CF0  30FF               	skipnc
  4921  0CF1  1803               	movlw	(high(0FFD0h)+1)&0ffh
  4922  0CF2  3000               	movwf	((??_vfpfcnvrt+2)^080h+0)+1
  4923  0CF3  00ED               	movlw	0
  4924  0CF4  3000               	subwf	1+(??_vfpfcnvrt+2)^080h+0,w
  4925  0CF5  026D               	movlw	0Ah
  4926  0CF6  300A               	skipnz
  4927  0CF7  1903               	subwf	0+(??_vfpfcnvrt+2)^080h+0,w
  4928  0CF8  026C               	skipc
  4929  0CF9  1C03               	goto	u5891
  4930  0CFA  2CFC               	goto	u5890
  4931  0CFB  2CFE               u5891:
  4932  0CFC                     	movlw	1
  4933  0CFC  3001               	goto	u5900
  4934  0CFD  2CFF               u5890:
  4935  0CFE                     	movlw	0
  4936  0CFE  3000               u5900:
  4937  0CFF                     	movwf	(??_vfpfcnvrt+4)^080h+0
  4938  0CFF  00EE               	clrf	(??_vfpfcnvrt+4)^080h+0+1
  4939  0D00  01EF               	movf	0+(??_vfpfcnvrt+4)^080h+0,w
  4940  0D01  086E               	movlb 2	; select bank2
  4941  0D02  0142               	movwf	(_vfpfcnvrt$890)^0100h
  4942  0D03  00A0               	movlb 1	; select bank1
  4943  0D04  0141               	movf	1+(??_vfpfcnvrt+4)^080h+0,w
  4944  0D05  086F               	movlb 2	; select bank2
  4945  0D06  0142               	movwf	(_vfpfcnvrt$890+1)^0100h
  4946  0D07  00A1               	goto	l4175
  4947  0D08  2D2C               	
  4948                           l490:	
  4949  0D09                     	
  4950                           l4173:	
  4951  0D09                     	movlb 1	; select bank1
  4952  0D09  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  4953  0D0A  0868               	movwf	fsr1l
  4954  0D0B  0086               	movlw 1	; select bank2/3
  4955  0D0C  3001               	movwf fsr1h	
  4956  0D0D  0087               	
  4957                           	moviw	[0]fsr1
  4958  0D0E  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  4959  0D0F  00EA               	moviw	[1]fsr1
  4960  0D10  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  4961  0D11  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  4962  0D12  086A               	movwf	fsr0l
  4963  0D13  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  4964  0D14  086B               	movwf	fsr0h
  4965  0D15  0085               	movf	indf0,w ;code access
  4966  0D16  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  4967  0D17  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  4968  0D18  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  4969  0D19  086C               	movlb 0	; select bank0
  4970  0D1A  0140               	movwf	(isdigit@c)
  4971  0D1B  00A0               	movlb 1	; select bank1
  4972  0D1C  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  4973  0D1D  086D               	movlb 0	; select bank0
  4974  0D1E  0140               	movwf	(isdigit@c+1)
  4975  0D1F  00A1               	fcall	_isdigit
  4976  0D20  31A6  26A1  318C   	movlb 0	; select bank0
  4977  0D23  0140               	movf	(1+(?_isdigit)),w
  4978  0D24  0821               	movlb 2	; select bank2
  4979  0D25  0142               	movwf	(_vfpfcnvrt$890+1)^0100h
  4980  0D26  00A1               	movlb 0	; select bank0
  4981  0D27  0140               	movf	(0+(?_isdigit)),w
  4982  0D28  0820               	movlb 2	; select bank2
  4983  0D29  0142               	movwf	(_vfpfcnvrt$890)^0100h
  4984  0D2A  00A0               	goto	l4175
  4985  0D2B  2D2C               	
  4986                           l492:	
  4987  0D2C                     	
  4988                           l4175:	
  4989  0D2C                     	movf	((_vfpfcnvrt$890)^0100h),w
  4990  0D2C  0820               iorwf	((_vfpfcnvrt$890+1)^0100h),w
  4991  0D2D  0421               	btfss	status,2
  4992  0D2E  1D03               	goto	u5911
  4993  0D2F  2D31               	goto	u5910
  4994  0D30  2D32               u5911:
  4995  0D31                     	goto	l4169
  4996  0D31  2CD5               u5910:
  4997  0D32                     	goto	l4177
  4998  0D32  2D34               	
  4999                           l493:	
  5000  0D33                     	goto	l4177
  5001  0D33  2D34               	line	735
  5002                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 735:       
                                   }
  5003                           	
  5004                           l486:	
  5005  0D34                     	line	740
  5006                           	
  5007                           l4177:	
  5008  0D34                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 740:       
                                   if ((*fmt)[0] == '.') {
  5009                           	movlb 1	; select bank1
  5010  0D34  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5011  0D35  0868               	movwf	fsr1l
  5012  0D36  0086               	movlw 1	; select bank2/3
  5013  0D37  3001               	movwf fsr1h	
  5014  0D38  0087               	
  5015                           	moviw	[0]fsr1
  5016  0D39  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5017  0D3A  00EA               	moviw	[1]fsr1
  5018  0D3B  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5019  0D3C  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5020  0D3D  086A               	movwf	fsr0l
  5021  0D3E  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5022  0D3F  086B               	movwf	fsr0h
  5023  0D40  0085               	moviw	fsr0++
  5024  0D41  0012               xorlw	46
  5025  0D42  3A2E               	btfss	status,2
  5026  0D43  1D03               	goto	u5921
  5027  0D44  2D46               	goto	u5920
  5028  0D45  2D47               u5921:
  5029  0D46                     	goto	l4199
  5030  0D46  2DF5               u5920:
  5031  0D47                     	line	741
  5032                           	
  5033                           l4179:	
  5034  0D47                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 741:       
                                       prec = 0;
  5035                           	movlb 2	; select bank2
  5036  0D47  0142               	clrf	(_prec)^0100h
  5037  0D48  01E6               	clrf	(_prec+1)^0100h
  5038  0D49  01E7               	line	742
  5039                           	
  5040                           l4181:	
  5041  0D4A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 742:       
                                       ++*fmt;
  5042                           	movlb 1	; select bank1
  5043  0D4A  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5044  0D4B  0868               	movwf	fsr1l
  5045  0D4C  0086               	movlw 1	; select bank2/3
  5046  0D4D  3001               	movwf fsr1h	
  5047  0D4E  0087               	
  5048                           	movlw	01h
  5049  0D4F  3001               	addwf	indf1,f
  5050  0D50  0781               	addfsr	fsr1,1
  5051  0D51  3141               	skipnc
  5052  0D52  1803               	incf	indf1,f
  5053  0D53  0A81               	line	743
  5054                           	
  5055                           l4183:	
  5056  0D54                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 743:       
                                       if ((*fmt)[0] == '*') {
  5057                           	movf	(vfpfcnvrt@fmt)^080h,w
  5058  0D54  0868               	movwf	fsr1l
  5059  0D55  0086               	movlw 1	; select bank2/3
  5060  0D56  3001               	movwf fsr1h	
  5061  0D57  0087               	
  5062                           	moviw	[0]fsr1
  5063  0D58  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5064  0D59  00EA               	moviw	[1]fsr1
  5065  0D5A  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5066  0D5B  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5067  0D5C  086A               	movwf	fsr0l
  5068  0D5D  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5069  0D5E  086B               	movwf	fsr0h
  5070  0D5F  0085               	moviw	fsr0++
  5071  0D60  0012               xorlw	42
  5072  0D61  3A2A               	btfss	status,2
  5073  0D62  1D03               	goto	u5931
  5074  0D63  2D65               	goto	u5930
  5075  0D64  2D66               u5931:
  5076  0D65                     	goto	l4189
  5077  0D65  2D7F               u5930:
  5078  0D66                     	line	744
  5079                           	
  5080                           l4185:	
  5081  0D66                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 744:       
                                           ++*fmt;
  5082                           	movf	(vfpfcnvrt@fmt)^080h,w
  5083  0D66  0868               	movwf	fsr1l
  5084  0D67  0086               	movlw 1	; select bank2/3
  5085  0D68  3001               	movwf fsr1h	
  5086  0D69  0087               	
  5087                           	movlw	01h
  5088  0D6A  3001               	addwf	indf1,f
  5089  0D6B  0781               	addfsr	fsr1,1
  5090  0D6C  3141               	skipnc
  5091  0D6D  1803               	incf	indf1,f
  5092  0D6E  0A81               	line	745
  5093                           	
  5094                           l4187:	
  5095  0D6F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 745:       
                                           prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  5096                           	movf	(vfpfcnvrt@ap)^080h,w
  5097  0D6F  0869               	movwf	fsr1l
  5098  0D70  0086               	movlw 1	; select bank2/3
  5099  0D71  3001               	movwf fsr1h	
  5100  0D72  0087               	
  5101                           	movf	indf1,w
  5102  0D73  0801               	movwf	fsr0l
  5103  0D74  0084               	movlw 1	; select bank2/3
  5104  0D75  3001               	movwf fsr0h	
  5105  0D76  0085               	
  5106                           	movlw	02h
  5107  0D77  3002               	addwf	indf1,f
  5108  0D78  0781               	moviw	[0]fsr0
  5109  0D79  3F00               	movlb 2	; select bank2
  5110  0D7A  0142               	movwf	(_prec)^0100h
  5111  0D7B  00E6               	moviw	[1]fsr0
  5112  0D7C  3F01               	movwf	(_prec+1)^0100h
  5113  0D7D  00E7               	line	746
  5114                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 746:       
                                       } else {
  5115                           	goto	l4199
  5116  0D7E  2DF5               	
  5117                           l495:	
  5118  0D7F                     	line	747
  5119                           	
  5120                           l4189:	
  5121  0D7F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 747:       
                                           prec = atoi(*fmt);
  5122                           	movlb 1	; select bank1
  5123  0D7F  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5124  0D80  0868               	movwf	fsr1l
  5125  0D81  0086               	movlw 1	; select bank2/3
  5126  0D82  3001               	movwf fsr1h	
  5127  0D83  0087               	
  5128                           	moviw	[0]fsr1
  5129  0D84  3F40               	movlb 0	; select bank0
  5130  0D85  0140               	movwf	(atoi@s)
  5131  0D86  00A6               	moviw	[1]fsr1
  5132  0D87  3F41               	movwf	(atoi@s+1)
  5133  0D88  00A7               	fcall	_atoi
  5134  0D89  3191  2154  318C   	movlb 0	; select bank0
  5135  0D8C  0140               	movf	(1+(?_atoi)),w
  5136  0D8D  0827               	movlb 2	; select bank2
  5137  0D8E  0142               	movwf	(_prec+1)^0100h
  5138  0D8F  00E7               	movlb 0	; select bank0
  5139  0D90  0140               	movf	(0+(?_atoi)),w
  5140  0D91  0826               	movlb 2	; select bank2
  5141  0D92  0142               	movwf	(_prec)^0100h
  5142  0D93  00E6               	line	748
  5143                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 748:       
                                           while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5144                           	goto	l4193
  5145  0D94  2DA0               	
  5146                           l498:	
  5147  0D95                     	line	749
  5148                           	
  5149                           l4191:	
  5150  0D95                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 749:       
                                               ++*fmt;
  5151                           	movlb 1	; select bank1
  5152  0D95  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5153  0D96  0868               	movwf	fsr1l
  5154  0D97  0086               	movlw 1	; select bank2/3
  5155  0D98  3001               	movwf fsr1h	
  5156  0D99  0087               	
  5157                           	movlw	01h
  5158  0D9A  3001               	addwf	indf1,f
  5159  0D9B  0781               	addfsr	fsr1,1
  5160  0D9C  3141               	skipnc
  5161  0D9D  1803               	incf	indf1,f
  5162  0D9E  0A81               	goto	l4193
  5163  0D9F  2DA0               	line	750
  5164                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 748:       
                                           while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5165                           	
  5166                           l497:	
  5167  0DA0                     	line	748
  5168                           	
  5169                           l4193:	
  5170  0DA0                     	movlb 1	; select bank1
  5171  0DA0  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5172  0DA1  0868               	movwf	fsr1l
  5173  0DA2  0086               	movlw 1	; select bank2/3
  5174  0DA3  3001               	movwf fsr1h	
  5175  0DA4  0087               	
  5176                           	moviw	[0]fsr1
  5177  0DA5  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5178  0DA6  00EA               	moviw	[1]fsr1
  5179  0DA7  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5180  0DA8  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5181  0DA9  086A               	movwf	fsr0l
  5182  0DAA  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5183  0DAB  086B               	movwf	fsr0h
  5184  0DAC  0085               	movf	indf0,w ;code access
  5185  0DAD  0800               	addlw	low(0FFD0h)
  5186  0DAE  3ED0               	movwf	(??_vfpfcnvrt+2)^080h+0
  5187  0DAF  00EC               	movlw	high(0FFD0h)
  5188  0DB0  30FF               	skipnc
  5189  0DB1  1803               	movlw	(high(0FFD0h)+1)&0ffh
  5190  0DB2  3000               	movwf	((??_vfpfcnvrt+2)^080h+0)+1
  5191  0DB3  00ED               	movlw	0
  5192  0DB4  3000               	subwf	1+(??_vfpfcnvrt+2)^080h+0,w
  5193  0DB5  026D               	movlw	0Ah
  5194  0DB6  300A               	skipnz
  5195  0DB7  1903               	subwf	0+(??_vfpfcnvrt+2)^080h+0,w
  5196  0DB8  026C               	skipc
  5197  0DB9  1C03               	goto	u5941
  5198  0DBA  2DBC               	goto	u5940
  5199  0DBB  2DBE               u5941:
  5200  0DBC                     	movlw	1
  5201  0DBC  3001               	goto	u5950
  5202  0DBD  2DBF               u5940:
  5203  0DBE                     	movlw	0
  5204  0DBE  3000               u5950:
  5205  0DBF                     	movwf	(??_vfpfcnvrt+4)^080h+0
  5206  0DBF  00EE               	clrf	(??_vfpfcnvrt+4)^080h+0+1
  5207  0DC0  01EF               	movf	0+(??_vfpfcnvrt+4)^080h+0,w
  5208  0DC1  086E               	movlb 2	; select bank2
  5209  0DC2  0142               	movwf	(_vfpfcnvrt$891)^0100h
  5210  0DC3  00A2               	movlb 1	; select bank1
  5211  0DC4  0141               	movf	1+(??_vfpfcnvrt+4)^080h+0,w
  5212  0DC5  086F               	movlb 2	; select bank2
  5213  0DC6  0142               	movwf	(_vfpfcnvrt$891+1)^0100h
  5214  0DC7  00A3               	goto	l4197
  5215  0DC8  2DEC               	
  5216                           l500:	
  5217  0DC9                     	
  5218                           l4195:	
  5219  0DC9                     	movlb 1	; select bank1
  5220  0DC9  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5221  0DCA  0868               	movwf	fsr1l
  5222  0DCB  0086               	movlw 1	; select bank2/3
  5223  0DCC  3001               	movwf fsr1h	
  5224  0DCD  0087               	
  5225                           	moviw	[0]fsr1
  5226  0DCE  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5227  0DCF  00EA               	moviw	[1]fsr1
  5228  0DD0  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5229  0DD1  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5230  0DD2  086A               	movwf	fsr0l
  5231  0DD3  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5232  0DD4  086B               	movwf	fsr0h
  5233  0DD5  0085               	movf	indf0,w ;code access
  5234  0DD6  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  5235  0DD7  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  5236  0DD8  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  5237  0DD9  086C               	movlb 0	; select bank0
  5238  0DDA  0140               	movwf	(isdigit@c)
  5239  0DDB  00A0               	movlb 1	; select bank1
  5240  0DDC  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  5241  0DDD  086D               	movlb 0	; select bank0
  5242  0DDE  0140               	movwf	(isdigit@c+1)
  5243  0DDF  00A1               	fcall	_isdigit
  5244  0DE0  31A6  26A1  318C   	movlb 0	; select bank0
  5245  0DE3  0140               	movf	(1+(?_isdigit)),w
  5246  0DE4  0821               	movlb 2	; select bank2
  5247  0DE5  0142               	movwf	(_vfpfcnvrt$891+1)^0100h
  5248  0DE6  00A3               	movlb 0	; select bank0
  5249  0DE7  0140               	movf	(0+(?_isdigit)),w
  5250  0DE8  0820               	movlb 2	; select bank2
  5251  0DE9  0142               	movwf	(_vfpfcnvrt$891)^0100h
  5252  0DEA  00A2               	goto	l4197
  5253  0DEB  2DEC               	
  5254                           l502:	
  5255  0DEC                     	
  5256                           l4197:	
  5257  0DEC                     	movf	((_vfpfcnvrt$891)^0100h),w
  5258  0DEC  0822               iorwf	((_vfpfcnvrt$891+1)^0100h),w
  5259  0DED  0423               	btfss	status,2
  5260  0DEE  1D03               	goto	u5961
  5261  0DEF  2DF1               	goto	u5960
  5262  0DF0  2DF2               u5961:
  5263  0DF1                     	goto	l4191
  5264  0DF1  2D95               u5960:
  5265  0DF2                     	goto	l4199
  5266  0DF2  2DF5               	
  5267                           l503:	
  5268  0DF3                     	goto	l4199
  5269  0DF3  2DF5               	line	751
  5270                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 751:       
                                       }
  5271                           	
  5272                           l496:	
  5273  0DF4                     	goto	l4199
  5274  0DF4  2DF5               	line	752
  5275                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 752:       
                                   }
  5276                           	
  5277                           l494:	
  5278  0DF5                     	line	757
  5279                           	
  5280                           l4199:	
  5281  0DF5                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 757:       
                                   ct[0] = tolower((int)(*fmt)[0]);
  5282                           	movlb 1	; select bank1
  5283  0DF5  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5284  0DF6  0868               	movwf	fsr1l
  5285  0DF7  0086               	movlw 1	; select bank2/3
  5286  0DF8  3001               	movwf fsr1h	
  5287  0DF9  0087               	
  5288                           	moviw	[0]fsr1
  5289  0DFA  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5290  0DFB  00EA               	moviw	[1]fsr1
  5291  0DFC  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5292  0DFD  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5293  0DFE  086A               	movwf	fsr0l
  5294  0DFF  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5295  0E00  086B               	movwf	fsr0h
  5296  0E01  0085               	movf	indf0,w ;code access
  5297  0E02  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  5298  0E03  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  5299  0E04  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  5300  0E05  086C               	movlb 0	; select bank0
  5301  0E06  0140               	movwf	(tolower@c)
  5302  0E07  00A6               	movlb 1	; select bank1
  5303  0E08  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  5304  0E09  086D               	movlb 0	; select bank0
  5305  0E0A  0140               	movwf	(tolower@c+1)
  5306  0E0B  00A7               	fcall	_tolower
  5307  0E0C  3198  2092  318C   	movlb 0	; select bank0
  5308  0E0F  0140               	movf	(0+(?_tolower)),w
  5309  0E10  0826               	movlb 1	; select bank1
  5310  0E11  0141               	movwf	(??_vfpfcnvrt+4)^080h+0
  5311  0E12  00EE               	movf	(??_vfpfcnvrt+4)^080h+0,w
  5312  0E13  086E               	movlb 2	; select bank2
  5313  0E14  0142               	movwf	(vfpfcnvrt@ct)^0100h
  5314  0E15  00AA               	line	758
  5315                           	
  5316                           l4201:	
  5317  0E16                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 758:       
                                   if (ct[0]) {
  5318                           	movf	((vfpfcnvrt@ct)^0100h),w
  5319  0E16  082A               	btfsc	status,2
  5320  0E17  1903               	goto	u5971
  5321  0E18  2E1A               	goto	u5970
  5322  0E19  2E1B               u5971:
  5323  0E1A                     	goto	l4209
  5324  0E1A  2E6A               u5970:
  5325  0E1B                     	line	759
  5326                           	
  5327                           l4203:	
  5328  0E1B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 759:       
                                       ct[1] = tolower((int)(*fmt)[1]);
  5329                           	movlb 1	; select bank1
  5330  0E1B  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5331  0E1C  0868               	movwf	fsr1l
  5332  0E1D  0086               	movlw 1	; select bank2/3
  5333  0E1E  3001               	movwf fsr1h	
  5334  0E1F  0087               	
  5335                           	moviw	[0]fsr1
  5336  0E20  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5337  0E21  00EA               	moviw	[1]fsr1
  5338  0E22  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5339  0E23  00EB               	movlw	01h
  5340  0E24  3001               	addwf	(??_vfpfcnvrt+0)^080h+0,w
  5341  0E25  076A               	movwf	fsr0l
  5342  0E26  0084               	movf	(??_vfpfcnvrt+0)^080h+1,w
  5343  0E27  086B               	skipnc
  5344  0E28  1803               	incf	(??_vfpfcnvrt+0)^080h+1,w
  5345  0E29  0A6B               	movwf	fsr0h
  5346  0E2A  0085               
  5347                           	movf	indf0,w ;code access
  5348  0E2B  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  5349  0E2C  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  5350  0E2D  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  5351  0E2E  086C               	movlb 0	; select bank0
  5352  0E2F  0140               	movwf	(tolower@c)
  5353  0E30  00A6               	movlb 1	; select bank1
  5354  0E31  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  5355  0E32  086D               	movlb 0	; select bank0
  5356  0E33  0140               	movwf	(tolower@c+1)
  5357  0E34  00A7               	fcall	_tolower
  5358  0E35  3198  2092  318C   	movlb 0	; select bank0
  5359  0E38  0140               	movf	(0+(?_tolower)),w
  5360  0E39  0826               	movlb 1	; select bank1
  5361  0E3A  0141               	movwf	(??_vfpfcnvrt+4)^080h+0
  5362  0E3B  00EE               	movf	(??_vfpfcnvrt+4)^080h+0,w
  5363  0E3C  086E               	movlb 2	; select bank2
  5364  0E3D  0142               	movwf	0+(vfpfcnvrt@ct)^0100h+01h
  5365  0E3E  00AB               	line	760
  5366                           	
  5367                           l4205:	
  5368  0E3F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 760:       
                                       if (ct[1]) {
  5369                           	movf	(0+(vfpfcnvrt@ct)^0100h+01h),w
  5370  0E3F  082B               	btfsc	status,2
  5371  0E40  1903               	goto	u5981
  5372  0E41  2E43               	goto	u5980
  5373  0E42  2E44               u5981:
  5374  0E43                     	goto	l4209
  5375  0E43  2E6A               u5980:
  5376  0E44                     	line	761
  5377                           	
  5378                           l4207:	
  5379  0E44                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 761:       
                                           ct[2] = tolower((int)(*fmt)[2]);
  5380                           	movlb 1	; select bank1
  5381  0E44  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5382  0E45  0868               	movwf	fsr1l
  5383  0E46  0086               	movlw 1	; select bank2/3
  5384  0E47  3001               	movwf fsr1h	
  5385  0E48  0087               	
  5386                           	moviw	[0]fsr1
  5387  0E49  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5388  0E4A  00EA               	moviw	[1]fsr1
  5389  0E4B  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5390  0E4C  00EB               	movlw	02h
  5391  0E4D  3002               	addwf	(??_vfpfcnvrt+0)^080h+0,w
  5392  0E4E  076A               	movwf	fsr0l
  5393  0E4F  0084               	movf	(??_vfpfcnvrt+0)^080h+1,w
  5394  0E50  086B               	skipnc
  5395  0E51  1803               	incf	(??_vfpfcnvrt+0)^080h+1,w
  5396  0E52  0A6B               	movwf	fsr0h
  5397  0E53  0085               
  5398                           	movf	indf0,w ;code access
  5399  0E54  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  5400  0E55  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  5401  0E56  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  5402  0E57  086C               	movlb 0	; select bank0
  5403  0E58  0140               	movwf	(tolower@c)
  5404  0E59  00A6               	movlb 1	; select bank1
  5405  0E5A  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  5406  0E5B  086D               	movlb 0	; select bank0
  5407  0E5C  0140               	movwf	(tolower@c+1)
  5408  0E5D  00A7               	fcall	_tolower
  5409  0E5E  3198  2092  318C   	movlb 0	; select bank0
  5410  0E61  0140               	movf	(0+(?_tolower)),w
  5411  0E62  0826               	movlb 1	; select bank1
  5412  0E63  0141               	movwf	(??_vfpfcnvrt+4)^080h+0
  5413  0E64  00EE               	movf	(??_vfpfcnvrt+4)^080h+0,w
  5414  0E65  086E               	movlb 2	; select bank2
  5415  0E66  0142               	movwf	0+(vfpfcnvrt@ct)^0100h+02h
  5416  0E67  00AC               	goto	l4209
  5417  0E68  2E6A               	line	762
  5418                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 762:       
                                       }
  5419                           	
  5420                           l505:	
  5421  0E69                     	goto	l4209
  5422  0E69  2E6A               	line	763
  5423                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 763:       
                                   }
  5424                           	
  5425                           l504:	
  5426  0E6A                     	line	920
  5427                           	
  5428                           l4209:	
  5429  0E6A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 920:       
                                   if (ct[0] == 'f') {
  5430                           		movlw	102
  5431  0E6A  3066               	xorwf	((vfpfcnvrt@ct)^0100h),w
  5432  0E6B  062A               	btfss	status,2
  5433  0E6C  1D03               	goto	u5991
  5434  0E6D  2E6F               	goto	u5990
  5435  0E6E  2E70               u5991:
  5436  0E6F                     	goto	l4221
  5437  0E6F  2EC0               u5990:
  5438  0E70                     	line	922
  5439                           	
  5440                           l4211:	
  5441  0E70                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 922:       
                                       c = (*fmt)[0];
  5442                           	movlb 1	; select bank1
  5443  0E70  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5444  0E71  0868               	movwf	fsr1l
  5445  0E72  0086               	movlw 1	; select bank2/3
  5446  0E73  3001               	movwf fsr1h	
  5447  0E74  0087               	
  5448                           	moviw	[0]fsr1
  5449  0E75  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5450  0E76  00EA               	moviw	[1]fsr1
  5451  0E77  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5452  0E78  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5453  0E79  086A               	movwf	fsr0l
  5454  0E7A  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5455  0E7B  086B               	movwf	fsr0h
  5456  0E7C  0085               	movf	indf0,w ;code access
  5457  0E7D  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  5458  0E7E  00EC               	movf	(??_vfpfcnvrt+2)^080h+0,w
  5459  0E7F  086C               	movlb 2	; select bank2
  5460  0E80  0142               	movwf	(vfpfcnvrt@c)^0100h
  5461  0E81  00AD               	line	923
  5462                           	
  5463                           l4213:	
  5464  0E82                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 923:       
                                       ++*fmt;
  5465                           	movlb 1	; select bank1
  5466  0E82  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5467  0E83  0868               	movwf	fsr1l
  5468  0E84  0086               	movlw 1	; select bank2/3
  5469  0E85  3001               	movwf fsr1h	
  5470  0E86  0087               	
  5471                           	movlw	01h
  5472  0E87  3001               	addwf	indf1,f
  5473  0E88  0781               	addfsr	fsr1,1
  5474  0E89  3141               	skipnc
  5475  0E8A  1803               	incf	indf1,f
  5476  0E8B  0A81               	line	924
  5477                           	
  5478                           l4215:	
  5479  0E8C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 924:       
                                       f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5480                           	movf	(vfpfcnvrt@ap)^080h,w
  5481  0E8C  0869               	movwf	fsr1l
  5482  0E8D  0086               	movlw 1	; select bank2/3
  5483  0E8E  3001               	movwf fsr1h	
  5484  0E8F  0087               	
  5485                           	movf	indf1,w
  5486  0E90  0801               	movwf	fsr0l
  5487  0E91  0084               	movlw 1	; select bank2/3
  5488  0E92  3001               	movwf fsr0h	
  5489  0E93  0085               	
  5490                           	movlw	04h
  5491  0E94  3004               	addwf	indf1,f
  5492  0E95  0781               	moviw	[0]fsr0
  5493  0E96  3F00               	movlb 2	; select bank2
  5494  0E97  0142               	movwf	(vfpfcnvrt@f)^0100h
  5495  0E98  00A6               	moviw	[1]fsr0
  5496  0E99  3F01               	movwf	(vfpfcnvrt@f+1)^0100h
  5497  0E9A  00A7               	moviw	[2]fsr0
  5498  0E9B  3F02               	movwf	(vfpfcnvrt@f+2)^0100h
  5499  0E9C  00A8               	moviw	[3]fsr0
  5500  0E9D  3F03               	movwf	(vfpfcnvrt@f+3)^0100h
  5501  0E9E  00A9               	line	926
  5502                           	
  5503                           l4217:	
  5504  0E9F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 926:       
                                       return efgtoa(fp, f, c);
  5505                           	movf	(vfpfcnvrt@f+3)^0100h,w
  5506  0E9F  0829               	movlb 1	; select bank1
  5507  0EA0  0141               	movwf	(efgtoa@f+3)^080h
  5508  0EA1  00AD               	movlb 2	; select bank2
  5509  0EA2  0142               	movf	(vfpfcnvrt@f+2)^0100h,w
  5510  0EA3  0828               	movlb 1	; select bank1
  5511  0EA4  0141               	movwf	(efgtoa@f+2)^080h
  5512  0EA5  00AC               	movlb 2	; select bank2
  5513  0EA6  0142               	movf	(vfpfcnvrt@f+1)^0100h,w
  5514  0EA7  0827               	movlb 1	; select bank1
  5515  0EA8  0141               	movwf	(efgtoa@f+1)^080h
  5516  0EA9  00AB               	movlb 2	; select bank2
  5517  0EAA  0142               	movf	(vfpfcnvrt@f)^0100h,w
  5518  0EAB  0826               	movlb 1	; select bank1
  5519  0EAC  0141               	movwf	(efgtoa@f)^080h
  5520  0EAD  00AA               
  5521                           	movlb 2	; select bank2
  5522  0EAE  0142               	movf	(vfpfcnvrt@c)^0100h,w
  5523  0EAF  082D               	movlb 1	; select bank1
  5524  0EB0  0141               	movwf	(??_vfpfcnvrt+0)^080h+0
  5525  0EB1  00EA               	movf	(??_vfpfcnvrt+0)^080h+0,w
  5526  0EB2  086A               	movwf	(efgtoa@c)^080h
  5527  0EB3  00AE               	movlb 2	; select bank2
  5528  0EB4  0142               	movf	(vfpfcnvrt@fp)^0100h,w
  5529  0EB5  082E               	fcall	_efgtoa
  5530  0EB6  3193  2334  318C   	movlb 1	; select bank1
  5531  0EB9  0141               	movf	(1+(?_efgtoa))^080h,w
  5532  0EBA  082B               	movwf	(?_vfpfcnvrt+1)^080h
  5533  0EBB  00E9               	movf	(0+(?_efgtoa))^080h,w
  5534  0EBC  082A               	movwf	(?_vfpfcnvrt)^080h
  5535  0EBD  00E8               	goto	l507
  5536  0EBE  2FFF               	
  5537                           l4219:	
  5538  0EBF                     	goto	l507
  5539  0EBF  2FFF               	line	927
  5540                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 927:       
                                   }
  5541                           	
  5542                           l506:	
  5543  0EC0                     	line	928
  5544                           	
  5545                           l4221:	
  5546  0EC0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 928:       
                                   if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  5547                           	movlw	low(((STR_14)|8000h))
  5548  0EC0  3010               	movlb 0	; select bank0
  5549  0EC1  0140               	movwf	(strncmp@_r)
  5550  0EC2  00A0               	movlw	high(((STR_14)|8000h))
  5551  0EC3  30A8               	movwf	((strncmp@_r))+1
  5552  0EC4  00A1               	movlw	02h
  5553  0EC5  3002               	movwf	(strncmp@n)
  5554  0EC6  00A2               	movlw	0
  5555  0EC7  3000               	movwf	((strncmp@n))+1
  5556  0EC8  00A3               	movlw	(low(vfpfcnvrt@ct|((0x1)<<8)))&0ffh
  5557  0EC9  302A               	fcall	_strncmp
  5558  0ECA  319C  2473  318C   	movlb 0	; select bank0
  5559  0ECD  0140               	movf	((0+(?_strncmp))),w
  5560  0ECE  0820               iorwf	((1+(?_strncmp))),w
  5561  0ECF  0421               	btfss	status,2
  5562  0ED0  1D03               	goto	u6001
  5563  0ED1  2ED3               	goto	u6000
  5564  0ED2  2ED4               u6001:
  5565  0ED3                     	goto	l4239
  5566  0ED3  2F91               u6000:
  5567  0ED4                     	line	930
  5568                           	
  5569                           l4223:	
  5570  0ED4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 931:       
                                       if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  5571                           	movlb 1	; select bank1
  5572  0ED4  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5573  0ED5  0868               	movwf	fsr1l
  5574  0ED6  0086               	movlw 1	; select bank2/3
  5575  0ED7  3001               	movwf fsr1h	
  5576  0ED8  0087               	
  5577                           	moviw	[0]fsr1
  5578  0ED9  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5579  0EDA  00EA               	moviw	[1]fsr1
  5580  0EDB  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5581  0EDC  00EB               	movlw	01h
  5582  0EDD  3001               	addwf	(??_vfpfcnvrt+0)^080h+0,w
  5583  0EDE  076A               	movwf	fsr0l
  5584  0EDF  0084               	movf	(??_vfpfcnvrt+0)^080h+1,w
  5585  0EE0  086B               	skipnc
  5586  0EE1  1803               	incf	(??_vfpfcnvrt+0)^080h+1,w
  5587  0EE2  0A6B               	movwf	fsr0h
  5588  0EE3  0085               
  5589                           	movf	indf0,w ;code access
  5590  0EE4  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  5591  0EE5  00EC               	movf	(??_vfpfcnvrt+2)^080h+0,w
  5592  0EE6  086C               	movlb 2	; select bank2
  5593  0EE7  0142               	movwf	(vfpfcnvrt@c)^0100h
  5594  0EE8  00AD               	line	931
  5595                           	movlb 1	; select bank1
  5596  0EE9  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5597  0EEA  0868               	movwf	fsr1l
  5598  0EEB  0086               	movlw 1	; select bank2/3
  5599  0EEC  3001               	movwf fsr1h	
  5600  0EED  0087               	
  5601                           	moviw	[0]fsr1
  5602  0EEE  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5603  0EEF  00EA               	moviw	[1]fsr1
  5604  0EF0  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5605  0EF1  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5606  0EF2  086A               	movwf	fsr0l
  5607  0EF3  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5608  0EF4  086B               	movwf	fsr0h
  5609  0EF5  0085               	movf	indf0,w ;code access
  5610  0EF6  0800               	addlw	low(0FFBFh)
  5611  0EF7  3EBF               	movwf	(??_vfpfcnvrt+2)^080h+0
  5612  0EF8  00EC               	movlw	high(0FFBFh)
  5613  0EF9  30FF               	skipnc
  5614  0EFA  1803               	movlw	(high(0FFBFh)+1)&0ffh
  5615  0EFB  3000               	movwf	((??_vfpfcnvrt+2)^080h+0)+1
  5616  0EFC  00ED               	movlw	0
  5617  0EFD  3000               	subwf	1+(??_vfpfcnvrt+2)^080h+0,w
  5618  0EFE  026D               	movlw	01Ah
  5619  0EFF  301A               	skipnz
  5620  0F00  1903               	subwf	0+(??_vfpfcnvrt+2)^080h+0,w
  5621  0F01  026C               	skipc
  5622  0F02  1C03               	goto	u6011
  5623  0F03  2F05               	goto	u6010
  5624  0F04  2F07               u6011:
  5625  0F05                     	movlw	1
  5626  0F05  3001               	goto	u6020
  5627  0F06  2F08               u6010:
  5628  0F07                     	movlw	0
  5629  0F07  3000               u6020:
  5630  0F08                     	movwf	(??_vfpfcnvrt+4)^080h+0
  5631  0F08  00EE               	clrf	(??_vfpfcnvrt+4)^080h+0+1
  5632  0F09  01EF               	movf	0+(??_vfpfcnvrt+4)^080h+0,w
  5633  0F0A  086E               	movlb 2	; select bank2
  5634  0F0B  0142               	movwf	(_vfpfcnvrt$895)^0100h
  5635  0F0C  00A4               	movlb 1	; select bank1
  5636  0F0D  0141               	movf	1+(??_vfpfcnvrt+4)^080h+0,w
  5637  0F0E  086F               	movlb 2	; select bank2
  5638  0F0F  0142               	movwf	(_vfpfcnvrt$895+1)^0100h
  5639  0F10  00A5               	goto	l4227
  5640  0F11  2F35               	
  5641                           l511:	
  5642  0F12                     	
  5643                           l4225:	
  5644  0F12                     	movlb 1	; select bank1
  5645  0F12  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5646  0F13  0868               	movwf	fsr1l
  5647  0F14  0086               	movlw 1	; select bank2/3
  5648  0F15  3001               	movwf fsr1h	
  5649  0F16  0087               	
  5650                           	moviw	[0]fsr1
  5651  0F17  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5652  0F18  00EA               	moviw	[1]fsr1
  5653  0F19  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5654  0F1A  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5655  0F1B  086A               	movwf	fsr0l
  5656  0F1C  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5657  0F1D  086B               	movwf	fsr0h
  5658  0F1E  0085               	movf	indf0,w ;code access
  5659  0F1F  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  5660  0F20  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  5661  0F21  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  5662  0F22  086C               	movlb 0	; select bank0
  5663  0F23  0140               	movwf	(isupper@c)
  5664  0F24  00A0               	movlb 1	; select bank1
  5665  0F25  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  5666  0F26  086D               	movlb 0	; select bank0
  5667  0F27  0140               	movwf	(isupper@c+1)
  5668  0F28  00A1               	fcall	_isupper
  5669  0F29  31A6  26BB  318C   	movlb 0	; select bank0
  5670  0F2C  0140               	movf	(1+(?_isupper)),w
  5671  0F2D  0821               	movlb 2	; select bank2
  5672  0F2E  0142               	movwf	(_vfpfcnvrt$895+1)^0100h
  5673  0F2F  00A5               	movlb 0	; select bank0
  5674  0F30  0140               	movf	(0+(?_isupper)),w
  5675  0F31  0820               	movlb 2	; select bank2
  5676  0F32  0142               	movwf	(_vfpfcnvrt$895)^0100h
  5677  0F33  00A4               	goto	l4227
  5678  0F34  2F35               	
  5679                           l513:	
  5680  0F35                     	
  5681                           l4227:	
  5682  0F35                     	movf	((_vfpfcnvrt$895)^0100h),w
  5683  0F35  0824               iorwf	((_vfpfcnvrt$895+1)^0100h),w
  5684  0F36  0425               	btfsc	status,2
  5685  0F37  1903               	goto	u6031
  5686  0F38  2F3A               	goto	u6030
  5687  0F39  2F3B               u6031:
  5688  0F3A                     	goto	l4231
  5689  0F3A  2F50               u6030:
  5690  0F3B                     	line	932
  5691                           	
  5692                           l4229:	
  5693  0F3B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 932:       
                                           f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5694                           	movlb 1	; select bank1
  5695  0F3B  0141               	movf	(vfpfcnvrt@ap)^080h,w
  5696  0F3C  0869               	movwf	fsr1l
  5697  0F3D  0086               	movlw 1	; select bank2/3
  5698  0F3E  3001               	movwf fsr1h	
  5699  0F3F  0087               	
  5700                           	movf	indf1,w
  5701  0F40  0801               	movwf	fsr0l
  5702  0F41  0084               	movlw 1	; select bank2/3
  5703  0F42  3001               	movwf fsr0h	
  5704  0F43  0085               	
  5705                           	movlw	04h
  5706  0F44  3004               	addwf	indf1,f
  5707  0F45  0781               	moviw	[0]fsr0
  5708  0F46  3F00               	movlb 2	; select bank2
  5709  0F47  0142               	movwf	(vfpfcnvrt@f)^0100h
  5710  0F48  00A6               	moviw	[1]fsr0
  5711  0F49  3F01               	movwf	(vfpfcnvrt@f+1)^0100h
  5712  0F4A  00A7               	moviw	[2]fsr0
  5713  0F4B  3F02               	movwf	(vfpfcnvrt@f+2)^0100h
  5714  0F4C  00A8               	moviw	[3]fsr0
  5715  0F4D  3F03               	movwf	(vfpfcnvrt@f+3)^0100h
  5716  0F4E  00A9               	line	933
  5717                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 933:       
                                       } else {
  5718                           	goto	l4233
  5719  0F4F  2F65               	
  5720                           l509:	
  5721  0F50                     	line	934
  5722                           	
  5723                           l4231:	
  5724  0F50                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 934:       
                                           f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5725                           	movlb 1	; select bank1
  5726  0F50  0141               	movf	(vfpfcnvrt@ap)^080h,w
  5727  0F51  0869               	movwf	fsr1l
  5728  0F52  0086               	movlw 1	; select bank2/3
  5729  0F53  3001               	movwf fsr1h	
  5730  0F54  0087               	
  5731                           	movf	indf1,w
  5732  0F55  0801               	movwf	fsr0l
  5733  0F56  0084               	movlw 1	; select bank2/3
  5734  0F57  3001               	movwf fsr0h	
  5735  0F58  0085               	
  5736                           	movlw	04h
  5737  0F59  3004               	addwf	indf1,f
  5738  0F5A  0781               	moviw	[0]fsr0
  5739  0F5B  3F00               	movlb 2	; select bank2
  5740  0F5C  0142               	movwf	(vfpfcnvrt@f)^0100h
  5741  0F5D  00A6               	moviw	[1]fsr0
  5742  0F5E  3F01               	movwf	(vfpfcnvrt@f+1)^0100h
  5743  0F5F  00A7               	moviw	[2]fsr0
  5744  0F60  3F02               	movwf	(vfpfcnvrt@f+2)^0100h
  5745  0F61  00A8               	moviw	[3]fsr0
  5746  0F62  3F03               	movwf	(vfpfcnvrt@f+3)^0100h
  5747  0F63  00A9               	goto	l4233
  5748  0F64  2F65               	line	935
  5749                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 935:       
                                       }
  5750                           	
  5751                           l514:	
  5752  0F65                     	line	936
  5753                           	
  5754                           l4233:	
  5755  0F65                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 936:       
                                       *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  5756                           	movlb 1	; select bank1
  5757  0F65  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5758  0F66  0868               	movwf	fsr1l
  5759  0F67  0086               	movlw 1	; select bank2/3
  5760  0F68  3001               	movwf fsr1h	
  5761  0F69  0087               	
  5762                           	movlw	02h
  5763  0F6A  3002               	addwf	indf1,f
  5764  0F6B  0781               	addfsr	fsr1,1
  5765  0F6C  3141               	skipnc
  5766  0F6D  1803               	incf	indf1,f
  5767  0F6E  0A81               	line	938
  5768                           	
  5769                           l4235:	
  5770  0F6F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 938:       
                                       return efgtoa(fp, f, c);
  5771                           	movlb 2	; select bank2
  5772  0F6F  0142               	movf	(vfpfcnvrt@f+3)^0100h,w
  5773  0F70  0829               	movlb 1	; select bank1
  5774  0F71  0141               	movwf	(efgtoa@f+3)^080h
  5775  0F72  00AD               	movlb 2	; select bank2
  5776  0F73  0142               	movf	(vfpfcnvrt@f+2)^0100h,w
  5777  0F74  0828               	movlb 1	; select bank1
  5778  0F75  0141               	movwf	(efgtoa@f+2)^080h
  5779  0F76  00AC               	movlb 2	; select bank2
  5780  0F77  0142               	movf	(vfpfcnvrt@f+1)^0100h,w
  5781  0F78  0827               	movlb 1	; select bank1
  5782  0F79  0141               	movwf	(efgtoa@f+1)^080h
  5783  0F7A  00AB               	movlb 2	; select bank2
  5784  0F7B  0142               	movf	(vfpfcnvrt@f)^0100h,w
  5785  0F7C  0826               	movlb 1	; select bank1
  5786  0F7D  0141               	movwf	(efgtoa@f)^080h
  5787  0F7E  00AA               
  5788                           	movlb 2	; select bank2
  5789  0F7F  0142               	movf	(vfpfcnvrt@c)^0100h,w
  5790  0F80  082D               	movlb 1	; select bank1
  5791  0F81  0141               	movwf	(??_vfpfcnvrt+0)^080h+0
  5792  0F82  00EA               	movf	(??_vfpfcnvrt+0)^080h+0,w
  5793  0F83  086A               	movwf	(efgtoa@c)^080h
  5794  0F84  00AE               	movlb 2	; select bank2
  5795  0F85  0142               	movf	(vfpfcnvrt@fp)^0100h,w
  5796  0F86  082E               	fcall	_efgtoa
  5797  0F87  3193  2334  318C   	movlb 1	; select bank1
  5798  0F8A  0141               	movf	(1+(?_efgtoa))^080h,w
  5799  0F8B  082B               	movwf	(?_vfpfcnvrt+1)^080h
  5800  0F8C  00E9               	movf	(0+(?_efgtoa))^080h,w
  5801  0F8D  082A               	movwf	(?_vfpfcnvrt)^080h
  5802  0F8E  00E8               	goto	l507
  5803  0F8F  2FFF               	
  5804                           l4237:	
  5805  0F90                     	goto	l507
  5806  0F90  2FFF               	line	939
  5807                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 939:       
                                   }
  5808                           	
  5809                           l508:	
  5810  0F91                     	line	1350
  5811                           	
  5812                           l4239:	
  5813  0F91                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1350:      
                                    if ((*fmt)[0] == '%') {
  5814                           	movlb 1	; select bank1
  5815  0F91  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5816  0F92  0868               	movwf	fsr1l
  5817  0F93  0086               	movlw 1	; select bank2/3
  5818  0F94  3001               	movwf fsr1h	
  5819  0F95  0087               	
  5820                           	moviw	[0]fsr1
  5821  0F96  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5822  0F97  00EA               	moviw	[1]fsr1
  5823  0F98  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5824  0F99  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5825  0F9A  086A               	movwf	fsr0l
  5826  0F9B  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5827  0F9C  086B               	movwf	fsr0h
  5828  0F9D  0085               	moviw	fsr0++
  5829  0F9E  0012               xorlw	37
  5830  0F9F  3A25               	btfss	status,2
  5831  0FA0  1D03               	goto	u6041
  5832  0FA1  2FA3               	goto	u6040
  5833  0FA2  2FA4               u6041:
  5834  0FA3                     	goto	l4249
  5835  0FA3  2FC3               u6040:
  5836  0FA4                     	line	1351
  5837                           	
  5838                           l4241:	
  5839  0FA4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1351:      
                                        ++*fmt;
  5840                           	movf	(vfpfcnvrt@fmt)^080h,w
  5841  0FA4  0868               	movwf	fsr1l
  5842  0FA5  0086               	movlw 1	; select bank2/3
  5843  0FA6  3001               	movwf fsr1h	
  5844  0FA7  0087               	
  5845                           	movlw	01h
  5846  0FA8  3001               	addwf	indf1,f
  5847  0FA9  0781               	addfsr	fsr1,1
  5848  0FAA  3141               	skipnc
  5849  0FAB  1803               	incf	indf1,f
  5850  0FAC  0A81               	line	1352
  5851                           	
  5852                           l4243:	
  5853  0FAD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1352:      
                                        fputc((int)'%', fp);
  5854                           	movlw	025h
  5855  0FAD  3025               	movlb 0	; select bank0
  5856  0FAE  0140               	movwf	(fputc@c)
  5857  0FAF  00A0               	movlw	0
  5858  0FB0  3000               	movwf	((fputc@c))+1
  5859  0FB1  00A1               	movlb 2	; select bank2
  5860  0FB2  0142               	movf	(vfpfcnvrt@fp)^0100h,w
  5861  0FB3  082E               	movlb 1	; select bank1
  5862  0FB4  0141               	movwf	(??_vfpfcnvrt+0)^080h+0
  5863  0FB5  00EA               	movf	(??_vfpfcnvrt+0)^080h+0,w
  5864  0FB6  086A               	movlb 0	; select bank0
  5865  0FB7  0140               	movwf	(fputc@fp)
  5866  0FB8  00A2               	fcall	_fputc
  5867  0FB9  319B  23AB  318C   	line	1353
  5868                           	
  5869                           l4245:	
  5870  0FBC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1353:      
                                        return 1;
  5871                           	movlw	01h
  5872  0FBC  3001               	movlb 1	; select bank1
  5873  0FBD  0141               	movwf	(?_vfpfcnvrt)^080h
  5874  0FBE  00E8               	movlw	0
  5875  0FBF  3000               	movwf	((?_vfpfcnvrt)^080h)+1
  5876  0FC0  00E9               	goto	l507
  5877  0FC1  2FFF               	
  5878                           l4247:	
  5879  0FC2                     	goto	l507
  5880  0FC2  2FFF               	line	1354
  5881                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1354:      
                                    }
  5882                           	
  5883                           l515:	
  5884  0FC3                     	line	1357
  5885                           	
  5886                           l4249:	
  5887  0FC3                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1357:      
                                    ++*fmt;
  5888                           	movf	(vfpfcnvrt@fmt)^080h,w
  5889  0FC3  0868               	movwf	fsr1l
  5890  0FC4  0086               	movlw 1	; select bank2/3
  5891  0FC5  3001               	movwf fsr1h	
  5892  0FC6  0087               	
  5893                           	movlw	01h
  5894  0FC7  3001               	addwf	indf1,f
  5895  0FC8  0781               	addfsr	fsr1,1
  5896  0FC9  3141               	skipnc
  5897  0FCA  1803               	incf	indf1,f
  5898  0FCB  0A81               	line	1358
  5899                           	
  5900                           l4251:	
  5901  0FCC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1358:      
                                    return 0;
  5902                           	clrf	(?_vfpfcnvrt)^080h
  5903  0FCC  01E8               	clrf	(?_vfpfcnvrt+1)^080h
  5904  0FCD  01E9               	goto	l507
  5905  0FCE  2FFF               	
  5906                           l4253:	
  5907  0FCF                     	goto	l507
  5908  0FCF  2FFF               	line	1359
  5909                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1359:     }
                                 
  5910                           	
  5911                           l483:	
  5912  0FD0                     	line	1362
  5913                           	
  5914                           l4255:	
  5915  0FD0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1362:     f
                                 putc((int)(*fmt)[0], fp);
  5916                           	movf	(vfpfcnvrt@fmt)^080h,w
  5917  0FD0  0868               	movwf	fsr1l
  5918  0FD1  0086               	movlw 1	; select bank2/3
  5919  0FD2  3001               	movwf fsr1h	
  5920  0FD3  0087               	
  5921                           	moviw	[0]fsr1
  5922  0FD4  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5923  0FD5  00EA               	moviw	[1]fsr1
  5924  0FD6  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5925  0FD7  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5926  0FD8  086A               	movwf	fsr0l
  5927  0FD9  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5928  0FDA  086B               	movwf	fsr0h
  5929  0FDB  0085               	movf	indf0,w ;code access
  5930  0FDC  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  5931  0FDD  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  5932  0FDE  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  5933  0FDF  086C               	movlb 0	; select bank0
  5934  0FE0  0140               	movwf	(fputc@c)
  5935  0FE1  00A0               	movlb 1	; select bank1
  5936  0FE2  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  5937  0FE3  086D               	movlb 0	; select bank0
  5938  0FE4  0140               	movwf	(fputc@c+1)
  5939  0FE5  00A1               	movlb 2	; select bank2
  5940  0FE6  0142               	movf	(vfpfcnvrt@fp)^0100h,w
  5941  0FE7  082E               	movlb 1	; select bank1
  5942  0FE8  0141               	movwf	(??_vfpfcnvrt+4)^080h+0
  5943  0FE9  00EE               	movf	(??_vfpfcnvrt+4)^080h+0,w
  5944  0FEA  086E               	movlb 0	; select bank0
  5945  0FEB  0140               	movwf	(fputc@fp)
  5946  0FEC  00A2               	fcall	_fputc
  5947  0FED  319B  23AB  318C   	line	1363
  5948                           	
  5949                           l4257:	
  5950  0FF0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1363:     +
                                 +*fmt;
  5951                           	movlb 1	; select bank1
  5952  0FF0  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5953  0FF1  0868               	movwf	fsr1l
  5954  0FF2  0086               	movlw 1	; select bank2/3
  5955  0FF3  3001               	movwf fsr1h	
  5956  0FF4  0087               	
  5957                           	movlw	01h
  5958  0FF5  3001               	addwf	indf1,f
  5959  0FF6  0781               	addfsr	fsr1,1
  5960  0FF7  3141               	skipnc
  5961  0FF8  1803               	incf	indf1,f
  5962  0FF9  0A81               	line	1364
  5963                           	
  5964                           l4259:	
  5965  0FFA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1364:     r
                                 eturn 1;
  5966                           	movlw	01h
  5967  0FFA  3001               	movwf	(?_vfpfcnvrt)^080h
  5968  0FFB  00E8               	movlw	0
  5969  0FFC  3000               	movwf	((?_vfpfcnvrt)^080h)+1
  5970  0FFD  00E9               	goto	l507
  5971  0FFE  2FFF               	
  5972                           l4261:	
  5973  0FFF                     	line	1365
  5974                           	
  5975                           l507:	
  5976  0FFF                     	return
  5977  0FFF  0008               	opt stack 0
  5978                           GLOBAL	__end_of_vfpfcnvrt
  5979                           	__end_of_vfpfcnvrt:
  5980  1000                     	signat	_vfpfcnvrt,12410
  5981                           	global	_strncmp
  5982                           
  5983 ;; *************** function _strncmp *****************
  5984 ;; Defined at:
  5985 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;  _l              1    wreg     PTR const unsigned char 
  5988 ;;		 -> vfpfcnvrt@ct(3), 
  5989 ;;  _r              2    0[BANK0 ] PTR const unsigned char 
  5990 ;;		 -> STR_14(3), 
  5991 ;;  n               2    2[BANK0 ] unsigned int 
  5992 ;; Auto vars:     Size  Location     Type
  5993 ;;  _l              1    6[BANK0 ] PTR const unsigned char 
  5994 ;;		 -> vfpfcnvrt@ct(3), 
  5995 ;;  r               2    7[BANK0 ] PTR const unsigned char 
  5996 ;;		 -> STR_14(3), 
  5997 ;;  l               1    9[BANK0 ] PTR const unsigned char 
  5998 ;;		 -> vfpfcnvrt@ct(3), 
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  2    0[BANK0 ] int 
  6001 ;; Registers used:
  6002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6008 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6009 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6010 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6011 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6012 ;;Total ram usage:       10 bytes
  6013 ;; Hardware stack levels used:    1
  6014 ;; Hardware stack levels required when called:    3
  6015 ;; This function calls:
  6016 ;;		Nothing
  6017 ;; This function is called by:
  6018 ;;		_vfpfcnvrt
  6019 ;; This function uses a non-reentrant model
  6020 ;;
  6021                           psect	text6,local,class=CODE,delta=2,merge=1,group=2
  6022                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  6023                           	line	3
  6024                           global __ptext6
  6025                           __ptext6:	;psect for function _strncmp
  6026  1C73                     psect	text6
  6027                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  6028                           	line	3
  6029                           	global	__size_of_strncmp
  6030                           	__size_of_strncmp	equ	__end_of_strncmp-_strncmp
  6031  006B                     	
  6032                           _strncmp:	
  6033  1C73                     ;incstack = 0
  6034                           	opt	stack 8
  6035                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  6036                           ;strncmp@_l stored from wreg
  6037                           	movlb 0	; select bank0
  6038  1C73  0140               	movwf	(strncmp@_l)
  6039  1C74  00A6               	line	5
  6040                           	
  6041                           l4119:	
  6042  1C75                     	movf	(strncmp@_l),w
  6043  1C75  0826               	movwf	(??_strncmp+0)+0
  6044  1C76  00A4               	movf	(??_strncmp+0)+0,w
  6045  1C77  0824               	movwf	(strncmp@l)
  6046  1C78  00A9               	movf	(strncmp@_r+1),w
  6047  1C79  0821               	movwf	(strncmp@r+1)
  6048  1C7A  00A8               	movf	(strncmp@_r),w
  6049  1C7B  0820               	movwf	(strncmp@r)
  6050  1C7C  00A7               	line	6
  6051                           	
  6052                           l4121:	
  6053  1C7D                     	movlw	01h
  6054  1C7D  3001               	subwf	(strncmp@n),f
  6055  1C7E  02A2               	movlw	0
  6056  1C7F  3000               	subwfb	(strncmp@n+1),f
  6057  1C80  3BA3               		incf	(((strncmp@n))),w
  6058  1C81  0A22               	skipz
  6059  1C82  1D03               	goto	u5811
  6060  1C83  2C88               	incf	(((strncmp@n+1))),w
  6061  1C84  0A23               	btfss	status,2
  6062  1C85  1D03               	goto	u5811
  6063  1C86  2C88               	goto	u5810
  6064  1C87  2C89               u5811:
  6065  1C88                     	goto	l4133
  6066  1C88  2C9B               u5810:
  6067  1C89                     	
  6068                           l4123:	
  6069  1C89                     	clrf	(?_strncmp)
  6070  1C89  01A0               	clrf	(?_strncmp+1)
  6071  1C8A  01A1               	goto	l1077
  6072  1C8B  2CDD               	
  6073                           l4125:	
  6074  1C8C                     	goto	l1077
  6075  1C8C  2CDD               	
  6076                           l1076:	
  6077  1C8D                     	line	7
  6078                           	goto	l4133
  6079  1C8D  2C9B               	
  6080                           l1079:	
  6081  1C8E                     	
  6082                           l4127:	
  6083  1C8E                     	movlw	low(01h)
  6084  1C8E  3001               	movwf	(??_strncmp+0)+0
  6085  1C8F  00A4               	movf	(??_strncmp+0)+0,w
  6086  1C90  0824               	addwf	(strncmp@l),f
  6087  1C91  07A9               	
  6088                           l4129:	
  6089  1C92                     	movlw	01h
  6090  1C92  3001               	addwf	(strncmp@r),f
  6091  1C93  07A7               	movlw	0
  6092  1C94  3000               	addwfc	(strncmp@r+1),f
  6093  1C95  3DA8               	
  6094                           l4131:	
  6095  1C96                     	movlw	01h
  6096  1C96  3001               	subwf	(strncmp@n),f
  6097  1C97  02A2               	movlw	0
  6098  1C98  3000               	subwfb	(strncmp@n+1),f
  6099  1C99  3BA3               	goto	l4133
  6100  1C9A  2C9B               	
  6101                           l1078:	
  6102  1C9B                     	
  6103                           l4133:	
  6104  1C9B                     	movf	(strncmp@l),w
  6105  1C9B  0829               	movwf	fsr1l
  6106  1C9C  0086               	movlw 1	; select bank2/3
  6107  1C9D  3001               	movwf fsr1h	
  6108  1C9E  0087               	
  6109                           	movf	(indf1),w
  6110  1C9F  0801               	btfsc	status,2
  6111  1CA0  1903               	goto	u5821
  6112  1CA1  2CA3               	goto	u5820
  6113  1CA2  2CA4               u5821:
  6114  1CA3                     	goto	l4141
  6115  1CA3  2CC5               u5820:
  6116  1CA4                     	
  6117                           l4135:	
  6118  1CA4                     	movf	(strncmp@r),w
  6119  1CA4  0827               	movwf	fsr0l
  6120  1CA5  0084               	movf	((strncmp@r+1)),w
  6121  1CA6  0828               	movwf	fsr0h
  6122  1CA7  0085               	moviw	fsr0++
  6123  1CA8  0012               	btfsc	status,2
  6124  1CA9  1903               	goto	u5831
  6125  1CAA  2CAC               	goto	u5830
  6126  1CAB  2CAD               u5831:
  6127  1CAC                     	goto	l4141
  6128  1CAC  2CC5               u5830:
  6129  1CAD                     	
  6130                           l4137:	
  6131  1CAD                     	movf	((strncmp@n)),w
  6132  1CAD  0822               iorwf	((strncmp@n+1)),w
  6133  1CAE  0423               	btfsc	status,2
  6134  1CAF  1903               	goto	u5841
  6135  1CB0  2CB2               	goto	u5840
  6136  1CB1  2CB3               u5841:
  6137  1CB2                     	goto	l4141
  6138  1CB2  2CC5               u5840:
  6139  1CB3                     	
  6140                           l4139:	
  6141  1CB3                     	movf	(strncmp@r),w
  6142  1CB3  0827               	movwf	fsr0l
  6143  1CB4  0084               	movf	((strncmp@r+1)),w
  6144  1CB5  0828               	movwf	fsr0h
  6145  1CB6  0085               	movf	indf0,w ;code access
  6146  1CB7  0800               	movwf	(??_strncmp+0)+0
  6147  1CB8  00A4               	movf	(strncmp@l),w
  6148  1CB9  0829               	movwf	fsr1l
  6149  1CBA  0086               	movlw 1	; select bank2/3
  6150  1CBB  3001               	movwf fsr1h	
  6151  1CBC  0087               	
  6152                           	movf	indf1,w
  6153  1CBD  0801               	xorwf	(??_strncmp+0)+0,w
  6154  1CBE  0624               	skipnz
  6155  1CBF  1903               	goto	u5851
  6156  1CC0  2CC2               	goto	u5850
  6157  1CC1  2CC3               u5851:
  6158  1CC2                     	goto	l4127
  6159  1CC2  2C8E               u5850:
  6160  1CC3                     	goto	l4141
  6161  1CC3  2CC5               	
  6162                           l1081:	
  6163  1CC4                     	goto	l4141
  6164  1CC4  2CC5               	
  6165                           l1082:	
  6166  1CC5                     	line	8
  6167                           	
  6168                           l4141:	
  6169  1CC5                     	movf	(strncmp@r),w
  6170  1CC5  0827               	movwf	fsr0l
  6171  1CC6  0084               	movf	((strncmp@r+1)),w
  6172  1CC7  0828               	movwf	fsr0h
  6173  1CC8  0085               	movf	indf0,w ;code access
  6174  1CC9  0800               	movwf	(??_strncmp+0)+0
  6175  1CCA  00A4               	clrf	(??_strncmp+0)+0+1
  6176  1CCB  01A5               	comf	(??_strncmp+0)+0,f
  6177  1CCC  09A4               	comf	(??_strncmp+0)+1,f
  6178  1CCD  09A5               	incf	(??_strncmp+0)+0,f
  6179  1CCE  0AA4               	skipnz
  6180  1CCF  1903               	incf	(??_strncmp+0)+1,f
  6181  1CD0  0AA5               	movf	(strncmp@l),w
  6182  1CD1  0829               	movwf	fsr1l
  6183  1CD2  0086               	movlw 1	; select bank2/3
  6184  1CD3  3001               	movwf fsr1h	
  6185  1CD4  0087               	
  6186                           	movf	indf1,w
  6187  1CD5  0801               	addwf	0+(??_strncmp+0)+0,w
  6188  1CD6  0724               	movwf	(?_strncmp)
  6189  1CD7  00A0               	movf	1+(??_strncmp+0)+0,w
  6190  1CD8  0825               	skipnc
  6191  1CD9  1803               	incf	1+(??_strncmp+0)+0,w
  6192  1CDA  0A25               	movwf	((?_strncmp))+1
  6193  1CDB  00A1               	goto	l1077
  6194  1CDC  2CDD               	
  6195                           l4143:	
  6196  1CDD                     	line	9
  6197                           	
  6198                           l1077:	
  6199  1CDD                     	return
  6200  1CDD  0008               	opt stack 0
  6201                           GLOBAL	__end_of_strncmp
  6202                           	__end_of_strncmp:
  6203  1CDE                     	signat	_strncmp,12410
  6204                           	global	_efgtoa
  6205                           
  6206 ;; *************** function _efgtoa *****************
  6207 ;; Defined at:
  6208 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  6209 ;; Parameters:    Size  Location     Type
  6210 ;;  fp              1    wreg     PTR struct _IO_FILE
  6211 ;;		 -> sprintf@f(5), 
  6212 ;;  f               4   10[BANK1 ] PTR struct _IO_FILE
  6213 ;;  c               1   14[BANK1 ] unsigned char 
  6214 ;; Auto vars:     Size  Location     Type
  6215 ;;  fp              1   43[BANK1 ] PTR struct _IO_FILE
  6216 ;;		 -> sprintf@f(5), 
  6217 ;;  u               4   68[BANK1 ] PTR struct _IO_FILE
  6218 ;;  g               4   60[BANK1 ] PTR struct _IO_FILE
  6219 ;;  l               4   54[BANK1 ] PTR struct _IO_FILE
  6220 ;;  h               4   50[BANK1 ] PTR struct _IO_FILE
  6221 ;;  ou              4   15[BANK1 ] PTR struct _IO_FILE
  6222 ;;  n               2   66[BANK1 ] int 
  6223 ;;  e               2   64[BANK1 ] int 
  6224 ;;  i               2   58[BANK1 ] int 
  6225 ;;  w               2   47[BANK1 ] int 
  6226 ;;  p               2   44[BANK1 ] int 
  6227 ;;  sign            2   41[BANK1 ] int 
  6228 ;;  d               2   39[BANK1 ] int 
  6229 ;;  ne              2   37[BANK1 ] int 
  6230 ;;  m               2   35[BANK1 ] int 
  6231 ;;  pp              2   33[BANK1 ] int 
  6232 ;;  t               2   31[BANK1 ] int 
  6233 ;;  mode            1   49[BANK1 ] unsigned char 
  6234 ;;  nmode           1   46[BANK1 ] unsigned char 
  6235 ;; Return value:  Size  Location     Type
  6236 ;;                  2   10[BANK1 ] int 
  6237 ;; Registers used:
  6238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6239 ;; Tracked objects:
  6240 ;;		On entry : 0/0
  6241 ;;		On exit  : 0/0
  6242 ;;		Unchanged: 0/0
  6243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6244 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6245 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6246 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6247 ;;      Totals:         0       4      62       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6248 ;;Total ram usage:       66 bytes
  6249 ;; Hardware stack levels used:    1
  6250 ;; Hardware stack levels required when called:    7
  6251 ;; This function calls:
  6252 ;;		___awdiv
  6253 ;;		___awmod
  6254 ;;		___fladd
  6255 ;;		___fldiv
  6256 ;;		___fleq
  6257 ;;		___flge
  6258 ;;		___flmul
  6259 ;;		___flneg
  6260 ;;		___flsub
  6261 ;;		___fltol
  6262 ;;		___fpclassifyf
  6263 ;;		_floorf
  6264 ;;		_isupper
  6265 ;;		_pad
  6266 ;;		_strcpy
  6267 ;;		_tolower
  6268 ;; This function is called by:
  6269 ;;		_vfpfcnvrt
  6270 ;; This function uses a non-reentrant model
  6271 ;;
  6272                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  6273                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  6274                           	line	319
  6275                           global __ptext7
  6276                           __ptext7:	;psect for function _efgtoa
  6277  1334                     psect	text7
  6278                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  6279                           	line	319
  6280                           	global	__size_of_efgtoa
  6281                           	__size_of_efgtoa	equ	__end_of_efgtoa-_efgtoa
  6282  F473                     	
  6283                           _efgtoa:	
  6284  1334                     ;incstack = 0
  6285                           	opt	stack 4
  6286                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6287                           ;efgtoa@fp stored from wreg
  6288                           	movlb 1	; select bank1
  6289  1334  0141               	movwf	(efgtoa@fp)^080h
  6290  1335  00CB               	line	326
  6291                           	
  6292                           l3783:	
  6293  1336                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 319: static
                                  int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.00\
                                 pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\s
                                 ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
                                 xc8\v2.00\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
                                 t, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 323:  
                                    long double g, h, l, ou, u;
  6294                           	clrf	(efgtoa@sign)^080h
  6295  1336  01C9               	clrf	(efgtoa@sign+1)^080h
  6296  1337  01CA               	line	327
  6297                           	
  6298                           l3785:	
  6299  1338                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 327:     g 
                                 = f;
  6300                           	movf	(efgtoa@f+3)^080h,w
  6301  1338  082D               	movwf	(efgtoa@g+3)^080h
  6302  1339  00DF               	movf	(efgtoa@f+2)^080h,w
  6303  133A  082C               	movwf	(efgtoa@g+2)^080h
  6304  133B  00DE               	movf	(efgtoa@f+1)^080h,w
  6305  133C  082B               	movwf	(efgtoa@g+1)^080h
  6306  133D  00DD               	movf	(efgtoa@f)^080h,w
  6307  133E  082A               	movwf	(efgtoa@g)^080h
  6308  133F  00DC               
  6309                           	line	328
  6310                           	
  6311                           l3787:	
  6312  1340                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 328:     if
                                  (g < 0.0) {
  6313                           	movf	(efgtoa@g+3)^080h,w
  6314  1340  085F               	movlb 0	; select bank0
  6315  1341  0140               	movwf	(___flge@ff1+3)
  6316  1342  00CB               	movlb 1	; select bank1
  6317  1343  0141               	movf	(efgtoa@g+2)^080h,w
  6318  1344  085E               	movlb 0	; select bank0
  6319  1345  0140               	movwf	(___flge@ff1+2)
  6320  1346  00CA               	movlb 1	; select bank1
  6321  1347  0141               	movf	(efgtoa@g+1)^080h,w
  6322  1348  085D               	movlb 0	; select bank0
  6323  1349  0140               	movwf	(___flge@ff1+1)
  6324  134A  00C9               	movlb 1	; select bank1
  6325  134B  0141               	movf	(efgtoa@g)^080h,w
  6326  134C  085C               	movlb 0	; select bank0
  6327  134D  0140               	movwf	(___flge@ff1)
  6328  134E  00C8               
  6329                           	movlw	0x0
  6330  134F  3000               	movwf	(___flge@ff2+3)
  6331  1350  00CF               	movlw	0x0
  6332  1351  3000               	movwf	(___flge@ff2+2)
  6333  1352  00CE               	movlw	0x0
  6334  1353  3000               	movwf	(___flge@ff2+1)
  6335  1354  00CD               	movlw	0x0
  6336  1355  3000               	movwf	(___flge@ff2)
  6337  1356  00CC               
  6338                           	fcall	___flge
  6339  1357  319E  269D  3193   	btfsc	status,0
  6340  135A  1803               	goto	u5221
  6341  135B  2B5D               	goto	u5220
  6342  135C  2B5E               u5221:
  6343  135D                     	goto	l3793
  6344  135D  2B86               u5220:
  6345  135E                     	line	329
  6346                           	
  6347                           l3789:	
  6348  135E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 329:       
                                   sign = 1;
  6349                           	movlw	01h
  6350  135E  3001               	movlb 1	; select bank1
  6351  135F  0141               	movwf	(efgtoa@sign)^080h
  6352  1360  00C9               	movlw	0
  6353  1361  3000               	movwf	((efgtoa@sign)^080h)+1
  6354  1362  00CA               	line	330
  6355                           	
  6356                           l3791:	
  6357  1363                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 330:       
                                   g = -g;
  6358                           	movf	(efgtoa@g+3)^080h,w
  6359  1363  085F               	movlb 0	; select bank0
  6360  1364  0140               	movwf	(___flneg@f1+3)
  6361  1365  00A3               	movlb 1	; select bank1
  6362  1366  0141               	movf	(efgtoa@g+2)^080h,w
  6363  1367  085E               	movlb 0	; select bank0
  6364  1368  0140               	movwf	(___flneg@f1+2)
  6365  1369  00A2               	movlb 1	; select bank1
  6366  136A  0141               	movf	(efgtoa@g+1)^080h,w
  6367  136B  085D               	movlb 0	; select bank0
  6368  136C  0140               	movwf	(___flneg@f1+1)
  6369  136D  00A1               	movlb 1	; select bank1
  6370  136E  0141               	movf	(efgtoa@g)^080h,w
  6371  136F  085C               	movlb 0	; select bank0
  6372  1370  0140               	movwf	(___flneg@f1)
  6373  1371  00A0               
  6374                           	fcall	___flneg
  6375  1372  31A6  267B  3193   	movlb 0	; select bank0
  6376  1375  0140               	movf	(3+(?___flneg)),w
  6377  1376  0823               	movlb 1	; select bank1
  6378  1377  0141               	movwf	(efgtoa@g+3)^080h
  6379  1378  00DF               	movlb 0	; select bank0
  6380  1379  0140               	movf	(2+(?___flneg)),w
  6381  137A  0822               	movlb 1	; select bank1
  6382  137B  0141               	movwf	(efgtoa@g+2)^080h
  6383  137C  00DE               	movlb 0	; select bank0
  6384  137D  0140               	movf	(1+(?___flneg)),w
  6385  137E  0821               	movlb 1	; select bank1
  6386  137F  0141               	movwf	(efgtoa@g+1)^080h
  6387  1380  00DD               	movlb 0	; select bank0
  6388  1381  0140               	movf	(0+(?___flneg)),w
  6389  1382  0820               	movlb 1	; select bank1
  6390  1383  0141               	movwf	(efgtoa@g)^080h
  6391  1384  00DC               
  6392                           	goto	l3793
  6393  1385  2B86               	line	331
  6394                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 331:     }

  6395                           	
  6396                           l392:	
  6397  1386                     	line	334
  6398                           	
  6399                           l3793:	
  6400  1386                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 334:     n 
                                 = 0;
  6401                           	movlb 1	; select bank1
  6402  1386  0141               	clrf	(efgtoa@n)^080h
  6403  1387  01E2               	clrf	(efgtoa@n+1)^080h
  6404  1388  01E3               	line	335
  6405                           	
  6406                           l3795:	
  6407  1389                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 335:     w 
                                 = width;
  6408                           	movlb 2	; select bank2
  6409  1389  0142               	movf	(_width+1)^0100h,w
  6410  138A  0865               	movlb 1	; select bank1
  6411  138B  0141               	movwf	(efgtoa@w+1)^080h
  6412  138C  00D0               	movlb 2	; select bank2
  6413  138D  0142               	movf	(_width)^0100h,w
  6414  138E  0864               	movlb 1	; select bank1
  6415  138F  0141               	movwf	(efgtoa@w)^080h
  6416  1390  00CF               	line	336
  6417                           	
  6418                           l3797:	
  6419  1391                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 336:     if
                                  (sign || (flags & (1 << 2))) {
  6420                           	movf	((efgtoa@sign)^080h),w
  6421  1391  0849               iorwf	((efgtoa@sign+1)^080h),w
  6422  1392  044A               	btfss	status,2
  6423  1393  1D03               	goto	u5231
  6424  1394  2B96               	goto	u5230
  6425  1395  2B97               u5231:
  6426  1396                     	goto	l3801
  6427  1396  2B9D               u5230:
  6428  1397                     	
  6429                           l3799:	
  6430  1397                     	movlb 2	; select bank2
  6431  1397  0142               	btfss	(_flags)^0100h,(2)&7
  6432  1398  1D68               	goto	u5241
  6433  1399  2B9B               	goto	u5240
  6434  139A  2B9C               u5241:
  6435  139B                     	goto	l3813
  6436  139B  2BC4               u5240:
  6437  139C                     	goto	l3801
  6438  139C  2B9D               	
  6439                           l395:	
  6440  139D                     	line	337
  6441                           	
  6442                           l3801:	
  6443  139D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 337:       
                                   dbuf[n] = sign ? '-' : '+';
  6444                           	movlb 1	; select bank1
  6445  139D  0141               	movf	((efgtoa@sign)^080h),w
  6446  139E  0849               iorwf	((efgtoa@sign+1)^080h),w
  6447  139F  044A               	btfss	status,2
  6448  13A0  1D03               	goto	u5251
  6449  13A1  2BA3               	goto	u5250
  6450  13A2  2BA4               u5251:
  6451  13A3                     	goto	l3805
  6452  13A3  2BA9               u5250:
  6453  13A4                     	
  6454                           l3803:	
  6455  13A4                     	movlw	02Bh
  6456  13A4  302B               	movwf	(_efgtoa$864)^080h
  6457  13A5  00B3               	movlw	0
  6458  13A6  3000               	movwf	((_efgtoa$864)^080h)+1
  6459  13A7  00B4               	goto	l3807
  6460  13A8  2BAE               	
  6461                           l397:	
  6462  13A9                     	
  6463                           l3805:	
  6464  13A9                     	movlw	02Dh
  6465  13A9  302D               	movwf	(_efgtoa$864)^080h
  6466  13AA  00B3               	movlw	0
  6467  13AB  3000               	movwf	((_efgtoa$864)^080h)+1
  6468  13AC  00B4               	goto	l3807
  6469  13AD  2BAE               	
  6470                           l399:	
  6471  13AE                     	
  6472                           l3807:	
  6473  13AE                     	movf	(_efgtoa$864)^080h,w
  6474  13AE  0833               	movlb 0	; select bank0
  6475  13AF  0140               	movwf	(??_efgtoa+0)+0
  6476  13B0  00EC               	movlb 1	; select bank1
  6477  13B1  0141               	movf	(efgtoa@n)^080h,w
  6478  13B2  0862               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  6479  13B3  3EA0               	movwf	fsr1l
  6480  13B4  0086               	movlw 2	; select bank5/6
  6481  13B5  3002               	movwf fsr1h	
  6482  13B6  0087               	
  6483                           	movlb 0	; select bank0
  6484  13B7  0140               	movf	(??_efgtoa+0)+0,w
  6485  13B8  086C               	movwf	indf1
  6486  13B9  0081               	line	338
  6487                           	
  6488                           l3809:	
  6489  13BA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 338:       
                                   ++n;
  6490                           	movlw	01h
  6491  13BA  3001               	movlb 1	; select bank1
  6492  13BB  0141               	addwf	(efgtoa@n)^080h,f
  6493  13BC  07E2               	movlw	0
  6494  13BD  3000               	addwfc	(efgtoa@n+1)^080h,f
  6495  13BE  3DE3               	line	339
  6496                           	
  6497                           l3811:	
  6498  13BF                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 339:       
                                   --w;
  6499                           	movlw	0FFh
  6500  13BF  30FF               	addwf	(efgtoa@w)^080h,f
  6501  13C0  07CF               	movlw	0FFh
  6502  13C1  30FF               	addwfc	(efgtoa@w+1)^080h,f
  6503  13C2  3DD0               	goto	l3813
  6504  13C3  2BC4               	line	340
  6505                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 340:     }

  6506                           	
  6507                           l393:	
  6508  13C4                     	line	343
  6509                           	
  6510                           l3813:	
  6511  13C4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 344:       
                                   if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6512                           	movlb 1	; select bank1
  6513  13C4  0141               	movf	(efgtoa@g+3)^080h,w
  6514  13C5  085F               	movlb 0	; select bank0
  6515  13C6  0140               	movwf	(___fpclassifyf@x+3)
  6516  13C7  00A3               	movlb 1	; select bank1
  6517  13C8  0141               	movf	(efgtoa@g+2)^080h,w
  6518  13C9  085E               	movlb 0	; select bank0
  6519  13CA  0140               	movwf	(___fpclassifyf@x+2)
  6520  13CB  00A2               	movlb 1	; select bank1
  6521  13CC  0141               	movf	(efgtoa@g+1)^080h,w
  6522  13CD  085D               	movlb 0	; select bank0
  6523  13CE  0140               	movwf	(___fpclassifyf@x+1)
  6524  13CF  00A1               	movlb 1	; select bank1
  6525  13D0  0141               	movf	(efgtoa@g)^080h,w
  6526  13D1  085C               	movlb 0	; select bank0
  6527  13D2  0140               	movwf	(___fpclassifyf@x)
  6528  13D3  00A0               
  6529                           	fcall	___fpclassifyf
  6530  13D4  319C  24DE  3193   	movlb 0	; select bank0
  6531  13D7  0140               		decf	((0+(?___fpclassifyf))),w
  6532  13D8  0320               iorwf	((1+(?___fpclassifyf))),w
  6533  13D9  0421               	btfss	status,2
  6534  13DA  1D03               	goto	u5261
  6535  13DB  2BDD               	goto	u5260
  6536  13DC  2BDF               u5261:
  6537  13DD                     	goto	l3831
  6538  13DD  3180  28B4         u5260:
  6539  13DF                     	line	344
  6540                           	
  6541                           l3815:	
  6542  13DF                     	movlb 1	; select bank1
  6543  13DF  0141               	movf	(efgtoa@c)^080h,w
  6544  13E0  082E               	addlw	low(0FFBFh)
  6545  13E1  3EBF               	movlb 0	; select bank0
  6546  13E2  0140               	movwf	(??_efgtoa+0)+0
  6547  13E3  00EC               	movlw	high(0FFBFh)
  6548  13E4  30FF               	skipnc
  6549  13E5  1803               	movlw	(high(0FFBFh)+1)&0ffh
  6550  13E6  3000               	movwf	((??_efgtoa+0)+0)+1
  6551  13E7  00ED               	movlw	0
  6552  13E8  3000               	subwf	1+(??_efgtoa+0)+0,w
  6553  13E9  026D               	movlw	01Ah
  6554  13EA  301A               	skipnz
  6555  13EB  1903               	subwf	0+(??_efgtoa+0)+0,w
  6556  13EC  026C               	skipc
  6557  13ED  1C03               	goto	u5271
  6558  13EE  2BF0               	goto	u5270
  6559  13EF  2BF2               u5271:
  6560  13F0                     	movlw	1
  6561  13F0  3001               	goto	u5280
  6562  13F1  2BF3               u5270:
  6563  13F2                     	movlw	0
  6564  13F2  3000               u5280:
  6565  13F3                     	movwf	(??_efgtoa+2)+0
  6566  13F3  00EE               	clrf	(??_efgtoa+2)+0+1
  6567  13F4  01EF               	movf	0+(??_efgtoa+2)+0,w
  6568  13F5  086E               	movlb 1	; select bank1
  6569  13F6  0141               	movwf	(_efgtoa$865)^080h
  6570  13F7  00B5               	movlb 0	; select bank0
  6571  13F8  0140               	movf	1+(??_efgtoa+2)+0,w
  6572  13F9  086F               	movlb 1	; select bank1
  6573  13FA  0141               	movwf	(_efgtoa$865+1)^080h
  6574  13FB  00B6               	goto	l3819
  6575  13FC  2C11               	
  6576                           l403:	
  6577  13FD                     	
  6578                           l3817:	
  6579  13FD                     	movf	(efgtoa@c)^080h,w
  6580  13FD  082E               	movlb 0	; select bank0
  6581  13FE  0140               	movwf	(??_efgtoa+0)+0
  6582  13FF  00EC               	clrf	(??_efgtoa+0)+0+1
  6583  1400  01ED               	movf	0+(??_efgtoa+0)+0,w
  6584  1401  086C               	movwf	(isupper@c)
  6585  1402  00A0               	movf	1+(??_efgtoa+0)+0,w
  6586  1403  086D               	movwf	(isupper@c+1)
  6587  1404  00A1               	fcall	_isupper
  6588  1405  31A6  26BB  3193   	movlb 0	; select bank0
  6589  1408  0140               	movf	(1+(?_isupper)),w
  6590  1409  0821               	movlb 1	; select bank1
  6591  140A  0141               	movwf	(_efgtoa$865+1)^080h
  6592  140B  00B6               	movlb 0	; select bank0
  6593  140C  0140               	movf	(0+(?_isupper)),w
  6594  140D  0820               	movlb 1	; select bank1
  6595  140E  0141               	movwf	(_efgtoa$865)^080h
  6596  140F  00B5               	goto	l3819
  6597  1410  2C11               	
  6598                           l405:	
  6599  1411                     	
  6600                           l3819:	
  6601  1411                     	movf	((_efgtoa$865)^080h),w
  6602  1411  0835               iorwf	((_efgtoa$865+1)^080h),w
  6603  1412  0436               	btfsc	status,2
  6604  1413  1903               	goto	u5291
  6605  1414  2C16               	goto	u5290
  6606  1415  2C17               u5291:
  6607  1416                     	goto	l3823
  6608  1416  2C23               u5290:
  6609  1417                     	line	345
  6610                           	
  6611                           l3821:	
  6612  1417                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 345:       
                                       strcpy(&dbuf[n], "INF");
  6613                           	movlw	low(((STR_4)|8000h))
  6614  1417  3000               	movlb 0	; select bank0
  6615  1418  0140               	movwf	(strcpy@src)
  6616  1419  00A0               	movlw	high(((STR_4)|8000h))
  6617  141A  30A8               	movwf	((strcpy@src))+1
  6618  141B  00A1               	movlb 1	; select bank1
  6619  141C  0141               	movf	(efgtoa@n)^080h,w
  6620  141D  0862               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  6621  141E  3EA0               	fcall	_strcpy
  6622  141F  31A7  2760  3193   	line	346
  6623                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 346:       
                                   } else {
  6624                           	goto	l3825
  6625  1422  2C2F               	
  6626                           l401:	
  6627  1423                     	line	347
  6628                           	
  6629                           l3823:	
  6630  1423                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 347:       
                                       strcpy(&dbuf[n], "inf");
  6631                           	movlw	low(((STR_5)|8000h))
  6632  1423  3008               	movlb 0	; select bank0
  6633  1424  0140               	movwf	(strcpy@src)
  6634  1425  00A0               	movlw	high(((STR_5)|8000h))
  6635  1426  30A8               	movwf	((strcpy@src))+1
  6636  1427  00A1               	movlb 1	; select bank1
  6637  1428  0141               	movf	(efgtoa@n)^080h,w
  6638  1429  0862               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  6639  142A  3EA0               	fcall	_strcpy
  6640  142B  31A7  2760  3193   	goto	l3825
  6641  142E  2C2F               	line	348
  6642                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 348:       
                                   }
  6643                           	
  6644                           l406:	
  6645  142F                     	line	349
  6646                           	
  6647                           l3825:	
  6648  142F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 349:       
                                   w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  6649                           	movlw	0FDh
  6650  142F  30FD               	movlb 1	; select bank1
  6651  1430  0141               	addwf	(efgtoa@w)^080h,f
  6652  1431  07CF               	movlw	0FFh
  6653  1432  30FF               	addwfc	(efgtoa@w+1)^080h,f
  6654  1433  3DD0               	line	350
  6655                           	
  6656                           l3827:	
  6657  1434                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 350:       
                                   return pad(fp, &dbuf[0], w);
  6658                           	movlw	(low(_dbuf|((0x2)<<8)))&0ffh
  6659  1434  30A0               	movlb 0	; select bank0
  6660  1435  0140               	movwf	(??_efgtoa+0)+0
  6661  1436  00EC               	movf	(??_efgtoa+0)+0,w
  6662  1437  086C               	movwf	(pad@buf)
  6663  1438  00B0               	movlb 1	; select bank1
  6664  1439  0141               	movf	(efgtoa@w+1)^080h,w
  6665  143A  0850               	movlb 0	; select bank0
  6666  143B  0140               	movwf	(pad@p+1)
  6667  143C  00B2               	movlb 1	; select bank1
  6668  143D  0141               	movf	(efgtoa@w)^080h,w
  6669  143E  084F               	movlb 0	; select bank0
  6670  143F  0140               	movwf	(pad@p)
  6671  1440  00B1               	movlb 1	; select bank1
  6672  1441  0141               	movf	(efgtoa@fp)^080h,w
  6673  1442  084B               	fcall	_pad
  6674  1443  319A  22F0  3193   	movlb 0	; select bank0
  6675  1446  0140               	movf	(1+(?_pad)),w
  6676  1447  0831               	movlb 1	; select bank1
  6677  1448  0141               	movwf	(?_efgtoa+1)^080h
  6678  1449  00AB               	movlb 0	; select bank0
  6679  144A  0140               	movf	(0+(?_pad)),w
  6680  144B  0830               	movlb 1	; select bank1
  6681  144C  0141               	movwf	(?_efgtoa)^080h
  6682  144D  00AA               	goto	l407
  6683  144E  3187  2FA6         	
  6684                           l3829:	
  6685  00B3                     	goto	l407
  6686  00B3  2FA6               	line	351
  6687                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 351:     }

  6688                           	
  6689                           l400:	
  6690  00B4                     	line	352
  6691                           	
  6692                           l3831:	
  6693  00B4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 353:       
                                   if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6694                           	movlb 1	; select bank1
  6695  00B4  0141               	movf	(efgtoa@g+3)^080h,w
  6696  00B5  085F               	movlb 0	; select bank0
  6697  00B6  0140               	movwf	(___fpclassifyf@x+3)
  6698  00B7  00A3               	movlb 1	; select bank1
  6699  00B8  0141               	movf	(efgtoa@g+2)^080h,w
  6700  00B9  085E               	movlb 0	; select bank0
  6701  00BA  0140               	movwf	(___fpclassifyf@x+2)
  6702  00BB  00A2               	movlb 1	; select bank1
  6703  00BC  0141               	movf	(efgtoa@g+1)^080h,w
  6704  00BD  085D               	movlb 0	; select bank0
  6705  00BE  0140               	movwf	(___fpclassifyf@x+1)
  6706  00BF  00A1               	movlb 1	; select bank1
  6707  00C0  0141               	movf	(efgtoa@g)^080h,w
  6708  00C1  085C               	movlb 0	; select bank0
  6709  00C2  0140               	movwf	(___fpclassifyf@x)
  6710  00C3  00A0               
  6711                           	fcall	___fpclassifyf
  6712  00C4  319C  24DE  3180   	movlb 0	; select bank0
  6713  00C7  0140               	movf	((0+(?___fpclassifyf))),w
  6714  00C8  0820               iorwf	((1+(?___fpclassifyf))),w
  6715  00C9  0421               	btfss	status,2
  6716  00CA  1D03               	goto	u5301
  6717  00CB  28CD               	goto	u5300
  6718  00CC  28CE               u5301:
  6719  00CD                     	goto	l3849
  6720  00CD  293F               u5300:
  6721  00CE                     	line	353
  6722                           	
  6723                           l3833:	
  6724  00CE                     	movlb 1	; select bank1
  6725  00CE  0141               	movf	(efgtoa@c)^080h,w
  6726  00CF  082E               	addlw	low(0FFBFh)
  6727  00D0  3EBF               	movlb 0	; select bank0
  6728  00D1  0140               	movwf	(??_efgtoa+0)+0
  6729  00D2  00EC               	movlw	high(0FFBFh)
  6730  00D3  30FF               	skipnc
  6731  00D4  1803               	movlw	(high(0FFBFh)+1)&0ffh
  6732  00D5  3000               	movwf	((??_efgtoa+0)+0)+1
  6733  00D6  00ED               	movlw	0
  6734  00D7  3000               	subwf	1+(??_efgtoa+0)+0,w
  6735  00D8  026D               	movlw	01Ah
  6736  00D9  301A               	skipnz
  6737  00DA  1903               	subwf	0+(??_efgtoa+0)+0,w
  6738  00DB  026C               	skipc
  6739  00DC  1C03               	goto	u5311
  6740  00DD  28DF               	goto	u5310
  6741  00DE  28E1               u5311:
  6742  00DF                     	movlw	1
  6743  00DF  3001               	goto	u5320
  6744  00E0  28E2               u5310:
  6745  00E1                     	movlw	0
  6746  00E1  3000               u5320:
  6747  00E2                     	movwf	(??_efgtoa+2)+0
  6748  00E2  00EE               	clrf	(??_efgtoa+2)+0+1
  6749  00E3  01EF               	movf	0+(??_efgtoa+2)+0,w
  6750  00E4  086E               	movlb 1	; select bank1
  6751  00E5  0141               	movwf	(_efgtoa$870)^080h
  6752  00E6  00B7               	movlb 0	; select bank0
  6753  00E7  0140               	movf	1+(??_efgtoa+2)+0,w
  6754  00E8  086F               	movlb 1	; select bank1
  6755  00E9  0141               	movwf	(_efgtoa$870+1)^080h
  6756  00EA  00B8               	goto	l3837
  6757  00EB  2900               	
  6758                           l411:	
  6759  00EC                     	
  6760                           l3835:	
  6761  00EC                     	movf	(efgtoa@c)^080h,w
  6762  00EC  082E               	movlb 0	; select bank0
  6763  00ED  0140               	movwf	(??_efgtoa+0)+0
  6764  00EE  00EC               	clrf	(??_efgtoa+0)+0+1
  6765  00EF  01ED               	movf	0+(??_efgtoa+0)+0,w
  6766  00F0  086C               	movwf	(isupper@c)
  6767  00F1  00A0               	movf	1+(??_efgtoa+0)+0,w
  6768  00F2  086D               	movwf	(isupper@c+1)
  6769  00F3  00A1               	fcall	_isupper
  6770  00F4  31A6  26BB  3180   	movlb 0	; select bank0
  6771  00F7  0140               	movf	(1+(?_isupper)),w
  6772  00F8  0821               	movlb 1	; select bank1
  6773  00F9  0141               	movwf	(_efgtoa$870+1)^080h
  6774  00FA  00B8               	movlb 0	; select bank0
  6775  00FB  0140               	movf	(0+(?_isupper)),w
  6776  00FC  0820               	movlb 1	; select bank1
  6777  00FD  0141               	movwf	(_efgtoa$870)^080h
  6778  00FE  00B7               	goto	l3837
  6779  00FF  2900               	
  6780                           l413:	
  6781  0100                     	
  6782                           l3837:	
  6783  0100                     	movf	((_efgtoa$870)^080h),w
  6784  0100  0837               iorwf	((_efgtoa$870+1)^080h),w
  6785  0101  0438               	btfsc	status,2
  6786  0102  1903               	goto	u5331
  6787  0103  2905               	goto	u5330
  6788  0104  2906               u5331:
  6789  0105                     	goto	l3841
  6790  0105  2912               u5330:
  6791  0106                     	line	354
  6792                           	
  6793                           l3839:	
  6794  0106                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 354:       
                                       strcpy(&dbuf[n], "NAN");
  6795                           	movlw	low(((STR_8)|8000h))
  6796  0106  3004               	movlb 0	; select bank0
  6797  0107  0140               	movwf	(strcpy@src)
  6798  0108  00A0               	movlw	high(((STR_8)|8000h))
  6799  0109  30A8               	movwf	((strcpy@src))+1
  6800  010A  00A1               	movlb 1	; select bank1
  6801  010B  0141               	movf	(efgtoa@n)^080h,w
  6802  010C  0862               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  6803  010D  3EA0               	fcall	_strcpy
  6804  010E  31A7  2760  3180   	line	355
  6805                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 355:       
                                   } else {
  6806                           	goto	l3843
  6807  0111  291E               	
  6808                           l409:	
  6809  0112                     	line	356
  6810                           	
  6811                           l3841:	
  6812  0112                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 356:       
                                       strcpy(&dbuf[n], "nan");
  6813                           	movlw	low(((STR_9)|8000h))
  6814  0112  300C               	movlb 0	; select bank0
  6815  0113  0140               	movwf	(strcpy@src)
  6816  0114  00A0               	movlw	high(((STR_9)|8000h))
  6817  0115  30A8               	movwf	((strcpy@src))+1
  6818  0116  00A1               	movlb 1	; select bank1
  6819  0117  0141               	movf	(efgtoa@n)^080h,w
  6820  0118  0862               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  6821  0119  3EA0               	fcall	_strcpy
  6822  011A  31A7  2760  3180   	goto	l3843
  6823  011D  291E               	line	357
  6824                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 357:       
                                   }
  6825                           	
  6826                           l414:	
  6827  011E                     	line	358
  6828                           	
  6829                           l3843:	
  6830  011E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 358:       
                                   w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  6831                           	movlw	0FDh
  6832  011E  30FD               	movlb 1	; select bank1
  6833  011F  0141               	addwf	(efgtoa@w)^080h,f
  6834  0120  07CF               	movlw	0FFh
  6835  0121  30FF               	addwfc	(efgtoa@w+1)^080h,f
  6836  0122  3DD0               	line	359
  6837                           	
  6838                           l3845:	
  6839  0123                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 359:       
                                   return pad(fp, &dbuf[0], w);
  6840                           	movlw	(low(_dbuf|((0x2)<<8)))&0ffh
  6841  0123  30A0               	movlb 0	; select bank0
  6842  0124  0140               	movwf	(??_efgtoa+0)+0
  6843  0125  00EC               	movf	(??_efgtoa+0)+0,w
  6844  0126  086C               	movwf	(pad@buf)
  6845  0127  00B0               	movlb 1	; select bank1
  6846  0128  0141               	movf	(efgtoa@w+1)^080h,w
  6847  0129  0850               	movlb 0	; select bank0
  6848  012A  0140               	movwf	(pad@p+1)
  6849  012B  00B2               	movlb 1	; select bank1
  6850  012C  0141               	movf	(efgtoa@w)^080h,w
  6851  012D  084F               	movlb 0	; select bank0
  6852  012E  0140               	movwf	(pad@p)
  6853  012F  00B1               	movlb 1	; select bank1
  6854  0130  0141               	movf	(efgtoa@fp)^080h,w
  6855  0131  084B               	fcall	_pad
  6856  0132  319A  22F0  3180   	movlb 0	; select bank0
  6857  0135  0140               	movf	(1+(?_pad)),w
  6858  0136  0831               	movlb 1	; select bank1
  6859  0137  0141               	movwf	(?_efgtoa+1)^080h
  6860  0138  00AB               	movlb 0	; select bank0
  6861  0139  0140               	movf	(0+(?_pad)),w
  6862  013A  0830               	movlb 1	; select bank1
  6863  013B  0141               	movwf	(?_efgtoa)^080h
  6864  013C  00AA               	goto	l407
  6865  013D  2FA6               	
  6866                           l3847:	
  6867  013E                     	goto	l407
  6868  013E  2FA6               	line	360
  6869                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 360:     }

  6870                           	
  6871                           l408:	
  6872  013F                     	line	363
  6873                           	
  6874                           l3849:	
  6875  013F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 363:     u 
                                 = 1.0;
  6876                           	movlw	0x3f
  6877  013F  303F               	movlb 1	; select bank1
  6878  0140  0141               	movwf	(efgtoa@u+3)^080h
  6879  0141  00E7               	movlw	0x80
  6880  0142  3080               	movwf	(efgtoa@u+2)^080h
  6881  0143  00E6               	movlw	0x0
  6882  0144  3000               	movwf	(efgtoa@u+1)^080h
  6883  0145  00E5               	movlw	0x0
  6884  0146  3000               	movwf	(efgtoa@u)^080h
  6885  0147  00E4               
  6886                           	line	364
  6887                           	
  6888                           l3851:	
  6889  0148                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 364:     e 
                                 = 0;
  6890                           	clrf	(efgtoa@e)^080h
  6891  0148  01E0               	clrf	(efgtoa@e+1)^080h
  6892  0149  01E1               	line	365
  6893                           	
  6894                           l3853:	
  6895  014A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 365:     if
                                  (!(g == 0.0)) {
  6896                           	movf	(efgtoa@g+3)^080h,w
  6897  014A  085F               	movlb 0	; select bank0
  6898  014B  0140               	movwf	(___fleq@ff1+3)
  6899  014C  00A3               	movlb 1	; select bank1
  6900  014D  0141               	movf	(efgtoa@g+2)^080h,w
  6901  014E  085E               	movlb 0	; select bank0
  6902  014F  0140               	movwf	(___fleq@ff1+2)
  6903  0150  00A2               	movlb 1	; select bank1
  6904  0151  0141               	movf	(efgtoa@g+1)^080h,w
  6905  0152  085D               	movlb 0	; select bank0
  6906  0153  0140               	movwf	(___fleq@ff1+1)
  6907  0154  00A1               	movlb 1	; select bank1
  6908  0155  0141               	movf	(efgtoa@g)^080h,w
  6909  0156  085C               	movlb 0	; select bank0
  6910  0157  0140               	movwf	(___fleq@ff1)
  6911  0158  00A0               
  6912                           	movlw	0x0
  6913  0159  3000               	movwf	(___fleq@ff2+3)
  6914  015A  00A7               	movlw	0x0
  6915  015B  3000               	movwf	(___fleq@ff2+2)
  6916  015C  00A6               	movlw	0x0
  6917  015D  3000               	movwf	(___fleq@ff2+1)
  6918  015E  00A5               	movlw	0x0
  6919  015F  3000               	movwf	(___fleq@ff2)
  6920  0160  00A4               
  6921                           	fcall	___fleq
  6922  0161  3187  27A7  3180   	btfsc	status,0
  6923  0164  1803               	goto	u5341
  6924  0165  2967               	goto	u5340
  6925  0166  2968               u5341:
  6926  0167                     	goto	l3869
  6927  0167  2A32               u5340:
  6928  0168                     	goto	l3861
  6929  0168  299B               	line	366
  6930                           	
  6931                           l3855:	
  6932  0169                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 366:       
                                   while (!(g < (u*10.0))) {
  6933                           	goto	l3861
  6934  0169  299B               	
  6935                           l417:	
  6936  016A                     	line	367
  6937                           	
  6938                           l3857:	
  6939  016A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 367:       
                                       u = u*10.0;
  6940                           	movlw	0x41
  6941  016A  3041               	movlb 0	; select bank0
  6942  016B  0140               	movwf	(___flmul@b+3)
  6943  016C  00B1               	movlw	0x20
  6944  016D  3020               	movwf	(___flmul@b+2)
  6945  016E  00B0               	movlw	0x0
  6946  016F  3000               	movwf	(___flmul@b+1)
  6947  0170  00AF               	movlw	0x0
  6948  0171  3000               	movwf	(___flmul@b)
  6949  0172  00AE               
  6950                           	movlb 1	; select bank1
  6951  0173  0141               	movf	(efgtoa@u+3)^080h,w
  6952  0174  0867               	movlb 0	; select bank0
  6953  0175  0140               	movwf	(___flmul@a+3)
  6954  0176  00B5               	movlb 1	; select bank1
  6955  0177  0141               	movf	(efgtoa@u+2)^080h,w
  6956  0178  0866               	movlb 0	; select bank0
  6957  0179  0140               	movwf	(___flmul@a+2)
  6958  017A  00B4               	movlb 1	; select bank1
  6959  017B  0141               	movf	(efgtoa@u+1)^080h,w
  6960  017C  0865               	movlb 0	; select bank0
  6961  017D  0140               	movwf	(___flmul@a+1)
  6962  017E  00B3               	movlb 1	; select bank1
  6963  017F  0141               	movf	(efgtoa@u)^080h,w
  6964  0180  0864               	movlb 0	; select bank0
  6965  0181  0140               	movwf	(___flmul@a)
  6966  0182  00B2               
  6967                           	fcall	___flmul
  6968  0183  3195  2595  3180   	movlb 0	; select bank0
  6969  0186  0140               	movf	(3+(?___flmul)),w
  6970  0187  0831               	movlb 1	; select bank1
  6971  0188  0141               	movwf	(efgtoa@u+3)^080h
  6972  0189  00E7               	movlb 0	; select bank0
  6973  018A  0140               	movf	(2+(?___flmul)),w
  6974  018B  0830               	movlb 1	; select bank1
  6975  018C  0141               	movwf	(efgtoa@u+2)^080h
  6976  018D  00E6               	movlb 0	; select bank0
  6977  018E  0140               	movf	(1+(?___flmul)),w
  6978  018F  082F               	movlb 1	; select bank1
  6979  0190  0141               	movwf	(efgtoa@u+1)^080h
  6980  0191  00E5               	movlb 0	; select bank0
  6981  0192  0140               	movf	(0+(?___flmul)),w
  6982  0193  082E               	movlb 1	; select bank1
  6983  0194  0141               	movwf	(efgtoa@u)^080h
  6984  0195  00E4               
  6985                           	line	368
  6986                           	
  6987                           l3859:	
  6988  0196                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 368:       
                                       ++e;
  6989                           	movlw	01h
  6990  0196  3001               	addwf	(efgtoa@e)^080h,f
  6991  0197  07E0               	movlw	0
  6992  0198  3000               	addwfc	(efgtoa@e+1)^080h,f
  6993  0199  3DE1               	goto	l3861
  6994  019A  299B               	line	369
  6995                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 369:       
                                   }
  6996                           	
  6997                           l416:	
  6998  019B                     	line	366
  6999                           	
  7000                           l3861:	
  7001  019B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 366:       
                                   while (!(g < (u*10.0))) {
  7002                           	movlb 1	; select bank1
  7003  019B  0141               	movf	(efgtoa@g+3)^080h,w
  7004  019C  085F               	movlb 0	; select bank0
  7005  019D  0140               	movwf	(___flge@ff1+3)
  7006  019E  00CB               	movlb 1	; select bank1
  7007  019F  0141               	movf	(efgtoa@g+2)^080h,w
  7008  01A0  085E               	movlb 0	; select bank0
  7009  01A1  0140               	movwf	(___flge@ff1+2)
  7010  01A2  00CA               	movlb 1	; select bank1
  7011  01A3  0141               	movf	(efgtoa@g+1)^080h,w
  7012  01A4  085D               	movlb 0	; select bank0
  7013  01A5  0140               	movwf	(___flge@ff1+1)
  7014  01A6  00C9               	movlb 1	; select bank1
  7015  01A7  0141               	movf	(efgtoa@g)^080h,w
  7016  01A8  085C               	movlb 0	; select bank0
  7017  01A9  0140               	movwf	(___flge@ff1)
  7018  01AA  00C8               
  7019                           	movlw	0x41
  7020  01AB  3041               	movwf	(___flmul@b+3)
  7021  01AC  00B1               	movlw	0x20
  7022  01AD  3020               	movwf	(___flmul@b+2)
  7023  01AE  00B0               	movlw	0x0
  7024  01AF  3000               	movwf	(___flmul@b+1)
  7025  01B0  00AF               	movlw	0x0
  7026  01B1  3000               	movwf	(___flmul@b)
  7027  01B2  00AE               
  7028                           	movlb 1	; select bank1
  7029  01B3  0141               	movf	(efgtoa@u+3)^080h,w
  7030  01B4  0867               	movlb 0	; select bank0
  7031  01B5  0140               	movwf	(___flmul@a+3)
  7032  01B6  00B5               	movlb 1	; select bank1
  7033  01B7  0141               	movf	(efgtoa@u+2)^080h,w
  7034  01B8  0866               	movlb 0	; select bank0
  7035  01B9  0140               	movwf	(___flmul@a+2)
  7036  01BA  00B4               	movlb 1	; select bank1
  7037  01BB  0141               	movf	(efgtoa@u+1)^080h,w
  7038  01BC  0865               	movlb 0	; select bank0
  7039  01BD  0140               	movwf	(___flmul@a+1)
  7040  01BE  00B3               	movlb 1	; select bank1
  7041  01BF  0141               	movf	(efgtoa@u)^080h,w
  7042  01C0  0864               	movlb 0	; select bank0
  7043  01C1  0140               	movwf	(___flmul@a)
  7044  01C2  00B2               
  7045                           	fcall	___flmul
  7046  01C3  3195  2595  3180   	movlb 0	; select bank0
  7047  01C6  0140               	movf	(3+(?___flmul)),w
  7048  01C7  0831               	movwf	(___flge@ff2+3)
  7049  01C8  00CF               	movf	(2+(?___flmul)),w
  7050  01C9  0830               	movwf	(___flge@ff2+2)
  7051  01CA  00CE               	movf	(1+(?___flmul)),w
  7052  01CB  082F               	movwf	(___flge@ff2+1)
  7053  01CC  00CD               	movf	(0+(?___flmul)),w
  7054  01CD  082E               	movwf	(___flge@ff2)
  7055  01CE  00CC               
  7056                           	fcall	___flge
  7057  01CF  319E  269D  3180   	btfsc	status,0
  7058  01D2  1803               	goto	u5351
  7059  01D3  29D5               	goto	u5350
  7060  01D4  29D6               u5351:
  7061  01D5                     	goto	l3857
  7062  01D5  296A               u5350:
  7063  01D6                     	goto	l3867
  7064  01D6  2A09               	
  7065                           l418:	
  7066  01D7                     	line	370
  7067                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 370:       
                                   while (g < u) {
  7068                           	goto	l3867
  7069  01D7  2A09               	
  7070                           l420:	
  7071  01D8                     	line	371
  7072                           	
  7073                           l3863:	
  7074  01D8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 371:       
                                       u = u/10.0;
  7075                           	movlw	0x41
  7076  01D8  3041               	movlb 0	; select bank0
  7077  01D9  0140               	movwf	(___fldiv@a+3)
  7078  01DA  00CB               	movlw	0x20
  7079  01DB  3020               	movwf	(___fldiv@a+2)
  7080  01DC  00CA               	movlw	0x0
  7081  01DD  3000               	movwf	(___fldiv@a+1)
  7082  01DE  00C9               	movlw	0x0
  7083  01DF  3000               	movwf	(___fldiv@a)
  7084  01E0  00C8               
  7085                           	movlb 1	; select bank1
  7086  01E1  0141               	movf	(efgtoa@u+3)^080h,w
  7087  01E2  0867               	movlb 0	; select bank0
  7088  01E3  0140               	movwf	(___fldiv@b+3)
  7089  01E4  00CF               	movlb 1	; select bank1
  7090  01E5  0141               	movf	(efgtoa@u+2)^080h,w
  7091  01E6  0866               	movlb 0	; select bank0
  7092  01E7  0140               	movwf	(___fldiv@b+2)
  7093  01E8  00CE               	movlb 1	; select bank1
  7094  01E9  0141               	movf	(efgtoa@u+1)^080h,w
  7095  01EA  0865               	movlb 0	; select bank0
  7096  01EB  0140               	movwf	(___fldiv@b+1)
  7097  01EC  00CD               	movlb 1	; select bank1
  7098  01ED  0141               	movf	(efgtoa@u)^080h,w
  7099  01EE  0864               	movlb 0	; select bank0
  7100  01EF  0140               	movwf	(___fldiv@b)
  7101  01F0  00CC               
  7102                           	fcall	___fldiv
  7103  01F1  3188  2010  3180   	movlb 0	; select bank0
  7104  01F4  0140               	movf	(3+(?___fldiv)),w
  7105  01F5  084B               	movlb 1	; select bank1
  7106  01F6  0141               	movwf	(efgtoa@u+3)^080h
  7107  01F7  00E7               	movlb 0	; select bank0
  7108  01F8  0140               	movf	(2+(?___fldiv)),w
  7109  01F9  084A               	movlb 1	; select bank1
  7110  01FA  0141               	movwf	(efgtoa@u+2)^080h
  7111  01FB  00E6               	movlb 0	; select bank0
  7112  01FC  0140               	movf	(1+(?___fldiv)),w
  7113  01FD  0849               	movlb 1	; select bank1
  7114  01FE  0141               	movwf	(efgtoa@u+1)^080h
  7115  01FF  00E5               	movlb 0	; select bank0
  7116  0200  0140               	movf	(0+(?___fldiv)),w
  7117  0201  0848               	movlb 1	; select bank1
  7118  0202  0141               	movwf	(efgtoa@u)^080h
  7119  0203  00E4               
  7120                           	line	372
  7121                           	
  7122                           l3865:	
  7123  0204                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 372:       
                                       --e;
  7124                           	movlw	0FFh
  7125  0204  30FF               	addwf	(efgtoa@e)^080h,f
  7126  0205  07E0               	movlw	0FFh
  7127  0206  30FF               	addwfc	(efgtoa@e+1)^080h,f
  7128  0207  3DE1               	goto	l3867
  7129  0208  2A09               	line	373
  7130                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 373:       
                                   }
  7131                           	
  7132                           l419:	
  7133  0209                     	line	370
  7134                           	
  7135                           l3867:	
  7136  0209                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 370:       
                                   while (g < u) {
  7137                           	movlb 1	; select bank1
  7138  0209  0141               	movf	(efgtoa@g+3)^080h,w
  7139  020A  085F               	movlb 0	; select bank0
  7140  020B  0140               	movwf	(___flge@ff1+3)
  7141  020C  00CB               	movlb 1	; select bank1
  7142  020D  0141               	movf	(efgtoa@g+2)^080h,w
  7143  020E  085E               	movlb 0	; select bank0
  7144  020F  0140               	movwf	(___flge@ff1+2)
  7145  0210  00CA               	movlb 1	; select bank1
  7146  0211  0141               	movf	(efgtoa@g+1)^080h,w
  7147  0212  085D               	movlb 0	; select bank0
  7148  0213  0140               	movwf	(___flge@ff1+1)
  7149  0214  00C9               	movlb 1	; select bank1
  7150  0215  0141               	movf	(efgtoa@g)^080h,w
  7151  0216  085C               	movlb 0	; select bank0
  7152  0217  0140               	movwf	(___flge@ff1)
  7153  0218  00C8               
  7154                           	movlb 1	; select bank1
  7155  0219  0141               	movf	(efgtoa@u+3)^080h,w
  7156  021A  0867               	movlb 0	; select bank0
  7157  021B  0140               	movwf	(___flge@ff2+3)
  7158  021C  00CF               	movlb 1	; select bank1
  7159  021D  0141               	movf	(efgtoa@u+2)^080h,w
  7160  021E  0866               	movlb 0	; select bank0
  7161  021F  0140               	movwf	(___flge@ff2+2)
  7162  0220  00CE               	movlb 1	; select bank1
  7163  0221  0141               	movf	(efgtoa@u+1)^080h,w
  7164  0222  0865               	movlb 0	; select bank0
  7165  0223  0140               	movwf	(___flge@ff2+1)
  7166  0224  00CD               	movlb 1	; select bank1
  7167  0225  0141               	movf	(efgtoa@u)^080h,w
  7168  0226  0864               	movlb 0	; select bank0
  7169  0227  0140               	movwf	(___flge@ff2)
  7170  0228  00CC               
  7171                           	fcall	___flge
  7172  0229  319E  269D  3180   	btfss	status,0
  7173  022C  1C03               	goto	u5361
  7174  022D  2A2F               	goto	u5360
  7175  022E  2A30               u5361:
  7176  022F                     	goto	l3863
  7177  022F  29D8               u5360:
  7178  0230                     	goto	l3869
  7179  0230  2A32               	
  7180                           l421:	
  7181  0231                     	goto	l3869
  7182  0231  2A32               	line	374
  7183                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 374:     }

  7184                           	
  7185                           l415:	
  7186  0232                     	line	377
  7187                           	
  7188                           l3869:	
  7189  0232                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 377:     mo
                                 de = tolower((int)c);
  7190                           	movlb 1	; select bank1
  7191  0232  0141               	movf	(efgtoa@c)^080h,w
  7192  0233  082E               	movlb 0	; select bank0
  7193  0234  0140               	movwf	(??_efgtoa+0)+0
  7194  0235  00EC               	clrf	(??_efgtoa+0)+0+1
  7195  0236  01ED               	movf	0+(??_efgtoa+0)+0,w
  7196  0237  086C               	movwf	(tolower@c)
  7197  0238  00A6               	movf	1+(??_efgtoa+0)+0,w
  7198  0239  086D               	movwf	(tolower@c+1)
  7199  023A  00A7               	fcall	_tolower
  7200  023B  3198  2092  3180   	movlb 0	; select bank0
  7201  023E  0140               	movf	(0+(?_tolower)),w
  7202  023F  0826               	movwf	(??_efgtoa+2)+0
  7203  0240  00EE               	movf	(??_efgtoa+2)+0,w
  7204  0241  086E               	movlb 1	; select bank1
  7205  0242  0141               	movwf	(efgtoa@mode)^080h
  7206  0243  00D1               	line	378
  7207                           	
  7208                           l3871:	
  7209  0244                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 378:     nm
                                 ode = mode;
  7210                           	movf	(efgtoa@mode)^080h,w
  7211  0244  0851               	movlb 0	; select bank0
  7212  0245  0140               	movwf	(??_efgtoa+0)+0
  7213  0246  00EC               	movf	(??_efgtoa+0)+0,w
  7214  0247  086C               	movlb 1	; select bank1
  7215  0248  0141               	movwf	(efgtoa@nmode)^080h
  7216  0249  00CE               	line	379
  7217                           	
  7218                           l3873:	
  7219  024A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 379:     if
                                  (mode == 'g') {
  7220                           		movlw	103
  7221  024A  3067               	xorwf	((efgtoa@mode)^080h),w
  7222  024B  0651               	btfss	status,2
  7223  024C  1D03               	goto	u5371
  7224  024D  2A4F               	goto	u5370
  7225  024E  2A50               u5371:
  7226  024F                     	goto	l422
  7227  024F  2A7A               u5370:
  7228  0250                     	line	380
  7229                           	
  7230                           l3875:	
  7231  0250                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 380:   if (
                                 prec == 0) {
  7232                           	movlb 2	; select bank2
  7233  0250  0142               	movf	((_prec)^0100h),w
  7234  0251  0866               iorwf	((_prec+1)^0100h),w
  7235  0252  0467               	btfss	status,2
  7236  0253  1D03               	goto	u5381
  7237  0254  2A56               	goto	u5380
  7238  0255  2A57               u5381:
  7239  0256                     	goto	l423
  7240  0256  2A5B               u5380:
  7241  0257                     	line	381
  7242                           	
  7243                           l3877:	
  7244  0257                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 381:    pre
                                 c = 1;
  7245                           	movlw	01h
  7246  0257  3001               	movwf	(_prec)^0100h
  7247  0258  00E6               	movlw	0
  7248  0259  3000               	movwf	((_prec)^0100h)+1
  7249  025A  00E7               	line	382
  7250                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 382:   }
  7251                           	
  7252                           l423:	
  7253  025B                     	line	383
  7254                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 383:       
                                   p = (0 < prec) ? prec : 6;
  7255                           	movf	(_prec+1)^0100h,w
  7256  025B  0867               	xorlw	80h
  7257  025C  3A80               	movlb 0	; select bank0
  7258  025D  0140               	movwf	(??_efgtoa+0)+0
  7259  025E  00EC               	movlw	(0)^80h
  7260  025F  3080               	subwf	(??_efgtoa+0)+0,w
  7261  0260  026C               	skipz
  7262  0261  1D03               	goto	u5395
  7263  0262  2A66               	movlw	01h
  7264  0263  3001               	movlb 2	; select bank2
  7265  0264  0142               	subwf	(_prec)^0100h,w
  7266  0265  0266               u5395:
  7267  0266                     
  7268                           	skipnc
  7269  0266  1803               	goto	u5391
  7270  0267  2A69               	goto	u5390
  7271  0268  2A6A               u5391:
  7272  0269                     	goto	l3881
  7273  0269  2A70               u5390:
  7274  026A                     	
  7275                           l3879:	
  7276  026A                     	movlw	06h
  7277  026A  3006               	movlb 1	; select bank1
  7278  026B  0141               	movwf	(efgtoa@p)^080h
  7279  026C  00CC               	movlw	0
  7280  026D  3000               	movwf	((efgtoa@p)^080h)+1
  7281  026E  00CD               	goto	l3887
  7282  026F  2A8E               	
  7283                           l425:	
  7284  0270                     	
  7285                           l3881:	
  7286  0270                     	movlb 2	; select bank2
  7287  0270  0142               	movf	(_prec+1)^0100h,w
  7288  0271  0867               	movlb 1	; select bank1
  7289  0272  0141               	movwf	(efgtoa@p+1)^080h
  7290  0273  00CD               	movlb 2	; select bank2
  7291  0274  0142               	movf	(_prec)^0100h,w
  7292  0275  0866               	movlb 1	; select bank1
  7293  0276  0141               	movwf	(efgtoa@p)^080h
  7294  0277  00CC               	goto	l3887
  7295  0278  2A8E               	
  7296                           l427:	
  7297  0279                     	line	384
  7298                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 384:     } 
                                 else {
  7299                           	goto	l3887
  7300  0279  2A8E               	
  7301                           l422:	
  7302  027A                     	line	385
  7303                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 385:       
                                   p = (prec < 0) ? 6 : prec;
  7304                           	movlb 2	; select bank2
  7305  027A  0142               	btfsc	(_prec+1)^0100h,7
  7306  027B  1BE7               	goto	u5401
  7307  027C  2A7E               	goto	u5400
  7308  027D  2A7F               u5401:
  7309  027E                     	goto	l3885
  7310  027E  2A87               u5400:
  7311  027F                     	
  7312                           l3883:	
  7313  027F                     	movf	(_prec+1)^0100h,w
  7314  027F  0867               	movlb 1	; select bank1
  7315  0280  0141               	movwf	(efgtoa@p+1)^080h
  7316  0281  00CD               	movlb 2	; select bank2
  7317  0282  0142               	movf	(_prec)^0100h,w
  7318  0283  0866               	movlb 1	; select bank1
  7319  0284  0141               	movwf	(efgtoa@p)^080h
  7320  0285  00CC               	goto	l3887
  7321  0286  2A8E               	
  7322                           l430:	
  7323  0287                     	
  7324                           l3885:	
  7325  0287                     	movlw	06h
  7326  0287  3006               	movlb 1	; select bank1
  7327  0288  0141               	movwf	(efgtoa@p)^080h
  7328  0289  00CC               	movlw	0
  7329  028A  3000               	movwf	((efgtoa@p)^080h)+1
  7330  028B  00CD               	goto	l3887
  7331  028C  2A8E               	
  7332                           l432:	
  7333  028D                     	goto	l3887
  7334  028D  2A8E               	line	386
  7335                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 386:     }

  7336                           	
  7337                           l428:	
  7338  028E                     	line	389
  7339                           	
  7340                           l3887:	
  7341  028E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 389:     if
                                  (mode == 'g') {
  7342                           		movlw	103
  7343  028E  3067               	xorwf	((efgtoa@mode)^080h),w
  7344  028F  0651               	btfss	status,2
  7345  0290  1D03               	goto	u5411
  7346  0291  2A93               	goto	u5410
  7347  0292  2A94               u5411:
  7348  0293                     	goto	l433
  7349  0293  2ACD               u5410:
  7350  0294                     	line	390
  7351                           	
  7352                           l3889:	
  7353  0294                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 390:       
                                   if (!(e < -4) && !((p - 1) < e)) {
  7354                           	movf	(efgtoa@e+1)^080h,w
  7355  0294  0861               	xorlw	80h
  7356  0295  3A80               	movlb 0	; select bank0
  7357  0296  0140               	movwf	(??_efgtoa+0)+0
  7358  0297  00EC               	movlw	(0FFh)^80h
  7359  0298  307F               	subwf	(??_efgtoa+0)+0,w
  7360  0299  026C               	skipz
  7361  029A  1D03               	goto	u5425
  7362  029B  2A9F               	movlw	0FCh
  7363  029C  30FC               	movlb 1	; select bank1
  7364  029D  0141               	subwf	(efgtoa@e)^080h,w
  7365  029E  0260               u5425:
  7366  029F                     
  7367                           	skipc
  7368  029F  1C03               	goto	u5421
  7369  02A0  2AA2               	goto	u5420
  7370  02A1  2AA3               u5421:
  7371  02A2                     	goto	l3895
  7372  02A2  2AC6               u5420:
  7373  02A3                     	
  7374                           l3891:	
  7375  02A3                     	movlb 1	; select bank1
  7376  02A3  0141               	movf	(efgtoa@p)^080h,w
  7377  02A4  084C               	addlw	0FFh
  7378  02A5  3EFF               	movlb 0	; select bank0
  7379  02A6  0140               	movwf	(??_efgtoa+0)+0
  7380  02A7  00EC               	movlw	0FFh
  7381  02A8  30FF               	movlb 1	; select bank1
  7382  02A9  0141               	addwfc	(efgtoa@p+1)^080h,w
  7383  02AA  3D4D               	movlb 0	; select bank0
  7384  02AB  0140               	movwf	1+(??_efgtoa+0)+0
  7385  02AC  00ED               	movf	1+(??_efgtoa+0)+0,w
  7386  02AD  086D               	xorlw	80h
  7387  02AE  3A80               	movwf	(??_efgtoa+2)+0
  7388  02AF  00EE               	movlb 1	; select bank1
  7389  02B0  0141               	movf	(efgtoa@e+1)^080h,w
  7390  02B1  0861               	xorlw	80h
  7391  02B2  3A80               	movlb 0	; select bank0
  7392  02B3  0140               	subwf	(??_efgtoa+2)+0,w
  7393  02B4  026E               	skipz
  7394  02B5  1D03               	goto	u5435
  7395  02B6  2ABB               	movlb 1	; select bank1
  7396  02B7  0141               	movf	(efgtoa@e)^080h,w
  7397  02B8  0860               	movlb 0	; select bank0
  7398  02B9  0140               	subwf	0+(??_efgtoa+0)+0,w
  7399  02BA  026C               u5435:
  7400  02BB                     
  7401                           	skipc
  7402  02BB  1C03               	goto	u5431
  7403  02BC  2ABE               	goto	u5430
  7404  02BD  2ABF               u5431:
  7405  02BE                     	goto	l3895
  7406  02BE  2AC6               u5430:
  7407  02BF                     	line	391
  7408                           	
  7409                           l3893:	
  7410  02BF                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 391:       
                                       nmode = 'f';
  7411                           	movlw	low(066h)
  7412  02BF  3066               	movlb 0	; select bank0
  7413  02C0  0140               	movwf	(??_efgtoa+0)+0
  7414  02C1  00EC               	movf	(??_efgtoa+0)+0,w
  7415  02C2  086C               	movlb 1	; select bank1
  7416  02C3  0141               	movwf	(efgtoa@nmode)^080h
  7417  02C4  00CE               	line	392
  7418                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 392:       
                                   } else {
  7419                           	goto	l433
  7420  02C5  2ACD               	
  7421                           l434:	
  7422  02C6                     	line	393
  7423                           	
  7424                           l3895:	
  7425  02C6                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 393:       
                                       nmode = 'e';
  7426                           	movlw	low(065h)
  7427  02C6  3065               	movlb 0	; select bank0
  7428  02C7  0140               	movwf	(??_efgtoa+0)+0
  7429  02C8  00EC               	movf	(??_efgtoa+0)+0,w
  7430  02C9  086C               	movlb 1	; select bank1
  7431  02CA  0141               	movwf	(efgtoa@nmode)^080h
  7432  02CB  00CE               	goto	l433
  7433  02CC  2ACD               	line	394
  7434                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 394:       
                                   }
  7435                           	
  7436                           l435:	
  7437  02CD                     	line	395
  7438                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 395:     }

  7439                           	
  7440                           l433:	
  7441  02CD                     	line	398
  7442                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 398:     m 
                                 = p;
  7443                           	movf	(efgtoa@p+1)^080h,w
  7444  02CD  084D               	movwf	(efgtoa@m+1)^080h
  7445  02CE  00C4               	movf	(efgtoa@p)^080h,w
  7446  02CF  084C               	movwf	(efgtoa@m)^080h
  7447  02D0  00C3               	line	399
  7448                           	
  7449                           l3897:	
  7450  02D1                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 399:     if
                                  (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  7451                           		movlw	103
  7452  02D1  3067               	xorwf	((efgtoa@mode)^080h),w
  7453  02D2  0651               	btfss	status,2
  7454  02D3  1D03               	goto	u5441
  7455  02D4  2AD6               	goto	u5440
  7456  02D5  2AD7               u5441:
  7457  02D6                     	goto	l3903
  7458  02D6  2AE2               u5440:
  7459  02D7                     	
  7460                           l3899:	
  7461  02D7                     		movlw	102
  7462  02D7  3066               	xorwf	((efgtoa@nmode)^080h),w
  7463  02D8  064E               	btfss	status,2
  7464  02D9  1D03               	goto	u5451
  7465  02DA  2ADC               	goto	u5450
  7466  02DB  2ADD               u5451:
  7467  02DC                     	goto	l3905
  7468  02DC  2AE7               u5450:
  7469  02DD                     	
  7470                           l3901:	
  7471  02DD                     	btfss	(efgtoa@e+1)^080h,7
  7472  02DD  1FE1               	goto	u5461
  7473  02DE  2AE0               	goto	u5460
  7474  02DF  2AE1               u5461:
  7475  02E0                     	goto	l3905
  7476  02E0  2AE7               u5460:
  7477  02E1                     	goto	l3903
  7478  02E1  2AE2               	
  7479                           l438:	
  7480  02E2                     	line	400
  7481                           	
  7482                           l3903:	
  7483  02E2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 400:       
                                   ++m;
  7484                           	movlw	01h
  7485  02E2  3001               	addwf	(efgtoa@m)^080h,f
  7486  02E3  07C3               	movlw	0
  7487  02E4  3000               	addwfc	(efgtoa@m+1)^080h,f
  7488  02E5  3DC4               	goto	l3905
  7489  02E6  2AE7               	line	401
  7490                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 401:     }

  7491                           	
  7492                           l436:	
  7493  02E7                     	line	404
  7494                           	
  7495                           l3905:	
  7496  02E7                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 404:     if
                                  (nmode == 'f') {
  7497                           		movlw	102
  7498  02E7  3066               	xorwf	((efgtoa@nmode)^080h),w
  7499  02E8  064E               	btfss	status,2
  7500  02E9  1D03               	goto	u5471
  7501  02EA  2AEC               	goto	u5470
  7502  02EB  2AED               u5471:
  7503  02EC                     	goto	l3917
  7504  02EC  2B08               u5470:
  7505  02ED                     	line	405
  7506                           	
  7507                           l3907:	
  7508  02ED                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 405:       
                                   if (e < 0) {
  7509                           	btfss	(efgtoa@e+1)^080h,7
  7510  02ED  1FE1               	goto	u5481
  7511  02EE  2AF0               	goto	u5480
  7512  02EF  2AF1               u5481:
  7513  02F0                     	goto	l3913
  7514  02F0  2AFC               u5480:
  7515  02F1                     	line	406
  7516                           	
  7517                           l3909:	
  7518  02F1                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 406:       
                                       u = 1.0;
  7519                           	movlw	0x3f
  7520  02F1  303F               	movwf	(efgtoa@u+3)^080h
  7521  02F2  00E7               	movlw	0x80
  7522  02F3  3080               	movwf	(efgtoa@u+2)^080h
  7523  02F4  00E6               	movlw	0x0
  7524  02F5  3000               	movwf	(efgtoa@u+1)^080h
  7525  02F6  00E5               	movlw	0x0
  7526  02F7  3000               	movwf	(efgtoa@u)^080h
  7527  02F8  00E4               
  7528                           	line	407
  7529                           	
  7530                           l3911:	
  7531  02F9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 407:       
                                       e = 0;
  7532                           	clrf	(efgtoa@e)^080h
  7533  02F9  01E0               	clrf	(efgtoa@e+1)^080h
  7534  02FA  01E1               	goto	l3913
  7535  02FB  2AFC               	line	408
  7536                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 408:       
                                   }
  7537                           	
  7538                           l440:	
  7539  02FC                     	line	409
  7540                           	
  7541                           l3913:	
  7542  02FC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 409:       
                                   if (!(mode == 'g')) {
  7543                           		movlw	103
  7544  02FC  3067               	xorwf	((efgtoa@mode)^080h),w
  7545  02FD  0651               	btfsc	status,2
  7546  02FE  1903               	goto	u5491
  7547  02FF  2B01               	goto	u5490
  7548  0300  2B02               u5491:
  7549  0301                     	goto	l3917
  7550  0301  2B08               u5490:
  7551  0302                     	line	410
  7552                           	
  7553                           l3915:	
  7554  0302                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 410:       
                                       m += e;
  7555                           	movf	(efgtoa@e)^080h,w
  7556  0302  0860               	addwf	(efgtoa@m)^080h,f
  7557  0303  07C3               	movf	(efgtoa@e+1)^080h,w
  7558  0304  0861               	addwfc	(efgtoa@m+1)^080h,f
  7559  0305  3DC4               	goto	l3917
  7560  0306  2B08               	line	411
  7561                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 411:       
                                   }
  7562                           	
  7563                           l441:	
  7564  0307                     	goto	l3917
  7565  0307  2B08               	line	412
  7566                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 412:     }

  7567                           	
  7568                           l439:	
  7569  0308                     	line	415
  7570                           	
  7571                           l3917:	
  7572  0308                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 415:     i 
                                 = 0;
  7573                           	clrf	(efgtoa@i)^080h
  7574  0308  01DA               	clrf	(efgtoa@i+1)^080h
  7575  0309  01DB               	line	416
  7576                           	
  7577                           l3919:	
  7578  030A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 416:     h 
                                 = g;
  7579                           	movf	(efgtoa@g+3)^080h,w
  7580  030A  085F               	movwf	(efgtoa@h+3)^080h
  7581  030B  00D5               	movf	(efgtoa@g+2)^080h,w
  7582  030C  085E               	movwf	(efgtoa@h+2)^080h
  7583  030D  00D4               	movf	(efgtoa@g+1)^080h,w
  7584  030E  085D               	movwf	(efgtoa@h+1)^080h
  7585  030F  00D3               	movf	(efgtoa@g)^080h,w
  7586  0310  085C               	movwf	(efgtoa@h)^080h
  7587  0311  00D2               
  7588                           	line	417
  7589                           	
  7590                           l3921:	
  7591  0312                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 417:     ou
                                  = u;
  7592                           	movf	(efgtoa@u+3)^080h,w
  7593  0312  0867               	movwf	(efgtoa@ou+3)^080h
  7594  0313  00B2               	movf	(efgtoa@u+2)^080h,w
  7595  0314  0866               	movwf	(efgtoa@ou+2)^080h
  7596  0315  00B1               	movf	(efgtoa@u+1)^080h,w
  7597  0316  0865               	movwf	(efgtoa@ou+1)^080h
  7598  0317  00B0               	movf	(efgtoa@u)^080h,w
  7599  0318  0864               	movwf	(efgtoa@ou)^080h
  7600  0319  00AF               
  7601                           	line	418
  7602                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 418:     wh
                                 ile (i < m) {
  7603                           	goto	l3927
  7604  031A  2BF3               	
  7605                           l443:	
  7606  031B                     	line	419
  7607                           	
  7608                           l3923:	
  7609  031B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 419:       
                                   l = floorf(h/u);
  7610                           	movlb 1	; select bank1
  7611  031B  0141               	movf	(efgtoa@u+3)^080h,w
  7612  031C  0867               	movlb 0	; select bank0
  7613  031D  0140               	movwf	(___fldiv@a+3)
  7614  031E  00CB               	movlb 1	; select bank1
  7615  031F  0141               	movf	(efgtoa@u+2)^080h,w
  7616  0320  0866               	movlb 0	; select bank0
  7617  0321  0140               	movwf	(___fldiv@a+2)
  7618  0322  00CA               	movlb 1	; select bank1
  7619  0323  0141               	movf	(efgtoa@u+1)^080h,w
  7620  0324  0865               	movlb 0	; select bank0
  7621  0325  0140               	movwf	(___fldiv@a+1)
  7622  0326  00C9               	movlb 1	; select bank1
  7623  0327  0141               	movf	(efgtoa@u)^080h,w
  7624  0328  0864               	movlb 0	; select bank0
  7625  0329  0140               	movwf	(___fldiv@a)
  7626  032A  00C8               
  7627                           	movlb 1	; select bank1
  7628  032B  0141               	movf	(efgtoa@h+3)^080h,w
  7629  032C  0855               	movlb 0	; select bank0
  7630  032D  0140               	movwf	(___fldiv@b+3)
  7631  032E  00CF               	movlb 1	; select bank1
  7632  032F  0141               	movf	(efgtoa@h+2)^080h,w
  7633  0330  0854               	movlb 0	; select bank0
  7634  0331  0140               	movwf	(___fldiv@b+2)
  7635  0332  00CE               	movlb 1	; select bank1
  7636  0333  0141               	movf	(efgtoa@h+1)^080h,w
  7637  0334  0853               	movlb 0	; select bank0
  7638  0335  0140               	movwf	(___fldiv@b+1)
  7639  0336  00CD               	movlb 1	; select bank1
  7640  0337  0141               	movf	(efgtoa@h)^080h,w
  7641  0338  0852               	movlb 0	; select bank0
  7642  0339  0140               	movwf	(___fldiv@b)
  7643  033A  00CC               
  7644                           	fcall	___fldiv
  7645  033B  3188  2010  3180   	movlb 0	; select bank0
  7646  033E  0140               	movf	(3+(?___fldiv)),w
  7647  033F  084B               	movwf	(floorf@x+3)
  7648  0340  00E5               	movf	(2+(?___fldiv)),w
  7649  0341  084A               	movwf	(floorf@x+2)
  7650  0342  00E4               	movf	(1+(?___fldiv)),w
  7651  0343  0849               	movwf	(floorf@x+1)
  7652  0344  00E3               	movf	(0+(?___fldiv)),w
  7653  0345  0848               	movwf	(floorf@x)
  7654  0346  00E2               
  7655                           	fcall	_floorf
  7656  0347  3194  2450  3180   	movlb 0	; select bank0
  7657  034A  0140               	movf	(3+(?_floorf)),w
  7658  034B  0865               	movlb 1	; select bank1
  7659  034C  0141               	movwf	(efgtoa@l+3)^080h
  7660  034D  00D9               	movlb 0	; select bank0
  7661  034E  0140               	movf	(2+(?_floorf)),w
  7662  034F  0864               	movlb 1	; select bank1
  7663  0350  0141               	movwf	(efgtoa@l+2)^080h
  7664  0351  00D8               	movlb 0	; select bank0
  7665  0352  0140               	movf	(1+(?_floorf)),w
  7666  0353  0863               	movlb 1	; select bank1
  7667  0354  0141               	movwf	(efgtoa@l+1)^080h
  7668  0355  00D7               	movlb 0	; select bank0
  7669  0356  0140               	movf	(0+(?_floorf)),w
  7670  0357  0862               	movlb 1	; select bank1
  7671  0358  0141               	movwf	(efgtoa@l)^080h
  7672  0359  00D6               
  7673                           	line	420
  7674                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 420:       
                                   d = (int)l;
  7675                           	movf	(efgtoa@l+3)^080h,w
  7676  035A  0859               	movlb 0	; select bank0
  7677  035B  0140               	movwf	(___fltol@f1+3)
  7678  035C  00A3               	movlb 1	; select bank1
  7679  035D  0141               	movf	(efgtoa@l+2)^080h,w
  7680  035E  0858               	movlb 0	; select bank0
  7681  035F  0140               	movwf	(___fltol@f1+2)
  7682  0360  00A2               	movlb 1	; select bank1
  7683  0361  0141               	movf	(efgtoa@l+1)^080h,w
  7684  0362  0857               	movlb 0	; select bank0
  7685  0363  0140               	movwf	(___fltol@f1+1)
  7686  0364  00A1               	movlb 1	; select bank1
  7687  0365  0141               	movf	(efgtoa@l)^080h,w
  7688  0366  0856               	movlb 0	; select bank0
  7689  0367  0140               	movwf	(___fltol@f1)
  7690  0368  00A0               
  7691                           	fcall	___fltol
  7692  0369  319D  2561  3180   	movlb 0	; select bank0
  7693  036C  0140               	movf	(1+(?___fltol)),w
  7694  036D  0821               	movlb 1	; select bank1
  7695  036E  0141               	movwf	(efgtoa@d+1)^080h
  7696  036F  00C8               	movlb 0	; select bank0
  7697  0370  0140               	movf	(0+(?___fltol)),w
  7698  0371  0820               	movlb 1	; select bank1
  7699  0372  0141               	movwf	(efgtoa@d)^080h
  7700  0373  00C7               	line	421
  7701                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 421:       
                                   h -= l*u;
  7702                           	movf	(efgtoa@l+3)^080h,w
  7703  0374  0859               	movlb 0	; select bank0
  7704  0375  0140               	movwf	(___flmul@a+3)
  7705  0376  00B5               	movlb 1	; select bank1
  7706  0377  0141               	movf	(efgtoa@l+2)^080h,w
  7707  0378  0858               	movlb 0	; select bank0
  7708  0379  0140               	movwf	(___flmul@a+2)
  7709  037A  00B4               	movlb 1	; select bank1
  7710  037B  0141               	movf	(efgtoa@l+1)^080h,w
  7711  037C  0857               	movlb 0	; select bank0
  7712  037D  0140               	movwf	(___flmul@a+1)
  7713  037E  00B3               	movlb 1	; select bank1
  7714  037F  0141               	movf	(efgtoa@l)^080h,w
  7715  0380  0856               	movlb 0	; select bank0
  7716  0381  0140               	movwf	(___flmul@a)
  7717  0382  00B2               
  7718                           	movlb 1	; select bank1
  7719  0383  0141               	movf	(efgtoa@u+3)^080h,w
  7720  0384  0867               	movlb 0	; select bank0
  7721  0385  0140               	movwf	(___flmul@b+3)
  7722  0386  00B1               	movlb 1	; select bank1
  7723  0387  0141               	movf	(efgtoa@u+2)^080h,w
  7724  0388  0866               	movlb 0	; select bank0
  7725  0389  0140               	movwf	(___flmul@b+2)
  7726  038A  00B0               	movlb 1	; select bank1
  7727  038B  0141               	movf	(efgtoa@u+1)^080h,w
  7728  038C  0865               	movlb 0	; select bank0
  7729  038D  0140               	movwf	(___flmul@b+1)
  7730  038E  00AF               	movlb 1	; select bank1
  7731  038F  0141               	movf	(efgtoa@u)^080h,w
  7732  0390  0864               	movlb 0	; select bank0
  7733  0391  0140               	movwf	(___flmul@b)
  7734  0392  00AE               
  7735                           	fcall	___flmul
  7736  0393  3195  2595  3180   	movlb 0	; select bank0
  7737  0396  0140               	movf	(3+(?___flmul)),w
  7738  0397  0831               	movwf	(___flsub@a+3)
  7739  0398  00CB               	movf	(2+(?___flmul)),w
  7740  0399  0830               	movwf	(___flsub@a+2)
  7741  039A  00CA               	movf	(1+(?___flmul)),w
  7742  039B  082F               	movwf	(___flsub@a+1)
  7743  039C  00C9               	movf	(0+(?___flmul)),w
  7744  039D  082E               	movwf	(___flsub@a)
  7745  039E  00C8               
  7746                           	movlb 1	; select bank1
  7747  039F  0141               	movf	(efgtoa@h+3)^080h,w
  7748  03A0  0855               	movlb 0	; select bank0
  7749  03A1  0140               	movwf	(___flsub@b+3)
  7750  03A2  00CF               	movlb 1	; select bank1
  7751  03A3  0141               	movf	(efgtoa@h+2)^080h,w
  7752  03A4  0854               	movlb 0	; select bank0
  7753  03A5  0140               	movwf	(___flsub@b+2)
  7754  03A6  00CE               	movlb 1	; select bank1
  7755  03A7  0141               	movf	(efgtoa@h+1)^080h,w
  7756  03A8  0853               	movlb 0	; select bank0
  7757  03A9  0140               	movwf	(___flsub@b+1)
  7758  03AA  00CD               	movlb 1	; select bank1
  7759  03AB  0141               	movf	(efgtoa@h)^080h,w
  7760  03AC  0852               	movlb 0	; select bank0
  7761  03AD  0140               	movwf	(___flsub@b)
  7762  03AE  00CC               
  7763                           	fcall	___flsub
  7764  03AF  31A6  26D5  3180   	movlb 0	; select bank0
  7765  03B2  0140               	movf	(3+(?___flsub)),w
  7766  03B3  084B               	movlb 1	; select bank1
  7767  03B4  0141               	movwf	(efgtoa@h+3)^080h
  7768  03B5  00D5               	movlb 0	; select bank0
  7769  03B6  0140               	movf	(2+(?___flsub)),w
  7770  03B7  084A               	movlb 1	; select bank1
  7771  03B8  0141               	movwf	(efgtoa@h+2)^080h
  7772  03B9  00D4               	movlb 0	; select bank0
  7773  03BA  0140               	movf	(1+(?___flsub)),w
  7774  03BB  0849               	movlb 1	; select bank1
  7775  03BC  0141               	movwf	(efgtoa@h+1)^080h
  7776  03BD  00D3               	movlb 0	; select bank0
  7777  03BE  0140               	movf	(0+(?___flsub)),w
  7778  03BF  0848               	movlb 1	; select bank1
  7779  03C0  0141               	movwf	(efgtoa@h)^080h
  7780  03C1  00D2               
  7781                           	line	422
  7782                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 422:       
                                   u = u/10.0;
  7783                           	movlw	0x41
  7784  03C2  3041               	movlb 0	; select bank0
  7785  03C3  0140               	movwf	(___fldiv@a+3)
  7786  03C4  00CB               	movlw	0x20
  7787  03C5  3020               	movwf	(___fldiv@a+2)
  7788  03C6  00CA               	movlw	0x0
  7789  03C7  3000               	movwf	(___fldiv@a+1)
  7790  03C8  00C9               	movlw	0x0
  7791  03C9  3000               	movwf	(___fldiv@a)
  7792  03CA  00C8               
  7793                           	movlb 1	; select bank1
  7794  03CB  0141               	movf	(efgtoa@u+3)^080h,w
  7795  03CC  0867               	movlb 0	; select bank0
  7796  03CD  0140               	movwf	(___fldiv@b+3)
  7797  03CE  00CF               	movlb 1	; select bank1
  7798  03CF  0141               	movf	(efgtoa@u+2)^080h,w
  7799  03D0  0866               	movlb 0	; select bank0
  7800  03D1  0140               	movwf	(___fldiv@b+2)
  7801  03D2  00CE               	movlb 1	; select bank1
  7802  03D3  0141               	movf	(efgtoa@u+1)^080h,w
  7803  03D4  0865               	movlb 0	; select bank0
  7804  03D5  0140               	movwf	(___fldiv@b+1)
  7805  03D6  00CD               	movlb 1	; select bank1
  7806  03D7  0141               	movf	(efgtoa@u)^080h,w
  7807  03D8  0864               	movlb 0	; select bank0
  7808  03D9  0140               	movwf	(___fldiv@b)
  7809  03DA  00CC               
  7810                           	fcall	___fldiv
  7811  03DB  3188  2010  3180   	movlb 0	; select bank0
  7812  03DE  0140               	movf	(3+(?___fldiv)),w
  7813  03DF  084B               	movlb 1	; select bank1
  7814  03E0  0141               	movwf	(efgtoa@u+3)^080h
  7815  03E1  00E7               	movlb 0	; select bank0
  7816  03E2  0140               	movf	(2+(?___fldiv)),w
  7817  03E3  084A               	movlb 1	; select bank1
  7818  03E4  0141               	movwf	(efgtoa@u+2)^080h
  7819  03E5  00E6               	movlb 0	; select bank0
  7820  03E6  0140               	movf	(1+(?___fldiv)),w
  7821  03E7  0849               	movlb 1	; select bank1
  7822  03E8  0141               	movwf	(efgtoa@u+1)^080h
  7823  03E9  00E5               	movlb 0	; select bank0
  7824  03EA  0140               	movf	(0+(?___fldiv)),w
  7825  03EB  0848               	movlb 1	; select bank1
  7826  03EC  0141               	movwf	(efgtoa@u)^080h
  7827  03ED  00E4               
  7828                           	line	423
  7829                           	
  7830                           l3925:	
  7831  03EE                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 423:       
                                   ++i;
  7832                           	movlw	01h
  7833  03EE  3001               	addwf	(efgtoa@i)^080h,f
  7834  03EF  07DA               	movlw	0
  7835  03F0  3000               	addwfc	(efgtoa@i+1)^080h,f
  7836  03F1  3DDB               	goto	l3927
  7837  03F2  2BF3               	line	424
  7838                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 424:     }

  7839                           	
  7840                           l442:	
  7841  03F3                     	line	418
  7842                           	
  7843                           l3927:	
  7844  03F3                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 418:     wh
                                 ile (i < m) {
  7845                           	movf	(efgtoa@i+1)^080h,w
  7846  03F3  085B               	xorlw	80h
  7847  03F4  3A80               	movlb 0	; select bank0
  7848  03F5  0140               	movwf	(??_efgtoa+0)+0
  7849  03F6  00EC               	movlb 1	; select bank1
  7850  03F7  0141               	movf	(efgtoa@m+1)^080h,w
  7851  03F8  0844               	xorlw	80h
  7852  03F9  3A80               	movlb 0	; select bank0
  7853  03FA  0140               	subwf	(??_efgtoa+0)+0,w
  7854  03FB  026C               	skipz
  7855  03FC  1D03               	goto	u5505
  7856  03FD  2C01               	movlb 1	; select bank1
  7857  03FE  0141               	movf	(efgtoa@m)^080h,w
  7858  03FF  0843               	subwf	(efgtoa@i)^080h,w
  7859  0400  025A               u5505:
  7860  0401                     
  7861                           	skipc
  7862  0401  1C03               	goto	u5501
  7863  0402  2C04               	goto	u5500
  7864  0403  2C05               u5501:
  7865  0404                     	goto	l3923
  7866  0404  2B1B               u5500:
  7867  0405                     	goto	l3929
  7868  0405  2C06               	
  7869                           l444:	
  7870  0406                     	line	427
  7871                           	
  7872                           l3929:	
  7873  0406                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 427:     l 
                                 = u*5.0;
  7874                           	movlw	0x40
  7875  0406  3040               	movlb 0	; select bank0
  7876  0407  0140               	movwf	(___flmul@b+3)
  7877  0408  00B1               	movlw	0xa0
  7878  0409  30A0               	movwf	(___flmul@b+2)
  7879  040A  00B0               	movlw	0x0
  7880  040B  3000               	movwf	(___flmul@b+1)
  7881  040C  00AF               	movlw	0x0
  7882  040D  3000               	movwf	(___flmul@b)
  7883  040E  00AE               
  7884                           	movlb 1	; select bank1
  7885  040F  0141               	movf	(efgtoa@u+3)^080h,w
  7886  0410  0867               	movlb 0	; select bank0
  7887  0411  0140               	movwf	(___flmul@a+3)
  7888  0412  00B5               	movlb 1	; select bank1
  7889  0413  0141               	movf	(efgtoa@u+2)^080h,w
  7890  0414  0866               	movlb 0	; select bank0
  7891  0415  0140               	movwf	(___flmul@a+2)
  7892  0416  00B4               	movlb 1	; select bank1
  7893  0417  0141               	movf	(efgtoa@u+1)^080h,w
  7894  0418  0865               	movlb 0	; select bank0
  7895  0419  0140               	movwf	(___flmul@a+1)
  7896  041A  00B3               	movlb 1	; select bank1
  7897  041B  0141               	movf	(efgtoa@u)^080h,w
  7898  041C  0864               	movlb 0	; select bank0
  7899  041D  0140               	movwf	(___flmul@a)
  7900  041E  00B2               
  7901                           	fcall	___flmul
  7902  041F  3195  2595  3180   	movlb 0	; select bank0
  7903  0422  0140               	movf	(3+(?___flmul)),w
  7904  0423  0831               	movlb 1	; select bank1
  7905  0424  0141               	movwf	(efgtoa@l+3)^080h
  7906  0425  00D9               	movlb 0	; select bank0
  7907  0426  0140               	movf	(2+(?___flmul)),w
  7908  0427  0830               	movlb 1	; select bank1
  7909  0428  0141               	movwf	(efgtoa@l+2)^080h
  7910  0429  00D8               	movlb 0	; select bank0
  7911  042A  0140               	movf	(1+(?___flmul)),w
  7912  042B  082F               	movlb 1	; select bank1
  7913  042C  0141               	movwf	(efgtoa@l+1)^080h
  7914  042D  00D7               	movlb 0	; select bank0
  7915  042E  0140               	movf	(0+(?___flmul)),w
  7916  042F  082E               	movlb 1	; select bank1
  7917  0430  0141               	movwf	(efgtoa@l)^080h
  7918  0431  00D6               
  7919                           	line	428
  7920                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 428:     if
                                  (h < l) {
  7921                           	movf	(efgtoa@h+3)^080h,w
  7922  0432  0855               	movlb 0	; select bank0
  7923  0433  0140               	movwf	(___flge@ff1+3)
  7924  0434  00CB               	movlb 1	; select bank1
  7925  0435  0141               	movf	(efgtoa@h+2)^080h,w
  7926  0436  0854               	movlb 0	; select bank0
  7927  0437  0140               	movwf	(___flge@ff1+2)
  7928  0438  00CA               	movlb 1	; select bank1
  7929  0439  0141               	movf	(efgtoa@h+1)^080h,w
  7930  043A  0853               	movlb 0	; select bank0
  7931  043B  0140               	movwf	(___flge@ff1+1)
  7932  043C  00C9               	movlb 1	; select bank1
  7933  043D  0141               	movf	(efgtoa@h)^080h,w
  7934  043E  0852               	movlb 0	; select bank0
  7935  043F  0140               	movwf	(___flge@ff1)
  7936  0440  00C8               
  7937                           	movlb 1	; select bank1
  7938  0441  0141               	movf	(efgtoa@l+3)^080h,w
  7939  0442  0859               	movlb 0	; select bank0
  7940  0443  0140               	movwf	(___flge@ff2+3)
  7941  0444  00CF               	movlb 1	; select bank1
  7942  0445  0141               	movf	(efgtoa@l+2)^080h,w
  7943  0446  0858               	movlb 0	; select bank0
  7944  0447  0140               	movwf	(___flge@ff2+2)
  7945  0448  00CE               	movlb 1	; select bank1
  7946  0449  0141               	movf	(efgtoa@l+1)^080h,w
  7947  044A  0857               	movlb 0	; select bank0
  7948  044B  0140               	movwf	(___flge@ff2+1)
  7949  044C  00CD               	movlb 1	; select bank1
  7950  044D  0141               	movf	(efgtoa@l)^080h,w
  7951  044E  0856               	movlb 0	; select bank0
  7952  044F  0140               	movwf	(___flge@ff2)
  7953  0450  00CC               
  7954                           	fcall	___flge
  7955  0451  319E  269D  3180   	btfsc	status,0
  7956  0454  1803               	goto	u5511
  7957  0455  2C57               	goto	u5510
  7958  0456  2C58               u5511:
  7959  0457                     	goto	l3933
  7960  0457  2C62               u5510:
  7961  0458                     	line	429
  7962                           	
  7963                           l3931:	
  7964  0458                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 429:       
                                   l = 0.0;
  7965                           	movlw	0x0
  7966  0458  3000               	movlb 1	; select bank1
  7967  0459  0141               	movwf	(efgtoa@l+3)^080h
  7968  045A  00D9               	movlw	0x0
  7969  045B  3000               	movwf	(efgtoa@l+2)^080h
  7970  045C  00D8               	movlw	0x0
  7971  045D  3000               	movwf	(efgtoa@l+1)^080h
  7972  045E  00D7               	movlw	0x0
  7973  045F  3000               	movwf	(efgtoa@l)^080h
  7974  0460  00D6               
  7975                           	line	430
  7976                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 430:     } 
                                 else {
  7977                           	goto	l3939
  7978  0461  2C98               	
  7979                           l445:	
  7980  0462                     	line	432
  7981                           	
  7982                           l3933:	
  7983  0462                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 432:       
                                   if ((h == l) && !(d % 2)) {
  7984                           	movlb 1	; select bank1
  7985  0462  0141               	movf	(efgtoa@h+3)^080h,w
  7986  0463  0855               	movlb 0	; select bank0
  7987  0464  0140               	movwf	(___fleq@ff1+3)
  7988  0465  00A3               	movlb 1	; select bank1
  7989  0466  0141               	movf	(efgtoa@h+2)^080h,w
  7990  0467  0854               	movlb 0	; select bank0
  7991  0468  0140               	movwf	(___fleq@ff1+2)
  7992  0469  00A2               	movlb 1	; select bank1
  7993  046A  0141               	movf	(efgtoa@h+1)^080h,w
  7994  046B  0853               	movlb 0	; select bank0
  7995  046C  0140               	movwf	(___fleq@ff1+1)
  7996  046D  00A1               	movlb 1	; select bank1
  7997  046E  0141               	movf	(efgtoa@h)^080h,w
  7998  046F  0852               	movlb 0	; select bank0
  7999  0470  0140               	movwf	(___fleq@ff1)
  8000  0471  00A0               
  8001                           	movlb 1	; select bank1
  8002  0472  0141               	movf	(efgtoa@l+3)^080h,w
  8003  0473  0859               	movlb 0	; select bank0
  8004  0474  0140               	movwf	(___fleq@ff2+3)
  8005  0475  00A7               	movlb 1	; select bank1
  8006  0476  0141               	movf	(efgtoa@l+2)^080h,w
  8007  0477  0858               	movlb 0	; select bank0
  8008  0478  0140               	movwf	(___fleq@ff2+2)
  8009  0479  00A6               	movlb 1	; select bank1
  8010  047A  0141               	movf	(efgtoa@l+1)^080h,w
  8011  047B  0857               	movlb 0	; select bank0
  8012  047C  0140               	movwf	(___fleq@ff2+1)
  8013  047D  00A5               	movlb 1	; select bank1
  8014  047E  0141               	movf	(efgtoa@l)^080h,w
  8015  047F  0856               	movlb 0	; select bank0
  8016  0480  0140               	movwf	(___fleq@ff2)
  8017  0481  00A4               
  8018                           	fcall	___fleq
  8019  0482  3187  27A7  3180   	btfss	status,0
  8020  0485  1C03               	goto	u5521
  8021  0486  2C88               	goto	u5520
  8022  0487  2C89               u5521:
  8023  0488                     	goto	l3939
  8024  0488  2C98               u5520:
  8025  0489                     	
  8026                           l3935:	
  8027  0489                     	movlb 1	; select bank1
  8028  0489  0141               	btfsc	(efgtoa@d)^080h,(0)&7
  8029  048A  1847               	goto	u5531
  8030  048B  2C8D               	goto	u5530
  8031  048C  2C8E               u5531:
  8032  048D                     	goto	l3939
  8033  048D  2C98               u5530:
  8034  048E                     	line	433
  8035                           	
  8036                           l3937:	
  8037  048E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 433:       
                                       l = 0.0;
  8038                           	movlw	0x0
  8039  048E  3000               	movwf	(efgtoa@l+3)^080h
  8040  048F  00D9               	movlw	0x0
  8041  0490  3000               	movwf	(efgtoa@l+2)^080h
  8042  0491  00D8               	movlw	0x0
  8043  0492  3000               	movwf	(efgtoa@l+1)^080h
  8044  0493  00D7               	movlw	0x0
  8045  0494  3000               	movwf	(efgtoa@l)^080h
  8046  0495  00D6               
  8047                           	goto	l3939
  8048  0496  2C98               	line	434
  8049                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 434:       
                                   }
  8050                           	
  8051                           l447:	
  8052  0497                     	goto	l3939
  8053  0497  2C98               	line	435
  8054                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 435:     }

  8055                           	
  8056                           l446:	
  8057  0498                     	line	438
  8058                           	
  8059                           l3939:	
  8060  0498                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 438:     h 
                                 = g + l;
  8061                           	movlb 1	; select bank1
  8062  0498  0141               	movf	(efgtoa@l+3)^080h,w
  8063  0499  0859               	movlb 0	; select bank0
  8064  049A  0140               	movwf	(___fladd@b+3)
  8065  049B  00A3               	movlb 1	; select bank1
  8066  049C  0141               	movf	(efgtoa@l+2)^080h,w
  8067  049D  0858               	movlb 0	; select bank0
  8068  049E  0140               	movwf	(___fladd@b+2)
  8069  049F  00A2               	movlb 1	; select bank1
  8070  04A0  0141               	movf	(efgtoa@l+1)^080h,w
  8071  04A1  0857               	movlb 0	; select bank0
  8072  04A2  0140               	movwf	(___fladd@b+1)
  8073  04A3  00A1               	movlb 1	; select bank1
  8074  04A4  0141               	movf	(efgtoa@l)^080h,w
  8075  04A5  0856               	movlb 0	; select bank0
  8076  04A6  0140               	movwf	(___fladd@b)
  8077  04A7  00A0               
  8078                           	movlb 1	; select bank1
  8079  04A8  0141               	movf	(efgtoa@g+3)^080h,w
  8080  04A9  085F               	movlb 0	; select bank0
  8081  04AA  0140               	movwf	(___fladd@a+3)
  8082  04AB  00A7               	movlb 1	; select bank1
  8083  04AC  0141               	movf	(efgtoa@g+2)^080h,w
  8084  04AD  085E               	movlb 0	; select bank0
  8085  04AE  0140               	movwf	(___fladd@a+2)
  8086  04AF  00A6               	movlb 1	; select bank1
  8087  04B0  0141               	movf	(efgtoa@g+1)^080h,w
  8088  04B1  085D               	movlb 0	; select bank0
  8089  04B2  0140               	movwf	(___fladd@a+1)
  8090  04B3  00A5               	movlb 1	; select bank1
  8091  04B4  0141               	movf	(efgtoa@g)^080h,w
  8092  04B5  085C               	movlb 0	; select bank0
  8093  04B6  0140               	movwf	(___fladd@a)
  8094  04B7  00A4               
  8095                           	fcall	___fladd
  8096  04B8  3189  21EF  3180   	movlb 0	; select bank0
  8097  04BB  0140               	movf	(3+(?___fladd)),w
  8098  04BC  0823               	movlb 1	; select bank1
  8099  04BD  0141               	movwf	(efgtoa@h+3)^080h
  8100  04BE  00D5               	movlb 0	; select bank0
  8101  04BF  0140               	movf	(2+(?___fladd)),w
  8102  04C0  0822               	movlb 1	; select bank1
  8103  04C1  0141               	movwf	(efgtoa@h+2)^080h
  8104  04C2  00D4               	movlb 0	; select bank0
  8105  04C3  0140               	movf	(1+(?___fladd)),w
  8106  04C4  0821               	movlb 1	; select bank1
  8107  04C5  0141               	movwf	(efgtoa@h+1)^080h
  8108  04C6  00D3               	movlb 0	; select bank0
  8109  04C7  0140               	movf	(0+(?___fladd)),w
  8110  04C8  0820               	movlb 1	; select bank1
  8111  04C9  0141               	movwf	(efgtoa@h)^080h
  8112  04CA  00D2               
  8113                           	line	441
  8114                           	
  8115                           l3941:	
  8116  04CB                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 441:     u 
                                 = ou;
  8117                           	movf	(efgtoa@ou+3)^080h,w
  8118  04CB  0832               	movwf	(efgtoa@u+3)^080h
  8119  04CC  00E7               	movf	(efgtoa@ou+2)^080h,w
  8120  04CD  0831               	movwf	(efgtoa@u+2)^080h
  8121  04CE  00E6               	movf	(efgtoa@ou+1)^080h,w
  8122  04CF  0830               	movwf	(efgtoa@u+1)^080h
  8123  04D0  00E5               	movf	(efgtoa@ou)^080h,w
  8124  04D1  082F               	movwf	(efgtoa@u)^080h
  8125  04D2  00E4               
  8126                           	line	442
  8127                           	
  8128                           l3943:	
  8129  04D3                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 442:     ne
                                  = (nmode == 'e') ? 0 : e;
  8130                           		movlw	101
  8131  04D3  3065               	xorwf	((efgtoa@nmode)^080h),w
  8132  04D4  064E               	btfsc	status,2
  8133  04D5  1903               	goto	u5541
  8134  04D6  2CD8               	goto	u5540
  8135  04D7  2CD9               u5541:
  8136  04D8                     	goto	l3947
  8137  04D8  2CDE               u5540:
  8138  04D9                     	
  8139                           l3945:	
  8140  04D9                     	movf	(efgtoa@e+1)^080h,w
  8141  04D9  0861               	movwf	(efgtoa@ne+1)^080h
  8142  04DA  00C6               	movf	(efgtoa@e)^080h,w
  8143  04DB  0860               	movwf	(efgtoa@ne)^080h
  8144  04DC  00C5               	goto	l451
  8145  04DD  2CE0               	
  8146                           l449:	
  8147  04DE                     	
  8148                           l3947:	
  8149  04DE                     	clrf	(efgtoa@ne)^080h
  8150  04DE  01C5               	clrf	(efgtoa@ne+1)^080h
  8151  04DF  01C6               	
  8152                           l451:	
  8153  04E0                     	line	443
  8154                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 443:     pp
                                  = 0;
  8155                           	clrf	(efgtoa@pp)^080h
  8156  04E0  01C1               	clrf	(efgtoa@pp+1)^080h
  8157  04E1  01C2               	line	444
  8158                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 444:     t 
                                 = 0;
  8159                           	clrf	(efgtoa@t)^080h
  8160  04E2  01BF               	clrf	(efgtoa@t+1)^080h
  8161  04E3  01C0               	line	445
  8162                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 445:     i 
                                 = 0;
  8163                           	clrf	(efgtoa@i)^080h
  8164  04E4  01DA               	clrf	(efgtoa@i+1)^080h
  8165  04E5  01DB               	line	446
  8166                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 446:     wh
                                 ile ((i < m) && (n < (80 - 5))) {
  8167                           	goto	l3997
  8168  04E6  2E3C               	
  8169                           l453:	
  8170  04E7                     	line	447
  8171                           	
  8172                           l3949:	
  8173  04E7                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 447:       
                                   l = floorf(h/u);
  8174                           	movlb 1	; select bank1
  8175  04E7  0141               	movf	(efgtoa@u+3)^080h,w
  8176  04E8  0867               	movlb 0	; select bank0
  8177  04E9  0140               	movwf	(___fldiv@a+3)
  8178  04EA  00CB               	movlb 1	; select bank1
  8179  04EB  0141               	movf	(efgtoa@u+2)^080h,w
  8180  04EC  0866               	movlb 0	; select bank0
  8181  04ED  0140               	movwf	(___fldiv@a+2)
  8182  04EE  00CA               	movlb 1	; select bank1
  8183  04EF  0141               	movf	(efgtoa@u+1)^080h,w
  8184  04F0  0865               	movlb 0	; select bank0
  8185  04F1  0140               	movwf	(___fldiv@a+1)
  8186  04F2  00C9               	movlb 1	; select bank1
  8187  04F3  0141               	movf	(efgtoa@u)^080h,w
  8188  04F4  0864               	movlb 0	; select bank0
  8189  04F5  0140               	movwf	(___fldiv@a)
  8190  04F6  00C8               
  8191                           	movlb 1	; select bank1
  8192  04F7  0141               	movf	(efgtoa@h+3)^080h,w
  8193  04F8  0855               	movlb 0	; select bank0
  8194  04F9  0140               	movwf	(___fldiv@b+3)
  8195  04FA  00CF               	movlb 1	; select bank1
  8196  04FB  0141               	movf	(efgtoa@h+2)^080h,w
  8197  04FC  0854               	movlb 0	; select bank0
  8198  04FD  0140               	movwf	(___fldiv@b+2)
  8199  04FE  00CE               	movlb 1	; select bank1
  8200  04FF  0141               	movf	(efgtoa@h+1)^080h,w
  8201  0500  0853               	movlb 0	; select bank0
  8202  0501  0140               	movwf	(___fldiv@b+1)
  8203  0502  00CD               	movlb 1	; select bank1
  8204  0503  0141               	movf	(efgtoa@h)^080h,w
  8205  0504  0852               	movlb 0	; select bank0
  8206  0505  0140               	movwf	(___fldiv@b)
  8207  0506  00CC               
  8208                           	fcall	___fldiv
  8209  0507  3188  2010  3180   	movlb 0	; select bank0
  8210  050A  0140               	movf	(3+(?___fldiv)),w
  8211  050B  084B               	movwf	(floorf@x+3)
  8212  050C  00E5               	movf	(2+(?___fldiv)),w
  8213  050D  084A               	movwf	(floorf@x+2)
  8214  050E  00E4               	movf	(1+(?___fldiv)),w
  8215  050F  0849               	movwf	(floorf@x+1)
  8216  0510  00E3               	movf	(0+(?___fldiv)),w
  8217  0511  0848               	movwf	(floorf@x)
  8218  0512  00E2               
  8219                           	fcall	_floorf
  8220  0513  3194  2450  3180   	movlb 0	; select bank0
  8221  0516  0140               	movf	(3+(?_floorf)),w
  8222  0517  0865               	movlb 1	; select bank1
  8223  0518  0141               	movwf	(efgtoa@l+3)^080h
  8224  0519  00D9               	movlb 0	; select bank0
  8225  051A  0140               	movf	(2+(?_floorf)),w
  8226  051B  0864               	movlb 1	; select bank1
  8227  051C  0141               	movwf	(efgtoa@l+2)^080h
  8228  051D  00D8               	movlb 0	; select bank0
  8229  051E  0140               	movf	(1+(?_floorf)),w
  8230  051F  0863               	movlb 1	; select bank1
  8231  0520  0141               	movwf	(efgtoa@l+1)^080h
  8232  0521  00D7               	movlb 0	; select bank0
  8233  0522  0140               	movf	(0+(?_floorf)),w
  8234  0523  0862               	movlb 1	; select bank1
  8235  0524  0141               	movwf	(efgtoa@l)^080h
  8236  0525  00D6               
  8237                           	line	448
  8238                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 448:       
                                   d = (int)l;
  8239                           	movf	(efgtoa@l+3)^080h,w
  8240  0526  0859               	movlb 0	; select bank0
  8241  0527  0140               	movwf	(___fltol@f1+3)
  8242  0528  00A3               	movlb 1	; select bank1
  8243  0529  0141               	movf	(efgtoa@l+2)^080h,w
  8244  052A  0858               	movlb 0	; select bank0
  8245  052B  0140               	movwf	(___fltol@f1+2)
  8246  052C  00A2               	movlb 1	; select bank1
  8247  052D  0141               	movf	(efgtoa@l+1)^080h,w
  8248  052E  0857               	movlb 0	; select bank0
  8249  052F  0140               	movwf	(___fltol@f1+1)
  8250  0530  00A1               	movlb 1	; select bank1
  8251  0531  0141               	movf	(efgtoa@l)^080h,w
  8252  0532  0856               	movlb 0	; select bank0
  8253  0533  0140               	movwf	(___fltol@f1)
  8254  0534  00A0               
  8255                           	fcall	___fltol
  8256  0535  319D  2561  3180   	movlb 0	; select bank0
  8257  0538  0140               	movf	(1+(?___fltol)),w
  8258  0539  0821               	movlb 1	; select bank1
  8259  053A  0141               	movwf	(efgtoa@d+1)^080h
  8260  053B  00C8               	movlb 0	; select bank0
  8261  053C  0140               	movf	(0+(?___fltol)),w
  8262  053D  0820               	movlb 1	; select bank1
  8263  053E  0141               	movwf	(efgtoa@d)^080h
  8264  053F  00C7               	line	449
  8265                           	
  8266                           l3951:	
  8267  0540                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 449:       
                                   if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  8268                           	movlb 2	; select bank2
  8269  0540  0142               	btfsc	(_flags)^0100h,(4)&7
  8270  0541  1A68               	goto	u5551
  8271  0542  2D44               	goto	u5550
  8272  0543  2D45               u5551:
  8273  0544                     	goto	l3961
  8274  0544  2D5B               u5550:
  8275  0545                     	
  8276                           l3953:	
  8277  0545                     	movlb 1	; select bank1
  8278  0545  0141               	movf	((efgtoa@d)^080h),w
  8279  0546  0847               iorwf	((efgtoa@d+1)^080h),w
  8280  0547  0448               	btfss	status,2
  8281  0548  1D03               	goto	u5561
  8282  0549  2D4B               	goto	u5560
  8283  054A  2D4C               u5561:
  8284  054B                     	goto	l3961
  8285  054B  2D5B               u5560:
  8286  054C                     	
  8287                           l3955:	
  8288  054C                     		movlw	103
  8289  054C  3067               	xorwf	((efgtoa@mode)^080h),w
  8290  054D  0651               	btfss	status,2
  8291  054E  1D03               	goto	u5571
  8292  054F  2D51               	goto	u5570
  8293  0550  2D52               u5571:
  8294  0551                     	goto	l3961
  8295  0551  2D5B               u5570:
  8296  0552                     	
  8297                           l3957:	
  8298  0552                     	btfss	(efgtoa@ne+1)^080h,7
  8299  0552  1FC6               	goto	u5581
  8300  0553  2D55               	goto	u5580
  8301  0554  2D56               u5581:
  8302  0555                     	goto	l3961
  8303  0555  2D5B               u5580:
  8304  0556                     	line	450
  8305                           	
  8306                           l3959:	
  8307  0556                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 450:       
                                       ++t;
  8308                           	movlw	01h
  8309  0556  3001               	addwf	(efgtoa@t)^080h,f
  8310  0557  07BF               	movlw	0
  8311  0558  3000               	addwfc	(efgtoa@t+1)^080h,f
  8312  0559  3DC0               	line	451
  8313                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 451:       
                                   } else {
  8314                           	goto	l3989
  8315  055A  2DB9               	
  8316                           l454:	
  8317  055B                     	line	452
  8318                           	
  8319                           l3961:	
  8320  055B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 452:       
                                       if (!pp && (ne < 0)) {
  8321                           	movlb 1	; select bank1
  8322  055B  0141               	movf	((efgtoa@pp)^080h),w
  8323  055C  0841               iorwf	((efgtoa@pp+1)^080h),w
  8324  055D  0442               	btfss	status,2
  8325  055E  1D03               	goto	u5591
  8326  055F  2D61               	goto	u5590
  8327  0560  2D62               u5591:
  8328  0561                     	goto	l3981
  8329  0561  2D9B               u5590:
  8330  0562                     	
  8331                           l3963:	
  8332  0562                     	btfss	(efgtoa@ne+1)^080h,7
  8333  0562  1FC6               	goto	u5601
  8334  0563  2D65               	goto	u5600
  8335  0564  2D66               u5601:
  8336  0565                     	goto	l3981
  8337  0565  2D9B               u5600:
  8338  0566                     	line	453
  8339                           	
  8340                           l3965:	
  8341  0566                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 453:       
                                           dbuf[n++] = '.';
  8342                           	movlw	low(02Eh)
  8343  0566  302E               	movlb 0	; select bank0
  8344  0567  0140               	movwf	(??_efgtoa+0)+0
  8345  0568  00EC               	movlb 1	; select bank1
  8346  0569  0141               	movf	(efgtoa@n)^080h,w
  8347  056A  0862               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  8348  056B  3EA0               	movwf	fsr1l
  8349  056C  0086               	movlw 2	; select bank5/6
  8350  056D  3002               	movwf fsr1h	
  8351  056E  0087               	
  8352                           	movlb 0	; select bank0
  8353  056F  0140               	movf	(??_efgtoa+0)+0,w
  8354  0570  086C               	movwf	indf1
  8355  0571  0081               	
  8356                           l3967:	
  8357  0572                     	movlw	01h
  8358  0572  3001               	movlb 1	; select bank1
  8359  0573  0141               	addwf	(efgtoa@n)^080h,f
  8360  0574  07E2               	movlw	0
  8361  0575  3000               	addwfc	(efgtoa@n+1)^080h,f
  8362  0576  3DE3               	line	454
  8363                           	
  8364                           l3969:	
  8365  0577                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 454:       
                                           --w;
  8366                           	movlw	0FFh
  8367  0577  30FF               	addwf	(efgtoa@w)^080h,f
  8368  0578  07CF               	movlw	0FFh
  8369  0579  30FF               	addwfc	(efgtoa@w+1)^080h,f
  8370  057A  3DD0               	line	455
  8371                           	
  8372                           l3971:	
  8373  057B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 455:       
                                           pp = 1;
  8374                           	movlw	01h
  8375  057B  3001               	movwf	(efgtoa@pp)^080h
  8376  057C  00C1               	movlw	0
  8377  057D  3000               	movwf	((efgtoa@pp)^080h)+1
  8378  057E  00C2               	goto	l3981
  8379  057F  2D9B               	line	456
  8380                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 456:       
                                       }
  8381                           	
  8382                           l456:	
  8383  0580                     	line	457
  8384                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 457:       
                                       while (t) {
  8385                           	goto	l3981
  8386  0580  2D9B               	
  8387                           l458:	
  8388  0581                     	line	458
  8389                           	
  8390                           l3973:	
  8391  0581                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 458:       
                                           dbuf[n++] = '0';
  8392                           	movlw	low(030h)
  8393  0581  3030               	movlb 0	; select bank0
  8394  0582  0140               	movwf	(??_efgtoa+0)+0
  8395  0583  00EC               	movlb 1	; select bank1
  8396  0584  0141               	movf	(efgtoa@n)^080h,w
  8397  0585  0862               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  8398  0586  3EA0               	movwf	fsr1l
  8399  0587  0086               	movlw 2	; select bank5/6
  8400  0588  3002               	movwf fsr1h	
  8401  0589  0087               	
  8402                           	movlb 0	; select bank0
  8403  058A  0140               	movf	(??_efgtoa+0)+0,w
  8404  058B  086C               	movwf	indf1
  8405  058C  0081               	
  8406                           l3975:	
  8407  058D                     	movlw	01h
  8408  058D  3001               	movlb 1	; select bank1
  8409  058E  0141               	addwf	(efgtoa@n)^080h,f
  8410  058F  07E2               	movlw	0
  8411  0590  3000               	addwfc	(efgtoa@n+1)^080h,f
  8412  0591  3DE3               	line	459
  8413                           	
  8414                           l3977:	
  8415  0592                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 459:       
                                           --w;
  8416                           	movlw	0FFh
  8417  0592  30FF               	addwf	(efgtoa@w)^080h,f
  8418  0593  07CF               	movlw	0FFh
  8419  0594  30FF               	addwfc	(efgtoa@w+1)^080h,f
  8420  0595  3DD0               	line	460
  8421                           	
  8422                           l3979:	
  8423  0596                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 460:       
                                           --t;
  8424                           	movlw	0FFh
  8425  0596  30FF               	addwf	(efgtoa@t)^080h,f
  8426  0597  07BF               	movlw	0FFh
  8427  0598  30FF               	addwfc	(efgtoa@t+1)^080h,f
  8428  0599  3DC0               	goto	l3981
  8429  059A  2D9B               	line	461
  8430                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 461:       
                                       }
  8431                           	
  8432                           l457:	
  8433  059B                     	line	457
  8434                           	
  8435                           l3981:	
  8436  059B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 457:       
                                       while (t) {
  8437                           	movf	((efgtoa@t)^080h),w
  8438  059B  083F               iorwf	((efgtoa@t+1)^080h),w
  8439  059C  0440               	btfss	status,2
  8440  059D  1D03               	goto	u5611
  8441  059E  2DA0               	goto	u5610
  8442  059F  2DA1               u5611:
  8443  05A0                     	goto	l3973
  8444  05A0  2D81               u5610:
  8445  05A1                     	goto	l3983
  8446  05A1  2DA2               	
  8447                           l459:	
  8448  05A2                     	line	462
  8449                           	
  8450                           l3983:	
  8451  05A2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 462:       
                                       dbuf[n++] = '0' + d;
  8452                           	movf	(efgtoa@d)^080h,w
  8453  05A2  0847               	addlw	030h
  8454  05A3  3E30               	movlb 0	; select bank0
  8455  05A4  0140               	movwf	(??_efgtoa+0)+0
  8456  05A5  00EC               	movlb 1	; select bank1
  8457  05A6  0141               	movf	(efgtoa@n)^080h,w
  8458  05A7  0862               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  8459  05A8  3EA0               	movwf	fsr1l
  8460  05A9  0086               	movlw 2	; select bank5/6
  8461  05AA  3002               	movwf fsr1h	
  8462  05AB  0087               	
  8463                           	movlb 0	; select bank0
  8464  05AC  0140               	movf	(??_efgtoa+0)+0,w
  8465  05AD  086C               	movwf	indf1
  8466  05AE  0081               	
  8467                           l3985:	
  8468  05AF                     	movlw	01h
  8469  05AF  3001               	movlb 1	; select bank1
  8470  05B0  0141               	addwf	(efgtoa@n)^080h,f
  8471  05B1  07E2               	movlw	0
  8472  05B2  3000               	addwfc	(efgtoa@n+1)^080h,f
  8473  05B3  3DE3               	line	463
  8474                           	
  8475                           l3987:	
  8476  05B4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 463:       
                                       --w;
  8477                           	movlw	0FFh
  8478  05B4  30FF               	addwf	(efgtoa@w)^080h,f
  8479  05B5  07CF               	movlw	0FFh
  8480  05B6  30FF               	addwfc	(efgtoa@w+1)^080h,f
  8481  05B7  3DD0               	goto	l3989
  8482  05B8  2DB9               	line	464
  8483                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 464:       
                                   }
  8484                           	
  8485                           l455:	
  8486  05B9                     	line	465
  8487                           	
  8488                           l3989:	
  8489  05B9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 465:       
                                   h -= l*u;
  8490                           	movf	(efgtoa@l+3)^080h,w
  8491  05B9  0859               	movlb 0	; select bank0
  8492  05BA  0140               	movwf	(___flmul@a+3)
  8493  05BB  00B5               	movlb 1	; select bank1
  8494  05BC  0141               	movf	(efgtoa@l+2)^080h,w
  8495  05BD  0858               	movlb 0	; select bank0
  8496  05BE  0140               	movwf	(___flmul@a+2)
  8497  05BF  00B4               	movlb 1	; select bank1
  8498  05C0  0141               	movf	(efgtoa@l+1)^080h,w
  8499  05C1  0857               	movlb 0	; select bank0
  8500  05C2  0140               	movwf	(___flmul@a+1)
  8501  05C3  00B3               	movlb 1	; select bank1
  8502  05C4  0141               	movf	(efgtoa@l)^080h,w
  8503  05C5  0856               	movlb 0	; select bank0
  8504  05C6  0140               	movwf	(___flmul@a)
  8505  05C7  00B2               
  8506                           	movlb 1	; select bank1
  8507  05C8  0141               	movf	(efgtoa@u+3)^080h,w
  8508  05C9  0867               	movlb 0	; select bank0
  8509  05CA  0140               	movwf	(___flmul@b+3)
  8510  05CB  00B1               	movlb 1	; select bank1
  8511  05CC  0141               	movf	(efgtoa@u+2)^080h,w
  8512  05CD  0866               	movlb 0	; select bank0
  8513  05CE  0140               	movwf	(___flmul@b+2)
  8514  05CF  00B0               	movlb 1	; select bank1
  8515  05D0  0141               	movf	(efgtoa@u+1)^080h,w
  8516  05D1  0865               	movlb 0	; select bank0
  8517  05D2  0140               	movwf	(___flmul@b+1)
  8518  05D3  00AF               	movlb 1	; select bank1
  8519  05D4  0141               	movf	(efgtoa@u)^080h,w
  8520  05D5  0864               	movlb 0	; select bank0
  8521  05D6  0140               	movwf	(___flmul@b)
  8522  05D7  00AE               
  8523                           	fcall	___flmul
  8524  05D8  3195  2595  3180   	movlb 0	; select bank0
  8525  05DB  0140               	movf	(3+(?___flmul)),w
  8526  05DC  0831               	movwf	(___flsub@a+3)
  8527  05DD  00CB               	movf	(2+(?___flmul)),w
  8528  05DE  0830               	movwf	(___flsub@a+2)
  8529  05DF  00CA               	movf	(1+(?___flmul)),w
  8530  05E0  082F               	movwf	(___flsub@a+1)
  8531  05E1  00C9               	movf	(0+(?___flmul)),w
  8532  05E2  082E               	movwf	(___flsub@a)
  8533  05E3  00C8               
  8534                           	movlb 1	; select bank1
  8535  05E4  0141               	movf	(efgtoa@h+3)^080h,w
  8536  05E5  0855               	movlb 0	; select bank0
  8537  05E6  0140               	movwf	(___flsub@b+3)
  8538  05E7  00CF               	movlb 1	; select bank1
  8539  05E8  0141               	movf	(efgtoa@h+2)^080h,w
  8540  05E9  0854               	movlb 0	; select bank0
  8541  05EA  0140               	movwf	(___flsub@b+2)
  8542  05EB  00CE               	movlb 1	; select bank1
  8543  05EC  0141               	movf	(efgtoa@h+1)^080h,w
  8544  05ED  0853               	movlb 0	; select bank0
  8545  05EE  0140               	movwf	(___flsub@b+1)
  8546  05EF  00CD               	movlb 1	; select bank1
  8547  05F0  0141               	movf	(efgtoa@h)^080h,w
  8548  05F1  0852               	movlb 0	; select bank0
  8549  05F2  0140               	movwf	(___flsub@b)
  8550  05F3  00CC               
  8551                           	fcall	___flsub
  8552  05F4  31A6  26D5  3180   	movlb 0	; select bank0
  8553  05F7  0140               	movf	(3+(?___flsub)),w
  8554  05F8  084B               	movlb 1	; select bank1
  8555  05F9  0141               	movwf	(efgtoa@h+3)^080h
  8556  05FA  00D5               	movlb 0	; select bank0
  8557  05FB  0140               	movf	(2+(?___flsub)),w
  8558  05FC  084A               	movlb 1	; select bank1
  8559  05FD  0141               	movwf	(efgtoa@h+2)^080h
  8560  05FE  00D4               	movlb 0	; select bank0
  8561  05FF  0140               	movf	(1+(?___flsub)),w
  8562  0600  0849               	movlb 1	; select bank1
  8563  0601  0141               	movwf	(efgtoa@h+1)^080h
  8564  0602  00D3               	movlb 0	; select bank0
  8565  0603  0140               	movf	(0+(?___flsub)),w
  8566  0604  0848               	movlb 1	; select bank1
  8567  0605  0141               	movwf	(efgtoa@h)^080h
  8568  0606  00D2               
  8569                           	line	466
  8570                           	
  8571                           l3991:	
  8572  0607                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 466:       
                                   u = u/10.0;
  8573                           	movlw	0x41
  8574  0607  3041               	movlb 0	; select bank0
  8575  0608  0140               	movwf	(___fldiv@a+3)
  8576  0609  00CB               	movlw	0x20
  8577  060A  3020               	movwf	(___fldiv@a+2)
  8578  060B  00CA               	movlw	0x0
  8579  060C  3000               	movwf	(___fldiv@a+1)
  8580  060D  00C9               	movlw	0x0
  8581  060E  3000               	movwf	(___fldiv@a)
  8582  060F  00C8               
  8583                           	movlb 1	; select bank1
  8584  0610  0141               	movf	(efgtoa@u+3)^080h,w
  8585  0611  0867               	movlb 0	; select bank0
  8586  0612  0140               	movwf	(___fldiv@b+3)
  8587  0613  00CF               	movlb 1	; select bank1
  8588  0614  0141               	movf	(efgtoa@u+2)^080h,w
  8589  0615  0866               	movlb 0	; select bank0
  8590  0616  0140               	movwf	(___fldiv@b+2)
  8591  0617  00CE               	movlb 1	; select bank1
  8592  0618  0141               	movf	(efgtoa@u+1)^080h,w
  8593  0619  0865               	movlb 0	; select bank0
  8594  061A  0140               	movwf	(___fldiv@b+1)
  8595  061B  00CD               	movlb 1	; select bank1
  8596  061C  0141               	movf	(efgtoa@u)^080h,w
  8597  061D  0864               	movlb 0	; select bank0
  8598  061E  0140               	movwf	(___fldiv@b)
  8599  061F  00CC               
  8600                           	fcall	___fldiv
  8601  0620  3188  2010  3180   	movlb 0	; select bank0
  8602  0623  0140               	movf	(3+(?___fldiv)),w
  8603  0624  084B               	movlb 1	; select bank1
  8604  0625  0141               	movwf	(efgtoa@u+3)^080h
  8605  0626  00E7               	movlb 0	; select bank0
  8606  0627  0140               	movf	(2+(?___fldiv)),w
  8607  0628  084A               	movlb 1	; select bank1
  8608  0629  0141               	movwf	(efgtoa@u+2)^080h
  8609  062A  00E6               	movlb 0	; select bank0
  8610  062B  0140               	movf	(1+(?___fldiv)),w
  8611  062C  0849               	movlb 1	; select bank1
  8612  062D  0141               	movwf	(efgtoa@u+1)^080h
  8613  062E  00E5               	movlb 0	; select bank0
  8614  062F  0140               	movf	(0+(?___fldiv)),w
  8615  0630  0848               	movlb 1	; select bank1
  8616  0631  0141               	movwf	(efgtoa@u)^080h
  8617  0632  00E4               
  8618                           	line	467
  8619                           	
  8620                           l3993:	
  8621  0633                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 467:       
                                   --ne;
  8622                           	movlw	0FFh
  8623  0633  30FF               	addwf	(efgtoa@ne)^080h,f
  8624  0634  07C5               	movlw	0FFh
  8625  0635  30FF               	addwfc	(efgtoa@ne+1)^080h,f
  8626  0636  3DC6               	line	468
  8627                           	
  8628                           l3995:	
  8629  0637                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 468:       
                                   ++i;
  8630                           	movlw	01h
  8631  0637  3001               	addwf	(efgtoa@i)^080h,f
  8632  0638  07DA               	movlw	0
  8633  0639  3000               	addwfc	(efgtoa@i+1)^080h,f
  8634  063A  3DDB               	goto	l3997
  8635  063B  2E3C               	line	469
  8636                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 469:     }

  8637                           	
  8638                           l452:	
  8639  063C                     	line	446
  8640                           	
  8641                           l3997:	
  8642  063C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 446:     wh
                                 ile ((i < m) && (n < (80 - 5))) {
  8643                           	movf	(efgtoa@i+1)^080h,w
  8644  063C  085B               	xorlw	80h
  8645  063D  3A80               	movlb 0	; select bank0
  8646  063E  0140               	movwf	(??_efgtoa+0)+0
  8647  063F  00EC               	movlb 1	; select bank1
  8648  0640  0141               	movf	(efgtoa@m+1)^080h,w
  8649  0641  0844               	xorlw	80h
  8650  0642  3A80               	movlb 0	; select bank0
  8651  0643  0140               	subwf	(??_efgtoa+0)+0,w
  8652  0644  026C               	skipz
  8653  0645  1D03               	goto	u5625
  8654  0646  2E4A               	movlb 1	; select bank1
  8655  0647  0141               	movf	(efgtoa@m)^080h,w
  8656  0648  0843               	subwf	(efgtoa@i)^080h,w
  8657  0649  025A               u5625:
  8658  064A                     
  8659                           	skipnc
  8660  064A  1803               	goto	u5621
  8661  064B  2E4D               	goto	u5620
  8662  064C  2E4E               u5621:
  8663  064D                     	goto	l4001
  8664  064D  2E60               u5620:
  8665  064E                     	
  8666                           l3999:	
  8667  064E                     	movlb 1	; select bank1
  8668  064E  0141               	movf	(efgtoa@n+1)^080h,w
  8669  064F  0863               	xorlw	80h
  8670  0650  3A80               	movlb 0	; select bank0
  8671  0651  0140               	movwf	(??_efgtoa+0)+0
  8672  0652  00EC               	movlw	(0)^80h
  8673  0653  3080               	subwf	(??_efgtoa+0)+0,w
  8674  0654  026C               	skipz
  8675  0655  1D03               	goto	u5635
  8676  0656  2E5A               	movlw	04Bh
  8677  0657  304B               	movlb 1	; select bank1
  8678  0658  0141               	subwf	(efgtoa@n)^080h,w
  8679  0659  0262               u5635:
  8680  065A                     
  8681                           	skipc
  8682  065A  1C03               	goto	u5631
  8683  065B  2E5D               	goto	u5630
  8684  065C  2E5E               u5631:
  8685  065D                     	goto	l3949
  8686  065D  2CE7               u5630:
  8687  065E                     	goto	l4001
  8688  065E  2E60               	
  8689                           l461:	
  8690  065F                     	goto	l4001
  8691  065F  2E60               	
  8692                           l462:	
  8693  0660                     	line	470
  8694                           	
  8695                           l4001:	
  8696  0660                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 470:     if
                                  (!pp && (flags & (1 << 4))) {
  8697                           	movlb 1	; select bank1
  8698  0660  0141               	movf	((efgtoa@pp)^080h),w
  8699  0661  0841               iorwf	((efgtoa@pp+1)^080h),w
  8700  0662  0442               	btfss	status,2
  8701  0663  1D03               	goto	u5641
  8702  0664  2E66               	goto	u5640
  8703  0665  2E67               u5641:
  8704  0666                     	goto	l4009
  8705  0666  2E7E               u5640:
  8706  0667                     	
  8707                           l4003:	
  8708  0667                     	movlb 2	; select bank2
  8709  0667  0142               	btfss	(_flags)^0100h,(4)&7
  8710  0668  1E68               	goto	u5651
  8711  0669  2E6B               	goto	u5650
  8712  066A  2E6C               u5651:
  8713  066B                     	goto	l4009
  8714  066B  2E7E               u5650:
  8715  066C                     	line	471
  8716                           	
  8717                           l4005:	
  8718  066C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 471:       
                                   dbuf[n++] = '.';
  8719                           	movlw	low(02Eh)
  8720  066C  302E               	movlb 0	; select bank0
  8721  066D  0140               	movwf	(??_efgtoa+0)+0
  8722  066E  00EC               	movlb 1	; select bank1
  8723  066F  0141               	movf	(efgtoa@n)^080h,w
  8724  0670  0862               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  8725  0671  3EA0               	movwf	fsr1l
  8726  0672  0086               	movlw 2	; select bank5/6
  8727  0673  3002               	movwf fsr1h	
  8728  0674  0087               	
  8729                           	movlb 0	; select bank0
  8730  0675  0140               	movf	(??_efgtoa+0)+0,w
  8731  0676  086C               	movwf	indf1
  8732  0677  0081               	
  8733                           l4007:	
  8734  0678                     	movlw	01h
  8735  0678  3001               	movlb 1	; select bank1
  8736  0679  0141               	addwf	(efgtoa@n)^080h,f
  8737  067A  07E2               	movlw	0
  8738  067B  3000               	addwfc	(efgtoa@n+1)^080h,f
  8739  067C  3DE3               	goto	l4009
  8740  067D  2E7E               	line	472
  8741                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 472:     }

  8742                           	
  8743                           l463:	
  8744  067E                     	line	473
  8745                           	
  8746                           l4009:	
  8747  067E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 473:     db
                                 uf[n] = '\0';
  8748                           	movlb 1	; select bank1
  8749  067E  0141               	movf	(efgtoa@n)^080h,w
  8750  067F  0862               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  8751  0680  3EA0               	movwf	fsr1l
  8752  0681  0086               	movlw 2	; select bank5/6
  8753  0682  3002               	movwf fsr1h	
  8754  0683  0087               	
  8755                           	clrf	indf1
  8756  0684  0181               	line	476
  8757                           	
  8758                           l4011:	
  8759  0685                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 476:     if
                                  (nmode == 'e') {
  8760                           		movlw	101
  8761  0685  3065               	xorwf	((efgtoa@nmode)^080h),w
  8762  0686  064E               	btfss	status,2
  8763  0687  1D03               	goto	u5661
  8764  0688  2E8A               	goto	u5660
  8765  0689  2E8B               u5661:
  8766  068A                     	goto	l4071
  8767  068A  2F8B               u5660:
  8768  068B                     	line	477
  8769                           	
  8770                           l4013:	
  8771  068B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 477:       
                                   i = sizeof(dbuf) - 1;
  8772                           	movlw	04Fh
  8773  068B  304F               	movwf	(efgtoa@i)^080h
  8774  068C  00DA               	movlw	0
  8775  068D  3000               	movwf	((efgtoa@i)^080h)+1
  8776  068E  00DB               	line	478
  8777                           	
  8778                           l4015:	
  8779  068F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 478:       
                                   dbuf[i] = '\0';
  8780                           	movf	(efgtoa@i)^080h,w
  8781  068F  085A               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  8782  0690  3EA0               	movwf	fsr1l
  8783  0691  0086               	movlw 2	; select bank5/6
  8784  0692  3002               	movwf fsr1h	
  8785  0693  0087               	
  8786                           	clrf	indf1
  8787  0694  0181               	line	479
  8788                           	
  8789                           l4017:	
  8790  0695                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 479:       
                                   sign = 0;
  8791                           	clrf	(efgtoa@sign)^080h
  8792  0695  01C9               	clrf	(efgtoa@sign+1)^080h
  8793  0696  01CA               	line	480
  8794                           	
  8795                           l4019:	
  8796  0697                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 480:       
                                   if (e < 0) {
  8797                           	btfss	(efgtoa@e+1)^080h,7
  8798  0697  1FE1               	goto	u5671
  8799  0698  2E9A               	goto	u5670
  8800  0699  2E9B               u5671:
  8801  069A                     	goto	l4025
  8802  069A  2EA5               u5670:
  8803  069B                     	line	481
  8804                           	
  8805                           l4021:	
  8806  069B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 481:       
                                       sign = 1;
  8807                           	movlw	01h
  8808  069B  3001               	movwf	(efgtoa@sign)^080h
  8809  069C  00C9               	movlw	0
  8810  069D  3000               	movwf	((efgtoa@sign)^080h)+1
  8811  069E  00CA               	line	482
  8812                           	
  8813                           l4023:	
  8814  069F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 482:       
                                       e = -e;
  8815                           	comf	(efgtoa@e)^080h,f
  8816  069F  09E0               	comf	(efgtoa@e+1)^080h,f
  8817  06A0  09E1               	incf	(efgtoa@e)^080h,f
  8818  06A1  0AE0               	skipnz
  8819  06A2  1903               	incf	(efgtoa@e+1)^080h,f
  8820  06A3  0AE1               	goto	l4025
  8821  06A4  2EA5               	line	483
  8822                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 483:       
                                   }
  8823                           	
  8824                           l465:	
  8825  06A5                     	line	484
  8826                           	
  8827                           l4025:	
  8828  06A5                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 484:       
                                   p = 2;
  8829                           	movlw	02h
  8830  06A5  3002               	movwf	(efgtoa@p)^080h
  8831  06A6  00CC               	movlw	0
  8832  06A7  3000               	movwf	((efgtoa@p)^080h)+1
  8833  06A8  00CD               	line	485
  8834                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 485:       
                                   while (e || (0 < p)) {
  8835                           	goto	l4037
  8836  06A9  2EEC               	
  8837                           l467:	
  8838  06AA                     	line	486
  8839                           	
  8840                           l4027:	
  8841  06AA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 486:       
                                       --i;
  8842                           	movlw	0FFh
  8843  06AA  30FF               	movlb 1	; select bank1
  8844  06AB  0141               	addwf	(efgtoa@i)^080h,f
  8845  06AC  07DA               	movlw	0FFh
  8846  06AD  30FF               	addwfc	(efgtoa@i+1)^080h,f
  8847  06AE  3DDB               	line	487
  8848                           	
  8849                           l4029:	
  8850  06AF                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 487:       
                                       dbuf[i] = '0' + (e % 10);
  8851                           	movlw	0Ah
  8852  06AF  300A               	movlb 0	; select bank0
  8853  06B0  0140               	movwf	(___awmod@divisor)
  8854  06B1  00A0               	movlw	0
  8855  06B2  3000               	movwf	((___awmod@divisor))+1
  8856  06B3  00A1               	movlb 1	; select bank1
  8857  06B4  0141               	movf	(efgtoa@e+1)^080h,w
  8858  06B5  0861               	movlb 0	; select bank0
  8859  06B6  0140               	movwf	(___awmod@dividend+1)
  8860  06B7  00A3               	movlb 1	; select bank1
  8861  06B8  0141               	movf	(efgtoa@e)^080h,w
  8862  06B9  0860               	movlb 0	; select bank0
  8863  06BA  0140               	movwf	(___awmod@dividend)
  8864  06BB  00A2               	fcall	___awmod
  8865  06BC  319B  234D  3180   	movlb 0	; select bank0
  8866  06BF  0140               	movf	(0+(?___awmod)),w
  8867  06C0  0820               	addlw	030h
  8868  06C1  3E30               	movwf	(??_efgtoa+0)+0
  8869  06C2  00EC               	movlb 1	; select bank1
  8870  06C3  0141               	movf	(efgtoa@i)^080h,w
  8871  06C4  085A               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  8872  06C5  3EA0               	movwf	fsr1l
  8873  06C6  0086               	movlw 2	; select bank5/6
  8874  06C7  3002               	movwf fsr1h	
  8875  06C8  0087               	
  8876                           	movlb 0	; select bank0
  8877  06C9  0140               	movf	(??_efgtoa+0)+0,w
  8878  06CA  086C               	movwf	indf1
  8879  06CB  0081               	line	488
  8880                           	
  8881                           l4031:	
  8882  06CC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 488:       
                                       e = e / 10;
  8883                           	movlw	0Ah
  8884  06CC  300A               	movwf	(___awdiv@divisor)
  8885  06CD  00A0               	movlw	0
  8886  06CE  3000               	movwf	((___awdiv@divisor))+1
  8887  06CF  00A1               	movlb 1	; select bank1
  8888  06D0  0141               	movf	(efgtoa@e+1)^080h,w
  8889  06D1  0861               	movlb 0	; select bank0
  8890  06D2  0140               	movwf	(___awdiv@dividend+1)
  8891  06D3  00A3               	movlb 1	; select bank1
  8892  06D4  0141               	movf	(efgtoa@e)^080h,w
  8893  06D5  0860               	movlb 0	; select bank0
  8894  06D6  0140               	movwf	(___awdiv@dividend)
  8895  06D7  00A2               	fcall	___awdiv
  8896  06D8  319C  2409  3180   	movlb 0	; select bank0
  8897  06DB  0140               	movf	(1+(?___awdiv)),w
  8898  06DC  0821               	movlb 1	; select bank1
  8899  06DD  0141               	movwf	(efgtoa@e+1)^080h
  8900  06DE  00E1               	movlb 0	; select bank0
  8901  06DF  0140               	movf	(0+(?___awdiv)),w
  8902  06E0  0820               	movlb 1	; select bank1
  8903  06E1  0141               	movwf	(efgtoa@e)^080h
  8904  06E2  00E0               	line	489
  8905                           	
  8906                           l4033:	
  8907  06E3                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 489:       
                                       --p;
  8908                           	movlw	0FFh
  8909  06E3  30FF               	addwf	(efgtoa@p)^080h,f
  8910  06E4  07CC               	movlw	0FFh
  8911  06E5  30FF               	addwfc	(efgtoa@p+1)^080h,f
  8912  06E6  3DCD               	line	490
  8913                           	
  8914                           l4035:	
  8915  06E7                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 490:       
                                       --w;
  8916                           	movlw	0FFh
  8917  06E7  30FF               	addwf	(efgtoa@w)^080h,f
  8918  06E8  07CF               	movlw	0FFh
  8919  06E9  30FF               	addwfc	(efgtoa@w+1)^080h,f
  8920  06EA  3DD0               	goto	l4037
  8921  06EB  2EEC               	line	491
  8922                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 491:       
                                   }
  8923                           	
  8924                           l466:	
  8925  06EC                     	line	485
  8926                           	
  8927                           l4037:	
  8928  06EC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 485:       
                                   while (e || (0 < p)) {
  8929                           	movf	((efgtoa@e)^080h),w
  8930  06EC  0860               iorwf	((efgtoa@e+1)^080h),w
  8931  06ED  0461               	btfss	status,2
  8932  06EE  1D03               	goto	u5681
  8933  06EF  2EF1               	goto	u5680
  8934  06F0  2EF2               u5681:
  8935  06F1                     	goto	l4027
  8936  06F1  2EAA               u5680:
  8937  06F2                     	
  8938                           l4039:	
  8939  06F2                     	movf	(efgtoa@p+1)^080h,w
  8940  06F2  084D               	xorlw	80h
  8941  06F3  3A80               	movlb 0	; select bank0
  8942  06F4  0140               	movwf	(??_efgtoa+0)+0
  8943  06F5  00EC               	movlw	(0)^80h
  8944  06F6  3080               	subwf	(??_efgtoa+0)+0,w
  8945  06F7  026C               	skipz
  8946  06F8  1D03               	goto	u5695
  8947  06F9  2EFD               	movlw	01h
  8948  06FA  3001               	movlb 1	; select bank1
  8949  06FB  0141               	subwf	(efgtoa@p)^080h,w
  8950  06FC  024C               u5695:
  8951  06FD                     
  8952                           	skipnc
  8953  06FD  1803               	goto	u5691
  8954  06FE  2F00               	goto	u5690
  8955  06FF  2F01               u5691:
  8956  0700                     	goto	l4027
  8957  0700  2EAA               u5690:
  8958  0701                     	goto	l4041
  8959  0701  2F02               	
  8960                           l468:	
  8961  0702                     	line	492
  8962                           	
  8963                           l4041:	
  8964  0702                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 492:       
                                   --i;
  8965                           	movlw	0FFh
  8966  0702  30FF               	movlb 1	; select bank1
  8967  0703  0141               	addwf	(efgtoa@i)^080h,f
  8968  0704  07DA               	movlw	0FFh
  8969  0705  30FF               	addwfc	(efgtoa@i+1)^080h,f
  8970  0706  3DDB               	line	493
  8971                           	
  8972                           l4043:	
  8973  0707                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 493:       
                                   dbuf[i] = sign ? '-' : '+';
  8974                           	movf	((efgtoa@sign)^080h),w
  8975  0707  0849               iorwf	((efgtoa@sign+1)^080h),w
  8976  0708  044A               	btfss	status,2
  8977  0709  1D03               	goto	u5701
  8978  070A  2F0C               	goto	u5700
  8979  070B  2F0D               u5701:
  8980  070C                     	goto	l4047
  8981  070C  2F12               u5700:
  8982  070D                     	
  8983                           l4045:	
  8984  070D                     	movlw	02Bh
  8985  070D  302B               	movwf	(_efgtoa$874)^080h
  8986  070E  00B9               	movlw	0
  8987  070F  3000               	movwf	((_efgtoa$874)^080h)+1
  8988  0710  00BA               	goto	l4049
  8989  0711  2F17               	
  8990                           l470:	
  8991  0712                     	
  8992                           l4047:	
  8993  0712                     	movlw	02Dh
  8994  0712  302D               	movwf	(_efgtoa$874)^080h
  8995  0713  00B9               	movlw	0
  8996  0714  3000               	movwf	((_efgtoa$874)^080h)+1
  8997  0715  00BA               	goto	l4049
  8998  0716  2F17               	
  8999                           l472:	
  9000  0717                     	
  9001                           l4049:	
  9002  0717                     	movf	(_efgtoa$874)^080h,w
  9003  0717  0839               	movlb 0	; select bank0
  9004  0718  0140               	movwf	(??_efgtoa+0)+0
  9005  0719  00EC               	movlb 1	; select bank1
  9006  071A  0141               	movf	(efgtoa@i)^080h,w
  9007  071B  085A               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  9008  071C  3EA0               	movwf	fsr1l
  9009  071D  0086               	movlw 2	; select bank5/6
  9010  071E  3002               	movwf fsr1h	
  9011  071F  0087               	
  9012                           	movlb 0	; select bank0
  9013  0720  0140               	movf	(??_efgtoa+0)+0,w
  9014  0721  086C               	movwf	indf1
  9015  0722  0081               	line	494
  9016                           	
  9017                           l4051:	
  9018  0723                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 494:       
                                   --w;
  9019                           	movlw	0FFh
  9020  0723  30FF               	movlb 1	; select bank1
  9021  0724  0141               	addwf	(efgtoa@w)^080h,f
  9022  0725  07CF               	movlw	0FFh
  9023  0726  30FF               	addwfc	(efgtoa@w+1)^080h,f
  9024  0727  3DD0               	line	495
  9025                           	
  9026                           l4053:	
  9027  0728                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 496:       
                                   dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  9028                           	movlw	0FFh
  9029  0728  30FF               	addwf	(efgtoa@i)^080h,f
  9030  0729  07DA               	movlw	0FFh
  9031  072A  30FF               	addwfc	(efgtoa@i+1)^080h,f
  9032  072B  3DDB               	line	496
  9033                           	
  9034                           l4055:	
  9035  072C                     	movf	(efgtoa@c)^080h,w
  9036  072C  082E               	addlw	low(0FFBFh)
  9037  072D  3EBF               	movlb 0	; select bank0
  9038  072E  0140               	movwf	(??_efgtoa+0)+0
  9039  072F  00EC               	movlw	high(0FFBFh)
  9040  0730  30FF               	skipnc
  9041  0731  1803               	movlw	(high(0FFBFh)+1)&0ffh
  9042  0732  3000               	movwf	((??_efgtoa+0)+0)+1
  9043  0733  00ED               	movlw	0
  9044  0734  3000               	subwf	1+(??_efgtoa+0)+0,w
  9045  0735  026D               	movlw	01Ah
  9046  0736  301A               	skipnz
  9047  0737  1903               	subwf	0+(??_efgtoa+0)+0,w
  9048  0738  026C               	skipc
  9049  0739  1C03               	goto	u5711
  9050  073A  2F3C               	goto	u5710
  9051  073B  2F3E               u5711:
  9052  073C                     	movlw	1
  9053  073C  3001               	goto	u5720
  9054  073D  2F3F               u5710:
  9055  073E                     	movlw	0
  9056  073E  3000               u5720:
  9057  073F                     	movwf	(??_efgtoa+2)+0
  9058  073F  00EE               	clrf	(??_efgtoa+2)+0+1
  9059  0740  01EF               	movf	0+(??_efgtoa+2)+0,w
  9060  0741  086E               	movlb 1	; select bank1
  9061  0742  0141               	movwf	(_efgtoa$876)^080h
  9062  0743  00BD               	movlb 0	; select bank0
  9063  0744  0140               	movf	1+(??_efgtoa+2)+0,w
  9064  0745  086F               	movlb 1	; select bank1
  9065  0746  0141               	movwf	(_efgtoa$876+1)^080h
  9066  0747  00BE               	goto	l4059
  9067  0748  2F5D               	
  9068                           l478:	
  9069  0749                     	
  9070                           l4057:	
  9071  0749                     	movf	(efgtoa@c)^080h,w
  9072  0749  082E               	movlb 0	; select bank0
  9073  074A  0140               	movwf	(??_efgtoa+0)+0
  9074  074B  00EC               	clrf	(??_efgtoa+0)+0+1
  9075  074C  01ED               	movf	0+(??_efgtoa+0)+0,w
  9076  074D  086C               	movwf	(isupper@c)
  9077  074E  00A0               	movf	1+(??_efgtoa+0)+0,w
  9078  074F  086D               	movwf	(isupper@c+1)
  9079  0750  00A1               	fcall	_isupper
  9080  0751  31A6  26BB  3180   	movlb 0	; select bank0
  9081  0754  0140               	movf	(1+(?_isupper)),w
  9082  0755  0821               	movlb 1	; select bank1
  9083  0756  0141               	movwf	(_efgtoa$876+1)^080h
  9084  0757  00BE               	movlb 0	; select bank0
  9085  0758  0140               	movf	(0+(?_isupper)),w
  9086  0759  0820               	movlb 1	; select bank1
  9087  075A  0141               	movwf	(_efgtoa$876)^080h
  9088  075B  00BD               	goto	l4059
  9089  075C  2F5D               	
  9090                           l480:	
  9091  075D                     	
  9092                           l4059:	
  9093  075D                     	movf	((_efgtoa$876)^080h),w
  9094  075D  083D               iorwf	((_efgtoa$876+1)^080h),w
  9095  075E  043E               	btfss	status,2
  9096  075F  1D03               	goto	u5731
  9097  0760  2F62               	goto	u5730
  9098  0761  2F63               u5731:
  9099  0762                     	goto	l4063
  9100  0762  2F68               u5730:
  9101  0763                     	
  9102                           l4061:	
  9103  0763                     	movlw	065h
  9104  0763  3065               	movwf	(_efgtoa$875)^080h
  9105  0764  00BB               	movlw	0
  9106  0765  3000               	movwf	((_efgtoa$875)^080h)+1
  9107  0766  00BC               	goto	l4065
  9108  0767  2F6D               	
  9109                           l474:	
  9110  0768                     	
  9111                           l4063:	
  9112  0768                     	movlw	045h
  9113  0768  3045               	movwf	(_efgtoa$875)^080h
  9114  0769  00BB               	movlw	0
  9115  076A  3000               	movwf	((_efgtoa$875)^080h)+1
  9116  076B  00BC               	goto	l4065
  9117  076C  2F6D               	
  9118                           l476:	
  9119  076D                     	
  9120                           l4065:	
  9121  076D                     	movf	(_efgtoa$875)^080h,w
  9122  076D  083B               	movlb 0	; select bank0
  9123  076E  0140               	movwf	(??_efgtoa+0)+0
  9124  076F  00EC               	movlb 1	; select bank1
  9125  0770  0141               	movf	(efgtoa@i)^080h,w
  9126  0771  085A               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  9127  0772  3EA0               	movwf	fsr1l
  9128  0773  0086               	movlw 2	; select bank5/6
  9129  0774  3002               	movwf fsr1h	
  9130  0775  0087               	
  9131                           	movlb 0	; select bank0
  9132  0776  0140               	movf	(??_efgtoa+0)+0,w
  9133  0777  086C               	movwf	indf1
  9134  0778  0081               	line	497
  9135                           	
  9136                           l4067:	
  9137  0779                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 497:       
                                   --w;
  9138                           	movlw	0FFh
  9139  0779  30FF               	movlb 1	; select bank1
  9140  077A  0141               	addwf	(efgtoa@w)^080h,f
  9141  077B  07CF               	movlw	0FFh
  9142  077C  30FF               	addwfc	(efgtoa@w+1)^080h,f
  9143  077D  3DD0               	line	498
  9144                           	
  9145                           l4069:	
  9146  077E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 498:       
                                   strcpy(&dbuf[n], &dbuf[i]);
  9147                           	movf	(efgtoa@i)^080h,w
  9148  077E  085A               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  9149  077F  3EA0               	movlb 0	; select bank0
  9150  0780  0140               	movwf	(strcpy@src)
  9151  0781  00A0               	movlw	0x2
  9152  0782  3002               
  9153                           	movwf	(strcpy@src+1)
  9154  0783  00A1               	movlb 1	; select bank1
  9155  0784  0141               	movf	(efgtoa@n)^080h,w
  9156  0785  0862               	addlw	low(_dbuf|((0x2)<<8))&0ffh
  9157  0786  3EA0               	fcall	_strcpy
  9158  0787  31A7  2760  3180   	goto	l4071
  9159  078A  2F8B               	line	499
  9160                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 499:     }

  9161                           	
  9162                           l464:	
  9163  078B                     	line	502
  9164                           	
  9165                           l4071:	
  9166  078B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 502:     re
                                 turn pad(fp, &dbuf[0], w);
  9167                           	movlw	(low(_dbuf|((0x2)<<8)))&0ffh
  9168  078B  30A0               	movlb 0	; select bank0
  9169  078C  0140               	movwf	(??_efgtoa+0)+0
  9170  078D  00EC               	movf	(??_efgtoa+0)+0,w
  9171  078E  086C               	movwf	(pad@buf)
  9172  078F  00B0               	movlb 1	; select bank1
  9173  0790  0141               	movf	(efgtoa@w+1)^080h,w
  9174  0791  0850               	movlb 0	; select bank0
  9175  0792  0140               	movwf	(pad@p+1)
  9176  0793  00B2               	movlb 1	; select bank1
  9177  0794  0141               	movf	(efgtoa@w)^080h,w
  9178  0795  084F               	movlb 0	; select bank0
  9179  0796  0140               	movwf	(pad@p)
  9180  0797  00B1               	movlb 1	; select bank1
  9181  0798  0141               	movf	(efgtoa@fp)^080h,w
  9182  0799  084B               	fcall	_pad
  9183  079A  319A  22F0  3180   	movlb 0	; select bank0
  9184  079D  0140               	movf	(1+(?_pad)),w
  9185  079E  0831               	movlb 1	; select bank1
  9186  079F  0141               	movwf	(?_efgtoa+1)^080h
  9187  07A0  00AB               	movlb 0	; select bank0
  9188  07A1  0140               	movf	(0+(?_pad)),w
  9189  07A2  0830               	movlb 1	; select bank1
  9190  07A3  0141               	movwf	(?_efgtoa)^080h
  9191  07A4  00AA               	goto	l407
  9192  07A5  2FA6               	
  9193                           l4073:	
  9194  07A6                     	line	503
  9195                           	
  9196                           l407:	
  9197  07A6                     	return
  9198  07A6  0008               	opt stack 0
  9199                           GLOBAL	__end_of_efgtoa
  9200                           	__end_of_efgtoa:
  9201  07A7                     	signat	_efgtoa,12410
  9202                           	global	_tolower
  9203                           
  9204 ;; *************** function _tolower *****************
  9205 ;; Defined at:
  9206 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\tolower.c"
  9207 ;; Parameters:    Size  Location     Type
  9208 ;;  c               2    6[BANK0 ] int 
  9209 ;; Auto vars:     Size  Location     Type
  9210 ;;		None
  9211 ;; Return value:  Size  Location     Type
  9212 ;;                  2    6[BANK0 ] int 
  9213 ;; Registers used:
  9214 ;;		wreg, status,2, status,0, pclath, cstack
  9215 ;; Tracked objects:
  9216 ;;		On entry : 0/0
  9217 ;;		On exit  : 0/0
  9218 ;;		Unchanged: 0/0
  9219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9220 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9221 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9222 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9223 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9224 ;;Total ram usage:        8 bytes
  9225 ;; Hardware stack levels used:    1
  9226 ;; Hardware stack levels required when called:    4
  9227 ;; This function calls:
  9228 ;;		_isupper
  9229 ;; This function is called by:
  9230 ;;		_efgtoa
  9231 ;;		_vfpfcnvrt
  9232 ;; This function uses a non-reentrant model
  9233 ;;
  9234                           psect	text8,local,class=CODE,delta=2,merge=1,group=2
  9235                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\tolower.c"
  9236                           	line	4
  9237                           global __ptext8
  9238                           __ptext8:	;psect for function _tolower
  9239  1892                     psect	text8
  9240                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\tolower.c"
  9241                           	line	4
  9242                           	global	__size_of_tolower
  9243                           	__size_of_tolower	equ	__end_of_tolower-_tolower
  9244  0035                     	
  9245                           _tolower:	
  9246  1892                     ;incstack = 0
  9247                           	opt	stack 7
  9248                           ; Regs used in _tolower: [wreg+status,2+status,0+pclath+cstack]
  9249                           	line	6
  9250                           	
  9251                           l3241:	
  9252  1892                     	movlb 0	; select bank0
  9253  1892  0140               	movf	(tolower@c),w
  9254  1893  0826               	addlw	0BFh
  9255  1894  3EBF               	movwf	(??_tolower+0)+0
  9256  1895  00A8               	movlw	0FFh
  9257  1896  30FF               	addwfc	(tolower@c+1),w
  9258  1897  3D27               	movwf	1+(??_tolower+0)+0
  9259  1898  00A9               	movlw	0
  9260  1899  3000               	subwf	1+(??_tolower+0)+0,w
  9261  189A  0229               	movlw	01Ah
  9262  189B  301A               	skipnz
  9263  189C  1903               	subwf	0+(??_tolower+0)+0,w
  9264  189D  0228               	skipc
  9265  189E  1C03               	goto	u4051
  9266  189F  28A1               	goto	u4050
  9267  18A0  28A3               u4051:
  9268  18A1                     	movlw	1
  9269  18A1  3001               	goto	u4060
  9270  18A2  28A4               u4050:
  9271  18A3                     	movlw	0
  9272  18A3  3000               u4060:
  9273  18A4                     	movwf	(??_tolower+2)+0
  9274  18A4  00AA               	clrf	(??_tolower+2)+0+1
  9275  18A5  01AB               	movf	0+(??_tolower+2)+0,w
  9276  18A6  082A               	movwf	(_tolower$1321)
  9277  18A7  00AC               	movf	1+(??_tolower+2)+0,w
  9278  18A8  082B               	movwf	(_tolower$1321+1)
  9279  18A9  00AD               	goto	l3245
  9280  18AA  28B8               	
  9281                           l1099:	
  9282  18AB                     	
  9283                           l3243:	
  9284  18AB                     	movf	(tolower@c+1),w
  9285  18AB  0827               	movwf	(isupper@c+1)
  9286  18AC  00A1               	movf	(tolower@c),w
  9287  18AD  0826               	movwf	(isupper@c)
  9288  18AE  00A0               	fcall	_isupper
  9289  18AF  31A6  26BB  3198   	movlb 0	; select bank0
  9290  18B2  0140               	movf	(1+(?_isupper)),w
  9291  18B3  0821               	movwf	(_tolower$1321+1)
  9292  18B4  00AD               	movf	(0+(?_isupper)),w
  9293  18B5  0820               	movwf	(_tolower$1321)
  9294  18B6  00AC               	goto	l3245
  9295  18B7  28B8               	
  9296                           l1101:	
  9297  18B8                     	
  9298                           l3245:	
  9299  18B8                     	movf	((_tolower$1321)),w
  9300  18B8  082C               iorwf	((_tolower$1321+1)),w
  9301  18B9  042D               	btfsc	status,2
  9302  18BA  1903               	goto	u4071
  9303  18BB  28BD               	goto	u4070
  9304  18BC  28BE               u4071:
  9305  18BD                     	goto	l1097
  9306  18BD  28C6               u4070:
  9307  18BE                     	
  9308                           l3247:	
  9309  18BE                     	movlw	020h
  9310  18BE  3020               	iorwf	(tolower@c),w
  9311  18BF  0426               	movwf	(?_tolower)
  9312  18C0  00A6               	movlw	0
  9313  18C1  3000               	iorwf	(tolower@c+1),w
  9314  18C2  0427               	movwf	1+(?_tolower)
  9315  18C3  00A7               	goto	l1102
  9316  18C4  28C6               	
  9317                           l3249:	
  9318  18C5                     	goto	l1102
  9319  18C5  28C6               	
  9320                           l1097:	
  9321  18C6                     	line	7
  9322                           	line	8
  9323                           	
  9324                           l1102:	
  9325  18C6                     	return
  9326  18C6  0008               	opt stack 0
  9327                           GLOBAL	__end_of_tolower
  9328                           	__end_of_tolower:
  9329  18C7                     	signat	_tolower,4218
  9330                           	global	_isupper
  9331                           
  9332 ;; *************** function _isupper *****************
  9333 ;; Defined at:
  9334 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isupper.c"
  9335 ;; Parameters:    Size  Location     Type
  9336 ;;  c               2    0[BANK0 ] int 
  9337 ;; Auto vars:     Size  Location     Type
  9338 ;;		None
  9339 ;; Return value:  Size  Location     Type
  9340 ;;                  2    0[BANK0 ] int 
  9341 ;; Registers used:
  9342 ;;		wreg, status,2, status,0
  9343 ;; Tracked objects:
  9344 ;;		On entry : 0/0
  9345 ;;		On exit  : 0/0
  9346 ;;		Unchanged: 0/0
  9347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9348 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9350 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9351 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9352 ;;Total ram usage:        6 bytes
  9353 ;; Hardware stack levels used:    1
  9354 ;; Hardware stack levels required when called:    3
  9355 ;; This function calls:
  9356 ;;		Nothing
  9357 ;; This function is called by:
  9358 ;;		_efgtoa
  9359 ;;		_vfpfcnvrt
  9360 ;;		_tolower
  9361 ;; This function uses a non-reentrant model
  9362 ;;
  9363                           psect	text9,local,class=CODE,delta=2,merge=1,group=2
  9364                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isupper.c"
  9365                           	line	5
  9366                           global __ptext9
  9367                           __ptext9:	;psect for function _isupper
  9368  26BB                     psect	text9
  9369                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isupper.c"
  9370                           	line	5
  9371                           	global	__size_of_isupper
  9372                           	__size_of_isupper	equ	__end_of_isupper-_isupper
  9373  001A                     	
  9374                           _isupper:	
  9375  26BB                     ;incstack = 0
  9376                           	opt	stack 7
  9377                           ; Regs used in _isupper: [wreg+status,2+status,0]
  9378                           	line	7
  9379                           	
  9380                           l2973:	
  9381  26BB                     	movlb 0	; select bank0
  9382  26BB  0140               	movf	(isupper@c),w
  9383  26BC  0820               	addlw	0BFh
  9384  26BD  3EBF               	movwf	(??_isupper+0)+0
  9385  26BE  00A2               	movlw	0FFh
  9386  26BF  30FF               	addwfc	(isupper@c+1),w
  9387  26C0  3D21               	movwf	1+(??_isupper+0)+0
  9388  26C1  00A3               	movlw	0
  9389  26C2  3000               	subwf	1+(??_isupper+0)+0,w
  9390  26C3  0223               	movlw	01Ah
  9391  26C4  301A               	skipnz
  9392  26C5  1903               	subwf	0+(??_isupper+0)+0,w
  9393  26C6  0222               	skipc
  9394  26C7  1C03               	goto	u3411
  9395  26C8  2ECA               	goto	u3410
  9396  26C9  2ECC               u3411:
  9397  26CA                     	movlw	1
  9398  26CA  3001               	goto	u3420
  9399  26CB  2ECD               u3410:
  9400  26CC                     	movlw	0
  9401  26CC  3000               u3420:
  9402  26CD                     	movwf	(??_isupper+2)+0
  9403  26CD  00A4               	clrf	(??_isupper+2)+0+1
  9404  26CE  01A5               	movf	0+(??_isupper+2)+0,w
  9405  26CF  0824               	movwf	(?_isupper)
  9406  26D0  00A0               	movf	1+(??_isupper+2)+0,w
  9407  26D1  0825               	movwf	(?_isupper+1)
  9408  26D2  00A1               	goto	l1028
  9409  26D3  2ED4               	
  9410                           l2975:	
  9411  26D4                     	line	8
  9412                           	
  9413                           l1028:	
  9414  26D4                     	return
  9415  26D4  0008               	opt stack 0
  9416                           GLOBAL	__end_of_isupper
  9417                           	__end_of_isupper:
  9418  26D5                     	signat	_isupper,4218
  9419                           	global	_strcpy
  9420                           
  9421 ;; *************** function _strcpy *****************
  9422 ;; Defined at:
  9423 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  9424 ;; Parameters:    Size  Location     Type
  9425 ;;  dest            1    wreg     PTR unsigned char 
  9426 ;;		 -> dbuf(80), 
  9427 ;;  src             2    0[BANK0 ] PTR const unsigned char 
  9428 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  9429 ;;		 -> dbuf(80), 
  9430 ;; Auto vars:     Size  Location     Type
  9431 ;;  dest            1    7[BANK0 ] PTR unsigned char 
  9432 ;;		 -> dbuf(80), 
  9433 ;;  s               2    4[BANK0 ] PTR const unsigned char 
  9434 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  9435 ;;		 -> dbuf(80), 
  9436 ;;  d               1    6[BANK0 ] PTR unsigned char 
  9437 ;;		 -> dbuf(80), 
  9438 ;; Return value:  Size  Location     Type
  9439 ;;                  1    wreg      PTR unsigned char 
  9440 ;; Registers used:
  9441 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  9442 ;; Tracked objects:
  9443 ;;		On entry : 0/0
  9444 ;;		On exit  : 0/0
  9445 ;;		Unchanged: 0/0
  9446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9447 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9448 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9449 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9450 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9451 ;;Total ram usage:        8 bytes
  9452 ;; Hardware stack levels used:    1
  9453 ;; Hardware stack levels required when called:    3
  9454 ;; This function calls:
  9455 ;;		Nothing
  9456 ;; This function is called by:
  9457 ;;		_efgtoa
  9458 ;; This function uses a non-reentrant model
  9459 ;;
  9460                           psect	text10,local,class=CODE,delta=2,merge=1,group=2
  9461                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  9462                           	line	7
  9463                           global __ptext10
  9464                           __ptext10:	;psect for function _strcpy
  9465  2760                     psect	text10
  9466                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  9467                           	line	7
  9468                           	global	__size_of_strcpy
  9469                           	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
  9470  0025                     	
  9471                           _strcpy:	
  9472  2760                     ;incstack = 0
  9473                           	opt	stack 7
  9474                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  9475                           ;strcpy@dest stored from wreg
  9476                           	movlb 0	; select bank0
  9477  2760  0140               	movwf	(strcpy@dest)
  9478  2761  00A7               	line	13
  9479                           	
  9480                           l3237:	
  9481  2762                     	movf	(strcpy@src+1),w
  9482  2762  0821               	movwf	(strcpy@s+1)
  9483  2763  00A5               	movf	(strcpy@src),w
  9484  2764  0820               	movwf	(strcpy@s)
  9485  2765  00A4               	line	14
  9486                           	movf	(strcpy@dest),w
  9487  2766  0827               	movwf	(??_strcpy+0)+0
  9488  2767  00A2               	movf	(??_strcpy+0)+0,w
  9489  2768  0822               	movwf	(strcpy@d)
  9490  2769  00A6               	line	15
  9491                           	goto	l3239
  9492  276A  2F6C               	
  9493                           l1065:	
  9494  276B                     	goto	l3239
  9495  276B  2F6C               	
  9496                           l1064:	
  9497  276C                     	
  9498                           l3239:	
  9499  276C                     	movf	(strcpy@d),w
  9500  276C  0826               	movwf	fsr1l
  9501  276D  0086               	movlw 2	; select bank4/5
  9502  276E  3002               	movwf fsr1h	
  9503  276F  0087               	
  9504                           	incf	(strcpy@d),f
  9505  2770  0AA6               	movf	(strcpy@s+1),w
  9506  2771  0825               	movwf	(??_strcpy+0)+0+1
  9507  2772  00A3               	movf	(strcpy@s),w
  9508  2773  0824               	movwf	(??_strcpy+0)+0
  9509  2774  00A2               	incf	(strcpy@s),f
  9510  2775  0AA4               	skipnz
  9511  2776  1903               	incf	(strcpy@s+1),f
  9512  2777  0AA5               	movf	0+(??_strcpy+0)+0,w
  9513  2778  0822               	movwf	fsr0l
  9514  2779  0084               	movf	(1+(??_strcpy+0)+0),w
  9515  277A  0823               	movwf	fsr0h
  9516  277B  0085               	movf	indf0,w ;code access
  9517  277C  0800               	movwi	[0]fsr1
  9518  277D  3FC0               	movf	wreg
  9519  277E  0889               	btfss	status,2
  9520  277F  1D03               	goto	u4041
  9521  2780  2F82               	goto	u4040
  9522  2781  2F83               u4041:
  9523  2782                     	goto	l3239
  9524  2782  2F6C               u4040:
  9525  2783                     	goto	l1067
  9526  2783  2F84               	
  9527                           l1066:	
  9528  2784                     	line	18
  9529                           ;	Return value of _strcpy is never used
  9530                           	
  9531                           l1067:	
  9532  2784                     	return
  9533  2784  0008               	opt stack 0
  9534                           GLOBAL	__end_of_strcpy
  9535                           	__end_of_strcpy:
  9536  2785                     	signat	_strcpy,8313
  9537                           	global	_pad
  9538                           
  9539 ;; *************** function _pad *****************
  9540 ;; Defined at:
  9541 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  9542 ;; Parameters:    Size  Location     Type
  9543 ;;  fp              1    wreg     PTR struct _IO_FILE
  9544 ;;		 -> sprintf@f(5), 
  9545 ;;  buf             1   16[BANK0 ] PTR unsigned char 
  9546 ;;		 -> dbuf(80), 
  9547 ;;  p               2   17[BANK0 ] int 
  9548 ;; Auto vars:     Size  Location     Type
  9549 ;;  fp              1   24[BANK0 ] PTR struct _IO_FILE
  9550 ;;		 -> sprintf@f(5), 
  9551 ;;  w               2   22[BANK0 ] int 
  9552 ;;  i               2   20[BANK0 ] int 
  9553 ;; Return value:  Size  Location     Type
  9554 ;;                  2   16[BANK0 ] int 
  9555 ;; Registers used:
  9556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9557 ;; Tracked objects:
  9558 ;;		On entry : 0/0
  9559 ;;		On exit  : 0/0
  9560 ;;		Unchanged: 0/0
  9561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9562 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9563 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9564 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9565 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9566 ;;Total ram usage:        9 bytes
  9567 ;; Hardware stack levels used:    1
  9568 ;; Hardware stack levels required when called:    6
  9569 ;; This function calls:
  9570 ;;		_fputc
  9571 ;;		_fputs
  9572 ;;		_strlen
  9573 ;; This function is called by:
  9574 ;;		_efgtoa
  9575 ;; This function uses a non-reentrant model
  9576 ;;
  9577                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  9578                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  9579                           	line	72
  9580                           global __ptext11
  9581                           __ptext11:	;psect for function _pad
  9582  1AF0                     psect	text11
  9583                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  9584                           	line	72
  9585                           	global	__size_of_pad
  9586                           	__size_of_pad	equ	__end_of_pad-_pad
  9587  005D                     	
  9588                           _pad:	
  9589  1AF0                     ;incstack = 0
  9590                           	opt	stack 4
  9591                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9592                           ;pad@fp stored from wreg
  9593                           	movlb 0	; select bank0
  9594  1AF0  0140               	movwf	(pad@fp)
  9595  1AF1  00B8               	line	77
  9596                           	
  9597                           l3191:	
  9598  1AF2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 72: static 
                                 int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
                                 es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99
                                 \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
                                 es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  9599                           	movlb 2	; select bank2
  9600  1AF2  0142               	btfss	(_flags)^0100h,(0)&7
  9601  1AF3  1C68               	goto	u3921
  9602  1AF4  2AF6               	goto	u3920
  9603  1AF5  2AF7               u3921:
  9604  1AF6                     	goto	l3195
  9605  1AF6  2B01               u3920:
  9606  1AF7                     	line	78
  9607                           	
  9608                           l3193:	
  9609  1AF7                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 78:        
                                  fputs((const char *)buf, fp);
  9610                           	movlb 0	; select bank0
  9611  1AF7  0140               	movf	(pad@fp),w
  9612  1AF8  0838               	movwf	(??_pad+0)+0
  9613  1AF9  00B3               	movf	(??_pad+0)+0,w
  9614  1AFA  0833               	movwf	(fputs@fp)
  9615  1AFB  00A8               	movf	(pad@buf),w
  9616  1AFC  0830               	fcall	_fputs
  9617  1AFD  31A7  27D5  319A   	goto	l3195
  9618  1B00  2B01               	line	79
  9619                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 79:     }
  9620                           	
  9621                           l380:	
  9622  1B01                     	line	82
  9623                           	
  9624                           l3195:	
  9625  1B01                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 82:     w =
                                  (p < 0) ? 0 : p;
  9626                           	movlb 0	; select bank0
  9627  1B01  0140               	btfsc	(pad@p+1),7
  9628  1B02  1BB2               	goto	u3931
  9629  1B03  2B05               	goto	u3930
  9630  1B04  2B06               u3931:
  9631  1B05                     	goto	l3199
  9632  1B05  2B0B               u3930:
  9633  1B06                     	
  9634                           l3197:	
  9635  1B06                     	movf	(pad@p+1),w
  9636  1B06  0832               	movwf	(pad@w+1)
  9637  1B07  00B7               	movf	(pad@p),w
  9638  1B08  0831               	movwf	(pad@w)
  9639  1B09  00B6               	goto	l384
  9640  1B0A  2B0D               	
  9641                           l382:	
  9642  1B0B                     	
  9643                           l3199:	
  9644  1B0B                     	clrf	(pad@w)
  9645  1B0B  01B6               	clrf	(pad@w+1)
  9646  1B0C  01B7               	
  9647                           l384:	
  9648  1B0D                     	line	83
  9649                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 83:     i =
                                  0;
  9650                           	clrf	(pad@i)
  9651  1B0D  01B4               	clrf	(pad@i+1)
  9652  1B0E  01B5               	line	84
  9653                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
                                 le (i < w) {
  9654                           	goto	l3205
  9655  1B0F  2B22               	
  9656                           l386:	
  9657  1B10                     	line	85
  9658                           	
  9659                           l3201:	
  9660  1B10                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 85:        
                                  fputc(' ', fp);
  9661                           	movlw	020h
  9662  1B10  3020               	movlb 0	; select bank0
  9663  1B11  0140               	movwf	(fputc@c)
  9664  1B12  00A0               	movlw	0
  9665  1B13  3000               	movwf	((fputc@c))+1
  9666  1B14  00A1               	movf	(pad@fp),w
  9667  1B15  0838               	movwf	(??_pad+0)+0
  9668  1B16  00B3               	movf	(??_pad+0)+0,w
  9669  1B17  0833               	movwf	(fputc@fp)
  9670  1B18  00A2               	fcall	_fputc
  9671  1B19  319B  23AB  319A   	line	86
  9672                           	
  9673                           l3203:	
  9674  1B1C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 86:        
                                  ++i;
  9675                           	movlw	01h
  9676  1B1C  3001               	movlb 0	; select bank0
  9677  1B1D  0140               	addwf	(pad@i),f
  9678  1B1E  07B4               	movlw	0
  9679  1B1F  3000               	addwfc	(pad@i+1),f
  9680  1B20  3DB5               	goto	l3205
  9681  1B21  2B22               	line	87
  9682                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 87:     }
  9683                           	
  9684                           l385:	
  9685  1B22                     	line	84
  9686                           	
  9687                           l3205:	
  9688  1B22                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
                                 le (i < w) {
  9689                           	movf	(pad@i+1),w
  9690  1B22  0835               	xorlw	80h
  9691  1B23  3A80               	movwf	(??_pad+0)+0
  9692  1B24  00B3               	movf	(pad@w+1),w
  9693  1B25  0837               	xorlw	80h
  9694  1B26  3A80               	subwf	(??_pad+0)+0,w
  9695  1B27  0233               	skipz
  9696  1B28  1D03               	goto	u3945
  9697  1B29  2B2C               	movf	(pad@w),w
  9698  1B2A  0836               	subwf	(pad@i),w
  9699  1B2B  0234               u3945:
  9700  1B2C                     
  9701                           	skipc
  9702  1B2C  1C03               	goto	u3941
  9703  1B2D  2B2F               	goto	u3940
  9704  1B2E  2B30               u3941:
  9705  1B2F                     	goto	l3201
  9706  1B2F  2B10               u3940:
  9707  1B30                     	
  9708                           l387:	
  9709  1B30                     	line	90
  9710                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 90:     if 
                                 (!(flags & (1 << 0))) {
  9711                           	movlb 2	; select bank2
  9712  1B30  0142               	btfsc	(_flags)^0100h,(0)&7
  9713  1B31  1868               	goto	u3951
  9714  1B32  2B34               	goto	u3950
  9715  1B33  2B35               u3951:
  9716  1B34                     	goto	l3209
  9717  1B34  2B3F               u3950:
  9718  1B35                     	line	91
  9719                           	
  9720                           l3207:	
  9721  1B35                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 91:        
                                  fputs((const char *)buf, fp);
  9722                           	movlb 0	; select bank0
  9723  1B35  0140               	movf	(pad@fp),w
  9724  1B36  0838               	movwf	(??_pad+0)+0
  9725  1B37  00B3               	movf	(??_pad+0)+0,w
  9726  1B38  0833               	movwf	(fputs@fp)
  9727  1B39  00A8               	movf	(pad@buf),w
  9728  1B3A  0830               	fcall	_fputs
  9729  1B3B  31A7  27D5  319A   	goto	l3209
  9730  1B3E  2B3F               	line	92
  9731                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 92:     }
  9732                           	
  9733                           l388:	
  9734  1B3F                     	line	94
  9735                           	
  9736                           l3209:	
  9737  1B3F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 94:     ret
                                 urn strlen(buf) + w;
  9738                           	movlb 0	; select bank0
  9739  1B3F  0140               	movf	(pad@buf),w
  9740  1B40  0830               	fcall	_strlen
  9741  1B41  3198  2001  319A   	movlb 0	; select bank0
  9742  1B44  0140               	movf	(pad@w),w
  9743  1B45  0836               	addwf	(0+(?_strlen)),w
  9744  1B46  0720               	movwf	(?_pad)
  9745  1B47  00B0               	movf	(pad@w+1),w
  9746  1B48  0837               	addwfc	(1+(?_strlen)),w
  9747  1B49  3D21               	movwf	1+(?_pad)
  9748  1B4A  00B1               	goto	l389
  9749  1B4B  2B4C               	
  9750                           l3211:	
  9751  1B4C                     	line	95
  9752                           	
  9753                           l389:	
  9754  1B4C                     	return
  9755  1B4C  0008               	opt stack 0
  9756                           GLOBAL	__end_of_pad
  9757                           	__end_of_pad:
  9758  1B4D                     	signat	_pad,12410
  9759                           	global	_strlen
  9760                           
  9761 ;; *************** function _strlen *****************
  9762 ;; Defined at:
  9763 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  9764 ;; Parameters:    Size  Location     Type
  9765 ;;  s               1    wreg     PTR const unsigned char 
  9766 ;;		 -> dbuf(80), 
  9767 ;; Auto vars:     Size  Location     Type
  9768 ;;  s               1    7[BANK0 ] PTR const unsigned char 
  9769 ;;		 -> dbuf(80), 
  9770 ;;  a               1    6[BANK0 ] PTR const unsigned char 
  9771 ;;		 -> dbuf(80), 
  9772 ;; Return value:  Size  Location     Type
  9773 ;;                  2    0[BANK0 ] unsigned int 
  9774 ;; Registers used:
  9775 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9776 ;; Tracked objects:
  9777 ;;		On entry : 0/0
  9778 ;;		On exit  : 0/0
  9779 ;;		Unchanged: 0/0
  9780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9781 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9782 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9783 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9784 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9785 ;;Total ram usage:        8 bytes
  9786 ;; Hardware stack levels used:    1
  9787 ;; Hardware stack levels required when called:    3
  9788 ;; This function calls:
  9789 ;;		Nothing
  9790 ;; This function is called by:
  9791 ;;		_pad
  9792 ;; This function uses a non-reentrant model
  9793 ;;
  9794                           psect	text12,local,class=CODE,delta=2,merge=1,group=2
  9795                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  9796                           	line	12
  9797                           global __ptext12
  9798                           __ptext12:	;psect for function _strlen
  9799  1801                     psect	text12
  9800                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  9801                           	line	12
  9802                           	global	__size_of_strlen
  9803                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  9804  002B                     	
  9805                           _strlen:	
  9806  1801                     ;incstack = 0
  9807                           	opt	stack 6
  9808                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  9809                           ;strlen@s stored from wreg
  9810                           	movlb 0	; select bank0
  9811  1801  0140               	movwf	(strlen@s)
  9812  1802  00A7               	line	14
  9813                           	
  9814                           l2963:	
  9815  1803                     	movf	(strlen@s),w
  9816  1803  0827               	movwf	(??_strlen+0)+0
  9817  1804  00A2               	movf	(??_strlen+0)+0,w
  9818  1805  0822               	movwf	(strlen@a)
  9819  1806  00A6               	line	16
  9820                           	goto	l2967
  9821  1807  280D               	
  9822                           l1071:	
  9823  1808                     	line	17
  9824                           	
  9825                           l2965:	
  9826  1808                     	movlw	low(01h)
  9827  1808  3001               	movwf	(??_strlen+0)+0
  9828  1809  00A2               	movf	(??_strlen+0)+0,w
  9829  180A  0822               	addwf	(strlen@s),f
  9830  180B  07A7               	goto	l2967
  9831  180C  280D               	line	18
  9832                           	
  9833                           l1070:	
  9834  180D                     	line	16
  9835                           	
  9836                           l2967:	
  9837  180D                     	movf	(strlen@s),w
  9838  180D  0827               	movwf	fsr1l
  9839  180E  0086               	movlw 2	; select bank4/5
  9840  180F  3002               	movwf fsr1h	
  9841  1810  0087               	
  9842                           	movf	(indf1),w
  9843  1811  0801               	btfss	status,2
  9844  1812  1D03               	goto	u3401
  9845  1813  2815               	goto	u3400
  9846  1814  2816               u3401:
  9847  1815                     	goto	l2965
  9848  1815  2808               u3400:
  9849  1816                     	goto	l2969
  9850  1816  2817               	
  9851                           l1072:	
  9852  1817                     	line	25
  9853                           	
  9854                           l2969:	
  9855  1817                     	movf	(strlen@a),w
  9856  1817  0826               	movwf	(??_strlen+0)+0
  9857  1818  00A2               	movlw	(0x2)
  9858  1819  3002               	movwf	(??_strlen+0)+0+1
  9859  181A  00A3               	comf	(??_strlen+0)+0,f
  9860  181B  09A2               	comf	(??_strlen+0)+1,f
  9861  181C  09A3               	incf	(??_strlen+0)+0,f
  9862  181D  0AA2               	skipnz
  9863  181E  1903               	incf	(??_strlen+0)+1,f
  9864  181F  0AA3               	movf	(strlen@s),w
  9865  1820  0827               	movwf	(??_strlen+2)+0
  9866  1821  00A4               	movlw	(0x2)
  9867  1822  3002               	movwf	(??_strlen+2)+0+1
  9868  1823  00A5               	movf	0+(??_strlen+0)+0,w
  9869  1824  0822               	addwf	0+(??_strlen+2)+0,w
  9870  1825  0724               	movwf	(?_strlen)
  9871  1826  00A0               	movf	1+(??_strlen+0)+0,w
  9872  1827  0823               	addwfc	1+(??_strlen+2)+0,w
  9873  1828  3D25               	movwf	1+(?_strlen)
  9874  1829  00A1               	goto	l1073
  9875  182A  282B               	
  9876                           l2971:	
  9877  182B                     	line	26
  9878                           	
  9879                           l1073:	
  9880  182B                     	return
  9881  182B  0008               	opt stack 0
  9882                           GLOBAL	__end_of_strlen
  9883                           	__end_of_strlen:
  9884  182C                     	signat	_strlen,4218
  9885                           	global	_fputs
  9886                           
  9887 ;; *************** function _fputs *****************
  9888 ;; Defined at:
  9889 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  9890 ;; Parameters:    Size  Location     Type
  9891 ;;  s               1    wreg     PTR const unsigned char 
  9892 ;;		 -> dbuf(80), 
  9893 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
  9894 ;;		 -> sprintf@f(5), 
  9895 ;; Auto vars:     Size  Location     Type
  9896 ;;  s               1   15[BANK0 ] PTR const unsigned char 
  9897 ;;		 -> dbuf(80), 
  9898 ;;  i               2   13[BANK0 ] int 
  9899 ;;  c               1   12[BANK0 ] unsigned char 
  9900 ;; Return value:  Size  Location     Type
  9901 ;;                  2    8[BANK0 ] int 
  9902 ;; Registers used:
  9903 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9904 ;; Tracked objects:
  9905 ;;		On entry : 0/0
  9906 ;;		On exit  : 0/0
  9907 ;;		Unchanged: 0/0
  9908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9909 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9910 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9911 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9912 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9913 ;;Total ram usage:        8 bytes
  9914 ;; Hardware stack levels used:    1
  9915 ;; Hardware stack levels required when called:    5
  9916 ;; This function calls:
  9917 ;;		_fputc
  9918 ;; This function is called by:
  9919 ;;		_pad
  9920 ;; This function uses a non-reentrant model
  9921 ;;
  9922                           psect	text13,local,class=CODE,delta=2,merge=1,group=2
  9923                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  9924                           	line	8
  9925                           global __ptext13
  9926                           __ptext13:	;psect for function _fputs
  9927  27D5                     psect	text13
  9928                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  9929                           	line	8
  9930                           	global	__size_of_fputs
  9931                           	__size_of_fputs	equ	__end_of_fputs-_fputs
  9932  002B                     	
  9933                           _fputs:	
  9934  27D5                     ;incstack = 0
  9935                           	opt	stack 4
  9936                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9937                           ;fputs@s stored from wreg
  9938                           	movlb 0	; select bank0
  9939  27D5  0140               	movwf	(fputs@s)
  9940  27D6  00AF               	line	13
  9941                           	
  9942                           l2955:	
  9943  27D7                     	clrf	(fputs@i)
  9944  27D7  01AD               	clrf	(fputs@i+1)
  9945  27D8  01AE               	line	14
  9946                           	goto	l2961
  9947  27D9  2FEE               	
  9948                           l1049:	
  9949  27DA                     	line	15
  9950                           	
  9951                           l2957:	
  9952  27DA                     	movf	(fputs@c),w
  9953  27DA  082C               	movwf	(??_fputs+0)+0
  9954  27DB  00A9               	clrf	(??_fputs+0)+0+1
  9955  27DC  01AA               	movf	0+(??_fputs+0)+0,w
  9956  27DD  0829               	movwf	(fputc@c)
  9957  27DE  00A0               	movf	1+(??_fputs+0)+0,w
  9958  27DF  082A               	movwf	(fputc@c+1)
  9959  27E0  00A1               	movf	(fputs@fp),w
  9960  27E1  0828               	movwf	(??_fputs+2)+0
  9961  27E2  00AB               	movf	(??_fputs+2)+0,w
  9962  27E3  082B               	movwf	(fputc@fp)
  9963  27E4  00A2               	fcall	_fputc
  9964  27E5  319B  23AB  31A7   	line	16
  9965                           	
  9966                           l2959:	
  9967  27E8                     	movlw	01h
  9968  27E8  3001               	movlb 0	; select bank0
  9969  27E9  0140               	addwf	(fputs@i),f
  9970  27EA  07AD               	movlw	0
  9971  27EB  3000               	addwfc	(fputs@i+1),f
  9972  27EC  3DAE               	goto	l2961
  9973  27ED  2FEE               	line	17
  9974                           	
  9975                           l1048:	
  9976  27EE                     	line	14
  9977                           	
  9978                           l2961:	
  9979  27EE                     	movf	(fputs@i),w
  9980  27EE  082D               	addwf	(fputs@s),w
  9981  27EF  072F               	movwf	(??_fputs+0)+0
  9982  27F0  00A9               	movf	0+(??_fputs+0)+0,w
  9983  27F1  0829               	movwf	fsr1l
  9984  27F2  0086               	movlw 2	; select bank4/5
  9985  27F3  3002               	movwf fsr1h	
  9986  27F4  0087               	
  9987                           	movf	indf1,w
  9988  27F5  0801               	movwf	(??_fputs+1)+0
  9989  27F6  00AA               	movf	(??_fputs+1)+0,w
  9990  27F7  082A               	movwf	(fputs@c)
  9991  27F8  00AC               	movf	(((fputs@c))),w
  9992  27F9  082C               	btfss	status,2
  9993  27FA  1D03               	goto	u3391
  9994  27FB  2FFD               	goto	u3390
  9995  27FC  2FFE               u3391:
  9996  27FD                     	goto	l2957
  9997  27FD  2FDA               u3390:
  9998  27FE                     	goto	l1051
  9999  27FE  2FFF               	
 10000                           l1050:	
 10001  27FF                     	line	19
 10002                           ;	Return value of _fputs is never used
 10003                           	
 10004                           l1051:	
 10005  27FF                     	return
 10006  27FF  0008               	opt stack 0
 10007                           GLOBAL	__end_of_fputs
 10008                           	__end_of_fputs:
 10009  2800                     	signat	_fputs,8314
 10010                           	global	_fputc
 10011                           
 10012 ;; *************** function _fputc *****************
 10013 ;; Defined at:
 10014 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
 10015 ;; Parameters:    Size  Location     Type
 10016 ;;  c               2    0[BANK0 ] int 
 10017 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
 10018 ;;		 -> sprintf@f(5), 
 10019 ;; Auto vars:     Size  Location     Type
 10020 ;;		None
 10021 ;; Return value:  Size  Location     Type
 10022 ;;                  2    0[BANK0 ] int 
 10023 ;; Registers used:
 10024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10025 ;; Tracked objects:
 10026 ;;		On entry : 0/0
 10027 ;;		On exit  : 0/0
 10028 ;;		Unchanged: 0/0
 10029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10030 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10032 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10033 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10034 ;;Total ram usage:        8 bytes
 10035 ;; Hardware stack levels used:    1
 10036 ;; Hardware stack levels required when called:    4
 10037 ;; This function calls:
 10038 ;;		_putch
 10039 ;; This function is called by:
 10040 ;;		_pad
 10041 ;;		_vfpfcnvrt
 10042 ;;		_fputs
 10043 ;; This function uses a non-reentrant model
 10044 ;;
 10045                           psect	text14,local,class=CODE,delta=2,merge=1,group=2
 10046                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
 10047                           	line	8
 10048                           global __ptext14
 10049                           __ptext14:	;psect for function _fputc
 10050  1BAB                     psect	text14
 10051                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
 10052                           	line	8
 10053                           	global	__size_of_fputc
 10054                           	__size_of_fputc	equ	__end_of_fputc-_fputc
 10055  005E                     	
 10056                           _fputc:	
 10057  1BAB                     ;incstack = 0
 10058                           	opt	stack 7
 10059                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10060                           	line	12
 10061                           	
 10062                           l2933:	
 10063  1BAB                     	movlb 0	; select bank0
 10064  1BAB  0140               	movf	((fputc@fp)),w
 10065  1BAC  0822               	btfsc	status,2
 10066  1BAD  1903               	goto	u3351
 10067  1BAE  2BB0               	goto	u3350
 10068  1BAF  2BB1               u3351:
 10069  1BB0                     	goto	l2937
 10070  1BB0  2BB7               u3350:
 10071  1BB1                     	
 10072                           l2935:	
 10073  1BB1                     	movf	((fputc@fp)),w
 10074  1BB1  0822               	btfss	status,2
 10075  1BB2  1D03               	goto	u3361
 10076  1BB3  2BB5               	goto	u3360
 10077  1BB4  2BB6               u3361:
 10078  1BB5                     	goto	l2939
 10079  1BB5  2BBC               u3360:
 10080  1BB6                     	goto	l2937
 10081  1BB6  2BB7               	
 10082                           l1038:	
 10083  1BB7                     	line	13
 10084                           	
 10085                           l2937:	
 10086  1BB7                     	movf	(fputc@c),w
 10087  1BB7  0820               	fcall	_putch
 10088  1BB8  3180  2003  319B   	line	14
 10089                           	goto	l1043
 10090  1BBB  2C08               	
 10091                           l1036:	
 10092  1BBC                     	line	15
 10093                           	
 10094                           l2939:	
 10095  1BBC                     	movlb 0	; select bank0
 10096  1BBC  0140               	movf	(fputc@fp),w
 10097  1BBD  0822               	addlw	03h
 10098  1BBE  3E03               	movwf	fsr1l
 10099  1BBF  0086               	movlw 1	; select bank2/3
 10100  1BC0  3001               	movwf fsr1h	
 10101  1BC1  0087               	
 10102                           		moviw	fsr1++
 10103  1BC2  0016               	iorwf	indf1,w
 10104  1BC3  0401               	btfsc	status,2
 10105  1BC4  1903               	goto	u3371
 10106  1BC5  2BC7               	goto	u3370
 10107  1BC6  2BC8               
 10108                           u3371:
 10109  1BC7                     	goto	l2943
 10110  1BC7  2BE8               u3370:
 10111  1BC8                     	
 10112                           l2941:	
 10113  1BC8                     	movf	(fputc@fp),w
 10114  1BC8  0822               	addlw	03h
 10115  1BC9  3E03               	movwf	fsr1l
 10116  1BCA  0086               	movlw 1	; select bank2/3
 10117  1BCB  3001               	movwf fsr1h	
 10118  1BCC  0087               	
 10119                           	moviw	[0]fsr1
 10120  1BCD  3F40               	movwf	(??_fputc+0)+0
 10121  1BCE  00A3               	moviw	[1]fsr1
 10122  1BCF  3F41               	movwf	(??_fputc+0)+0+1
 10123  1BD0  00A4               	incf	(fputc@fp),w
 10124  1BD1  0A22               	movwf	fsr1l
 10125  1BD2  0086               	movlw 1	; select bank2/3
 10126  1BD3  3001               	movwf fsr1h	
 10127  1BD4  0087               	
 10128                           	moviw	[0]fsr1
 10129  1BD5  3F40               	movwf	(??_fputc+2)+0
 10130  1BD6  00A5               	moviw	[1]fsr1
 10131  1BD7  3F41               	movwf	(??_fputc+2)+0+1
 10132  1BD8  00A6               	movf	1+(??_fputc+2)+0,w
 10133  1BD9  0826               	xorlw	80h
 10134  1BDA  3A80               	movwf	(??_fputc+4)+0
 10135  1BDB  00A7               	movf	1+(??_fputc+0)+0,w
 10136  1BDC  0824               	xorlw	80h
 10137  1BDD  3A80               	subwf	(??_fputc+4)+0,w
 10138  1BDE  0227               	skipz
 10139  1BDF  1D03               	goto	u3385
 10140  1BE0  2BE3               	movf	0+(??_fputc+0)+0,w
 10141  1BE1  0823               	subwf	0+(??_fputc+2)+0,w
 10142  1BE2  0225               u3385:
 10143  1BE3                     
 10144                           	skipnc
 10145  1BE3  1803               	goto	u3381
 10146  1BE4  2BE6               	goto	u3380
 10147  1BE5  2BE7               u3381:
 10148  1BE6                     	goto	l1043
 10149  1BE6  2C08               u3380:
 10150  1BE7                     	goto	l2943
 10151  1BE7  2BE8               	
 10152                           l1042:	
 10153  1BE8                     	line	16
 10154                           	
 10155                           l2943:	
 10156  1BE8                     	movlb 0	; select bank0
 10157  1BE8  0140               	movf	(fputc@c),w
 10158  1BE9  0820               	movwf	(??_fputc+0)+0
 10159  1BEA  00A3               	movf	(fputc@fp),w
 10160  1BEB  0822               	movwf	fsr1l
 10161  1BEC  0086               	movlw 1	; select bank2/3
 10162  1BED  3001               	movwf fsr1h	
 10163  1BEE  0087               	
 10164                           	incf	(fputc@fp),w
 10165  1BEF  0A22               	movwf	fsr0l
 10166  1BF0  0084               	movlw 1	; select bank2/3
 10167  1BF1  3001               	movwf fsr0h	
 10168  1BF2  0085               	
 10169                           	movf	indf0,w
 10170  1BF3  0800               	addwf	indf1,w
 10171  1BF4  0701               	movwf	(??_fputc+1)+0
 10172  1BF5  00A4               	movf	0+(??_fputc+1)+0,w
 10173  1BF6  0824               	movwf	fsr1l
 10174  1BF7  0086               	movlw 1	; select bank2/3
 10175  1BF8  3001               	movwf fsr1h	
 10176  1BF9  0087               	
 10177                           	movf	(??_fputc+0)+0,w
 10178  1BFA  0823               	movwf	indf1
 10179  1BFB  0081               	line	17
 10180                           	
 10181                           l2945:	
 10182  1BFC                     	incf	(fputc@fp),w
 10183  1BFC  0A22               	movwf	fsr1l
 10184  1BFD  0086               	movlw 1	; select bank2/3
 10185  1BFE  3001               	movwf fsr1h	
 10186  1BFF  0087               	
 10187                           	movlw	01h
 10188  1C00  3001               	addwf	indf1,f
 10189  1C01  0781               	addfsr	fsr1,1
 10190  1C02  3141               	skipnc
 10191  1C03  1803               	incf	indf1,f
 10192  1C04  0A81               	goto	l1043
 10193  1C05  2C08               	line	18
 10194                           	
 10195                           l1040:	
 10196  1C06                     	goto	l1043
 10197  1C06  2C08               	line	19
 10198                           	
 10199                           l1039:	
 10200  1C07                     	goto	l1043
 10201  1C07  2C08               	line	20
 10202                           	
 10203                           l2947:	
 10204  1C08                     	line	21
 10205                           ;	Return value of _fputc is never used
 10206                           	
 10207                           l1043:	
 10208  1C08                     	return
 10209  1C08  0008               	opt stack 0
 10210                           GLOBAL	__end_of_fputc
 10211                           	__end_of_fputc:
 10212  1C09                     	signat	_fputc,8314
 10213                           	global	_putch
 10214                           
 10215 ;; *************** function _putch *****************
 10216 ;; Defined at:
 10217 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
 10218 ;; Parameters:    Size  Location     Type
 10219 ;;  c               1    wreg     unsigned char 
 10220 ;; Auto vars:     Size  Location     Type
 10221 ;;  c               1    0[COMMON] unsigned char 
 10222 ;; Return value:  Size  Location     Type
 10223 ;;                  1    wreg      void 
 10224 ;; Registers used:
 10225 ;;		wreg
 10226 ;; Tracked objects:
 10227 ;;		On entry : 0/0
 10228 ;;		On exit  : 0/0
 10229 ;;		Unchanged: 0/0
 10230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10235 ;;Total ram usage:        0 bytes
 10236 ;; Hardware stack levels used:    1
 10237 ;; Hardware stack levels required when called:    3
 10238 ;; This function calls:
 10239 ;;		Nothing
 10240 ;; This function is called by:
 10241 ;;		_fputc
 10242 ;; This function uses a non-reentrant model
 10243 ;;
 10244                           psect	text15,local,class=CODE,delta=2,merge=1,group=2
 10245                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
 10246                           	line	7
 10247                           global __ptext15
 10248                           __ptext15:	;psect for function _putch
 10249  0003                     psect	text15
 10250                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
 10251                           	line	7
 10252                           	global	__size_of_putch
 10253                           	__size_of_putch	equ	__end_of_putch-_putch
 10254  0001                     	
 10255                           _putch:	
 10256  0003                     ;incstack = 0
 10257                           	opt	stack 7
 10258                           ; Regs used in _putch: [wreg]
 10259                           	line	9
 10260                           	
 10261                           l1061:	
 10262  0003                     	return
 10263  0003  0008               	opt stack 0
 10264                           GLOBAL	__end_of_putch
 10265                           	__end_of_putch:
 10266  0004                     	signat	_putch,4217
 10267                           	global	_floorf
 10268                           
 10269 ;; *************** function _floorf *****************
 10270 ;; Defined at:
 10271 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\floorf.c"
 10272 ;; Parameters:    Size  Location     Type
 10273 ;;  x               4   66[BANK0 ] float 
 10274 ;; Auto vars:     Size  Location     Type
 10275 ;;  u               4    6[BANK1 ] struct .
 10276 ;;  m               4    0[BANK1 ] unsigned long 
 10277 ;;  e               2    4[BANK1 ] int 
 10278 ;; Return value:  Size  Location     Type
 10279 ;;                  4   66[BANK0 ] float 
 10280 ;; Registers used:
 10281 ;;		wreg, status,2, status,0
 10282 ;; Tracked objects:
 10283 ;;		On entry : 0/0
 10284 ;;		On exit  : 0/0
 10285 ;;		Unchanged: 0/0
 10286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10287 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10288 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10289 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10290 ;;      Totals:         0      10      10       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10291 ;;Total ram usage:       20 bytes
 10292 ;; Hardware stack levels used:    1
 10293 ;; Hardware stack levels required when called:    3
 10294 ;; This function calls:
 10295 ;;		Nothing
 10296 ;; This function is called by:
 10297 ;;		_efgtoa
 10298 ;; This function uses a non-reentrant model
 10299 ;;
 10300                           psect	text16,local,class=CODE,delta=2,merge=1,group=2
 10301                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\floorf.c"
 10302                           	line	3
 10303                           global __ptext16
 10304                           __ptext16:	;psect for function _floorf
 10305  1450                     psect	text16
 10306                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\floorf.c"
 10307                           	line	3
 10308                           	global	__size_of_floorf
 10309                           	__size_of_floorf	equ	__end_of_floorf-_floorf
 10310  0145                     	
 10311                           _floorf:	
 10312  1450                     ;incstack = 0
 10313                           	opt	stack 7
 10314                           ; Regs used in _floorf: [wreg+status,2+status,0]
 10315                           	line	5
 10316                           	
 10317                           l3251:	
 10318  1450                     	movlb 4	; select bank4
 10319  1450  0144               	movf	(floorf@F514+3)^0200h,w
 10320  1451  0823               	movlb 1	; select bank1
 10321  1452  0141               	movwf	(floorf@u+3)^080h
 10322  1453  00A9               	movlb 4	; select bank4
 10323  1454  0144               	movf	(floorf@F514+2)^0200h,w
 10324  1455  0822               	movlb 1	; select bank1
 10325  1456  0141               	movwf	(floorf@u+2)^080h
 10326  1457  00A8               	movlb 4	; select bank4
 10327  1458  0144               	movf	(floorf@F514+1)^0200h,w
 10328  1459  0821               	movlb 1	; select bank1
 10329  145A  0141               	movwf	(floorf@u+1)^080h
 10330  145B  00A7               	movlb 4	; select bank4
 10331  145C  0144               	movf	(floorf@F514)^0200h,w
 10332  145D  0820               	movlb 1	; select bank1
 10333  145E  0141               	movwf	(floorf@u)^080h
 10334  145F  00A6               
 10335                           	movlb 0	; select bank0
 10336  1460  0140               	movf	(floorf@x+3),w
 10337  1461  0865               	movlb 1	; select bank1
 10338  1462  0141               	movwf	(floorf@u+3)^080h
 10339  1463  00A9               	movlb 0	; select bank0
 10340  1464  0140               	movf	(floorf@x+2),w
 10341  1465  0864               	movlb 1	; select bank1
 10342  1466  0141               	movwf	(floorf@u+2)^080h
 10343  1467  00A8               	movlb 0	; select bank0
 10344  1468  0140               	movf	(floorf@x+1),w
 10345  1469  0863               	movlb 1	; select bank1
 10346  146A  0141               	movwf	(floorf@u+1)^080h
 10347  146B  00A7               	movlb 0	; select bank0
 10348  146C  0140               	movf	(floorf@x),w
 10349  146D  0862               	movlb 1	; select bank1
 10350  146E  0141               	movwf	(floorf@u)^080h
 10351  146F  00A6               
 10352                           	line	6
 10353                           	
 10354                           l3253:	
 10355  1470                     	movf	(floorf@u)^080h,w
 10356  1470  0826               	movlb 0	; select bank0
 10357  1471  0140               	movwf	(??_floorf+0)+0
 10358  1472  00E6               	movlb 1	; select bank1
 10359  1473  0141               	movf	(floorf@u+1)^080h,w
 10360  1474  0827               	movlb 0	; select bank0
 10361  1475  0140               	movwf	((??_floorf+0)+0+1)
 10362  1476  00E7               	movlb 1	; select bank1
 10363  1477  0141               	movf	(floorf@u+2)^080h,w
 10364  1478  0828               	movlb 0	; select bank0
 10365  1479  0140               	movwf	((??_floorf+0)+0+2)
 10366  147A  00E8               	movlb 1	; select bank1
 10367  147B  0141               	movf	(floorf@u+3)^080h,w
 10368  147C  0829               	movlb 0	; select bank0
 10369  147D  0140               	movwf	((??_floorf+0)+0+3)
 10370  147E  00E9               	movlw	017h
 10371  147F  3017               u4085:
 10372  1480                     	lsrf	(??_floorf+0)+3,f
 10373  1480  36E9               	rrf	(??_floorf+0)+2,f
 10374  1481  0CE8               	rrf	(??_floorf+0)+1,f
 10375  1482  0CE7               	rrf	(??_floorf+0)+0,f
 10376  1483  0CE6               u4080:
 10377  1484                     	decfsz	wreg,f
 10378  1484  0B89               	goto	u4085
 10379  1485  2C80               	movlw	0FFh
 10380  1486  30FF               	andwf	0+(??_floorf+0)+0,w
 10381  1487  0566               	movwf	(??_floorf+4)+0
 10382  1488  00EA               	movlw	0
 10383  1489  3000               	andwf	1+(??_floorf+0)+0,w
 10384  148A  0567               	movwf	1+(??_floorf+4)+0
 10385  148B  00EB               	movf	0+(??_floorf+4)+0,w
 10386  148C  086A               	addlw	081h
 10387  148D  3E81               	movlb 1	; select bank1
 10388  148E  0141               	movwf	(floorf@e)^080h
 10389  148F  00A4               	movlw	0FFh
 10390  1490  30FF               	movlb 0	; select bank0
 10391  1491  0140               	addwfc	1+(??_floorf+4)+0,w
 10392  1492  3D6B               	movlb 1	; select bank1
 10393  1493  0141               	movwf	1+(floorf@e)^080h
 10394  1494  00A5               	line	9
 10395                           	
 10396                           l3255:	
 10397  1495                     	movf	(floorf@e+1)^080h,w
 10398  1495  0825               	xorlw	80h
 10399  1496  3A80               	movlb 0	; select bank0
 10400  1497  0140               	movwf	(??_floorf+0)+0
 10401  1498  00E6               	movlw	(0)^80h
 10402  1499  3080               	subwf	(??_floorf+0)+0,w
 10403  149A  0266               	skipz
 10404  149B  1D03               	goto	u4095
 10405  149C  2CA0               	movlw	017h
 10406  149D  3017               	movlb 1	; select bank1
 10407  149E  0141               	subwf	(floorf@e)^080h,w
 10408  149F  0224               u4095:
 10409  14A0                     
 10410                           	skipc
 10411  14A0  1C03               	goto	u4091
 10412  14A1  2CA3               	goto	u4090
 10413  14A2  2CA4               u4091:
 10414  14A3                     	goto	l1003
 10415  14A3  2CA5               u4090:
 10416  14A4                     	line	10
 10417                           	
 10418                           l3257:	
 10419  14A4                     	goto	l1004
 10420  14A4  2D94               	
 10421                           l1003:	
 10422  14A5                     	line	11
 10423                           	movlb 1	; select bank1
 10424  14A5  0141               	btfsc	(floorf@e+1)^080h,7
 10425  14A6  1BA5               	goto	u4101
 10426  14A7  2CA9               	goto	u4100
 10427  14A8  2CAA               u4101:
 10428  14A9                     	goto	l3271
 10429  14A9  2D31               u4100:
 10430  14AA                     	line	12
 10431                           	
 10432                           l3259:	
 10433  14AA                     	movlw	0FFh
 10434  14AA  30FF               	movlb 0	; select bank0
 10435  14AB  0140               	movwf	((??_floorf+0)+0)
 10436  14AC  00E6               	movlw	0FFh
 10437  14AD  30FF               	movwf	((??_floorf+0)+0+1)
 10438  14AE  00E7               	movlw	07Fh
 10439  14AF  307F               	movwf	((??_floorf+0)+0+2)
 10440  14B0  00E8               	movlw	0
 10441  14B1  3000               	movwf	((??_floorf+0)+0+3)
 10442  14B2  00E9               	movlb 1	; select bank1
 10443  14B3  0141               	incf	(floorf@e)^080h,w
 10444  14B4  0A24               	movlb 0	; select bank0
 10445  14B5  0140               	goto	u4110
 10446  14B6  2CBB               u4115:
 10447  14B7                     	asrf	(??_floorf+0)+3,f
 10448  14B7  37E9               	rrf	(??_floorf+0)+2,f
 10449  14B8  0CE8               	rrf	(??_floorf+0)+1,f
 10450  14B9  0CE7               	rrf	(??_floorf+0)+0,f
 10451  14BA  0CE6               u4110:
 10452  14BB                     	decfsz	wreg,f
 10453  14BB  0B89               	goto	u4115
 10454  14BC  2CB7               	movf	3+(??_floorf+0)+0,w
 10455  14BD  0869               	movlb 1	; select bank1
 10456  14BE  0141               	movwf	(floorf@m+3)^080h
 10457  14BF  00A3               	movlb 0	; select bank0
 10458  14C0  0140               	movf	2+(??_floorf+0)+0,w
 10459  14C1  0868               	movlb 1	; select bank1
 10460  14C2  0141               	movwf	(floorf@m+2)^080h
 10461  14C3  00A2               	movlb 0	; select bank0
 10462  14C4  0140               	movf	1+(??_floorf+0)+0,w
 10463  14C5  0867               	movlb 1	; select bank1
 10464  14C6  0141               	movwf	(floorf@m+1)^080h
 10465  14C7  00A1               	movlb 0	; select bank0
 10466  14C8  0140               	movf	0+(??_floorf+0)+0,w
 10467  14C9  0866               	movlb 1	; select bank1
 10468  14CA  0141               	movwf	(floorf@m)^080h
 10469  14CB  00A0               
 10470                           	line	13
 10471                           	
 10472                           l3261:	
 10473  14CC                     	movf	(floorf@u)^080h,w
 10474  14CC  0826               	andwf	(floorf@m)^080h,w
 10475  14CD  0520               	movlb 0	; select bank0
 10476  14CE  0140               	movwf	((??_floorf+0)+0+0)
 10477  14CF  00E6               	movlb 1	; select bank1
 10478  14D0  0141               	movf	(floorf@u+1)^080h,w
 10479  14D1  0827               	andwf	(floorf@m+1)^080h,w
 10480  14D2  0521               	movlb 0	; select bank0
 10481  14D3  0140               	movwf	((??_floorf+0)+0+1)
 10482  14D4  00E7               	movlb 1	; select bank1
 10483  14D5  0141               	movf	(floorf@u+2)^080h,w
 10484  14D6  0828               	andwf	(floorf@m+2)^080h,w
 10485  14D7  0522               	movlb 0	; select bank0
 10486  14D8  0140               	movwf	((??_floorf+0)+0+2)
 10487  14D9  00E8               	movlb 1	; select bank1
 10488  14DA  0141               	movf	(floorf@u+3)^080h,w
 10489  14DB  0829               	andwf	(floorf@m+3)^080h,w
 10490  14DC  0523               	movlb 0	; select bank0
 10491  14DD  0140               	movwf	((??_floorf+0)+0+3)
 10492  14DE  00E9               	movf	3+(??_floorf+0)+0,w
 10493  14DF  0869               	iorwf	2+(??_floorf+0)+0,w
 10494  14E0  0468               	iorwf	1+(??_floorf+0)+0,w
 10495  14E1  0467               	iorwf	0+(??_floorf+0)+0,w
 10496  14E2  0466               	skipz
 10497  14E3  1D03               	goto	u4121
 10498  14E4  2CE6               	goto	u4120
 10499  14E5  2CE7               u4121:
 10500  14E6                     	goto	l3265
 10501  14E6  2CE8               u4120:
 10502  14E7                     	line	14
 10503                           	
 10504                           l3263:	
 10505  14E7                     	goto	l1004
 10506  14E7  2D94               	
 10507                           l1006:	
 10508  14E8                     	line	16
 10509                           	
 10510                           l3265:	
 10511  14E8                     	movlb 1	; select bank1
 10512  14E8  0141               	movf	(floorf@u)^080h,w
 10513  14E9  0826               	movlb 0	; select bank0
 10514  14EA  0140               	movwf	(??_floorf+0)+0
 10515  14EB  00E6               	movlb 1	; select bank1
 10516  14EC  0141               	movf	(floorf@u+1)^080h,w
 10517  14ED  0827               	movlb 0	; select bank0
 10518  14EE  0140               	movwf	((??_floorf+0)+0+1)
 10519  14EF  00E7               	movlb 1	; select bank1
 10520  14F0  0141               	movf	(floorf@u+2)^080h,w
 10521  14F1  0828               	movlb 0	; select bank0
 10522  14F2  0140               	movwf	((??_floorf+0)+0+2)
 10523  14F3  00E8               	movlb 1	; select bank1
 10524  14F4  0141               	movf	(floorf@u+3)^080h,w
 10525  14F5  0829               	movlb 0	; select bank0
 10526  14F6  0140               	movwf	((??_floorf+0)+0+3)
 10527  14F7  00E9               	movlw	01Fh
 10528  14F8  301F               u4135:
 10529  14F9                     	lsrf	(??_floorf+0)+3,f
 10530  14F9  36E9               	rrf	(??_floorf+0)+2,f
 10531  14FA  0CE8               	rrf	(??_floorf+0)+1,f
 10532  14FB  0CE7               	rrf	(??_floorf+0)+0,f
 10533  14FC  0CE6               u4130:
 10534  14FD                     	decfsz	wreg,f
 10535  14FD  0B89               	goto	u4135
 10536  14FE  2CF9               	movf	3+(??_floorf+0)+0,w
 10537  14FF  0869               	iorwf	2+(??_floorf+0)+0,w
 10538  1500  0468               	iorwf	1+(??_floorf+0)+0,w
 10539  1501  0467               	iorwf	0+(??_floorf+0)+0,w
 10540  1502  0466               	skipnz
 10541  1503  1903               	goto	u4141
 10542  1504  2D06               	goto	u4140
 10543  1505  2D07               u4141:
 10544  1506                     	goto	l3269
 10545  1506  2D11               u4140:
 10546  1507                     	line	17
 10547                           	
 10548                           l3267:	
 10549  1507                     	movlb 1	; select bank1
 10550  1507  0141               	movf	(floorf@m)^080h,w
 10551  1508  0820               	addwf	(floorf@u)^080h,f
 10552  1509  07A6               	movf	(floorf@m+1)^080h,w
 10553  150A  0821               	addwfc	(floorf@u+1)^080h,f
 10554  150B  3DA7               	movf	(floorf@m+2)^080h,w
 10555  150C  0822               	addwfc	(floorf@u+2)^080h,f
 10556  150D  3DA8               	movf	(floorf@m+3)^080h,w
 10557  150E  0823               	addwfc	(floorf@u+3)^080h,f
 10558  150F  3DA9               	goto	l3269
 10559  1510  2D11               	
 10560                           l1007:	
 10561  1511                     	line	18
 10562                           	
 10563                           l3269:	
 10564  1511                     	movlb 1	; select bank1
 10565  1511  0141               	comf	(floorf@m)^080h,w
 10566  1512  0920               	movlb 0	; select bank0
 10567  1513  0140               	movwf	(??_floorf+0)+0
 10568  1514  00E6               	movlb 1	; select bank1
 10569  1515  0141               	comf	(floorf@m+1)^080h,w
 10570  1516  0921               	movlb 0	; select bank0
 10571  1517  0140               	movwf	((??_floorf+0)+0+1)
 10572  1518  00E7               	movlb 1	; select bank1
 10573  1519  0141               	comf	(floorf@m+2)^080h,w
 10574  151A  0922               	movlb 0	; select bank0
 10575  151B  0140               	movwf	((??_floorf+0)+0+2)
 10576  151C  00E8               	movlb 1	; select bank1
 10577  151D  0141               	comf	(floorf@m+3)^080h,w
 10578  151E  0923               	movlb 0	; select bank0
 10579  151F  0140               	movwf	((??_floorf+0)+0+3)
 10580  1520  00E9               
 10581                           	movf	0+(??_floorf+0)+0,w
 10582  1521  0866               	movlb 1	; select bank1
 10583  1522  0141               	andwf	(floorf@u)^080h,f
 10584  1523  05A6               	movlb 0	; select bank0
 10585  1524  0140               	movf	1+(??_floorf+0)+0,w
 10586  1525  0867               	movlb 1	; select bank1
 10587  1526  0141               	andwf	(floorf@u+1)^080h,f
 10588  1527  05A7               	movlb 0	; select bank0
 10589  1528  0140               	movf	2+(??_floorf+0)+0,w
 10590  1529  0868               	movlb 1	; select bank1
 10591  152A  0141               	andwf	(floorf@u+2)^080h,f
 10592  152B  05A8               	movlb 0	; select bank0
 10593  152C  0140               	movf	3+(??_floorf+0)+0,w
 10594  152D  0869               	movlb 1	; select bank1
 10595  152E  0141               	andwf	(floorf@u+3)^080h,f
 10596  152F  05A9               	line	19
 10597                           	goto	l1008
 10598  1530  2D83               	
 10599                           l1005:	
 10600  1531                     	line	21
 10601                           	
 10602                           l3271:	
 10603  1531                     	movf	(floorf@u)^080h,w
 10604  1531  0826               	movlb 0	; select bank0
 10605  1532  0140               	movwf	(??_floorf+0)+0
 10606  1533  00E6               	movlb 1	; select bank1
 10607  1534  0141               	movf	(floorf@u+1)^080h,w
 10608  1535  0827               	movlb 0	; select bank0
 10609  1536  0140               	movwf	((??_floorf+0)+0+1)
 10610  1537  00E7               	movlb 1	; select bank1
 10611  1538  0141               	movf	(floorf@u+2)^080h,w
 10612  1539  0828               	movlb 0	; select bank0
 10613  153A  0140               	movwf	((??_floorf+0)+0+2)
 10614  153B  00E8               	movlb 1	; select bank1
 10615  153C  0141               	movf	(floorf@u+3)^080h,w
 10616  153D  0829               	movlb 0	; select bank0
 10617  153E  0140               	movwf	((??_floorf+0)+0+3)
 10618  153F  00E9               	movlw	01Fh
 10619  1540  301F               u4155:
 10620  1541                     	lsrf	(??_floorf+0)+3,f
 10621  1541  36E9               	rrf	(??_floorf+0)+2,f
 10622  1542  0CE8               	rrf	(??_floorf+0)+1,f
 10623  1543  0CE7               	rrf	(??_floorf+0)+0,f
 10624  1544  0CE6               u4150:
 10625  1545                     	decfsz	wreg,f
 10626  1545  0B89               	goto	u4155
 10627  1546  2D41               	movf	3+(??_floorf+0)+0,w
 10628  1547  0869               	iorwf	2+(??_floorf+0)+0,w
 10629  1548  0468               	iorwf	1+(??_floorf+0)+0,w
 10630  1549  0467               	iorwf	0+(??_floorf+0)+0,w
 10631  154A  0466               	skipz
 10632  154B  1D03               	goto	u4161
 10633  154C  2D4E               	goto	u4160
 10634  154D  2D4F               u4161:
 10635  154E                     	goto	l3275
 10636  154E  2D59               u4160:
 10637  154F                     	line	22
 10638                           	
 10639                           l3273:	
 10640  154F                     	movlw	high highword(0)
 10641  154F  3000               	movlb 1	; select bank1
 10642  1550  0141               	movwf	(floorf@u+3)^080h
 10643  1551  00A9               	movlw	low highword(0)
 10644  1552  3000               	movwf	(floorf@u+2)^080h
 10645  1553  00A8               	movlw	high(0)
 10646  1554  3000               	movwf	(floorf@u+1)^080h
 10647  1555  00A7               	movlw	low(0)
 10648  1556  3000               	movwf	(floorf@u)^080h
 10649  1557  00A6               
 10650                           	goto	l1008
 10651  1558  2D83               	line	23
 10652                           	
 10653                           l1009:	
 10654  1559                     	
 10655                           l3275:	
 10656  1559                     	movlb 1	; select bank1
 10657  1559  0141               	movf	(floorf@u)^080h,w
 10658  155A  0826               	movlb 0	; select bank0
 10659  155B  0140               	movwf	(??_floorf+0)+0
 10660  155C  00E6               	movlb 1	; select bank1
 10661  155D  0141               	movf	(floorf@u+1)^080h,w
 10662  155E  0827               	movlb 0	; select bank0
 10663  155F  0140               	movwf	((??_floorf+0)+0+1)
 10664  1560  00E7               	movlb 1	; select bank1
 10665  1561  0141               	movf	(floorf@u+2)^080h,w
 10666  1562  0828               	movlb 0	; select bank0
 10667  1563  0140               	movwf	((??_floorf+0)+0+2)
 10668  1564  00E8               	movlb 1	; select bank1
 10669  1565  0141               	movf	(floorf@u+3)^080h,w
 10670  1566  0829               	movlb 0	; select bank0
 10671  1567  0140               	movwf	((??_floorf+0)+0+3)
 10672  1568  00E9               	movlw	01h
 10673  1569  3001               u4175:
 10674  156A                     	lslf	(??_floorf+0)+0,f
 10675  156A  35E6               	rlf	(??_floorf+0)+1,f
 10676  156B  0DE7               	rlf	(??_floorf+0)+2,f
 10677  156C  0DE8               	rlf	(??_floorf+0)+3,f
 10678  156D  0DE9               u4170:
 10679  156E                     	decfsz	wreg,f
 10680  156E  0B89               	goto	u4175
 10681  156F  2D6A               	movf	3+(??_floorf+0)+0,w
 10682  1570  0869               	iorwf	2+(??_floorf+0)+0,w
 10683  1571  0468               	iorwf	1+(??_floorf+0)+0,w
 10684  1572  0467               	iorwf	0+(??_floorf+0)+0,w
 10685  1573  0466               	skipnz
 10686  1574  1903               	goto	u4181
 10687  1575  2D77               	goto	u4180
 10688  1576  2D78               u4181:
 10689  1577                     	goto	l1008
 10690  1577  2D83               u4180:
 10691  1578                     	line	24
 10692                           	
 10693                           l3277:	
 10694  1578                     	movlw	0xbf
 10695  1578  30BF               	movlb 1	; select bank1
 10696  1579  0141               	movwf	(floorf@u+3)^080h
 10697  157A  00A9               	movlw	0x80
 10698  157B  3080               	movwf	(floorf@u+2)^080h
 10699  157C  00A8               	movlw	0x0
 10700  157D  3000               	movwf	(floorf@u+1)^080h
 10701  157E  00A7               	movlw	0x0
 10702  157F  3000               	movwf	(floorf@u)^080h
 10703  1580  00A6               
 10704                           	goto	l1008
 10705  1581  2D83               	
 10706                           l1011:	
 10707  1582                     	goto	l1008
 10708  1582  2D83               	
 10709                           l1010:	
 10710  1583                     	line	25
 10711                           	
 10712                           l1008:	
 10713  1583                     	line	26
 10714                           	movlb 1	; select bank1
 10715  1583  0141               	movf	(floorf@u+3)^080h,w
 10716  1584  0829               	movlb 0	; select bank0
 10717  1585  0140               	movwf	(?_floorf+3)
 10718  1586  00E5               	movlb 1	; select bank1
 10719  1587  0141               	movf	(floorf@u+2)^080h,w
 10720  1588  0828               	movlb 0	; select bank0
 10721  1589  0140               	movwf	(?_floorf+2)
 10722  158A  00E4               	movlb 1	; select bank1
 10723  158B  0141               	movf	(floorf@u+1)^080h,w
 10724  158C  0827               	movlb 0	; select bank0
 10725  158D  0140               	movwf	(?_floorf+1)
 10726  158E  00E3               	movlb 1	; select bank1
 10727  158F  0141               	movf	(floorf@u)^080h,w
 10728  1590  0826               	movlb 0	; select bank0
 10729  1591  0140               	movwf	(?_floorf)
 10730  1592  00E2               
 10731                           	goto	l1004
 10732  1593  2D94               	
 10733                           l3279:	
 10734  1594                     	line	27
 10735                           	
 10736                           l1004:	
 10737  1594                     	return
 10738  1594  0008               	opt stack 0
 10739                           GLOBAL	__end_of_floorf
 10740                           	__end_of_floorf:
 10741  1595                     	signat	_floorf,4220
 10742                           	global	___fpclassifyf
 10743                           
 10744 ;; *************** function ___fpclassifyf *****************
 10745 ;; Defined at:
 10746 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__fpclassifyf.c"
 10747 ;; Parameters:    Size  Location     Type
 10748 ;;  x               4    0[BANK0 ] float 
 10749 ;; Auto vars:     Size  Location     Type
 10750 ;;  u               4   12[BANK0 ] struct .
 10751 ;;  e               2   10[BANK0 ] int 
 10752 ;; Return value:  Size  Location     Type
 10753 ;;                  2    0[BANK0 ] int 
 10754 ;; Registers used:
 10755 ;;		wreg, status,2, status,0
 10756 ;; Tracked objects:
 10757 ;;		On entry : 0/0
 10758 ;;		On exit  : 0/0
 10759 ;;		Unchanged: 0/0
 10760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10761 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10762 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10763 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10764 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10765 ;;Total ram usage:       16 bytes
 10766 ;; Hardware stack levels used:    1
 10767 ;; Hardware stack levels required when called:    3
 10768 ;; This function calls:
 10769 ;;		Nothing
 10770 ;; This function is called by:
 10771 ;;		_efgtoa
 10772 ;; This function uses a non-reentrant model
 10773 ;;
 10774                           psect	text17,local,class=CODE,delta=2,merge=1,group=2
 10775                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__fpclassifyf.c
                                 "
 10776                           	line	4
 10777                           global __ptext17
 10778                           __ptext17:	;psect for function ___fpclassifyf
 10779  1CDE                     psect	text17
 10780                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__fpclassifyf.c
                                 "
 10781                           	line	4
 10782                           	global	__size_of___fpclassifyf
 10783                           	__size_of___fpclassifyf	equ	__end_of___fpclassifyf-___fpclassifyf
 10784  0083                     	
 10785                           ___fpclassifyf:	
 10786  1CDE                     ;incstack = 0
 10787                           	opt	stack 7
 10788                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
 10789                           	line	6
 10790                           	
 10791                           l3213:	
 10792  1CDE                     	movlb 4	; select bank4
 10793  1CDE  0144               	movf	(___fpclassifyf@F453+3)^0200h,w
 10794  1CDF  0827               	movlb 0	; select bank0
 10795  1CE0  0140               	movwf	(___fpclassifyf@u+3)
 10796  1CE1  00AF               	movlb 4	; select bank4
 10797  1CE2  0144               	movf	(___fpclassifyf@F453+2)^0200h,w
 10798  1CE3  0826               	movlb 0	; select bank0
 10799  1CE4  0140               	movwf	(___fpclassifyf@u+2)
 10800  1CE5  00AE               	movlb 4	; select bank4
 10801  1CE6  0144               	movf	(___fpclassifyf@F453+1)^0200h,w
 10802  1CE7  0825               	movlb 0	; select bank0
 10803  1CE8  0140               	movwf	(___fpclassifyf@u+1)
 10804  1CE9  00AD               	movlb 4	; select bank4
 10805  1CEA  0144               	movf	(___fpclassifyf@F453)^0200h,w
 10806  1CEB  0824               	movlb 0	; select bank0
 10807  1CEC  0140               	movwf	(___fpclassifyf@u)
 10808  1CED  00AC               
 10809                           	movf	(___fpclassifyf@x+3),w
 10810  1CEE  0823               	movwf	(___fpclassifyf@u+3)
 10811  1CEF  00AF               	movf	(___fpclassifyf@x+2),w
 10812  1CF0  0822               	movwf	(___fpclassifyf@u+2)
 10813  1CF1  00AE               	movf	(___fpclassifyf@x+1),w
 10814  1CF2  0821               	movwf	(___fpclassifyf@u+1)
 10815  1CF3  00AD               	movf	(___fpclassifyf@x),w
 10816  1CF4  0820               	movwf	(___fpclassifyf@u)
 10817  1CF5  00AC               
 10818                           	line	7
 10819                           	
 10820                           l3215:	
 10821  1CF6                     	movf	(___fpclassifyf@u),w
 10822  1CF6  082C               	movwf	(??___fpclassifyf+0)+0
 10823  1CF7  00A4               	movf	(___fpclassifyf@u+1),w
 10824  1CF8  082D               	movwf	((??___fpclassifyf+0)+0+1)
 10825  1CF9  00A5               	movf	(___fpclassifyf@u+2),w
 10826  1CFA  082E               	movwf	((??___fpclassifyf+0)+0+2)
 10827  1CFB  00A6               	movf	(___fpclassifyf@u+3),w
 10828  1CFC  082F               	movwf	((??___fpclassifyf+0)+0+3)
 10829  1CFD  00A7               	movlw	017h
 10830  1CFE  3017               u3965:
 10831  1CFF                     	lsrf	(??___fpclassifyf+0)+3,f
 10832  1CFF  36A7               	rrf	(??___fpclassifyf+0)+2,f
 10833  1D00  0CA6               	rrf	(??___fpclassifyf+0)+1,f
 10834  1D01  0CA5               	rrf	(??___fpclassifyf+0)+0,f
 10835  1D02  0CA4               u3960:
 10836  1D03                     	decfsz	wreg,f
 10837  1D03  0B89               	goto	u3965
 10838  1D04  2CFF               	movlw	0FFh
 10839  1D05  30FF               	andwf	0+(??___fpclassifyf+0)+0,w
 10840  1D06  0524               	movwf	(___fpclassifyf@e)
 10841  1D07  00AA               	movlw	0
 10842  1D08  3000               	andwf	1+(??___fpclassifyf+0)+0,w
 10843  1D09  0525               	movwf	1+(___fpclassifyf@e)
 10844  1D0A  00AB               	line	8
 10845                           	
 10846                           l3217:	
 10847  1D0B                     	movf	((___fpclassifyf@e)),w
 10848  1D0B  082A               iorwf	((___fpclassifyf@e+1)),w
 10849  1D0C  042B               	btfss	status,2
 10850  1D0D  1D03               	goto	u3971
 10851  1D0E  2D10               	goto	u3970
 10852  1D0F  2D11               u3971:
 10853  1D10                     	goto	l3227
 10854  1D10  2D34               u3970:
 10855  1D11                     	
 10856                           l3219:	
 10857  1D11                     	movf	(___fpclassifyf@u),w
 10858  1D11  082C               	movwf	(??___fpclassifyf+0)+0
 10859  1D12  00A4               	movf	(___fpclassifyf@u+1),w
 10860  1D13  082D               	movwf	((??___fpclassifyf+0)+0+1)
 10861  1D14  00A5               	movf	(___fpclassifyf@u+2),w
 10862  1D15  082E               	movwf	((??___fpclassifyf+0)+0+2)
 10863  1D16  00A6               	movf	(___fpclassifyf@u+3),w
 10864  1D17  082F               	movwf	((??___fpclassifyf+0)+0+3)
 10865  1D18  00A7               	movlw	01h
 10866  1D19  3001               u3985:
 10867  1D1A                     	lslf	(??___fpclassifyf+0)+0,f
 10868  1D1A  35A4               	rlf	(??___fpclassifyf+0)+1,f
 10869  1D1B  0DA5               	rlf	(??___fpclassifyf+0)+2,f
 10870  1D1C  0DA6               	rlf	(??___fpclassifyf+0)+3,f
 10871  1D1D  0DA7               u3980:
 10872  1D1E                     	decfsz	wreg,f
 10873  1D1E  0B89               	goto	u3985
 10874  1D1F  2D1A               	movf	3+(??___fpclassifyf+0)+0,w
 10875  1D20  0827               	iorwf	2+(??___fpclassifyf+0)+0,w
 10876  1D21  0426               	iorwf	1+(??___fpclassifyf+0)+0,w
 10877  1D22  0425               	iorwf	0+(??___fpclassifyf+0)+0,w
 10878  1D23  0424               	skipz
 10879  1D24  1D03               	goto	u3991
 10880  1D25  2D27               	goto	u3990
 10881  1D26  2D28               u3991:
 10882  1D27                     	goto	l3223
 10883  1D27  2D2D               u3990:
 10884  1D28                     	
 10885                           l3221:	
 10886  1D28                     	movlw	02h
 10887  1D28  3002               	movwf	(?___fpclassifyf)
 10888  1D29  00A0               	movlw	0
 10889  1D2A  3000               	movwf	((?___fpclassifyf))+1
 10890  1D2B  00A1               	goto	l966
 10891  1D2C  2D60               	
 10892                           l963:	
 10893  1D2D                     	
 10894                           l3223:	
 10895  1D2D                     	movlw	03h
 10896  1D2D  3003               	movwf	(?___fpclassifyf)
 10897  1D2E  00A0               	movlw	0
 10898  1D2F  3000               	movwf	((?___fpclassifyf))+1
 10899  1D30  00A1               	goto	l966
 10900  1D31  2D60               	
 10901                           l965:	
 10902  1D32                     	goto	l966
 10903  1D32  2D60               	
 10904                           l3225:	
 10905  1D33                     	goto	l966
 10906  1D33  2D60               	
 10907                           l961:	
 10908  1D34                     	line	9
 10909                           	
 10910                           l3227:	
 10911  1D34                     		incf	((___fpclassifyf@e)),w
 10912  1D34  0A2A               iorwf	((___fpclassifyf@e+1)),w
 10913  1D35  042B               	btfss	status,2
 10914  1D36  1D03               	goto	u4001
 10915  1D37  2D39               	goto	u4000
 10916  1D38  2D3A               u4001:
 10917  1D39                     	goto	l3233
 10918  1D39  2D5B               u4000:
 10919  1D3A                     	
 10920                           l3229:	
 10921  1D3A                     	movf	(___fpclassifyf@u),w
 10922  1D3A  082C               	movwf	(??___fpclassifyf+0)+0
 10923  1D3B  00A4               	movf	(___fpclassifyf@u+1),w
 10924  1D3C  082D               	movwf	((??___fpclassifyf+0)+0+1)
 10925  1D3D  00A5               	movf	(___fpclassifyf@u+2),w
 10926  1D3E  082E               	movwf	((??___fpclassifyf+0)+0+2)
 10927  1D3F  00A6               	movf	(___fpclassifyf@u+3),w
 10928  1D40  082F               	movwf	((??___fpclassifyf+0)+0+3)
 10929  1D41  00A7               	movlw	09h
 10930  1D42  3009               u4015:
 10931  1D43                     	lslf	(??___fpclassifyf+0)+0,f
 10932  1D43  35A4               	rlf	(??___fpclassifyf+0)+1,f
 10933  1D44  0DA5               	rlf	(??___fpclassifyf+0)+2,f
 10934  1D45  0DA6               	rlf	(??___fpclassifyf+0)+3,f
 10935  1D46  0DA7               u4010:
 10936  1D47                     	decfsz	wreg,f
 10937  1D47  0B89               	goto	u4015
 10938  1D48  2D43               	movf	3+(??___fpclassifyf+0)+0,w
 10939  1D49  0827               	iorwf	2+(??___fpclassifyf+0)+0,w
 10940  1D4A  0426               	iorwf	1+(??___fpclassifyf+0)+0,w
 10941  1D4B  0425               	iorwf	0+(??___fpclassifyf+0)+0,w
 10942  1D4C  0424               	skipnz
 10943  1D4D  1903               	goto	u4021
 10944  1D4E  2D50               	goto	u4020
 10945  1D4F  2D52               u4021:
 10946  1D50                     	movlw	1
 10947  1D50  3001               	goto	u4030
 10948  1D51  2D53               u4020:
 10949  1D52                     	movlw	0
 10950  1D52  3000               u4030:
 10951  1D53                     	movwf	(??___fpclassifyf+4)+0
 10952  1D53  00A8               	clrf	(??___fpclassifyf+4)+0+1
 10953  1D54  01A9               	movf	0+(??___fpclassifyf+4)+0,w
 10954  1D55  0828               	movwf	(?___fpclassifyf)
 10955  1D56  00A0               	movf	1+(??___fpclassifyf+4)+0,w
 10956  1D57  0829               	movwf	(?___fpclassifyf+1)
 10957  1D58  00A1               	goto	l966
 10958  1D59  2D60               	
 10959                           l3231:	
 10960  1D5A                     	goto	l966
 10961  1D5A  2D60               	
 10962                           l967:	
 10963  1D5B                     	line	10
 10964                           	
 10965                           l3233:	
 10966  1D5B                     	movlw	04h
 10967  1D5B  3004               	movwf	(?___fpclassifyf)
 10968  1D5C  00A0               	movlw	0
 10969  1D5D  3000               	movwf	((?___fpclassifyf))+1
 10970  1D5E  00A1               	goto	l966
 10971  1D5F  2D60               	
 10972                           l3235:	
 10973  1D60                     	line	11
 10974                           	
 10975                           l966:	
 10976  1D60                     	return
 10977  1D60  0008               	opt stack 0
 10978                           GLOBAL	__end_of___fpclassifyf
 10979                           	__end_of___fpclassifyf:
 10980  1D61                     	signat	___fpclassifyf,4218
 10981                           	global	___fltol
 10982                           
 10983 ;; *************** function ___fltol *****************
 10984 ;; Defined at:
 10985 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
 10986 ;; Parameters:    Size  Location     Type
 10987 ;;  f1              4    0[BANK0 ] int 
 10988 ;; Auto vars:     Size  Location     Type
 10989 ;;  exp1            1   10[BANK0 ] unsigned char 
 10990 ;;  sign1           1    9[BANK0 ] unsigned char 
 10991 ;; Return value:  Size  Location     Type
 10992 ;;                  4    0[BANK0 ] long 
 10993 ;; Registers used:
 10994 ;;		wreg, status,2, status,0
 10995 ;; Tracked objects:
 10996 ;;		On entry : 0/0
 10997 ;;		On exit  : 0/0
 10998 ;;		Unchanged: 0/0
 10999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11000 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11001 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11002 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11003 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11004 ;;Total ram usage:       11 bytes
 11005 ;; Hardware stack levels used:    1
 11006 ;; Hardware stack levels required when called:    3
 11007 ;; This function calls:
 11008 ;;		Nothing
 11009 ;; This function is called by:
 11010 ;;		_efgtoa
 11011 ;; This function uses a non-reentrant model
 11012 ;;
 11013                           psect	text18,local,class=CODE,delta=2,merge=1,group=1
 11014                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
 11015                           	line	43
 11016                           global __ptext18
 11017                           __ptext18:	;psect for function ___fltol
 11018  1D61                     psect	text18
 11019                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
 11020                           	line	43
 11021                           	global	__size_of___fltol
 11022                           	__size_of___fltol	equ	__end_of___fltol-___fltol
 11023  0095                     	
 11024                           ___fltol:	
 11025  1D61                     ;incstack = 0
 11026                           	opt	stack 7
 11027                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 11028                           	line	47
 11029                           	
 11030                           l3427:	
 11031  1D61                     	movlb 0	; select bank0
 11032  1D61  0140               	movf	(___fltol@f1),w
 11033  1D62  0820               	movwf	(??___fltol+0)+0
 11034  1D63  00A4               	movf	(___fltol@f1+1),w
 11035  1D64  0821               	movwf	((??___fltol+0)+0+1)
 11036  1D65  00A5               	movf	(___fltol@f1+2),w
 11037  1D66  0822               	movwf	((??___fltol+0)+0+2)
 11038  1D67  00A6               	movf	(___fltol@f1+3),w
 11039  1D68  0823               	movwf	((??___fltol+0)+0+3)
 11040  1D69  00A7               	clrc
 11041  1D6A  1003               	rlf	(??___fltol+0)+2,w
 11042  1D6B  0D26               	rlf	(??___fltol+0)+3,w
 11043  1D6C  0D27               	movwf	(??___fltol+4)+0
 11044  1D6D  00A8               	movf	(??___fltol+4)+0,w
 11045  1D6E  0828               	movwf	(___fltol@exp1)
 11046  1D6F  00AA               	movf	(((___fltol@exp1))),w
 11047  1D70  082A               	btfss	status,2
 11048  1D71  1D03               	goto	u4531
 11049  1D72  2D74               	goto	u4530
 11050  1D73  2D75               u4531:
 11051  1D74                     	goto	l3433
 11052  1D74  2D7F               u4530:
 11053  1D75                     	line	48
 11054                           	
 11055                           l3429:	
 11056  1D75                     	movlw	high highword(0)
 11057  1D75  3000               	movwf	(?___fltol+3)
 11058  1D76  00A3               	movlw	low highword(0)
 11059  1D77  3000               	movwf	(?___fltol+2)
 11060  1D78  00A2               	movlw	high(0)
 11061  1D79  3000               	movwf	(?___fltol+1)
 11062  1D7A  00A1               	movlw	low(0)
 11063  1D7B  3000               	movwf	(?___fltol)
 11064  1D7C  00A0               
 11065                           	goto	l719
 11066  1D7D  2DF5               	
 11067                           l3431:	
 11068  1D7E                     	goto	l719
 11069  1D7E  2DF5               	
 11070                           l718:	
 11071  1D7F                     	line	49
 11072                           	
 11073                           l3433:	
 11074  1D7F                     	movf	(___fltol@f1),w
 11075  1D7F  0820               	movwf	(??___fltol+0)+0
 11076  1D80  00A4               	movf	(___fltol@f1+1),w
 11077  1D81  0821               	movwf	((??___fltol+0)+0+1)
 11078  1D82  00A5               	movf	(___fltol@f1+2),w
 11079  1D83  0822               	movwf	((??___fltol+0)+0+2)
 11080  1D84  00A6               	movf	(___fltol@f1+3),w
 11081  1D85  0823               	movwf	((??___fltol+0)+0+3)
 11082  1D86  00A7               	movlw	01Fh
 11083  1D87  301F               u4545:
 11084  1D88                     	lsrf	(??___fltol+0)+3,f
 11085  1D88  36A7               	rrf	(??___fltol+0)+2,f
 11086  1D89  0CA6               	rrf	(??___fltol+0)+1,f
 11087  1D8A  0CA5               	rrf	(??___fltol+0)+0,f
 11088  1D8B  0CA4               u4540:
 11089  1D8C                     	decfsz	wreg,f
 11090  1D8C  0B89               	goto	u4545
 11091  1D8D  2D88               	movf	0+(??___fltol+0)+0,w
 11092  1D8E  0824               	movwf	(??___fltol+4)+0
 11093  1D8F  00A8               	movf	(??___fltol+4)+0,w
 11094  1D90  0828               	movwf	(___fltol@sign1)
 11095  1D91  00A9               	line	50
 11096                           	
 11097                           l3435:	
 11098  1D92                     	bsf	(___fltol@f1)+(23/8),(23)&7
 11099  1D92  17A2               	line	51
 11100                           	
 11101                           l3437:	
 11102  1D93                     	movlw	0FFh
 11103  1D93  30FF               	andwf	(___fltol@f1),f
 11104  1D94  05A0               	movlw	0FFh
 11105  1D95  30FF               	andwf	(___fltol@f1+1),f
 11106  1D96  05A1               	movlw	0FFh
 11107  1D97  30FF               	andwf	(___fltol@f1+2),f
 11108  1D98  05A2               	movlw	0
 11109  1D99  3000               	andwf	(___fltol@f1+3),f
 11110  1D9A  05A3               	line	52
 11111                           	
 11112                           l3439:	
 11113  1D9B                     	movlw	096h
 11114  1D9B  3096               	subwf	(___fltol@exp1),f
 11115  1D9C  02AA               	line	53
 11116                           	
 11117                           l3441:	
 11118  1D9D                     	btfss	(___fltol@exp1),7
 11119  1D9D  1FAA               	goto	u4551
 11120  1D9E  2DA0               	goto	u4550
 11121  1D9F  2DA1               u4551:
 11122  1DA0                     	goto	l3451
 11123  1DA0  2DC4               u4550:
 11124  1DA1                     	line	54
 11125                           	
 11126                           l3443:	
 11127  1DA1                     	movf	(___fltol@exp1),w
 11128  1DA1  082A               	xorlw	80h
 11129  1DA2  3A80               	addlw	-((-23)^80h)
 11130  1DA3  3E97               	skipnc
 11131  1DA4  1803               	goto	u4561
 11132  1DA5  2DA7               	goto	u4560
 11133  1DA6  2DA8               u4561:
 11134  1DA7                     	goto	l3449
 11135  1DA7  2DB3               u4560:
 11136  1DA8                     	line	55
 11137                           	
 11138                           l3445:	
 11139  1DA8                     	movlw	high highword(0)
 11140  1DA8  3000               	movwf	(?___fltol+3)
 11141  1DA9  00A3               	movlw	low highword(0)
 11142  1DAA  3000               	movwf	(?___fltol+2)
 11143  1DAB  00A2               	movlw	high(0)
 11144  1DAC  3000               	movwf	(?___fltol+1)
 11145  1DAD  00A1               	movlw	low(0)
 11146  1DAE  3000               	movwf	(?___fltol)
 11147  1DAF  00A0               
 11148                           	goto	l719
 11149  1DB0  2DF5               	
 11150                           l3447:	
 11151  1DB1                     	goto	l719
 11152  1DB1  2DF5               	
 11153                           l721:	
 11154  1DB2                     	goto	l3449
 11155  1DB2  2DB3               	line	56
 11156                           	
 11157                           l722:	
 11158  1DB3                     	line	57
 11159                           	
 11160                           l3449:	
 11161  1DB3                     	movlw	01h
 11162  1DB3  3001               u4575:
 11163  1DB4                     	lsrf	(___fltol@f1+3),f
 11164  1DB4  36A3               	rrf	(___fltol@f1+2),f
 11165  1DB5  0CA2               	rrf	(___fltol@f1+1),f
 11166  1DB6  0CA1               	rrf	(___fltol@f1),f
 11167  1DB7  0CA0               	decfsz	wreg,f
 11168  1DB8  0B89               	goto	u4575
 11169  1DB9  2DB4               
 11170                           	movlw	low(01h)
 11171  1DBA  3001               	movwf	(??___fltol+0)+0
 11172  1DBB  00A4               	movf	(??___fltol+0)+0,w
 11173  1DBC  0824               	addwf	(___fltol@exp1),f
 11174  1DBD  07AA               	btfss	status,2
 11175  1DBE  1D03               	goto	u4581
 11176  1DBF  2DC1               	goto	u4580
 11177  1DC0  2DC2               u4581:
 11178  1DC1                     	goto	l3449
 11179  1DC1  2DB3               u4580:
 11180  1DC2                     	goto	l3459
 11181  1DC2  2DE5               	
 11182                           l723:	
 11183  1DC3                     	line	59
 11184                           	goto	l3459
 11185  1DC3  2DE5               	
 11186                           l720:	
 11187  1DC4                     	line	60
 11188                           	
 11189                           l3451:	
 11190  1DC4                     	movlw	low(020h)
 11191  1DC4  3020               	subwf	(___fltol@exp1),w
 11192  1DC5  022A               	skipc
 11193  1DC6  1C03               	goto	u4591
 11194  1DC7  2DC9               	goto	u4590
 11195  1DC8  2DCA               u4591:
 11196  1DC9                     	goto	l726
 11197  1DC9  2DDE               u4590:
 11198  1DCA                     	line	61
 11199                           	
 11200                           l3453:	
 11201  1DCA                     	movlw	high highword(0)
 11202  1DCA  3000               	movwf	(?___fltol+3)
 11203  1DCB  00A3               	movlw	low highword(0)
 11204  1DCC  3000               	movwf	(?___fltol+2)
 11205  1DCD  00A2               	movlw	high(0)
 11206  1DCE  3000               	movwf	(?___fltol+1)
 11207  1DCF  00A1               	movlw	low(0)
 11208  1DD0  3000               	movwf	(?___fltol)
 11209  1DD1  00A0               
 11210                           	goto	l719
 11211  1DD2  2DF5               	
 11212                           l3455:	
 11213  1DD3                     	goto	l719
 11214  1DD3  2DF5               	
 11215                           l725:	
 11216  1DD4                     	line	62
 11217                           	goto	l726
 11218  1DD4  2DDE               	
 11219                           l727:	
 11220  1DD5                     	line	63
 11221                           	
 11222                           l3457:	
 11223  1DD5                     	movlw	01h
 11224  1DD5  3001               u4605:
 11225  1DD6                     	lslf	(___fltol@f1),f
 11226  1DD6  35A0               	rlf	(___fltol@f1+1),f
 11227  1DD7  0DA1               	rlf	(___fltol@f1+2),f
 11228  1DD8  0DA2               	rlf	(___fltol@f1+3),f
 11229  1DD9  0DA3               	decfsz	wreg,f
 11230  1DDA  0B89               	goto	u4605
 11231  1DDB  2DD6               	line	64
 11232                           	movlw	01h
 11233  1DDC  3001               	subwf	(___fltol@exp1),f
 11234  1DDD  02AA               	line	65
 11235                           	
 11236                           l726:	
 11237  1DDE                     	line	62
 11238                           	movf	((___fltol@exp1)),w
 11239  1DDE  082A               	btfss	status,2
 11240  1DDF  1D03               	goto	u4611
 11241  1DE0  2DE2               	goto	u4610
 11242  1DE1  2DE3               u4611:
 11243  1DE2                     	goto	l3457
 11244  1DE2  2DD5               u4610:
 11245  1DE3                     	goto	l3459
 11246  1DE3  2DE5               	
 11247                           l728:	
 11248  1DE4                     	goto	l3459
 11249  1DE4  2DE5               	line	66
 11250                           	
 11251                           l724:	
 11252  1DE5                     	line	67
 11253                           	
 11254                           l3459:	
 11255  1DE5                     	movf	((___fltol@sign1)),w
 11256  1DE5  0829               	btfsc	status,2
 11257  1DE6  1903               	goto	u4621
 11258  1DE7  2DE9               	goto	u4620
 11259  1DE8  2DEA               u4621:
 11260  1DE9                     	goto	l729
 11261  1DE9  2DF5               u4620:
 11262  1DEA                     	line	68
 11263                           	
 11264                           l3461:	
 11265  1DEA                     	comf	(___fltol@f1),f
 11266  1DEA  09A0               	comf	(___fltol@f1+1),f
 11267  1DEB  09A1               	comf	(___fltol@f1+2),f
 11268  1DEC  09A2               	comf	(___fltol@f1+3),f
 11269  1DED  09A3               	incf	(___fltol@f1),f
 11270  1DEE  0AA0               	skipnz
 11271  1DEF  1903               	incf	(___fltol@f1+1),f
 11272  1DF0  0AA1               	skipnz
 11273  1DF1  1903               	incf	(___fltol@f1+2),f
 11274  1DF2  0AA2               	skipnz
 11275  1DF3  1903               	incf	(___fltol@f1+3),f
 11276  1DF4  0AA3               	
 11277                           l729:	
 11278  1DF5                     	line	69
 11279                           	line	70
 11280                           	
 11281                           l719:	
 11282  1DF5                     	return
 11283  1DF5  0008               	opt stack 0
 11284                           GLOBAL	__end_of___fltol
 11285                           	__end_of___fltol:
 11286  1DF6                     	signat	___fltol,4220
 11287                           	global	___flsub
 11288                           
 11289 ;; *************** function ___flsub *****************
 11290 ;; Defined at:
 11291 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
 11292 ;; Parameters:    Size  Location     Type
 11293 ;;  a               4   40[BANK0 ] long 
 11294 ;;  b               4   44[BANK0 ] long 
 11295 ;; Auto vars:     Size  Location     Type
 11296 ;;		None
 11297 ;; Return value:  Size  Location     Type
 11298 ;;                  4   40[BANK0 ] long 
 11299 ;; Registers used:
 11300 ;;		wreg, status,2, status,0, pclath, cstack
 11301 ;; Tracked objects:
 11302 ;;		On entry : 0/0
 11303 ;;		On exit  : 0/0
 11304 ;;		Unchanged: 0/0
 11305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11306 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11309 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11310 ;;Total ram usage:        8 bytes
 11311 ;; Hardware stack levels used:    1
 11312 ;; Hardware stack levels required when called:    4
 11313 ;; This function calls:
 11314 ;;		___fladd
 11315 ;; This function is called by:
 11316 ;;		_efgtoa
 11317 ;; This function uses a non-reentrant model
 11318 ;;
 11319                           psect	text19,local,class=CODE,delta=2,merge=1,group=1
 11320                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
 11321                           	line	242
 11322                           global __ptext19
 11323                           __ptext19:	;psect for function ___flsub
 11324  26D5                     psect	text19
 11325                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
 11326                           	line	242
 11327                           	global	__size_of___flsub
 11328                           	__size_of___flsub	equ	__end_of___flsub-___flsub
 11329  0021                     	
 11330                           ___flsub:	
 11331  26D5                     ;incstack = 0
 11332                           	opt	stack 6
 11333                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 11334                           	line	248
 11335                           	
 11336                           l3463:	
 11337  26D5                     	movlw	080h
 11338  26D5  3080               	movlb 0	; select bank0
 11339  26D6  0140               	xorwf	(___flsub@a+3),f
 11340  26D7  06CB               	line	249
 11341                           	
 11342                           l3465:	
 11343  26D8                     	movf	(___flsub@b+3),w
 11344  26D8  084F               	movwf	(___fladd@b+3)
 11345  26D9  00A3               	movf	(___flsub@b+2),w
 11346  26DA  084E               	movwf	(___fladd@b+2)
 11347  26DB  00A2               	movf	(___flsub@b+1),w
 11348  26DC  084D               	movwf	(___fladd@b+1)
 11349  26DD  00A1               	movf	(___flsub@b),w
 11350  26DE  084C               	movwf	(___fladd@b)
 11351  26DF  00A0               
 11352                           	movf	(___flsub@a+3),w
 11353  26E0  084B               	movwf	(___fladd@a+3)
 11354  26E1  00A7               	movf	(___flsub@a+2),w
 11355  26E2  084A               	movwf	(___fladd@a+2)
 11356  26E3  00A6               	movf	(___flsub@a+1),w
 11357  26E4  0849               	movwf	(___fladd@a+1)
 11358  26E5  00A5               	movf	(___flsub@a),w
 11359  26E6  0848               	movwf	(___fladd@a)
 11360  26E7  00A4               
 11361                           	fcall	___fladd
 11362  26E8  3189  21EF  31A6   	movlb 0	; select bank0
 11363  26EB  0140               	movf	(3+(?___fladd)),w
 11364  26EC  0823               	movwf	(?___flsub+3)
 11365  26ED  00CB               	movf	(2+(?___fladd)),w
 11366  26EE  0822               	movwf	(?___flsub+2)
 11367  26EF  00CA               	movf	(1+(?___fladd)),w
 11368  26F0  0821               	movwf	(?___flsub+1)
 11369  26F1  00C9               	movf	(0+(?___fladd)),w
 11370  26F2  0820               	movwf	(?___flsub)
 11371  26F3  00C8               
 11372                           	goto	l872
 11373  26F4  2EF5               	
 11374                           l3467:	
 11375  26F5                     	line	250
 11376                           	
 11377                           l872:	
 11378  26F5                     	return
 11379  26F5  0008               	opt stack 0
 11380                           GLOBAL	__end_of___flsub
 11381                           	__end_of___flsub:
 11382  26F6                     	signat	___flsub,8316
 11383                           	global	___fladd
 11384                           
 11385 ;; *************** function ___fladd *****************
 11386 ;; Defined at:
 11387 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
 11388 ;; Parameters:    Size  Location     Type
 11389 ;;  b               4    0[BANK0 ] long 
 11390 ;;  a               4    4[BANK0 ] long 
 11391 ;; Auto vars:     Size  Location     Type
 11392 ;;  grs             1   23[BANK0 ] unsigned char 
 11393 ;;  bexp            1   22[BANK0 ] unsigned char 
 11394 ;;  aexp            1   21[BANK0 ] unsigned char 
 11395 ;;  signs           1   20[BANK0 ] unsigned char 
 11396 ;; Return value:  Size  Location     Type
 11397 ;;                  4    0[BANK0 ] unsigned char 
 11398 ;; Registers used:
 11399 ;;		wreg, status,2, status,0
 11400 ;; Tracked objects:
 11401 ;;		On entry : 0/0
 11402 ;;		On exit  : 0/0
 11403 ;;		Unchanged: 0/0
 11404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11405 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11406 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11407 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11408 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11409 ;;Total ram usage:       24 bytes
 11410 ;; Hardware stack levels used:    1
 11411 ;; Hardware stack levels required when called:    3
 11412 ;; This function calls:
 11413 ;;		Nothing
 11414 ;; This function is called by:
 11415 ;;		_efgtoa
 11416 ;;		___flsub
 11417 ;; This function uses a non-reentrant model
 11418 ;;
 11419                           psect	text20,local,class=CODE,delta=2,merge=1,group=1
 11420                           	line	10
 11421                           global __ptext20
 11422                           __ptext20:	;psect for function ___fladd
 11423  09EF                     psect	text20
 11424                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
 11425                           	line	10
 11426                           	global	__size_of___fladd
 11427                           	__size_of___fladd	equ	__end_of___fladd-___fladd
 11428  0272                     	
 11429                           ___fladd:	
 11430  09EF                     ;incstack = 0
 11431                           	opt	stack 6
 11432                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 11433                           	line	21
 11434                           	
 11435                           l2977:	
 11436  09EF                     	movlb 0	; select bank0
 11437  09EF  0140               	movf	0+(___fladd@b)+03h,w
 11438  09F0  0823               	andlw	080h
 11439  09F1  3980               	movwf	(??___fladd+0)+0
 11440  09F2  00A8               	movf	(??___fladd+0)+0,w
 11441  09F3  0828               	movwf	(___fladd@signs)
 11442  09F4  00B4               	line	22
 11443                           	
 11444                           l2979:	
 11445  09F5                     	lslf	0+(___fladd@b)+03h,w
 11446  09F5  3523               	movwf	(??___fladd+0)+0
 11447  09F6  00A8               	movf	(??___fladd+0)+0,w
 11448  09F7  0828               	movwf	(___fladd@bexp)
 11449  09F8  00B6               	line	23
 11450                           	
 11451                           l2981:	
 11452  09F9                     	btfss	0+(___fladd@b)+02h,(7)&7
 11453  09F9  1FA2               	goto	u3431
 11454  09FA  29FC               	goto	u3430
 11455  09FB  29FD               u3431:
 11456  09FC                     	goto	l2985
 11457  09FC  29FF               u3430:
 11458  09FD                     	line	24
 11459                           	
 11460                           l2983:	
 11461  09FD                     	bsf	(___fladd@bexp)+(0/8),(0)&7
 11462  09FD  1436               	goto	l2985
 11463  09FE  29FF               	line	25
 11464                           	
 11465                           l818:	
 11466  09FF                     	line	28
 11467                           	
 11468                           l2985:	
 11469  09FF                     	movf	((___fladd@bexp)),w
 11470  09FF  0836               	btfsc	status,2
 11471  0A00  1903               	goto	u3441
 11472  0A01  2A03               	goto	u3440
 11473  0A02  2A04               u3441:
 11474  0A03                     	goto	l2995
 11475  0A03  2A15               u3440:
 11476  0A04                     	line	30
 11477                           	
 11478                           l2987:	
 11479  0A04                     		incf	((___fladd@bexp)),w
 11480  0A04  0A36               	btfss	status,2
 11481  0A05  1D03               	goto	u3451
 11482  0A06  2A08               	goto	u3450
 11483  0A07  2A09               u3451:
 11484  0A08                     	goto	l2991
 11485  0A08  2A12               u3450:
 11486  0A09                     	line	32
 11487                           	
 11488                           l2989:	
 11489  0A09                     	movlw	0x0
 11490  0A09  3000               	movwf	(___fladd@b+3)
 11491  0A0A  00A3               	movlw	0x0
 11492  0A0B  3000               	movwf	(___fladd@b+2)
 11493  0A0C  00A2               	movlw	0x0
 11494  0A0D  3000               	movwf	(___fladd@b+1)
 11495  0A0E  00A1               	movlw	0x0
 11496  0A0F  3000               	movwf	(___fladd@b)
 11497  0A10  00A0               
 11498                           	goto	l2991
 11499  0A11  2A12               	line	33
 11500                           	
 11501                           l820:	
 11502  0A12                     	line	35
 11503                           	
 11504                           l2991:	
 11505  0A12                     	bsf	(___fladd@b)+(23/8),(23)&7
 11506  0A12  17A2               	line	37
 11507                           	
 11508                           l2993:	
 11509  0A13                     	clrf	0+(___fladd@b)+03h
 11510  0A13  01A3               	line	38
 11511                           	goto	l2997
 11512  0A14  2A1E               	line	39
 11513                           	
 11514                           l819:	
 11515  0A15                     	line	41
 11516                           	
 11517                           l2995:	
 11518  0A15                     	movlw	0x0
 11519  0A15  3000               	movwf	(___fladd@b+3)
 11520  0A16  00A3               	movlw	0x0
 11521  0A17  3000               	movwf	(___fladd@b+2)
 11522  0A18  00A2               	movlw	0x0
 11523  0A19  3000               	movwf	(___fladd@b+1)
 11524  0A1A  00A1               	movlw	0x0
 11525  0A1B  3000               	movwf	(___fladd@b)
 11526  0A1C  00A0               
 11527                           	goto	l2997
 11528  0A1D  2A1E               	line	42
 11529                           	
 11530                           l821:	
 11531  0A1E                     	line	44
 11532                           	
 11533                           l2997:	
 11534  0A1E                     	movf	0+(___fladd@a)+03h,w
 11535  0A1E  0827               	andlw	080h
 11536  0A1F  3980               	movwf	(??___fladd+0)+0
 11537  0A20  00A8               	movf	(??___fladd+0)+0,w
 11538  0A21  0828               	movwf	(___fladd@aexp)
 11539  0A22  00B5               	line	46
 11540                           	
 11541                           l2999:	
 11542  0A23                     	movf	(___fladd@aexp),w
 11543  0A23  0835               	xorwf	(___fladd@signs),w
 11544  0A24  0634               	skipnz
 11545  0A25  1903               	goto	u3461
 11546  0A26  2A28               	goto	u3460
 11547  0A27  2A29               u3461:
 11548  0A28                     	goto	l3003
 11549  0A28  2A2B               u3460:
 11550  0A29                     	line	47
 11551                           	
 11552                           l3001:	
 11553  0A29                     	bsf	(___fladd@signs)+(6/8),(6)&7
 11554  0A29  1734               	goto	l3003
 11555  0A2A  2A2B               	line	48
 11556                           	
 11557                           l822:	
 11558  0A2B                     	line	49
 11559                           	
 11560                           l3003:	
 11561  0A2B                     	lslf	0+(___fladd@a)+03h,w
 11562  0A2B  3527               	movwf	(??___fladd+0)+0
 11563  0A2C  00A8               	movf	(??___fladd+0)+0,w
 11564  0A2D  0828               	movwf	(___fladd@aexp)
 11565  0A2E  00B5               	line	50
 11566                           	
 11567                           l3005:	
 11568  0A2F                     	btfss	0+(___fladd@a)+02h,(7)&7
 11569  0A2F  1FA6               	goto	u3471
 11570  0A30  2A32               	goto	u3470
 11571  0A31  2A33               u3471:
 11572  0A32                     	goto	l3009
 11573  0A32  2A35               u3470:
 11574  0A33                     	line	51
 11575                           	
 11576                           l3007:	
 11577  0A33                     	bsf	(___fladd@aexp)+(0/8),(0)&7
 11578  0A33  1435               	goto	l3009
 11579  0A34  2A35               	line	52
 11580                           	
 11581                           l823:	
 11582  0A35                     	line	55
 11583                           	
 11584                           l3009:	
 11585  0A35                     	movf	((___fladd@aexp)),w
 11586  0A35  0835               	btfsc	status,2
 11587  0A36  1903               	goto	u3481
 11588  0A37  2A39               	goto	u3480
 11589  0A38  2A3A               u3481:
 11590  0A39                     	goto	l3019
 11591  0A39  2A4B               u3480:
 11592  0A3A                     	line	57
 11593                           	
 11594                           l3011:	
 11595  0A3A                     		incf	((___fladd@aexp)),w
 11596  0A3A  0A35               	btfss	status,2
 11597  0A3B  1D03               	goto	u3491
 11598  0A3C  2A3E               	goto	u3490
 11599  0A3D  2A3F               u3491:
 11600  0A3E                     	goto	l3015
 11601  0A3E  2A48               u3490:
 11602  0A3F                     	line	59
 11603                           	
 11604                           l3013:	
 11605  0A3F                     	movlw	0x0
 11606  0A3F  3000               	movwf	(___fladd@a+3)
 11607  0A40  00A7               	movlw	0x0
 11608  0A41  3000               	movwf	(___fladd@a+2)
 11609  0A42  00A6               	movlw	0x0
 11610  0A43  3000               	movwf	(___fladd@a+1)
 11611  0A44  00A5               	movlw	0x0
 11612  0A45  3000               	movwf	(___fladd@a)
 11613  0A46  00A4               
 11614                           	goto	l3015
 11615  0A47  2A48               	line	60
 11616                           	
 11617                           l825:	
 11618  0A48                     	line	62
 11619                           	
 11620                           l3015:	
 11621  0A48                     	bsf	(___fladd@a)+(23/8),(23)&7
 11622  0A48  17A6               	line	64
 11623                           	
 11624                           l3017:	
 11625  0A49                     	clrf	0+(___fladd@a)+03h
 11626  0A49  01A7               	line	65
 11627                           	goto	l826
 11628  0A4A  2A53               	line	66
 11629                           	
 11630                           l824:	
 11631  0A4B                     	line	68
 11632                           	
 11633                           l3019:	
 11634  0A4B                     	movlw	0x0
 11635  0A4B  3000               	movwf	(___fladd@a+3)
 11636  0A4C  00A7               	movlw	0x0
 11637  0A4D  3000               	movwf	(___fladd@a+2)
 11638  0A4E  00A6               	movlw	0x0
 11639  0A4F  3000               	movwf	(___fladd@a+1)
 11640  0A50  00A5               	movlw	0x0
 11641  0A51  3000               	movwf	(___fladd@a)
 11642  0A52  00A4               
 11643                           	line	69
 11644                           	
 11645                           l826:	
 11646  0A53                     	line	75
 11647                           	movf	(___fladd@bexp),w
 11648  0A53  0836               	subwf	(___fladd@aexp),w
 11649  0A54  0235               	skipnc
 11650  0A55  1803               	goto	u3501
 11651  0A56  2A58               	goto	u3500
 11652  0A57  2A59               u3501:
 11653  0A58                     	goto	l3055
 11654  0A58  2A9F               u3500:
 11655  0A59                     	line	77
 11656                           	
 11657                           l3021:	
 11658  0A59                     	btfss	(___fladd@signs),(6)&7
 11659  0A59  1F34               	goto	u3511
 11660  0A5A  2A5C               	goto	u3510
 11661  0A5B  2A5D               u3511:
 11662  0A5C                     	goto	l3025
 11663  0A5C  2A62               u3510:
 11664  0A5D                     	line	78
 11665                           	
 11666                           l3023:	
 11667  0A5D                     	movlw	low(080h)
 11668  0A5D  3080               	movwf	(??___fladd+0)+0
 11669  0A5E  00A8               	movf	(??___fladd+0)+0,w
 11670  0A5F  0828               	xorwf	(___fladd@signs),f
 11671  0A60  06B4               	goto	l3025
 11672  0A61  2A62               	line	79
 11673                           	
 11674                           l828:	
 11675  0A62                     	line	81
 11676                           	
 11677                           l3025:	
 11678  0A62                     	movf	(___fladd@bexp),w
 11679  0A62  0836               	movwf	(??___fladd+0)+0
 11680  0A63  00A8               	movf	(??___fladd+0)+0,w
 11681  0A64  0828               	movwf	(___fladd@grs)
 11682  0A65  00B7               	line	82
 11683                           	
 11684                           l3027:	
 11685  0A66                     	movf	(___fladd@aexp),w
 11686  0A66  0835               	movwf	(??___fladd+0)+0
 11687  0A67  00A8               	movf	(??___fladd+0)+0,w
 11688  0A68  0828               	movwf	(___fladd@bexp)
 11689  0A69  00B6               	line	83
 11690                           	
 11691                           l3029:	
 11692  0A6A                     	movf	(___fladd@grs),w
 11693  0A6A  0837               	movwf	(??___fladd+0)+0
 11694  0A6B  00A8               	movf	(??___fladd+0)+0,w
 11695  0A6C  0828               	movwf	(___fladd@aexp)
 11696  0A6D  00B5               	line	84
 11697                           	
 11698                           l3031:	
 11699  0A6E                     	movf	(___fladd@b),w
 11700  0A6E  0820               	movwf	(??___fladd+0)+0
 11701  0A6F  00A8               	movf	(??___fladd+0)+0,w
 11702  0A70  0828               	movwf	(___fladd@grs)
 11703  0A71  00B7               	line	85
 11704                           	
 11705                           l3033:	
 11706  0A72                     	movf	(___fladd@a),w
 11707  0A72  0824               	movwf	(??___fladd+0)+0
 11708  0A73  00A8               	movf	(??___fladd+0)+0,w
 11709  0A74  0828               	movwf	(___fladd@b)
 11710  0A75  00A0               	line	86
 11711                           	
 11712                           l3035:	
 11713  0A76                     	movf	(___fladd@grs),w
 11714  0A76  0837               	movwf	(??___fladd+0)+0
 11715  0A77  00A8               	movf	(??___fladd+0)+0,w
 11716  0A78  0828               	movwf	(___fladd@a)
 11717  0A79  00A4               	line	87
 11718                           	
 11719                           l3037:	
 11720  0A7A                     	movf	0+(___fladd@b)+01h,w
 11721  0A7A  0821               	movwf	(??___fladd+0)+0
 11722  0A7B  00A8               	movf	(??___fladd+0)+0,w
 11723  0A7C  0828               	movwf	(___fladd@grs)
 11724  0A7D  00B7               	line	88
 11725                           	
 11726                           l3039:	
 11727  0A7E                     	movf	0+(___fladd@a)+01h,w
 11728  0A7E  0825               	movwf	(??___fladd+0)+0
 11729  0A7F  00A8               	movf	(??___fladd+0)+0,w
 11730  0A80  0828               	movwf	0+(___fladd@b)+01h
 11731  0A81  00A1               	line	89
 11732                           	
 11733                           l3041:	
 11734  0A82                     	movf	(___fladd@grs),w
 11735  0A82  0837               	movwf	(??___fladd+0)+0
 11736  0A83  00A8               	movf	(??___fladd+0)+0,w
 11737  0A84  0828               	movwf	0+(___fladd@a)+01h
 11738  0A85  00A5               	line	90
 11739                           	
 11740                           l3043:	
 11741  0A86                     	movf	0+(___fladd@b)+02h,w
 11742  0A86  0822               	movwf	(??___fladd+0)+0
 11743  0A87  00A8               	movf	(??___fladd+0)+0,w
 11744  0A88  0828               	movwf	(___fladd@grs)
 11745  0A89  00B7               	line	91
 11746                           	
 11747                           l3045:	
 11748  0A8A                     	movf	0+(___fladd@a)+02h,w
 11749  0A8A  0826               	movwf	(??___fladd+0)+0
 11750  0A8B  00A8               	movf	(??___fladd+0)+0,w
 11751  0A8C  0828               	movwf	0+(___fladd@b)+02h
 11752  0A8D  00A2               	line	92
 11753                           	
 11754                           l3047:	
 11755  0A8E                     	movf	(___fladd@grs),w
 11756  0A8E  0837               	movwf	(??___fladd+0)+0
 11757  0A8F  00A8               	movf	(??___fladd+0)+0,w
 11758  0A90  0828               	movwf	0+(___fladd@a)+02h
 11759  0A91  00A6               	line	93
 11760                           	
 11761                           l3049:	
 11762  0A92                     	movf	0+(___fladd@b)+03h,w
 11763  0A92  0823               	movwf	(??___fladd+0)+0
 11764  0A93  00A8               	movf	(??___fladd+0)+0,w
 11765  0A94  0828               	movwf	(___fladd@grs)
 11766  0A95  00B7               	line	94
 11767                           	
 11768                           l3051:	
 11769  0A96                     	movf	0+(___fladd@a)+03h,w
 11770  0A96  0827               	movwf	(??___fladd+0)+0
 11771  0A97  00A8               	movf	(??___fladd+0)+0,w
 11772  0A98  0828               	movwf	0+(___fladd@b)+03h
 11773  0A99  00A3               	line	95
 11774                           	
 11775                           l3053:	
 11776  0A9A                     	movf	(___fladd@grs),w
 11777  0A9A  0837               	movwf	(??___fladd+0)+0
 11778  0A9B  00A8               	movf	(??___fladd+0)+0,w
 11779  0A9C  0828               	movwf	0+(___fladd@a)+03h
 11780  0A9D  00A7               	goto	l3055
 11781  0A9E  2A9F               	line	96
 11782                           	
 11783                           l827:	
 11784  0A9F                     	line	98
 11785                           	
 11786                           l3055:	
 11787  0A9F                     	clrf	(___fladd@grs)
 11788  0A9F  01B7               	line	100
 11789                           	
 11790                           l3057:	
 11791  0AA0                     	movf	(___fladd@bexp),w
 11792  0AA0  0836               	movwf	(??___fladd+0)+0
 11793  0AA1  00A8               	clrf	(??___fladd+0)+0+1
 11794  0AA2  01A9               	comf	(??___fladd+0)+0,f
 11795  0AA3  09A8               	comf	(??___fladd+0)+1,f
 11796  0AA4  09A9               	incf	(??___fladd+0)+0,f
 11797  0AA5  0AA8               	skipnz
 11798  0AA6  1903               	incf	(??___fladd+0)+1,f
 11799  0AA7  0AA9               	movf	(___fladd@aexp),w
 11800  0AA8  0835               	addwf	0+(??___fladd+0)+0,w
 11801  0AA9  0728               	movwf	(??___fladd+2)+0
 11802  0AAA  00AA               	movf	1+(??___fladd+0)+0,w
 11803  0AAB  0829               	skipnc
 11804  0AAC  1803               	incf	1+(??___fladd+0)+0,w
 11805  0AAD  0A29               	movwf	((??___fladd+2)+0)+1
 11806  0AAE  00AB               	movf	1+(??___fladd+2)+0,w
 11807  0AAF  082B               	xorlw	80h
 11808  0AB0  3A80               	movwf	(??___fladd+4)+0
 11809  0AB1  00AC               	movlw	(0)^80h
 11810  0AB2  3080               	subwf	(??___fladd+4)+0,w
 11811  0AB3  022C               	skipz
 11812  0AB4  1D03               	goto	u3525
 11813  0AB5  2AB8               	movlw	01Ah
 11814  0AB6  301A               	subwf	0+(??___fladd+2)+0,w
 11815  0AB7  022A               u3525:
 11816  0AB8                     
 11817                           	skipc
 11818  0AB8  1C03               	goto	u3521
 11819  0AB9  2ABB               	goto	u3520
 11820  0ABA  2ABC               u3521:
 11821  0ABB                     	goto	l3073
 11822  0ABB  2AF8               u3520:
 11823  0ABC                     	line	101
 11824                           	
 11825                           l3059:	
 11826  0ABC                     	movlb 0	; select bank0
 11827  0ABC  0140               	movf	(___fladd@b+3),w
 11828  0ABD  0823               	iorwf	(___fladd@b+2),w
 11829  0ABE  0422               	iorwf	(___fladd@b+1),w
 11830  0ABF  0421               	iorwf	(___fladd@b),w
 11831  0AC0  0420               	skipz
 11832  0AC1  1D03               	goto	u3531
 11833  0AC2  2AC4               	goto	u3530
 11834  0AC3  2AC6               u3531:
 11835  0AC4                     	movlw	1
 11836  0AC4  3001               	goto	u3540
 11837  0AC5  2AC7               u3530:
 11838  0AC6                     	movlw	0
 11839  0AC6  3000               u3540:
 11840  0AC7                     	movwf	(??___fladd+0)+0
 11841  0AC7  00A8               	movf	(??___fladd+0)+0,w
 11842  0AC8  0828               	movwf	(___fladd@grs)
 11843  0AC9  00B7               	line	102
 11844                           	movlw	high highword(0)
 11845  0ACA  3000               	movwf	(___fladd@b+3)
 11846  0ACB  00A3               	movlw	low highword(0)
 11847  0ACC  3000               	movwf	(___fladd@b+2)
 11848  0ACD  00A2               	movlw	high(0)
 11849  0ACE  3000               	movwf	(___fladd@b+1)
 11850  0ACF  00A1               	movlw	low(0)
 11851  0AD0  3000               	movwf	(___fladd@b)
 11852  0AD1  00A0               
 11853                           	line	103
 11854                           	movf	(___fladd@aexp),w
 11855  0AD2  0835               	movwf	(??___fladd+0)+0
 11856  0AD3  00A8               	movf	(??___fladd+0)+0,w
 11857  0AD4  0828               	movwf	(___fladd@bexp)
 11858  0AD5  00B6               	line	104
 11859                           	goto	l830
 11860  0AD6  2B00               	line	105
 11861                           	
 11862                           l829:	
 11863  0AD7                     	line	106
 11864                           	goto	l3073
 11865  0AD7  2AF8               	
 11866                           l832:	
 11867  0AD8                     	line	109
 11868                           	btfss	(___fladd@grs),(0)&7
 11869  0AD8  1C37               	goto	u3551
 11870  0AD9  2ADB               	goto	u3550
 11871  0ADA  2ADC               u3551:
 11872  0ADB                     	goto	l3063
 11873  0ADB  2AE2               u3550:
 11874  0ADC                     	line	110
 11875                           	
 11876                           l3061:	
 11877  0ADC                     	lsrf	(___fladd@grs),w
 11878  0ADC  3637               	iorlw	01h
 11879  0ADD  3801               	movwf	(??___fladd+0)+0
 11880  0ADE  00A8               	movf	(??___fladd+0)+0,w
 11881  0ADF  0828               	movwf	(___fladd@grs)
 11882  0AE0  00B7               	line	111
 11883                           	goto	l3065
 11884  0AE1  2AE5               	line	112
 11885                           	
 11886                           l833:	
 11887  0AE2                     	line	113
 11888                           	
 11889                           l3063:	
 11890  0AE2                     	clrc
 11891  0AE2  1003               	rrf	(___fladd@grs),f
 11892  0AE3  0CB7               
 11893                           	goto	l3065
 11894  0AE4  2AE5               	line	114
 11895                           	
 11896                           l834:	
 11897  0AE5                     	line	115
 11898                           	
 11899                           l3065:	
 11900  0AE5                     	btfss	(___fladd@b),(0)&7
 11901  0AE5  1C20               	goto	u3561
 11902  0AE6  2AE8               	goto	u3560
 11903  0AE7  2AE9               u3561:
 11904  0AE8                     	goto	l3069
 11905  0AE8  2AEB               u3560:
 11906  0AE9                     	line	116
 11907                           	
 11908                           l3067:	
 11909  0AE9                     	bsf	(___fladd@grs)+(7/8),(7)&7
 11910  0AE9  17B7               	goto	l3069
 11911  0AEA  2AEB               	line	117
 11912                           	
 11913                           l835:	
 11914  0AEB                     	line	118
 11915                           	
 11916                           l3069:	
 11917  0AEB                     	movlw	01h
 11918  0AEB  3001               	movwf	(??___fladd+0)+0
 11919  0AEC  00A8               u3575:
 11920  0AED                     	asrf	(___fladd@b+3),f
 11921  0AED  37A3               	rrf	(___fladd@b+2),f
 11922  0AEE  0CA2               	rrf	(___fladd@b+1),f
 11923  0AEF  0CA1               	rrf	(___fladd@b),f
 11924  0AF0  0CA0               	decfsz	(??___fladd+0)+0&07fh,f
 11925  0AF1  0BA8               	goto	u3575
 11926  0AF2  2AED               
 11927                           	line	119
 11928                           	
 11929                           l3071:	
 11930  0AF3                     	movlw	low(01h)
 11931  0AF3  3001               	movwf	(??___fladd+0)+0
 11932  0AF4  00A8               	movf	(??___fladd+0)+0,w
 11933  0AF5  0828               	addwf	(___fladd@bexp),f
 11934  0AF6  07B6               	goto	l3073
 11935  0AF7  2AF8               	line	120
 11936                           	
 11937                           l831:	
 11938  0AF8                     	line	106
 11939                           	
 11940                           l3073:	
 11941  0AF8                     	movlb 0	; select bank0
 11942  0AF8  0140               	movf	(___fladd@aexp),w
 11943  0AF9  0835               	subwf	(___fladd@bexp),w
 11944  0AFA  0236               	skipc
 11945  0AFB  1C03               	goto	u3581
 11946  0AFC  2AFE               	goto	u3580
 11947  0AFD  2AFF               u3581:
 11948  0AFE                     	goto	l832
 11949  0AFE  2AD8               u3580:
 11950  0AFF                     	goto	l830
 11951  0AFF  2B00               	
 11952                           l836:	
 11953  0B00                     	line	121
 11954                           	
 11955                           l830:	
 11956  0B00                     	line	124
 11957                           	btfsc	(___fladd@signs),(6)&7
 11958  0B00  1B34               	goto	u3591
 11959  0B01  2B03               	goto	u3590
 11960  0B02  2B04               u3591:
 11961  0B03                     	goto	l3099
 11962  0B03  2B40               u3590:
 11963  0B04                     	line	127
 11964                           	
 11965                           l3075:	
 11966  0B04                     	movf	((___fladd@bexp)),w
 11967  0B04  0836               	btfss	status,2
 11968  0B05  1D03               	goto	u3601
 11969  0B06  2B08               	goto	u3600
 11970  0B07  2B09               u3601:
 11971  0B08                     	goto	l3081
 11972  0B08  2B13               u3600:
 11973  0B09                     	line	128
 11974                           	
 11975                           l3077:	
 11976  0B09                     	movlw	0x0
 11977  0B09  3000               	movwf	(?___fladd+3)
 11978  0B0A  00A3               	movlw	0x0
 11979  0B0B  3000               	movwf	(?___fladd+2)
 11980  0B0C  00A2               	movlw	0x0
 11981  0B0D  3000               	movwf	(?___fladd+1)
 11982  0B0E  00A1               	movlw	0x0
 11983  0B0F  3000               	movwf	(?___fladd)
 11984  0B10  00A0               
 11985                           	goto	l839
 11986  0B11  2C60               	
 11987                           l3079:	
 11988  0B12                     	goto	l839
 11989  0B12  2C60               	line	129
 11990                           	
 11991                           l838:	
 11992  0B13                     	line	132
 11993                           	
 11994                           l3081:	
 11995  0B13                     	movf	(___fladd@a),w
 11996  0B13  0824               	addwf	(___fladd@b),f
 11997  0B14  07A0               	movf	(___fladd@a+1),w
 11998  0B15  0825               	addwfc	(___fladd@b+1),f
 11999  0B16  3DA1               	movf	(___fladd@a+2),w
 12000  0B17  0826               	addwfc	(___fladd@b+2),f
 12001  0B18  3DA2               	movf	(___fladd@a+3),w
 12002  0B19  0827               	addwfc	(___fladd@b+3),f
 12003  0B1A  3DA3               	line	134
 12004                           	
 12005                           l3083:	
 12006  0B1B                     	btfss	(___fladd@b+3),(24)&7
 12007  0B1B  1C23               	goto	u3611
 12008  0B1C  2B1E               	goto	u3610
 12009  0B1D  2B1F               u3611:
 12010  0B1E                     	goto	l3133
 12011  0B1E  2BE7               u3610:
 12012  0B1F                     	line	135
 12013                           	
 12014                           l3085:	
 12015  0B1F                     	btfss	(___fladd@grs),(0)&7
 12016  0B1F  1C37               	goto	u3621
 12017  0B20  2B22               	goto	u3620
 12018  0B21  2B23               u3621:
 12019  0B22                     	goto	l3089
 12020  0B22  2B29               u3620:
 12021  0B23                     	line	136
 12022                           	
 12023                           l3087:	
 12024  0B23                     	lsrf	(___fladd@grs),w
 12025  0B23  3637               	iorlw	01h
 12026  0B24  3801               	movwf	(??___fladd+0)+0
 12027  0B25  00A8               	movf	(??___fladd+0)+0,w
 12028  0B26  0828               	movwf	(___fladd@grs)
 12029  0B27  00B7               	line	137
 12030                           	goto	l3091
 12031  0B28  2B2C               	line	138
 12032                           	
 12033                           l841:	
 12034  0B29                     	line	139
 12035                           	
 12036                           l3089:	
 12037  0B29                     	clrc
 12038  0B29  1003               	rrf	(___fladd@grs),f
 12039  0B2A  0CB7               
 12040                           	goto	l3091
 12041  0B2B  2B2C               	line	140
 12042                           	
 12043                           l842:	
 12044  0B2C                     	line	141
 12045                           	
 12046                           l3091:	
 12047  0B2C                     	btfss	(___fladd@b),(0)&7
 12048  0B2C  1C20               	goto	u3631
 12049  0B2D  2B2F               	goto	u3630
 12050  0B2E  2B30               u3631:
 12051  0B2F                     	goto	l3095
 12052  0B2F  2B32               u3630:
 12053  0B30                     	line	142
 12054                           	
 12055                           l3093:	
 12056  0B30                     	bsf	(___fladd@grs)+(7/8),(7)&7
 12057  0B30  17B7               	goto	l3095
 12058  0B31  2B32               	line	143
 12059                           	
 12060                           l843:	
 12061  0B32                     	line	144
 12062                           	
 12063                           l3095:	
 12064  0B32                     	movlw	01h
 12065  0B32  3001               	movwf	(??___fladd+0)+0
 12066  0B33  00A8               u3645:
 12067  0B34                     	asrf	(___fladd@b+3),f
 12068  0B34  37A3               	rrf	(___fladd@b+2),f
 12069  0B35  0CA2               	rrf	(___fladd@b+1),f
 12070  0B36  0CA1               	rrf	(___fladd@b),f
 12071  0B37  0CA0               	decfsz	(??___fladd+0)+0&07fh,f
 12072  0B38  0BA8               	goto	u3645
 12073  0B39  2B34               
 12074                           	line	145
 12075                           	
 12076                           l3097:	
 12077  0B3A                     	movlw	low(01h)
 12078  0B3A  3001               	movwf	(??___fladd+0)+0
 12079  0B3B  00A8               	movf	(??___fladd+0)+0,w
 12080  0B3C  0828               	addwf	(___fladd@bexp),f
 12081  0B3D  07B6               	goto	l3133
 12082  0B3E  2BE7               	line	146
 12083                           	
 12084                           l840:	
 12085  0B3F                     	line	148
 12086                           	goto	l3133
 12087  0B3F  2BE7               	line	149
 12088                           	
 12089                           l837:	
 12090  0B40                     	line	153
 12091                           	
 12092                           l3099:	
 12093  0B40                     	movf	(___fladd@b+3),w
 12094  0B40  0823               	xorlw	80h
 12095  0B41  3A80               	movwf	(??___fladd+0)+0
 12096  0B42  00A8               	movf	(___fladd@a+3),w
 12097  0B43  0827               	xorlw	80h
 12098  0B44  3A80               	subwf	(??___fladd+0)+0,w
 12099  0B45  0228               	
 12100                           	skipz
 12101  0B46  1D03               	goto	u3653
 12102  0B47  2B52               	movf	(___fladd@a+2),w
 12103  0B48  0826               	subwf	(___fladd@b+2),w
 12104  0B49  0222               	skipz
 12105  0B4A  1D03               	goto	u3653
 12106  0B4B  2B52               	movf	(___fladd@a+1),w
 12107  0B4C  0825               	subwf	(___fladd@b+1),w
 12108  0B4D  0221               	skipz
 12109  0B4E  1D03               	goto	u3653
 12110  0B4F  2B52               	movf	(___fladd@a),w
 12111  0B50  0824               	subwf	(___fladd@b),w
 12112  0B51  0220               u3653:
 12113  0B52                     	skipnc
 12114  0B52  1803               	goto	u3651
 12115  0B53  2B55               	goto	u3650
 12116  0B54  2B56               u3651:
 12117  0B55                     	goto	l3109
 12118  0B55  2BA2               u3650:
 12119  0B56                     	line	154
 12120                           	
 12121                           l3101:	
 12122  0B56                     	movlw	0FFh
 12123  0B56  30FF               	movwf	((??___fladd+0)+0)
 12124  0B57  00A8               	movlw	0FFh
 12125  0B58  30FF               	movwf	((??___fladd+0)+0+1)
 12126  0B59  00A9               	movlw	0FFh
 12127  0B5A  30FF               	movwf	((??___fladd+0)+0+2)
 12128  0B5B  00AA               	movlw	0FFh
 12129  0B5C  30FF               	movwf	((??___fladd+0)+0+3)
 12130  0B5D  00AB               	movf	(___fladd@a),w
 12131  0B5E  0824               	movwf	(??___fladd+4)+0
 12132  0B5F  00AC               	movf	(___fladd@a+1),w
 12133  0B60  0825               	movwf	((??___fladd+4)+0+1)
 12134  0B61  00AD               	movf	(___fladd@a+2),w
 12135  0B62  0826               	movwf	((??___fladd+4)+0+2)
 12136  0B63  00AE               	movf	(___fladd@a+3),w
 12137  0B64  0827               	movwf	((??___fladd+4)+0+3)
 12138  0B65  00AF               	comf	(___fladd@b),w
 12139  0B66  0920               	movwf	(??___fladd+8)+0
 12140  0B67  00B0               	comf	(___fladd@b+1),w
 12141  0B68  0921               	movwf	((??___fladd+8)+0+1)
 12142  0B69  00B1               	comf	(___fladd@b+2),w
 12143  0B6A  0922               	movwf	((??___fladd+8)+0+2)
 12144  0B6B  00B2               	comf	(___fladd@b+3),w
 12145  0B6C  0923               	movwf	((??___fladd+8)+0+3)
 12146  0B6D  00B3               	incf	(??___fladd+8)+0,f
 12147  0B6E  0AB0               	skipnz
 12148  0B6F  1903               	incf	((??___fladd+8)+0+1),f
 12149  0B70  0AB1               	skipnz
 12150  0B71  1903               	incf	((??___fladd+8)+0+2),f
 12151  0B72  0AB2               	skipnz
 12152  0B73  1903               	incf	((??___fladd+8)+0+3),f
 12153  0B74  0AB3               	movf	0+(??___fladd+8)+0,w
 12154  0B75  0830               	addwf	(??___fladd+4)+0,f
 12155  0B76  07AC               	movf	1+(??___fladd+8)+0,w
 12156  0B77  0831               	addwfc	(??___fladd+4)+1,f
 12157  0B78  3DAD               	movf	2+(??___fladd+8)+0,w
 12158  0B79  0832               	addwfc	(??___fladd+4)+2,f
 12159  0B7A  3DAE               	movf	3+(??___fladd+8)+0,w
 12160  0B7B  0833               	addwfc	(??___fladd+4)+3,f
 12161  0B7C  3DAF               	movf	0+(??___fladd+4)+0,w
 12162  0B7D  082C               	addwf	(??___fladd+0)+0,f
 12163  0B7E  07A8               	movf	1+(??___fladd+4)+0,w
 12164  0B7F  082D               	addwfc	(??___fladd+0)+1,f
 12165  0B80  3DA9               	movf	2+(??___fladd+4)+0,w
 12166  0B81  082E               	addwfc	(??___fladd+0)+2,f
 12167  0B82  3DAA               	movf	3+(??___fladd+4)+0,w
 12168  0B83  082F               	addwfc	(??___fladd+0)+3,f
 12169  0B84  3DAB               	movf	3+(??___fladd+0)+0,w
 12170  0B85  082B               	movwf	(___fladd@b+3)
 12171  0B86  00A3               	movf	2+(??___fladd+0)+0,w
 12172  0B87  082A               	movwf	(___fladd@b+2)
 12173  0B88  00A2               	movf	1+(??___fladd+0)+0,w
 12174  0B89  0829               	movwf	(___fladd@b+1)
 12175  0B8A  00A1               	movf	0+(??___fladd+0)+0,w
 12176  0B8B  0828               	movwf	(___fladd@b)
 12177  0B8C  00A0               
 12178                           	line	155
 12179                           	movlw	low(080h)
 12180  0B8D  3080               	movwf	(??___fladd+0)+0
 12181  0B8E  00A8               	movf	(??___fladd+0)+0,w
 12182  0B8F  0828               	xorwf	(___fladd@signs),f
 12183  0B90  06B4               	line	156
 12184                           	
 12185                           l3103:	
 12186  0B91                     	comf	(___fladd@grs),f
 12187  0B91  09B7               	incf	(___fladd@grs),f
 12188  0B92  0AB7               	line	157
 12189                           	
 12190                           l3105:	
 12191  0B93                     	movf	((___fladd@grs)),w
 12192  0B93  0837               	btfss	status,2
 12193  0B94  1D03               	goto	u3661
 12194  0B95  2B97               	goto	u3660
 12195  0B96  2B98               u3661:
 12196  0B97                     	goto	l847
 12197  0B97  2BAA               u3660:
 12198  0B98                     	line	158
 12199                           	
 12200                           l3107:	
 12201  0B98                     	movlw	01h
 12202  0B98  3001               	addwf	(___fladd@b),f
 12203  0B99  07A0               	movlw	0
 12204  0B9A  3000               	addwfc	(___fladd@b+1),f
 12205  0B9B  3DA1               	movlw	0
 12206  0B9C  3000               	addwfc	(___fladd@b+2),f
 12207  0B9D  3DA2               	movlw	0
 12208  0B9E  3000               	addwfc	(___fladd@b+3),f
 12209  0B9F  3DA3               	goto	l847
 12210  0BA0  2BAA               	line	159
 12211                           	
 12212                           l846:	
 12213  0BA1                     	line	160
 12214                           	goto	l847
 12215  0BA1  2BAA               	line	161
 12216                           	
 12217                           l845:	
 12218  0BA2                     	line	162
 12219                           	
 12220                           l3109:	
 12221  0BA2                     	movf	(___fladd@a),w
 12222  0BA2  0824               	subwf	(___fladd@b),f
 12223  0BA3  02A0               	movf	(___fladd@a+1),w
 12224  0BA4  0825               	subwfb	(___fladd@b+1),f
 12225  0BA5  3BA1               	movf	(___fladd@a+2),w
 12226  0BA6  0826               	subwfb	(___fladd@b+2),f
 12227  0BA7  3BA2               	movf	(___fladd@a+3),w
 12228  0BA8  0827               	subwfb	(___fladd@b+3),f
 12229  0BA9  3BA3               	line	163
 12230                           	
 12231                           l847:	
 12232  0BAA                     	line	166
 12233                           	movf	(___fladd@b+3),w
 12234  0BAA  0823               	iorwf	(___fladd@b+2),w
 12235  0BAB  0422               	iorwf	(___fladd@b+1),w
 12236  0BAC  0421               	iorwf	(___fladd@b),w
 12237  0BAD  0420               	skipz
 12238  0BAE  1D03               	goto	u3671
 12239  0BAF  2BB1               	goto	u3670
 12240  0BB0  2BB2               u3671:
 12241  0BB1                     	goto	l3131
 12242  0BB1  2BE1               u3670:
 12243  0BB2                     	
 12244                           l3111:	
 12245  0BB2                     	movf	((___fladd@grs)),w
 12246  0BB2  0837               	btfss	status,2
 12247  0BB3  1D03               	goto	u3681
 12248  0BB4  2BB6               	goto	u3680
 12249  0BB5  2BB7               u3681:
 12250  0BB6                     	goto	l3131
 12251  0BB6  2BE1               u3680:
 12252  0BB7                     	line	167
 12253                           	
 12254                           l3113:	
 12255  0BB7                     	movlw	0x0
 12256  0BB7  3000               	movwf	(?___fladd+3)
 12257  0BB8  00A3               	movlw	0x0
 12258  0BB9  3000               	movwf	(?___fladd+2)
 12259  0BBA  00A2               	movlw	0x0
 12260  0BBB  3000               	movwf	(?___fladd+1)
 12261  0BBC  00A1               	movlw	0x0
 12262  0BBD  3000               	movwf	(?___fladd)
 12263  0BBE  00A0               
 12264                           	goto	l839
 12265  0BBF  2C60               	
 12266                           l3115:	
 12267  0BC0                     	goto	l839
 12268  0BC0  2C60               	line	168
 12269                           	
 12270                           l848:	
 12271  0BC1                     	line	171
 12272                           	goto	l3131
 12273  0BC1  2BE1               	
 12274                           l850:	
 12275  0BC2                     	line	172
 12276                           	
 12277                           l3117:	
 12278  0BC2                     	movlw	01h
 12279  0BC2  3001               u3695:
 12280  0BC3                     	lslf	(___fladd@b),f
 12281  0BC3  35A0               	rlf	(___fladd@b+1),f
 12282  0BC4  0DA1               	rlf	(___fladd@b+2),f
 12283  0BC5  0DA2               	rlf	(___fladd@b+3),f
 12284  0BC6  0DA3               	decfsz	wreg,f
 12285  0BC7  0B89               	goto	u3695
 12286  0BC8  2BC3               	line	173
 12287                           	
 12288                           l3119:	
 12289  0BC9                     	btfss	(___fladd@grs),(7)&7
 12290  0BC9  1FB7               	goto	u3701
 12291  0BCA  2BCC               	goto	u3700
 12292  0BCB  2BCD               u3701:
 12293  0BCC                     	goto	l851
 12294  0BCC  2BCE               u3700:
 12295  0BCD                     	line	174
 12296                           	
 12297                           l3121:	
 12298  0BCD                     	bsf	(___fladd@b)+(0/8),(0)&7
 12299  0BCD  1420               	line	175
 12300                           	
 12301                           l851:	
 12302  0BCE                     	line	176
 12303                           	btfss	(___fladd@grs),(0)&7
 12304  0BCE  1C37               	goto	u3711
 12305  0BCF  2BD1               	goto	u3710
 12306  0BD0  2BD2               u3711:
 12307  0BD1                     	goto	l3125
 12308  0BD1  2BD5               u3710:
 12309  0BD2                     	line	177
 12310                           	
 12311                           l3123:	
 12312  0BD2                     	setc
 12313  0BD2  1403               	rlf	(___fladd@grs),f
 12314  0BD3  0DB7               	line	178
 12315                           	goto	l3127
 12316  0BD4  2BD8               	line	179
 12317                           	
 12318                           l852:	
 12319  0BD5                     	line	180
 12320                           	
 12321                           l3125:	
 12322  0BD5                     	clrc
 12323  0BD5  1003               	rlf	(___fladd@grs),f
 12324  0BD6  0DB7               
 12325                           	goto	l3127
 12326  0BD7  2BD8               	line	181
 12327                           	
 12328                           l853:	
 12329  0BD8                     	line	182
 12330                           	
 12331                           l3127:	
 12332  0BD8                     	movf	((___fladd@bexp)),w
 12333  0BD8  0836               	btfsc	status,2
 12334  0BD9  1903               	goto	u3721
 12335  0BDA  2BDC               	goto	u3720
 12336  0BDB  2BDD               u3721:
 12337  0BDC                     	goto	l3131
 12338  0BDC  2BE1               u3720:
 12339  0BDD                     	line	183
 12340                           	
 12341                           l3129:	
 12342  0BDD                     	movlw	01h
 12343  0BDD  3001               	subwf	(___fladd@bexp),f
 12344  0BDE  02B6               	goto	l3131
 12345  0BDF  2BE1               	line	184
 12346                           	
 12347                           l854:	
 12348  0BE0                     	goto	l3131
 12349  0BE0  2BE1               	line	185
 12350                           	
 12351                           l849:	
 12352  0BE1                     	line	171
 12353                           	
 12354                           l3131:	
 12355  0BE1                     	btfss	(___fladd@b+2),(23)&7
 12356  0BE1  1FA2               	goto	u3731
 12357  0BE2  2BE4               	goto	u3730
 12358  0BE3  2BE5               u3731:
 12359  0BE4                     	goto	l3117
 12360  0BE4  2BC2               u3730:
 12361  0BE5                     	goto	l3133
 12362  0BE5  2BE7               	
 12363                           l855:	
 12364  0BE6                     	goto	l3133
 12365  0BE6  2BE7               	line	186
 12366                           	
 12367                           l844:	
 12368  0BE7                     	line	192
 12369                           	
 12370                           l3133:	
 12371  0BE7                     	clrf	(___fladd@aexp)
 12372  0BE7  01B5               	line	193
 12373                           	
 12374                           l3135:	
 12375  0BE8                     	btfss	(___fladd@grs),(7)&7
 12376  0BE8  1FB7               	goto	u3741
 12377  0BE9  2BEB               	goto	u3740
 12378  0BEA  2BEC               u3741:
 12379  0BEB                     	goto	l3143
 12380  0BEB  2BFE               u3740:
 12381  0BEC                     	line	194
 12382                           	
 12383                           l3137:	
 12384  0BEC                     	movf	(___fladd@grs),w
 12385  0BEC  0837               	andlw	07Fh
 12386  0BED  397F               	btfsc	status,2
 12387  0BEE  1903               	goto	u3751
 12388  0BEF  2BF1               	goto	u3750
 12389  0BF0  2BF2               u3751:
 12390  0BF1                     	goto	l857
 12391  0BF1  2BF5               u3750:
 12392  0BF2                     	line	195
 12393                           	
 12394                           l3139:	
 12395  0BF2                     	clrf	(___fladd@aexp)
 12396  0BF2  01B5               	incf	(___fladd@aexp),f
 12397  0BF3  0AB5               	line	196
 12398                           	goto	l3143
 12399  0BF4  2BFE               	line	197
 12400                           	
 12401                           l857:	
 12402  0BF5                     	line	198
 12403                           	btfss	(___fladd@b),(0)&7
 12404  0BF5  1C20               	goto	u3761
 12405  0BF6  2BF8               	goto	u3760
 12406  0BF7  2BF9               u3761:
 12407  0BF8                     	goto	l3143
 12408  0BF8  2BFE               u3760:
 12409  0BF9                     	line	199
 12410                           	
 12411                           l3141:	
 12412  0BF9                     	clrf	(___fladd@aexp)
 12413  0BF9  01B5               	incf	(___fladd@aexp),f
 12414  0BFA  0AB5               	goto	l3143
 12415  0BFB  2BFE               	line	200
 12416                           	
 12417                           l859:	
 12418  0BFC                     	goto	l3143
 12419  0BFC  2BFE               	line	201
 12420                           	
 12421                           l858:	
 12422  0BFD                     	goto	l3143
 12423  0BFD  2BFE               	line	202
 12424                           	
 12425                           l856:	
 12426  0BFE                     	line	203
 12427                           	
 12428                           l3143:	
 12429  0BFE                     	movf	((___fladd@aexp)),w
 12430  0BFE  0835               	btfsc	status,2
 12431  0BFF  1903               	goto	u3771
 12432  0C00  2C02               	goto	u3770
 12433  0C01  2C03               u3771:
 12434  0C02                     	goto	l860
 12435  0C02  2C32               u3770:
 12436  0C03                     	line	204
 12437                           	
 12438                           l3145:	
 12439  0C03                     	movlw	01h
 12440  0C03  3001               	addwf	(___fladd@b),f
 12441  0C04  07A0               	movlw	0
 12442  0C05  3000               	addwfc	(___fladd@b+1),f
 12443  0C06  3DA1               	movlw	0
 12444  0C07  3000               	addwfc	(___fladd@b+2),f
 12445  0C08  3DA2               	movlw	0
 12446  0C09  3000               	addwfc	(___fladd@b+3),f
 12447  0C0A  3DA3               	line	205
 12448                           	
 12449                           l3147:	
 12450  0C0B                     	btfss	(___fladd@b+3),(24)&7
 12451  0C0B  1C23               	goto	u3781
 12452  0C0C  2C0E               	goto	u3780
 12453  0C0D  2C0F               u3781:
 12454  0C0E                     	goto	l860
 12455  0C0E  2C32               u3780:
 12456  0C0F                     	line	206
 12457                           	
 12458                           l3149:	
 12459  0C0F                     	movf	(___fladd@b),w
 12460  0C0F  0820               	movwf	(??___fladd+0)+0
 12461  0C10  00A8               	movf	(___fladd@b+1),w
 12462  0C11  0821               	movwf	((??___fladd+0)+0+1)
 12463  0C12  00A9               	movf	(___fladd@b+2),w
 12464  0C13  0822               	movwf	((??___fladd+0)+0+2)
 12465  0C14  00AA               	movf	(___fladd@b+3),w
 12466  0C15  0823               	movwf	((??___fladd+0)+0+3)
 12467  0C16  00AB               	movlw	01h
 12468  0C17  3001               	movwf	(??___fladd+4)+0
 12469  0C18  00AC               u3795:
 12470  0C19                     	asrf	(??___fladd+0)+3,f
 12471  0C19  37AB               	rrf	(??___fladd+0)+2,f
 12472  0C1A  0CAA               	rrf	(??___fladd+0)+1,f
 12473  0C1B  0CA9               	rrf	(??___fladd+0)+0,f
 12474  0C1C  0CA8               u3790:
 12475  0C1D                     	decfsz	(??___fladd+4)+0,f
 12476  0C1D  0BAC               	goto	u3795
 12477  0C1E  2C19               	movf	3+(??___fladd+0)+0,w
 12478  0C1F  082B               	movwf	(___fladd@b+3)
 12479  0C20  00A3               	movf	2+(??___fladd+0)+0,w
 12480  0C21  082A               	movwf	(___fladd@b+2)
 12481  0C22  00A2               	movf	1+(??___fladd+0)+0,w
 12482  0C23  0829               	movwf	(___fladd@b+1)
 12483  0C24  00A1               	movf	0+(??___fladd+0)+0,w
 12484  0C25  0828               	movwf	(___fladd@b)
 12485  0C26  00A0               
 12486                           	line	207
 12487                           		incf	((___fladd@bexp)),w
 12488  0C27  0A36               	btfsc	status,2
 12489  0C28  1903               	goto	u3801
 12490  0C29  2C2B               	goto	u3800
 12491  0C2A  2C2C               u3801:
 12492  0C2B                     	goto	l860
 12493  0C2B  2C32               u3800:
 12494  0C2C                     	line	208
 12495                           	
 12496                           l3151:	
 12497  0C2C                     	movlw	low(01h)
 12498  0C2C  3001               	movwf	(??___fladd+0)+0
 12499  0C2D  00A8               	movf	(??___fladd+0)+0,w
 12500  0C2E  0828               	addwf	(___fladd@bexp),f
 12501  0C2F  07B6               	goto	l860
 12502  0C30  2C32               	line	209
 12503                           	
 12504                           l862:	
 12505  0C31                     	goto	l860
 12506  0C31  2C32               	line	210
 12507                           	
 12508                           l861:	
 12509  0C32                     	line	211
 12510                           	
 12511                           l860:	
 12512  0C32                     	line	215
 12513                           		incf	((___fladd@bexp)),w
 12514  0C32  0A36               	btfsc	status,2
 12515  0C33  1903               	goto	u3811
 12516  0C34  2C36               	goto	u3810
 12517  0C35  2C37               u3811:
 12518  0C36                     	goto	l3155
 12519  0C36  2C3D               u3810:
 12520  0C37                     	
 12521                           l3153:	
 12522  0C37                     	movf	((___fladd@bexp)),w
 12523  0C37  0836               	btfss	status,2
 12524  0C38  1D03               	goto	u3821
 12525  0C39  2C3B               	goto	u3820
 12526  0C3A  2C3C               u3821:
 12527  0C3B                     	goto	l3161
 12528  0C3B  2C4D               u3820:
 12529  0C3C                     	goto	l3155
 12530  0C3C  2C3D               	
 12531                           l865:	
 12532  0C3D                     	line	216
 12533                           	
 12534                           l3155:	
 12535  0C3D                     	movlw	high highword(0)
 12536  0C3D  3000               	movwf	(___fladd@b+3)
 12537  0C3E  00A3               	movlw	low highword(0)
 12538  0C3F  3000               	movwf	(___fladd@b+2)
 12539  0C40  00A2               	movlw	high(0)
 12540  0C41  3000               	movwf	(___fladd@b+1)
 12541  0C42  00A1               	movlw	low(0)
 12542  0C43  3000               	movwf	(___fladd@b)
 12543  0C44  00A0               
 12544                           	line	218
 12545                           	
 12546                           l3157:	
 12547  0C45                     	movf	((___fladd@bexp)),w
 12548  0C45  0836               	btfss	status,2
 12549  0C46  1D03               	goto	u3831
 12550  0C47  2C49               	goto	u3830
 12551  0C48  2C4A               u3831:
 12552  0C49                     	goto	l3161
 12553  0C49  2C4D               u3830:
 12554  0C4A                     	line	219
 12555                           	
 12556                           l3159:	
 12557  0C4A                     	clrf	(___fladd@signs)
 12558  0C4A  01B4               	goto	l3161
 12559  0C4B  2C4D               	line	220
 12560                           	
 12561                           l866:	
 12562  0C4C                     	goto	l3161
 12563  0C4C  2C4D               	line	221
 12564                           	
 12565                           l863:	
 12566  0C4D                     	line	225
 12567                           	
 12568                           l3161:	
 12569  0C4D                     	btfss	(___fladd@bexp),(0)&7
 12570  0C4D  1C36               	goto	u3841
 12571  0C4E  2C50               	goto	u3840
 12572  0C4F  2C51               u3841:
 12573  0C50                     	goto	l3165
 12574  0C50  2C53               u3840:
 12575  0C51                     	line	226
 12576                           	
 12577                           l3163:	
 12578  0C51                     	bsf	0+(___fladd@b)+02h+(7/8),(7)&7
 12579  0C51  17A2               	line	227
 12580                           	goto	l868
 12581  0C52  2C57               	line	229
 12582                           	
 12583                           l867:	
 12584  0C53                     	line	230
 12585                           	
 12586                           l3165:	
 12587  0C53                     	movlw	low(07Fh)
 12588  0C53  307F               	movwf	(??___fladd+0)+0
 12589  0C54  00A8               	movf	(??___fladd+0)+0,w
 12590  0C55  0828               	andwf	0+(___fladd@b)+02h,f
 12591  0C56  05A2               	line	231
 12592                           	
 12593                           l868:	
 12594  0C57                     	line	232
 12595                           	lsrf	(___fladd@bexp),w
 12596  0C57  3636               	movwf	(??___fladd+0)+0
 12597  0C58  00A8               	movf	(??___fladd+0)+0,w
 12598  0C59  0828               	movwf	0+(___fladd@b)+03h
 12599  0C5A  00A3               	line	233
 12600                           	
 12601                           l3167:	
 12602  0C5B                     	btfss	(___fladd@signs),(7)&7
 12603  0C5B  1FB4               	goto	u3851
 12604  0C5C  2C5E               	goto	u3850
 12605  0C5D  2C5F               u3851:
 12606  0C5E                     	goto	l869
 12607  0C5E  2C60               u3850:
 12608  0C5F                     	line	234
 12609                           	
 12610                           l3169:	
 12611  0C5F                     	bsf	0+(___fladd@b)+03h+(7/8),(7)&7
 12612  0C5F  17A3               	line	235
 12613                           	
 12614                           l869:	
 12615  0C60                     	line	236
 12616                           	line	237
 12617                           	
 12618                           l839:	
 12619  0C60                     	return
 12620  0C60  0008               	opt stack 0
 12621                           GLOBAL	__end_of___fladd
 12622                           	__end_of___fladd:
 12623  0C61                     	signat	___fladd,8316
 12624                           	global	___flneg
 12625                           
 12626 ;; *************** function ___flneg *****************
 12627 ;; Defined at:
 12628 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flneg.c"
 12629 ;; Parameters:    Size  Location     Type
 12630 ;;  f1              4    0[BANK0 ] unsigned char 
 12631 ;; Auto vars:     Size  Location     Type
 12632 ;;		None
 12633 ;; Return value:  Size  Location     Type
 12634 ;;                  4    0[BANK0 ] unsigned char 
 12635 ;; Registers used:
 12636 ;;		wreg
 12637 ;; Tracked objects:
 12638 ;;		On entry : 0/0
 12639 ;;		On exit  : 0/0
 12640 ;;		Unchanged: 0/0
 12641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12642 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12645 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12646 ;;Total ram usage:        4 bytes
 12647 ;; Hardware stack levels used:    1
 12648 ;; Hardware stack levels required when called:    3
 12649 ;; This function calls:
 12650 ;;		Nothing
 12651 ;; This function is called by:
 12652 ;;		_efgtoa
 12653 ;; This function uses a non-reentrant model
 12654 ;;
 12655                           psect	text21,local,class=CODE,delta=2,merge=1,group=1
 12656                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flneg.c"
 12657                           	line	15
 12658                           global __ptext21
 12659                           __ptext21:	;psect for function ___flneg
 12660  267B                     psect	text21
 12661                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flneg.c"
 12662                           	line	15
 12663                           	global	__size_of___flneg
 12664                           	__size_of___flneg	equ	__end_of___flneg-___flneg
 12665  000E                     	
 12666                           ___flneg:	
 12667  267B                     ;incstack = 0
 12668                           	opt	stack 7
 12669                           ; Regs used in ___flneg: [wreg]
 12670                           	line	17
 12671                           	
 12672                           l3419:	
 12673  267B                     	movlb 0	; select bank0
 12674  267B  0140               	movf	(___flneg@f1+3),w
 12675  267C  0823               	iorwf	(___flneg@f1+2),w
 12676  267D  0422               	iorwf	(___flneg@f1+1),w
 12677  267E  0421               	iorwf	(___flneg@f1),w
 12678  267F  0420               	skipnz
 12679  2680  1903               	goto	u4521
 12680  2681  2E83               	goto	u4520
 12681  2682  2E84               u4521:
 12682  2683                     	goto	l3423
 12683  2683  2E87               u4520:
 12684  2684                     	line	18
 12685                           	
 12686                           l3421:	
 12687  2684                     	movlw	080h
 12688  2684  3080               	xorwf	(___flneg@f1+3),f
 12689  2685  06A3               	goto	l3423
 12690  2686  2E87               	
 12691                           l714:	
 12692  2687                     	line	19
 12693                           	
 12694                           l3423:	
 12695  2687                     	goto	l715
 12696  2687  2E88               	
 12697                           l3425:	
 12698  2688                     	line	20
 12699                           	
 12700                           l715:	
 12701  2688                     	return
 12702  2688  0008               	opt stack 0
 12703                           GLOBAL	__end_of___flneg
 12704                           	__end_of___flneg:
 12705  2689                     	signat	___flneg,4220
 12706                           	global	___flge
 12707                           
 12708 ;; *************** function ___flge *****************
 12709 ;; Defined at:
 12710 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flge.c"
 12711 ;; Parameters:    Size  Location     Type
 12712 ;;  ff1             4   40[BANK0 ] unsigned char 
 12713 ;;  ff2             4   44[BANK0 ] unsigned char 
 12714 ;; Auto vars:     Size  Location     Type
 12715 ;;		None
 12716 ;; Return value:  Size  Location     Type
 12717 ;;		None               void
 12718 ;; Registers used:
 12719 ;;		wreg, status,2, status,0
 12720 ;; Tracked objects:
 12721 ;;		On entry : 0/0
 12722 ;;		On exit  : 0/0
 12723 ;;		Unchanged: 0/0
 12724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12725 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12727 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12728 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12729 ;;Total ram usage:       16 bytes
 12730 ;; Hardware stack levels used:    1
 12731 ;; Hardware stack levels required when called:    3
 12732 ;; This function calls:
 12733 ;;		Nothing
 12734 ;; This function is called by:
 12735 ;;		_efgtoa
 12736 ;; This function uses a non-reentrant model
 12737 ;;
 12738                           psect	text22,local,class=CODE,delta=2,merge=1,group=1
 12739                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flge.c"
 12740                           	line	4
 12741                           global __ptext22
 12742                           __ptext22:	;psect for function ___flge
 12743  1E9D                     psect	text22
 12744                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flge.c"
 12745                           	line	4
 12746                           	global	__size_of___flge
 12747                           	__size_of___flge	equ	__end_of___flge-___flge
 12748  00AE                     	
 12749                           ___flge:	
 12750  1E9D                     ;incstack = 0
 12751                           	opt	stack 7
 12752                           ; Regs used in ___flge: [wreg+status,2+status,0]
 12753                           	line	7
 12754                           	
 12755                           l3393:	
 12756  1E9D                     	movlw	0
 12757  1E9D  3000               	movlb 0	; select bank0
 12758  1E9E  0140               	andwf	(___flge@ff1),w
 12759  1E9F  0548               	movwf	(??___flge+0)+0
 12760  1EA0  00D0               	movlw	0
 12761  1EA1  3000               	andwf	(___flge@ff1+1),w
 12762  1EA2  0549               	movwf	((??___flge+0)+0+1)
 12763  1EA3  00D1               	movlw	080h
 12764  1EA4  3080               	andwf	(___flge@ff1+2),w
 12765  1EA5  054A               	movwf	((??___flge+0)+0+2)
 12766  1EA6  00D2               	movlw	07Fh
 12767  1EA7  307F               	andwf	(___flge@ff1+3),w
 12768  1EA8  054B               	movwf	((??___flge+0)+0+3)
 12769  1EA9  00D3               	movf	3+(??___flge+0)+0,w
 12770  1EAA  0853               	iorwf	2+(??___flge+0)+0,w
 12771  1EAB  0452               	iorwf	1+(??___flge+0)+0,w
 12772  1EAC  0451               	iorwf	0+(??___flge+0)+0,w
 12773  1EAD  0450               	skipz
 12774  1EAE  1D03               	goto	u4471
 12775  1EAF  2EB1               	goto	u4470
 12776  1EB0  2EB2               u4471:
 12777  1EB1                     	goto	l703
 12778  1EB1  2EBA               u4470:
 12779  1EB2                     	line	8
 12780                           	
 12781                           l3395:	
 12782  1EB2                     	movlw	high highword(0)
 12783  1EB2  3000               	movwf	(___flge@ff1+3)
 12784  1EB3  00CB               	movlw	low highword(0)
 12785  1EB4  3000               	movwf	(___flge@ff1+2)
 12786  1EB5  00CA               	movlw	high(0)
 12787  1EB6  3000               	movwf	(___flge@ff1+1)
 12788  1EB7  00C9               	movlw	low(0)
 12789  1EB8  3000               	movwf	(___flge@ff1)
 12790  1EB9  00C8               
 12791                           	
 12792                           l703:	
 12793  1EBA                     	line	9
 12794                           	movlw	0
 12795  1EBA  3000               	andwf	(___flge@ff2),w
 12796  1EBB  054C               	movwf	(??___flge+0)+0
 12797  1EBC  00D0               	movlw	0
 12798  1EBD  3000               	andwf	(___flge@ff2+1),w
 12799  1EBE  054D               	movwf	((??___flge+0)+0+1)
 12800  1EBF  00D1               	movlw	080h
 12801  1EC0  3080               	andwf	(___flge@ff2+2),w
 12802  1EC1  054E               	movwf	((??___flge+0)+0+2)
 12803  1EC2  00D2               	movlw	07Fh
 12804  1EC3  307F               	andwf	(___flge@ff2+3),w
 12805  1EC4  054F               	movwf	((??___flge+0)+0+3)
 12806  1EC5  00D3               	movf	3+(??___flge+0)+0,w
 12807  1EC6  0853               	iorwf	2+(??___flge+0)+0,w
 12808  1EC7  0452               	iorwf	1+(??___flge+0)+0,w
 12809  1EC8  0451               	iorwf	0+(??___flge+0)+0,w
 12810  1EC9  0450               	skipz
 12811  1ECA  1D03               	goto	u4481
 12812  1ECB  2ECD               	goto	u4480
 12813  1ECC  2ECE               u4481:
 12814  1ECD                     	goto	l3399
 12815  1ECD  2ED7               u4480:
 12816  1ECE                     	line	10
 12817                           	
 12818                           l3397:	
 12819  1ECE                     	movlw	high highword(0)
 12820  1ECE  3000               	movwf	(___flge@ff2+3)
 12821  1ECF  00CF               	movlw	low highword(0)
 12822  1ED0  3000               	movwf	(___flge@ff2+2)
 12823  1ED1  00CE               	movlw	high(0)
 12824  1ED2  3000               	movwf	(___flge@ff2+1)
 12825  1ED3  00CD               	movlw	low(0)
 12826  1ED4  3000               	movwf	(___flge@ff2)
 12827  1ED5  00CC               
 12828                           	goto	l3399
 12829  1ED6  2ED7               	
 12830                           l704:	
 12831  1ED7                     	line	12
 12832                           	
 12833                           l3399:	
 12834  1ED7                     	btfss	(___flge@ff1+3),(31)&7
 12835  1ED7  1FCB               	goto	u4491
 12836  1ED8  2EDA               	goto	u4490
 12837  1ED9  2EDB               u4491:
 12838  1EDA                     	goto	l3403
 12839  1EDA  2F03               u4490:
 12840  1EDB                     	line	13
 12841                           	
 12842                           l3401:	
 12843  1EDB                     	movlw	0
 12844  1EDB  3000               	movwf	((??___flge+0)+0)
 12845  1EDC  00D0               	movlw	0
 12846  1EDD  3000               	movwf	((??___flge+0)+0+1)
 12847  1EDE  00D1               	movlw	0
 12848  1EDF  3000               	movwf	((??___flge+0)+0+2)
 12849  1EE0  00D2               	movlw	080h
 12850  1EE1  3080               	movwf	((??___flge+0)+0+3)
 12851  1EE2  00D3               	comf	(___flge@ff1),w
 12852  1EE3  0948               	movwf	(??___flge+4)+0
 12853  1EE4  00D4               	comf	(___flge@ff1+1),w
 12854  1EE5  0949               	movwf	((??___flge+4)+0+1)
 12855  1EE6  00D5               	comf	(___flge@ff1+2),w
 12856  1EE7  094A               	movwf	((??___flge+4)+0+2)
 12857  1EE8  00D6               	comf	(___flge@ff1+3),w
 12858  1EE9  094B               	movwf	((??___flge+4)+0+3)
 12859  1EEA  00D7               	incf	(??___flge+4)+0,f
 12860  1EEB  0AD4               	skipnz
 12861  1EEC  1903               	incf	((??___flge+4)+0+1),f
 12862  1EED  0AD5               	skipnz
 12863  1EEE  1903               	incf	((??___flge+4)+0+2),f
 12864  1EEF  0AD6               	skipnz
 12865  1EF0  1903               	incf	((??___flge+4)+0+3),f
 12866  1EF1  0AD7               	movf	0+(??___flge+4)+0,w
 12867  1EF2  0854               	addwf	(??___flge+0)+0,f
 12868  1EF3  07D0               	movf	1+(??___flge+4)+0,w
 12869  1EF4  0855               	addwfc	(??___flge+0)+1,f
 12870  1EF5  3DD1               	movf	2+(??___flge+4)+0,w
 12871  1EF6  0856               	addwfc	(??___flge+0)+2,f
 12872  1EF7  3DD2               	movf	3+(??___flge+4)+0,w
 12873  1EF8  0857               	addwfc	(??___flge+0)+3,f
 12874  1EF9  3DD3               	movf	3+(??___flge+0)+0,w
 12875  1EFA  0853               	movwf	(___flge@ff1+3)
 12876  1EFB  00CB               	movf	2+(??___flge+0)+0,w
 12877  1EFC  0852               	movwf	(___flge@ff1+2)
 12878  1EFD  00CA               	movf	1+(??___flge+0)+0,w
 12879  1EFE  0851               	movwf	(___flge@ff1+1)
 12880  1EFF  00C9               	movf	0+(??___flge+0)+0,w
 12881  1F00  0850               	movwf	(___flge@ff1)
 12882  1F01  00C8               
 12883                           	goto	l3403
 12884  1F02  2F03               	
 12885                           l705:	
 12886  1F03                     	line	14
 12887                           	
 12888                           l3403:	
 12889  1F03                     	btfss	(___flge@ff2+3),(31)&7
 12890  1F03  1FCF               	goto	u4501
 12891  1F04  2F06               	goto	u4500
 12892  1F05  2F07               u4501:
 12893  1F06                     	goto	l3407
 12894  1F06  2F2F               u4500:
 12895  1F07                     	line	15
 12896                           	
 12897                           l3405:	
 12898  1F07                     	movlw	0
 12899  1F07  3000               	movwf	((??___flge+0)+0)
 12900  1F08  00D0               	movlw	0
 12901  1F09  3000               	movwf	((??___flge+0)+0+1)
 12902  1F0A  00D1               	movlw	0
 12903  1F0B  3000               	movwf	((??___flge+0)+0+2)
 12904  1F0C  00D2               	movlw	080h
 12905  1F0D  3080               	movwf	((??___flge+0)+0+3)
 12906  1F0E  00D3               	comf	(___flge@ff2),w
 12907  1F0F  094C               	movwf	(??___flge+4)+0
 12908  1F10  00D4               	comf	(___flge@ff2+1),w
 12909  1F11  094D               	movwf	((??___flge+4)+0+1)
 12910  1F12  00D5               	comf	(___flge@ff2+2),w
 12911  1F13  094E               	movwf	((??___flge+4)+0+2)
 12912  1F14  00D6               	comf	(___flge@ff2+3),w
 12913  1F15  094F               	movwf	((??___flge+4)+0+3)
 12914  1F16  00D7               	incf	(??___flge+4)+0,f
 12915  1F17  0AD4               	skipnz
 12916  1F18  1903               	incf	((??___flge+4)+0+1),f
 12917  1F19  0AD5               	skipnz
 12918  1F1A  1903               	incf	((??___flge+4)+0+2),f
 12919  1F1B  0AD6               	skipnz
 12920  1F1C  1903               	incf	((??___flge+4)+0+3),f
 12921  1F1D  0AD7               	movf	0+(??___flge+4)+0,w
 12922  1F1E  0854               	addwf	(??___flge+0)+0,f
 12923  1F1F  07D0               	movf	1+(??___flge+4)+0,w
 12924  1F20  0855               	addwfc	(??___flge+0)+1,f
 12925  1F21  3DD1               	movf	2+(??___flge+4)+0,w
 12926  1F22  0856               	addwfc	(??___flge+0)+2,f
 12927  1F23  3DD2               	movf	3+(??___flge+4)+0,w
 12928  1F24  0857               	addwfc	(??___flge+0)+3,f
 12929  1F25  3DD3               	movf	3+(??___flge+0)+0,w
 12930  1F26  0853               	movwf	(___flge@ff2+3)
 12931  1F27  00CF               	movf	2+(??___flge+0)+0,w
 12932  1F28  0852               	movwf	(___flge@ff2+2)
 12933  1F29  00CE               	movf	1+(??___flge+0)+0,w
 12934  1F2A  0851               	movwf	(___flge@ff2+1)
 12935  1F2B  00CD               	movf	0+(??___flge+0)+0,w
 12936  1F2C  0850               	movwf	(___flge@ff2)
 12937  1F2D  00CC               
 12938                           	goto	l3407
 12939  1F2E  2F2F               	
 12940                           l706:	
 12941  1F2F                     	line	16
 12942                           	
 12943                           l3407:	
 12944  1F2F                     	movlw	080h
 12945  1F2F  3080               	xorwf	(___flge@ff1+3),f
 12946  1F30  06CB               	line	17
 12947                           	
 12948                           l3409:	
 12949  1F31                     	movlw	080h
 12950  1F31  3080               	xorwf	(___flge@ff2+3),f
 12951  1F32  06CF               	line	18
 12952                           	
 12953                           l3411:	
 12954  1F33                     	movf	(___flge@ff2+3),w
 12955  1F33  084F               	subwf	(___flge@ff1+3),w
 12956  1F34  024B               	skipz
 12957  1F35  1D03               	goto	u4515
 12958  1F36  2F41               	movf	(___flge@ff2+2),w
 12959  1F37  084E               	subwf	(___flge@ff1+2),w
 12960  1F38  024A               	skipz
 12961  1F39  1D03               	goto	u4515
 12962  1F3A  2F41               	movf	(___flge@ff2+1),w
 12963  1F3B  084D               	subwf	(___flge@ff1+1),w
 12964  1F3C  0249               	skipz
 12965  1F3D  1D03               	goto	u4515
 12966  1F3E  2F41               	movf	(___flge@ff2),w
 12967  1F3F  084C               	subwf	(___flge@ff1),w
 12968  1F40  0248               u4515:
 12969  1F41                     	skipnc
 12970  1F41  1803               	goto	u4511
 12971  1F42  2F44               	goto	u4510
 12972  1F43  2F45               u4511:
 12973  1F44                     	goto	l3415
 12974  1F44  2F47               u4510:
 12975  1F45                     	
 12976                           l3413:	
 12977  1F45                     	clrc
 12978  1F45  1003               	
 12979                           	goto	l711
 12980  1F46  2F4A               	
 12981                           l708:	
 12982  1F47                     	
 12983                           l3415:	
 12984  1F47                     	setc
 12985  1F47  1403               	
 12986                           	goto	l711
 12987  1F48  2F4A               	
 12988                           l710:	
 12989  1F49                     	goto	l711
 12990  1F49  2F4A               	
 12991                           l3417:	
 12992  1F4A                     	line	19
 12993                           	
 12994                           l711:	
 12995  1F4A                     	return
 12996  1F4A  0008               	opt stack 0
 12997                           GLOBAL	__end_of___flge
 12998                           	__end_of___flge:
 12999  1F4B                     	signat	___flge,8312
 13000                           	global	___fleq
 13001                           
 13002 ;; *************** function ___fleq *****************
 13003 ;; Defined at:
 13004 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fleq.c"
 13005 ;; Parameters:    Size  Location     Type
 13006 ;;  ff1             4    0[BANK0 ] unsigned char 
 13007 ;;  ff2             4    4[BANK0 ] unsigned char 
 13008 ;; Auto vars:     Size  Location     Type
 13009 ;;		None
 13010 ;; Return value:  Size  Location     Type
 13011 ;;		None               void
 13012 ;; Registers used:
 13013 ;;		wreg, status,2, status,0
 13014 ;; Tracked objects:
 13015 ;;		On entry : 0/0
 13016 ;;		On exit  : 0/0
 13017 ;;		Unchanged: 0/0
 13018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13019 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13021 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13022 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13023 ;;Total ram usage:       12 bytes
 13024 ;; Hardware stack levels used:    1
 13025 ;; Hardware stack levels required when called:    3
 13026 ;; This function calls:
 13027 ;;		Nothing
 13028 ;; This function is called by:
 13029 ;;		_efgtoa
 13030 ;; This function uses a non-reentrant model
 13031 ;;
 13032                           psect	text23,local,class=CODE,delta=2,merge=1,group=1
 13033                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fleq.c"
 13034                           	line	4
 13035                           global __ptext23
 13036                           __ptext23:	;psect for function ___fleq
 13037  07A7                     psect	text23
 13038                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fleq.c"
 13039                           	line	4
 13040                           	global	__size_of___fleq
 13041                           	__size_of___fleq	equ	__end_of___fleq-___fleq
 13042  0051                     	
 13043                           ___fleq:	
 13044  07A7                     ;incstack = 0
 13045                           	opt	stack 7
 13046                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 13047                           	line	7
 13048                           	
 13049                           l3381:	
 13050  07A7                     	movlw	0
 13051  07A7  3000               	movlb 0	; select bank0
 13052  07A8  0140               	andwf	(___fleq@ff1),w
 13053  07A9  0520               	movwf	(??___fleq+0)+0
 13054  07AA  00A8               	movlw	0
 13055  07AB  3000               	andwf	(___fleq@ff1+1),w
 13056  07AC  0521               	movwf	((??___fleq+0)+0+1)
 13057  07AD  00A9               	movlw	080h
 13058  07AE  3080               	andwf	(___fleq@ff1+2),w
 13059  07AF  0522               	movwf	((??___fleq+0)+0+2)
 13060  07B0  00AA               	movlw	07Fh
 13061  07B1  307F               	andwf	(___fleq@ff1+3),w
 13062  07B2  0523               	movwf	((??___fleq+0)+0+3)
 13063  07B3  00AB               	movf	3+(??___fleq+0)+0,w
 13064  07B4  082B               	iorwf	2+(??___fleq+0)+0,w
 13065  07B5  042A               	iorwf	1+(??___fleq+0)+0,w
 13066  07B6  0429               	iorwf	0+(??___fleq+0)+0,w
 13067  07B7  0428               	skipz
 13068  07B8  1D03               	goto	u4441
 13069  07B9  2FBB               	goto	u4440
 13070  07BA  2FBC               u4441:
 13071  07BB                     	goto	l694
 13072  07BB  2FC4               u4440:
 13073  07BC                     	line	8
 13074                           	
 13075                           l3383:	
 13076  07BC                     	movlw	high highword(0)
 13077  07BC  3000               	movwf	(___fleq@ff1+3)
 13078  07BD  00A3               	movlw	low highword(0)
 13079  07BE  3000               	movwf	(___fleq@ff1+2)
 13080  07BF  00A2               	movlw	high(0)
 13081  07C0  3000               	movwf	(___fleq@ff1+1)
 13082  07C1  00A1               	movlw	low(0)
 13083  07C2  3000               	movwf	(___fleq@ff1)
 13084  07C3  00A0               
 13085                           	
 13086                           l694:	
 13087  07C4                     	line	9
 13088                           	movlw	0
 13089  07C4  3000               	andwf	(___fleq@ff2),w
 13090  07C5  0524               	movwf	(??___fleq+0)+0
 13091  07C6  00A8               	movlw	0
 13092  07C7  3000               	andwf	(___fleq@ff2+1),w
 13093  07C8  0525               	movwf	((??___fleq+0)+0+1)
 13094  07C9  00A9               	movlw	080h
 13095  07CA  3080               	andwf	(___fleq@ff2+2),w
 13096  07CB  0526               	movwf	((??___fleq+0)+0+2)
 13097  07CC  00AA               	movlw	07Fh
 13098  07CD  307F               	andwf	(___fleq@ff2+3),w
 13099  07CE  0527               	movwf	((??___fleq+0)+0+3)
 13100  07CF  00AB               	movf	3+(??___fleq+0)+0,w
 13101  07D0  082B               	iorwf	2+(??___fleq+0)+0,w
 13102  07D1  042A               	iorwf	1+(??___fleq+0)+0,w
 13103  07D2  0429               	iorwf	0+(??___fleq+0)+0,w
 13104  07D3  0428               	skipz
 13105  07D4  1D03               	goto	u4451
 13106  07D5  2FD7               	goto	u4450
 13107  07D6  2FD8               u4451:
 13108  07D7                     	goto	l695
 13109  07D7  2FE0               u4450:
 13110  07D8                     	line	10
 13111                           	
 13112                           l3385:	
 13113  07D8                     	movlw	high highword(0)
 13114  07D8  3000               	movwf	(___fleq@ff2+3)
 13115  07D9  00A7               	movlw	low highword(0)
 13116  07DA  3000               	movwf	(___fleq@ff2+2)
 13117  07DB  00A6               	movlw	high(0)
 13118  07DC  3000               	movwf	(___fleq@ff2+1)
 13119  07DD  00A5               	movlw	low(0)
 13120  07DE  3000               	movwf	(___fleq@ff2)
 13121  07DF  00A4               
 13122                           	
 13123                           l695:	
 13124  07E0                     	line	11
 13125                           	movf	(___fleq@ff2+3),w
 13126  07E0  0827               	xorwf	(___fleq@ff1+3),w
 13127  07E1  0623               	skipz
 13128  07E2  1D03               	goto	u4465
 13129  07E3  2FEE               	movf	(___fleq@ff2+2),w
 13130  07E4  0826               	xorwf	(___fleq@ff1+2),w
 13131  07E5  0622               	skipz
 13132  07E6  1D03               	goto	u4465
 13133  07E7  2FEE               	movf	(___fleq@ff2+1),w
 13134  07E8  0825               	xorwf	(___fleq@ff1+1),w
 13135  07E9  0621               	skipz
 13136  07EA  1D03               	goto	u4465
 13137  07EB  2FEE               	movf	(___fleq@ff2),w
 13138  07EC  0824               	xorwf	(___fleq@ff1),w
 13139  07ED  0620               u4465:
 13140  07EE                     	skipnz
 13141  07EE  1903               	goto	u4461
 13142  07EF  2FF1               	goto	u4460
 13143  07F0  2FF2               u4461:
 13144  07F1                     	goto	l3389
 13145  07F1  2FF4               u4460:
 13146  07F2                     	
 13147                           l3387:	
 13148  07F2                     	clrc
 13149  07F2  1003               	
 13150                           	goto	l700
 13151  07F3  2FF7               	
 13152                           l697:	
 13153  07F4                     	
 13154                           l3389:	
 13155  07F4                     	setc
 13156  07F4  1403               	
 13157                           	goto	l700
 13158  07F5  2FF7               	
 13159                           l699:	
 13160  07F6                     	goto	l700
 13161  07F6  2FF7               	
 13162                           l3391:	
 13163  07F7                     	line	12
 13164                           	
 13165                           l700:	
 13166  07F7                     	return
 13167  07F7  0008               	opt stack 0
 13168                           GLOBAL	__end_of___fleq
 13169                           	__end_of___fleq:
 13170  07F8                     	signat	___fleq,8312
 13171                           	global	___awmod
 13172                           
 13173 ;; *************** function ___awmod *****************
 13174 ;; Defined at:
 13175 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 13176 ;; Parameters:    Size  Location     Type
 13177 ;;  divisor         2    0[BANK0 ] int 
 13178 ;;  dividend        2    2[BANK0 ] int 
 13179 ;; Auto vars:     Size  Location     Type
 13180 ;;  sign            1    6[BANK0 ] unsigned char 
 13181 ;;  counter         1    5[BANK0 ] unsigned char 
 13182 ;; Return value:  Size  Location     Type
 13183 ;;                  2    0[BANK0 ] int 
 13184 ;; Registers used:
 13185 ;;		wreg, status,2, status,0
 13186 ;; Tracked objects:
 13187 ;;		On entry : 0/0
 13188 ;;		On exit  : 0/0
 13189 ;;		Unchanged: 0/0
 13190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13191 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13192 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13193 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13194 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13195 ;;Total ram usage:        7 bytes
 13196 ;; Hardware stack levels used:    1
 13197 ;; Hardware stack levels required when called:    3
 13198 ;; This function calls:
 13199 ;;		Nothing
 13200 ;; This function is called by:
 13201 ;;		_efgtoa
 13202 ;; This function uses a non-reentrant model
 13203 ;;
 13204                           psect	text24,local,class=CODE,delta=2,merge=1,group=1
 13205                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 13206                           	line	5
 13207                           global __ptext24
 13208                           __ptext24:	;psect for function ___awmod
 13209  1B4D                     psect	text24
 13210                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 13211                           	line	5
 13212                           	global	__size_of___awmod
 13213                           	__size_of___awmod	equ	__end_of___awmod-___awmod
 13214  005E                     	
 13215                           ___awmod:	
 13216  1B4D                     ;incstack = 0
 13217                           	opt	stack 7
 13218                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 13219                           	line	12
 13220                           	
 13221                           l3343:	
 13222  1B4D                     	movlb 0	; select bank0
 13223  1B4D  0140               	clrf	(___awmod@sign)
 13224  1B4E  01A6               	line	13
 13225                           	
 13226                           l3345:	
 13227  1B4F                     	btfss	(___awmod@dividend+1),7
 13228  1B4F  1FA3               	goto	u4351
 13229  1B50  2B52               	goto	u4350
 13230  1B51  2B53               u4351:
 13231  1B52                     	goto	l3351
 13232  1B52  2B5B               u4350:
 13233  1B53                     	line	14
 13234                           	
 13235                           l3347:	
 13236  1B53                     	comf	(___awmod@dividend),f
 13237  1B53  09A2               	comf	(___awmod@dividend+1),f
 13238  1B54  09A3               	incf	(___awmod@dividend),f
 13239  1B55  0AA2               	skipnz
 13240  1B56  1903               	incf	(___awmod@dividend+1),f
 13241  1B57  0AA3               	line	15
 13242                           	
 13243                           l3349:	
 13244  1B58                     	clrf	(___awmod@sign)
 13245  1B58  01A6               	incf	(___awmod@sign),f
 13246  1B59  0AA6               	goto	l3351
 13247  1B5A  2B5B               	line	16
 13248                           	
 13249                           l681:	
 13250  1B5B                     	line	17
 13251                           	
 13252                           l3351:	
 13253  1B5B                     	btfss	(___awmod@divisor+1),7
 13254  1B5B  1FA1               	goto	u4361
 13255  1B5C  2B5E               	goto	u4360
 13256  1B5D  2B5F               u4361:
 13257  1B5E                     	goto	l3355
 13258  1B5E  2B65               u4360:
 13259  1B5F                     	line	18
 13260                           	
 13261                           l3353:	
 13262  1B5F                     	comf	(___awmod@divisor),f
 13263  1B5F  09A0               	comf	(___awmod@divisor+1),f
 13264  1B60  09A1               	incf	(___awmod@divisor),f
 13265  1B61  0AA0               	skipnz
 13266  1B62  1903               	incf	(___awmod@divisor+1),f
 13267  1B63  0AA1               	goto	l3355
 13268  1B64  2B65               	
 13269                           l682:	
 13270  1B65                     	line	19
 13271                           	
 13272                           l3355:	
 13273  1B65                     	movf	((___awmod@divisor)),w
 13274  1B65  0820               iorwf	((___awmod@divisor+1)),w
 13275  1B66  0421               	btfsc	status,2
 13276  1B67  1903               	goto	u4371
 13277  1B68  2B6A               	goto	u4370
 13278  1B69  2B6B               u4371:
 13279  1B6A                     	goto	l3373
 13280  1B6A  2B9A               u4370:
 13281  1B6B                     	line	20
 13282                           	
 13283                           l3357:	
 13284  1B6B                     	clrf	(___awmod@counter)
 13285  1B6B  01A5               	incf	(___awmod@counter),f
 13286  1B6C  0AA5               	line	21
 13287                           	goto	l3363
 13288  1B6D  2B78               	
 13289                           l685:	
 13290  1B6E                     	line	22
 13291                           	
 13292                           l3359:	
 13293  1B6E                     	movlw	01h
 13294  1B6E  3001               	
 13295                           u4385:
 13296  1B6F                     	lslf	(___awmod@divisor),f
 13297  1B6F  35A0               	rlf	(___awmod@divisor+1),f
 13298  1B70  0DA1               	decfsz	wreg,f
 13299  1B71  0B89               	goto	u4385
 13300  1B72  2B6F               	line	23
 13301                           	
 13302                           l3361:	
 13303  1B73                     	movlw	low(01h)
 13304  1B73  3001               	movwf	(??___awmod+0)+0
 13305  1B74  00A4               	movf	(??___awmod+0)+0,w
 13306  1B75  0824               	addwf	(___awmod@counter),f
 13307  1B76  07A5               	goto	l3363
 13308  1B77  2B78               	line	24
 13309                           	
 13310                           l684:	
 13311  1B78                     	line	21
 13312                           	
 13313                           l3363:	
 13314  1B78                     	btfss	(___awmod@divisor+1),(15)&7
 13315  1B78  1FA1               	goto	u4391
 13316  1B79  2B7B               	goto	u4390
 13317  1B7A  2B7C               u4391:
 13318  1B7B                     	goto	l3359
 13319  1B7B  2B6E               u4390:
 13320  1B7C                     	goto	l3365
 13321  1B7C  2B7E               	
 13322                           l686:	
 13323  1B7D                     	goto	l3365
 13324  1B7D  2B7E               	line	25
 13325                           	
 13326                           l687:	
 13327  1B7E                     	line	26
 13328                           	
 13329                           l3365:	
 13330  1B7E                     	movf	(___awmod@divisor+1),w
 13331  1B7E  0821               	subwf	(___awmod@dividend+1),w
 13332  1B7F  0223               	skipz
 13333  1B80  1D03               	goto	u4405
 13334  1B81  2B84               	movf	(___awmod@divisor),w
 13335  1B82  0820               	subwf	(___awmod@dividend),w
 13336  1B83  0222               u4405:
 13337  1B84                     	skipc
 13338  1B84  1C03               	goto	u4401
 13339  1B85  2B87               	goto	u4400
 13340  1B86  2B88               u4401:
 13341  1B87                     	goto	l3369
 13342  1B87  2B8D               u4400:
 13343  1B88                     	line	27
 13344                           	
 13345                           l3367:	
 13346  1B88                     	movf	(___awmod@divisor),w
 13347  1B88  0820               	subwf	(___awmod@dividend),f
 13348  1B89  02A2               	movf	(___awmod@divisor+1),w
 13349  1B8A  0821               	subwfb	(___awmod@dividend+1),f
 13350  1B8B  3BA3               	goto	l3369
 13351  1B8C  2B8D               	
 13352                           l688:	
 13353  1B8D                     	line	28
 13354                           	
 13355                           l3369:	
 13356  1B8D                     	movlw	01h
 13357  1B8D  3001               	
 13358                           u4415:
 13359  1B8E                     	lsrf	(___awmod@divisor+1),f
 13360  1B8E  36A1               	rrf	(___awmod@divisor),f
 13361  1B8F  0CA0               	decfsz	wreg,f
 13362  1B90  0B89               	goto	u4415
 13363  1B91  2B8E               	line	29
 13364                           	
 13365                           l3371:	
 13366  1B92                     	movlw	01h
 13367  1B92  3001               	subwf	(___awmod@counter),f
 13368  1B93  02A5               	btfss	status,2
 13369  1B94  1D03               	goto	u4421
 13370  1B95  2B97               	goto	u4420
 13371  1B96  2B98               u4421:
 13372  1B97                     	goto	l3365
 13373  1B97  2B7E               u4420:
 13374  1B98                     	goto	l3373
 13375  1B98  2B9A               	
 13376                           l689:	
 13377  1B99                     	goto	l3373
 13378  1B99  2B9A               	line	30
 13379                           	
 13380                           l683:	
 13381  1B9A                     	line	31
 13382                           	
 13383                           l3373:	
 13384  1B9A                     	movf	((___awmod@sign)),w
 13385  1B9A  0826               	btfsc	status,2
 13386  1B9B  1903               	goto	u4431
 13387  1B9C  2B9E               	goto	u4430
 13388  1B9D  2B9F               u4431:
 13389  1B9E                     	goto	l3377
 13390  1B9E  2BA5               u4430:
 13391  1B9F                     	line	32
 13392                           	
 13393                           l3375:	
 13394  1B9F                     	comf	(___awmod@dividend),f
 13395  1B9F  09A2               	comf	(___awmod@dividend+1),f
 13396  1BA0  09A3               	incf	(___awmod@dividend),f
 13397  1BA1  0AA2               	skipnz
 13398  1BA2  1903               	incf	(___awmod@dividend+1),f
 13399  1BA3  0AA3               	goto	l3377
 13400  1BA4  2BA5               	
 13401                           l690:	
 13402  1BA5                     	line	33
 13403                           	
 13404                           l3377:	
 13405  1BA5                     	movf	(___awmod@dividend+1),w
 13406  1BA5  0823               	movwf	(?___awmod+1)
 13407  1BA6  00A1               	movf	(___awmod@dividend),w
 13408  1BA7  0822               	movwf	(?___awmod)
 13409  1BA8  00A0               	goto	l691
 13410  1BA9  2BAA               	
 13411                           l3379:	
 13412  1BAA                     	line	34
 13413                           	
 13414                           l691:	
 13415  1BAA                     	return
 13416  1BAA  0008               	opt stack 0
 13417                           GLOBAL	__end_of___awmod
 13418                           	__end_of___awmod:
 13419  1BAB                     	signat	___awmod,8314
 13420                           	global	___awdiv
 13421                           
 13422 ;; *************** function ___awdiv *****************
 13423 ;; Defined at:
 13424 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 13425 ;; Parameters:    Size  Location     Type
 13426 ;;  divisor         2    0[BANK0 ] int 
 13427 ;;  dividend        2    2[BANK0 ] int 
 13428 ;; Auto vars:     Size  Location     Type
 13429 ;;  quotient        2    7[BANK0 ] int 
 13430 ;;  sign            1    6[BANK0 ] unsigned char 
 13431 ;;  counter         1    5[BANK0 ] unsigned char 
 13432 ;; Return value:  Size  Location     Type
 13433 ;;                  2    0[BANK0 ] int 
 13434 ;; Registers used:
 13435 ;;		wreg, status,2, status,0
 13436 ;; Tracked objects:
 13437 ;;		On entry : 0/0
 13438 ;;		On exit  : 0/0
 13439 ;;		Unchanged: 0/0
 13440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13441 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13442 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13443 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13444 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13445 ;;Total ram usage:        9 bytes
 13446 ;; Hardware stack levels used:    1
 13447 ;; Hardware stack levels required when called:    3
 13448 ;; This function calls:
 13449 ;;		Nothing
 13450 ;; This function is called by:
 13451 ;;		_efgtoa
 13452 ;; This function uses a non-reentrant model
 13453 ;;
 13454                           psect	text25,local,class=CODE,delta=2,merge=1,group=1
 13455                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 13456                           	line	5
 13457                           global __ptext25
 13458                           __ptext25:	;psect for function ___awdiv
 13459  1C09                     psect	text25
 13460                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 13461                           	line	5
 13462                           	global	__size_of___awdiv
 13463                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 13464  006A                     	
 13465                           ___awdiv:	
 13466  1C09                     ;incstack = 0
 13467                           	opt	stack 7
 13468                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13469                           	line	13
 13470                           	
 13471                           l3299:	
 13472  1C09                     	movlb 0	; select bank0
 13473  1C09  0140               	clrf	(___awdiv@sign)
 13474  1C0A  01A6               	line	14
 13475                           	
 13476                           l3301:	
 13477  1C0B                     	btfss	(___awdiv@divisor+1),7
 13478  1C0B  1FA1               	goto	u4251
 13479  1C0C  2C0E               	goto	u4250
 13480  1C0D  2C0F               u4251:
 13481  1C0E                     	goto	l3307
 13482  1C0E  2C17               u4250:
 13483  1C0F                     	line	15
 13484                           	
 13485                           l3303:	
 13486  1C0F                     	comf	(___awdiv@divisor),f
 13487  1C0F  09A0               	comf	(___awdiv@divisor+1),f
 13488  1C10  09A1               	incf	(___awdiv@divisor),f
 13489  1C11  0AA0               	skipnz
 13490  1C12  1903               	incf	(___awdiv@divisor+1),f
 13491  1C13  0AA1               	line	16
 13492                           	
 13493                           l3305:	
 13494  1C14                     	clrf	(___awdiv@sign)
 13495  1C14  01A6               	incf	(___awdiv@sign),f
 13496  1C15  0AA6               	goto	l3307
 13497  1C16  2C17               	line	17
 13498                           	
 13499                           l668:	
 13500  1C17                     	line	18
 13501                           	
 13502                           l3307:	
 13503  1C17                     	btfss	(___awdiv@dividend+1),7
 13504  1C17  1FA3               	goto	u4261
 13505  1C18  2C1A               	goto	u4260
 13506  1C19  2C1B               u4261:
 13507  1C1A                     	goto	l3313
 13508  1C1A  2C25               u4260:
 13509  1C1B                     	line	19
 13510                           	
 13511                           l3309:	
 13512  1C1B                     	comf	(___awdiv@dividend),f
 13513  1C1B  09A2               	comf	(___awdiv@dividend+1),f
 13514  1C1C  09A3               	incf	(___awdiv@dividend),f
 13515  1C1D  0AA2               	skipnz
 13516  1C1E  1903               	incf	(___awdiv@dividend+1),f
 13517  1C1F  0AA3               	line	20
 13518                           	
 13519                           l3311:	
 13520  1C20                     	movlw	low(01h)
 13521  1C20  3001               	movwf	(??___awdiv+0)+0
 13522  1C21  00A4               	movf	(??___awdiv+0)+0,w
 13523  1C22  0824               	xorwf	(___awdiv@sign),f
 13524  1C23  06A6               	goto	l3313
 13525  1C24  2C25               	line	21
 13526                           	
 13527                           l669:	
 13528  1C25                     	line	22
 13529                           	
 13530                           l3313:	
 13531  1C25                     	clrf	(___awdiv@quotient)
 13532  1C25  01A7               	clrf	(___awdiv@quotient+1)
 13533  1C26  01A8               	line	23
 13534                           	
 13535                           l3315:	
 13536  1C27                     	movf	((___awdiv@divisor)),w
 13537  1C27  0820               iorwf	((___awdiv@divisor+1)),w
 13538  1C28  0421               	btfsc	status,2
 13539  1C29  1903               	goto	u4271
 13540  1C2A  2C2C               	goto	u4270
 13541  1C2B  2C2D               u4271:
 13542  1C2C                     	goto	l3335
 13543  1C2C  2C62               u4270:
 13544  1C2D                     	line	24
 13545                           	
 13546                           l3317:	
 13547  1C2D                     	clrf	(___awdiv@counter)
 13548  1C2D  01A5               	incf	(___awdiv@counter),f
 13549  1C2E  0AA5               	line	25
 13550                           	goto	l3323
 13551  1C2F  2C3A               	
 13552                           l672:	
 13553  1C30                     	line	26
 13554                           	
 13555                           l3319:	
 13556  1C30                     	movlw	01h
 13557  1C30  3001               	
 13558                           u4285:
 13559  1C31                     	lslf	(___awdiv@divisor),f
 13560  1C31  35A0               	rlf	(___awdiv@divisor+1),f
 13561  1C32  0DA1               	decfsz	wreg,f
 13562  1C33  0B89               	goto	u4285
 13563  1C34  2C31               	line	27
 13564                           	
 13565                           l3321:	
 13566  1C35                     	movlw	low(01h)
 13567  1C35  3001               	movwf	(??___awdiv+0)+0
 13568  1C36  00A4               	movf	(??___awdiv+0)+0,w
 13569  1C37  0824               	addwf	(___awdiv@counter),f
 13570  1C38  07A5               	goto	l3323
 13571  1C39  2C3A               	line	28
 13572                           	
 13573                           l671:	
 13574  1C3A                     	line	25
 13575                           	
 13576                           l3323:	
 13577  1C3A                     	btfss	(___awdiv@divisor+1),(15)&7
 13578  1C3A  1FA1               	goto	u4291
 13579  1C3B  2C3D               	goto	u4290
 13580  1C3C  2C3E               u4291:
 13581  1C3D                     	goto	l3319
 13582  1C3D  2C30               u4290:
 13583  1C3E                     	goto	l3325
 13584  1C3E  2C40               	
 13585                           l673:	
 13586  1C3F                     	goto	l3325
 13587  1C3F  2C40               	line	29
 13588                           	
 13589                           l674:	
 13590  1C40                     	line	30
 13591                           	
 13592                           l3325:	
 13593  1C40                     	movlw	01h
 13594  1C40  3001               	
 13595                           u4305:
 13596  1C41                     	lslf	(___awdiv@quotient),f
 13597  1C41  35A7               	rlf	(___awdiv@quotient+1),f
 13598  1C42  0DA8               	decfsz	wreg,f
 13599  1C43  0B89               	goto	u4305
 13600  1C44  2C41               	line	31
 13601                           	movf	(___awdiv@divisor+1),w
 13602  1C45  0821               	subwf	(___awdiv@dividend+1),w
 13603  1C46  0223               	skipz
 13604  1C47  1D03               	goto	u4315
 13605  1C48  2C4B               	movf	(___awdiv@divisor),w
 13606  1C49  0820               	subwf	(___awdiv@dividend),w
 13607  1C4A  0222               u4315:
 13608  1C4B                     	skipc
 13609  1C4B  1C03               	goto	u4311
 13610  1C4C  2C4E               	goto	u4310
 13611  1C4D  2C4F               u4311:
 13612  1C4E                     	goto	l3331
 13613  1C4E  2C55               u4310:
 13614  1C4F                     	line	32
 13615                           	
 13616                           l3327:	
 13617  1C4F                     	movf	(___awdiv@divisor),w
 13618  1C4F  0820               	subwf	(___awdiv@dividend),f
 13619  1C50  02A2               	movf	(___awdiv@divisor+1),w
 13620  1C51  0821               	subwfb	(___awdiv@dividend+1),f
 13621  1C52  3BA3               	line	33
 13622                           	
 13623                           l3329:	
 13624  1C53                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
 13625  1C53  1427               	goto	l3331
 13626  1C54  2C55               	line	34
 13627                           	
 13628                           l675:	
 13629  1C55                     	line	35
 13630                           	
 13631                           l3331:	
 13632  1C55                     	movlw	01h
 13633  1C55  3001               	
 13634                           u4325:
 13635  1C56                     	lsrf	(___awdiv@divisor+1),f
 13636  1C56  36A1               	rrf	(___awdiv@divisor),f
 13637  1C57  0CA0               	decfsz	wreg,f
 13638  1C58  0B89               	goto	u4325
 13639  1C59  2C56               	line	36
 13640                           	
 13641                           l3333:	
 13642  1C5A                     	movlw	01h
 13643  1C5A  3001               	subwf	(___awdiv@counter),f
 13644  1C5B  02A5               	btfss	status,2
 13645  1C5C  1D03               	goto	u4331
 13646  1C5D  2C5F               	goto	u4330
 13647  1C5E  2C60               u4331:
 13648  1C5F                     	goto	l3325
 13649  1C5F  2C40               u4330:
 13650  1C60                     	goto	l3335
 13651  1C60  2C62               	
 13652                           l676:	
 13653  1C61                     	goto	l3335
 13654  1C61  2C62               	line	37
 13655                           	
 13656                           l670:	
 13657  1C62                     	line	38
 13658                           	
 13659                           l3335:	
 13660  1C62                     	movf	((___awdiv@sign)),w
 13661  1C62  0826               	btfsc	status,2
 13662  1C63  1903               	goto	u4341
 13663  1C64  2C66               	goto	u4340
 13664  1C65  2C67               u4341:
 13665  1C66                     	goto	l3339
 13666  1C66  2C6D               u4340:
 13667  1C67                     	line	39
 13668                           	
 13669                           l3337:	
 13670  1C67                     	comf	(___awdiv@quotient),f
 13671  1C67  09A7               	comf	(___awdiv@quotient+1),f
 13672  1C68  09A8               	incf	(___awdiv@quotient),f
 13673  1C69  0AA7               	skipnz
 13674  1C6A  1903               	incf	(___awdiv@quotient+1),f
 13675  1C6B  0AA8               	goto	l3339
 13676  1C6C  2C6D               	
 13677                           l677:	
 13678  1C6D                     	line	40
 13679                           	
 13680                           l3339:	
 13681  1C6D                     	movf	(___awdiv@quotient+1),w
 13682  1C6D  0828               	movwf	(?___awdiv+1)
 13683  1C6E  00A1               	movf	(___awdiv@quotient),w
 13684  1C6F  0827               	movwf	(?___awdiv)
 13685  1C70  00A0               	goto	l678
 13686  1C71  2C72               	
 13687                           l3341:	
 13688  1C72                     	line	41
 13689                           	
 13690                           l678:	
 13691  1C72                     	return
 13692  1C72  0008               	opt stack 0
 13693                           GLOBAL	__end_of___awdiv
 13694                           	__end_of___awdiv:
 13695  1C73                     	signat	___awdiv,8314
 13696                           	global	_atoi
 13697                           
 13698 ;; *************** function _atoi *****************
 13699 ;; Defined at:
 13700 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\atoi.c"
 13701 ;; Parameters:    Size  Location     Type
 13702 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 13703 ;;		 -> STR_2(50), 
 13704 ;; Auto vars:     Size  Location     Type
 13705 ;;  n               2   19[BANK0 ] int 
 13706 ;;  neg             2   12[BANK0 ] int 
 13707 ;; Return value:  Size  Location     Type
 13708 ;;                  2    6[BANK0 ] int 
 13709 ;; Registers used:
 13710 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13711 ;; Tracked objects:
 13712 ;;		On entry : 0/0
 13713 ;;		On exit  : 0/0
 13714 ;;		Unchanged: 0/0
 13715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13716 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13717 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13718 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13719 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13720 ;;Total ram usage:       15 bytes
 13721 ;; Hardware stack levels used:    1
 13722 ;; Hardware stack levels required when called:    4
 13723 ;; This function calls:
 13724 ;;		___wmul
 13725 ;;		_isdigit
 13726 ;;		_isspace
 13727 ;; This function is called by:
 13728 ;;		_vfpfcnvrt
 13729 ;; This function uses a non-reentrant model
 13730 ;;
 13731                           psect	text26,local,class=CODE,delta=2,merge=1,group=2
 13732                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\atoi.c"
 13733                           	line	4
 13734                           global __ptext26
 13735                           __ptext26:	;psect for function _atoi
 13736  1154                     psect	text26
 13737                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\atoi.c"
 13738                           	line	4
 13739                           	global	__size_of_atoi
 13740                           	__size_of_atoi	equ	__end_of_atoi-_atoi
 13741  00E7                     	
 13742                           _atoi:	
 13743  1154                     ;incstack = 0
 13744                           	opt	stack 7
 13745                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13746                           	line	6
 13747                           	
 13748                           l4075:	
 13749  1154                     	movlb 0	; select bank0
 13750  1154  0140               	clrf	(atoi@n)
 13751  1155  01B3               	clrf	(atoi@n+1)
 13752  1156  01B4               	clrf	(atoi@neg)
 13753  1157  01AC               	clrf	(atoi@neg+1)
 13754  1158  01AD               	line	7
 13755                           	goto	l4079
 13756  1159  295F               	
 13757                           l975:	
 13758  115A                     	
 13759                           l4077:	
 13760  115A                     	movlw	01h
 13761  115A  3001               	addwf	(atoi@s),f
 13762  115B  07A6               	movlw	0
 13763  115C  3000               	addwfc	(atoi@s+1),f
 13764  115D  3DA7               	goto	l4079
 13765  115E  295F               	
 13766                           l974:	
 13767  115F                     	
 13768                           l4079:	
 13769  115F                     	clrf	(_atoi$1200)
 13770  115F  01B2               	incf	(_atoi$1200),f
 13771  1160  0AB2               	
 13772                           l4081:	
 13773  1161                     	movf	(atoi@s),w
 13774  1161  0826               	movwf	fsr0l
 13775  1162  0084               	movf	((atoi@s+1)),w
 13776  1163  0827               	movwf	fsr0h
 13777  1164  0085               	moviw	fsr0++
 13778  1165  0012               xorlw	32
 13779  1166  3A20               	btfsc	status,2
 13780  1167  1903               	goto	u5741
 13781  1168  296A               	goto	u5740
 13782  1169  296B               u5741:
 13783  116A                     	goto	l4087
 13784  116A  2981               u5740:
 13785  116B                     	
 13786                           l4083:	
 13787  116B                     	movf	(atoi@s),w
 13788  116B  0826               	movwf	fsr0l
 13789  116C  0084               	movf	((atoi@s+1)),w
 13790  116D  0827               	movwf	fsr0h
 13791  116E  0085               	movf	indf0,w ;code access
 13792  116F  0800               	addlw	low(0FFF7h)
 13793  1170  3EF7               	movwf	(??_atoi+0)+0
 13794  1171  00A8               	movlw	high(0FFF7h)
 13795  1172  30FF               	skipnc
 13796  1173  1803               	movlw	(high(0FFF7h)+1)&0ffh
 13797  1174  3000               	movwf	((??_atoi+0)+0)+1
 13798  1175  00A9               	movlw	0
 13799  1176  3000               	subwf	1+(??_atoi+0)+0,w
 13800  1177  0229               	movlw	05h
 13801  1178  3005               	skipnz
 13802  1179  1903               	subwf	0+(??_atoi+0)+0,w
 13803  117A  0228               	skipc
 13804  117B  1C03               	goto	u5751
 13805  117C  297E               	goto	u5750
 13806  117D  297F               u5751:
 13807  117E                     	goto	l4087
 13808  117E  2981               u5750:
 13809  117F                     	
 13810                           l4085:	
 13811  117F                     	clrf	(_atoi$1200)
 13812  117F  01B2               	goto	l4087
 13813  1180  2981               	
 13814                           l981:	
 13815  1181                     	
 13816                           l4087:	
 13817  1181                     	movf	(_atoi$1200),w
 13818  1181  0832               	movwf	(??_atoi+0)+0
 13819  1182  00A8               	clrf	(??_atoi+0)+0+1
 13820  1183  01A9               	movf	0+(??_atoi+0)+0,w
 13821  1184  0828               	movwf	(_atoi$1199)
 13822  1185  00AE               	movf	1+(??_atoi+0)+0,w
 13823  1186  0829               	movwf	(_atoi$1199+1)
 13824  1187  00AF               	goto	l4091
 13825  1188  299D               	
 13826                           l977:	
 13827  1189                     	
 13828                           l4089:	
 13829  1189                     	movf	(atoi@s),w
 13830  1189  0826               	movwf	fsr0l
 13831  118A  0084               	movf	((atoi@s+1)),w
 13832  118B  0827               	movwf	fsr0h
 13833  118C  0085               	movf	indf0,w ;code access
 13834  118D  0800               	movwf	(??_atoi+0)+0
 13835  118E  00A8               	clrf	(??_atoi+0)+0+1
 13836  118F  01A9               	movf	0+(??_atoi+0)+0,w
 13837  1190  0828               	movwf	(isspace@c)
 13838  1191  00A0               	movf	1+(??_atoi+0)+0,w
 13839  1192  0829               	movwf	(isspace@c+1)
 13840  1193  00A1               	fcall	_isspace
 13841  1194  31A7  273C  3191   	movlb 0	; select bank0
 13842  1197  0140               	movf	(1+(?_isspace)),w
 13843  1198  0821               	movwf	(_atoi$1199+1)
 13844  1199  00AF               	movf	(0+(?_isspace)),w
 13845  119A  0820               	movwf	(_atoi$1199)
 13846  119B  00AE               	goto	l4091
 13847  119C  299D               	
 13848                           l979:	
 13849  119D                     	
 13850                           l4091:	
 13851  119D                     	movf	((_atoi$1199)),w
 13852  119D  082E               iorwf	((_atoi$1199+1)),w
 13853  119E  042F               	btfss	status,2
 13854  119F  1D03               	goto	u5761
 13855  11A0  29A2               	goto	u5760
 13856  11A1  29A3               u5761:
 13857  11A2                     	goto	l4077
 13858  11A2  295A               u5760:
 13859  11A3                     	goto	l4095
 13860  11A3  29AE               	
 13861                           l982:	
 13862  11A4                     	line	8
 13863                           	goto	l4095
 13864  11A4  29AE               	line	9
 13865                           	
 13866                           l984:	
 13867  11A5                     	
 13868                           l4093:	
 13869  11A5                     	movlw	01h
 13870  11A5  3001               	movwf	(atoi@neg)
 13871  11A6  00AC               	movlw	0
 13872  11A7  3000               	movwf	((atoi@neg))+1
 13873  11A8  00AD               	line	10
 13874                           	
 13875                           l985:	
 13876  11A9                     	movlw	01h
 13877  11A9  3001               	addwf	(atoi@s),f
 13878  11AA  07A6               	movlw	0
 13879  11AB  3000               	addwfc	(atoi@s+1),f
 13880  11AC  3DA7               	line	11
 13881                           	goto	l4101
 13882  11AD  29EA               	
 13883                           l983:	
 13884  11AE                     	
 13885                           l4095:	
 13886  11AE                     	movf	(atoi@s),w
 13887  11AE  0826               	movwf	fsr0l
 13888  11AF  0084               	movf	((atoi@s+1)),w
 13889  11B0  0827               	movwf	fsr0h
 13890  11B1  0085               	movf	indf0,w ;code access
 13891  11B2  0800               	movwf	(??_atoi+0)+0
 13892  11B3  00A8               	clrf	(??_atoi+0)+0+1
 13893  11B4  01A9               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 13894                           ; Switch size 1, requested type "space"
 13895                           ; Number of cases is 1, Range of values is 0 to 0
 13896                           ; switch strategies available:
 13897                           ; Name         Instructions Cycles
 13898                           ; simple_byte            4     3 (average)
 13899                           ; direct_byte            8     6 (fixed)
 13900                           ; jumptable            260     6 (fixed)
 13901                           ;	Chosen strategy is simple_byte
 13902                           
 13903                           	movf 1+(??_atoi+0)+0,w
 13904  11B5  0829               	opt asmopt_push
 13905                           	opt asmopt_off
 13906                           	xorlw	0^0	; case 0
 13907  11B6  3A00               	skipnz
 13908  11B7  1903               	goto	l4753
 13909  11B8  29BA               	goto	l4101
 13910  11B9  29EA               	opt asmopt_pop
 13911                           	
 13912                           l4753:	
 13913  11BA                     ; Switch size 1, requested type "space"
 13914                           ; Number of cases is 2, Range of values is 43 to 45
 13915                           ; switch strategies available:
 13916                           ; Name         Instructions Cycles
 13917                           ; simple_byte            7     4 (average)
 13918                           ; direct_byte           15     9 (fixed)
 13919                           ; jumptable            263     9 (fixed)
 13920                           ;	Chosen strategy is simple_byte
 13921                           
 13922                           	movf 0+(??_atoi+0)+0,w
 13923  11BA  0828               	opt asmopt_push
 13924                           	opt asmopt_off
 13925                           	xorlw	43^0	; case 43
 13926  11BB  3A2B               	skipnz
 13927  11BC  1903               	goto	l985
 13928  11BD  29A9               	xorlw	45^43	; case 45
 13929  11BE  3A06               	skipnz
 13930  11BF  1903               	goto	l4093
 13931  11C0  29A5               	goto	l4101
 13932  11C1  29EA               	opt asmopt_pop
 13933                           
 13934                           	
 13935                           l986:	
 13936  11C2                     	line	13
 13937                           	goto	l4101
 13938  11C2  29EA               	
 13939                           l988:	
 13940  11C3                     	line	14
 13941                           	
 13942                           l4097:	
 13943  11C3                     	movf	(atoi@s),w
 13944  11C3  0826               	movwf	fsr0l
 13945  11C4  0084               	movf	((atoi@s+1)),w
 13946  11C5  0827               	movwf	fsr0h
 13947  11C6  0085               	movf	indf0,w ;code access
 13948  11C7  0800               	addlw	low(0FFD0h)
 13949  11C8  3ED0               	movwf	(??_atoi+0)+0
 13950  11C9  00A8               	movlw	high(0FFD0h)
 13951  11CA  30FF               	skipnc
 13952  11CB  1803               	movlw	(high(0FFD0h)+1)&0ffh
 13953  11CC  3000               	movwf	((??_atoi+0)+0)+1
 13954  11CD  00A9               	comf	(??_atoi+0)+0,f
 13955  11CE  09A8               	comf	(??_atoi+0)+1,f
 13956  11CF  09A9               	incf	(??_atoi+0)+0,f
 13957  11D0  0AA8               	skipnz
 13958  11D1  1903               	incf	(??_atoi+0)+1,f
 13959  11D2  0AA9               	movf	(atoi@n+1),w
 13960  11D3  0834               	movwf	(___wmul@multiplier+1)
 13961  11D4  00A1               	movf	(atoi@n),w
 13962  11D5  0833               	movwf	(___wmul@multiplier)
 13963  11D6  00A0               	movlw	0Ah
 13964  11D7  300A               	movwf	(___wmul@multiplicand)
 13965  11D8  00A2               	movlw	0
 13966  11D9  3000               	movwf	((___wmul@multiplicand))+1
 13967  11DA  00A3               	fcall	___wmul
 13968  11DB  31A7  2719  3191   	movlb 0	; select bank0
 13969  11DE  0140               	movf	0+(??_atoi+0)+0,w
 13970  11DF  0828               	addwf	(0+(?___wmul)),w
 13971  11E0  0720               	movwf	(atoi@n)
 13972  11E1  00B3               	movf	1+(??_atoi+0)+0,w
 13973  11E2  0829               	addwfc	(1+(?___wmul)),w
 13974  11E3  3D21               	movwf	1+(atoi@n)
 13975  11E4  00B4               	
 13976                           l4099:	
 13977  11E5                     	movlw	01h
 13978  11E5  3001               	addwf	(atoi@s),f
 13979  11E6  07A6               	movlw	0
 13980  11E7  3000               	addwfc	(atoi@s+1),f
 13981  11E8  3DA7               	goto	l4101
 13982  11E9  29EA               	
 13983                           l987:	
 13984  11EA                     	line	13
 13985                           	
 13986                           l4101:	
 13987  11EA                     	movf	(atoi@s),w
 13988  11EA  0826               	movwf	fsr0l
 13989  11EB  0084               	movf	((atoi@s+1)),w
 13990  11EC  0827               	movwf	fsr0h
 13991  11ED  0085               	movf	indf0,w ;code access
 13992  11EE  0800               	addlw	low(0FFD0h)
 13993  11EF  3ED0               	movwf	(??_atoi+0)+0
 13994  11F0  00A8               	movlw	high(0FFD0h)
 13995  11F1  30FF               	skipnc
 13996  11F2  1803               	movlw	(high(0FFD0h)+1)&0ffh
 13997  11F3  3000               	movwf	((??_atoi+0)+0)+1
 13998  11F4  00A9               	movlw	0
 13999  11F5  3000               	subwf	1+(??_atoi+0)+0,w
 14000  11F6  0229               	movlw	0Ah
 14001  11F7  300A               	skipnz
 14002  11F8  1903               	subwf	0+(??_atoi+0)+0,w
 14003  11F9  0228               	skipc
 14004  11FA  1C03               	goto	u5771
 14005  11FB  29FD               	goto	u5770
 14006  11FC  29FF               u5771:
 14007  11FD                     	movlw	1
 14008  11FD  3001               	goto	u5780
 14009  11FE  2A00               u5770:
 14010  11FF                     	movlw	0
 14011  11FF  3000               u5780:
 14012  1200                     	movwf	(??_atoi+2)+0
 14013  1200  00AA               	clrf	(??_atoi+2)+0+1
 14014  1201  01AB               	movf	0+(??_atoi+2)+0,w
 14015  1202  082A               	movwf	(_atoi$1201)
 14016  1203  00B0               	movf	1+(??_atoi+2)+0,w
 14017  1204  082B               	movwf	(_atoi$1201+1)
 14018  1205  00B1               	goto	l4105
 14019  1206  2A1B               	
 14020                           l990:	
 14021  1207                     	
 14022                           l4103:	
 14023  1207                     	movf	(atoi@s),w
 14024  1207  0826               	movwf	fsr0l
 14025  1208  0084               	movf	((atoi@s+1)),w
 14026  1209  0827               	movwf	fsr0h
 14027  120A  0085               	movf	indf0,w ;code access
 14028  120B  0800               	movwf	(??_atoi+0)+0
 14029  120C  00A8               	clrf	(??_atoi+0)+0+1
 14030  120D  01A9               	movf	0+(??_atoi+0)+0,w
 14031  120E  0828               	movwf	(isdigit@c)
 14032  120F  00A0               	movf	1+(??_atoi+0)+0,w
 14033  1210  0829               	movwf	(isdigit@c+1)
 14034  1211  00A1               	fcall	_isdigit
 14035  1212  31A6  26A1  3191   	movlb 0	; select bank0
 14036  1215  0140               	movf	(1+(?_isdigit)),w
 14037  1216  0821               	movwf	(_atoi$1201+1)
 14038  1217  00B1               	movf	(0+(?_isdigit)),w
 14039  1218  0820               	movwf	(_atoi$1201)
 14040  1219  00B0               	goto	l4105
 14041  121A  2A1B               	
 14042                           l992:	
 14043  121B                     	
 14044                           l4105:	
 14045  121B                     	movf	((_atoi$1201)),w
 14046  121B  0830               iorwf	((_atoi$1201+1)),w
 14047  121C  0431               	btfss	status,2
 14048  121D  1D03               	goto	u5791
 14049  121E  2A20               	goto	u5790
 14050  121F  2A21               u5791:
 14051  1220                     	goto	l4097
 14052  1220  29C3               u5790:
 14053  1221                     	goto	l4107
 14054  1221  2A22               	
 14055                           l993:	
 14056  1222                     	line	15
 14057                           	
 14058                           l4107:	
 14059  1222                     	movf	((atoi@neg)),w
 14060  1222  082C               iorwf	((atoi@neg+1)),w
 14061  1223  042D               	btfss	status,2
 14062  1224  1D03               	goto	u5801
 14063  1225  2A27               	goto	u5800
 14064  1226  2A28               u5801:
 14065  1227                     	goto	l4111
 14066  1227  2A34               u5800:
 14067  1228                     	
 14068                           l4109:	
 14069  1228                     	comf	(atoi@n),w
 14070  1228  0933               	movwf	(??_atoi+0)+0
 14071  1229  00A8               	comf	(atoi@n+1),w
 14072  122A  0934               	movwf	((??_atoi+0)+0+1)
 14073  122B  00A9               	incf	(??_atoi+0)+0,f
 14074  122C  0AA8               	skipnz
 14075  122D  1903               	incf	((??_atoi+0)+0+1),f
 14076  122E  0AA9               	movf	0+(??_atoi+0)+0,w
 14077  122F  0828               	movwf	(?_atoi)
 14078  1230  00A6               	movf	1+(??_atoi+0)+0,w
 14079  1231  0829               	movwf	(?_atoi+1)
 14080  1232  00A7               	goto	l998
 14081  1233  2A3A               	
 14082                           l995:	
 14083  1234                     	
 14084                           l4111:	
 14085  1234                     	movf	(atoi@n+1),w
 14086  1234  0834               	movwf	(?_atoi+1)
 14087  1235  00A7               	movf	(atoi@n),w
 14088  1236  0833               	movwf	(?_atoi)
 14089  1237  00A6               	goto	l998
 14090  1238  2A3A               	
 14091                           l997:	
 14092  1239                     	goto	l998
 14093  1239  2A3A               	
 14094                           l4113:	
 14095  123A                     	line	16
 14096                           	
 14097                           l998:	
 14098  123A                     	return
 14099  123A  0008               	opt stack 0
 14100                           GLOBAL	__end_of_atoi
 14101                           	__end_of_atoi:
 14102  123B                     	signat	_atoi,4218
 14103                           	global	_isspace
 14104                           
 14105 ;; *************** function _isspace *****************
 14106 ;; Defined at:
 14107 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isspace.c"
 14108 ;; Parameters:    Size  Location     Type
 14109 ;;  c               2    0[BANK0 ] int 
 14110 ;; Auto vars:     Size  Location     Type
 14111 ;;		None
 14112 ;; Return value:  Size  Location     Type
 14113 ;;                  2    0[BANK0 ] int 
 14114 ;; Registers used:
 14115 ;;		wreg, status,2, status,0
 14116 ;; Tracked objects:
 14117 ;;		On entry : 0/0
 14118 ;;		On exit  : 0/0
 14119 ;;		Unchanged: 0/0
 14120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14121 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14122 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14123 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14124 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14125 ;;Total ram usage:        5 bytes
 14126 ;; Hardware stack levels used:    1
 14127 ;; Hardware stack levels required when called:    3
 14128 ;; This function calls:
 14129 ;;		Nothing
 14130 ;; This function is called by:
 14131 ;;		_atoi
 14132 ;; This function uses a non-reentrant model
 14133 ;;
 14134                           psect	text27,local,class=CODE,delta=2,merge=1,group=2
 14135                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isspace.c"
 14136                           	line	5
 14137                           global __ptext27
 14138                           __ptext27:	;psect for function _isspace
 14139  273C                     psect	text27
 14140                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isspace.c"
 14141                           	line	5
 14142                           	global	__size_of_isspace
 14143                           	__size_of_isspace	equ	__end_of_isspace-_isspace
 14144  0024                     	
 14145                           _isspace:	
 14146  273C                     ;incstack = 0
 14147                           	opt	stack 7
 14148                           ; Regs used in _isspace: [wreg+status,2+status,0]
 14149                           	line	7
 14150                           	
 14151                           l3749:	
 14152  273C                     	movlb 0	; select bank0
 14153  273C  0140               	clrf	(_isspace$1230)
 14154  273D  01A4               	incf	(_isspace$1230),f
 14155  273E  0AA4               	
 14156                           l3751:	
 14157  273F                     		movlw	32
 14158  273F  3020               	xorwf	((isspace@c)),w
 14159  2740  0620               iorwf	((isspace@c+1)),w
 14160  2741  0421               	btfsc	status,2
 14161  2742  1903               	goto	u5181
 14162  2743  2F45               	goto	u5180
 14163  2744  2F46               u5181:
 14164  2745                     	goto	l3757
 14165  2745  2F57               u5180:
 14166  2746                     	
 14167                           l3753:	
 14168  2746                     	movf	(isspace@c),w
 14169  2746  0820               	addlw	0F7h
 14170  2747  3EF7               	movwf	(??_isspace+0)+0
 14171  2748  00A2               	movlw	0FFh
 14172  2749  30FF               	addwfc	(isspace@c+1),w
 14173  274A  3D21               	movwf	1+(??_isspace+0)+0
 14174  274B  00A3               	movlw	0
 14175  274C  3000               	subwf	1+(??_isspace+0)+0,w
 14176  274D  0223               	movlw	05h
 14177  274E  3005               	skipnz
 14178  274F  1903               	subwf	0+(??_isspace+0)+0,w
 14179  2750  0222               	skipc
 14180  2751  1C03               	goto	u5191
 14181  2752  2F54               	goto	u5190
 14182  2753  2F55               u5191:
 14183  2754                     	goto	l3757
 14184  2754  2F57               u5190:
 14185  2755                     	
 14186                           l3755:	
 14187  2755                     	clrf	(_isspace$1230)
 14188  2755  01A4               	goto	l3757
 14189  2756  2F57               	
 14190                           l1021:	
 14191  2757                     	
 14192                           l3757:	
 14193  2757                     	movf	(_isspace$1230),w
 14194  2757  0824               	movwf	(??_isspace+0)+0
 14195  2758  00A2               	clrf	(??_isspace+0)+0+1
 14196  2759  01A3               	movf	0+(??_isspace+0)+0,w
 14197  275A  0822               	movwf	(?_isspace)
 14198  275B  00A0               	movf	1+(??_isspace+0)+0,w
 14199  275C  0823               	movwf	(?_isspace+1)
 14200  275D  00A1               	goto	l1022
 14201  275E  2F5F               	
 14202                           l3759:	
 14203  275F                     	line	8
 14204                           	
 14205                           l1022:	
 14206  275F                     	return
 14207  275F  0008               	opt stack 0
 14208                           GLOBAL	__end_of_isspace
 14209                           	__end_of_isspace:
 14210  2760                     	signat	_isspace,4218
 14211                           	global	_isdigit
 14212                           
 14213 ;; *************** function _isdigit *****************
 14214 ;; Defined at:
 14215 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isdigit.c"
 14216 ;; Parameters:    Size  Location     Type
 14217 ;;  c               2    0[BANK0 ] int 
 14218 ;; Auto vars:     Size  Location     Type
 14219 ;;		None
 14220 ;; Return value:  Size  Location     Type
 14221 ;;                  2    0[BANK0 ] int 
 14222 ;; Registers used:
 14223 ;;		wreg, status,2, status,0
 14224 ;; Tracked objects:
 14225 ;;		On entry : 0/0
 14226 ;;		On exit  : 0/0
 14227 ;;		Unchanged: 0/0
 14228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14229 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14231 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14232 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14233 ;;Total ram usage:        6 bytes
 14234 ;; Hardware stack levels used:    1
 14235 ;; Hardware stack levels required when called:    3
 14236 ;; This function calls:
 14237 ;;		Nothing
 14238 ;; This function is called by:
 14239 ;;		_vfpfcnvrt
 14240 ;;		_atoi
 14241 ;; This function uses a non-reentrant model
 14242 ;;
 14243                           psect	text28,local,class=CODE,delta=2,merge=1,group=2
 14244                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isdigit.c"
 14245                           	line	5
 14246                           global __ptext28
 14247                           __ptext28:	;psect for function _isdigit
 14248  26A1                     psect	text28
 14249                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isdigit.c"
 14250                           	line	5
 14251                           	global	__size_of_isdigit
 14252                           	__size_of_isdigit	equ	__end_of_isdigit-_isdigit
 14253  001A                     	
 14254                           _isdigit:	
 14255  26A1                     ;incstack = 0
 14256                           	opt	stack 8
 14257                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 14258                           	line	7
 14259                           	
 14260                           l3281:	
 14261  26A1                     	movlb 0	; select bank0
 14262  26A1  0140               	movf	(isdigit@c),w
 14263  26A2  0820               	addlw	0D0h
 14264  26A3  3ED0               	movwf	(??_isdigit+0)+0
 14265  26A4  00A2               	movlw	0FFh
 14266  26A5  30FF               	addwfc	(isdigit@c+1),w
 14267  26A6  3D21               	movwf	1+(??_isdigit+0)+0
 14268  26A7  00A3               	movlw	0
 14269  26A8  3000               	subwf	1+(??_isdigit+0)+0,w
 14270  26A9  0223               	movlw	0Ah
 14271  26AA  300A               	skipnz
 14272  26AB  1903               	subwf	0+(??_isdigit+0)+0,w
 14273  26AC  0222               	skipc
 14274  26AD  1C03               	goto	u4191
 14275  26AE  2EB0               	goto	u4190
 14276  26AF  2EB2               u4191:
 14277  26B0                     	movlw	1
 14278  26B0  3001               	goto	u4200
 14279  26B1  2EB3               u4190:
 14280  26B2                     	movlw	0
 14281  26B2  3000               u4200:
 14282  26B3                     	movwf	(??_isdigit+2)+0
 14283  26B3  00A4               	clrf	(??_isdigit+2)+0+1
 14284  26B4  01A5               	movf	0+(??_isdigit+2)+0,w
 14285  26B5  0824               	movwf	(?_isdigit)
 14286  26B6  00A0               	movf	1+(??_isdigit+2)+0,w
 14287  26B7  0825               	movwf	(?_isdigit+1)
 14288  26B8  00A1               	goto	l1014
 14289  26B9  2EBA               	
 14290                           l3283:	
 14291  26BA                     	line	8
 14292                           	
 14293                           l1014:	
 14294  26BA                     	return
 14295  26BA  0008               	opt stack 0
 14296                           GLOBAL	__end_of_isdigit
 14297                           	__end_of_isdigit:
 14298  26BB                     	signat	_isdigit,4218
 14299                           	global	___wmul
 14300                           
 14301 ;; *************** function ___wmul *****************
 14302 ;; Defined at:
 14303 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 14304 ;; Parameters:    Size  Location     Type
 14305 ;;  multiplier      2    0[BANK0 ] unsigned int 
 14306 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 14307 ;; Auto vars:     Size  Location     Type
 14308 ;;  product         2    4[BANK0 ] unsigned int 
 14309 ;; Return value:  Size  Location     Type
 14310 ;;                  2    0[BANK0 ] unsigned int 
 14311 ;; Registers used:
 14312 ;;		wreg, status,2, status,0
 14313 ;; Tracked objects:
 14314 ;;		On entry : 0/0
 14315 ;;		On exit  : 0/0
 14316 ;;		Unchanged: 0/0
 14317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14318 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14319 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14321 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14322 ;;Total ram usage:        6 bytes
 14323 ;; Hardware stack levels used:    1
 14324 ;; Hardware stack levels required when called:    3
 14325 ;; This function calls:
 14326 ;;		Nothing
 14327 ;; This function is called by:
 14328 ;;		_atoi
 14329 ;; This function uses a non-reentrant model
 14330 ;;
 14331                           psect	text29,local,class=CODE,delta=2,merge=1,group=1
 14332                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 14333                           	line	15
 14334                           global __ptext29
 14335                           __ptext29:	;psect for function ___wmul
 14336  2719                     psect	text29
 14337                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 14338                           	line	15
 14339                           	global	__size_of___wmul
 14340                           	__size_of___wmul	equ	__end_of___wmul-___wmul
 14341  0023                     	
 14342                           ___wmul:	
 14343  2719                     ;incstack = 0
 14344                           	opt	stack 7
 14345                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 14346                           	line	43
 14347                           	
 14348                           l3285:	
 14349  2719                     	movlb 0	; select bank0
 14350  2719  0140               	clrf	(___wmul@product)
 14351  271A  01A4               	clrf	(___wmul@product+1)
 14352  271B  01A5               	goto	l3287
 14353  271C  2F1D               	line	44
 14354                           	
 14355                           l524:	
 14356  271D                     	line	45
 14357                           	
 14358                           l3287:	
 14359  271D                     	btfss	(___wmul@multiplier),(0)&7
 14360  271D  1C20               	goto	u4211
 14361  271E  2F20               	goto	u4210
 14362  271F  2F21               u4211:
 14363  2720                     	goto	l525
 14364  2720  2F25               u4210:
 14365  2721                     	line	46
 14366                           	
 14367                           l3289:	
 14368  2721                     	movf	(___wmul@multiplicand),w
 14369  2721  0822               	addwf	(___wmul@product),f
 14370  2722  07A4               	movf	(___wmul@multiplicand+1),w
 14371  2723  0823               	addwfc	(___wmul@product+1),f
 14372  2724  3DA5               	
 14373                           l525:	
 14374  2725                     	line	47
 14375                           	movlw	01h
 14376  2725  3001               	
 14377                           u4225:
 14378  2726                     	lslf	(___wmul@multiplicand),f
 14379  2726  35A2               	rlf	(___wmul@multiplicand+1),f
 14380  2727  0DA3               	decfsz	wreg,f
 14381  2728  0B89               	goto	u4225
 14382  2729  2F26               	line	48
 14383                           	
 14384                           l3291:	
 14385  272A                     	movlw	01h
 14386  272A  3001               	
 14387                           u4235:
 14388  272B                     	lsrf	(___wmul@multiplier+1),f
 14389  272B  36A1               	rrf	(___wmul@multiplier),f
 14390  272C  0CA0               	decfsz	wreg,f
 14391  272D  0B89               	goto	u4235
 14392  272E  2F2B               	line	49
 14393                           	
 14394                           l3293:	
 14395  272F                     	movf	((___wmul@multiplier)),w
 14396  272F  0820               iorwf	((___wmul@multiplier+1)),w
 14397  2730  0421               	btfss	status,2
 14398  2731  1D03               	goto	u4241
 14399  2732  2F34               	goto	u4240
 14400  2733  2F35               u4241:
 14401  2734                     	goto	l3287
 14402  2734  2F1D               u4240:
 14403  2735                     	goto	l3295
 14404  2735  2F36               	
 14405                           l526:	
 14406  2736                     	line	52
 14407                           	
 14408                           l3295:	
 14409  2736                     	movf	(___wmul@product+1),w
 14410  2736  0825               	movwf	(?___wmul+1)
 14411  2737  00A1               	movf	(___wmul@product),w
 14412  2738  0824               	movwf	(?___wmul)
 14413  2739  00A0               	goto	l527
 14414  273A  2F3B               	
 14415                           l3297:	
 14416  273B                     	line	53
 14417                           	
 14418                           l527:	
 14419  273B                     	return
 14420  273B  0008               	opt stack 0
 14421                           GLOBAL	__end_of___wmul
 14422                           	__end_of___wmul:
 14423  273C                     	signat	___wmul,8314
 14424                           	global	_menuInput
 14425                           
 14426 ;; *************** function _menuInput *****************
 14427 ;; Defined at:
 14428 ;;		line 189 in file "main.c"
 14429 ;; Parameters:    Size  Location     Type
 14430 ;;  page            1    wreg     PTR unsigned char 
 14431 ;;		 -> showMenu@page(1), 
 14432 ;;  numPages        1    7[BANK0 ] const unsigned char 
 14433 ;;  menu            1    8[BANK0 ] PTR unsigned char 
 14434 ;;		 -> showMenu@menu(1), 
 14435 ;;  pbShort         1    9[BANK0 ] unsigned char 
 14436 ;;  pbLong          1   10[BANK0 ] unsigned char 
 14437 ;;  timeout         1   11[BANK0 ] unsigned char 
 14438 ;; Auto vars:     Size  Location     Type
 14439 ;;  page            1   17[BANK0 ] PTR unsigned char 
 14440 ;;		 -> showMenu@page(1), 
 14441 ;;  n               1   16[BANK0 ] unsigned char 
 14442 ;;  pb              1   15[BANK0 ] enum E7849
 14443 ;;  dir             1   14[BANK0 ] enum E7845
 14444 ;; Return value:  Size  Location     Type
 14445 ;;                  1    wreg      void 
 14446 ;; Registers used:
 14447 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14448 ;; Tracked objects:
 14449 ;;		On entry : 0/0
 14450 ;;		On exit  : 0/0
 14451 ;;		Unchanged: 0/0
 14452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14453 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14454 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14455 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14456 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14457 ;;Total ram usage:       11 bytes
 14458 ;; Hardware stack levels used:    1
 14459 ;; Hardware stack levels required when called:    8
 14460 ;; This function calls:
 14461 ;;		_OLED_returnHome
 14462 ;;		_OLED_scrollDisplayLeft
 14463 ;;		_OLED_scrollDisplayRight
 14464 ;;		_getPB
 14465 ;;		_getRotDir
 14466 ;; This function is called by:
 14467 ;;		_showMenu
 14468 ;; This function uses a non-reentrant model
 14469 ;;
 14470                           psect	text30,local,class=CODE,delta=2,merge=1,group=0
 14471                           	file	"main.c"
 14472                           	line	189
 14473                           global __ptext30
 14474                           __ptext30:	;psect for function _menuInput
 14475  1091                     psect	text30
 14476                           	file	"main.c"
 14477                           	line	189
 14478                           	global	__size_of_menuInput
 14479                           	__size_of_menuInput	equ	__end_of_menuInput-_menuInput
 14480  00C3                     	
 14481                           _menuInput:	
 14482  1091                     ;incstack = 0
 14483                           	opt	stack 6
 14484                           ; Regs used in _menuInput: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14485                           ;menuInput@page stored from wreg
 14486                           	movlb 0	; select bank0
 14487  1091  0140               	movwf	(menuInput@page)
 14488  1092  00B1               	line	196
 14489                           	
 14490                           l4321:	
 14491  1093                     ;main.c: 189: void menuInput(uint8_t *page, const uint8_t numPages, uint8_t *menu,;main.
                                 c: 190:  uint8_t pbShort, uint8_t pbLong, uint8_t timeout);main.c: 191: {;main.c: 192:  
                                 uint8_t n;;main.c: 193:  enum e_direction dir;;main.c: 194:  enum e_buttonPress pb;;main
                                 .c: 196:  PIE0bits.IOCIE = 0;
 14492                           	movlb 14	; select bank14
 14493  1093  014E               	bcf	(1814)^0700h,4	;volatile
 14494  1094  1216               	line	197
 14495                           	
 14496                           l4323:	
 14497  1095                     ;main.c: 197:  dir = getRotDir();
 14498                           	fcall	_getRotDir
 14499  1095  31A6  264F  3190   	movlb 0	; select bank0
 14500  1098  0140               	movwf	(??_menuInput+0)+0
 14501  1099  00AC               	movf	(??_menuInput+0)+0,w
 14502  109A  082C               	movwf	(menuInput@dir)
 14503  109B  00AE               	line	198
 14504                           ;main.c: 198:  pb = getPB();
 14505                           	fcall	_getPB
 14506  109C  31A6  266F  3190   	movlb 0	; select bank0
 14507  109F  0140               	movwf	(??_menuInput+0)+0
 14508  10A0  00AC               	movf	(??_menuInput+0)+0,w
 14509  10A1  082C               	movwf	(menuInput@pb)
 14510  10A2  00AF               	line	200
 14511                           	
 14512                           l4325:	
 14513  10A3                     ;main.c: 200:  if ((dir == ROT_CW) && (*page < numPages - 1)) {
 14514                           		decf	((menuInput@dir)),w
 14515  10A3  032E               	btfss	status,2
 14516  10A4  1D03               	goto	u6071
 14517  10A5  28A7               	goto	u6070
 14518  10A6  28A8               u6071:
 14519  10A7                     	goto	l4345
 14520  10A7  28E9               u6070:
 14521  10A8                     	
 14522                           l4327:	
 14523  10A8                     	movf	(menuInput@numPages),w
 14524  10A8  0827               	addlw	low(-1)
 14525  10A9  3EFF               	movwf	(??_menuInput+0)+0
 14526  10AA  00AC               	movlw	high(-1)
 14527  10AB  30FF               	skipnc
 14528  10AC  1803               	movlw	(high(-1)+1)&0ffh
 14529  10AD  3000               	movwf	((??_menuInput+0)+0)+1
 14530  10AE  00AD               	movf	(menuInput@page),w
 14531  10AF  0831               	movwf	fsr1l
 14532  10B0  0086               	movlw 1	; select bank2/3
 14533  10B1  3001               	movwf fsr1h	
 14534  10B2  0087               	
 14535                           	movf	1+(??_menuInput+0)+0,w
 14536  10B3  082D               	xorlw	80h
 14537  10B4  3A80               	sublw	080h
 14538  10B5  3C80               	skipz
 14539  10B6  1D03               	goto	u6085
 14540  10B7  28BA               	movf	0+(??_menuInput+0)+0,w
 14541  10B8  082C               	subwf	indf1,w
 14542  10B9  0201               u6085:
 14543  10BA                     
 14544                           	skipnc
 14545  10BA  1803               	goto	u6081
 14546  10BB  28BD               	goto	u6080
 14547  10BC  28BE               u6081:
 14548  10BD                     	goto	l4345
 14549  10BD  28E9               u6080:
 14550  10BE                     	line	201
 14551                           	
 14552                           l4329:	
 14553  10BE                     ;main.c: 201:   (*page)++;
 14554                           	movlw	low(01h)
 14555  10BE  3001               	movlb 0	; select bank0
 14556  10BF  0140               	movwf	(??_menuInput+0)+0
 14557  10C0  00AC               	movf	(menuInput@page),w
 14558  10C1  0831               	movwf	fsr1l
 14559  10C2  0086               	movlw 1	; select bank2/3
 14560  10C3  3001               	movwf fsr1h	
 14561  10C4  0087               	
 14562                           	movf	(??_menuInput+0)+0,w
 14563  10C5  082C               	addwf	indf1,f
 14564  10C6  0781               	line	202
 14565                           	
 14566                           l4331:	
 14567  10C7                     ;main.c: 202:   for(n = 0; n < 12; n++) {
 14568                           	clrf	(menuInput@n)
 14569  10C7  01B0               	
 14570                           l4333:	
 14571  10C8                     	movlw	low(0Ch)
 14572  10C8  300C               	subwf	(menuInput@n),w
 14573  10C9  0230               	skipc
 14574  10CA  1C03               	goto	u6091
 14575  10CB  28CD               	goto	u6090
 14576  10CC  28CE               u6091:
 14577  10CD                     	goto	l4337
 14578  10CD  28D0               u6090:
 14579  10CE                     	goto	l4365
 14580  10CE  2922               	
 14581                           l4335:	
 14582  10CF                     	goto	l4365
 14583  10CF  2922               	
 14584                           l210:	
 14585  10D0                     	line	203
 14586                           	
 14587                           l4337:	
 14588  10D0                     ;main.c: 203:    OLED_scrollDisplayLeft();
 14589                           	fcall	_OLED_scrollDisplayLeft
 14590  10D0  31A6  2636  3190   	line	204
 14591                           	
 14592                           l4339:	
 14593  10D3                     ;main.c: 204:    _delay((unsigned long)((20)*(4000000/4000.0)));
 14594                           	opt asmopt_push
 14595                           opt asmopt_off
 14596                           movlw	26
 14597  10D3  301A               	movlb 0	; select bank0
 14598  10D4  0140               movwf	((??_menuInput+0)+0),f
 14599  10D5  00AC               	movlw	248
 14600  10D6  30F8               u6707:
 14601  10D7                     decfsz	wreg
 14602  10D7  0B89               	goto	u6707
 14603  10D8  28D7               	decfsz	((??_menuInput+0)+0),f
 14604  10D9  0BAC               	goto	u6707
 14605  10DA  28D7               	nop
 14606  10DB  0000               opt asmopt_pop
 14607                           
 14608                           	line	205
 14609                           	
 14610                           l4341:	
 14611  10DC                     ;main.c: 205:   }
 14612                           	movlw	low(01h)
 14613  10DC  3001               	movlb 0	; select bank0
 14614  10DD  0140               	movwf	(??_menuInput+0)+0
 14615  10DE  00AC               	movf	(??_menuInput+0)+0,w
 14616  10DF  082C               	addwf	(menuInput@n),f
 14617  10E0  07B0               	
 14618                           l4343:	
 14619  10E1                     	movlw	low(0Ch)
 14620  10E1  300C               	subwf	(menuInput@n),w
 14621  10E2  0230               	skipc
 14622  10E3  1C03               	goto	u6101
 14623  10E4  28E6               	goto	u6100
 14624  10E5  28E7               u6101:
 14625  10E6                     	goto	l4337
 14626  10E6  28D0               u6100:
 14627  10E7                     	goto	l4365
 14628  10E7  2922               	
 14629                           l211:	
 14630  10E8                     	line	206
 14631                           ;main.c: 206:  }
 14632                           	goto	l4365
 14633  10E8  2922               	line	207
 14634                           ;main.c: 207:  else if ((dir == ROT_CCW) && (*page > 0)) {
 14635                           	
 14636                           l209:	
 14637  10E9                     	
 14638                           l4345:	
 14639  10E9                     		movlw	2
 14640  10E9  3002               	movlb 0	; select bank0
 14641  10EA  0140               	xorwf	((menuInput@dir)),w
 14642  10EB  062E               	btfss	status,2
 14643  10EC  1D03               	goto	u6111
 14644  10ED  28EF               	goto	u6110
 14645  10EE  28F0               u6111:
 14646  10EF                     	goto	l4365
 14647  10EF  2922               u6110:
 14648  10F0                     	
 14649                           l4347:	
 14650  10F0                     	movf	(menuInput@page),w
 14651  10F0  0831               	movwf	fsr1l
 14652  10F1  0086               	movlw 1	; select bank2/3
 14653  10F2  3001               	movwf fsr1h	
 14654  10F3  0087               	
 14655                           	movf	(indf1),w
 14656  10F4  0801               	btfsc	status,2
 14657  10F5  1903               	goto	u6121
 14658  10F6  28F8               	goto	u6120
 14659  10F7  28F9               u6121:
 14660  10F8                     	goto	l4365
 14661  10F8  2922               u6120:
 14662  10F9                     	line	208
 14663                           	
 14664                           l4349:	
 14665  10F9                     ;main.c: 208:   (*page)--;
 14666                           	movf	(menuInput@page),w
 14667  10F9  0831               	movwf	fsr1l
 14668  10FA  0086               	movlw 1	; select bank2/3
 14669  10FB  3001               	movwf fsr1h	
 14670  10FC  0087               	
 14671                           	movlw	01h
 14672  10FD  3001               	subwf	indf1,f
 14673  10FE  0281               	line	209
 14674                           	
 14675                           l4351:	
 14676  10FF                     ;main.c: 209:   for(n = 0; n < 12; n++) {
 14677                           	clrf	(menuInput@n)
 14678  10FF  01B0               	
 14679                           l4353:	
 14680  1100                     	movlw	low(0Ch)
 14681  1100  300C               	subwf	(menuInput@n),w
 14682  1101  0230               	skipc
 14683  1102  1C03               	goto	u6131
 14684  1103  2905               	goto	u6130
 14685  1104  2906               u6131:
 14686  1105                     	goto	l4357
 14687  1105  2908               u6130:
 14688  1106                     	goto	l4365
 14689  1106  2922               	
 14690                           l4355:	
 14691  1107                     	goto	l4365
 14692  1107  2922               	
 14693                           l214:	
 14694  1108                     	line	210
 14695                           	
 14696                           l4357:	
 14697  1108                     ;main.c: 210:    OLED_scrollDisplayRight();
 14698                           	fcall	_OLED_scrollDisplayRight
 14699  1108  31A6  263B  3190   	line	211
 14700                           	
 14701                           l4359:	
 14702  110B                     ;main.c: 211:    _delay((unsigned long)((20)*(4000000/4000.0)));
 14703                           	opt asmopt_push
 14704                           opt asmopt_off
 14705                           movlw	26
 14706  110B  301A               	movlb 0	; select bank0
 14707  110C  0140               movwf	((??_menuInput+0)+0),f
 14708  110D  00AC               	movlw	248
 14709  110E  30F8               u6717:
 14710  110F                     decfsz	wreg
 14711  110F  0B89               	goto	u6717
 14712  1110  290F               	decfsz	((??_menuInput+0)+0),f
 14713  1111  0BAC               	goto	u6717
 14714  1112  290F               	nop
 14715  1113  0000               opt asmopt_pop
 14716                           
 14717                           	line	212
 14718                           	
 14719                           l4361:	
 14720  1114                     ;main.c: 212:   }
 14721                           	movlw	low(01h)
 14722  1114  3001               	movlb 0	; select bank0
 14723  1115  0140               	movwf	(??_menuInput+0)+0
 14724  1116  00AC               	movf	(??_menuInput+0)+0,w
 14725  1117  082C               	addwf	(menuInput@n),f
 14726  1118  07B0               	
 14727                           l4363:	
 14728  1119                     	movlw	low(0Ch)
 14729  1119  300C               	subwf	(menuInput@n),w
 14730  111A  0230               	skipc
 14731  111B  1C03               	goto	u6141
 14732  111C  291E               	goto	u6140
 14733  111D  291F               u6141:
 14734  111E                     	goto	l4357
 14735  111E  2908               u6140:
 14736  111F                     	goto	l4365
 14737  111F  2922               	
 14738                           l215:	
 14739  1120                     	goto	l4365
 14740  1120  2922               	line	213
 14741                           ;main.c: 213:  }
 14742                           	
 14743                           l213:	
 14744  1121                     	goto	l4365
 14745  1121  2922               	
 14746                           l212:	
 14747  1122                     	line	214
 14748                           	
 14749                           l4365:	
 14750  1122                     ;main.c: 214:  if (pb == PB_SHORT) {
 14751                           		decf	((menuInput@pb)),w
 14752  1122  032F               	btfss	status,2
 14753  1123  1D03               	goto	u6151
 14754  1124  2926               	goto	u6150
 14755  1125  2927               u6151:
 14756  1126                     	goto	l4373
 14757  1126  2938               u6150:
 14758  1127                     	line	215
 14759                           	
 14760                           l4367:	
 14761  1127                     ;main.c: 215:   *menu = pbShort;
 14762                           	movf	(menuInput@pbShort),w
 14763  1127  0829               	movwf	(??_menuInput+0)+0
 14764  1128  00AC               	movf	(menuInput@menu),w
 14765  1129  0828               	movwf	fsr1l
 14766  112A  0086               	movlw 1	; select bank2/3
 14767  112B  3001               	movwf fsr1h	
 14768  112C  0087               	
 14769                           	movf	(??_menuInput+0)+0,w
 14770  112D  082C               	movwf	indf1
 14771  112E  0081               	line	216
 14772                           	
 14773                           l4369:	
 14774  112F                     ;main.c: 216:   *page = 0;
 14775                           	movf	(menuInput@page),w
 14776  112F  0831               	movwf	fsr1l
 14777  1130  0086               	movlw 1	; select bank2/3
 14778  1131  3001               	movwf fsr1h	
 14779  1132  0087               	
 14780                           	clrf	indf1
 14781  1133  0181               	line	217
 14782                           	
 14783                           l4371:	
 14784  1134                     ;main.c: 217:   OLED_returnHome();
 14785                           	fcall	_OLED_returnHome
 14786  1134  31A6  2631  3190   	line	218
 14787                           ;main.c: 218:  } else if (pb == PB_LONG) {
 14788                           	goto	l4381
 14789  1137  2951               	
 14790                           l216:	
 14791  1138                     	
 14792                           l4373:	
 14793  1138                     		movlw	2
 14794  1138  3002               	movlb 0	; select bank0
 14795  1139  0140               	xorwf	((menuInput@pb)),w
 14796  113A  062F               	btfss	status,2
 14797  113B  1D03               	goto	u6161
 14798  113C  293E               	goto	u6160
 14799  113D  293F               u6161:
 14800  113E                     	goto	l4381
 14801  113E  2951               u6160:
 14802  113F                     	line	219
 14803                           	
 14804                           l4375:	
 14805  113F                     ;main.c: 219:   *menu = pbLong;
 14806                           	movf	(menuInput@pbLong),w
 14807  113F  082A               	movwf	(??_menuInput+0)+0
 14808  1140  00AC               	movf	(menuInput@menu),w
 14809  1141  0828               	movwf	fsr1l
 14810  1142  0086               	movlw 1	; select bank2/3
 14811  1143  3001               	movwf fsr1h	
 14812  1144  0087               	
 14813                           	movf	(??_menuInput+0)+0,w
 14814  1145  082C               	movwf	indf1
 14815  1146  0081               	line	220
 14816                           	
 14817                           l4377:	
 14818  1147                     ;main.c: 220:   *page = 0;
 14819                           	movf	(menuInput@page),w
 14820  1147  0831               	movwf	fsr1l
 14821  1148  0086               	movlw 1	; select bank2/3
 14822  1149  3001               	movwf fsr1h	
 14823  114A  0087               	
 14824                           	clrf	indf1
 14825  114B  0181               	line	221
 14826                           	
 14827                           l4379:	
 14828  114C                     ;main.c: 221:   OLED_returnHome();
 14829                           	fcall	_OLED_returnHome
 14830  114C  31A6  2631  3190   	goto	l4381
 14831  114F  2951               	line	222
 14832                           ;main.c: 222:  }
 14833                           	
 14834                           l218:	
 14835  1150                     	goto	l4381
 14836  1150  2951               	
 14837                           l217:	
 14838  1151                     	line	223
 14839                           	
 14840                           l4381:	
 14841  1151                     ;main.c: 223:  PIE0bits.IOCIE = 1;
 14842                           	movlb 14	; select bank14
 14843  1151  014E               	bsf	(1814)^0700h,4	;volatile
 14844  1152  1616               	line	224
 14845                           	
 14846                           l219:	
 14847  1153                     	return
 14848  1153  0008               	opt stack 0
 14849                           GLOBAL	__end_of_menuInput
 14850                           	__end_of_menuInput:
 14851  1154                     	signat	_menuInput,24697
 14852                           	global	_getRotDir
 14853                           
 14854 ;; *************** function _getRotDir *****************
 14855 ;; Defined at:
 14856 ;;		line 226 in file "main.c"
 14857 ;; Parameters:    Size  Location     Type
 14858 ;;		None
 14859 ;; Auto vars:     Size  Location     Type
 14860 ;;  ret             1    1[BANK0 ] enum E7845
 14861 ;; Return value:  Size  Location     Type
 14862 ;;                  1    wreg      enum E7845
 14863 ;; Registers used:
 14864 ;;		wreg, status,2
 14865 ;; Tracked objects:
 14866 ;;		On entry : 0/0
 14867 ;;		On exit  : 0/0
 14868 ;;		Unchanged: 0/0
 14869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14871 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14872 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14873 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14874 ;;Total ram usage:        2 bytes
 14875 ;; Hardware stack levels used:    1
 14876 ;; Hardware stack levels required when called:    3
 14877 ;; This function calls:
 14878 ;;		Nothing
 14879 ;; This function is called by:
 14880 ;;		_menuInput
 14881 ;; This function uses a non-reentrant model
 14882 ;;
 14883                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
 14884                           	line	226
 14885                           global __ptext31
 14886                           __ptext31:	;psect for function _getRotDir
 14887  264F                     psect	text31
 14888                           	file	"main.c"
 14889                           	line	226
 14890                           	global	__size_of_getRotDir
 14891                           	__size_of_getRotDir	equ	__end_of_getRotDir-_getRotDir
 14892  0009                     	
 14893                           _getRotDir:	
 14894  264F                     ;incstack = 0
 14895                           	opt	stack 10
 14896                           ; Regs used in _getRotDir: [wreg+status,2]
 14897                           	line	228
 14898                           	
 14899                           l4273:	
 14900  264F                     ;main.c: 228:  enum e_direction ret = g_rotDir;
 14901                           	movf	(_g_rotDir),w	;volatile
 14902  264F  087A               	movlb 0	; select bank0
 14903  2650  0140               	movwf	(??_getRotDir+0)+0
 14904  2651  00A0               	movf	(??_getRotDir+0)+0,w
 14905  2652  0820               	movwf	(getRotDir@ret)
 14906  2653  00A1               	line	229
 14907                           	
 14908                           l4275:	
 14909  2654                     ;main.c: 229:  g_rotDir = ROT_STOP;
 14910                           	clrf	(_g_rotDir)	;volatile
 14911  2654  01FA               	line	230
 14912                           	
 14913                           l4277:	
 14914  2655                     ;main.c: 230:  return ret;
 14915                           	movf	(getRotDir@ret),w
 14916  2655  0821               	goto	l222
 14917  2656  2E57               	
 14918                           l4279:	
 14919  2657                     	line	231
 14920                           	
 14921                           l222:	
 14922  2657                     	return
 14923  2657  0008               	opt stack 0
 14924                           GLOBAL	__end_of_getRotDir
 14925                           	__end_of_getRotDir:
 14926  2658                     	signat	_getRotDir,89
 14927                           	global	_getPB
 14928                           
 14929 ;; *************** function _getPB *****************
 14930 ;; Defined at:
 14931 ;;		line 233 in file "main.c"
 14932 ;; Parameters:    Size  Location     Type
 14933 ;;		None
 14934 ;; Auto vars:     Size  Location     Type
 14935 ;;  ret             1    1[BANK0 ] enum E7849
 14936 ;; Return value:  Size  Location     Type
 14937 ;;                  1    wreg      enum E7849
 14938 ;; Registers used:
 14939 ;;		wreg, status,2
 14940 ;; Tracked objects:
 14941 ;;		On entry : 0/0
 14942 ;;		On exit  : 0/0
 14943 ;;		Unchanged: 0/0
 14944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14946 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14947 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14948 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14949 ;;Total ram usage:        2 bytes
 14950 ;; Hardware stack levels used:    1
 14951 ;; Hardware stack levels required when called:    3
 14952 ;; This function calls:
 14953 ;;		Nothing
 14954 ;; This function is called by:
 14955 ;;		_showMenu
 14956 ;;		_menuInput
 14957 ;; This function uses a non-reentrant model
 14958 ;;
 14959                           psect	text32,local,class=CODE,delta=2,merge=1,group=0
 14960                           	line	233
 14961                           global __ptext32
 14962                           __ptext32:	;psect for function _getPB
 14963  266F                     psect	text32
 14964                           	file	"main.c"
 14965                           	line	233
 14966                           	global	__size_of_getPB
 14967                           	__size_of_getPB	equ	__end_of_getPB-_getPB
 14968  000C                     	
 14969                           _getPB:	
 14970  266F                     ;incstack = 0
 14971                           	opt	stack 10
 14972                           ; Regs used in _getPB: [wreg+status,2]
 14973                           	line	235
 14974                           	
 14975                           l4265:	
 14976  266F                     ;main.c: 235:  enum e_buttonPress ret = g_pbState;
 14977                           	movlb 2	; select bank2
 14978  266F  0142               	movf	(_g_pbState)^0100h,w	;volatile
 14979  2670  086B               	movlb 0	; select bank0
 14980  2671  0140               	movwf	(??_getPB+0)+0
 14981  2672  00A0               	movf	(??_getPB+0)+0,w
 14982  2673  0820               	movwf	(getPB@ret)
 14983  2674  00A1               	line	236
 14984                           	
 14985                           l4267:	
 14986  2675                     ;main.c: 236:  g_pbState = PB_NONE;
 14987                           	movlb 2	; select bank2
 14988  2675  0142               	clrf	(_g_pbState)^0100h	;volatile
 14989  2676  01EB               	line	237
 14990                           	
 14991                           l4269:	
 14992  2677                     ;main.c: 237:  return ret;
 14993                           	movlb 0	; select bank0
 14994  2677  0140               	movf	(getPB@ret),w
 14995  2678  0821               	goto	l225
 14996  2679  2E7A               	
 14997                           l4271:	
 14998  267A                     	line	238
 14999                           	
 15000                           l225:	
 15001  267A                     	return
 15002  267A  0008               	opt stack 0
 15003                           GLOBAL	__end_of_getPB
 15004                           	__end_of_getPB:
 15005  267B                     	signat	_getPB,89
 15006                           	global	_OLED_scrollDisplayRight
 15007                           
 15008 ;; *************** function _OLED_scrollDisplayRight *****************
 15009 ;; Defined at:
 15010 ;;		line 133 in file "oled.c"
 15011 ;; Parameters:    Size  Location     Type
 15012 ;;		None
 15013 ;; Auto vars:     Size  Location     Type
 15014 ;;		None
 15015 ;; Return value:  Size  Location     Type
 15016 ;;                  1    wreg      void 
 15017 ;; Registers used:
 15018 ;;		wreg, status,2, status,0, pclath, cstack
 15019 ;; Tracked objects:
 15020 ;;		On entry : 0/0
 15021 ;;		On exit  : 0/0
 15022 ;;		Unchanged: 0/0
 15023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15028 ;;Total ram usage:        0 bytes
 15029 ;; Hardware stack levels used:    1
 15030 ;; Hardware stack levels required when called:    7
 15031 ;; This function calls:
 15032 ;;		_OLED_command
 15033 ;; This function is called by:
 15034 ;;		_menuInput
 15035 ;; This function uses a non-reentrant model
 15036 ;;
 15037                           psect	text33,local,class=CODE,delta=2,merge=1,group=0
 15038                           	file	"oled.c"
 15039                           	line	133
 15040                           global __ptext33
 15041                           __ptext33:	;psect for function _OLED_scrollDisplayRight
 15042  263B                     psect	text33
 15043                           	file	"oled.c"
 15044                           	line	133
 15045                           	global	__size_of_OLED_scrollDisplayRight
 15046                           	__size_of_OLED_scrollDisplayRight	equ	__end_of_OLED_scrollDisplayRight-_OLED_scrollDisp
                                 layRight
 15047  0005                     	
 15048                           _OLED_scrollDisplayRight:	
 15049  263B                     ;incstack = 0
 15050                           	opt	stack 6
 15051                           ; Regs used in _OLED_scrollDisplayRight: [wreg+status,2+status,0+pclath+cstack]
 15052                           	line	135
 15053                           	
 15054                           l4283:	
 15055  263B                     ;oled.c: 135:     OLED_command(0x10 | 0x08 | 0x04);
 15056                           	movlw	low(01Ch)
 15057  263B  301C               	fcall	_OLED_command
 15058  263C  31A6  2658  31A6   	line	136
 15059                           	
 15060                           l321:	
 15061  263F                     	return
 15062  263F  0008               	opt stack 0
 15063                           GLOBAL	__end_of_OLED_scrollDisplayRight
 15064                           	__end_of_OLED_scrollDisplayRight:
 15065  2640                     	signat	_OLED_scrollDisplayRight,89
 15066                           	global	_OLED_scrollDisplayLeft
 15067                           
 15068 ;; *************** function _OLED_scrollDisplayLeft *****************
 15069 ;; Defined at:
 15070 ;;		line 128 in file "oled.c"
 15071 ;; Parameters:    Size  Location     Type
 15072 ;;		None
 15073 ;; Auto vars:     Size  Location     Type
 15074 ;;		None
 15075 ;; Return value:  Size  Location     Type
 15076 ;;                  1    wreg      void 
 15077 ;; Registers used:
 15078 ;;		wreg, status,2, status,0, pclath, cstack
 15079 ;; Tracked objects:
 15080 ;;		On entry : 0/0
 15081 ;;		On exit  : 0/0
 15082 ;;		Unchanged: 0/0
 15083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15088 ;;Total ram usage:        0 bytes
 15089 ;; Hardware stack levels used:    1
 15090 ;; Hardware stack levels required when called:    7
 15091 ;; This function calls:
 15092 ;;		_OLED_command
 15093 ;; This function is called by:
 15094 ;;		_menuInput
 15095 ;; This function uses a non-reentrant model
 15096 ;;
 15097                           psect	text34,local,class=CODE,delta=2,merge=1,group=0
 15098                           	line	128
 15099                           global __ptext34
 15100                           __ptext34:	;psect for function _OLED_scrollDisplayLeft
 15101  2636                     psect	text34
 15102                           	file	"oled.c"
 15103                           	line	128
 15104                           	global	__size_of_OLED_scrollDisplayLeft
 15105                           	__size_of_OLED_scrollDisplayLeft	equ	__end_of_OLED_scrollDisplayLeft-_OLED_scrollDispla
                                 yLeft
 15106  0005                     	
 15107                           _OLED_scrollDisplayLeft:	
 15108  2636                     ;incstack = 0
 15109                           	opt	stack 6
 15110                           ; Regs used in _OLED_scrollDisplayLeft: [wreg+status,2+status,0+pclath+cstack]
 15111                           	line	130
 15112                           	
 15113                           l4281:	
 15114  2636                     ;oled.c: 130:     OLED_command(0x10 | 0x08 | 0x00);
 15115                           	movlw	low(018h)
 15116  2636  3018               	fcall	_OLED_command
 15117  2637  31A6  2658  31A6   	line	131
 15118                           	
 15119                           l318:	
 15120  263A                     	return
 15121  263A  0008               	opt stack 0
 15122                           GLOBAL	__end_of_OLED_scrollDisplayLeft
 15123                           	__end_of_OLED_scrollDisplayLeft:
 15124  263B                     	signat	_OLED_scrollDisplayLeft,89
 15125                           	global	_OLED_returnHome
 15126                           
 15127 ;; *************** function _OLED_returnHome *****************
 15128 ;; Defined at:
 15129 ;;		line 163 in file "oled.c"
 15130 ;; Parameters:    Size  Location     Type
 15131 ;;		None
 15132 ;; Auto vars:     Size  Location     Type
 15133 ;;		None
 15134 ;; Return value:  Size  Location     Type
 15135 ;;                  1    wreg      void 
 15136 ;; Registers used:
 15137 ;;		wreg, status,2, status,0, pclath, cstack
 15138 ;; Tracked objects:
 15139 ;;		On entry : 0/0
 15140 ;;		On exit  : 0/0
 15141 ;;		Unchanged: 0/0
 15142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15147 ;;Total ram usage:        0 bytes
 15148 ;; Hardware stack levels used:    1
 15149 ;; Hardware stack levels required when called:    7
 15150 ;; This function calls:
 15151 ;;		_OLED_command
 15152 ;; This function is called by:
 15153 ;;		_main
 15154 ;;		_menuInput
 15155 ;; This function uses a non-reentrant model
 15156 ;;
 15157                           psect	text35,local,class=CODE,delta=2,merge=1,group=0
 15158                           	line	163
 15159                           global __ptext35
 15160                           __ptext35:	;psect for function _OLED_returnHome
 15161  2631                     psect	text35
 15162                           	file	"oled.c"
 15163                           	line	163
 15164                           	global	__size_of_OLED_returnHome
 15165                           	__size_of_OLED_returnHome	equ	__end_of_OLED_returnHome-_OLED_returnHome
 15166  0005                     	
 15167                           _OLED_returnHome:	
 15168  2631                     ;incstack = 0
 15169                           	opt	stack 6
 15170                           ; Regs used in _OLED_returnHome: [wreg+status,2+status,0+pclath+cstack]
 15171                           	line	164
 15172                           	
 15173                           l4263:	
 15174  2631                     ;oled.c: 164:     OLED_command(0x02);
 15175                           	movlw	low(02h)
 15176  2631  3002               	fcall	_OLED_command
 15177  2632  31A6  2658  31A6   	line	165
 15178                           	
 15179                           l343:	
 15180  2635                     	return
 15181  2635  0008               	opt stack 0
 15182                           GLOBAL	__end_of_OLED_returnHome
 15183                           	__end_of_OLED_returnHome:
 15184  2636                     	signat	_OLED_returnHome,89
 15185                           	global	_OLED_print_xy
 15186                           
 15187 ;; *************** function _OLED_print_xy *****************
 15188 ;; Defined at:
 15189 ;;		line 153 in file "oled.c"
 15190 ;; Parameters:    Size  Location     Type
 15191 ;;  col             1    wreg     unsigned char 
 15192 ;;  row             1    7[BANK0 ] unsigned char 
 15193 ;;  s               2    8[BANK0 ] PTR unsigned char 
 15194 ;;		 -> STR_3(49), showMenu@s(61), STR_1(49), 
 15195 ;; Auto vars:     Size  Location     Type
 15196 ;;  col             1   15[BANK0 ] unsigned char 
 15197 ;;  row_offsets     4   11[BANK0 ] unsigned char [4]
 15198 ;; Return value:  Size  Location     Type
 15199 ;;                  1    wreg      void 
 15200 ;; Registers used:
 15201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15202 ;; Tracked objects:
 15203 ;;		On entry : 0/0
 15204 ;;		On exit  : 0/0
 15205 ;;		Unchanged: 0/0
 15206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15207 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15208 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15209 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15210 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15211 ;;Total ram usage:        9 bytes
 15212 ;; Hardware stack levels used:    1
 15213 ;; Hardware stack levels required when called:    7
 15214 ;; This function calls:
 15215 ;;		_OLED_command
 15216 ;;		_OLED_write
 15217 ;; This function is called by:
 15218 ;;		_showMenu
 15219 ;; This function uses a non-reentrant model
 15220 ;;
 15221                           psect	text36,local,class=CODE,delta=2,merge=1,group=0
 15222                           	line	153
 15223                           global __ptext36
 15224                           __ptext36:	;psect for function _OLED_print_xy
 15225  18C7                     psect	text36
 15226                           	file	"oled.c"
 15227                           	line	153
 15228                           	global	__size_of_OLED_print_xy
 15229                           	__size_of_OLED_print_xy	equ	__end_of_OLED_print_xy-_OLED_print_xy
 15230  0038                     	
 15231                           _OLED_print_xy:	
 15232  18C7                     ;incstack = 0
 15233                           	opt	stack 7
 15234                           ; Regs used in _OLED_print_xy: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15235                           ;OLED_print_xy@col stored from wreg
 15236                           	movlb 0	; select bank0
 15237  18C7  0140               	movwf	(OLED_print_xy@col)
 15238  18C8  00AF               	line	154
 15239                           	
 15240                           l4299:	
 15241  18C9                     ;oled.c: 154:     uint8_t row_offsets[] = { 0x00, 0x40, 0x14, 0x54 };
 15242                           	movlb 4	; select bank4
 15243  18C9  0144               	movf	(OLED_print_xy@F7353+3)^0200h,w
 15244  18CA  0856               	movlb 0	; select bank0
 15245  18CB  0140               	movwf	(OLED_print_xy@row_offsets+3)
 15246  18CC  00AE               	movlb 4	; select bank4
 15247  18CD  0144               	movf	(OLED_print_xy@F7353+2)^0200h,w
 15248  18CE  0855               	movlb 0	; select bank0
 15249  18CF  0140               	movwf	(OLED_print_xy@row_offsets+2)
 15250  18D0  00AD               	movlb 4	; select bank4
 15251  18D1  0144               	movf	(OLED_print_xy@F7353+1)^0200h,w
 15252  18D2  0854               	movlb 0	; select bank0
 15253  18D3  0140               	movwf	(OLED_print_xy@row_offsets+1)
 15254  18D4  00AC               	movlb 4	; select bank4
 15255  18D5  0144               	movf	(OLED_print_xy@F7353)^0200h,w
 15256  18D6  0853               	movlb 0	; select bank0
 15257  18D7  0140               	movwf	(OLED_print_xy@row_offsets)
 15258  18D8  00AB               
 15259                           	line	156
 15260                           	
 15261                           l4301:	
 15262  18D9                     ;oled.c: 156:     OLED_command(0x80 | (col + row_offsets[row]));
 15263                           	movf	(OLED_print_xy@row),w
 15264  18D9  0827               	addlw	low(OLED_print_xy@row_offsets|((0x0)<<8))&0ffh
 15265  18DA  3E2B               	movwf	fsr1l
 15266  18DB  0086               	clrf fsr1h	
 15267  18DC  0187               	
 15268                           	movf	indf1,w
 15269  18DD  0801               	addwf	(OLED_print_xy@col),w
 15270  18DE  072F               	iorlw	080h
 15271  18DF  3880               	fcall	_OLED_command
 15272  18E0  31A6  2658  3198   	line	157
 15273                           ;oled.c: 157:     while (*s != (char)((void*)0))
 15274                           	goto	l4307
 15275  18E3  28F3               	
 15276                           l338:	
 15277  18E4                     	line	159
 15278                           	
 15279                           l4303:	
 15280  18E4                     ;oled.c: 158:     {;oled.c: 159:         OLED_write(*s++);
 15281                           	movlb 0	; select bank0
 15282  18E4  0140               	movf	(OLED_print_xy@s),w
 15283  18E5  0828               	movwf	fsr0l
 15284  18E6  0084               	movf	((OLED_print_xy@s+1)),w
 15285  18E7  0829               	movwf	fsr0h
 15286  18E8  0085               	movf	indf0,w ;code access
 15287  18E9  0800               	fcall	_OLED_write
 15288  18EA  31A6  2663  3198   	
 15289                           l4305:	
 15290  18ED                     	movlw	01h
 15291  18ED  3001               	movlb 0	; select bank0
 15292  18EE  0140               	addwf	(OLED_print_xy@s),f
 15293  18EF  07A8               	movlw	0
 15294  18F0  3000               	addwfc	(OLED_print_xy@s+1),f
 15295  18F1  3DA9               	goto	l4307
 15296  18F2  28F3               	line	160
 15297                           ;oled.c: 160:     }
 15298                           	
 15299                           l337:	
 15300  18F3                     	line	157
 15301                           	
 15302                           l4307:	
 15303  18F3                     ;oled.c: 157:     while (*s != (char)((void*)0))
 15304                           	movlb 0	; select bank0
 15305  18F3  0140               	movf	(OLED_print_xy@s),w
 15306  18F4  0828               	movwf	fsr0l
 15307  18F5  0084               	movf	((OLED_print_xy@s+1)),w
 15308  18F6  0829               	movwf	fsr0h
 15309  18F7  0085               	moviw	fsr0++
 15310  18F8  0012               	btfss	status,2
 15311  18F9  1D03               	goto	u6061
 15312  18FA  28FC               	goto	u6060
 15313  18FB  28FD               u6061:
 15314  18FC                     	goto	l4303
 15315  18FC  28E4               u6060:
 15316  18FD                     	goto	l340
 15317  18FD  28FE               	
 15318                           l339:	
 15319  18FE                     	line	161
 15320                           	
 15321                           l340:	
 15322  18FE                     	return
 15323  18FE  0008               	opt stack 0
 15324                           GLOBAL	__end_of_OLED_print_xy
 15325                           	__end_of_OLED_print_xy:
 15326  18FF                     	signat	_OLED_print_xy,12409
 15327                           	global	_OLED_write
 15328                           
 15329 ;; *************** function _OLED_write *****************
 15330 ;; Defined at:
 15331 ;;		line 74 in file "oled.c"
 15332 ;; Parameters:    Size  Location     Type
 15333 ;;  value           1    wreg     unsigned char 
 15334 ;; Auto vars:     Size  Location     Type
 15335 ;;  value           1    6[BANK0 ] unsigned char 
 15336 ;; Return value:  Size  Location     Type
 15337 ;;                  1    wreg      void 
 15338 ;; Registers used:
 15339 ;;		wreg, status,2, status,0, pclath, cstack
 15340 ;; Tracked objects:
 15341 ;;		On entry : 0/0
 15342 ;;		On exit  : 0/0
 15343 ;;		Unchanged: 0/0
 15344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15346 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15348 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15349 ;;Total ram usage:        1 bytes
 15350 ;; Hardware stack levels used:    1
 15351 ;; Hardware stack levels required when called:    6
 15352 ;; This function calls:
 15353 ;;		_OLED_send
 15354 ;;		_OLED_waitForReady
 15355 ;; This function is called by:
 15356 ;;		_OLED_print_xy
 15357 ;;		_OLED_print
 15358 ;; This function uses a non-reentrant model
 15359 ;;
 15360                           psect	text37,local,class=CODE,delta=2,merge=1,group=0
 15361                           	line	74
 15362                           global __ptext37
 15363                           __ptext37:	;psect for function _OLED_write
 15364  2663                     psect	text37
 15365                           	file	"oled.c"
 15366                           	line	74
 15367                           	global	__size_of_OLED_write
 15368                           	__size_of_OLED_write	equ	__end_of_OLED_write-_OLED_write
 15369  000C                     	
 15370                           _OLED_write:	
 15371  2663                     ;incstack = 0
 15372                           	opt	stack 7
 15373                           ; Regs used in _OLED_write: [wreg+status,2+status,0+pclath+cstack]
 15374                           ;OLED_write@value stored from wreg
 15375                           	movlb 0	; select bank0
 15376  2663  0140               	movwf	(OLED_write@value)
 15377  2664  00A6               	line	76
 15378                           	
 15379                           l4285:	
 15380  2665                     ;oled.c: 74: void OLED_write(uint8_t value);oled.c: 75: {;oled.c: 76:     OLED_send(valu
                                 e, 1);
 15381                           	clrf	(OLED_send@mode)
 15382  2665  01A3               	incf	(OLED_send@mode),f
 15383  2666  0AA3               	movf	(OLED_write@value),w
 15384  2667  0826               	fcall	_OLED_send
 15385  2668  31A6  2689  31A6   	line	77
 15386                           ;oled.c: 77:     OLED_waitForReady();
 15387                           	fcall	_OLED_waitForReady
 15388  266B  31A6  26F6  31A6   	line	78
 15389                           	
 15390                           l312:	
 15391  266E                     	return
 15392  266E  0008               	opt stack 0
 15393                           GLOBAL	__end_of_OLED_write
 15394                           	__end_of_OLED_write:
 15395  266F                     	signat	_OLED_write,4217
 15396                           	global	_readAnalogValues
 15397                           
 15398 ;; *************** function _readAnalogValues *****************
 15399 ;; Defined at:
 15400 ;;		line 137 in file "main.c"
 15401 ;; Parameters:    Size  Location     Type
 15402 ;;		None
 15403 ;; Auto vars:     Size  Location     Type
 15404 ;;  adc             2   70[BANK0 ] unsigned short 
 15405 ;; Return value:  Size  Location     Type
 15406 ;;                  1    wreg      void 
 15407 ;; Registers used:
 15408 ;;		wreg, status,2, status,0, pclath, cstack
 15409 ;; Tracked objects:
 15410 ;;		On entry : 0/0
 15411 ;;		On exit  : 0/0
 15412 ;;		Unchanged: 0/0
 15413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15415 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15417 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15418 ;;Total ram usage:        6 bytes
 15419 ;; Hardware stack levels used:    1
 15420 ;; Hardware stack levels required when called:    5
 15421 ;; This function calls:
 15422 ;;		___fldiv
 15423 ;;		___flmul
 15424 ;;		___xxtofl
 15425 ;; This function is called by:
 15426 ;;		_main
 15427 ;; This function uses a non-reentrant model
 15428 ;;
 15429                           psect	text38,local,class=CODE,delta=2,merge=1,group=0
 15430                           	file	"main.c"
 15431                           	line	137
 15432                           global __ptext38
 15433                           __ptext38:	;psect for function _readAnalogValues
 15434  123B                     psect	text38
 15435                           	file	"main.c"
 15436                           	line	137
 15437                           	global	__size_of_readAnalogValues
 15438                           	__size_of_readAnalogValues	equ	__end_of_readAnalogValues-_readAnalogValues
 15439  00F9                     	
 15440                           _readAnalogValues:	
 15441  123B                     ;incstack = 0
 15442                           	opt	stack 10
 15443                           ; Regs used in _readAnalogValues: [wreg+status,2+status,0+pclath+cstack]
 15444                           	line	141
 15445                           	
 15446                           l4539:	
 15447  123B                     ;main.c: 139:  uint16_t adc;;main.c: 141:  ADCON0bits.CHS = 0b010000;
 15448                           	movlb 1	; select bank1
 15449  123B  0141               	movf	(157)^080h,w	;volatile
 15450  123C  081D               	andlw	not (((1<<6)-1)<<2)
 15451  123D  3903               	iorlw	(010h & ((1<<6)-1))<<2
 15452  123E  3840               	movwf	(157)^080h	;volatile
 15453  123F  009D               	line	142
 15454                           	
 15455                           l4541:	
 15456  1240                     ;main.c: 142:  ADCON0bits.GO = 1;
 15457                           	bsf	(157)^080h,1	;volatile
 15458  1240  149D               	line	143
 15459                           ;main.c: 143:  while (ADCON0bits.GO);
 15460                           	goto	l185
 15461  1241  2A42               	
 15462                           l186:	
 15463  1242                     	
 15464                           l185:	
 15465  1242                     	btfsc	(157)^080h,1	;volatile
 15466  1242  189D               	goto	u6351
 15467  1243  2A45               	goto	u6350
 15468  1244  2A46               u6351:
 15469  1245                     	goto	l185
 15470  1245  2A42               u6350:
 15471  1246                     	goto	l4543
 15472  1246  2A47               	
 15473                           l187:	
 15474  1247                     	line	144
 15475                           	
 15476                           l4543:	
 15477  1247                     ;main.c: 144:  adc = (uint16_t)((ADRESH << 8) + ADRESL);
 15478                           	movf	(156)^080h,w	;volatile
 15479  1247  081C               	movlb 0	; select bank0
 15480  1248  0140               	movwf	(readAnalogValues@adc+1)
 15481  1249  00E7               	movlb 1	; select bank1
 15482  124A  0141               	movf	(155)^080h,w	;volatile
 15483  124B  081B               	movlb 0	; select bank0
 15484  124C  0140               	movwf	(readAnalogValues@adc)
 15485  124D  00E6               	line	145
 15486                           	
 15487                           l4545:	
 15488  124E                     ;main.c: 145:  g_voltage = (adc * 5.0 * (150.0 + 47.0)) / (1023.0 * 47.0);
 15489                           	movlw	0x40
 15490  124E  3040               	movwf	(___flmul@b+3)
 15491  124F  00B1               	movlw	0xa0
 15492  1250  30A0               	movwf	(___flmul@b+2)
 15493  1251  00B0               	movlw	0x0
 15494  1252  3000               	movwf	(___flmul@b+1)
 15495  1253  00AF               	movlw	0x0
 15496  1254  3000               	movwf	(___flmul@b)
 15497  1255  00AE               
 15498                           	movf	(readAnalogValues@adc),w
 15499  1256  0866               	movwf	(___xxtofl@val)
 15500  1257  00A0               	movf	(readAnalogValues@adc+1),w
 15501  1258  0867               	movwf	((___xxtofl@val))+1
 15502  1259  00A1               	clrf	2+((___xxtofl@val))
 15503  125A  01A2               	clrf	3+((___xxtofl@val))
 15504  125B  01A3               	movlw	low(0)
 15505  125C  3000               	fcall	___xxtofl
 15506  125D  319F  274B  3192   	movlb 0	; select bank0
 15507  1260  0140               	movf	(3+(?___xxtofl)),w
 15508  1261  0823               	movwf	(___flmul@a+3)
 15509  1262  00B5               	movf	(2+(?___xxtofl)),w
 15510  1263  0822               	movwf	(___flmul@a+2)
 15511  1264  00B4               	movf	(1+(?___xxtofl)),w
 15512  1265  0821               	movwf	(___flmul@a+1)
 15513  1266  00B3               	movf	(0+(?___xxtofl)),w
 15514  1267  0820               	movwf	(___flmul@a)
 15515  1268  00B2               
 15516                           	fcall	___flmul
 15517  1269  3195  2595  3192   	movlb 0	; select bank0
 15518  126C  0140               	movf	(3+(?___flmul)),w
 15519  126D  0831               	movwf	(_readAnalogValues$1479+3)
 15520  126E  00E5               	movf	(2+(?___flmul)),w
 15521  126F  0830               	movwf	(_readAnalogValues$1479+2)
 15522  1270  00E4               	movf	(1+(?___flmul)),w
 15523  1271  082F               	movwf	(_readAnalogValues$1479+1)
 15524  1272  00E3               	movf	(0+(?___flmul)),w
 15525  1273  082E               	movwf	(_readAnalogValues$1479)
 15526  1274  00E2               
 15527                           	
 15528                           l4547:	
 15529  1275                     ;main.c: 145:  g_voltage = (adc * 5.0 * (150.0 + 47.0)) / (1023.0 * 47.0);
 15530                           	movlw	0x47
 15531  1275  3047               	movwf	(___fldiv@a+3)
 15532  1276  00CB               	movlw	0x3b
 15533  1277  303B               	movwf	(___fldiv@a+2)
 15534  1278  00CA               	movlw	0xd1
 15535  1279  30D1               	movwf	(___fldiv@a+1)
 15536  127A  00C9               	movlw	0x0
 15537  127B  3000               	movwf	(___fldiv@a)
 15538  127C  00C8               
 15539                           	movlw	0x43
 15540  127D  3043               	movwf	(___flmul@b+3)
 15541  127E  00B1               	movlw	0x45
 15542  127F  3045               	movwf	(___flmul@b+2)
 15543  1280  00B0               	movlw	0x0
 15544  1281  3000               	movwf	(___flmul@b+1)
 15545  1282  00AF               	movlw	0x0
 15546  1283  3000               	movwf	(___flmul@b)
 15547  1284  00AE               
 15548                           	movf	(_readAnalogValues$1479+3),w
 15549  1285  0865               	movwf	(___flmul@a+3)
 15550  1286  00B5               	movf	(_readAnalogValues$1479+2),w
 15551  1287  0864               	movwf	(___flmul@a+2)
 15552  1288  00B4               	movf	(_readAnalogValues$1479+1),w
 15553  1289  0863               	movwf	(___flmul@a+1)
 15554  128A  00B3               	movf	(_readAnalogValues$1479),w
 15555  128B  0862               	movwf	(___flmul@a)
 15556  128C  00B2               
 15557                           	fcall	___flmul
 15558  128D  3195  2595  3192   	movlb 0	; select bank0
 15559  1290  0140               	movf	(3+(?___flmul)),w
 15560  1291  0831               	movwf	(___fldiv@b+3)
 15561  1292  00CF               	movf	(2+(?___flmul)),w
 15562  1293  0830               	movwf	(___fldiv@b+2)
 15563  1294  00CE               	movf	(1+(?___flmul)),w
 15564  1295  082F               	movwf	(___fldiv@b+1)
 15565  1296  00CD               	movf	(0+(?___flmul)),w
 15566  1297  082E               	movwf	(___fldiv@b)
 15567  1298  00CC               
 15568                           	fcall	___fldiv
 15569  1299  3188  2010  3192   	movlb 0	; select bank0
 15570  129C  0140               	movf	(3+(?___fldiv)),w
 15571  129D  084B               	movlb 3	; select bank3
 15572  129E  0143               	movwf	(_g_voltage+3)^0180h
 15573  129F  00E5               	movlb 0	; select bank0
 15574  12A0  0140               	movf	(2+(?___fldiv)),w
 15575  12A1  084A               	movlb 3	; select bank3
 15576  12A2  0143               	movwf	(_g_voltage+2)^0180h
 15577  12A3  00E4               	movlb 0	; select bank0
 15578  12A4  0140               	movf	(1+(?___fldiv)),w
 15579  12A5  0849               	movlb 3	; select bank3
 15580  12A6  0143               	movwf	(_g_voltage+1)^0180h
 15581  12A7  00E3               	movlb 0	; select bank0
 15582  12A8  0140               	movf	(0+(?___fldiv)),w
 15583  12A9  0848               	movlb 3	; select bank3
 15584  12AA  0143               	movwf	(_g_voltage)^0180h
 15585  12AB  00E2               
 15586                           	line	147
 15587                           	
 15588                           l4549:	
 15589  12AC                     ;main.c: 147:  ADCON0bits.CHS = 0b010001;
 15590                           	movlb 1	; select bank1
 15591  12AC  0141               	movf	(157)^080h,w	;volatile
 15592  12AD  081D               	andlw	not (((1<<6)-1)<<2)
 15593  12AE  3903               	iorlw	(011h & ((1<<6)-1))<<2
 15594  12AF  3844               	movwf	(157)^080h	;volatile
 15595  12B0  009D               	line	148
 15596                           	
 15597                           l4551:	
 15598  12B1                     ;main.c: 148:  ADCON0bits.GO = 1;
 15599                           	bsf	(157)^080h,1	;volatile
 15600  12B1  149D               	line	149
 15601                           ;main.c: 149:  while (ADCON0bits.GO);
 15602                           	goto	l188
 15603  12B2  2AB3               	
 15604                           l189:	
 15605  12B3                     	
 15606                           l188:	
 15607  12B3                     	btfsc	(157)^080h,1	;volatile
 15608  12B3  189D               	goto	u6361
 15609  12B4  2AB6               	goto	u6360
 15610  12B5  2AB7               u6361:
 15611  12B6                     	goto	l188
 15612  12B6  2AB3               u6360:
 15613  12B7                     	goto	l4553
 15614  12B7  2AB8               	
 15615                           l190:	
 15616  12B8                     	line	150
 15617                           	
 15618                           l4553:	
 15619  12B8                     ;main.c: 150:  adc = (uint16_t)((ADRESH << 8) + ADRESL);
 15620                           	movf	(156)^080h,w	;volatile
 15621  12B8  081C               	movlb 0	; select bank0
 15622  12B9  0140               	movwf	(readAnalogValues@adc+1)
 15623  12BA  00E7               	movlb 1	; select bank1
 15624  12BB  0141               	movf	(155)^080h,w	;volatile
 15625  12BC  081B               	movlb 0	; select bank0
 15626  12BD  0140               	movwf	(readAnalogValues@adc)
 15627  12BE  00E6               	line	151
 15628                           	
 15629                           l4555:	
 15630  12BF                     ;main.c: 151:  g_current = (adc * 5.0) / (1023.0 * 0.05 * 50.0);
 15631                           	movlw	0x45
 15632  12BF  3045               	movwf	(___fldiv@a+3)
 15633  12C0  00CB               	movlw	0x1f
 15634  12C1  301F               	movwf	(___fldiv@a+2)
 15635  12C2  00CA               	movlw	0xd8
 15636  12C3  30D8               	movwf	(___fldiv@a+1)
 15637  12C4  00C9               	movlw	0x0
 15638  12C5  3000               	movwf	(___fldiv@a)
 15639  12C6  00C8               
 15640                           	movlw	0x40
 15641  12C7  3040               	movwf	(___flmul@b+3)
 15642  12C8  00B1               	movlw	0xa0
 15643  12C9  30A0               	movwf	(___flmul@b+2)
 15644  12CA  00B0               	movlw	0x0
 15645  12CB  3000               	movwf	(___flmul@b+1)
 15646  12CC  00AF               	movlw	0x0
 15647  12CD  3000               	movwf	(___flmul@b)
 15648  12CE  00AE               
 15649                           	movf	(readAnalogValues@adc),w
 15650  12CF  0866               	movwf	(___xxtofl@val)
 15651  12D0  00A0               	movf	(readAnalogValues@adc+1),w
 15652  12D1  0867               	movwf	((___xxtofl@val))+1
 15653  12D2  00A1               	clrf	2+((___xxtofl@val))
 15654  12D3  01A2               	clrf	3+((___xxtofl@val))
 15655  12D4  01A3               	movlw	low(0)
 15656  12D5  3000               	fcall	___xxtofl
 15657  12D6  319F  274B  3192   	movlb 0	; select bank0
 15658  12D9  0140               	movf	(3+(?___xxtofl)),w
 15659  12DA  0823               	movwf	(___flmul@a+3)
 15660  12DB  00B5               	movf	(2+(?___xxtofl)),w
 15661  12DC  0822               	movwf	(___flmul@a+2)
 15662  12DD  00B4               	movf	(1+(?___xxtofl)),w
 15663  12DE  0821               	movwf	(___flmul@a+1)
 15664  12DF  00B3               	movf	(0+(?___xxtofl)),w
 15665  12E0  0820               	movwf	(___flmul@a)
 15666  12E1  00B2               
 15667                           	fcall	___flmul
 15668  12E2  3195  2595  3192   	movlb 0	; select bank0
 15669  12E5  0140               	movf	(3+(?___flmul)),w
 15670  12E6  0831               	movwf	(___fldiv@b+3)
 15671  12E7  00CF               	movf	(2+(?___flmul)),w
 15672  12E8  0830               	movwf	(___fldiv@b+2)
 15673  12E9  00CE               	movf	(1+(?___flmul)),w
 15674  12EA  082F               	movwf	(___fldiv@b+1)
 15675  12EB  00CD               	movf	(0+(?___flmul)),w
 15676  12EC  082E               	movwf	(___fldiv@b)
 15677  12ED  00CC               
 15678                           	fcall	___fldiv
 15679  12EE  3188  2010  3192   	movlb 0	; select bank0
 15680  12F1  0140               	movf	(3+(?___fldiv)),w
 15681  12F2  084B               	movlb 3	; select bank3
 15682  12F3  0143               	movwf	(_g_current+3)^0180h
 15683  12F4  00E1               	movlb 0	; select bank0
 15684  12F5  0140               	movf	(2+(?___fldiv)),w
 15685  12F6  084A               	movlb 3	; select bank3
 15686  12F7  0143               	movwf	(_g_current+2)^0180h
 15687  12F8  00E0               	movlb 0	; select bank0
 15688  12F9  0140               	movf	(1+(?___fldiv)),w
 15689  12FA  0849               	movlb 3	; select bank3
 15690  12FB  0143               	movwf	(_g_current+1)^0180h
 15691  12FC  00DF               	movlb 0	; select bank0
 15692  12FD  0140               	movf	(0+(?___fldiv)),w
 15693  12FE  0848               	movlb 3	; select bank3
 15694  12FF  0143               	movwf	(_g_current)^0180h
 15695  1300  00DE               
 15696                           	line	152
 15697                           	
 15698                           l4557:	
 15699  1301                     ;main.c: 152:  g_power = g_voltage * g_current;
 15700                           	movf	(_g_current+3)^0180h,w
 15701  1301  0861               	movlb 0	; select bank0
 15702  1302  0140               	movwf	(___flmul@b+3)
 15703  1303  00B1               	movlb 3	; select bank3
 15704  1304  0143               	movf	(_g_current+2)^0180h,w
 15705  1305  0860               	movlb 0	; select bank0
 15706  1306  0140               	movwf	(___flmul@b+2)
 15707  1307  00B0               	movlb 3	; select bank3
 15708  1308  0143               	movf	(_g_current+1)^0180h,w
 15709  1309  085F               	movlb 0	; select bank0
 15710  130A  0140               	movwf	(___flmul@b+1)
 15711  130B  00AF               	movlb 3	; select bank3
 15712  130C  0143               	movf	(_g_current)^0180h,w
 15713  130D  085E               	movlb 0	; select bank0
 15714  130E  0140               	movwf	(___flmul@b)
 15715  130F  00AE               
 15716                           	movlb 3	; select bank3
 15717  1310  0143               	movf	(_g_voltage+3)^0180h,w
 15718  1311  0865               	movlb 0	; select bank0
 15719  1312  0140               	movwf	(___flmul@a+3)
 15720  1313  00B5               	movlb 3	; select bank3
 15721  1314  0143               	movf	(_g_voltage+2)^0180h,w
 15722  1315  0864               	movlb 0	; select bank0
 15723  1316  0140               	movwf	(___flmul@a+2)
 15724  1317  00B4               	movlb 3	; select bank3
 15725  1318  0143               	movf	(_g_voltage+1)^0180h,w
 15726  1319  0863               	movlb 0	; select bank0
 15727  131A  0140               	movwf	(___flmul@a+1)
 15728  131B  00B3               	movlb 3	; select bank3
 15729  131C  0143               	movf	(_g_voltage)^0180h,w
 15730  131D  0862               	movlb 0	; select bank0
 15731  131E  0140               	movwf	(___flmul@a)
 15732  131F  00B2               
 15733                           	fcall	___flmul
 15734  1320  3195  2595  3192   	movlb 0	; select bank0
 15735  1323  0140               	movf	(3+(?___flmul)),w
 15736  1324  0831               	movlb 4	; select bank4
 15737  1325  0144               	movwf	(_g_power+3)^0200h
 15738  1326  00AB               	movlb 0	; select bank0
 15739  1327  0140               	movf	(2+(?___flmul)),w
 15740  1328  0830               	movlb 4	; select bank4
 15741  1329  0144               	movwf	(_g_power+2)^0200h
 15742  132A  00AA               	movlb 0	; select bank0
 15743  132B  0140               	movf	(1+(?___flmul)),w
 15744  132C  082F               	movlb 4	; select bank4
 15745  132D  0144               	movwf	(_g_power+1)^0200h
 15746  132E  00A9               	movlb 0	; select bank0
 15747  132F  0140               	movf	(0+(?___flmul)),w
 15748  1330  082E               	movlb 4	; select bank4
 15749  1331  0144               	movwf	(_g_power)^0200h
 15750  1332  00A8               
 15751                           	line	153
 15752                           	
 15753                           l191:	
 15754  1333                     	return
 15755  1333  0008               	opt stack 0
 15756                           GLOBAL	__end_of_readAnalogValues
 15757                           	__end_of_readAnalogValues:
 15758  1334                     	signat	_readAnalogValues,89
 15759                           	global	___flmul
 15760                           
 15761 ;; *************** function ___flmul *****************
 15762 ;; Defined at:
 15763 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
 15764 ;; Parameters:    Size  Location     Type
 15765 ;;  b               4   14[BANK0 ] void 
 15766 ;;  a               4   18[BANK0 ] void 
 15767 ;; Auto vars:     Size  Location     Type
 15768 ;;  prod            4   34[BANK0 ] struct .
 15769 ;;  grs             4   28[BANK0 ] unsigned long 
 15770 ;;  temp            2   38[BANK0 ] struct .
 15771 ;;  bexp            1   33[BANK0 ] unsigned char 
 15772 ;;  aexp            1   32[BANK0 ] unsigned char 
 15773 ;;  sign            1   27[BANK0 ] unsigned char 
 15774 ;; Return value:  Size  Location     Type
 15775 ;;                  4   14[BANK0 ] unsigned char 
 15776 ;; Registers used:
 15777 ;;		wreg, status,2, status,0, pclath, cstack
 15778 ;; Tracked objects:
 15779 ;;		On entry : 0/0
 15780 ;;		On exit  : 0/0
 15781 ;;		Unchanged: 0/0
 15782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15783 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15784 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15785 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15786 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15787 ;;Total ram usage:       26 bytes
 15788 ;; Hardware stack levels used:    1
 15789 ;; Hardware stack levels required when called:    4
 15790 ;; This function calls:
 15791 ;;		__Umul8_16
 15792 ;; This function is called by:
 15793 ;;		_readAnalogValues
 15794 ;;		_efgtoa
 15795 ;; This function uses a non-reentrant model
 15796 ;;
 15797                           psect	text39,local,class=CODE,delta=2,merge=1,group=1
 15798                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
 15799                           	line	8
 15800                           global __ptext39
 15801                           __ptext39:	;psect for function ___flmul
 15802  1595                     psect	text39
 15803                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
 15804                           	line	8
 15805                           	global	__size_of___flmul
 15806                           	__size_of___flmul	equ	__end_of___flmul-___flmul
 15807  026B                     	
 15808                           ___flmul:	
 15809  1595                     ;incstack = 0
 15810                           	opt	stack 6
 15811                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 15812                           	line	17
 15813                           	
 15814                           l3609:	
 15815  1595                     	movlb 0	; select bank0
 15816  1595  0140               	movf	0+(___flmul@b)+03h,w
 15817  1596  0831               	andlw	080h
 15818  1597  3980               	movwf	(??___flmul+0)+0
 15819  1598  00B6               	movf	(??___flmul+0)+0,w
 15820  1599  0836               	movwf	(___flmul@sign)
 15821  159A  00BB               	line	18
 15822                           	
 15823                           l3611:	
 15824  159B                     	lslf	0+(___flmul@b)+03h,w
 15825  159B  3531               	movwf	(??___flmul+0)+0
 15826  159C  00B6               	movf	(??___flmul+0)+0,w
 15827  159D  0836               	movwf	(___flmul@bexp)
 15828  159E  00C1               	line	19
 15829                           	
 15830                           l3613:	
 15831  159F                     	btfss	0+(___flmul@b)+02h,(7)&7
 15832  159F  1FB0               	goto	u4921
 15833  15A0  2DA2               	goto	u4920
 15834  15A1  2DA3               u4921:
 15835  15A2                     	goto	l3617
 15836  15A2  2DA5               u4920:
 15837  15A3                     	line	20
 15838                           	
 15839                           l3615:	
 15840  15A3                     	bsf	(___flmul@bexp)+(0/8),(0)&7
 15841  15A3  1441               	goto	l3617
 15842  15A4  2DA5               	line	21
 15843                           	
 15844                           l911:	
 15845  15A5                     	line	24
 15846                           	
 15847                           l3617:	
 15848  15A5                     	movf	((___flmul@bexp)),w
 15849  15A5  0841               	btfsc	status,2
 15850  15A6  1903               	goto	u4931
 15851  15A7  2DA9               	goto	u4930
 15852  15A8  2DAA               u4931:
 15853  15A9                     	goto	l3625
 15854  15A9  2DBA               u4930:
 15855  15AA                     	line	26
 15856                           	
 15857                           l3619:	
 15858  15AA                     		incf	((___flmul@bexp)),w
 15859  15AA  0A41               	btfss	status,2
 15860  15AB  1D03               	goto	u4941
 15861  15AC  2DAE               	goto	u4940
 15862  15AD  2DAF               u4941:
 15863  15AE                     	goto	l3623
 15864  15AE  2DB8               u4940:
 15865  15AF                     	line	28
 15866                           	
 15867                           l3621:	
 15868  15AF                     	movlw	0x0
 15869  15AF  3000               	movwf	(___flmul@b+3)
 15870  15B0  00B1               	movlw	0x0
 15871  15B1  3000               	movwf	(___flmul@b+2)
 15872  15B2  00B0               	movlw	0x0
 15873  15B3  3000               	movwf	(___flmul@b+1)
 15874  15B4  00AF               	movlw	0x0
 15875  15B5  3000               	movwf	(___flmul@b)
 15876  15B6  00AE               
 15877                           	goto	l3623
 15878  15B7  2DB8               	line	29
 15879                           	
 15880                           l913:	
 15881  15B8                     	line	31
 15882                           	
 15883                           l3623:	
 15884  15B8                     	bsf	(___flmul@b)+(23/8),(23)&7
 15885  15B8  17B0               	line	33
 15886                           	goto	l3627
 15887  15B9  2DC3               	line	34
 15888                           	
 15889                           l912:	
 15890  15BA                     	line	36
 15891                           	
 15892                           l3625:	
 15893  15BA                     	movlw	0x0
 15894  15BA  3000               	movwf	(___flmul@b+3)
 15895  15BB  00B1               	movlw	0x0
 15896  15BC  3000               	movwf	(___flmul@b+2)
 15897  15BD  00B0               	movlw	0x0
 15898  15BE  3000               	movwf	(___flmul@b+1)
 15899  15BF  00AF               	movlw	0x0
 15900  15C0  3000               	movwf	(___flmul@b)
 15901  15C1  00AE               
 15902                           	goto	l3627
 15903  15C2  2DC3               	line	37
 15904                           	
 15905                           l914:	
 15906  15C3                     	line	39
 15907                           	
 15908                           l3627:	
 15909  15C3                     	movf	0+(___flmul@a)+03h,w
 15910  15C3  0835               	andlw	080h
 15911  15C4  3980               	movwf	(??___flmul+0)+0
 15912  15C5  00B6               	movf	(??___flmul+0)+0,w
 15913  15C6  0836               	xorwf	(___flmul@sign),f
 15914  15C7  06BB               	line	40
 15915                           	
 15916                           l3629:	
 15917  15C8                     	lslf	0+(___flmul@a)+03h,w
 15918  15C8  3535               	movwf	(??___flmul+0)+0
 15919  15C9  00B6               	movf	(??___flmul+0)+0,w
 15920  15CA  0836               	movwf	(___flmul@aexp)
 15921  15CB  00C0               	line	41
 15922                           	
 15923                           l3631:	
 15924  15CC                     	btfss	0+(___flmul@a)+02h,(7)&7
 15925  15CC  1FB4               	goto	u4951
 15926  15CD  2DCF               	goto	u4950
 15927  15CE  2DD0               u4951:
 15928  15CF                     	goto	l3635
 15929  15CF  2DD2               u4950:
 15930  15D0                     	line	42
 15931                           	
 15932                           l3633:	
 15933  15D0                     	bsf	(___flmul@aexp)+(0/8),(0)&7
 15934  15D0  1440               	goto	l3635
 15935  15D1  2DD2               	line	43
 15936                           	
 15937                           l915:	
 15938  15D2                     	line	45
 15939                           	
 15940                           l3635:	
 15941  15D2                     	movf	((___flmul@aexp)),w
 15942  15D2  0840               	btfsc	status,2
 15943  15D3  1903               	goto	u4961
 15944  15D4  2DD6               	goto	u4960
 15945  15D5  2DD7               u4961:
 15946  15D6                     	goto	l3643
 15947  15D6  2DE7               u4960:
 15948  15D7                     	line	48
 15949                           	
 15950                           l3637:	
 15951  15D7                     		incf	((___flmul@aexp)),w
 15952  15D7  0A40               	btfss	status,2
 15953  15D8  1D03               	goto	u4971
 15954  15D9  2DDB               	goto	u4970
 15955  15DA  2DDC               u4971:
 15956  15DB                     	goto	l3641
 15957  15DB  2DE5               u4970:
 15958  15DC                     	line	50
 15959                           	
 15960                           l3639:	
 15961  15DC                     	movlw	0x0
 15962  15DC  3000               	movwf	(___flmul@a+3)
 15963  15DD  00B5               	movlw	0x0
 15964  15DE  3000               	movwf	(___flmul@a+2)
 15965  15DF  00B4               	movlw	0x0
 15966  15E0  3000               	movwf	(___flmul@a+1)
 15967  15E1  00B3               	movlw	0x0
 15968  15E2  3000               	movwf	(___flmul@a)
 15969  15E3  00B2               
 15970                           	goto	l3641
 15971  15E4  2DE5               	line	51
 15972                           	
 15973                           l917:	
 15974  15E5                     	line	53
 15975                           	
 15976                           l3641:	
 15977  15E5                     	bsf	(___flmul@a)+(23/8),(23)&7
 15978  15E5  17B4               	line	54
 15979                           	goto	l3645
 15980  15E6  2DF0               	line	55
 15981                           	
 15982                           l916:	
 15983  15E7                     	line	57
 15984                           	
 15985                           l3643:	
 15986  15E7                     	movlw	0x0
 15987  15E7  3000               	movwf	(___flmul@a+3)
 15988  15E8  00B5               	movlw	0x0
 15989  15E9  3000               	movwf	(___flmul@a+2)
 15990  15EA  00B4               	movlw	0x0
 15991  15EB  3000               	movwf	(___flmul@a+1)
 15992  15EC  00B3               	movlw	0x0
 15993  15ED  3000               	movwf	(___flmul@a)
 15994  15EE  00B2               
 15995                           	goto	l3645
 15996  15EF  2DF0               	line	58
 15997                           	
 15998                           l918:	
 15999  15F0                     	line	65
 16000                           	
 16001                           l3645:	
 16002  15F0                     	movf	((___flmul@aexp)),w
 16003  15F0  0840               	btfsc	status,2
 16004  15F1  1903               	goto	u4981
 16005  15F2  2DF4               	goto	u4980
 16006  15F3  2DF5               u4981:
 16007  15F4                     	goto	l3649
 16008  15F4  2DFB               u4980:
 16009  15F5                     	
 16010                           l3647:	
 16011  15F5                     	movf	((___flmul@bexp)),w
 16012  15F5  0841               	btfss	status,2
 16013  15F6  1D03               	goto	u4991
 16014  15F7  2DF9               	goto	u4990
 16015  15F8  2DFA               u4991:
 16016  15F9                     	goto	l3653
 16017  15F9  2E05               u4990:
 16018  15FA                     	goto	l3649
 16019  15FA  2DFB               	
 16020                           l921:	
 16021  15FB                     	line	66
 16022                           	
 16023                           l3649:	
 16024  15FB                     	movlw	0x0
 16025  15FB  3000               	movwf	(?___flmul+3)
 16026  15FC  00B1               	movlw	0x0
 16027  15FD  3000               	movwf	(?___flmul+2)
 16028  15FE  00B0               	movlw	0x0
 16029  15FF  3000               	movwf	(?___flmul+1)
 16030  1600  00AF               	movlw	0x0
 16031  1601  3000               	movwf	(?___flmul)
 16032  1602  00AE               
 16033                           	goto	l922
 16034  1603  2FFF               	
 16035                           l3651:	
 16036  1604                     	goto	l922
 16037  1604  2FFF               	line	67
 16038                           	
 16039                           l919:	
 16040  1605                     	line	119
 16041                           	
 16042                           l3653:	
 16043  1605                     	movf	(___flmul@b),w
 16044  1605  082E               	movwf	(??___flmul+0)+0
 16045  1606  00B6               	movf	(??___flmul+0)+0,w
 16046  1607  0836               	movwf	(__Umul8_16@multiplicand)
 16047  1608  00A0               	movf	0+(___flmul@a)+02h,w
 16048  1609  0834               	fcall	__Umul8_16
 16049  160A  31A7  2785  3195   	movlb 0	; select bank0
 16050  160D  0140               	movf	(1+(?__Umul8_16)),w
 16051  160E  0821               	movwf	(___flmul@temp+1)
 16052  160F  00C7               	movf	(0+(?__Umul8_16)),w
 16053  1610  0820               	movwf	(___flmul@temp)
 16054  1611  00C6               	line	120
 16055                           	
 16056                           l3655:	
 16057  1612                     	movf	(___flmul@temp),w
 16058  1612  0846               	movwf	(??___flmul+0)+0
 16059  1613  00B6               	clrf	(??___flmul+0)+0+1
 16060  1614  01B7               	clrf	(??___flmul+0)+0+2
 16061  1615  01B8               	clrf	(??___flmul+0)+0+3
 16062  1616  01B9               	movf	3+(??___flmul+0)+0,w
 16063  1617  0839               	movwf	(___flmul@grs+3)
 16064  1618  00BF               	movf	2+(??___flmul+0)+0,w
 16065  1619  0838               	movwf	(___flmul@grs+2)
 16066  161A  00BE               	movf	1+(??___flmul+0)+0,w
 16067  161B  0837               	movwf	(___flmul@grs+1)
 16068  161C  00BD               	movf	0+(??___flmul+0)+0,w
 16069  161D  0836               	movwf	(___flmul@grs)
 16070  161E  00BC               
 16071                           	line	121
 16072                           	
 16073                           l3657:	
 16074  161F                     	movf	0+(___flmul@temp)+01h,w
 16075  161F  0847               	movwf	(??___flmul+0)+0
 16076  1620  00B6               	clrf	(??___flmul+0)+0+1
 16077  1621  01B7               	clrf	(??___flmul+0)+0+2
 16078  1622  01B8               	clrf	(??___flmul+0)+0+3
 16079  1623  01B9               	movf	3+(??___flmul+0)+0,w
 16080  1624  0839               	movwf	(___flmul@prod+3)
 16081  1625  00C5               	movf	2+(??___flmul+0)+0,w
 16082  1626  0838               	movwf	(___flmul@prod+2)
 16083  1627  00C4               	movf	1+(??___flmul+0)+0,w
 16084  1628  0837               	movwf	(___flmul@prod+1)
 16085  1629  00C3               	movf	0+(??___flmul+0)+0,w
 16086  162A  0836               	movwf	(___flmul@prod)
 16087  162B  00C2               
 16088                           	line	122
 16089                           	movf	0+(___flmul@b)+01h,w
 16090  162C  082F               	movwf	(??___flmul+0)+0
 16091  162D  00B6               	movf	(??___flmul+0)+0,w
 16092  162E  0836               	movwf	(__Umul8_16@multiplicand)
 16093  162F  00A0               	movf	0+(___flmul@a)+01h,w
 16094  1630  0833               	fcall	__Umul8_16
 16095  1631  31A7  2785  3195   	movlb 0	; select bank0
 16096  1634  0140               	movf	(1+(?__Umul8_16)),w
 16097  1635  0821               	movwf	(___flmul@temp+1)
 16098  1636  00C7               	movf	(0+(?__Umul8_16)),w
 16099  1637  0820               	movwf	(___flmul@temp)
 16100  1638  00C6               	line	123
 16101                           	
 16102                           l3659:	
 16103  1639                     	movf	(___flmul@temp),w
 16104  1639  0846               	movwf	(??___flmul+0)+0
 16105  163A  00B6               	clrf	(??___flmul+0)+0+1
 16106  163B  01B7               	clrf	(??___flmul+0)+0+2
 16107  163C  01B8               	clrf	(??___flmul+0)+0+3
 16108  163D  01B9               	movf	0+(??___flmul+0)+0,w
 16109  163E  0836               	addwf	(___flmul@grs),f
 16110  163F  07BC               	movf	1+(??___flmul+0)+0,w
 16111  1640  0837               	addwfc	(___flmul@grs+1),f
 16112  1641  3DBD               	movf	2+(??___flmul+0)+0,w
 16113  1642  0838               	addwfc	(___flmul@grs+2),f
 16114  1643  3DBE               	movf	3+(??___flmul+0)+0,w
 16115  1644  0839               	addwfc	(___flmul@grs+3),f
 16116  1645  3DBF               	line	124
 16117                           	
 16118                           l3661:	
 16119  1646                     	movf	0+(___flmul@temp)+01h,w
 16120  1646  0847               	movwf	(??___flmul+0)+0
 16121  1647  00B6               	clrf	(??___flmul+0)+0+1
 16122  1648  01B7               	clrf	(??___flmul+0)+0+2
 16123  1649  01B8               	clrf	(??___flmul+0)+0+3
 16124  164A  01B9               	movf	0+(??___flmul+0)+0,w
 16125  164B  0836               	addwf	(___flmul@prod),f
 16126  164C  07C2               	movf	1+(??___flmul+0)+0,w
 16127  164D  0837               	addwfc	(___flmul@prod+1),f
 16128  164E  3DC3               	movf	2+(??___flmul+0)+0,w
 16129  164F  0838               	addwfc	(___flmul@prod+2),f
 16130  1650  3DC4               	movf	3+(??___flmul+0)+0,w
 16131  1651  0839               	addwfc	(___flmul@prod+3),f
 16132  1652  3DC5               	line	125
 16133                           	movf	0+(___flmul@b)+02h,w
 16134  1653  0830               	movwf	(??___flmul+0)+0
 16135  1654  00B6               	movf	(??___flmul+0)+0,w
 16136  1655  0836               	movwf	(__Umul8_16@multiplicand)
 16137  1656  00A0               	movf	(___flmul@a),w
 16138  1657  0832               	fcall	__Umul8_16
 16139  1658  31A7  2785  3195   	movlb 0	; select bank0
 16140  165B  0140               	movf	(1+(?__Umul8_16)),w
 16141  165C  0821               	movwf	(___flmul@temp+1)
 16142  165D  00C7               	movf	(0+(?__Umul8_16)),w
 16143  165E  0820               	movwf	(___flmul@temp)
 16144  165F  00C6               	line	126
 16145                           	
 16146                           l3663:	
 16147  1660                     	movf	(___flmul@temp),w
 16148  1660  0846               	movwf	(??___flmul+0)+0
 16149  1661  00B6               	clrf	(??___flmul+0)+0+1
 16150  1662  01B7               	clrf	(??___flmul+0)+0+2
 16151  1663  01B8               	clrf	(??___flmul+0)+0+3
 16152  1664  01B9               	movf	0+(??___flmul+0)+0,w
 16153  1665  0836               	addwf	(___flmul@grs),f
 16154  1666  07BC               	movf	1+(??___flmul+0)+0,w
 16155  1667  0837               	addwfc	(___flmul@grs+1),f
 16156  1668  3DBD               	movf	2+(??___flmul+0)+0,w
 16157  1669  0838               	addwfc	(___flmul@grs+2),f
 16158  166A  3DBE               	movf	3+(??___flmul+0)+0,w
 16159  166B  0839               	addwfc	(___flmul@grs+3),f
 16160  166C  3DBF               	line	127
 16161                           	
 16162                           l3665:	
 16163  166D                     	movf	0+(___flmul@temp)+01h,w
 16164  166D  0847               	movwf	(??___flmul+0)+0
 16165  166E  00B6               	clrf	(??___flmul+0)+0+1
 16166  166F  01B7               	clrf	(??___flmul+0)+0+2
 16167  1670  01B8               	clrf	(??___flmul+0)+0+3
 16168  1671  01B9               	movf	0+(??___flmul+0)+0,w
 16169  1672  0836               	addwf	(___flmul@prod),f
 16170  1673  07C2               	movf	1+(??___flmul+0)+0,w
 16171  1674  0837               	addwfc	(___flmul@prod+1),f
 16172  1675  3DC3               	movf	2+(??___flmul+0)+0,w
 16173  1676  0838               	addwfc	(___flmul@prod+2),f
 16174  1677  3DC4               	movf	3+(??___flmul+0)+0,w
 16175  1678  0839               	addwfc	(___flmul@prod+3),f
 16176  1679  3DC5               	line	128
 16177                           	
 16178                           l3667:	
 16179  167A                     	movlw	08h
 16180  167A  3008               u5005:
 16181  167B                     	lslf	(___flmul@grs),f
 16182  167B  35BC               	rlf	(___flmul@grs+1),f
 16183  167C  0DBD               	rlf	(___flmul@grs+2),f
 16184  167D  0DBE               	rlf	(___flmul@grs+3),f
 16185  167E  0DBF               	decfsz	wreg,f
 16186  167F  0B89               	goto	u5005
 16187  1680  2E7B               	line	129
 16188                           	
 16189                           l3669:	
 16190  1681                     	movf	0+(___flmul@b)+01h,w
 16191  1681  082F               	movwf	(??___flmul+0)+0
 16192  1682  00B6               	movf	(??___flmul+0)+0,w
 16193  1683  0836               	movwf	(__Umul8_16@multiplicand)
 16194  1684  00A0               	movf	(___flmul@a),w
 16195  1685  0832               	fcall	__Umul8_16
 16196  1686  31A7  2785  3195   	movlb 0	; select bank0
 16197  1689  0140               	movf	(1+(?__Umul8_16)),w
 16198  168A  0821               	movwf	(___flmul@temp+1)
 16199  168B  00C7               	movf	(0+(?__Umul8_16)),w
 16200  168C  0820               	movwf	(___flmul@temp)
 16201  168D  00C6               	line	130
 16202                           	
 16203                           l3671:	
 16204  168E                     	movf	(___flmul@temp),w
 16205  168E  0846               	addwf	(___flmul@grs),f
 16206  168F  07BC               	movf	(___flmul@temp+1),w
 16207  1690  0847               	addwfc	(___flmul@grs+1),f
 16208  1691  3DBD               	movlw	0
 16209  1692  3000               	addwfc	(___flmul@grs+2),f
 16210  1693  3DBE               	addwfc	(___flmul@grs+3),f
 16211  1694  3DBF               	line	131
 16212                           	
 16213                           l3673:	
 16214  1695                     	movf	(___flmul@b),w
 16215  1695  082E               	movwf	(??___flmul+0)+0
 16216  1696  00B6               	movf	(??___flmul+0)+0,w
 16217  1697  0836               	movwf	(__Umul8_16@multiplicand)
 16218  1698  00A0               	movf	0+(___flmul@a)+01h,w
 16219  1699  0833               	fcall	__Umul8_16
 16220  169A  31A7  2785  3195   	movlb 0	; select bank0
 16221  169D  0140               	movf	(1+(?__Umul8_16)),w
 16222  169E  0821               	movwf	(___flmul@temp+1)
 16223  169F  00C7               	movf	(0+(?__Umul8_16)),w
 16224  16A0  0820               	movwf	(___flmul@temp)
 16225  16A1  00C6               	line	132
 16226                           	
 16227                           l3675:	
 16228  16A2                     	movf	(___flmul@temp),w
 16229  16A2  0846               	addwf	(___flmul@grs),f
 16230  16A3  07BC               	movf	(___flmul@temp+1),w
 16231  16A4  0847               	addwfc	(___flmul@grs+1),f
 16232  16A5  3DBD               	movlw	0
 16233  16A6  3000               	addwfc	(___flmul@grs+2),f
 16234  16A7  3DBE               	addwfc	(___flmul@grs+3),f
 16235  16A8  3DBF               	line	133
 16236                           	
 16237                           l3677:	
 16238  16A9                     	movlw	08h
 16239  16A9  3008               u5015:
 16240  16AA                     	lslf	(___flmul@grs),f
 16241  16AA  35BC               	rlf	(___flmul@grs+1),f
 16242  16AB  0DBD               	rlf	(___flmul@grs+2),f
 16243  16AC  0DBE               	rlf	(___flmul@grs+3),f
 16244  16AD  0DBF               	decfsz	wreg,f
 16245  16AE  0B89               	goto	u5015
 16246  16AF  2EAA               	line	134
 16247                           	movf	(___flmul@b),w
 16248  16B0  082E               	movwf	(??___flmul+0)+0
 16249  16B1  00B6               	movf	(??___flmul+0)+0,w
 16250  16B2  0836               	movwf	(__Umul8_16@multiplicand)
 16251  16B3  00A0               	movf	(___flmul@a),w
 16252  16B4  0832               	fcall	__Umul8_16
 16253  16B5  31A7  2785  3195   	movlb 0	; select bank0
 16254  16B8  0140               	movf	(1+(?__Umul8_16)),w
 16255  16B9  0821               	movwf	(___flmul@temp+1)
 16256  16BA  00C7               	movf	(0+(?__Umul8_16)),w
 16257  16BB  0820               	movwf	(___flmul@temp)
 16258  16BC  00C6               	line	135
 16259                           	
 16260                           l3679:	
 16261  16BD                     	movf	(___flmul@temp),w
 16262  16BD  0846               	addwf	(___flmul@grs),f
 16263  16BE  07BC               	movf	(___flmul@temp+1),w
 16264  16BF  0847               	addwfc	(___flmul@grs+1),f
 16265  16C0  3DBD               	movlw	0
 16266  16C1  3000               	addwfc	(___flmul@grs+2),f
 16267  16C2  3DBE               	addwfc	(___flmul@grs+3),f
 16268  16C3  3DBF               	line	136
 16269                           	
 16270                           l3681:	
 16271  16C4                     	movf	0+(___flmul@b)+01h,w
 16272  16C4  082F               	movwf	(??___flmul+0)+0
 16273  16C5  00B6               	movf	(??___flmul+0)+0,w
 16274  16C6  0836               	movwf	(__Umul8_16@multiplicand)
 16275  16C7  00A0               	movf	0+(___flmul@a)+02h,w
 16276  16C8  0834               	fcall	__Umul8_16
 16277  16C9  31A7  2785  3195   	movlb 0	; select bank0
 16278  16CC  0140               	movf	(1+(?__Umul8_16)),w
 16279  16CD  0821               	movwf	(___flmul@temp+1)
 16280  16CE  00C7               	movf	(0+(?__Umul8_16)),w
 16281  16CF  0820               	movwf	(___flmul@temp)
 16282  16D0  00C6               	line	137
 16283                           	movf	(___flmul@temp),w
 16284  16D1  0846               	addwf	(___flmul@prod),f
 16285  16D2  07C2               	movf	(___flmul@temp+1),w
 16286  16D3  0847               	addwfc	(___flmul@prod+1),f
 16287  16D4  3DC3               	movlw	0
 16288  16D5  3000               	addwfc	(___flmul@prod+2),f
 16289  16D6  3DC4               	addwfc	(___flmul@prod+3),f
 16290  16D7  3DC5               	line	138
 16291                           	
 16292                           l3683:	
 16293  16D8                     	movf	0+(___flmul@b)+02h,w
 16294  16D8  0830               	movwf	(??___flmul+0)+0
 16295  16D9  00B6               	movf	(??___flmul+0)+0,w
 16296  16DA  0836               	movwf	(__Umul8_16@multiplicand)
 16297  16DB  00A0               	movf	0+(___flmul@a)+01h,w
 16298  16DC  0833               	fcall	__Umul8_16
 16299  16DD  31A7  2785  3195   	movlb 0	; select bank0
 16300  16E0  0140               	movf	(1+(?__Umul8_16)),w
 16301  16E1  0821               	movwf	(___flmul@temp+1)
 16302  16E2  00C7               	movf	(0+(?__Umul8_16)),w
 16303  16E3  0820               	movwf	(___flmul@temp)
 16304  16E4  00C6               	line	139
 16305                           	
 16306                           l3685:	
 16307  16E5                     	movf	(___flmul@temp),w
 16308  16E5  0846               	addwf	(___flmul@prod),f
 16309  16E6  07C2               	movf	(___flmul@temp+1),w
 16310  16E7  0847               	addwfc	(___flmul@prod+1),f
 16311  16E8  3DC3               	movlw	0
 16312  16E9  3000               	addwfc	(___flmul@prod+2),f
 16313  16EA  3DC4               	addwfc	(___flmul@prod+3),f
 16314  16EB  3DC5               	line	140
 16315                           	movf	0+(___flmul@b)+02h,w
 16316  16EC  0830               	movwf	(??___flmul+0)+0
 16317  16ED  00B6               	movf	(??___flmul+0)+0,w
 16318  16EE  0836               	movwf	(__Umul8_16@multiplicand)
 16319  16EF  00A0               	movf	0+(___flmul@a)+02h,w
 16320  16F0  0834               	fcall	__Umul8_16
 16321  16F1  31A7  2785  3195   	movlb 0	; select bank0
 16322  16F4  0140               	movf	(1+(?__Umul8_16)),w
 16323  16F5  0821               	movwf	(___flmul@temp+1)
 16324  16F6  00C7               	movf	(0+(?__Umul8_16)),w
 16325  16F7  0820               	movwf	(___flmul@temp)
 16326  16F8  00C6               	line	141
 16327                           	
 16328                           l3687:	
 16329  16F9                     	movf	(___flmul@temp),w
 16330  16F9  0846               	movwf	((??___flmul+0)+0)
 16331  16FA  00B6               	movf	(___flmul@temp+1),w
 16332  16FB  0847               	movwf	((??___flmul+0)+0+1)
 16333  16FC  00B7               	clrf	((??___flmul+0)+0+2)
 16334  16FD  01B8               	clrf	((??___flmul+0)+0+3)
 16335  16FE  01B9               	movlw	08h
 16336  16FF  3008               u5025:
 16337  1700                     	lslf	(??___flmul+0)+0,f
 16338  1700  35B6               	rlf	(??___flmul+0)+1,f
 16339  1701  0DB7               	rlf	(??___flmul+0)+2,f
 16340  1702  0DB8               	rlf	(??___flmul+0)+3,f
 16341  1703  0DB9               u5020:
 16342  1704                     	decfsz	wreg,f
 16343  1704  0B89               	goto	u5025
 16344  1705  2F00               	movf	0+(??___flmul+0)+0,w
 16345  1706  0836               	addwf	(___flmul@prod),f
 16346  1707  07C2               	movf	1+(??___flmul+0)+0,w
 16347  1708  0837               	addwfc	(___flmul@prod+1),f
 16348  1709  3DC3               	movf	2+(??___flmul+0)+0,w
 16349  170A  0838               	addwfc	(___flmul@prod+2),f
 16350  170B  3DC4               	movf	3+(??___flmul+0)+0,w
 16351  170C  0839               	addwfc	(___flmul@prod+3),f
 16352  170D  3DC5               	line	145
 16353                           	
 16354                           l3689:	
 16355  170E                     	movf	(___flmul@grs),w
 16356  170E  083C               	movwf	(??___flmul+0)+0
 16357  170F  00B6               	movf	(___flmul@grs+1),w
 16358  1710  083D               	movwf	((??___flmul+0)+0+1)
 16359  1711  00B7               	movf	(___flmul@grs+2),w
 16360  1712  083E               	movwf	((??___flmul+0)+0+2)
 16361  1713  00B8               	movf	(___flmul@grs+3),w
 16362  1714  083F               	movwf	((??___flmul+0)+0+3)
 16363  1715  00B9               	movlw	018h
 16364  1716  3018               u5035:
 16365  1717                     	lsrf	(??___flmul+0)+3,f
 16366  1717  36B9               	rrf	(??___flmul+0)+2,f
 16367  1718  0CB8               	rrf	(??___flmul+0)+1,f
 16368  1719  0CB7               	rrf	(??___flmul+0)+0,f
 16369  171A  0CB6               u5030:
 16370  171B                     	decfsz	wreg,f
 16371  171B  0B89               	goto	u5035
 16372  171C  2F17               	movf	0+(??___flmul+0)+0,w
 16373  171D  0836               	addwf	(___flmul@prod),f
 16374  171E  07C2               	movf	1+(??___flmul+0)+0,w
 16375  171F  0837               	addwfc	(___flmul@prod+1),f
 16376  1720  3DC3               	movf	2+(??___flmul+0)+0,w
 16377  1721  0838               	addwfc	(___flmul@prod+2),f
 16378  1722  3DC4               	movf	3+(??___flmul+0)+0,w
 16379  1723  0839               	addwfc	(___flmul@prod+3),f
 16380  1724  3DC5               	line	146
 16381                           	
 16382                           l3691:	
 16383  1725                     	movlw	08h
 16384  1725  3008               u5045:
 16385  1726                     	lslf	(___flmul@grs),f
 16386  1726  35BC               	rlf	(___flmul@grs+1),f
 16387  1727  0DBD               	rlf	(___flmul@grs+2),f
 16388  1728  0DBE               	rlf	(___flmul@grs+3),f
 16389  1729  0DBF               	decfsz	wreg,f
 16390  172A  0B89               	goto	u5045
 16391  172B  2F26               	line	149
 16392                           	
 16393                           l3693:	
 16394  172C                     	movf	(___flmul@bexp),w
 16395  172C  0841               	addwf	(___flmul@aexp),w
 16396  172D  0740               	movwf	(??___flmul+0)+0
 16397  172E  00B6               	clrf	(??___flmul+0)+0+1
 16398  172F  01B7               	rlf	1+(??___flmul+0)+0,f
 16399  1730  0DB7               	
 16400                           	movf	0+(??___flmul+0)+0,w
 16401  1731  0836               	addlw	082h
 16402  1732  3E82               	movwf	(___flmul@temp)
 16403  1733  00C6               	movlw	0FFh
 16404  1734  30FF               	addwfc	1+(??___flmul+0)+0,w
 16405  1735  3D37               	movwf	1+(___flmul@temp)
 16406  1736  00C7               	line	152
 16407                           	goto	l3705
 16408  1737  2F51               	
 16409                           l924:	
 16410  1738                     	line	153
 16411                           	
 16412                           l3695:	
 16413  1738                     	movlw	01h
 16414  1738  3001               u5055:
 16415  1739                     	lslf	(___flmul@prod),f
 16416  1739  35C2               	rlf	(___flmul@prod+1),f
 16417  173A  0DC3               	rlf	(___flmul@prod+2),f
 16418  173B  0DC4               	rlf	(___flmul@prod+3),f
 16419  173C  0DC5               	decfsz	wreg,f
 16420  173D  0B89               	goto	u5055
 16421  173E  2F39               	line	154
 16422                           	
 16423                           l3697:	
 16424  173F                     	btfss	(___flmul@grs+3),(31)&7
 16425  173F  1FBF               	goto	u5061
 16426  1740  2F42               	goto	u5060
 16427  1741  2F43               u5061:
 16428  1742                     	goto	l3701
 16429  1742  2F45               u5060:
 16430  1743                     	line	155
 16431                           	
 16432                           l3699:	
 16433  1743                     	bsf	(___flmul@prod)+(0/8),(0)&7
 16434  1743  1442               	goto	l3701
 16435  1744  2F45               	line	156
 16436                           	
 16437                           l925:	
 16438  1745                     	line	157
 16439                           	
 16440                           l3701:	
 16441  1745                     	movlw	01h
 16442  1745  3001               u5075:
 16443  1746                     	lslf	(___flmul@grs),f
 16444  1746  35BC               	rlf	(___flmul@grs+1),f
 16445  1747  0DBD               	rlf	(___flmul@grs+2),f
 16446  1748  0DBE               	rlf	(___flmul@grs+3),f
 16447  1749  0DBF               	decfsz	wreg,f
 16448  174A  0B89               	goto	u5075
 16449  174B  2F46               	line	158
 16450                           	
 16451                           l3703:	
 16452  174C                     	movlw	0FFh
 16453  174C  30FF               	addwf	(___flmul@temp),f
 16454  174D  07C6               	movlw	0FFh
 16455  174E  30FF               	addwfc	(___flmul@temp+1),f
 16456  174F  3DC7               	goto	l3705
 16457  1750  2F51               	line	159
 16458                           	
 16459                           l923:	
 16460  1751                     	line	152
 16461                           	
 16462                           l3705:	
 16463  1751                     	btfss	(___flmul@prod+2),(23)&7
 16464  1751  1FC4               	goto	u5081
 16465  1752  2F54               	goto	u5080
 16466  1753  2F55               u5081:
 16467  1754                     	goto	l3695
 16468  1754  2F38               u5080:
 16469  1755                     	goto	l3707
 16470  1755  2F56               	
 16471                           l926:	
 16472  1756                     	line	163
 16473                           	
 16474                           l3707:	
 16475  1756                     	clrf	(___flmul@aexp)
 16476  1756  01C0               	line	164
 16477                           	
 16478                           l3709:	
 16479  1757                     	btfss	(___flmul@grs+3),(31)&7
 16480  1757  1FBF               	goto	u5091
 16481  1758  2F5A               	goto	u5090
 16482  1759  2F5B               u5091:
 16483  175A                     	goto	l3717
 16484  175A  2F7B               u5090:
 16485  175B                     	line	165
 16486                           	
 16487                           l3711:	
 16488  175B                     	movlw	0FFh
 16489  175B  30FF               	andwf	(___flmul@grs),w
 16490  175C  053C               	movwf	(??___flmul+0)+0
 16491  175D  00B6               	movlw	0FFh
 16492  175E  30FF               	andwf	(___flmul@grs+1),w
 16493  175F  053D               	movwf	((??___flmul+0)+0+1)
 16494  1760  00B7               	movlw	0FFh
 16495  1761  30FF               	andwf	(___flmul@grs+2),w
 16496  1762  053E               	movwf	((??___flmul+0)+0+2)
 16497  1763  00B8               	movlw	07Fh
 16498  1764  307F               	andwf	(___flmul@grs+3),w
 16499  1765  053F               	movwf	((??___flmul+0)+0+3)
 16500  1766  00B9               	movf	3+(??___flmul+0)+0,w
 16501  1767  0839               	iorwf	2+(??___flmul+0)+0,w
 16502  1768  0438               	iorwf	1+(??___flmul+0)+0,w
 16503  1769  0437               	iorwf	0+(??___flmul+0)+0,w
 16504  176A  0436               	skipnz
 16505  176B  1903               	goto	u5101
 16506  176C  2F6E               	goto	u5100
 16507  176D  2F6F               u5101:
 16508  176E                     	goto	l928
 16509  176E  2F72               u5100:
 16510  176F                     	line	166
 16511                           	
 16512                           l3713:	
 16513  176F                     	clrf	(___flmul@aexp)
 16514  176F  01C0               	incf	(___flmul@aexp),f
 16515  1770  0AC0               	line	167
 16516                           	goto	l3717
 16517  1771  2F7B               	line	168
 16518                           	
 16519                           l928:	
 16520  1772                     	line	169
 16521                           	btfss	(___flmul@prod),(0)&7
 16522  1772  1C42               	goto	u5111
 16523  1773  2F75               	goto	u5110
 16524  1774  2F76               u5111:
 16525  1775                     	goto	l3717
 16526  1775  2F7B               u5110:
 16527  1776                     	line	170
 16528                           	
 16529                           l3715:	
 16530  1776                     	clrf	(___flmul@aexp)
 16531  1776  01C0               	incf	(___flmul@aexp),f
 16532  1777  0AC0               	goto	l3717
 16533  1778  2F7B               	line	171
 16534                           	
 16535                           l930:	
 16536  1779                     	goto	l3717
 16537  1779  2F7B               	line	172
 16538                           	
 16539                           l929:	
 16540  177A                     	goto	l3717
 16541  177A  2F7B               	line	173
 16542                           	
 16543                           l927:	
 16544  177B                     	line	174
 16545                           	
 16546                           l3717:	
 16547  177B                     	movf	((___flmul@aexp)),w
 16548  177B  0840               	btfsc	status,2
 16549  177C  1903               	goto	u5121
 16550  177D  2F7F               	goto	u5120
 16551  177E  2F80               u5121:
 16552  177F                     	goto	l3727
 16553  177F  2FAA               u5120:
 16554  1780                     	line	175
 16555                           	
 16556                           l3719:	
 16557  1780                     	movlw	01h
 16558  1780  3001               	addwf	(___flmul@prod),f
 16559  1781  07C2               	movlw	0
 16560  1782  3000               	addwfc	(___flmul@prod+1),f
 16561  1783  3DC3               	movlw	0
 16562  1784  3000               	addwfc	(___flmul@prod+2),f
 16563  1785  3DC4               	movlw	0
 16564  1786  3000               	addwfc	(___flmul@prod+3),f
 16565  1787  3DC5               	line	176
 16566                           	
 16567                           l3721:	
 16568  1788                     	btfss	(___flmul@prod+3),(24)&7
 16569  1788  1C45               	goto	u5131
 16570  1789  2F8B               	goto	u5130
 16571  178A  2F8C               u5131:
 16572  178B                     	goto	l3727
 16573  178B  2FAA               u5130:
 16574  178C                     	line	177
 16575                           	
 16576                           l3723:	
 16577  178C                     	movf	(___flmul@prod),w
 16578  178C  0842               	movwf	(??___flmul+0)+0
 16579  178D  00B6               	movf	(___flmul@prod+1),w
 16580  178E  0843               	movwf	((??___flmul+0)+0+1)
 16581  178F  00B7               	movf	(___flmul@prod+2),w
 16582  1790  0844               	movwf	((??___flmul+0)+0+2)
 16583  1791  00B8               	movf	(___flmul@prod+3),w
 16584  1792  0845               	movwf	((??___flmul+0)+0+3)
 16585  1793  00B9               	movlw	01h
 16586  1794  3001               	movwf	(??___flmul+4)+0
 16587  1795  00BA               u5145:
 16588  1796                     	asrf	(??___flmul+0)+3,f
 16589  1796  37B9               	rrf	(??___flmul+0)+2,f
 16590  1797  0CB8               	rrf	(??___flmul+0)+1,f
 16591  1798  0CB7               	rrf	(??___flmul+0)+0,f
 16592  1799  0CB6               u5140:
 16593  179A                     	decfsz	(??___flmul+4)+0,f
 16594  179A  0BBA               	goto	u5145
 16595  179B  2F96               	movf	3+(??___flmul+0)+0,w
 16596  179C  0839               	movwf	(___flmul@prod+3)
 16597  179D  00C5               	movf	2+(??___flmul+0)+0,w
 16598  179E  0838               	movwf	(___flmul@prod+2)
 16599  179F  00C4               	movf	1+(??___flmul+0)+0,w
 16600  17A0  0837               	movwf	(___flmul@prod+1)
 16601  17A1  00C3               	movf	0+(??___flmul+0)+0,w
 16602  17A2  0836               	movwf	(___flmul@prod)
 16603  17A3  00C2               
 16604                           	line	178
 16605                           	
 16606                           l3725:	
 16607  17A4                     	movlw	01h
 16608  17A4  3001               	addwf	(___flmul@temp),f
 16609  17A5  07C6               	movlw	0
 16610  17A6  3000               	addwfc	(___flmul@temp+1),f
 16611  17A7  3DC7               	goto	l3727
 16612  17A8  2FAA               	line	179
 16613                           	
 16614                           l932:	
 16615  17A9                     	goto	l3727
 16616  17A9  2FAA               	line	180
 16617                           	
 16618                           l931:	
 16619  17AA                     	line	183
 16620                           	
 16621                           l3727:	
 16622  17AA                     	movf	(___flmul@temp+1),w
 16623  17AA  0847               	xorlw	80h
 16624  17AB  3A80               	movwf	(??___flmul+0)+0
 16625  17AC  00B6               	movlw	(0)^80h
 16626  17AD  3080               	subwf	(??___flmul+0)+0,w
 16627  17AE  0236               	skipz
 16628  17AF  1D03               	goto	u5155
 16629  17B0  2FB3               	movlw	0FFh
 16630  17B1  30FF               	subwf	(___flmul@temp),w
 16631  17B2  0246               u5155:
 16632  17B3                     
 16633                           	skipc
 16634  17B3  1C03               	goto	u5151
 16635  17B4  2FB6               	goto	u5150
 16636  17B5  2FB7               u5151:
 16637  17B6                     	goto	l3731
 16638  17B6  2FC1               u5150:
 16639  17B7                     	line	184
 16640                           	
 16641                           l3729:	
 16642  17B7                     	movlw	07Fh
 16643  17B7  307F               	movlb 0	; select bank0
 16644  17B8  0140               	movwf	(___flmul@prod+3)
 16645  17B9  00C5               	movlw	080h
 16646  17BA  3080               	movwf	(___flmul@prod+2)
 16647  17BB  00C4               	movlw	0
 16648  17BC  3000               	movwf	(___flmul@prod+1)
 16649  17BD  00C3               	movlw	0
 16650  17BE  3000               	movwf	(___flmul@prod)
 16651  17BF  00C2               
 16652                           	line	185
 16653                           	goto	l934
 16654  17C0  2FF2               	line	187
 16655                           	
 16656                           l933:	
 16657  17C1                     	
 16658                           l3731:	
 16659  17C1                     	movlb 0	; select bank0
 16660  17C1  0140               	movf	(___flmul@temp+1),w
 16661  17C2  0847               	xorlw	80h
 16662  17C3  3A80               	movwf	(??___flmul+0)+0
 16663  17C4  00B6               	movlw	(0)^80h
 16664  17C5  3080               	subwf	(??___flmul+0)+0,w
 16665  17C6  0236               	skipz
 16666  17C7  1D03               	goto	u5165
 16667  17C8  2FCB               	movlw	01h
 16668  17C9  3001               	subwf	(___flmul@temp),w
 16669  17CA  0246               u5165:
 16670  17CB                     
 16671                           	skipnc
 16672  17CB  1803               	goto	u5161
 16673  17CC  2FCE               	goto	u5160
 16674  17CD  2FCF               u5161:
 16675  17CE                     	goto	l3737
 16676  17CE  2FDA               u5160:
 16677  17CF                     	line	188
 16678                           	
 16679                           l3733:	
 16680  17CF                     	movlw	high highword(0)
 16681  17CF  3000               	movlb 0	; select bank0
 16682  17D0  0140               	movwf	(___flmul@prod+3)
 16683  17D1  00C5               	movlw	low highword(0)
 16684  17D2  3000               	movwf	(___flmul@prod+2)
 16685  17D3  00C4               	movlw	high(0)
 16686  17D4  3000               	movwf	(___flmul@prod+1)
 16687  17D5  00C3               	movlw	low(0)
 16688  17D6  3000               	movwf	(___flmul@prod)
 16689  17D7  00C2               
 16690                           	line	190
 16691                           	
 16692                           l3735:	
 16693  17D8                     	clrf	(___flmul@sign)
 16694  17D8  01BB               	line	191
 16695                           	goto	l934
 16696  17D9  2FF2               	line	192
 16697                           	
 16698                           l935:	
 16699  17DA                     	line	194
 16700                           	
 16701                           l3737:	
 16702  17DA                     	movlb 0	; select bank0
 16703  17DA  0140               	movf	(___flmul@temp),w
 16704  17DB  0846               	movwf	(??___flmul+0)+0
 16705  17DC  00B6               	movf	(??___flmul+0)+0,w
 16706  17DD  0836               	movwf	(___flmul@bexp)
 16707  17DE  00C1               	line	195
 16708                           	movlw	0FFh
 16709  17DF  30FF               	andwf	(___flmul@prod),f
 16710  17E0  05C2               	movlw	0FFh
 16711  17E1  30FF               	andwf	(___flmul@prod+1),f
 16712  17E2  05C3               	movlw	07Fh
 16713  17E3  307F               	andwf	(___flmul@prod+2),f
 16714  17E4  05C4               	movlw	0
 16715  17E5  3000               	andwf	(___flmul@prod+3),f
 16716  17E6  05C5               	line	196
 16717                           	
 16718                           l3739:	
 16719  17E7                     	btfss	(___flmul@bexp),(0)&7
 16720  17E7  1C41               	goto	u5171
 16721  17E8  2FEA               	goto	u5170
 16722  17E9  2FEB               u5171:
 16723  17EA                     	goto	l3743
 16724  17EA  2FED               u5170:
 16725  17EB                     	line	197
 16726                           	
 16727                           l3741:	
 16728  17EB                     	bsf	0+(___flmul@prod)+02h+(7/8),(7)&7
 16729  17EB  17C4               	goto	l3743
 16730  17EC  2FED               	line	198
 16731                           	
 16732                           l937:	
 16733  17ED                     	line	199
 16734                           	
 16735                           l3743:	
 16736  17ED                     	lsrf	(___flmul@bexp),w
 16737  17ED  3641               	movwf	(??___flmul+0)+0
 16738  17EE  00B6               	movf	(??___flmul+0)+0,w
 16739  17EF  0836               	movwf	0+(___flmul@prod)+03h
 16740  17F0  00C5               	goto	l934
 16741  17F1  2FF2               	line	200
 16742                           	
 16743                           l936:	
 16744  17F2                     	
 16745                           l934:	
 16746  17F2                     	line	201
 16747                           	movf	(___flmul@sign),w
 16748  17F2  083B               	movwf	(??___flmul+0)+0
 16749  17F3  00B6               	movf	(??___flmul+0)+0,w
 16750  17F4  0836               	iorwf	0+(___flmul@prod)+03h,f
 16751  17F5  04C5               	line	203
 16752                           	
 16753                           l3745:	
 16754  17F6                     	movf	(___flmul@prod+3),w
 16755  17F6  0845               	movwf	(?___flmul+3)
 16756  17F7  00B1               	movf	(___flmul@prod+2),w
 16757  17F8  0844               	movwf	(?___flmul+2)
 16758  17F9  00B0               	movf	(___flmul@prod+1),w
 16759  17FA  0843               	movwf	(?___flmul+1)
 16760  17FB  00AF               	movf	(___flmul@prod),w
 16761  17FC  0842               	movwf	(?___flmul)
 16762  17FD  00AE               
 16763                           	goto	l922
 16764  17FE  2FFF               	
 16765                           l3747:	
 16766  17FF                     	line	205
 16767                           	
 16768                           l922:	
 16769  17FF                     	return
 16770  17FF  0008               	opt stack 0
 16771                           GLOBAL	__end_of___flmul
 16772                           	__end_of___flmul:
 16773  1800                     	signat	___flmul,8316
 16774                           	global	__Umul8_16
 16775                           
 16776 ;; *************** function __Umul8_16 *****************
 16777 ;; Defined at:
 16778 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8_16.c"
 16779 ;; Parameters:    Size  Location     Type
 16780 ;;  multiplier      1    wreg     unsigned char 
 16781 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 16782 ;; Auto vars:     Size  Location     Type
 16783 ;;  multiplier      1    8[BANK0 ] unsigned char 
 16784 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 16785 ;;  product         2    4[BANK0 ] unsigned int 
 16786 ;; Return value:  Size  Location     Type
 16787 ;;                  2    0[BANK0 ] unsigned int 
 16788 ;; Registers used:
 16789 ;;		wreg, status,2, status,0
 16790 ;; Tracked objects:
 16791 ;;		On entry : 0/0
 16792 ;;		On exit  : 0/0
 16793 ;;		Unchanged: 0/0
 16794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16795 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16796 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16797 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16798 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16799 ;;Total ram usage:        9 bytes
 16800 ;; Hardware stack levels used:    1
 16801 ;; Hardware stack levels required when called:    3
 16802 ;; This function calls:
 16803 ;;		Nothing
 16804 ;; This function is called by:
 16805 ;;		___flmul
 16806 ;; This function uses a non-reentrant model
 16807 ;;
 16808                           psect	text40,local,class=CODE,delta=2,merge=1,group=1
 16809                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8_16.c"
 16810                           	line	4
 16811                           global __ptext40
 16812                           __ptext40:	;psect for function __Umul8_16
 16813  2785                     psect	text40
 16814                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8_16.c"
 16815                           	line	4
 16816                           	global	__size_of__Umul8_16
 16817                           	__size_of__Umul8_16	equ	__end_of__Umul8_16-__Umul8_16
 16818  0027                     	
 16819                           __Umul8_16:	
 16820  2785                     ;incstack = 0
 16821                           	opt	stack 6
 16822                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 16823                           ;__Umul8_16@multiplier stored from wreg
 16824                           	movlb 0	; select bank0
 16825  2785  0140               	movwf	(__Umul8_16@multiplier)
 16826  2786  00A8               	line	5
 16827                           	
 16828                           l3171:	
 16829  2787                     	clrf	(__Umul8_16@product)
 16830  2787  01A4               	clrf	(__Umul8_16@product+1)
 16831  2788  01A5               	line	6
 16832                           	
 16833                           l3173:	
 16834  2789                     	movf	(__Umul8_16@multiplicand),w
 16835  2789  0820               	movwf	(??__Umul8_16+0)+0
 16836  278A  00A2               	clrf	(??__Umul8_16+0)+0+1
 16837  278B  01A3               	movf	0+(??__Umul8_16+0)+0,w
 16838  278C  0822               	movwf	(__Umul8_16@word_mpld)
 16839  278D  00A6               	movf	1+(??__Umul8_16+0)+0,w
 16840  278E  0823               	movwf	(__Umul8_16@word_mpld+1)
 16841  278F  00A7               	goto	l3175
 16842  2790  2F91               	line	50
 16843                           	
 16844                           l1108:	
 16845  2791                     	line	51
 16846                           	
 16847                           l3175:	
 16848  2791                     	btfss	(__Umul8_16@multiplier),(0)&7
 16849  2791  1C28               	goto	u3861
 16850  2792  2F94               	goto	u3860
 16851  2793  2F95               u3861:
 16852  2794                     	goto	l1109
 16853  2794  2F99               u3860:
 16854  2795                     	line	52
 16855                           	
 16856                           l3177:	
 16857  2795                     	movf	(__Umul8_16@word_mpld),w
 16858  2795  0826               	addwf	(__Umul8_16@product),f
 16859  2796  07A4               	movf	(__Umul8_16@word_mpld+1),w
 16860  2797  0827               	addwfc	(__Umul8_16@product+1),f
 16861  2798  3DA5               	line	53
 16862                           	
 16863                           l1109:	
 16864  2799                     	line	54
 16865                           	movlw	01h
 16866  2799  3001               	
 16867                           u3875:
 16868  279A                     	lslf	(__Umul8_16@word_mpld),f
 16869  279A  35A6               	rlf	(__Umul8_16@word_mpld+1),f
 16870  279B  0DA7               	decfsz	wreg,f
 16871  279C  0B89               	goto	u3875
 16872  279D  2F9A               	line	55
 16873                           	clrc
 16874  279E  1003               	rrf	(__Umul8_16@multiplier),f
 16875  279F  0CA8               
 16876                           	line	56
 16877                           	
 16878                           l3179:	
 16879  27A0                     	movf	((__Umul8_16@multiplier)),w
 16880  27A0  0828               	btfss	status,2
 16881  27A1  1D03               	goto	u3881
 16882  27A2  2FA4               	goto	u3880
 16883  27A3  2FA5               u3881:
 16884  27A4                     	goto	l3175
 16885  27A4  2F91               u3880:
 16886  27A5                     	goto	l3181
 16887  27A5  2FA6               	
 16888                           l1110:	
 16889  27A6                     	line	59
 16890                           	
 16891                           l3181:	
 16892  27A6                     	movf	(__Umul8_16@product+1),w
 16893  27A6  0825               	movwf	(?__Umul8_16+1)
 16894  27A7  00A1               	movf	(__Umul8_16@product),w
 16895  27A8  0824               	movwf	(?__Umul8_16)
 16896  27A9  00A0               	goto	l1111
 16897  27AA  2FAB               	
 16898                           l3183:	
 16899  27AB                     	line	60
 16900                           	
 16901                           l1111:	
 16902  27AB                     	return
 16903  27AB  0008               	opt stack 0
 16904                           GLOBAL	__end_of__Umul8_16
 16905                           	__end_of__Umul8_16:
 16906  27AC                     	signat	__Umul8_16,8314
 16907                           	global	___fldiv
 16908                           
 16909 ;; *************** function ___fldiv *****************
 16910 ;; Defined at:
 16911 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcdiv.c"
 16912 ;; Parameters:    Size  Location     Type
 16913 ;;  a               4   40[BANK0 ] unsigned int 
 16914 ;;  b               4   44[BANK0 ] unsigned int 
 16915 ;; Auto vars:     Size  Location     Type
 16916 ;;  grs             4   60[BANK0 ] unsigned long 
 16917 ;;  rem             4   53[BANK0 ] unsigned long 
 16918 ;;  new_exp         2   58[BANK0 ] int 
 16919 ;;  aexp            1   65[BANK0 ] unsigned char 
 16920 ;;  bexp            1   64[BANK0 ] unsigned char 
 16921 ;;  sign            1   57[BANK0 ] unsigned char 
 16922 ;; Return value:  Size  Location     Type
 16923 ;;                  4   40[BANK0 ] unsigned char 
 16924 ;; Registers used:
 16925 ;;		wreg, status,2, status,0
 16926 ;; Tracked objects:
 16927 ;;		On entry : 0/0
 16928 ;;		On exit  : 0/0
 16929 ;;		Unchanged: 0/0
 16930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16931 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16932 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16933 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16934 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16935 ;;Total ram usage:       26 bytes
 16936 ;; Hardware stack levels used:    1
 16937 ;; Hardware stack levels required when called:    3
 16938 ;; This function calls:
 16939 ;;		Nothing
 16940 ;; This function is called by:
 16941 ;;		_readAnalogValues
 16942 ;;		_efgtoa
 16943 ;; This function uses a non-reentrant model
 16944 ;;
 16945                           psect	text41,local,class=CODE,delta=2,merge=1,group=1
 16946                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcdiv.c"
 16947                           	line	8
 16948                           global __ptext41
 16949                           __ptext41:	;psect for function ___fldiv
 16950  0810                     psect	text41
 16951                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcdiv.c"
 16952                           	line	8
 16953                           	global	__size_of___fldiv
 16954                           	__size_of___fldiv	equ	__end_of___fldiv-___fldiv
 16955  01DF                     	
 16956                           ___fldiv:	
 16957  0810                     ;incstack = 0
 16958                           	opt	stack 7
 16959                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 16960                           	line	26
 16961                           	
 16962                           l3469:	
 16963  0810                     	movlb 0	; select bank0
 16964  0810  0140               	movf	0+(___fldiv@b)+03h,w
 16965  0811  084F               	andlw	080h
 16966  0812  3980               	movwf	(??___fldiv+0)+0
 16967  0813  00D0               	movf	(??___fldiv+0)+0,w
 16968  0814  0850               	movwf	(___fldiv@sign)
 16969  0815  00D9               	line	27
 16970                           	
 16971                           l3471:	
 16972  0816                     	lslf	0+(___fldiv@b)+03h,w
 16973  0816  354F               	movwf	(??___fldiv+0)+0
 16974  0817  00D0               	movf	(??___fldiv+0)+0,w
 16975  0818  0850               	movwf	(___fldiv@bexp)
 16976  0819  00E0               	line	28
 16977                           	
 16978                           l3473:	
 16979  081A                     	btfss	0+(___fldiv@b)+02h,(7)&7
 16980  081A  1FCE               	goto	u4631
 16981  081B  281D               	goto	u4630
 16982  081C  281E               u4631:
 16983  081D                     	goto	l3477
 16984  081D  2820               u4630:
 16985  081E                     	line	29
 16986                           	
 16987                           l3475:	
 16988  081E                     	bsf	(___fldiv@bexp)+(0/8),(0)&7
 16989  081E  1460               	goto	l3477
 16990  081F  2820               	line	30
 16991                           	
 16992                           l875:	
 16993  0820                     	line	33
 16994                           	
 16995                           l3477:	
 16996  0820                     	movf	((___fldiv@bexp)),w
 16997  0820  0860               	btfsc	status,2
 16998  0821  1903               	goto	u4641
 16999  0822  2824               	goto	u4640
 17000  0823  2825               u4641:
 17001  0824                     	goto	l3487
 17002  0824  2836               u4640:
 17003  0825                     	line	35
 17004                           	
 17005                           l3479:	
 17006  0825                     		incf	((___fldiv@bexp)),w
 17007  0825  0A60               	btfss	status,2
 17008  0826  1D03               	goto	u4651
 17009  0827  2829               	goto	u4650
 17010  0828  282A               u4651:
 17011  0829                     	goto	l3483
 17012  0829  2833               u4650:
 17013  082A                     	line	37
 17014                           	
 17015                           l3481:	
 17016  082A                     	movlw	0x0
 17017  082A  3000               	movwf	(___fldiv@b+3)
 17018  082B  00CF               	movlw	0x0
 17019  082C  3000               	movwf	(___fldiv@b+2)
 17020  082D  00CE               	movlw	0x0
 17021  082E  3000               	movwf	(___fldiv@b+1)
 17022  082F  00CD               	movlw	0x0
 17023  0830  3000               	movwf	(___fldiv@b)
 17024  0831  00CC               
 17025                           	goto	l3483
 17026  0832  2833               	line	38
 17027                           	
 17028                           l877:	
 17029  0833                     	line	40
 17030                           	
 17031                           l3483:	
 17032  0833                     	bsf	(___fldiv@b)+(23/8),(23)&7
 17033  0833  17CE               	line	42
 17034                           	
 17035                           l3485:	
 17036  0834                     	clrf	0+(___fldiv@b)+03h
 17037  0834  01CF               	line	43
 17038                           	goto	l3489
 17039  0835  283F               	line	44
 17040                           	
 17041                           l876:	
 17042  0836                     	line	46
 17043                           	
 17044                           l3487:	
 17045  0836                     	movlw	0x0
 17046  0836  3000               	movwf	(___fldiv@b+3)
 17047  0837  00CF               	movlw	0x0
 17048  0838  3000               	movwf	(___fldiv@b+2)
 17049  0839  00CE               	movlw	0x0
 17050  083A  3000               	movwf	(___fldiv@b+1)
 17051  083B  00CD               	movlw	0x0
 17052  083C  3000               	movwf	(___fldiv@b)
 17053  083D  00CC               
 17054                           	goto	l3489
 17055  083E  283F               	line	47
 17056                           	
 17057                           l878:	
 17058  083F                     	line	49
 17059                           	
 17060                           l3489:	
 17061  083F                     	movf	0+(___fldiv@a)+03h,w
 17062  083F  084B               	andlw	080h
 17063  0840  3980               	movwf	(??___fldiv+0)+0
 17064  0841  00D0               	movf	(??___fldiv+0)+0,w
 17065  0842  0850               	xorwf	(___fldiv@sign),f
 17066  0843  06D9               	line	50
 17067                           	
 17068                           l3491:	
 17069  0844                     	lslf	0+(___fldiv@a)+03h,w
 17070  0844  354B               	movwf	(??___fldiv+0)+0
 17071  0845  00D0               	movf	(??___fldiv+0)+0,w
 17072  0846  0850               	movwf	(___fldiv@aexp)
 17073  0847  00E1               	line	51
 17074                           	
 17075                           l3493:	
 17076  0848                     	btfss	0+(___fldiv@a)+02h,(7)&7
 17077  0848  1FCA               	goto	u4661
 17078  0849  284B               	goto	u4660
 17079  084A  284C               u4661:
 17080  084B                     	goto	l3497
 17081  084B  284E               u4660:
 17082  084C                     	line	52
 17083                           	
 17084                           l3495:	
 17085  084C                     	bsf	(___fldiv@aexp)+(0/8),(0)&7
 17086  084C  1461               	goto	l3497
 17087  084D  284E               	line	53
 17088                           	
 17089                           l879:	
 17090  084E                     	line	56
 17091                           	
 17092                           l3497:	
 17093  084E                     	movf	((___fldiv@aexp)),w
 17094  084E  0861               	btfsc	status,2
 17095  084F  1903               	goto	u4671
 17096  0850  2852               	goto	u4670
 17097  0851  2853               u4671:
 17098  0852                     	goto	l3507
 17099  0852  2864               u4670:
 17100  0853                     	line	58
 17101                           	
 17102                           l3499:	
 17103  0853                     		incf	((___fldiv@aexp)),w
 17104  0853  0A61               	btfss	status,2
 17105  0854  1D03               	goto	u4681
 17106  0855  2857               	goto	u4680
 17107  0856  2858               u4681:
 17108  0857                     	goto	l3503
 17109  0857  2861               u4680:
 17110  0858                     	line	60
 17111                           	
 17112                           l3501:	
 17113  0858                     	movlw	0x0
 17114  0858  3000               	movwf	(___fldiv@a+3)
 17115  0859  00CB               	movlw	0x0
 17116  085A  3000               	movwf	(___fldiv@a+2)
 17117  085B  00CA               	movlw	0x0
 17118  085C  3000               	movwf	(___fldiv@a+1)
 17119  085D  00C9               	movlw	0x0
 17120  085E  3000               	movwf	(___fldiv@a)
 17121  085F  00C8               
 17122                           	goto	l3503
 17123  0860  2861               	line	61
 17124                           	
 17125                           l881:	
 17126  0861                     	line	63
 17127                           	
 17128                           l3503:	
 17129  0861                     	bsf	(___fldiv@a)+(23/8),(23)&7
 17130  0861  17CA               	line	65
 17131                           	
 17132                           l3505:	
 17133  0862                     	clrf	0+(___fldiv@a)+03h
 17134  0862  01CB               	line	66
 17135                           	goto	l882
 17136  0863  286C               	line	67
 17137                           	
 17138                           l880:	
 17139  0864                     	line	69
 17140                           	
 17141                           l3507:	
 17142  0864                     	movlw	0x0
 17143  0864  3000               	movwf	(___fldiv@a+3)
 17144  0865  00CB               	movlw	0x0
 17145  0866  3000               	movwf	(___fldiv@a+2)
 17146  0867  00CA               	movlw	0x0
 17147  0868  3000               	movwf	(___fldiv@a+1)
 17148  0869  00C9               	movlw	0x0
 17149  086A  3000               	movwf	(___fldiv@a)
 17150  086B  00C8               
 17151                           	line	70
 17152                           	
 17153                           l882:	
 17154  086C                     	line	75
 17155                           	movf	(___fldiv@a+3),w
 17156  086C  084B               	iorwf	(___fldiv@a+2),w
 17157  086D  044A               	iorwf	(___fldiv@a+1),w
 17158  086E  0449               	iorwf	(___fldiv@a),w
 17159  086F  0448               	skipz
 17160  0870  1D03               	goto	u4691
 17161  0871  2873               	goto	u4690
 17162  0872  2874               u4691:
 17163  0873                     	goto	l3517
 17164  0873  288E               u4690:
 17165  0874                     	line	76
 17166                           	
 17167                           l3509:	
 17168  0874                     	movlw	high highword(0)
 17169  0874  3000               	movwf	(___fldiv@b+3)
 17170  0875  00CF               	movlw	low highword(0)
 17171  0876  3000               	movwf	(___fldiv@b+2)
 17172  0877  00CE               	movlw	high(0)
 17173  0878  3000               	movwf	(___fldiv@b+1)
 17174  0879  00CD               	movlw	low(0)
 17175  087A  3000               	movwf	(___fldiv@b)
 17176  087B  00CC               
 17177                           	line	77
 17178                           	movlw	080h
 17179  087C  3080               	iorwf	0+(___fldiv@b)+02h,f
 17180  087D  04CE               	movlw	07Fh
 17181  087E  307F               	iorwf	1+(___fldiv@b)+02h,f
 17182  087F  04CF               	line	78
 17183                           	
 17184                           l3511:	
 17185  0880                     	movf	(___fldiv@sign),w
 17186  0880  0859               	movwf	(??___fldiv+0)+0
 17187  0881  00D0               	movf	(??___fldiv+0)+0,w
 17188  0882  0850               	iorwf	0+(___fldiv@b)+03h,f
 17189  0883  04CF               	line	79
 17190                           	
 17191                           l3513:	
 17192  0884                     	movf	(___fldiv@b+3),w
 17193  0884  084F               	movwf	(?___fldiv+3)
 17194  0885  00CB               	movf	(___fldiv@b+2),w
 17195  0886  084E               	movwf	(?___fldiv+2)
 17196  0887  00CA               	movf	(___fldiv@b+1),w
 17197  0888  084D               	movwf	(?___fldiv+1)
 17198  0889  00C9               	movf	(___fldiv@b),w
 17199  088A  084C               	movwf	(?___fldiv)
 17200  088B  00C8               
 17201                           	goto	l884
 17202  088C  29EE               	
 17203                           l3515:	
 17204  088D                     	goto	l884
 17205  088D  29EE               	line	80
 17206                           	
 17207                           l883:	
 17208  088E                     	line	83
 17209                           	
 17210                           l3517:	
 17211  088E                     	movf	((___fldiv@bexp)),w
 17212  088E  0860               	btfss	status,2
 17213  088F  1D03               	goto	u4701
 17214  0890  2892               	goto	u4700
 17215  0891  2893               u4701:
 17216  0892                     	goto	l3523
 17217  0892  28A5               u4700:
 17218  0893                     	line	84
 17219                           	
 17220                           l3519:	
 17221  0893                     	movlw	high highword(0)
 17222  0893  3000               	movwf	(___fldiv@b+3)
 17223  0894  00CF               	movlw	low highword(0)
 17224  0895  3000               	movwf	(___fldiv@b+2)
 17225  0896  00CE               	movlw	high(0)
 17226  0897  3000               	movwf	(___fldiv@b+1)
 17227  0898  00CD               	movlw	low(0)
 17228  0899  3000               	movwf	(___fldiv@b)
 17229  089A  00CC               
 17230                           	line	85
 17231                           	movf	(___fldiv@b+3),w
 17232  089B  084F               	movwf	(?___fldiv+3)
 17233  089C  00CB               	movf	(___fldiv@b+2),w
 17234  089D  084E               	movwf	(?___fldiv+2)
 17235  089E  00CA               	movf	(___fldiv@b+1),w
 17236  089F  084D               	movwf	(?___fldiv+1)
 17237  08A0  00C9               	movf	(___fldiv@b),w
 17238  08A1  084C               	movwf	(?___fldiv)
 17239  08A2  00C8               
 17240                           	goto	l884
 17241  08A3  29EE               	
 17242                           l3521:	
 17243  08A4                     	goto	l884
 17244  08A4  29EE               	line	86
 17245                           	
 17246                           l885:	
 17247  08A5                     	line	89
 17248                           	
 17249                           l3523:	
 17250  08A5                     	movf	(___fldiv@aexp),w
 17251  08A5  0861               	movwf	(??___fldiv+0)+0
 17252  08A6  00D0               	clrf	(??___fldiv+0)+0+1
 17253  08A7  01D1               	comf	(??___fldiv+0)+0,f
 17254  08A8  09D0               	comf	(??___fldiv+0)+1,f
 17255  08A9  09D1               	incf	(??___fldiv+0)+0,f
 17256  08AA  0AD0               	skipnz
 17257  08AB  1903               	incf	(??___fldiv+0)+1,f
 17258  08AC  0AD1               	movf	(___fldiv@bexp),w
 17259  08AD  0860               	addwf	0+(??___fldiv+0)+0,w
 17260  08AE  0750               	movwf	(??___fldiv+2)+0
 17261  08AF  00D2               	movf	1+(??___fldiv+0)+0,w
 17262  08B0  0851               	skipnc
 17263  08B1  1803               	incf	1+(??___fldiv+0)+0,w
 17264  08B2  0A51               	movwf	((??___fldiv+2)+0)+1
 17265  08B3  00D3               	movf	0+(??___fldiv+2)+0,w
 17266  08B4  0852               	addlw	07Fh
 17267  08B5  3E7F               	movwf	(___fldiv@new_exp)
 17268  08B6  00DA               	movlw	0
 17269  08B7  3000               	addwfc	1+(??___fldiv+2)+0,w
 17270  08B8  3D53               	movwf	1+(___fldiv@new_exp)
 17271  08B9  00DB               	line	92
 17272                           	
 17273                           l3525:	
 17274  08BA                     	movf	(___fldiv@b+3),w
 17275  08BA  084F               	movwf	(___fldiv@rem+3)
 17276  08BB  00D8               	movf	(___fldiv@b+2),w
 17277  08BC  084E               	movwf	(___fldiv@rem+2)
 17278  08BD  00D7               	movf	(___fldiv@b+1),w
 17279  08BE  084D               	movwf	(___fldiv@rem+1)
 17280  08BF  00D6               	movf	(___fldiv@b),w
 17281  08C0  084C               	movwf	(___fldiv@rem)
 17282  08C1  00D5               
 17283                           	line	93
 17284                           	
 17285                           l3527:	
 17286  08C2                     	movlw	high highword(0)
 17287  08C2  3000               	movwf	(___fldiv@b+3)
 17288  08C3  00CF               	movlw	low highword(0)
 17289  08C4  3000               	movwf	(___fldiv@b+2)
 17290  08C5  00CE               	movlw	high(0)
 17291  08C6  3000               	movwf	(___fldiv@b+1)
 17292  08C7  00CD               	movlw	low(0)
 17293  08C8  3000               	movwf	(___fldiv@b)
 17294  08C9  00CC               
 17295                           	line	94
 17296                           	
 17297                           l3529:	
 17298  08CA                     	movlw	high highword(0)
 17299  08CA  3000               	movwf	(___fldiv@grs+3)
 17300  08CB  00DF               	movlw	low highword(0)
 17301  08CC  3000               	movwf	(___fldiv@grs+2)
 17302  08CD  00DE               	movlw	high(0)
 17303  08CE  3000               	movwf	(___fldiv@grs+1)
 17304  08CF  00DD               	movlw	low(0)
 17305  08D0  3000               	movwf	(___fldiv@grs)
 17306  08D1  00DC               
 17307                           	line	96
 17308                           	
 17309                           l3531:	
 17310  08D2                     	clrf	(___fldiv@aexp)
 17311  08D2  01E1               	line	97
 17312                           	goto	l3551
 17313  08D3  2916               	
 17314                           l887:	
 17315  08D4                     	line	100
 17316                           	
 17317                           l3533:	
 17318  08D4                     	movf	((___fldiv@aexp)),w
 17319  08D4  0861               	btfsc	status,2
 17320  08D5  1903               	goto	u4711
 17321  08D6  28D8               	goto	u4710
 17322  08D7  28D9               u4711:
 17323  08D8                     	goto	l3543
 17324  08D8  28F5               u4710:
 17325  08D9                     	line	101
 17326                           	
 17327                           l3535:	
 17328  08D9                     	movlw	01h
 17329  08D9  3001               u4725:
 17330  08DA                     	lslf	(___fldiv@rem),f
 17331  08DA  35D5               	rlf	(___fldiv@rem+1),f
 17332  08DB  0DD6               	rlf	(___fldiv@rem+2),f
 17333  08DC  0DD7               	rlf	(___fldiv@rem+3),f
 17334  08DD  0DD8               	decfsz	wreg,f
 17335  08DE  0B89               	goto	u4725
 17336  08DF  28DA               	line	102
 17337                           	movlw	01h
 17338  08E0  3001               u4735:
 17339  08E1                     	lslf	(___fldiv@b),f
 17340  08E1  35CC               	rlf	(___fldiv@b+1),f
 17341  08E2  0DCD               	rlf	(___fldiv@b+2),f
 17342  08E3  0DCE               	rlf	(___fldiv@b+3),f
 17343  08E4  0DCF               	decfsz	wreg,f
 17344  08E5  0B89               	goto	u4735
 17345  08E6  28E1               	line	103
 17346                           	
 17347                           l3537:	
 17348  08E7                     	btfss	(___fldiv@grs+3),(31)&7
 17349  08E7  1FDF               	goto	u4741
 17350  08E8  28EA               	goto	u4740
 17351  08E9  28EB               u4741:
 17352  08EA                     	goto	l3541
 17353  08EA  28ED               u4740:
 17354  08EB                     	line	104
 17355                           	
 17356                           l3539:	
 17357  08EB                     	bsf	(___fldiv@b)+(0/8),(0)&7
 17358  08EB  144C               	goto	l3541
 17359  08EC  28ED               	line	105
 17360                           	
 17361                           l889:	
 17362  08ED                     	line	106
 17363                           	
 17364                           l3541:	
 17365  08ED                     	movlw	01h
 17366  08ED  3001               u4755:
 17367  08EE                     	lslf	(___fldiv@grs),f
 17368  08EE  35DC               	rlf	(___fldiv@grs+1),f
 17369  08EF  0DDD               	rlf	(___fldiv@grs+2),f
 17370  08F0  0DDE               	rlf	(___fldiv@grs+3),f
 17371  08F1  0DDF               	decfsz	wreg,f
 17372  08F2  0B89               	goto	u4755
 17373  08F3  28EE               	goto	l3543
 17374  08F4  28F5               	line	107
 17375                           	
 17376                           l888:	
 17377  08F5                     	line	112
 17378                           	
 17379                           l3543:	
 17380  08F5                     	movf	(___fldiv@a+3),w
 17381  08F5  084B               	subwf	(___fldiv@rem+3),w
 17382  08F6  0258               	skipz
 17383  08F7  1D03               	goto	u4765
 17384  08F8  2903               	movf	(___fldiv@a+2),w
 17385  08F9  084A               	subwf	(___fldiv@rem+2),w
 17386  08FA  0257               	skipz
 17387  08FB  1D03               	goto	u4765
 17388  08FC  2903               	movf	(___fldiv@a+1),w
 17389  08FD  0849               	subwf	(___fldiv@rem+1),w
 17390  08FE  0256               	skipz
 17391  08FF  1D03               	goto	u4765
 17392  0900  2903               	movf	(___fldiv@a),w
 17393  0901  0848               	subwf	(___fldiv@rem),w
 17394  0902  0255               u4765:
 17395  0903                     	skipc
 17396  0903  1C03               	goto	u4761
 17397  0904  2906               	goto	u4760
 17398  0905  2907               u4761:
 17399  0906                     	goto	l3549
 17400  0906  2911               u4760:
 17401  0907                     	line	115
 17402                           	
 17403                           l3545:	
 17404  0907                     	bsf	(___fldiv@grs)+(30/8),(30)&7
 17405  0907  175F               	line	116
 17406                           	
 17407                           l3547:	
 17408  0908                     	movf	(___fldiv@a),w
 17409  0908  0848               	subwf	(___fldiv@rem),f
 17410  0909  02D5               	movf	(___fldiv@a+1),w
 17411  090A  0849               	subwfb	(___fldiv@rem+1),f
 17412  090B  3BD6               	movf	(___fldiv@a+2),w
 17413  090C  084A               	subwfb	(___fldiv@rem+2),f
 17414  090D  3BD7               	movf	(___fldiv@a+3),w
 17415  090E  084B               	subwfb	(___fldiv@rem+3),f
 17416  090F  3BD8               	goto	l3549
 17417  0910  2911               	line	117
 17418                           	
 17419                           l890:	
 17420  0911                     	line	118
 17421                           	
 17422                           l3549:	
 17423  0911                     	movlw	low(01h)
 17424  0911  3001               	movwf	(??___fldiv+0)+0
 17425  0912  00D0               	movf	(??___fldiv+0)+0,w
 17426  0913  0850               	addwf	(___fldiv@aexp),f
 17427  0914  07E1               	goto	l3551
 17428  0915  2916               	line	119
 17429                           	
 17430                           l886:	
 17431  0916                     	line	97
 17432                           	
 17433                           l3551:	
 17434  0916                     	movlw	low(01Ah)
 17435  0916  301A               	subwf	(___fldiv@aexp),w
 17436  0917  0261               	skipc
 17437  0918  1C03               	goto	u4771
 17438  0919  291B               	goto	u4770
 17439  091A  291C               u4771:
 17440  091B                     	goto	l3533
 17441  091B  28D4               u4770:
 17442  091C                     	goto	l3553
 17443  091C  291D               	
 17444                           l891:	
 17445  091D                     	line	122
 17446                           	
 17447                           l3553:	
 17448  091D                     	movf	(___fldiv@rem+3),w
 17449  091D  0858               	iorwf	(___fldiv@rem+2),w
 17450  091E  0457               	iorwf	(___fldiv@rem+1),w
 17451  091F  0456               	iorwf	(___fldiv@rem),w
 17452  0920  0455               	skipnz
 17453  0921  1903               	goto	u4781
 17454  0922  2924               	goto	u4780
 17455  0923  2925               u4781:
 17456  0924                     	goto	l3567
 17457  0924  2941               u4780:
 17458  0925                     	line	123
 17459                           	
 17460                           l3555:	
 17461  0925                     	bsf	(___fldiv@grs)+(0/8),(0)&7
 17462  0925  145C               	goto	l3567
 17463  0926  2941               	line	124
 17464                           	
 17465                           l892:	
 17466  0927                     	line	127
 17467                           	goto	l3567
 17468  0927  2941               	
 17469                           l894:	
 17470  0928                     	line	128
 17471                           	
 17472                           l3557:	
 17473  0928                     	movlw	01h
 17474  0928  3001               u4795:
 17475  0929                     	lslf	(___fldiv@b),f
 17476  0929  35CC               	rlf	(___fldiv@b+1),f
 17477  092A  0DCD               	rlf	(___fldiv@b+2),f
 17478  092B  0DCE               	rlf	(___fldiv@b+3),f
 17479  092C  0DCF               	decfsz	wreg,f
 17480  092D  0B89               	goto	u4795
 17481  092E  2929               	line	129
 17482                           	
 17483                           l3559:	
 17484  092F                     	btfss	(___fldiv@grs+3),(31)&7
 17485  092F  1FDF               	goto	u4801
 17486  0930  2932               	goto	u4800
 17487  0931  2933               u4801:
 17488  0932                     	goto	l3563
 17489  0932  2935               u4800:
 17490  0933                     	line	130
 17491                           	
 17492                           l3561:	
 17493  0933                     	bsf	(___fldiv@b)+(0/8),(0)&7
 17494  0933  144C               	goto	l3563
 17495  0934  2935               	line	131
 17496                           	
 17497                           l895:	
 17498  0935                     	line	132
 17499                           	
 17500                           l3563:	
 17501  0935                     	movlw	01h
 17502  0935  3001               u4815:
 17503  0936                     	lslf	(___fldiv@grs),f
 17504  0936  35DC               	rlf	(___fldiv@grs+1),f
 17505  0937  0DDD               	rlf	(___fldiv@grs+2),f
 17506  0938  0DDE               	rlf	(___fldiv@grs+3),f
 17507  0939  0DDF               	decfsz	wreg,f
 17508  093A  0B89               	goto	u4815
 17509  093B  2936               	line	133
 17510                           	
 17511                           l3565:	
 17512  093C                     	movlw	0FFh
 17513  093C  30FF               	addwf	(___fldiv@new_exp),f
 17514  093D  07DA               	movlw	0FFh
 17515  093E  30FF               	addwfc	(___fldiv@new_exp+1),f
 17516  093F  3DDB               	goto	l3567
 17517  0940  2941               	line	134
 17518                           	
 17519                           l893:	
 17520  0941                     	line	127
 17521                           	
 17522                           l3567:	
 17523  0941                     	btfss	(___fldiv@b+2),(23)&7
 17524  0941  1FCE               	goto	u4821
 17525  0942  2944               	goto	u4820
 17526  0943  2945               u4821:
 17527  0944                     	goto	l3557
 17528  0944  2928               u4820:
 17529  0945                     	goto	l3569
 17530  0945  2946               	
 17531                           l896:	
 17532  0946                     	line	139
 17533                           	
 17534                           l3569:	
 17535  0946                     	clrf	(___fldiv@aexp)
 17536  0946  01E1               	line	140
 17537                           	
 17538                           l3571:	
 17539  0947                     	btfss	(___fldiv@grs+3),(31)&7
 17540  0947  1FDF               	goto	u4831
 17541  0948  294A               	goto	u4830
 17542  0949  294B               u4831:
 17543  094A                     	goto	l3579
 17544  094A  296B               u4830:
 17545  094B                     	line	141
 17546                           	
 17547                           l3573:	
 17548  094B                     	movlw	0FFh
 17549  094B  30FF               	andwf	(___fldiv@grs),w
 17550  094C  055C               	movwf	(??___fldiv+0)+0
 17551  094D  00D0               	movlw	0FFh
 17552  094E  30FF               	andwf	(___fldiv@grs+1),w
 17553  094F  055D               	movwf	((??___fldiv+0)+0+1)
 17554  0950  00D1               	movlw	0FFh
 17555  0951  30FF               	andwf	(___fldiv@grs+2),w
 17556  0952  055E               	movwf	((??___fldiv+0)+0+2)
 17557  0953  00D2               	movlw	07Fh
 17558  0954  307F               	andwf	(___fldiv@grs+3),w
 17559  0955  055F               	movwf	((??___fldiv+0)+0+3)
 17560  0956  00D3               	movf	3+(??___fldiv+0)+0,w
 17561  0957  0853               	iorwf	2+(??___fldiv+0)+0,w
 17562  0958  0452               	iorwf	1+(??___fldiv+0)+0,w
 17563  0959  0451               	iorwf	0+(??___fldiv+0)+0,w
 17564  095A  0450               	skipnz
 17565  095B  1903               	goto	u4841
 17566  095C  295E               	goto	u4840
 17567  095D  295F               u4841:
 17568  095E                     	goto	l898
 17569  095E  2962               u4840:
 17570  095F                     	line	142
 17571                           	
 17572                           l3575:	
 17573  095F                     	clrf	(___fldiv@aexp)
 17574  095F  01E1               	incf	(___fldiv@aexp),f
 17575  0960  0AE1               	line	143
 17576                           	goto	l3579
 17577  0961  296B               	line	144
 17578                           	
 17579                           l898:	
 17580  0962                     	line	145
 17581                           	btfss	(___fldiv@b),(0)&7
 17582  0962  1C4C               	goto	u4851
 17583  0963  2965               	goto	u4850
 17584  0964  2966               u4851:
 17585  0965                     	goto	l3579
 17586  0965  296B               u4850:
 17587  0966                     	line	146
 17588                           	
 17589                           l3577:	
 17590  0966                     	clrf	(___fldiv@aexp)
 17591  0966  01E1               	incf	(___fldiv@aexp),f
 17592  0967  0AE1               	goto	l3579
 17593  0968  296B               	line	147
 17594                           	
 17595                           l900:	
 17596  0969                     	goto	l3579
 17597  0969  296B               	line	148
 17598                           	
 17599                           l899:	
 17600  096A                     	goto	l3579
 17601  096A  296B               	line	149
 17602                           	
 17603                           l897:	
 17604  096B                     	line	150
 17605                           	
 17606                           l3579:	
 17607  096B                     	movf	((___fldiv@aexp)),w
 17608  096B  0861               	btfsc	status,2
 17609  096C  1903               	goto	u4861
 17610  096D  296F               	goto	u4860
 17611  096E  2970               u4861:
 17612  096F                     	goto	l3589
 17613  096F  299A               u4860:
 17614  0970                     	line	151
 17615                           	
 17616                           l3581:	
 17617  0970                     	movlw	01h
 17618  0970  3001               	addwf	(___fldiv@b),f
 17619  0971  07CC               	movlw	0
 17620  0972  3000               	addwfc	(___fldiv@b+1),f
 17621  0973  3DCD               	movlw	0
 17622  0974  3000               	addwfc	(___fldiv@b+2),f
 17623  0975  3DCE               	movlw	0
 17624  0976  3000               	addwfc	(___fldiv@b+3),f
 17625  0977  3DCF               	line	152
 17626                           	
 17627                           l3583:	
 17628  0978                     	btfss	(___fldiv@b+3),(24)&7
 17629  0978  1C4F               	goto	u4871
 17630  0979  297B               	goto	u4870
 17631  097A  297C               u4871:
 17632  097B                     	goto	l3589
 17633  097B  299A               u4870:
 17634  097C                     	line	153
 17635                           	
 17636                           l3585:	
 17637  097C                     	movf	(___fldiv@b),w
 17638  097C  084C               	movwf	(??___fldiv+0)+0
 17639  097D  00D0               	movf	(___fldiv@b+1),w
 17640  097E  084D               	movwf	((??___fldiv+0)+0+1)
 17641  097F  00D1               	movf	(___fldiv@b+2),w
 17642  0980  084E               	movwf	((??___fldiv+0)+0+2)
 17643  0981  00D2               	movf	(___fldiv@b+3),w
 17644  0982  084F               	movwf	((??___fldiv+0)+0+3)
 17645  0983  00D3               	movlw	01h
 17646  0984  3001               	movwf	(??___fldiv+4)+0
 17647  0985  00D4               u4885:
 17648  0986                     	asrf	(??___fldiv+0)+3,f
 17649  0986  37D3               	rrf	(??___fldiv+0)+2,f
 17650  0987  0CD2               	rrf	(??___fldiv+0)+1,f
 17651  0988  0CD1               	rrf	(??___fldiv+0)+0,f
 17652  0989  0CD0               u4880:
 17653  098A                     	decfsz	(??___fldiv+4)+0,f
 17654  098A  0BD4               	goto	u4885
 17655  098B  2986               	movf	3+(??___fldiv+0)+0,w
 17656  098C  0853               	movwf	(___fldiv@b+3)
 17657  098D  00CF               	movf	2+(??___fldiv+0)+0,w
 17658  098E  0852               	movwf	(___fldiv@b+2)
 17659  098F  00CE               	movf	1+(??___fldiv+0)+0,w
 17660  0990  0851               	movwf	(___fldiv@b+1)
 17661  0991  00CD               	movf	0+(??___fldiv+0)+0,w
 17662  0992  0850               	movwf	(___fldiv@b)
 17663  0993  00CC               
 17664                           	line	154
 17665                           	
 17666                           l3587:	
 17667  0994                     	movlw	01h
 17668  0994  3001               	addwf	(___fldiv@new_exp),f
 17669  0995  07DA               	movlw	0
 17670  0996  3000               	addwfc	(___fldiv@new_exp+1),f
 17671  0997  3DDB               	goto	l3589
 17672  0998  299A               	line	155
 17673                           	
 17674                           l902:	
 17675  0999                     	goto	l3589
 17676  0999  299A               	line	156
 17677                           	
 17678                           l901:	
 17679  099A                     	line	159
 17680                           	
 17681                           l3589:	
 17682  099A                     	movf	(___fldiv@new_exp+1),w
 17683  099A  085B               	xorlw	80h
 17684  099B  3A80               	movwf	(??___fldiv+0)+0
 17685  099C  00D0               	movlw	(0)^80h
 17686  099D  3080               	subwf	(??___fldiv+0)+0,w
 17687  099E  0250               	skipz
 17688  099F  1D03               	goto	u4895
 17689  09A0  29A3               	movlw	0FFh
 17690  09A1  30FF               	subwf	(___fldiv@new_exp),w
 17691  09A2  025A               u4895:
 17692  09A3                     
 17693                           	skipc
 17694  09A3  1C03               	goto	u4891
 17695  09A4  29A6               	goto	u4890
 17696  09A5  29A7               u4891:
 17697  09A6                     	goto	l903
 17698  09A6  29B4               u4890:
 17699  09A7                     	line	160
 17700                           	
 17701                           l3591:	
 17702  09A7                     	movlw	0FFh
 17703  09A7  30FF               	movlb 0	; select bank0
 17704  09A8  0140               	movwf	(___fldiv@new_exp)
 17705  09A9  00DA               	movlw	0
 17706  09AA  3000               	movwf	((___fldiv@new_exp))+1
 17707  09AB  00DB               	line	161
 17708                           	movlw	high highword(0)
 17709  09AC  3000               	movwf	(___fldiv@b+3)
 17710  09AD  00CF               	movlw	low highword(0)
 17711  09AE  3000               	movwf	(___fldiv@b+2)
 17712  09AF  00CE               	movlw	high(0)
 17713  09B0  3000               	movwf	(___fldiv@b+1)
 17714  09B1  00CD               	movlw	low(0)
 17715  09B2  3000               	movwf	(___fldiv@b)
 17716  09B3  00CC               
 17717                           	line	162
 17718                           	
 17719                           l903:	
 17720  09B4                     	line	165
 17721                           	movlb 0	; select bank0
 17722  09B4  0140               	movf	(___fldiv@new_exp+1),w
 17723  09B5  085B               	xorlw	80h
 17724  09B6  3A80               	movwf	(??___fldiv+0)+0
 17725  09B7  00D0               	movlw	(0)^80h
 17726  09B8  3080               	subwf	(??___fldiv+0)+0,w
 17727  09B9  0250               	skipz
 17728  09BA  1D03               	goto	u4905
 17729  09BB  29BE               	movlw	01h
 17730  09BC  3001               	subwf	(___fldiv@new_exp),w
 17731  09BD  025A               u4905:
 17732  09BE                     
 17733                           	skipnc
 17734  09BE  1803               	goto	u4901
 17735  09BF  29C1               	goto	u4900
 17736  09C0  29C2               u4901:
 17737  09C1                     	goto	l904
 17738  09C1  29CE               u4900:
 17739  09C2                     	line	166
 17740                           	
 17741                           l3593:	
 17742  09C2                     	movlb 0	; select bank0
 17743  09C2  0140               	clrf	(___fldiv@new_exp)
 17744  09C3  01DA               	clrf	(___fldiv@new_exp+1)
 17745  09C4  01DB               	line	167
 17746                           	
 17747                           l3595:	
 17748  09C5                     	movlw	high highword(0)
 17749  09C5  3000               	movwf	(___fldiv@b+3)
 17750  09C6  00CF               	movlw	low highword(0)
 17751  09C7  3000               	movwf	(___fldiv@b+2)
 17752  09C8  00CE               	movlw	high(0)
 17753  09C9  3000               	movwf	(___fldiv@b+1)
 17754  09CA  00CD               	movlw	low(0)
 17755  09CB  3000               	movwf	(___fldiv@b)
 17756  09CC  00CC               
 17757                           	line	169
 17758                           	
 17759                           l3597:	
 17760  09CD                     	clrf	(___fldiv@sign)
 17761  09CD  01D9               	line	170
 17762                           	
 17763                           l904:	
 17764  09CE                     	line	173
 17765                           	movlb 0	; select bank0
 17766  09CE  0140               	movf	(___fldiv@new_exp),w
 17767  09CF  085A               	movwf	(??___fldiv+0)+0
 17768  09D0  00D0               	movf	(??___fldiv+0)+0,w
 17769  09D1  0850               	movwf	(___fldiv@bexp)
 17770  09D2  00E0               	line	175
 17771                           	
 17772                           l3599:	
 17773  09D3                     	btfss	(___fldiv@bexp),(0)&7
 17774  09D3  1C60               	goto	u4911
 17775  09D4  29D6               	goto	u4910
 17776  09D5  29D7               u4911:
 17777  09D6                     	goto	l3603
 17778  09D6  29D9               u4910:
 17779  09D7                     	line	176
 17780                           	
 17781                           l3601:	
 17782  09D7                     	bsf	0+(___fldiv@b)+02h+(7/8),(7)&7
 17783  09D7  17CE               	line	177
 17784                           	goto	l906
 17785  09D8  29DD               	line	179
 17786                           	
 17787                           l905:	
 17788  09D9                     	line	180
 17789                           	
 17790                           l3603:	
 17791  09D9                     	movlw	low(07Fh)
 17792  09D9  307F               	movwf	(??___fldiv+0)+0
 17793  09DA  00D0               	movf	(??___fldiv+0)+0,w
 17794  09DB  0850               	andwf	0+(___fldiv@b)+02h,f
 17795  09DC  05CE               	line	181
 17796                           	
 17797                           l906:	
 17798  09DD                     	line	182
 17799                           	lsrf	(___fldiv@bexp),w
 17800  09DD  3660               	movwf	(??___fldiv+0)+0
 17801  09DE  00D0               	movf	(??___fldiv+0)+0,w
 17802  09DF  0850               	movwf	0+(___fldiv@b)+03h
 17803  09E0  00CF               	line	183
 17804                           	movf	(___fldiv@sign),w
 17805  09E1  0859               	movwf	(??___fldiv+0)+0
 17806  09E2  00D0               	movf	(??___fldiv+0)+0,w
 17807  09E3  0850               	iorwf	0+(___fldiv@b)+03h,f
 17808  09E4  04CF               	line	184
 17809                           	
 17810                           l3605:	
 17811  09E5                     	movf	(___fldiv@b+3),w
 17812  09E5  084F               	movwf	(?___fldiv+3)
 17813  09E6  00CB               	movf	(___fldiv@b+2),w
 17814  09E7  084E               	movwf	(?___fldiv+2)
 17815  09E8  00CA               	movf	(___fldiv@b+1),w
 17816  09E9  084D               	movwf	(?___fldiv+1)
 17817  09EA  00C9               	movf	(___fldiv@b),w
 17818  09EB  084C               	movwf	(?___fldiv)
 17819  09EC  00C8               
 17820                           	goto	l884
 17821  09ED  29EE               	
 17822                           l3607:	
 17823  09EE                     	line	185
 17824                           	
 17825                           l884:	
 17826  09EE                     	return
 17827  09EE  0008               	opt stack 0
 17828                           GLOBAL	__end_of___fldiv
 17829                           	__end_of___fldiv:
 17830  09EF                     	signat	___fldiv,8316
 17831                           	global	_initialize
 17832                           
 17833 ;; *************** function _initialize *****************
 17834 ;; Defined at:
 17835 ;;		line 244 in file "main.c"
 17836 ;; Parameters:    Size  Location     Type
 17837 ;;		None
 17838 ;; Auto vars:     Size  Location     Type
 17839 ;;		None
 17840 ;; Return value:  Size  Location     Type
 17841 ;;                  1    wreg      void 
 17842 ;; Registers used:
 17843 ;;		wreg, status,2, status,0
 17844 ;; Tracked objects:
 17845 ;;		On entry : 0/0
 17846 ;;		On exit  : 0/0
 17847 ;;		Unchanged: 0/0
 17848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17853 ;;Total ram usage:        0 bytes
 17854 ;; Hardware stack levels used:    1
 17855 ;; Hardware stack levels required when called:    3
 17856 ;; This function calls:
 17857 ;;		Nothing
 17858 ;; This function is called by:
 17859 ;;		_main
 17860 ;; This function uses a non-reentrant model
 17861 ;;
 17862                           psect	text42,local,class=CODE,delta=2,merge=1,group=0
 17863                           	file	"main.c"
 17864                           	line	244
 17865                           global __ptext42
 17866                           __ptext42:	;psect for function _initialize
 17867  19F8                     psect	text42
 17868                           	file	"main.c"
 17869                           	line	244
 17870                           	global	__size_of_initialize
 17871                           	__size_of_initialize	equ	__end_of_initialize-_initialize
 17872  004C                     	
 17873                           _initialize:	
 17874  19F8                     ;incstack = 0
 17875                           	opt	stack 12
 17876                           ; Regs used in _initialize: [wreg+status,2+status,0]
 17877                           	line	246
 17878                           	
 17879                           l4443:	
 17880  19F8                     ;main.c: 246:  OSCFRQ = 0b00000010;
 17881                           	movlw	low(02h)
 17882  19F8  3002               	movlb 17	; select bank17
 17883  19F9  0151               	movwf	(2195)^0880h	;volatile
 17884  19FA  0093               	line	247
 17885                           ;main.c: 247:  OSCCON1 = 0b01100000;
 17886                           	movlw	low(060h)
 17887  19FB  3060               	movwf	(2189)^0880h	;volatile
 17888  19FC  008D               	line	248
 17889                           ;main.c: 248:  while (!OSCCON3bits.ORDY);
 17890                           	goto	l228
 17891  19FD  29FE               	
 17892                           l229:	
 17893  19FE                     	
 17894                           l228:	
 17895  19FE                     	btfss	(2191)^0880h,4	;volatile
 17896  19FE  1E0F               	goto	u6341
 17897  19FF  2A01               	goto	u6340
 17898  1A00  2A02               u6341:
 17899  1A01                     	goto	l228
 17900  1A01  29FE               u6340:
 17901  1A02                     	goto	l4445
 17902  1A02  2A03               	
 17903                           l230:	
 17904  1A03                     	line	251
 17905                           	
 17906                           l4445:	
 17907  1A03                     ;main.c: 251:  RX1DTPPSbits.RX1DTPPS = 0x17;
 17908                           	movlb 61	; select bank61
 17909  1A03  017D               	movf	(7883)^01E80h,w	;volatile
 17910  1A04  084B               	andlw	not (((1<<6)-1)<<0)
 17911  1A05  39C0               	iorlw	(017h & ((1<<6)-1))<<0
 17912  1A06  3817               	movwf	(7883)^01E80h	;volatile
 17913  1A07  00CB               	line	252
 17914                           	
 17915                           l4447:	
 17916  1A08                     ;main.c: 252:  RC6PPS = 0x0F;
 17917                           	movlw	low(0Fh)
 17918  1A08  300F               	movlb 62	; select bank62
 17919  1A09  017E               	movwf	(7974)^01F00h	;volatile
 17920  1A0A  00A6               	line	255
 17921                           	
 17922                           l4449:	
 17923  1A0B                     ;main.c: 255:  ANSELA = 0b01000000;
 17924                           	movlw	low(040h)
 17925  1A0B  3040               	movwf	(7992)^01F00h	;volatile
 17926  1A0C  00B8               	line	256
 17927                           	
 17928                           l4451:	
 17929  1A0D                     ;main.c: 256:  ANSELB = 0b00000000;
 17930                           	clrf	(8003)^01F00h	;volatile
 17931  1A0D  01C3               	line	257
 17932                           	
 17933                           l4453:	
 17934  1A0E                     ;main.c: 257:  ANSELC = 0b00000011;
 17935                           	movlw	low(03h)
 17936  1A0E  3003               	movwf	(8014)^01F00h	;volatile
 17937  1A0F  00CE               	line	260
 17938                           	
 17939                           l4455:	
 17940  1A10                     ;main.c: 260:  TRISA = 0b11110000;
 17941                           	movlw	low(0F0h)
 17942  1A10  30F0               	movlb 0	; select bank0
 17943  1A11  0140               	movwf	(18)	;volatile
 17944  1A12  0092               	line	261
 17945                           	
 17946                           l4457:	
 17947  1A13                     ;main.c: 261:  TRISB = 0b00000000;
 17948                           	clrf	(19)	;volatile
 17949  1A13  0193               	line	262
 17950                           	
 17951                           l4459:	
 17952  1A14                     ;main.c: 262:  TRISC = 0b10000111;
 17953                           	movlw	low(087h)
 17954  1A14  3087               	movwf	(20)	;volatile
 17955  1A15  0094               	line	265
 17956                           	
 17957                           l4461:	
 17958  1A16                     ;main.c: 265:  ADCON0bits.ADON = 1;
 17959                           	movlb 1	; select bank1
 17960  1A16  0141               	bsf	(157)^080h,0	;volatile
 17961  1A17  141D               	line	266
 17962                           	
 17963                           l4463:	
 17964  1A18                     ;main.c: 266:  ADCON1 = 0b11100000;
 17965                           	movlw	low(0E0h)
 17966  1A18  30E0               	movwf	(158)^080h	;volatile
 17967  1A19  009E               	line	269
 17968                           	
 17969                           l4465:	
 17970  1A1A                     ;main.c: 269:  T0CON0 = 0b10000000;
 17971                           	movlw	low(080h)
 17972  1A1A  3080               	movlb 11	; select bank11
 17973  1A1B  014B               	movwf	(1438)^0580h	;volatile
 17974  1A1C  009E               	line	270
 17975                           	
 17976                           l4467:	
 17977  1A1D                     ;main.c: 270:  T0CON1 = 0b01000111;
 17978                           	movlw	low(047h)
 17979  1A1D  3047               	movwf	(1439)^0580h	;volatile
 17980  1A1E  009F               	line	271
 17981                           	
 17982                           l4469:	
 17983  1A1F                     ;main.c: 271:  TMR0 = 178;
 17984                           	movlw	low(0B2h)
 17985  1A1F  30B2               	movwf	(1436)^0580h	;volatile
 17986  1A20  009C               	line	274
 17987                           	
 17988                           l4471:	
 17989  1A21                     ;main.c: 274:  T1CON = 0b00110011;
 17990                           	movlw	low(033h)
 17991  1A21  3033               	movlb 4	; select bank4
 17992  1A22  0144               	movwf	(526)^0200h	;volatile
 17993  1A23  008E               	line	275
 17994                           	
 17995                           l4473:	
 17996  1A24                     ;main.c: 275:  T1CLK = 0b00000001;
 17997                           	movlw	low(01h)
 17998  1A24  3001               	movwf	(529)^0200h	;volatile
 17999  1A25  0091               	line	276
 18000                           	
 18001                           l4475:	
 18002  1A26                     ;main.c: 276:  TMR1 = 53035;
 18003                           	movlw	0CFh
 18004  1A26  30CF               	movwf	(524+1)^0200h	;volatile
 18005  1A27  008D               	movlw	02Bh
 18006  1A28  302B               	movwf	(524)^0200h	;volatile
 18007  1A29  008C               	line	279
 18008                           	
 18009                           l4477:	
 18010  1A2A                     ;main.c: 279:  PIE0 = 0b00110000;
 18011                           	movlw	low(030h)
 18012  1A2A  3030               	movlb 14	; select bank14
 18013  1A2B  014E               	movwf	(1814)^0700h	;volatile
 18014  1A2C  0096               	line	280
 18015                           	
 18016                           l4479:	
 18017  1A2D                     ;main.c: 280:  PIE3 = 0b00100000;
 18018                           	movlw	low(020h)
 18019  1A2D  3020               	movwf	(1817)^0700h	;volatile
 18020  1A2E  0099               	line	281
 18021                           	
 18022                           l4481:	
 18023  1A2F                     ;main.c: 281:  PIE4 = 0b00000001;
 18024                           	movlw	low(01h)
 18025  1A2F  3001               	movwf	(1818)^0700h	;volatile
 18026  1A30  009A               	line	282
 18027                           	
 18028                           l4483:	
 18029  1A31                     ;main.c: 282:  INTCON = 0b11000000;
 18030                           	movlw	low(0C0h)
 18031  1A31  30C0               	movwf	(11)	;volatile
 18032  1A32  008B               	line	285
 18033                           	
 18034                           l4485:	
 18035  1A33                     ;main.c: 285:  IOCAP = 0b10110000;
 18036                           	movlw	low(0B0h)
 18037  1A33  30B0               	movlb 62	; select bank62
 18038  1A34  017E               	movwf	(7997)^01F00h	;volatile
 18039  1A35  00BD               	line	286
 18040                           	
 18041                           l4487:	
 18042  1A36                     ;main.c: 286:  IOCAN = 0b10110000;
 18043                           	movlw	low(0B0h)
 18044  1A36  30B0               	movwf	(7998)^01F00h	;volatile
 18045  1A37  00BE               	line	287
 18046                           	
 18047                           l4489:	
 18048  1A38                     ;main.c: 287:  IOCCN = 0b00000100;
 18049                           	movlw	low(04h)
 18050  1A38  3004               	movwf	(8020)^01F00h	;volatile
 18051  1A39  00D4               	line	291
 18052                           	
 18053                           l4491:	
 18054  1A3A                     ;main.c: 291:  BAUD1CON = 0b00001000;
 18055                           	movlw	low(08h)
 18056  1A3A  3008               	movlb 2	; select bank2
 18057  1A3B  0142               	movwf	(287)^0100h	;volatile
 18058  1A3C  009F               	line	292
 18059                           	
 18060                           l4493:	
 18061  1A3D                     ;main.c: 292:  SPBRGL = 25;
 18062                           	movlw	low(019h)
 18063  1A3D  3019               	movwf	(283)^0100h	;volatile
 18064  1A3E  009B               	line	293
 18065                           	
 18066                           l4495:	
 18067  1A3F                     ;main.c: 293:  RC1STA = 0b10010000;
 18068                           	movlw	low(090h)
 18069  1A3F  3090               	movwf	(285)^0100h	;volatile
 18070  1A40  009D               	line	294
 18071                           	
 18072                           l4497:	
 18073  1A41                     ;main.c: 294:  TX1STA = 0b00100000;
 18074                           	movlw	low(020h)
 18075  1A41  3020               	movwf	(286)^0100h	;volatile
 18076  1A42  009E               	line	295
 18077                           	
 18078                           l231:	
 18079  1A43                     	return
 18080  1A43  0008               	opt stack 0
 18081                           GLOBAL	__end_of_initialize
 18082                           	__end_of_initialize:
 18083  1A44                     	signat	_initialize,89
 18084                           	global	_handleSensorData
 18085                           
 18086 ;; *************** function _handleSensorData *****************
 18087 ;; Defined at:
 18088 ;;		line 155 in file "main.c"
 18089 ;; Parameters:    Size  Location     Type
 18090 ;;		None
 18091 ;; Auto vars:     Size  Location     Type
 18092 ;;		None
 18093 ;; Return value:  Size  Location     Type
 18094 ;;                  1    wreg      void 
 18095 ;; Registers used:
 18096 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18097 ;; Tracked objects:
 18098 ;;		On entry : 0/0
 18099 ;;		On exit  : 0/0
 18100 ;;		Unchanged: 0/0
 18101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18104 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18105 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18106 ;;Total ram usage:        4 bytes
 18107 ;; Hardware stack levels used:    1
 18108 ;; Hardware stack levels required when called:    4
 18109 ;; This function calls:
 18110 ;;		___xxtofl
 18111 ;; This function is called by:
 18112 ;;		_main
 18113 ;; This function uses a non-reentrant model
 18114 ;;
 18115                           psect	text43,local,class=CODE,delta=2,merge=1,group=0
 18116                           	line	155
 18117                           global __ptext43
 18118                           __ptext43:	;psect for function _handleSensorData
 18119  1A95                     psect	text43
 18120                           	file	"main.c"
 18121                           	line	155
 18122                           	global	__size_of_handleSensorData
 18123                           	__size_of_handleSensorData	equ	__end_of_handleSensorData-_handleSensorData
 18124  005B                     	
 18125                           _handleSensorData:	
 18126  1A95                     ;incstack = 0
 18127                           	opt	stack 11
 18128                           ; Regs used in _handleSensorData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18129                           	line	157
 18130                           	
 18131                           l4563:	
 18132  1A95                     ;main.c: 157:  if ((g_dataPacket.header == 0xAA) && (g_dataPacket.status == 1)) {
 18133                           		movlw	170
 18134  1A95  30AA               	movlb 4	; select bank4
 18135  1A96  0144               	xorwf	((_g_dataPacket)^0200h),w	;volatile
 18136  1A97  0644               	btfss	status,2
 18137  1A98  1D03               	goto	u6381
 18138  1A99  2A9B               	goto	u6380
 18139  1A9A  2A9C               u6381:
 18140  1A9B                     	goto	l196
 18141  1A9B  2AEF               u6380:
 18142  1A9C                     	
 18143                           l4565:	
 18144  1A9C                     		decf	(0+(_g_dataPacket)^0200h+02h),w	;volatile
 18145  1A9C  0346               	btfss	status,2
 18146  1A9D  1D03               	goto	u6391
 18147  1A9E  2AA0               	goto	u6390
 18148  1A9F  2AA1               u6391:
 18149  1AA0                     	goto	l196
 18150  1AA0  2AEF               u6390:
 18151  1AA1                     	line	158
 18152                           	
 18153                           l4567:	
 18154  1AA1                     ;main.c: 158:   g_tempC = g_dataPacket.tempC;
 18155                           	movlw	low(03h)
 18156  1AA1  3003               	addlw	low(_g_dataPacket|((0x2)<<8))&0ffh
 18157  1AA2  3E44               	movwf	fsr1l
 18158  1AA3  0086               	movlw 2	; select bank4/5
 18159  1AA4  3002               	movwf fsr1h	
 18160  1AA5  0087               	
 18161                           	moviw	[0]fsr1
 18162  1AA6  3F40               	movlb 3	; select bank3
 18163  1AA7  0143               	movwf	(_g_tempC)^0180h
 18164  1AA8  00E6               	moviw	[1]fsr1
 18165  1AA9  3F41               	movwf	(_g_tempC+1)^0180h
 18166  1AAA  00E7               	moviw	[2]fsr1
 18167  1AAB  3F42               	movwf	(_g_tempC+2)^0180h
 18168  1AAC  00E8               	moviw	[3]fsr1
 18169  1AAD  3F43               	movwf	(_g_tempC+3)^0180h
 18170  1AAE  00E9               	line	159
 18171                           ;main.c: 159:   g_relHum = g_dataPacket.relHum;
 18172                           	movlw	low(07h)
 18173  1AAF  3007               	addlw	low(_g_dataPacket|((0x2)<<8))&0ffh
 18174  1AB0  3E44               	movwf	fsr1l
 18175  1AB1  0086               	movlw 2	; select bank4/5
 18176  1AB2  3002               	movwf fsr1h	
 18177  1AB3  0087               	
 18178                           	moviw	[0]fsr1
 18179  1AB4  3F40               	movlb 2	; select bank2
 18180  1AB5  0142               	movwf	(_g_relHum)^0100h
 18181  1AB6  00DE               	moviw	[1]fsr1
 18182  1AB7  3F41               	movwf	(_g_relHum+1)^0100h
 18183  1AB8  00DF               	moviw	[2]fsr1
 18184  1AB9  3F42               	movwf	(_g_relHum+2)^0100h
 18185  1ABA  00E0               	moviw	[3]fsr1
 18186  1ABB  3F43               	movwf	(_g_relHum+3)^0100h
 18187  1ABC  00E1               	line	160
 18188                           ;main.c: 160:   g_dewPointC = g_dataPacket.dewPointC;
 18189                           	movlw	low(0Bh)
 18190  1ABD  300B               	addlw	low(_g_dataPacket|((0x2)<<8))&0ffh
 18191  1ABE  3E44               	movwf	fsr1l
 18192  1ABF  0086               	movlw 2	; select bank4/5
 18193  1AC0  3002               	movwf fsr1h	
 18194  1AC1  0087               	
 18195                           	moviw	[0]fsr1
 18196  1AC2  3F40               	movwf	(_g_dewPointC)^0100h
 18197  1AC3  00DA               	moviw	[1]fsr1
 18198  1AC4  3F41               	movwf	(_g_dewPointC+1)^0100h
 18199  1AC5  00DB               	moviw	[2]fsr1
 18200  1AC6  3F42               	movwf	(_g_dewPointC+2)^0100h
 18201  1AC7  00DC               	moviw	[3]fsr1
 18202  1AC8  3F43               	movwf	(_g_dewPointC+3)^0100h
 18203  1AC9  00DD               	line	161
 18204                           	
 18205                           l4569:	
 18206  1ACA                     ;main.c: 161:   g_sensorVersion = g_dataPacket.version;
 18207                           	movlb 4	; select bank4
 18208  1ACA  0144               	movf	0+(_g_dataPacket)^0200h+01h,w	;volatile
 18209  1ACB  0845               	movlb 0	; select bank0
 18210  1ACC  0140               	movwf	(??_handleSensorData+0)+0
 18211  1ACD  00AE               	clrf	(??_handleSensorData+0)+0+1
 18212  1ACE  01AF               	clrf	(??_handleSensorData+0)+0+2
 18213  1ACF  01B0               	clrf	(??_handleSensorData+0)+0+3
 18214  1AD0  01B1               	movf	3+(??_handleSensorData+0)+0,w
 18215  1AD1  0831               	movwf	(___xxtofl@val+3)
 18216  1AD2  00A3               	movf	2+(??_handleSensorData+0)+0,w
 18217  1AD3  0830               	movwf	(___xxtofl@val+2)
 18218  1AD4  00A2               	movf	1+(??_handleSensorData+0)+0,w
 18219  1AD5  082F               	movwf	(___xxtofl@val+1)
 18220  1AD6  00A1               	movf	0+(??_handleSensorData+0)+0,w
 18221  1AD7  082E               	movwf	(___xxtofl@val)
 18222  1AD8  00A0               
 18223                           	movlw	low(0)
 18224  1AD9  3000               	fcall	___xxtofl
 18225  1ADA  319F  274B  319A   	movlb 0	; select bank0
 18226  1ADD  0140               	movf	(3+(?___xxtofl)),w
 18227  1ADE  0823               	movlb 4	; select bank4
 18228  1ADF  0144               	movwf	(_g_sensorVersion+3)^0200h
 18229  1AE0  00AF               	movlb 0	; select bank0
 18230  1AE1  0140               	movf	(2+(?___xxtofl)),w
 18231  1AE2  0822               	movlb 4	; select bank4
 18232  1AE3  0144               	movwf	(_g_sensorVersion+2)^0200h
 18233  1AE4  00AE               	movlb 0	; select bank0
 18234  1AE5  0140               	movf	(1+(?___xxtofl)),w
 18235  1AE6  0821               	movlb 4	; select bank4
 18236  1AE7  0144               	movwf	(_g_sensorVersion+1)^0200h
 18237  1AE8  00AD               	movlb 0	; select bank0
 18238  1AE9  0140               	movf	(0+(?___xxtofl)),w
 18239  1AEA  0820               	movlb 4	; select bank4
 18240  1AEB  0144               	movwf	(_g_sensorVersion)^0200h
 18241  1AEC  00AC               
 18242                           	line	162
 18243                           ;main.c: 162:  } else {
 18244                           	goto	l196
 18245  1AED  2AEF               	
 18246                           l194:	
 18247  1AEE                     	goto	l196
 18248  1AEE  2AEF               	line	164
 18249                           ;main.c: 164:  }
 18250                           	
 18251                           l195:	
 18252  1AEF                     	line	165
 18253                           	
 18254                           l196:	
 18255  1AEF                     	return
 18256  1AEF  0008               	opt stack 0
 18257                           GLOBAL	__end_of_handleSensorData
 18258                           	__end_of_handleSensorData:
 18259  1AF0                     	signat	_handleSensorData,89
 18260                           	global	___xxtofl
 18261                           
 18262 ;; *************** function ___xxtofl *****************
 18263 ;; Defined at:
 18264 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
 18265 ;; Parameters:    Size  Location     Type
 18266 ;;  sign            1    wreg     unsigned char 
 18267 ;;  val             4    0[BANK0 ] long 
 18268 ;; Auto vars:     Size  Location     Type
 18269 ;;  sign            1    8[BANK0 ] unsigned char 
 18270 ;;  arg             4   10[BANK0 ] unsigned long 
 18271 ;;  exp             1    9[BANK0 ] unsigned char 
 18272 ;; Return value:  Size  Location     Type
 18273 ;;                  4    0[BANK0 ] unsigned char 
 18274 ;; Registers used:
 18275 ;;		wreg, status,2, status,0
 18276 ;; Tracked objects:
 18277 ;;		On entry : 0/0
 18278 ;;		On exit  : 0/0
 18279 ;;		Unchanged: 0/0
 18280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18281 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18282 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18283 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18284 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18285 ;;Total ram usage:       14 bytes
 18286 ;; Hardware stack levels used:    1
 18287 ;; Hardware stack levels required when called:    3
 18288 ;; This function calls:
 18289 ;;		Nothing
 18290 ;; This function is called by:
 18291 ;;		_readAnalogValues
 18292 ;;		_handleSensorData
 18293 ;; This function uses a non-reentrant model
 18294 ;;
 18295                           psect	text44,local,class=CODE,delta=2,merge=1,group=1
 18296                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
 18297                           	line	10
 18298                           global __ptext44
 18299                           __ptext44:	;psect for function ___xxtofl
 18300  1F4B                     psect	text44
 18301                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
 18302                           	line	10
 18303                           	global	__size_of___xxtofl
 18304                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
 18305  00B5                     	
 18306                           ___xxtofl:	
 18307  1F4B                     ;incstack = 0
 18308                           	opt	stack 11
 18309                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 18310                           ;___xxtofl@sign stored from wreg
 18311                           	movlb 0	; select bank0
 18312  1F4B  0140               	movwf	(___xxtofl@sign)
 18313  1F4C  00A8               	line	15
 18314                           	
 18315                           l4399:	
 18316  1F4D                     	movf	((___xxtofl@sign)),w
 18317  1F4D  0828               	btfsc	status,2
 18318  1F4E  1903               	goto	u6201
 18319  1F4F  2F51               	goto	u6200
 18320  1F50  2F52               u6201:
 18321  1F51                     	goto	l4405
 18322  1F51  2F66               u6200:
 18323  1F52                     	
 18324                           l4401:	
 18325  1F52                     	btfss	(___xxtofl@val+3),7
 18326  1F52  1FA3               	goto	u6211
 18327  1F53  2F55               	goto	u6210
 18328  1F54  2F56               u6211:
 18329  1F55                     	goto	l4405
 18330  1F55  2F66               u6210:
 18331  1F56                     	line	16
 18332                           	
 18333                           l4403:	
 18334  1F56                     	comf	(___xxtofl@val)+0,w
 18335  1F56  0920               	movwf	(___xxtofl@arg)
 18336  1F57  00AA               	comf	(___xxtofl@val)+1,w
 18337  1F58  0921               	movwf	(___xxtofl@arg+1)
 18338  1F59  00AB               	comf	(___xxtofl@val)+2,w
 18339  1F5A  0922               	movwf	(___xxtofl@arg+2)
 18340  1F5B  00AC               	comf	(___xxtofl@val)+3,w
 18341  1F5C  0923               	movwf	(___xxtofl@arg+3)
 18342  1F5D  00AD               	incf	(___xxtofl@arg),f
 18343  1F5E  0AAA               	skipnz
 18344  1F5F  1903               	incf	(___xxtofl@arg+1),f
 18345  1F60  0AAB               	skipnz
 18346  1F61  1903               	incf	(___xxtofl@arg+2),f
 18347  1F62  0AAC               	skipnz
 18348  1F63  1903               	incf	(___xxtofl@arg+3),f
 18349  1F64  0AAD               	line	17
 18350                           	goto	l941
 18351  1F65  2F6E               	line	18
 18352                           	
 18353                           l940:	
 18354  1F66                     	line	19
 18355                           	
 18356                           l4405:	
 18357  1F66                     	movf	(___xxtofl@val+3),w
 18358  1F66  0823               	movwf	(___xxtofl@arg+3)
 18359  1F67  00AD               	movf	(___xxtofl@val+2),w
 18360  1F68  0822               	movwf	(___xxtofl@arg+2)
 18361  1F69  00AC               	movf	(___xxtofl@val+1),w
 18362  1F6A  0821               	movwf	(___xxtofl@arg+1)
 18363  1F6B  00AB               	movf	(___xxtofl@val),w
 18364  1F6C  0820               	movwf	(___xxtofl@arg)
 18365  1F6D  00AA               
 18366                           	line	20
 18367                           	
 18368                           l941:	
 18369  1F6E                     	line	21
 18370                           	movf	(___xxtofl@val+3),w
 18371  1F6E  0823               	iorwf	(___xxtofl@val+2),w
 18372  1F6F  0422               	iorwf	(___xxtofl@val+1),w
 18373  1F70  0421               	iorwf	(___xxtofl@val),w
 18374  1F71  0420               	skipz
 18375  1F72  1D03               	goto	u6221
 18376  1F73  2F75               	goto	u6220
 18377  1F74  2F76               u6221:
 18378  1F75                     	goto	l4411
 18379  1F75  2F80               u6220:
 18380  1F76                     	line	22
 18381                           	
 18382                           l4407:	
 18383  1F76                     	movlw	0x0
 18384  1F76  3000               	movwf	(?___xxtofl+3)
 18385  1F77  00A3               	movlw	0x0
 18386  1F78  3000               	movwf	(?___xxtofl+2)
 18387  1F79  00A2               	movlw	0x0
 18388  1F7A  3000               	movwf	(?___xxtofl+1)
 18389  1F7B  00A1               	movlw	0x0
 18390  1F7C  3000               	movwf	(?___xxtofl)
 18391  1F7D  00A0               
 18392                           	goto	l943
 18393  1F7E  2FFF               	
 18394                           l4409:	
 18395  1F7F                     	goto	l943
 18396  1F7F  2FFF               	
 18397                           l942:	
 18398  1F80                     	line	23
 18399                           	
 18400                           l4411:	
 18401  1F80                     	movlw	low(096h)
 18402  1F80  3096               	movwf	(??___xxtofl+0)+0
 18403  1F81  00A4               	movf	(??___xxtofl+0)+0,w
 18404  1F82  0824               	movwf	(___xxtofl@exp)
 18405  1F83  00A9               	line	24
 18406                           	goto	l4415
 18407  1F84  2F91               	
 18408                           l945:	
 18409  1F85                     	line	25
 18410                           	
 18411                           l4413:	
 18412  1F85                     	movlw	low(01h)
 18413  1F85  3001               	movwf	(??___xxtofl+0)+0
 18414  1F86  00A4               	movf	(??___xxtofl+0)+0,w
 18415  1F87  0824               	addwf	(___xxtofl@exp),f
 18416  1F88  07A9               	line	26
 18417                           	movlw	01h
 18418  1F89  3001               u6235:
 18419  1F8A                     	lsrf	(___xxtofl@arg+3),f
 18420  1F8A  36AD               	rrf	(___xxtofl@arg+2),f
 18421  1F8B  0CAC               	rrf	(___xxtofl@arg+1),f
 18422  1F8C  0CAB               	rrf	(___xxtofl@arg),f
 18423  1F8D  0CAA               	decfsz	wreg,f
 18424  1F8E  0B89               	goto	u6235
 18425  1F8F  2F8A               
 18426                           	goto	l4415
 18427  1F90  2F91               	line	27
 18428                           	
 18429                           l944:	
 18430  1F91                     	line	24
 18431                           	
 18432                           l4415:	
 18433  1F91                     	movlw	high highword(0FE000000h)
 18434  1F91  30FE               	andwf	(___xxtofl@arg+3),w
 18435  1F92  052D               	btfss	status,2
 18436  1F93  1D03               	goto	u6241
 18437  1F94  2F96               	goto	u6240
 18438  1F95  2F97               u6241:
 18439  1F96                     	goto	l4413
 18440  1F96  2F85               u6240:
 18441  1F97                     	goto	l947
 18442  1F97  2FAC               	
 18443                           l946:	
 18444  1F98                     	line	28
 18445                           	goto	l947
 18446  1F98  2FAC               	
 18447                           l948:	
 18448  1F99                     	line	29
 18449                           	
 18450                           l4417:	
 18451  1F99                     	movlw	low(01h)
 18452  1F99  3001               	movwf	(??___xxtofl+0)+0
 18453  1F9A  00A4               	movf	(??___xxtofl+0)+0,w
 18454  1F9B  0824               	addwf	(___xxtofl@exp),f
 18455  1F9C  07A9               	line	30
 18456                           	
 18457                           l4419:	
 18458  1F9D                     	movlw	01h
 18459  1F9D  3001               	addwf	(___xxtofl@arg),f
 18460  1F9E  07AA               	movlw	0
 18461  1F9F  3000               	addwfc	(___xxtofl@arg+1),f
 18462  1FA0  3DAB               	movlw	0
 18463  1FA1  3000               	addwfc	(___xxtofl@arg+2),f
 18464  1FA2  3DAC               	movlw	0
 18465  1FA3  3000               	addwfc	(___xxtofl@arg+3),f
 18466  1FA4  3DAD               	line	31
 18467                           	
 18468                           l4421:	
 18469  1FA5                     	movlw	01h
 18470  1FA5  3001               u6255:
 18471  1FA6                     	lsrf	(___xxtofl@arg+3),f
 18472  1FA6  36AD               	rrf	(___xxtofl@arg+2),f
 18473  1FA7  0CAC               	rrf	(___xxtofl@arg+1),f
 18474  1FA8  0CAB               	rrf	(___xxtofl@arg),f
 18475  1FA9  0CAA               	decfsz	wreg,f
 18476  1FAA  0B89               	goto	u6255
 18477  1FAB  2FA6               
 18478                           	line	32
 18479                           	
 18480                           l947:	
 18481  1FAC                     	line	28
 18482                           	movlw	high highword(0FF000000h)
 18483  1FAC  30FF               	andwf	(___xxtofl@arg+3),w
 18484  1FAD  052D               	btfss	status,2
 18485  1FAE  1D03               	goto	u6261
 18486  1FAF  2FB1               	goto	u6260
 18487  1FB0  2FB2               u6261:
 18488  1FB1                     	goto	l4417
 18489  1FB1  2F99               u6260:
 18490  1FB2                     	goto	l4425
 18491  1FB2  2FBE               	
 18492                           l949:	
 18493  1FB3                     	line	33
 18494                           	goto	l4425
 18495  1FB3  2FBE               	
 18496                           l951:	
 18497  1FB4                     	line	34
 18498                           	
 18499                           l4423:	
 18500  1FB4                     	movlw	01h
 18501  1FB4  3001               	subwf	(___xxtofl@exp),f
 18502  1FB5  02A9               	line	35
 18503                           	movlw	01h
 18504  1FB6  3001               u6275:
 18505  1FB7                     	lslf	(___xxtofl@arg),f
 18506  1FB7  35AA               	rlf	(___xxtofl@arg+1),f
 18507  1FB8  0DAB               	rlf	(___xxtofl@arg+2),f
 18508  1FB9  0DAC               	rlf	(___xxtofl@arg+3),f
 18509  1FBA  0DAD               	decfsz	wreg,f
 18510  1FBB  0B89               	goto	u6275
 18511  1FBC  2FB7               	goto	l4425
 18512  1FBD  2FBE               	line	36
 18513                           	
 18514                           l950:	
 18515  1FBE                     	line	33
 18516                           	
 18517                           l4425:	
 18518  1FBE                     	btfsc	(___xxtofl@arg+2),(23)&7
 18519  1FBE  1BAC               	goto	u6281
 18520  1FBF  2FC1               	goto	u6280
 18521  1FC0  2FC2               u6281:
 18522  1FC1                     	goto	l954
 18523  1FC1  2FC9               u6280:
 18524  1FC2                     	
 18525                           l4427:	
 18526  1FC2                     	movlw	low(02h)
 18527  1FC2  3002               	subwf	(___xxtofl@exp),w
 18528  1FC3  0229               	skipnc
 18529  1FC4  1803               	goto	u6291
 18530  1FC5  2FC7               	goto	u6290
 18531  1FC6  2FC8               u6291:
 18532  1FC7                     	goto	l4423
 18533  1FC7  2FB4               u6290:
 18534  1FC8                     	goto	l954
 18535  1FC8  2FC9               	
 18536                           l953:	
 18537  1FC9                     	
 18538                           l954:	
 18539  1FC9                     	line	37
 18540                           	btfsc	(___xxtofl@exp),(0)&7
 18541  1FC9  1829               	goto	u6301
 18542  1FCA  2FCC               	goto	u6300
 18543  1FCB  2FCD               u6301:
 18544  1FCC                     	goto	l955
 18545  1FCC  2FD5               u6300:
 18546  1FCD                     	line	38
 18547                           	
 18548                           l4429:	
 18549  1FCD                     	movlw	0FFh
 18550  1FCD  30FF               	andwf	(___xxtofl@arg),f
 18551  1FCE  05AA               	movlw	0FFh
 18552  1FCF  30FF               	andwf	(___xxtofl@arg+1),f
 18553  1FD0  05AB               	movlw	07Fh
 18554  1FD1  307F               	andwf	(___xxtofl@arg+2),f
 18555  1FD2  05AC               	movlw	0FFh
 18556  1FD3  30FF               	andwf	(___xxtofl@arg+3),f
 18557  1FD4  05AD               	
 18558                           l955:	
 18559  1FD5                     	line	39
 18560                           	clrc
 18561  1FD5  1003               	rrf	(___xxtofl@exp),f
 18562  1FD6  0CA9               
 18563                           	line	40
 18564                           	
 18565                           l4431:	
 18566  1FD7                     	movf	(___xxtofl@exp),w
 18567  1FD7  0829               	movwf	(??___xxtofl+0)+0
 18568  1FD8  00A4               	clrf	(??___xxtofl+0)+0+1
 18569  1FD9  01A5               	clrf	(??___xxtofl+0)+0+2
 18570  1FDA  01A6               	clrf	(??___xxtofl+0)+0+3
 18571  1FDB  01A7               	movlw	018h
 18572  1FDC  3018               u6315:
 18573  1FDD                     	lslf	(??___xxtofl+0)+0,f
 18574  1FDD  35A4               	rlf	(??___xxtofl+0)+1,f
 18575  1FDE  0DA5               	rlf	(??___xxtofl+0)+2,f
 18576  1FDF  0DA6               	rlf	(??___xxtofl+0)+3,f
 18577  1FE0  0DA7               u6310:
 18578  1FE1                     	decfsz	wreg,f
 18579  1FE1  0B89               	goto	u6315
 18580  1FE2  2FDD               	movf	0+(??___xxtofl+0)+0,w
 18581  1FE3  0824               	iorwf	(___xxtofl@arg),f
 18582  1FE4  04AA               	movf	1+(??___xxtofl+0)+0,w
 18583  1FE5  0825               	iorwf	(___xxtofl@arg+1),f
 18584  1FE6  04AB               	movf	2+(??___xxtofl+0)+0,w
 18585  1FE7  0826               	iorwf	(___xxtofl@arg+2),f
 18586  1FE8  04AC               	movf	3+(??___xxtofl+0)+0,w
 18587  1FE9  0827               	iorwf	(___xxtofl@arg+3),f
 18588  1FEA  04AD               	line	41
 18589                           	
 18590                           l4433:	
 18591  1FEB                     	movf	((___xxtofl@sign)),w
 18592  1FEB  0828               	btfsc	status,2
 18593  1FEC  1903               	goto	u6321
 18594  1FED  2FEF               	goto	u6320
 18595  1FEE  2FF0               u6321:
 18596  1FEF                     	goto	l4439
 18597  1FEF  2FF6               u6320:
 18598  1FF0                     	
 18599                           l4435:	
 18600  1FF0                     	btfss	(___xxtofl@val+3),7
 18601  1FF0  1FA3               	goto	u6331
 18602  1FF1  2FF3               	goto	u6330
 18603  1FF2  2FF4               u6331:
 18604  1FF3                     	goto	l4439
 18605  1FF3  2FF6               u6330:
 18606  1FF4                     	line	42
 18607                           	
 18608                           l4437:	
 18609  1FF4                     	bsf	(___xxtofl@arg)+(31/8),(31)&7
 18610  1FF4  17AD               	goto	l4439
 18611  1FF5  2FF6               	
 18612                           l956:	
 18613  1FF6                     	line	43
 18614                           	
 18615                           l4439:	
 18616  1FF6                     	movf	(___xxtofl@arg+3),w
 18617  1FF6  082D               	movwf	(?___xxtofl+3)
 18618  1FF7  00A3               	movf	(___xxtofl@arg+2),w
 18619  1FF8  082C               	movwf	(?___xxtofl+2)
 18620  1FF9  00A2               	movf	(___xxtofl@arg+1),w
 18621  1FFA  082B               	movwf	(?___xxtofl+1)
 18622  1FFB  00A1               	movf	(___xxtofl@arg),w
 18623  1FFC  082A               	movwf	(?___xxtofl)
 18624  1FFD  00A0               
 18625                           	goto	l943
 18626  1FFE  2FFF               	
 18627                           l4441:	
 18628  1FFF                     	line	44
 18629                           	
 18630                           l943:	
 18631  1FFF                     	return
 18632  1FFF  0008               	opt stack 0
 18633                           GLOBAL	__end_of___xxtofl
 18634                           	__end_of___xxtofl:
 18635  2000                     	signat	___xxtofl,8316
 18636                           	global	_OLED_init
 18637                           
 18638 ;; *************** function _OLED_init *****************
 18639 ;; Defined at:
 18640 ;;		line 80 in file "oled.c"
 18641 ;; Parameters:    Size  Location     Type
 18642 ;;		None
 18643 ;; Auto vars:     Size  Location     Type
 18644 ;;		None
 18645 ;; Return value:  Size  Location     Type
 18646 ;;                  1    wreg      void 
 18647 ;; Registers used:
 18648 ;;		wreg, status,2, status,0, pclath, cstack
 18649 ;; Tracked objects:
 18650 ;;		On entry : 0/0
 18651 ;;		On exit  : 0/0
 18652 ;;		Unchanged: 0/0
 18653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18656 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18657 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18658 ;;Total ram usage:        1 bytes
 18659 ;; Hardware stack levels used:    1
 18660 ;; Hardware stack levels required when called:    7
 18661 ;; This function calls:
 18662 ;;		_OLED_command
 18663 ;;		_OLED_write4bits
 18664 ;; This function is called by:
 18665 ;;		_main
 18666 ;; This function uses a non-reentrant model
 18667 ;;
 18668                           psect	text45,local,class=CODE,delta=2,merge=1,group=0
 18669                           	file	"oled.c"
 18670                           	line	80
 18671                           global __ptext45
 18672                           __ptext45:	;psect for function _OLED_init
 18673  1006                     psect	text45
 18674                           	file	"oled.c"
 18675                           	line	80
 18676                           	global	__size_of_OLED_init
 18677                           	__size_of_OLED_init	equ	__end_of_OLED_init-_OLED_init
 18678  008B                     	
 18679                           _OLED_init:	
 18680  1006                     ;incstack = 0
 18681                           	opt	stack 8
 18682                           ; Regs used in _OLED_init: [wreg+status,2+status,0+pclath+cstack]
 18683                           	line	82
 18684                           	
 18685                           l4499:	
 18686  1006                     ;oled.c: 82:     LATBbits.LATB4 = 0;
 18687                           	movlb 0	; select bank0
 18688  1006  0140               	bcf	(25),4	;volatile
 18689  1007  1219               	line	83
 18690                           ;oled.c: 83:     LATBbits.LATB2 = 0;
 18691                           	bcf	(25),2	;volatile
 18692  1008  1119               	line	84
 18693                           ;oled.c: 84:     LATBbits.LATB3 = 0;
 18694                           	bcf	(25),3	;volatile
 18695  1009  1199               	line	86
 18696                           	
 18697                           l4501:	
 18698  100A                     ;oled.c: 86:     _delay((unsigned long)((50)*(4000000/4000.0)));
 18699                           	opt asmopt_push
 18700                           opt asmopt_off
 18701                           movlw	65
 18702  100A  3041               	movlb 0	; select bank0
 18703  100B  0140               movwf	((??_OLED_init+0)+0),f
 18704  100C  00A7               	movlw	238
 18705  100D  30EE               u6727:
 18706  100E                     decfsz	wreg
 18707  100E  0B89               	goto	u6727
 18708  100F  280E               	decfsz	((??_OLED_init+0)+0),f
 18709  1010  0BA7               	goto	u6727
 18710  1011  280E               	nop
 18711  1012  0000               opt asmopt_pop
 18712                           
 18713                           	line	90
 18714                           	
 18715                           l4503:	
 18716  1013                     ;oled.c: 90:     LATBbits.LATB1 = 0;
 18717                           	movlb 0	; select bank0
 18718  1013  0140               	bcf	(25),1	;volatile
 18719  1014  1099               	line	91
 18720                           	
 18721                           l4505:	
 18722  1015                     ;oled.c: 91:     LATBbits.LATB0 = 0;
 18723                           	bcf	(25),0	;volatile
 18724  1015  1019               	line	92
 18725                           	
 18726                           l4507:	
 18727  1016                     ;oled.c: 92:     LATCbits.LATC5 = 0;
 18728                           	bcf	(26),5	;volatile
 18729  1016  129A               	line	93
 18730                           	
 18731                           l4509:	
 18732  1017                     ;oled.c: 93:     LATCbits.LATC4 = 0;
 18733                           	bcf	(26),4	;volatile
 18734  1017  121A               	line	104
 18735                           	
 18736                           l4511:	
 18737  1018                     ;oled.c: 104:     OLED_write4bits(0x03);
 18738                           	movlw	low(03h)
 18739  1018  3003               	fcall	_OLED_write4bits
 18740  1019  3199  21B8  3190   	line	105
 18741                           	
 18742                           l4513:	
 18743  101C                     ;oled.c: 105:     _delay((unsigned long)((5)*(4000000/4000.0)));
 18744                           	opt asmopt_push
 18745                           opt asmopt_off
 18746                           movlw	7
 18747  101C  3007               	movlb 0	; select bank0
 18748  101D  0140               movwf	((??_OLED_init+0)+0),f
 18749  101E  00A7               	movlw	125
 18750  101F  307D               u6737:
 18751  1020                     decfsz	wreg
 18752  1020  0B89               	goto	u6737
 18753  1021  2820               	decfsz	((??_OLED_init+0)+0),f
 18754  1022  0BA7               	goto	u6737
 18755  1023  2820               opt asmopt_pop
 18756                           
 18757                           	line	106
 18758                           ;oled.c: 106:     OLED_write4bits(0x08);
 18759                           	movlw	low(08h)
 18760  1024  3008               	fcall	_OLED_write4bits
 18761  1025  3199  21B8  3190   	line	107
 18762                           	
 18763                           l4515:	
 18764  1028                     ;oled.c: 107:     _delay((unsigned long)((5)*(4000000/4000.0)));
 18765                           	opt asmopt_push
 18766                           opt asmopt_off
 18767                           movlw	7
 18768  1028  3007               	movlb 0	; select bank0
 18769  1029  0140               movwf	((??_OLED_init+0)+0),f
 18770  102A  00A7               	movlw	125
 18771  102B  307D               u6747:
 18772  102C                     decfsz	wreg
 18773  102C  0B89               	goto	u6747
 18774  102D  282C               	decfsz	((??_OLED_init+0)+0),f
 18775  102E  0BA7               	goto	u6747
 18776  102F  282C               opt asmopt_pop
 18777                           
 18778                           	line	109
 18779                           	
 18780                           l4517:	
 18781  1030                     ;oled.c: 109:     OLED_write4bits(0x02);
 18782                           	movlw	low(02h)
 18783  1030  3002               	fcall	_OLED_write4bits
 18784  1031  3199  21B8  3190   	line	110
 18785                           ;oled.c: 110:     _delay((unsigned long)((5)*(4000000/4000.0)));
 18786                           	opt asmopt_push
 18787                           opt asmopt_off
 18788                           movlw	7
 18789  1034  3007               	movlb 0	; select bank0
 18790  1035  0140               movwf	((??_OLED_init+0)+0),f
 18791  1036  00A7               	movlw	125
 18792  1037  307D               u6757:
 18793  1038                     decfsz	wreg
 18794  1038  0B89               	goto	u6757
 18795  1039  2838               	decfsz	((??_OLED_init+0)+0),f
 18796  103A  0BA7               	goto	u6757
 18797  103B  2838               opt asmopt_pop
 18798                           
 18799                           	line	111
 18800                           	
 18801                           l4519:	
 18802  103C                     ;oled.c: 111:     OLED_write4bits(0x02);
 18803                           	movlw	low(02h)
 18804  103C  3002               	fcall	_OLED_write4bits
 18805  103D  3199  21B8  3190   	line	112
 18806                           	
 18807                           l4521:	
 18808  1040                     ;oled.c: 112:     _delay((unsigned long)((5)*(4000000/4000.0)));
 18809                           	opt asmopt_push
 18810                           opt asmopt_off
 18811                           movlw	7
 18812  1040  3007               	movlb 0	; select bank0
 18813  1041  0140               movwf	((??_OLED_init+0)+0),f
 18814  1042  00A7               	movlw	125
 18815  1043  307D               u6767:
 18816  1044                     decfsz	wreg
 18817  1044  0B89               	goto	u6767
 18818  1045  2844               	decfsz	((??_OLED_init+0)+0),f
 18819  1046  0BA7               	goto	u6767
 18820  1047  2844               opt asmopt_pop
 18821                           
 18822                           	line	113
 18823                           ;oled.c: 113:     OLED_write4bits(0x08);
 18824                           	movlw	low(08h)
 18825  1048  3008               	fcall	_OLED_write4bits
 18826  1049  3199  21B8  3190   	line	114
 18827                           	
 18828                           l4523:	
 18829  104C                     ;oled.c: 114:     _delay((unsigned long)((5)*(4000000/4000.0)));
 18830                           	opt asmopt_push
 18831                           opt asmopt_off
 18832                           movlw	7
 18833  104C  3007               	movlb 0	; select bank0
 18834  104D  0140               movwf	((??_OLED_init+0)+0),f
 18835  104E  00A7               	movlw	125
 18836  104F  307D               u6777:
 18837  1050                     decfsz	wreg
 18838  1050  0B89               	goto	u6777
 18839  1051  2850               	decfsz	((??_OLED_init+0)+0),f
 18840  1052  0BA7               	goto	u6777
 18841  1053  2850               opt asmopt_pop
 18842                           
 18843                           	line	116
 18844                           	
 18845                           l4525:	
 18846  1054                     ;oled.c: 116:     OLED_command(0x08);
 18847                           	movlw	low(08h)
 18848  1054  3008               	fcall	_OLED_command
 18849  1055  31A6  2658  3190   	line	117
 18850                           ;oled.c: 117:     _delay((unsigned long)((5)*(4000000/4000.0)));
 18851                           	opt asmopt_push
 18852                           opt asmopt_off
 18853                           movlw	7
 18854  1058  3007               	movlb 0	; select bank0
 18855  1059  0140               movwf	((??_OLED_init+0)+0),f
 18856  105A  00A7               	movlw	125
 18857  105B  307D               u6787:
 18858  105C                     decfsz	wreg
 18859  105C  0B89               	goto	u6787
 18860  105D  285C               	decfsz	((??_OLED_init+0)+0),f
 18861  105E  0BA7               	goto	u6787
 18862  105F  285C               opt asmopt_pop
 18863                           
 18864                           	line	118
 18865                           	
 18866                           l4527:	
 18867  1060                     ;oled.c: 118:     OLED_command(0x01);
 18868                           	movlw	low(01h)
 18869  1060  3001               	fcall	_OLED_command
 18870  1061  31A6  2658  3190   	line	119
 18871                           	
 18872                           l4529:	
 18873  1064                     ;oled.c: 119:     _delay((unsigned long)((5)*(4000000/4000.0)));
 18874                           	opt asmopt_push
 18875                           opt asmopt_off
 18876                           movlw	7
 18877  1064  3007               	movlb 0	; select bank0
 18878  1065  0140               movwf	((??_OLED_init+0)+0),f
 18879  1066  00A7               	movlw	125
 18880  1067  307D               u6797:
 18881  1068                     decfsz	wreg
 18882  1068  0B89               	goto	u6797
 18883  1069  2868               	decfsz	((??_OLED_init+0)+0),f
 18884  106A  0BA7               	goto	u6797
 18885  106B  2868               opt asmopt_pop
 18886                           
 18887                           	line	120
 18888                           ;oled.c: 120:     OLED_command(0x06);
 18889                           	movlw	low(06h)
 18890  106C  3006               	fcall	_OLED_command
 18891  106D  31A6  2658  3190   	line	121
 18892                           	
 18893                           l4531:	
 18894  1070                     ;oled.c: 121:     _delay((unsigned long)((5)*(4000000/4000.0)));
 18895                           	opt asmopt_push
 18896                           opt asmopt_off
 18897                           movlw	7
 18898  1070  3007               	movlb 0	; select bank0
 18899  1071  0140               movwf	((??_OLED_init+0)+0),f
 18900  1072  00A7               	movlw	125
 18901  1073  307D               u6807:
 18902  1074                     decfsz	wreg
 18903  1074  0B89               	goto	u6807
 18904  1075  2874               	decfsz	((??_OLED_init+0)+0),f
 18905  1076  0BA7               	goto	u6807
 18906  1077  2874               opt asmopt_pop
 18907                           
 18908                           	line	122
 18909                           	
 18910                           l4533:	
 18911  1078                     ;oled.c: 122:     OLED_command(0x02);
 18912                           	movlw	low(02h)
 18913  1078  3002               	fcall	_OLED_command
 18914  1079  31A6  2658  3190   	line	123
 18915                           ;oled.c: 123:     _delay((unsigned long)((5)*(4000000/4000.0)));
 18916                           	opt asmopt_push
 18917                           opt asmopt_off
 18918                           movlw	7
 18919  107C  3007               	movlb 0	; select bank0
 18920  107D  0140               movwf	((??_OLED_init+0)+0),f
 18921  107E  00A7               	movlw	125
 18922  107F  307D               u6817:
 18923  1080                     decfsz	wreg
 18924  1080  0B89               	goto	u6817
 18925  1081  2880               	decfsz	((??_OLED_init+0)+0),f
 18926  1082  0BA7               	goto	u6817
 18927  1083  2880               opt asmopt_pop
 18928                           
 18929                           	line	124
 18930                           	
 18931                           l4535:	
 18932  1084                     ;oled.c: 124:     OLED_command(0x0C);
 18933                           	movlw	low(0Ch)
 18934  1084  300C               	fcall	_OLED_command
 18935  1085  31A6  2658  3190   	line	125
 18936                           	
 18937                           l4537:	
 18938  1088                     ;oled.c: 125:     _delay((unsigned long)((5)*(4000000/4000.0)));
 18939                           	opt asmopt_push
 18940                           opt asmopt_off
 18941                           movlw	7
 18942  1088  3007               	movlb 0	; select bank0
 18943  1089  0140               movwf	((??_OLED_init+0)+0),f
 18944  108A  00A7               	movlw	125
 18945  108B  307D               u6827:
 18946  108C                     decfsz	wreg
 18947  108C  0B89               	goto	u6827
 18948  108D  288C               	decfsz	((??_OLED_init+0)+0),f
 18949  108E  0BA7               	goto	u6827
 18950  108F  288C               opt asmopt_pop
 18951                           
 18952                           	line	126
 18953                           	
 18954                           l315:	
 18955  1090                     	return
 18956  1090  0008               	opt stack 0
 18957                           GLOBAL	__end_of_OLED_init
 18958                           	__end_of_OLED_init:
 18959  1091                     	signat	_OLED_init,89
 18960                           	global	_OLED_command
 18961                           
 18962 ;; *************** function _OLED_command *****************
 18963 ;; Defined at:
 18964 ;;		line 68 in file "oled.c"
 18965 ;; Parameters:    Size  Location     Type
 18966 ;;  value           1    wreg     unsigned char 
 18967 ;; Auto vars:     Size  Location     Type
 18968 ;;  value           1    6[BANK0 ] unsigned char 
 18969 ;; Return value:  Size  Location     Type
 18970 ;;                  1    wreg      void 
 18971 ;; Registers used:
 18972 ;;		wreg, status,2, status,0, pclath, cstack
 18973 ;; Tracked objects:
 18974 ;;		On entry : 0/0
 18975 ;;		On exit  : 0/0
 18976 ;;		Unchanged: 0/0
 18977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18979 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18981 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18982 ;;Total ram usage:        1 bytes
 18983 ;; Hardware stack levels used:    1
 18984 ;; Hardware stack levels required when called:    6
 18985 ;; This function calls:
 18986 ;;		_OLED_send
 18987 ;;		_OLED_waitForReady
 18988 ;; This function is called by:
 18989 ;;		_main
 18990 ;;		_OLED_init
 18991 ;;		_OLED_scrollDisplayLeft
 18992 ;;		_OLED_scrollDisplayRight
 18993 ;;		_OLED_print_xy
 18994 ;;		_OLED_returnHome
 18995 ;;		_OLED_setCursor
 18996 ;; This function uses a non-reentrant model
 18997 ;;
 18998                           psect	text46,local,class=CODE,delta=2,merge=1,group=0
 18999                           	line	68
 19000                           global __ptext46
 19001                           __ptext46:	;psect for function _OLED_command
 19002  2658                     psect	text46
 19003                           	file	"oled.c"
 19004                           	line	68
 19005                           	global	__size_of_OLED_command
 19006                           	__size_of_OLED_command	equ	__end_of_OLED_command-_OLED_command
 19007  000B                     	
 19008                           _OLED_command:	
 19009  2658                     ;incstack = 0
 19010                           	opt	stack 6
 19011                           ; Regs used in _OLED_command: [wreg+status,2+status,0+pclath+cstack]
 19012                           ;OLED_command@value stored from wreg
 19013                           	movlb 0	; select bank0
 19014  2658  0140               	movwf	(OLED_command@value)
 19015  2659  00A6               	line	70
 19016                           	
 19017                           l4145:	
 19018  265A                     ;oled.c: 68: void OLED_command(uint8_t value);oled.c: 69: {;oled.c: 70:     OLED_send(va
                                 lue, 0);
 19019                           	clrf	(OLED_send@mode)
 19020  265A  01A3               	movf	(OLED_command@value),w
 19021  265B  0826               	fcall	_OLED_send
 19022  265C  31A6  2689  31A6   	line	71
 19023                           ;oled.c: 71:     OLED_waitForReady();
 19024                           	fcall	_OLED_waitForReady
 19025  265F  31A6  26F6  31A6   	line	72
 19026                           	
 19027                           l309:	
 19028  2662                     	return
 19029  2662  0008               	opt stack 0
 19030                           GLOBAL	__end_of_OLED_command
 19031                           	__end_of_OLED_command:
 19032  2663                     	signat	_OLED_command,4217
 19033                           	global	_OLED_waitForReady
 19034                           
 19035 ;; *************** function _OLED_waitForReady *****************
 19036 ;; Defined at:
 19037 ;;		line 40 in file "oled.c"
 19038 ;; Parameters:    Size  Location     Type
 19039 ;;		None
 19040 ;; Auto vars:     Size  Location     Type
 19041 ;;  busy            1    0[BANK0 ] unsigned char 
 19042 ;; Return value:  Size  Location     Type
 19043 ;;                  1    wreg      void 
 19044 ;; Registers used:
 19045 ;;		wreg, status,2, status,0, pclath, cstack
 19046 ;; Tracked objects:
 19047 ;;		On entry : 0/0
 19048 ;;		On exit  : 0/0
 19049 ;;		Unchanged: 0/0
 19050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19052 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19054 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19055 ;;Total ram usage:        1 bytes
 19056 ;; Hardware stack levels used:    1
 19057 ;; Hardware stack levels required when called:    4
 19058 ;; This function calls:
 19059 ;;		_OLED_pulseEnable
 19060 ;; This function is called by:
 19061 ;;		_OLED_command
 19062 ;;		_OLED_write
 19063 ;; This function uses a non-reentrant model
 19064 ;;
 19065                           psect	text47,local,class=CODE,delta=2,merge=1,group=0
 19066                           	line	40
 19067                           global __ptext47
 19068                           __ptext47:	;psect for function _OLED_waitForReady
 19069  26F6                     psect	text47
 19070                           	file	"oled.c"
 19071                           	line	40
 19072                           	global	__size_of_OLED_waitForReady
 19073                           	__size_of_OLED_waitForReady	equ	__end_of_OLED_waitForReady-_OLED_waitForReady
 19074  0023                     	
 19075                           _OLED_waitForReady:	
 19076  26F6                     ;incstack = 0
 19077                           	opt	stack 7
 19078                           ; Regs used in _OLED_waitForReady: [wreg+status,2+status,0+pclath+cstack]
 19079                           	line	43
 19080                           	
 19081                           l3769:	
 19082  26F6                     ;oled.c: 43:     unsigned char busy = 1;
 19083                           	movlb 0	; select bank0
 19084  26F6  0140               	clrf	(OLED_waitForReady@busy)
 19085  26F7  01A0               	incf	(OLED_waitForReady@busy),f
 19086  26F8  0AA0               	line	45
 19087                           ;oled.c: 45:     TRISCbits.TRISC4 = 1;
 19088                           	bsf	(20),4	;volatile
 19089  26F9  1614               	line	46
 19090                           ;oled.c: 46:     LATBbits.LATB4 = 0;
 19091                           	bcf	(25),4	;volatile
 19092  26FA  1219               	line	47
 19093                           ;oled.c: 47:     LATBbits.LATB3 = 1;
 19094                           	bsf	(25),3	;volatile
 19095  26FB  1599               	line	49
 19096                           ;oled.c: 49:     do
 19097                           	
 19098                           l304:	
 19099  26FC                     	line	51
 19100                           ;oled.c: 50:     {;oled.c: 51:         LATBbits.LATB2 = 0;
 19101                           	bcf	(25),2	;volatile
 19102  26FC  1119               	line	52
 19103                           	
 19104                           l3771:	
 19105  26FD                     ;oled.c: 52:         _delay((unsigned long)((10)*(4000000/4000000.0)));
 19106                           	opt asmopt_push
 19107                           opt asmopt_off
 19108                           	movlw	3
 19109  26FD  3003               u6837:
 19110  26FE                     decfsz	wreg
 19111  26FE  0B89               	goto	u6837
 19112  26FF  2EFE               	nop
 19113  2700  0000               opt asmopt_pop
 19114                           
 19115                           	line	53
 19116                           	
 19117                           l3773:	
 19118  2701                     ;oled.c: 53:         LATBbits.LATB2 = 1;
 19119                           	movlb 0	; select bank0
 19120  2701  0140               	bsf	(25),2	;volatile
 19121  2702  1519               	line	55
 19122                           ;oled.c: 55:         _delay((unsigned long)((10)*(4000000/4000000.0)));
 19123                           	opt asmopt_push
 19124                           opt asmopt_off
 19125                           	movlw	3
 19126  2703  3003               u6847:
 19127  2704                     decfsz	wreg
 19128  2704  0B89               	goto	u6847
 19129  2705  2F04               	nop
 19130  2706  0000               opt asmopt_pop
 19131                           
 19132                           	line	56
 19133                           	
 19134                           l3775:	
 19135  2707                     ;oled.c: 56:         busy = PORTCbits.RC4;
 19136                           	movlw	0
 19137  2707  3000               	movlb 0	; select bank0
 19138  2708  0140               	btfsc	(14),4	;volatile
 19139  2709  1A0E               	movlw	1
 19140  270A  3001               	movwf	(OLED_waitForReady@busy)
 19141  270B  00A0               	line	58
 19142                           	
 19143                           l3777:	
 19144  270C                     ;oled.c: 58:         LATBbits.LATB2 = 0;
 19145                           	bcf	(25),2	;volatile
 19146  270C  1119               	line	60
 19147                           	
 19148                           l3779:	
 19149  270D                     ;oled.c: 60:         OLED_pulseEnable();
 19150                           	fcall	_OLED_pulseEnable
 19151  270D  31A6  2646  31A6   	line	61
 19152                           	
 19153                           l3781:	
 19154  2710                     ;oled.c: 61:     }
 19155                           	movlb 0	; select bank0
 19156  2710  0140               	movf	((OLED_waitForReady@busy)),w
 19157  2711  0820               	btfss	status,2
 19158  2712  1D03               	goto	u5211
 19159  2713  2F15               	goto	u5210
 19160  2714  2F16               u5211:
 19161  2715                     	goto	l304
 19162  2715  2EFC               u5210:
 19163  2716                     	
 19164                           l305:	
 19165  2716                     	line	64
 19166                           ;oled.c: 64:     TRISCbits.TRISC4 = 0;
 19167                           	bcf	(20),4	;volatile
 19168  2716  1214               	line	65
 19169                           ;oled.c: 65:     LATBbits.LATB3 = 0;
 19170                           	bcf	(25),3	;volatile
 19171  2717  1199               	line	66
 19172                           	
 19173                           l306:	
 19174  2718                     	return
 19175  2718  0008               	opt stack 0
 19176                           GLOBAL	__end_of_OLED_waitForReady
 19177                           	__end_of_OLED_waitForReady:
 19178  2719                     	signat	_OLED_waitForReady,89
 19179                           	global	_OLED_send
 19180                           
 19181 ;; *************** function _OLED_send *****************
 19182 ;; Defined at:
 19183 ;;		line 30 in file "oled.c"
 19184 ;; Parameters:    Size  Location     Type
 19185 ;;  value           1    wreg     unsigned char 
 19186 ;;  mode            1    3[BANK0 ] unsigned char 
 19187 ;; Auto vars:     Size  Location     Type
 19188 ;;  value           1    5[BANK0 ] unsigned char 
 19189 ;; Return value:  Size  Location     Type
 19190 ;;                  1    wreg      void 
 19191 ;; Registers used:
 19192 ;;		wreg, status,2, status,0, pclath, cstack
 19193 ;; Tracked objects:
 19194 ;;		On entry : 0/0
 19195 ;;		On exit  : 0/0
 19196 ;;		Unchanged: 0/0
 19197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19198 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19199 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19200 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19201 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19202 ;;Total ram usage:        3 bytes
 19203 ;; Hardware stack levels used:    1
 19204 ;; Hardware stack levels required when called:    5
 19205 ;; This function calls:
 19206 ;;		_OLED_write4bits
 19207 ;; This function is called by:
 19208 ;;		_OLED_command
 19209 ;;		_OLED_write
 19210 ;; This function uses a non-reentrant model
 19211 ;;
 19212                           psect	text48,local,class=CODE,delta=2,merge=1,group=0
 19213                           	line	30
 19214                           global __ptext48
 19215                           __ptext48:	;psect for function _OLED_send
 19216  2689                     psect	text48
 19217                           	file	"oled.c"
 19218                           	line	30
 19219                           	global	__size_of_OLED_send
 19220                           	__size_of_OLED_send	equ	__end_of_OLED_send-_OLED_send
 19221  0018                     	
 19222                           _OLED_send:	
 19223  2689                     ;incstack = 0
 19224                           	opt	stack 6
 19225                           ; Regs used in _OLED_send: [wreg+status,2+status,0+pclath+cstack]
 19226                           ;OLED_send@value stored from wreg
 19227                           	movlb 0	; select bank0
 19228  2689  0140               	movwf	(OLED_send@value)
 19229  268A  00A5               	line	32
 19230                           	
 19231                           l3761:	
 19232  268B                     ;oled.c: 30: void OLED_send(uint8_t value, uint8_t mode);oled.c: 31: {;oled.c: 32:     L
                                 ATBbits.LATB4 = mode;
 19233                           	rrf	(OLED_send@mode),w
 19234  268B  0C23               	skipc
 19235  268C  1C03               	bcf	(25),4	;volatile
 19236  268D  1219               	skipnc
 19237  268E  1803               	bsf	(25),4	;volatile
 19238  268F  1619               	line	33
 19239                           	
 19240                           l3763:	
 19241  2690                     ;oled.c: 33:     LATBbits.LATB3 = 0;
 19242                           	bcf	(25),3	;volatile
 19243  2690  1199               	line	35
 19244                           	
 19245                           l3765:	
 19246  2691                     ;oled.c: 35:     OLED_write4bits(value>>4);
 19247                           	movf	(OLED_send@value),w
 19248  2691  0825               	movwf	(??_OLED_send+0)+0
 19249  2692  00A4               	movlw	04h
 19250  2693  3004               u5205:
 19251  2694                     	lsrf	(??_OLED_send+0)+0,f
 19252  2694  36A4               	decfsz	wreg,f
 19253  2695  0B89               	goto	u5205
 19254  2696  2E94               	movf	0+(??_OLED_send+0)+0,w
 19255  2697  0824               	fcall	_OLED_write4bits
 19256  2698  3199  21B8  31A6   	line	36
 19257                           	
 19258                           l3767:	
 19259  269B                     ;oled.c: 36:     OLED_write4bits(value);
 19260                           	movlb 0	; select bank0
 19261  269B  0140               	movf	(OLED_send@value),w
 19262  269C  0825               	fcall	_OLED_write4bits
 19263  269D  3199  21B8  31A6   	line	37
 19264                           	
 19265                           l301:	
 19266  26A0                     	return
 19267  26A0  0008               	opt stack 0
 19268                           GLOBAL	__end_of_OLED_send
 19269                           	__end_of_OLED_send:
 19270  26A1                     	signat	_OLED_send,8313
 19271                           	global	_OLED_write4bits
 19272                           
 19273 ;; *************** function _OLED_write4bits *****************
 19274 ;; Defined at:
 19275 ;;		line 19 in file "oled.c"
 19276 ;; Parameters:    Size  Location     Type
 19277 ;;  value           1    wreg     unsigned char 
 19278 ;; Auto vars:     Size  Location     Type
 19279 ;;  value           1    2[BANK0 ] unsigned char 
 19280 ;; Return value:  Size  Location     Type
 19281 ;;                  1    wreg      void 
 19282 ;; Registers used:
 19283 ;;		wreg, status,2, status,0, pclath, cstack
 19284 ;; Tracked objects:
 19285 ;;		On entry : 0/0
 19286 ;;		On exit  : 0/0
 19287 ;;		Unchanged: 0/0
 19288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19290 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19291 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19292 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19293 ;;Total ram usage:        3 bytes
 19294 ;; Hardware stack levels used:    1
 19295 ;; Hardware stack levels required when called:    4
 19296 ;; This function calls:
 19297 ;;		_OLED_pulseEnable
 19298 ;; This function is called by:
 19299 ;;		_OLED_send
 19300 ;;		_OLED_init
 19301 ;; This function uses a non-reentrant model
 19302 ;;
 19303                           psect	text49,local,class=CODE,delta=2,merge=1,group=0
 19304                           	line	19
 19305                           global __ptext49
 19306                           __ptext49:	;psect for function _OLED_write4bits
 19307  19B8                     psect	text49
 19308                           	file	"oled.c"
 19309                           	line	19
 19310                           	global	__size_of_OLED_write4bits
 19311                           	__size_of_OLED_write4bits	equ	__end_of_OLED_write4bits-_OLED_write4bits
 19312  0040                     	
 19313                           _OLED_write4bits:	
 19314  19B8                     ;incstack = 0
 19315                           	opt	stack 6
 19316                           ; Regs used in _OLED_write4bits: [wreg+status,2+status,0+pclath+cstack]
 19317                           ;OLED_write4bits@value stored from wreg
 19318                           	movlb 0	; select bank0
 19319  19B8  0140               	movwf	(OLED_write4bits@value)
 19320  19B9  00A2               	line	21
 19321                           	
 19322                           l3185:	
 19323  19BA                     ;oled.c: 19: void OLED_write4bits(uint8_t value);oled.c: 20: {;oled.c: 21:     LATBbits.
                                 LATB1 = (value >> 0) & 0x01;
 19324                           	movf	(OLED_write4bits@value),w
 19325  19BA  0822               	andlw	01h
 19326  19BB  3901               	movwf	(??_OLED_write4bits+0)+0
 19327  19BC  00A0               	rlf	(??_OLED_write4bits+0)+0,f
 19328  19BD  0DA0               	movf	(25),w	;volatile
 19329  19BE  0819               	xorwf	(??_OLED_write4bits+0)+0,w
 19330  19BF  0620               	andlw	not (((1<<1)-1)<<1)
 19331  19C0  39FD               	xorwf	(??_OLED_write4bits+0)+0,w
 19332  19C1  0620               	movwf	(25)	;volatile
 19333  19C2  0099               	line	22
 19334                           ;oled.c: 22:     LATBbits.LATB0 = (value >> 1) & 0x01;
 19335                           	movf	(OLED_write4bits@value),w
 19336  19C3  0822               	movwf	(??_OLED_write4bits+0)+0
 19337  19C4  00A0               	movlw	01h
 19338  19C5  3001               u3895:
 19339  19C6                     	lsrf	(??_OLED_write4bits+0)+0,f
 19340  19C6  36A0               	decfsz	wreg,f
 19341  19C7  0B89               	goto	u3895
 19342  19C8  29C6               	movlw	low(01h)
 19343  19C9  3001               	andwf	0+(??_OLED_write4bits+0)+0,w
 19344  19CA  0520               	movwf	(??_OLED_write4bits+1)+0
 19345  19CB  00A1               	movf	(25),w	;volatile
 19346  19CC  0819               	xorwf	0+(??_OLED_write4bits+1)+0,w
 19347  19CD  0621               	andlw	not ((1<<1)-1)
 19348  19CE  39FE               	xorwf	0+(??_OLED_write4bits+1)+0,w
 19349  19CF  0621               	movwf	(25)	;volatile
 19350  19D0  0099               	line	23
 19351                           ;oled.c: 23:     LATCbits.LATC5 = (value >> 2) & 0x01;
 19352                           	movf	(OLED_write4bits@value),w
 19353  19D1  0822               	movwf	(??_OLED_write4bits+0)+0
 19354  19D2  00A0               	movlw	02h
 19355  19D3  3002               u3905:
 19356  19D4                     	lsrf	(??_OLED_write4bits+0)+0,f
 19357  19D4  36A0               	decfsz	wreg,f
 19358  19D5  0B89               	goto	u3905
 19359  19D6  29D4               	movf	0+(??_OLED_write4bits+0)+0,w
 19360  19D7  0820               	andlw	01h
 19361  19D8  3901               	movwf	(??_OLED_write4bits+1)+0
 19362  19D9  00A1               	swapf	(??_OLED_write4bits+1)+0,f
 19363  19DA  0EA1               	rlf	(??_OLED_write4bits+1)+0,f
 19364  19DB  0DA1               	movf	(26),w	;volatile
 19365  19DC  081A               	xorwf	(??_OLED_write4bits+1)+0,w
 19366  19DD  0621               	andlw	not (((1<<1)-1)<<5)
 19367  19DE  39DF               	xorwf	(??_OLED_write4bits+1)+0,w
 19368  19DF  0621               	movwf	(26)	;volatile
 19369  19E0  009A               	line	24
 19370                           ;oled.c: 24:     LATCbits.LATC4 = (value >> 3) & 0x01;
 19371                           	movf	(OLED_write4bits@value),w
 19372  19E1  0822               	movwf	(??_OLED_write4bits+0)+0
 19373  19E2  00A0               	movlw	03h
 19374  19E3  3003               u3915:
 19375  19E4                     	lsrf	(??_OLED_write4bits+0)+0,f
 19376  19E4  36A0               	decfsz	wreg,f
 19377  19E5  0B89               	goto	u3915
 19378  19E6  29E4               	movf	0+(??_OLED_write4bits+0)+0,w
 19379  19E7  0820               	andlw	01h
 19380  19E8  3901               	movwf	(??_OLED_write4bits+1)+0
 19381  19E9  00A1               	swapf	(??_OLED_write4bits+1)+0,f
 19382  19EA  0EA1               	movf	(26),w	;volatile
 19383  19EB  081A               	xorwf	(??_OLED_write4bits+1)+0,w
 19384  19EC  0621               	andlw	not (((1<<1)-1)<<4)
 19385  19ED  39EF               	xorwf	(??_OLED_write4bits+1)+0,w
 19386  19EE  0621               	movwf	(26)	;volatile
 19387  19EF  009A               	line	26
 19388                           	
 19389                           l3187:	
 19390  19F0                     ;oled.c: 26:     _delay((unsigned long)((50)*(4000000/4000000.0)));
 19391                           	opt asmopt_push
 19392                           opt asmopt_off
 19393                           	movlw	16
 19394  19F0  3010               u6857:
 19395  19F1                     decfsz	wreg
 19396  19F1  0B89               	goto	u6857
 19397  19F2  29F1               	nop2
 19398  19F3  3200               opt asmopt_pop
 19399                           
 19400                           	line	27
 19401                           	
 19402                           l3189:	
 19403  19F4                     ;oled.c: 27:     OLED_pulseEnable();
 19404                           	fcall	_OLED_pulseEnable
 19405  19F4  31A6  2646  3199   	line	28
 19406                           	
 19407                           l298:	
 19408  19F7                     	return
 19409  19F7  0008               	opt stack 0
 19410                           GLOBAL	__end_of_OLED_write4bits
 19411                           	__end_of_OLED_write4bits:
 19412  19F8                     	signat	_OLED_write4bits,4217
 19413                           	global	_OLED_pulseEnable
 19414                           
 19415 ;; *************** function _OLED_pulseEnable *****************
 19416 ;; Defined at:
 19417 ;;		line 12 in file "oled.c"
 19418 ;; Parameters:    Size  Location     Type
 19419 ;;		None
 19420 ;; Auto vars:     Size  Location     Type
 19421 ;;		None
 19422 ;; Return value:  Size  Location     Type
 19423 ;;                  1    wreg      void 
 19424 ;; Registers used:
 19425 ;;		wreg
 19426 ;; Tracked objects:
 19427 ;;		On entry : 0/0
 19428 ;;		On exit  : 0/0
 19429 ;;		Unchanged: 0/0
 19430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19435 ;;Total ram usage:        0 bytes
 19436 ;; Hardware stack levels used:    1
 19437 ;; Hardware stack levels required when called:    3
 19438 ;; This function calls:
 19439 ;;		Nothing
 19440 ;; This function is called by:
 19441 ;;		_OLED_write4bits
 19442 ;;		_OLED_waitForReady
 19443 ;; This function uses a non-reentrant model
 19444 ;;
 19445                           psect	text50,local,class=CODE,delta=2,merge=1,group=0
 19446                           	line	12
 19447                           global __ptext50
 19448                           __ptext50:	;psect for function _OLED_pulseEnable
 19449  2646                     psect	text50
 19450                           	file	"oled.c"
 19451                           	line	12
 19452                           	global	__size_of_OLED_pulseEnable
 19453                           	__size_of_OLED_pulseEnable	equ	__end_of_OLED_pulseEnable-_OLED_pulseEnable
 19454  0009                     	
 19455                           _OLED_pulseEnable:	
 19456  2646                     ;incstack = 0
 19457                           	opt	stack 7
 19458                           ; Regs used in _OLED_pulseEnable: [wreg]
 19459                           	line	14
 19460                           	
 19461                           l2949:	
 19462  2646                     ;oled.c: 14:     LATBbits.LATB2 = 1;
 19463                           	movlb 0	; select bank0
 19464  2646  0140               	bsf	(25),2	;volatile
 19465  2647  1519               	line	15
 19466                           	
 19467                           l2951:	
 19468  2648                     ;oled.c: 15:     _delay((unsigned long)((50)*(4000000/4000000.0)));
 19469                           	opt asmopt_push
 19470                           opt asmopt_off
 19471                           	movlw	16
 19472  2648  3010               u6867:
 19473  2649                     decfsz	wreg
 19474  2649  0B89               	goto	u6867
 19475  264A  2E49               	nop2
 19476  264B  3200               opt asmopt_pop
 19477                           
 19478                           	line	16
 19479                           	
 19480                           l2953:	
 19481  264C                     ;oled.c: 16:     LATBbits.LATB2 = 0;
 19482                           	movlb 0	; select bank0
 19483  264C  0140               	bcf	(25),2	;volatile
 19484  264D  1119               	line	17
 19485                           	
 19486                           l295:	
 19487  264E                     	return
 19488  264E  0008               	opt stack 0
 19489                           GLOBAL	__end_of_OLED_pulseEnable
 19490                           	__end_of_OLED_pulseEnable:
 19491  264F                     	signat	_OLED_pulseEnable,89
 19492                           	global	_ISR
 19493                           
 19494 ;; *************** function _ISR *****************
 19495 ;; Defined at:
 19496 ;;		line 312 in file "main.c"
 19497 ;; Parameters:    Size  Location     Type
 19498 ;;		None
 19499 ;; Auto vars:     Size  Location     Type
 19500 ;;		None
 19501 ;; Return value:  Size  Location     Type
 19502 ;;                  1    wreg      void 
 19503 ;; Registers used:
 19504 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19505 ;; Tracked objects:
 19506 ;;		On entry : 0/0
 19507 ;;		On exit  : 0/0
 19508 ;;		Unchanged: 0/0
 19509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19512 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19513 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19514 ;;Total ram usage:        1 bytes
 19515 ;; Hardware stack levels used:    1
 19516 ;; Hardware stack levels required when called:    2
 19517 ;; This function calls:
 19518 ;;		_pushButtonISR
 19519 ;;		_rotISR
 19520 ;;		_uartReceiveISR
 19521 ;; This function is called by:
 19522 ;;		Interrupt level 1
 19523 ;; This function uses a non-reentrant model
 19524 ;;
 19525                           psect	intentry,class=CODE,delta=2
 19526                           global __pintentry
 19527                           __pintentry:
 19528  0004                     psect	intentry
 19529                           	file	"main.c"
 19530                           	line	312
 19531                           	global	__size_of_ISR
 19532                           	__size_of_ISR	equ	__end_of_ISR-_ISR
 19533  0078                     	
 19534                           _ISR:	
 19535  0004                     ;incstack = 0
 19536                           	opt	stack 4
 19537                           	bsf int$flags,0 ;set compiler interrupt flag (level 1)
 19538  0004  147E               ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19539                           psect	intentry
 19540                           	pagesel	$
 19541  0005  3180               	line	314
 19542                           	
 19543                           i1l4669:	
 19544  0006                     ;main.c: 314:  if (PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1) {
 19545                           	movlb 14	; select bank14
 19546  0006  014E               	btfss	(1814)^0700h,5	;volatile
 19547  0007  1E96               	goto	u655_21
 19548  0008  280A               	goto	u655_20
 19549  0009  280B               u655_21:
 19550  000A                     	goto	i1l242
 19551  000A  2819               u655_20:
 19552  000B                     	
 19553                           i1l4671:	
 19554  000B                     	btfss	(1804)^0700h,5	;volatile
 19555  000B  1E8C               	goto	u656_21
 19556  000C  280E               	goto	u656_20
 19557  000D  280F               u656_21:
 19558  000E                     	goto	i1l242
 19559  000E  2819               u656_20:
 19560  000F                     	line	317
 19561                           	
 19562                           i1l4673:	
 19563  000F                     ;main.c: 317:   g_10msTick++;
 19564                           	movlw	low(01h)
 19565  000F  3001               	movwf	(??_ISR+0)+0
 19566  0010  00F8               	movf	(??_ISR+0)+0,w
 19567  0011  0878               	addwf	(_g_10msTick),f	;volatile
 19568  0012  07FD               	line	318
 19569                           	
 19570                           i1l4675:	
 19571  0013                     ;main.c: 318:   TMR0 = 178;
 19572                           	movlw	low(0B2h)
 19573  0013  30B2               	movlb 11	; select bank11
 19574  0014  014B               	movwf	(1436)^0580h	;volatile
 19575  0015  009C               	line	319
 19576                           	
 19577                           i1l4677:	
 19578  0016                     ;main.c: 319:   PIR0bits.TMR0IF = 0;
 19579                           	movlb 14	; select bank14
 19580  0016  014E               	bcf	(1804)^0700h,5	;volatile
 19581  0017  128C               	line	320
 19582                           ;main.c: 320:  } else if (PIE0bits.IOCIE == 1 && PIR0bits.IOCIF == 1) {
 19583                           	goto	i1l254
 19584  0018  287A               	
 19585                           i1l242:	
 19586  0019                     	btfss	(1814)^0700h,4	;volatile
 19587  0019  1E16               	goto	u657_21
 19588  001A  281C               	goto	u657_20
 19589  001B  281D               u657_21:
 19590  001C                     	goto	i1l244
 19591  001C  2843               u657_20:
 19592  001D                     	
 19593                           i1l4679:	
 19594  001D                     	btfss	(1804)^0700h,4	;volatile
 19595  001D  1E0C               	goto	u658_21
 19596  001E  2820               	goto	u658_20
 19597  001F  2821               u658_21:
 19598  0020                     	goto	i1l244
 19599  0020  2843               u658_20:
 19600  0021                     	line	322
 19601                           	
 19602                           i1l4681:	
 19603  0021                     ;main.c: 322:   if (IOCAFbits.IOCAF7 == 1) {
 19604                           	movlb 62	; select bank62
 19605  0021  017E               	btfss	(7999)^01F00h,7	;volatile
 19606  0022  1FBF               	goto	u659_21
 19607  0023  2825               	goto	u659_20
 19608  0024  2826               u659_21:
 19609  0025                     	goto	i1l4687
 19610  0025  282C               u659_20:
 19611  0026                     	line	323
 19612                           	
 19613                           i1l4683:	
 19614  0026                     ;main.c: 323:    pushButtonISR();
 19615                           	fcall	_pushButtonISR
 19616  0026  3198  205E  3180   	line	324
 19617                           	
 19618                           i1l4685:	
 19619  0029                     ;main.c: 324:    IOCAFbits.IOCAF7 = 0;
 19620                           	movlb 62	; select bank62
 19621  0029  017E               	bcf	(7999)^01F00h,7	;volatile
 19622  002A  13BF               	goto	i1l4687
 19623  002B  282C               	line	325
 19624                           ;main.c: 325:   }
 19625                           	
 19626                           i1l245:	
 19627  002C                     	line	326
 19628                           	
 19629                           i1l4687:	
 19630  002C                     ;main.c: 326:   if (IOCAFbits.IOCAF4 == 1) {
 19631                           	btfss	(7999)^01F00h,4	;volatile
 19632  002C  1E3F               	goto	u660_21
 19633  002D  282F               	goto	u660_20
 19634  002E  2830               u660_21:
 19635  002F                     	goto	i1l4693
 19636  002F  2836               u660_20:
 19637  0030                     	line	327
 19638                           	
 19639                           i1l4689:	
 19640  0030                     ;main.c: 327:    rotISR();
 19641                           	fcall	_rotISR
 19642  0030  3198  20FF  3180   	line	328
 19643                           	
 19644                           i1l4691:	
 19645  0033                     ;main.c: 328:    IOCAFbits.IOCAF4 = 0;
 19646                           	movlb 62	; select bank62
 19647  0033  017E               	bcf	(7999)^01F00h,4	;volatile
 19648  0034  123F               	goto	i1l4693
 19649  0035  2836               	line	329
 19650                           ;main.c: 329:   }
 19651                           	
 19652                           i1l246:	
 19653  0036                     	line	330
 19654                           	
 19655                           i1l4693:	
 19656  0036                     ;main.c: 330:   if (IOCAFbits.IOCAF5 == 1) {
 19657                           	btfss	(7999)^01F00h,5	;volatile
 19658  0036  1EBF               	goto	u661_21
 19659  0037  2839               	goto	u661_20
 19660  0038  283A               u661_21:
 19661  0039                     	goto	i1l4699
 19662  0039  2840               u661_20:
 19663  003A                     	line	331
 19664                           	
 19665                           i1l4695:	
 19666  003A                     ;main.c: 331:    rotISR();
 19667                           	fcall	_rotISR
 19668  003A  3198  20FF  3180   	line	332
 19669                           	
 19670                           i1l4697:	
 19671  003D                     ;main.c: 332:    IOCAFbits.IOCAF5 = 0;
 19672                           	movlb 62	; select bank62
 19673  003D  017E               	bcf	(7999)^01F00h,5	;volatile
 19674  003E  12BF               	goto	i1l4699
 19675  003F  2840               	line	333
 19676                           ;main.c: 333:   }
 19677                           	
 19678                           i1l247:	
 19679  0040                     	line	334
 19680                           	
 19681                           i1l4699:	
 19682  0040                     ;main.c: 334:   PIR0bits.IOCIF = 0;
 19683                           	movlb 14	; select bank14
 19684  0040  014E               	bcf	(1804)^0700h,4	;volatile
 19685  0041  120C               	line	335
 19686                           ;main.c: 335:  } else if (INTCONbits.PEIE == 1) {
 19687                           	goto	i1l254
 19688  0042  287A               	
 19689                           i1l244:	
 19690  0043                     	btfss	(11),6	;volatile
 19691  0043  1F0B               	goto	u662_21
 19692  0044  2846               	goto	u662_20
 19693  0045  2847               u662_21:
 19694  0046                     	goto	i1l254
 19695  0046  287A               u662_20:
 19696  0047                     	line	336
 19697                           	
 19698                           i1l4701:	
 19699  0047                     ;main.c: 336:   if (PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1) {
 19700                           	btfss	(1818)^0700h,0	;volatile
 19701  0047  1C1A               	goto	u663_21
 19702  0048  284A               	goto	u663_20
 19703  0049  284B               u663_21:
 19704  004A                     	goto	i1l250
 19705  004A  2868               u663_20:
 19706  004B                     	
 19707                           i1l4703:	
 19708  004B                     	btfss	(1808)^0700h,0	;volatile
 19709  004B  1C10               	goto	u664_21
 19710  004C  284E               	goto	u664_20
 19711  004D  284F               u664_21:
 19712  004E                     	goto	i1l250
 19713  004E  2868               u664_20:
 19714  004F                     	line	338
 19715                           	
 19716                           i1l4705:	
 19717  004F                     ;main.c: 338:    if (++g_100msTick == 10) {
 19718                           	movlw	low(01h)
 19719  004F  3001               	movwf	(??_ISR+0)+0
 19720  0050  00F8               	movf	(??_ISR+0)+0,w
 19721  0051  0878               	addwf	(_g_100msTick),f	;volatile
 19722  0052  07FC               		movlw	10
 19723  0053  300A               	xorwf	(((_g_100msTick))),w	;volatile
 19724  0054  067C               	btfss	status,2
 19725  0055  1D03               	goto	u665_21
 19726  0056  2858               	goto	u665_20
 19727  0057  2859               u665_21:
 19728  0058                     	goto	i1l4711
 19729  0058  2860               u665_20:
 19730  0059                     	line	339
 19731                           	
 19732                           i1l4707:	
 19733  0059                     ;main.c: 339:     g_100msTick = 0;
 19734                           	clrf	(_g_100msTick)	;volatile
 19735  0059  01FC               	line	340
 19736                           	
 19737                           i1l4709:	
 19738  005A                     ;main.c: 340:     g_sensorTimer++;
 19739                           	movlw	low(01h)
 19740  005A  3001               	movwf	(??_ISR+0)+0
 19741  005B  00F8               	movf	(??_ISR+0)+0,w
 19742  005C  0878               	movlb 3	; select bank3
 19743  005D  0143               	addwf	(_g_sensorTimer)^0180h,f	;volatile
 19744  005E  07EB               	goto	i1l4711
 19745  005F  2860               	line	341
 19746                           ;main.c: 341:    }
 19747                           	
 19748                           i1l251:	
 19749  0060                     	line	342
 19750                           	
 19751                           i1l4711:	
 19752  0060                     ;main.c: 342:    TMR1 = 53035;
 19753                           	movlw	0CFh
 19754  0060  30CF               	movlb 4	; select bank4
 19755  0061  0144               	movwf	(524+1)^0200h	;volatile
 19756  0062  008D               	movlw	02Bh
 19757  0063  302B               	movwf	(524)^0200h	;volatile
 19758  0064  008C               	line	343
 19759                           	
 19760                           i1l4713:	
 19761  0065                     ;main.c: 343:    PIR4bits.TMR1IF = 0;
 19762                           	movlb 14	; select bank14
 19763  0065  014E               	bcf	(1808)^0700h,0	;volatile
 19764  0066  1010               	line	345
 19765                           ;main.c: 345:   } else if (PIE3bits.RC1IE == 1 && PIR3bits.RC1IF == 1) {
 19766                           	goto	i1l254
 19767  0067  287A               	
 19768                           i1l250:	
 19769  0068                     	btfss	(1817)^0700h,5	;volatile
 19770  0068  1E99               	goto	u666_21
 19771  0069  286B               	goto	u666_20
 19772  006A  286C               u666_21:
 19773  006B                     	goto	i1l254
 19774  006B  287A               u666_20:
 19775  006C                     	
 19776                           i1l4715:	
 19777  006C                     	btfss	(1807)^0700h,5	;volatile
 19778  006C  1E8F               	goto	u667_21
 19779  006D  286F               	goto	u667_20
 19780  006E  2870               u667_21:
 19781  006F                     	goto	i1l254
 19782  006F  287A               u667_20:
 19783  0070                     	line	346
 19784                           	
 19785                           i1l4717:	
 19786  0070                     ;main.c: 346:    uartReceiveISR();
 19787                           	fcall	_uartReceiveISR
 19788  0070  319A  2244  3180   	line	347
 19789                           	
 19790                           i1l4719:	
 19791  0073                     ;main.c: 347:    PIR3bits.RC1IF = 0;
 19792                           	movlb 14	; select bank14
 19793  0073  014E               	bcf	(1807)^0700h,5	;volatile
 19794  0074  128F               	goto	i1l254
 19795  0075  287A               	line	348
 19796                           ;main.c: 348:   }
 19797                           	
 19798                           i1l253:	
 19799  0076                     	goto	i1l254
 19800  0076  287A               	
 19801                           i1l252:	
 19802  0077                     	goto	i1l254
 19803  0077  287A               	line	349
 19804                           ;main.c: 349:  }
 19805                           	
 19806                           i1l249:	
 19807  0078                     	goto	i1l254
 19808  0078  287A               	
 19809                           i1l248:	
 19810  0079                     	goto	i1l254
 19811  0079  287A               	
 19812                           i1l243:	
 19813  007A                     	line	350
 19814                           	
 19815                           i1l254:	
 19816  007A                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
 19817  007A  107E               	retfie
 19818  007B  0009               	opt stack 0
 19819                           GLOBAL	__end_of_ISR
 19820                           	__end_of_ISR:
 19821  007C                     	signat	_ISR,89
 19822                           	global	_uartReceiveISR
 19823                           
 19824 ;; *************** function _uartReceiveISR *****************
 19825 ;; Defined at:
 19826 ;;		line 356 in file "main.c"
 19827 ;; Parameters:    Size  Location     Type
 19828 ;;		None
 19829 ;; Auto vars:     Size  Location     Type
 19830 ;;		None
 19831 ;; Return value:  Size  Location     Type
 19832 ;;                  1    wreg      void 
 19833 ;; Registers used:
 19834 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19835 ;; Tracked objects:
 19836 ;;		On entry : 0/0
 19837 ;;		On exit  : 0/0
 19838 ;;		Unchanged: 0/0
 19839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19842 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19843 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19844 ;;Total ram usage:        1 bytes
 19845 ;; Hardware stack levels used:    1
 19846 ;; Hardware stack levels required when called:    1
 19847 ;; This function calls:
 19848 ;;		_strncpy
 19849 ;; This function is called by:
 19850 ;;		_ISR
 19851 ;; This function uses a non-reentrant model
 19852 ;;
 19853                           psect	text52,local,class=CODE,delta=2,merge=1,group=0
 19854                           	line	356
 19855                           global __ptext52
 19856                           __ptext52:	;psect for function _uartReceiveISR
 19857  1A44                     psect	text52
 19858                           	file	"main.c"
 19859                           	line	356
 19860                           	global	__size_of_uartReceiveISR
 19861                           	__size_of_uartReceiveISR	equ	__end_of_uartReceiveISR-_uartReceiveISR
 19862  0051                     	
 19863                           _uartReceiveISR:	
 19864  1A44                     ;incstack = 0
 19865                           	opt	stack 4
 19866                           ; Regs used in _uartReceiveISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19867                           	line	362
 19868                           	
 19869                           i1l4617:	
 19870  1A44                     ;main.c: 358:  static char buffer[20];;main.c: 359:  static uint8_t rxCount = 0;;main.c:
                                  360:  static uint8_t checksum = 0;;main.c: 362:  if (RC1STAbits.OERR)
 19871                           	movlb 2	; select bank2
 19872  1A44  0142               	btfss	(285)^0100h,1	;volatile
 19873  1A45  1C9D               	goto	u649_21
 19874  1A46  2A48               	goto	u649_20
 19875  1A47  2A49               u649_21:
 19876  1A48                     	goto	i1l4623
 19877  1A48  2A50               u649_20:
 19878  1A49                     	line	365
 19879                           	
 19880                           i1l4619:	
 19881  1A49                     ;main.c: 363:  {;main.c: 365:   RC1STAbits.CREN = 0;
 19882                           	bcf	(285)^0100h,4	;volatile
 19883  1A49  121D               	line	366
 19884                           ;main.c: 366:   RC1STAbits.CREN = 1;
 19885                           	bsf	(285)^0100h,4	;volatile
 19886  1A4A  161D               	line	367
 19887                           	
 19888                           i1l4621:	
 19889  1A4B                     ;main.c: 367:   g_rxOErrCount++;
 19890                           	movlw	low(01h)
 19891  1A4B  3001               	movwf	(??_uartReceiveISR+0)+0
 19892  1A4C  00F6               	movf	(??_uartReceiveISR+0)+0,w
 19893  1A4D  0876               	addwf	(_g_rxOErrCount)^0100h,f	;volatile
 19894  1A4E  07EC               	goto	i1l4623
 19895  1A4F  2A50               	line	368
 19896                           ;main.c: 368:  }
 19897                           	
 19898                           i1l263:	
 19899  1A50                     	line	369
 19900                           	
 19901                           i1l4623:	
 19902  1A50                     ;main.c: 369:  if (RC1STAbits.FERR)
 19903                           	btfss	(285)^0100h,2	;volatile
 19904  1A50  1D1D               	goto	u650_21
 19905  1A51  2A53               	goto	u650_20
 19906  1A52  2A54               u650_21:
 19907  1A53                     	goto	i1l4629
 19908  1A53  2A5B               u650_20:
 19909  1A54                     	line	371
 19910                           	
 19911                           i1l4625:	
 19912  1A54                     ;main.c: 370:  {;main.c: 371:   RC1STAbits.SPEN = 0;
 19913                           	bcf	(285)^0100h,7	;volatile
 19914  1A54  139D               	line	372
 19915                           ;main.c: 372:   RC1STAbits.SPEN = 1;
 19916                           	bsf	(285)^0100h,7	;volatile
 19917  1A55  179D               	line	373
 19918                           	
 19919                           i1l4627:	
 19920  1A56                     ;main.c: 373:   g_rxFErrCount++;
 19921                           	movlw	low(01h)
 19922  1A56  3001               	movwf	(??_uartReceiveISR+0)+0
 19923  1A57  00F6               	movf	(??_uartReceiveISR+0)+0,w
 19924  1A58  0876               	addwf	(_g_rxFErrCount)^0100h,f	;volatile
 19925  1A59  07ED               	goto	i1l4629
 19926  1A5A  2A5B               	line	374
 19927                           ;main.c: 374:  }
 19928                           	
 19929                           i1l264:	
 19930  1A5B                     	line	376
 19931                           	
 19932                           i1l4629:	
 19933  1A5B                     ;main.c: 376:  if (rxCount < sizeof(g_dataPacket)) {
 19934                           	movlw	low(0Fh)
 19935  1A5B  300F               	subwf	(uartReceiveISR@rxCount),w
 19936  1A5C  0279               	skipnc
 19937  1A5D  1803               	goto	u651_21
 19938  1A5E  2A60               	goto	u651_20
 19939  1A5F  2A61               u651_21:
 19940  1A60                     	goto	i1l4635
 19941  1A60  2A78               u651_20:
 19942  1A61                     	line	377
 19943                           	
 19944                           i1l4631:	
 19945  1A61                     ;main.c: 377:   buffer[rxCount] = RC1REG;
 19946                           	movf	(281)^0100h,w	;volatile
 19947  1A61  0819               	movwf	(??_uartReceiveISR+0)+0
 19948  1A62  00F6               	movf	(uartReceiveISR@rxCount),w
 19949  1A63  0879               	addlw	low(uartReceiveISR@buffer|((0x2)<<8))&0ffh
 19950  1A64  3E30               	movwf	fsr1l
 19951  1A65  0086               	movlw 2	; select bank4/5
 19952  1A66  3002               	movwf fsr1h	
 19953  1A67  0087               	
 19954                           	movf	(??_uartReceiveISR+0)+0,w
 19955  1A68  0876               	movwf	indf1
 19956  1A69  0081               	line	378
 19957                           ;main.c: 378:   checksum ^= buffer[rxCount];
 19958                           	movf	(uartReceiveISR@rxCount),w
 19959  1A6A  0879               	addlw	low(uartReceiveISR@buffer|((0x2)<<8))&0ffh
 19960  1A6B  3E30               	movwf	fsr1l
 19961  1A6C  0086               	movlw 2	; select bank4/5
 19962  1A6D  3002               	movwf fsr1h	
 19963  1A6E  0087               	
 19964                           	movf	indf1,w
 19965  1A6F  0801               	movwf	(??_uartReceiveISR+0)+0
 19966  1A70  00F6               	movf	(??_uartReceiveISR+0)+0,w
 19967  1A71  0876               	xorwf	(uartReceiveISR@checksum)^0100h,f
 19968  1A72  06EA               	line	379
 19969                           	
 19970                           i1l4633:	
 19971  1A73                     ;main.c: 379:   rxCount++;
 19972                           	movlw	low(01h)
 19973  1A73  3001               	movwf	(??_uartReceiveISR+0)+0
 19974  1A74  00F6               	movf	(??_uartReceiveISR+0)+0,w
 19975  1A75  0876               	addwf	(uartReceiveISR@rxCount),f
 19976  1A76  07F9               	line	380
 19977                           ;main.c: 380:  } else {
 19978                           	goto	i1l268
 19979  1A77  2A94               	
 19980                           i1l265:	
 19981  1A78                     	line	381
 19982                           	
 19983                           i1l4635:	
 19984  1A78                     ;main.c: 381:   if (RC1REG == checksum) {
 19985                           	movf	(281)^0100h,w	;volatile
 19986  1A78  0819               	xorwf	(uartReceiveISR@checksum)^0100h,w
 19987  1A79  066A               	skipz
 19988  1A7A  1D03               	goto	u652_21
 19989  1A7B  2A7D               	goto	u652_20
 19990  1A7C  2A7E               u652_21:
 19991  1A7D                     	goto	i1l4641
 19992  1A7D  2A90               u652_20:
 19993  1A7E                     	line	382
 19994                           	
 19995                           i1l4637:	
 19996  1A7E                     ;main.c: 382:    g_dataReady = 1;
 19997                           	movlw	low(01h)
 19998  1A7E  3001               	movwf	(??_uartReceiveISR+0)+0
 19999  1A7F  00F6               	movf	(??_uartReceiveISR+0)+0,w
 20000  1A80  0876               	movlb 3	; select bank3
 20001  1A81  0143               	movwf	(_g_dataReady)^0180h	;volatile
 20002  1A82  00EA               	line	383
 20003                           	
 20004                           i1l4639:	
 20005  1A83                     ;main.c: 383:    strncpy((char *) &g_dataPacket, buffer, sizeof(g_dataPacket));
 20006                           	movlw	(low(uartReceiveISR@buffer|((0x2)<<8)))&0ffh
 20007  1A83  3030               	movwf	(??_uartReceiveISR+0)+0
 20008  1A84  00F6               	movf	(??_uartReceiveISR+0)+0,w
 20009  1A85  0876               	movwf	(strncpy@s)
 20010  1A86  00F0               	movlw	0Fh
 20011  1A87  300F               	movwf	(strncpy@n)
 20012  1A88  00F1               	movlw	0
 20013  1A89  3000               	movwf	((strncpy@n))+1
 20014  1A8A  00F2               	movlw	(low(_g_dataPacket|((0x2)<<8)))&0ffh
 20015  1A8B  3044               	fcall	_strncpy
 20016  1A8C  3199  213C  319A   	goto	i1l4641
 20017  1A8F  2A90               	line	384
 20018                           ;main.c: 384:   }
 20019                           	
 20020                           i1l267:	
 20021  1A90                     	line	385
 20022                           	
 20023                           i1l4641:	
 20024  1A90                     ;main.c: 385:   checksum = 0;
 20025                           	movlb 2	; select bank2
 20026  1A90  0142               	clrf	(uartReceiveISR@checksum)^0100h
 20027  1A91  01EA               	line	386
 20028                           	
 20029                           i1l4643:	
 20030  1A92                     ;main.c: 386:   rxCount = 0;
 20031                           	clrf	(uartReceiveISR@rxCount)
 20032  1A92  01F9               	goto	i1l268
 20033  1A93  2A94               	line	387
 20034                           ;main.c: 387:  }
 20035                           	
 20036                           i1l266:	
 20037  1A94                     	line	388
 20038                           	
 20039                           i1l268:	
 20040  1A94                     	return
 20041  1A94  0008               	opt stack 0
 20042                           GLOBAL	__end_of_uartReceiveISR
 20043                           	__end_of_uartReceiveISR:
 20044  1A95                     	signat	_uartReceiveISR,89
 20045                           	global	_strncpy
 20046                           
 20047 ;; *************** function _strncpy *****************
 20048 ;; Defined at:
 20049 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncpy.c"
 20050 ;; Parameters:    Size  Location     Type
 20051 ;;  d               1    wreg     PTR unsigned char 
 20052 ;;		 -> g_dataPacket(15), 
 20053 ;;  s               1    0[COMMON] PTR const unsigned char 
 20054 ;;		 -> uartReceiveISR@buffer(20), 
 20055 ;;  n               2    1[COMMON] unsigned int 
 20056 ;; Auto vars:     Size  Location     Type
 20057 ;;  d               1    4[COMMON] PTR unsigned char 
 20058 ;;		 -> g_dataPacket(15), 
 20059 ;;  cp              1    5[COMMON] PTR unsigned char 
 20060 ;;		 -> g_dataPacket(15), 
 20061 ;; Return value:  Size  Location     Type
 20062 ;;                  1    wreg      PTR unsigned char 
 20063 ;; Registers used:
 20064 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 20065 ;; Tracked objects:
 20066 ;;		On entry : 0/0
 20067 ;;		On exit  : 0/0
 20068 ;;		Unchanged: 0/0
 20069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20070 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20071 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20072 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20073 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20074 ;;Total ram usage:        6 bytes
 20075 ;; Hardware stack levels used:    1
 20076 ;; This function calls:
 20077 ;;		Nothing
 20078 ;; This function is called by:
 20079 ;;		_uartReceiveISR
 20080 ;; This function uses a non-reentrant model
 20081 ;;
 20082                           psect	text53,local,class=CODE,delta=2,merge=1,group=2
 20083                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncpy.c"
 20084                           	line	7
 20085                           global __ptext53
 20086                           __ptext53:	;psect for function _strncpy
 20087  193C                     psect	text53
 20088                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncpy.c"
 20089                           	line	7
 20090                           	global	__size_of_strncpy
 20091                           	__size_of_strncpy	equ	__end_of_strncpy-_strncpy
 20092  003E                     	
 20093                           _strncpy:	
 20094  193C                     ;incstack = 0
 20095                           	opt	stack 4
 20096                           ; Regs used in _strncpy: [wreg-fsr1h+status,2+status,0]
 20097                           ;strncpy@d stored from wreg
 20098                           	movwf	(strncpy@d)
 20099  193C  00F4               	line	11
 20100                           	
 20101                           i1l4383:	
 20102  193D                     	movf	(strncpy@d),w
 20103  193D  0874               	movwf	(??_strncpy+0)+0
 20104  193E  00F3               	movf	(??_strncpy+0)+0,w
 20105  193F  0873               	movwf	(strncpy@cp)
 20106  1940  00F5               	line	12
 20107                           	goto	i1l4391
 20108  1941  295A               	
 20109                           i1l1086:	
 20110  1942                     	line	13
 20111                           	
 20112                           i1l4385:	
 20113  1942                     	movlw	01h
 20114  1942  3001               	subwf	(strncpy@n),f
 20115  1943  02F1               	movlw	0
 20116  1944  3000               	subwfb	(strncpy@n+1),f
 20117  1945  3BF2               	line	14
 20118                           	
 20119                           i1l4387:	
 20120  1946                     	movf	(strncpy@cp),w
 20121  1946  0875               	movwf	fsr1l
 20122  1947  0086               	movlw 2	; select bank4/5
 20123  1948  3002               	movwf fsr1h	
 20124  1949  0087               	
 20125                           	incf	(strncpy@cp),f
 20126  194A  0AF5               	movf	(strncpy@s),w
 20127  194B  0870               	movwf	fsr0l
 20128  194C  0084               	movlw 2	; select bank4/5
 20129  194D  3002               	movwf fsr0h	
 20130  194E  0085               	
 20131                           	incf	(strncpy@s),f
 20132  194F  0AF0               	movf	indf0,w
 20133  1950  0800               	movwi	[0]fsr1
 20134  1951  3FC0               	movf	wreg
 20135  1952  0889               	btfss	status,2
 20136  1953  1D03               	goto	u617_21
 20137  1954  2956               	goto	u617_20
 20138  1955  2957               u617_21:
 20139  1956                     	goto	i1l4391
 20140  1956  295A               u617_20:
 20141  1957                     	goto	i1l4397
 20142  1957  296C               	line	15
 20143                           	
 20144                           i1l4389:	
 20145  1958                     	goto	i1l4397
 20146  1958  296C               	
 20147                           i1l1087:	
 20148  1959                     	goto	i1l4391
 20149  1959  295A               	line	16
 20150                           	
 20151                           i1l1085:	
 20152  195A                     	line	12
 20153                           	
 20154                           i1l4391:	
 20155  195A                     	movf	((strncpy@n)),w
 20156  195A  0871               iorwf	((strncpy@n+1)),w
 20157  195B  0472               	btfss	status,2
 20158  195C  1D03               	goto	u618_21
 20159  195D  295F               	goto	u618_20
 20160  195E  2960               u618_21:
 20161  195F                     	goto	i1l4385
 20162  195F  2942               u618_20:
 20163  1960                     	goto	i1l4397
 20164  1960  296C               	
 20165                           i1l1088:	
 20166  1961                     	line	17
 20167                           	goto	i1l4397
 20168  1961  296C               	
 20169                           i1l1090:	
 20170  1962                     	line	18
 20171                           	
 20172                           i1l4393:	
 20173  1962                     	movf	(strncpy@cp),w
 20174  1962  0875               	movwf	fsr1l
 20175  1963  0086               	movlw 2	; select bank4/5
 20176  1964  3002               	movwf fsr1h	
 20177  1965  0087               	
 20178                           	clrf	indf1
 20179  1966  0181               	
 20180                           i1l4395:	
 20181  1967                     	movlw	low(01h)
 20182  1967  3001               	movwf	(??_strncpy+0)+0
 20183  1968  00F3               	movf	(??_strncpy+0)+0,w
 20184  1969  0873               	addwf	(strncpy@cp),f
 20185  196A  07F5               	goto	i1l4397
 20186  196B  296C               	
 20187                           i1l1089:	
 20188  196C                     	line	17
 20189                           	
 20190                           i1l4397:	
 20191  196C                     	movlw	01h
 20192  196C  3001               	subwf	(strncpy@n),f
 20193  196D  02F1               	movlw	0
 20194  196E  3000               	subwfb	(strncpy@n+1),f
 20195  196F  3BF2               		incf	(((strncpy@n))),w
 20196  1970  0A71               	skipz
 20197  1971  1D03               	goto	u619_21
 20198  1972  2977               	incf	(((strncpy@n+1))),w
 20199  1973  0A72               	btfss	status,2
 20200  1974  1D03               	goto	u619_21
 20201  1975  2977               	goto	u619_20
 20202  1976  2978               u619_21:
 20203  1977                     	goto	i1l4393
 20204  1977  2962               u619_20:
 20205  1978                     	goto	i1l1092
 20206  1978  2979               	
 20207                           i1l1091:	
 20208  1979                     	line	23
 20209                           ;	Return value of _strncpy is never used
 20210                           	
 20211                           i1l1092:	
 20212  1979                     	return
 20213  1979  0008               	opt stack 0
 20214                           GLOBAL	__end_of_strncpy
 20215                           	__end_of_strncpy:
 20216  197A                     	signat	_strncpy,12409
 20217                           	global	_rotISR
 20218                           
 20219 ;; *************** function _rotISR *****************
 20220 ;; Defined at:
 20221 ;;		line 390 in file "main.c"
 20222 ;; Parameters:    Size  Location     Type
 20223 ;;		None
 20224 ;; Auto vars:     Size  Location     Type
 20225 ;;  input           1    7[COMMON] unsigned char 
 20226 ;; Return value:  Size  Location     Type
 20227 ;;                  1    wreg      void 
 20228 ;; Registers used:
 20229 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 20230 ;; Tracked objects:
 20231 ;;		On entry : 0/0
 20232 ;;		On exit  : 0/0
 20233 ;;		Unchanged: 0/0
 20234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20236 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20237 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20238 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20239 ;;Total ram usage:        8 bytes
 20240 ;; Hardware stack levels used:    1
 20241 ;; This function calls:
 20242 ;;		Nothing
 20243 ;; This function is called by:
 20244 ;;		_ISR
 20245 ;; This function uses a non-reentrant model
 20246 ;;
 20247                           psect	text54,local,class=CODE,delta=2,merge=1,group=0
 20248                           	file	"main.c"
 20249                           	line	390
 20250                           global __ptext54
 20251                           __ptext54:	;psect for function _rotISR
 20252  18FF                     psect	text54
 20253                           	file	"main.c"
 20254                           	line	390
 20255                           	global	__size_of_rotISR
 20256                           	__size_of_rotISR	equ	__end_of_rotISR-_rotISR
 20257  003D                     	
 20258                           _rotISR:	
 20259  18FF                     ;incstack = 0
 20260                           	opt	stack 5
 20261                           ; Regs used in _rotISR: [wreg-fsr0h+status,2+status,0+pclath]
 20262                           	line	394
 20263                           	
 20264                           i1l4603:	
 20265  18FF                     ;main.c: 392:  uint8_t input;;main.c: 394:  input = (PORTAbits.RA5 << 1) | PORTAbits.RA4
                                 ;
 20266                           	movlb 0	; select bank0
 20267  18FF  0140               	swapf	(12),w	;volatile
 20268  1900  0E0C               	andlw	(1<<1)-1
 20269  1901  3901               	movwf	(??_rotISR+0)+0
 20270  1902  00F0               	swapf	(12),w	;volatile
 20271  1903  0E0C               	rrf	wreg,f
 20272  1904  0C89               	andlw	(1<<1)-1
 20273  1905  3901               	addwf	wreg,w
 20274  1906  0709               	iorwf	(??_rotISR+0)+0,w
 20275  1907  0470               	movwf	(??_rotISR+1)+0
 20276  1908  00F1               	movf	(??_rotISR+1)+0,w
 20277  1909  0871               	movwf	(rotISR@input)
 20278  190A  00F7               	line	397
 20279                           	
 20280                           i1l4605:	
 20281  190B                     ;main.c: 397:  g_curRotState = transition_table[g_curRotState & 0b00000111][input];
 20282                           	movf	(_g_curRotState),w	;volatile
 20283  190B  087B               	andlw	07h
 20284  190C  3907               	movwf	(??_rotISR+0)+0
 20285  190D  00F0               	clrf	(??_rotISR+0)+0+1
 20286  190E  01F1               	lslf	(??_rotISR+0)+0,f
 20287  190F  35F0               	rlf	(??_rotISR+0)+1,f
 20288  1910  0DF1               	lslf	(??_rotISR+0)+0,f
 20289  1911  35F0               	rlf	(??_rotISR+0)+1,f
 20290  1912  0DF1               	movlw	low(((_transition_table)|8000h))
 20291  1913  3000               	movwf	(??_rotISR+2)+0
 20292  1914  00F2               	movlw	high(((_transition_table)|8000h))
 20293  1915  30A0               	movwf	(??_rotISR+2)+0+1
 20294  1916  00F3               	movf	0+(??_rotISR+0)+0,w
 20295  1917  0870               	addwf	0+(??_rotISR+2)+0,w
 20296  1918  0772               	movwf	(??_rotISR+4)+0
 20297  1919  00F4               	movf	1+(??_rotISR+0)+0,w
 20298  191A  0871               	addwfc	1+(??_rotISR+2)+0,w
 20299  191B  3D73               	movwf	1+(??_rotISR+4)+0
 20300  191C  00F5               	movf	(rotISR@input),w
 20301  191D  0877               	addwf	(??_rotISR+4)+0,w
 20302  191E  0774               	movwf	fsr0l
 20303  191F  0084               	movf	(??_rotISR+4)+1,w
 20304  1920  0875               	skipnc
 20305  1921  1803               	incf	(??_rotISR+4)+1,w
 20306  1922  0A75               	movwf	fsr0h
 20307  1923  0085               
 20308                           	movf	indf0,w ;code access
 20309  1924  0800               	movwf	(??_rotISR+6)+0
 20310  1925  00F6               	movf	(??_rotISR+6)+0,w
 20311  1926  0876               	movwf	(_g_curRotState)	;volatile
 20312  1927  00FB               	line	400
 20313                           	
 20314                           i1l4607:	
 20315  1928                     ;main.c: 400:  if (g_curRotState & CW_FLAG) g_rotDir = ROT_CW;
 20316                           	btfss	(_g_curRotState),(7)&7	;volatile
 20317  1928  1FFB               	goto	u647_21
 20318  1929  292B               	goto	u647_20
 20319  192A  292C               u647_21:
 20320  192B                     	goto	i1l4611
 20321  192B  2931               u647_20:
 20322  192C                     	
 20323                           i1l4609:	
 20324  192C                     	movlw	low(01h)
 20325  192C  3001               	movwf	(??_rotISR+0)+0
 20326  192D  00F0               	movf	(??_rotISR+0)+0,w
 20327  192E  0870               	movwf	(_g_rotDir)	;volatile
 20328  192F  00FA               	goto	i1l4611
 20329  1930  2931               	
 20330                           i1l271:	
 20331  1931                     	line	401
 20332                           	
 20333                           i1l4611:	
 20334  1931                     ;main.c: 401:  if (g_curRotState & CCW_FLAG) g_rotDir = ROT_CCW;
 20335                           	btfss	(_g_curRotState),(6)&7	;volatile
 20336  1931  1F7B               	goto	u648_21
 20337  1932  2934               	goto	u648_20
 20338  1933  2935               u648_21:
 20339  1934                     	goto	i1l4615
 20340  1934  293A               u648_20:
 20341  1935                     	
 20342                           i1l4613:	
 20343  1935                     	movlw	low(02h)
 20344  1935  3002               	movwf	(??_rotISR+0)+0
 20345  1936  00F0               	movf	(??_rotISR+0)+0,w
 20346  1937  0870               	movwf	(_g_rotDir)	;volatile
 20347  1938  00FA               	goto	i1l4615
 20348  1939  293A               	
 20349                           i1l272:	
 20350  193A                     	line	402
 20351                           	
 20352                           i1l4615:	
 20353  193A                     ;main.c: 402:  __nop();
 20354                           	opt	asmopt_push
 20355                           	opt	asmopt_off
 20356                           	nop
 20357  193A  0000               	opt	asmopt_pop
 20358                           	line	403
 20359                           	
 20360                           i1l273:	
 20361  193B                     	return
 20362  193B  0008               	opt stack 0
 20363                           GLOBAL	__end_of_rotISR
 20364                           	__end_of_rotISR:
 20365  193C                     	signat	_rotISR,89
 20366                           	global	_pushButtonISR
 20367                           
 20368 ;; *************** function _pushButtonISR *****************
 20369 ;; Defined at:
 20370 ;;		line 405 in file "main.c"
 20371 ;; Parameters:    Size  Location     Type
 20372 ;;		None
 20373 ;; Auto vars:     Size  Location     Type
 20374 ;;		None
 20375 ;; Return value:  Size  Location     Type
 20376 ;;                  1    wreg      void 
 20377 ;; Registers used:
 20378 ;;		wreg, status,2
 20379 ;; Tracked objects:
 20380 ;;		On entry : 0/0
 20381 ;;		On exit  : 0/0
 20382 ;;		Unchanged: 0/0
 20383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20386 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20387 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20388 ;;Total ram usage:        1 bytes
 20389 ;; Hardware stack levels used:    1
 20390 ;; This function calls:
 20391 ;;		Nothing
 20392 ;; This function is called by:
 20393 ;;		_ISR
 20394 ;; This function uses a non-reentrant model
 20395 ;;
 20396                           psect	text55,local,class=CODE,delta=2,merge=1,group=0
 20397                           	line	405
 20398                           global __ptext55
 20399                           __ptext55:	;psect for function _pushButtonISR
 20400  185E                     psect	text55
 20401                           	file	"main.c"
 20402                           	line	405
 20403                           	global	__size_of_pushButtonISR
 20404                           	__size_of_pushButtonISR	equ	__end_of_pushButtonISR-_pushButtonISR
 20405  0034                     	
 20406                           _pushButtonISR:	
 20407  185E                     ;incstack = 0
 20408                           	opt	stack 5
 20409                           ; Regs used in _pushButtonISR: [wreg+status,2]
 20410                           	line	408
 20411                           	
 20412                           i1l4585:	
 20413  185E                     ;main.c: 408:  if (!PORTAbits.RA7) {
 20414                           	movlb 0	; select bank0
 20415  185E  0140               	btfsc	(12),7	;volatile
 20416  185F  1B8C               	goto	u642_21
 20417  1860  2862               	goto	u642_20
 20418  1861  2863               u642_21:
 20419  1862                     	goto	i1l4589
 20420  1862  2865               u642_20:
 20421  1863                     	line	409
 20422                           	
 20423                           i1l4587:	
 20424  1863                     ;main.c: 409:   g_10msTick = 0;
 20425                           	clrf	(_g_10msTick)	;volatile
 20426  1863  01FD               	line	410
 20427                           ;main.c: 410:  } else {
 20428                           	goto	i1l282
 20429  1864  2891               	
 20430                           i1l276:	
 20431  1865                     	line	411
 20432                           	
 20433                           i1l4589:	
 20434  1865                     ;main.c: 411:   if ((g_10msTick > 5) & (g_10msTick <= 50))
 20435                           	movlw	low(06h)
 20436  1865  3006               	subwf	(_g_10msTick),w	;volatile
 20437  1866  027D               	skipc
 20438  1867  1C03               	goto	u643_21
 20439  1868  286A               	goto	u643_20
 20440  1869  286B               u643_21:
 20441  186A                     	goto	i1l4595
 20442  186A  2877               u643_20:
 20443  186B                     	
 20444                           i1l4591:	
 20445  186B                     	movlw	low(033h)
 20446  186B  3033               	subwf	(_g_10msTick),w	;volatile
 20447  186C  027D               	skipnc
 20448  186D  1803               	goto	u644_21
 20449  186E  2870               	goto	u644_20
 20450  186F  2871               u644_21:
 20451  1870                     	goto	i1l4595
 20452  1870  2877               u644_20:
 20453  1871                     	line	413
 20454                           	
 20455                           i1l4593:	
 20456  1871                     ;main.c: 413:    g_pbState = PB_SHORT;
 20457                           	movlw	low(01h)
 20458  1871  3001               	movwf	(??_pushButtonISR+0)+0
 20459  1872  00F0               	movf	(??_pushButtonISR+0)+0,w
 20460  1873  0870               	movlb 2	; select bank2
 20461  1874  0142               	movwf	(_g_pbState)^0100h	;volatile
 20462  1875  00EB               	goto	i1l282
 20463  1876  2891               	line	414
 20464                           ;main.c: 414:   else if ((g_10msTick > 50) & (g_10msTick <= 150))
 20465                           	
 20466                           i1l278:	
 20467  1877                     	
 20468                           i1l4595:	
 20469  1877                     	movlw	low(033h)
 20470  1877  3033               	subwf	(_g_10msTick),w	;volatile
 20471  1878  027D               	skipc
 20472  1879  1C03               	goto	u645_21
 20473  187A  287C               	goto	u645_20
 20474  187B  287D               u645_21:
 20475  187C                     	goto	i1l4601
 20476  187C  2889               u645_20:
 20477  187D                     	
 20478                           i1l4597:	
 20479  187D                     	movlw	low(097h)
 20480  187D  3097               	subwf	(_g_10msTick),w	;volatile
 20481  187E  027D               	skipnc
 20482  187F  1803               	goto	u646_21
 20483  1880  2882               	goto	u646_20
 20484  1881  2883               u646_21:
 20485  1882                     	goto	i1l4601
 20486  1882  2889               u646_20:
 20487  1883                     	line	416
 20488                           	
 20489                           i1l4599:	
 20490  1883                     ;main.c: 416:    g_pbState = PB_LONG;
 20491                           	movlw	low(02h)
 20492  1883  3002               	movwf	(??_pushButtonISR+0)+0
 20493  1884  00F0               	movf	(??_pushButtonISR+0)+0,w
 20494  1885  0870               	movlb 2	; select bank2
 20495  1886  0142               	movwf	(_g_pbState)^0100h	;volatile
 20496  1887  00EB               	goto	i1l282
 20497  1888  2891               	line	417
 20498                           ;main.c: 417:   else
 20499                           	
 20500                           i1l280:	
 20501  1889                     	line	419
 20502                           	
 20503                           i1l4601:	
 20504  1889                     ;main.c: 419:    g_pbState = PB_ABORT;
 20505                           	movlw	low(03h)
 20506  1889  3003               	movwf	(??_pushButtonISR+0)+0
 20507  188A  00F0               	movf	(??_pushButtonISR+0)+0,w
 20508  188B  0870               	movlb 2	; select bank2
 20509  188C  0142               	movwf	(_g_pbState)^0100h	;volatile
 20510  188D  00EB               	goto	i1l282
 20511  188E  2891               	
 20512                           i1l281:	
 20513  188F                     	goto	i1l282
 20514  188F  2891               	
 20515                           i1l279:	
 20516  1890                     	goto	i1l282
 20517  1890  2891               	line	420
 20518                           ;main.c: 420:  }
 20519                           	
 20520                           i1l277:	
 20521  1891                     	line	421
 20522                           	
 20523                           i1l282:	
 20524  1891                     	return
 20525  1891  0008               	opt stack 0
 20526                           GLOBAL	__end_of_pushButtonISR
 20527                           	__end_of_pushButtonISR:
 20528  1892                     	signat	_pushButtonISR,89
 20529                           global	___latbits
 20530                           ___latbits	equ	3
 20531  0003                     	global	btemp
 20532                           	btemp set 07Eh
 20533  007E                     
 20534                           	DABS	1,126,2	;btemp
 20535                           	global	int$flags
 20536                           	int$flags	set btemp
 20537  007E                     	global	wtemp0
 20538                           	wtemp0 set btemp+0
 20539  007E                     	end


Data Sizes:
    Strings     167
    Constant    28
    Data        8
    BSS         172
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     58      78
    BANK3            80     62      78
    BANK4            80      0      59
    BANK5            80      0      80
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    strncpy@s	PTR const unsigned char  size(1) Largest target is 20
		 -> uartReceiveISR@buffer(BANK4[20]), 

    strncpy@d	PTR unsigned char  size(1) Largest target is 15
		 -> g_dataPacket(BANK4[15]), 

    strncpy@cp	PTR unsigned char  size(1) Largest target is 15
		 -> g_dataPacket(BANK4[15]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK2[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK2[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK5[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK5[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_2(CODE[50]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 61
		 -> showMenu@s(BANK3[61]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK2[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 61
		 -> showMenu@s(BANK3[61]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    S1243_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 61
		 -> showMenu@s(BANK3[61]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 61
		 -> showMenu@s(BANK3[61]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_2(CODE[50]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_2(CODE[50]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 50
		 -> STR_2(CODE[50]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK2[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    OLED_print_xy@s	PTR unsigned char  size(2) Largest target is 61
		 -> STR_3(CODE[49]), showMenu@s(BANK3[61]), STR_1(CODE[49]), 

    sp__strncpy	PTR unsigned char  size(1) Largest target is 15
		 -> g_dataPacket(BANK4[15]), 

    menuInput@menu	PTR unsigned char  size(1) Largest target is 1
		 -> showMenu@menu(BANK3[1]), 

    menuInput@page	PTR unsigned char  size(1) Largest target is 1
		 -> showMenu@page(BANK3[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_rotISR
    _uartReceiveISR->_strncpy

Critical Paths under _main in BANK0

    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->___wmul
    _atoi->_isdigit
    _OLED_scrollDisplayRight->_OLED_command
    _OLED_scrollDisplayLeft->_OLED_command
    _OLED_returnHome->_OLED_command
    _OLED_print_xy->_OLED_command
    _OLED_print_xy->_OLED_write
    _OLED_write->_OLED_send
    _readAnalogValues->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _handleSensorData->___xxtofl
    _OLED_init->_OLED_command
    _OLED_command->_OLED_send
    _OLED_send->_OLED_write4bits

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_showMenu
    _showMenu->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_showMenu

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ISR in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0   40020
                                             57 BANK2      1     1      0
                       _OLED_command
                          _OLED_init
                    _OLED_returnHome
                   _handleSensorData
                         _initialize
                   _readAnalogValues
                           _showMenu
                       _uartSendByte
 ---------------------------------------------------------------------------------
 (1) _uartSendByte                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _showMenu                                            64    64      0   31867
                                             55 BANK2      2     2      0
                                              0 BANK3     62    62      0
                      _OLED_print_xy
                              _getPB
                          _menuInput
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             32    10     22   28168
                                             23 BANK2     32    10     22
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   27852
                                             15 BANK2      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           39    37      2   27515
                                             72 BANK1      8     6      2
                                              0 BANK2     15    15      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             10     6      4     410
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              66    61      5   21963
                                             76 BANK0      4     4      0
                                             10 BANK1     62    57      5
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 BANK0      8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               8     6      2     641
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2907
                                             16 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               8     6      2     123
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1149
                                              8 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     834
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             66 BANK0     10     6      4
                                              0 BANK1     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       16    12      4     287
                                              0 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             11     7      4     381
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2637
                                             40 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             24    16      8    2288
                                              0 BANK0     24    16      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              16     8      8     790
                                             40 BANK0     16     8      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     394
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     448
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     452
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1237
                                              6 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              5     3      2     207
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _menuInput                                           11     6      5    2352
                                              7 BANK0     11     6      5
                    _OLED_returnHome
             _OLED_scrollDisplayLeft
            _OLED_scrollDisplayRight
                              _getPB
                          _getRotDir
 ---------------------------------------------------------------------------------
 (3) _getRotDir                                            2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _getPB                                                2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _OLED_scrollDisplayRight                              0     0      0     352
                       _OLED_command
 ---------------------------------------------------------------------------------
 (3) _OLED_scrollDisplayLeft                               0     0      0     352
                       _OLED_command
 ---------------------------------------------------------------------------------
 (3) _OLED_returnHome                                      0     0      0     352
                       _OLED_command
 ---------------------------------------------------------------------------------
 (2) _OLED_print_xy                                        9     6      3    1273
                                              7 BANK0      9     6      3
                       _OLED_command
                         _OLED_write
 ---------------------------------------------------------------------------------
 (3) _OLED_write                                           1     1      0     352
                                              6 BANK0      1     1      0
                          _OLED_send
                  _OLED_waitForReady
 ---------------------------------------------------------------------------------
 (1) _readAnalogValues                                     6     6      0    6437
                                             66 BANK0      6     6      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             26    18      8    3633
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             26    18      8    2185
                                             40 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _handleSensorData                                     4     4      0     550
                                             14 BANK0      4     4      0
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _OLED_init                                            1     1      0     440
                                              7 BANK0      1     1      0
                       _OLED_command
                    _OLED_write4bits
 ---------------------------------------------------------------------------------
 (4) _OLED_command                                         1     1      0     352
                                              6 BANK0      1     1      0
                          _OLED_send
                  _OLED_waitForReady
 ---------------------------------------------------------------------------------
 (5) _OLED_waitForReady                                    1     1      0      24
                                              0 BANK0      1     1      0
                   _OLED_pulseEnable
 ---------------------------------------------------------------------------------
 (5) _OLED_send                                            3     2      1     306
                                              3 BANK0      3     2      1
                    _OLED_write4bits
 ---------------------------------------------------------------------------------
 (6) _OLED_write4bits                                      3     3      0      88
                                              0 BANK0      3     3      0
                   _OLED_pulseEnable
 ---------------------------------------------------------------------------------
 (6) _OLED_pulseEnable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 1     1      0     349
                                              8 COMMON     1     1      0
                      _pushButtonISR
                             _rotISR
                     _uartReceiveISR
 ---------------------------------------------------------------------------------
 (11) _uartReceiveISR                                      1     1      0     326
                                              6 COMMON     1     1      0
                            _strncpy
 ---------------------------------------------------------------------------------
 (12) _strncpy                                             6     3      3     326
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (11) _rotISR                                              8     8      0      23
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (11) _pushButtonISR                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OLED_command
     _OLED_send
       _OLED_write4bits
         _OLED_pulseEnable
     _OLED_waitForReady
       _OLED_pulseEnable
   _OLED_init
     _OLED_command
       _OLED_send
         _OLED_write4bits
           _OLED_pulseEnable
       _OLED_waitForReady
         _OLED_pulseEnable
     _OLED_write4bits
       _OLED_pulseEnable
   _OLED_returnHome
     _OLED_command
       _OLED_send
         _OLED_write4bits
           _OLED_pulseEnable
       _OLED_waitForReady
         _OLED_pulseEnable
   _handleSensorData
     ___xxtofl
   _initialize
   _readAnalogValues
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl
   _showMenu
     _OLED_print_xy
       _OLED_command
         _OLED_send
           _OLED_write4bits
             _OLED_pulseEnable
         _OLED_waitForReady
           _OLED_pulseEnable
       _OLED_write
         _OLED_send
           _OLED_write4bits
             _OLED_pulseEnable
         _OLED_waitForReady
           _OLED_pulseEnable
     _getPB
     _menuInput
       _OLED_returnHome
         _OLED_command
           _OLED_send
             _OLED_write4bits
               _OLED_pulseEnable
           _OLED_waitForReady
             _OLED_pulseEnable
       _OLED_scrollDisplayLeft
         _OLED_command
           _OLED_send
             _OLED_write4bits
               _OLED_pulseEnable
           _OLED_waitForReady
             _OLED_pulseEnable
       _OLED_scrollDisplayRight
         _OLED_command
           _OLED_send
             _OLED_write4bits
               _OLED_pulseEnable
           _OLED_waitForReady
             _OLED_pulseEnable
       _getPB
       _getRotDir
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___flmul
               __Umul8_16
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _uartSendByte

 _ISR (ROOT)
   _pushButtonISR
   _rotISR
   _uartReceiveISR
     _strncpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
ABS                  0      0     1D5       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     3A      4E      10       97.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50     3E      4E      12       97.5%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      3B      14       73.8%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      50      16      100.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              20      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     1D5      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Jan 19 22:43:08 2020

                   _pushButtonISR 185E          __end_of_transition_table 201C                      ___fldiv@aexp 0061  
                    ___fldiv@bexp 0060                      ___fldiv@sign 0059                       __CFG_CP$OFF 0000  
                    ___awdiv@sign 0026               ___wmul@multiplicand 0022               __Umul8_16@word_mpld 0026  
                     __CFG_LVP$ON 0000                               l210 10D0                               l211 10E8  
                             l203 1E76                               l212 1122                               l204 1E9C  
                             l301 26A0                               l213 1121                               l205 1E9B  
                             l230 1A03                               l222 2657                               l214 1108  
                             l206 1E9C                               l231 1A43                               l215 1120  
                             l304 26FC                               l312 266E                               l216 1138  
                             l400 00B4                               l305 2716                               l321 263F  
                             l225 267A                               l217 1151                               l209 10E9  
                             l401 1423                               l306 2718                               l218 1150  
                             l234 0809                               l315 1090                               l219 1153  
                             l411 00EC                               l403 13FD                               l235 0809  
                             l228 19FE                               l340 18FE                               l420 01D8  
                             l500 0DC9                               l236 080F                               l180 19B5  
                             l309 2662                               l229 19FE                               l421 0231  
                             l413 0100                               l405 1411                               l237 080F  
                             l181 19B6                               l190 12B8                               l318 263A  
                             l430 0287                               l422 027A                               l414 011E  
                             l406 142F                               l502 0DEC                               l182 19B6  
                             l191 1333                               l343 2635                               l423 025B  
                             l415 0232                               l407 07A6                               l511 0F12  
                             l503 0DF3                               l440 02FC                               l432 028D  
                             l416 019B                               l408 013F                               l504 0E6A  
                             l520 1858                               l185 1242                               l337 18F3  
                             l441 0307                               l433 02CD                               l425 0270  
                             l417 016A                               l409 0112                               l513 0F35  
                             l505 0E69                               l521 185D                               l177 198C  
                             l194 1AEE                               l186 1242                               l338 18E4  
                             l442 03F3                               l434 02C6                               l418 01D7  
                             l514 0F65                               l506 0EC0                               l178 199D  
                             l195 1AEF                               l187 1247                               l339 18FE  
                             l451 04E0                               l443 031B                               l435 02CD  
                             l427 0279                               l419 0209                               l515 0FC3  
                             l507 0FFF                               l179 19A8                               l196 1AEF  
                             l188 12B3                               l524 271D                               l700 07F7  
                             l380 1B01                               l452 063C                               l444 0406  
                             l436 02E7                               l428 028E                               l508 0F91  
                             l189 12B3                               l525 2725                               l461 065F  
                             l453 04E7                               l445 0462                               l509 0F50  
                             l526 2736                               l710 1F49                               l382 1B0B  
                             l470 0712                               l462 0660                               l454 055B  
                             l446 0498                               l438 02E2                               l518 184E  
                             l295 264E                               l527 273B                               l711 1F4A  
                             l703 1EBA                               l463 067E                               l455 05B9  
                             l447 0497                               l439 0308                               l519 1835  
                             l704 1ED7                               l720 1DC4                               l384 1B0D  
                             l464 078B                               l480 075D                               l472 0717  
                             l456 0580                               l392 1386                               l705 1F03  
                             l721 1DB2                               l385 1B22                               l465 06A5  
                             l457 059B                               l449 04DE                               l393 13C4  
                             l298 19F7                               l706 1F2F                               l714 2687  
                             l722 1DB3                               l386 1B10                               l474 0768  
                             l466 06EC                               l458 0581                               l490 0D09  
                             l715 2688                               l723 1DC3                               l387 1B30  
                             l467 06AA                               l459 05A2                               l395 139D  
                             l483 0FD0                               l900 0969                               l708 1F47  
                             l820 0A12                               l724 1DE5                               l388 1B3F  
                             l476 076D                               l468 0702                               l492 0D2C  
                             l484 0CBF                               l901 099A                               l821 0A1E  
                             l725 1DD4                               l389 1B4C                               l397 13A9  
                             l493 0D33                               l485 0CBE                               l902 0999  
                             l670 1C62                               l830 0B00                               l822 0A2B  
                             l726 1DDE                               l718 1D7F                               l478 0749  
                             l494 0DF5                               l486 0D34                               l903 09B4  
                             l911 15A5                               l671 1C3A                               l831 0AF8  
                             l823 0A35                               l727 1DD5                               l719 1DF5  
                             l399 13AE                               l495 0D7F                               l487 0CE0  
                             l904 09CE                               l912 15BA                               l672 1C30  
                             l840 0B3F                               l832 0AD8                               l824 0A4B  
                             l728 1DE4                               l496 0DF4                               l488 0CD5  
                             l905 09D9                               l921 15FB                               l913 15B8  
                             l673 1C3F                               l681 1B5B                               l841 0B29  
                             l833 0AE2                               l825 0A48                               l729 1DF5  
                             l497 0DA0                               l906 09DD                               l930 1779  
                             l922 17FF                               l914 15C3                               l674 1C40  
                             l690 1BA5                               l682 1B65                               l850 0BC2  
                             l842 0B2C                               l834 0AE5                               l826 0A53  
                             l818 09FF                               l498 0D95                               l931 17AA  
                             l923 1751                               l915 15D2                               l675 1C55  
                             l691 1BAA                               l683 1B9A                               l851 0BCE  
                             l843 0B32                               l835 0AEB                               l827 0A9F  
                             l819 0A15                               l940 1F66                               l932 17A9  
                             l924 1738                               l916 15E7                               l676 1C61  
                             l668 1C17                               l684 1B78                               l860 0C32  
                             l844 0BE7                               l852 0BD5                               l836 0B00  
                             l828 0A62                               l941 1F6E                               l933 17C1  
                             l925 1745                               l917 15E5                               l677 1C6D  
                             l669 1C25                               l685 1B6E                               l861 0C32  
                             l853 0BD8                               l845 0BA2                               l837 0B40  
                             l829 0AD7                               l950 1FBE                               l942 1F80  
                             l934 17F2                               l926 1756                               l918 15F0  
                             l678 1C72                               l686 1B7D                               l694 07C4  
                             l862 0C31                               l854 0BE0                               l846 0BA1  
                             l838 0B13                               l951 1FB4                               l943 1FFF  
                             l935 17DA                               l927 177B                               l919 1605  
                             l687 1B7E                               l695 07E0                               l863 0C4D  
                             l855 0BE6                               l847 0BAA                               l839 0C60  
                             l944 1F91                               l880 0864                               l936 17F2  
                             l928 1772                               l688 1B8D                               l856 0BFE  
                             l848 0BC1                               l872 26F5                               l953 1FC9  
                             l945 1F85                               l881 0861                               l937 17ED  
                             l929 177A                               l689 1B99                               l697 07F4  
                             l865 0C3D                               l857 0BF5                               l849 0BE1  
                             l961 1D34                               l954 1FC9                               l946 1F98  
                             l890 0911                               l882 086C                               l866 0C4C  
                             l858 0BFD                               l955 1FD5                               l947 1FAC  
                             l891 091D                               l883 088E                               l875 0820  
                             l699 07F6                               l867 0C53                               l859 0BFC  
                             l963 1D2D                               l956 1FF6                               l948 1F99  
                             l892 0927                               l884 09EE                               l876 0836  
                             l868 0C57                               l949 1FB3                               l893 0941  
                             l885 08A5                               l877 0833                               l981 1181  
                             l869 0C60                               l965 1D32                               l894 0928  
                             l886 0916                               l878 083F                               l990 1207  
                             l982 11A4                               l974 115F                               l966 1D60  
                             l895 0935                               l887 08D4                               l879 084E  
                             l983 11AE                               l975 115A                               l967 1D5B  
                             l896 0946                               l888 08F5                               l992 121B  
                             l984 11A5                               l897 096B                               l889 08ED  
                             l993 1222                               l985 11A9                               l977 1189  
                             l898 0962                               l986 11C2                               l899 096A  
                             l995 1234                               l987 11EA                               l979 119D  
                             l988 11C3                               l997 1239                               l998 123A  
                             _ISR 0004                               _pad 1AF0                      ___awmod@sign 0026  
                    __CFG_BORV$LO 0000                               wreg 0009                      ___flmul@aexp 0040  
                    ___flmul@bexp 0041                      ___flmul@sign 003B                      ___flmul@temp 0046  
                    ___flmul@prod 0042                     __CFG_BBEN$OFF 0000                              ?_ISR 0070  
                    __CFG_ZCD$OFF 0000                      ___fltol@exp1 002A                              l1010 1583  
                            l1011 1582                              l1003 14A5                              l1004 1594  
                            l1021 2757                              l1005 1531                              l1101 18B8  
                            l1110 27A6                              l1014 26BA                              l1022 275F  
                            l1006 14E8                              l1102 18C6                              l1111 27AB  
                            l1007 1511                              l1008 1583                              l1040 1C06  
                            l1009 1559                              l1042 1BE8                              l1050 27FF  
                            l1043 1C08                              l1051 27FF                              l1108 2791  
                            l1036 1BBC                              l1028 26D4                              l1109 2799  
                            l1061 0003                              l1038 1BB7                              l1070 180D  
                            l1039 1C07                              l1071 1808                              l1048 27EE  
                            l1072 1817                              l1064 276C                              l3001 0A29  
                            l1049 27DA                              l1073 182B                              l1065 276B  
                            l1081 1CC4                              l1066 2784                              l1082 1CC5  
                            l1058 27D4                              l3011 0A3A                              l3003 0A2B  
                            l1067 2784                              l1076 1C8D                              l3101 0B56  
                            l3021 0A59                              l3013 0A3F                              l3005 0A2F  
                            l1077 1CDD                              l1078 1C9B                              l3111 0BB2  
                            l3103 0B91                              l3031 0A6E                              l3023 0A5D  
                            l3015 0A48                              l3007 0A33                              l1079 1C8E  
                            l3121 0BCD                              l3113 0BB7                              l3105 0B93  
                            l3041 0A82                              l3033 0A72                              l3025 0A62  
                            l3017 0A49                              l3009 0A35                              l3201 1B10  
                            l1097 18C6                              l4001 0660                              l3123 0BD2  
                            l3115 0BC0                              l3131 0BE1                              l3107 0B98  
                            l3051 0A96                              l3043 0A86                              l3035 0A76  
                            l3027 0A66                              l3019 0A4B                              l3211 1B4C  
                            l3203 1B1C                              l1099 18AB                              l4011 0685  
                            l4003 0667                              l4101 11EA                              l3301 1C0B  
                            l3141 0BF9                              l3125 0BD5                              l3117 0BC2  
                            l3109 0BA2                              l3133 0BE7                              l3061 0ADC  
                            l3053 0A9A                              l3045 0A8A                              l3037 0A7A  
                            l3029 0A6A                              l3221 1D28                              l3213 1CDE  
                            l3205 1B22                              l4021 069B                              l4013 068B  
                            l4005 066C                              l4111 1234                              l4103 1207  
                            l3311 1C20                              l3303 1C0F                              l3151 0C2C  
                            l3143 0BFE                              l3135 0BE8                              l3127 0BD8  
                            l3119 0BC9                              l3071 0AF3                              l3063 0AE2  
                            l3047 0A8E                              l3039 0A7E                              l3055 0A9F  
                            l3231 1D5A                              l3223 1D2D                              l3215 1CF6  
                            l3207 1B35                              l4031 06CC                              l4023 069F  
                            l4015 068F                              l4007 0678                              l4113 123A  
                            l4105 121B                              l3321 1C35                              l3313 1C25  
                            l3305 1C14                              l3401 1EDB                              l3161 0C4D  
                            l3153 0C37                              l3145 0C03                              l3137 0BEC  
                            l3129 0BDD                              l3081 0B13                              l3065 0AE5  
                            l3073 0AF8                              l3057 0AA0                              l3049 0A92  
                            l3233 1D5B                              l3225 1D33                              l3217 1D0B  
                            l3209 1B3F                              l3241 1892                              l4041 0702  
                            l4033 06E3                              l4025 06A5                              l4017 0695  
                            l4009 067E                              l4121 1C7D                              l4201 0E16  
                            l3171 2787                              l4107 1222                              l3331 1C55  
                            l3323 1C3A                              l3315 1C27                              l3307 1C17  
                            l3411 1F33                              l3403 1F03                              l3163 0C51  
                            l3155 0C3D                              l3147 0C0B                              l3139 0BF2  
                            l3091 0B2C                              l3083 0B1B                              l3075 0B04  
                            l3067 0AE9                              l3059 0ABC                              l3235 1D60  
                            l3219 1D11                              l3227 1D34                              l3251 1450  
                            l3243 18AB                              l4051 0723                              l4043 0707  
                            l4035 06E7                              l4027 06AA                              l4019 0697  
                            l4131 1C96                              l4123 1C89                              l4211 0E70  
                            l4203 0E1B                              l3501 0858                              l3181 27A6  
                            l3173 2789                              l4301 18D9                              l4109 1228  
                            l3341 1C72                              l3333 1C5A                              l3325 1C40  
                            l3317 1C2D                              l3309 1C1B                              l3413 1F45  
                            l3405 1F07                              l3421 2684                              l3165 0C53  
                            l3157 0C45                              l3149 0C0F                              l3093 0B30  
                            l3085 0B1F                              l3077 0B09                              l3069 0AEB  
                            l3229 1D3A                              l3261 14CC                              l3253 1470  
                            l3237 2762                              l3245 18B8                              l4061 0763  
                            l4053 0728                              l4045 070D                              l4029 06AF  
                            l4037 06EC                              l4141 1CC5                              l4125 1C8C  
                            l4133 1C9B                              l4213 0E82                              l4221 0EC0  
                            l4205 0E3F                              l3511 0880                              l3503 0861  
                            l3183 27AB                              l3175 2791                              l4303 18E4  
                            l3327 1C4F                              l3319 1C30                              l3335 1C62  
                            l3351 1B5B                              l3343 1B4D                              l3415 1F47  
                            l3407 1F2F                              l3423 2687                              l3167 0C5B  
                            l3159 0C4A                              l3095 0B32                              l3087 0B23  
                            l3079 0B12                              l3431 1D7E                              l3263 14E7  
                            l3271 1531                              l3255 1495                              l3191 1AF2  
                            l3239 276C                              l3247 18BE                              l4063 0768  
                            l4055 072C                              l4047 0712                              l4039 06F2  
                            l4071 078B                              l4143 1CDD                              l4135 1CA4  
                            l4127 1C8E                              l4119 1C75                              l4231 0F50  
                            l4223 0ED4                              l4215 0E8C                              l4207 0E44  
                            l4151 0C7F                              l4311 27B6                              l3185 19BA  
                            l4145 265A                              l4401 1F52                              l3601 09D7  
                            l3521 08A4                              l3513 0884                              l3505 0862  
                            l3177 2795                              l4305 18ED                              l4321 1093  
                            l3281 26A1                              l4081 1161                              l3337 1C67  
                            l3329 1C53                              l3361 1B73                              l3353 1B5F  
                            l3345 1B4F                              l3417 1F4A                              l3409 1F31  
                            l3425 2688                              l3169 0C5F                              l3097 0B3A  
                            l3089 0B29                              l3441 1D9D                              l3433 1D7F  
                            l3273 154F                              l3265 14E8                              l3257 14A4  
                            l3193 1AF7                              l3249 18C5                              l4073 07A6  
                            l4065 076D                              l4057 0749                              l4049 0717  
                            l4137 1CAD                              l4129 1C92                              l4241 0FA4  
                            l4233 0F65                              l4225 0F12                              l4217 0E9F  
                            l4209 0E6A                              l4161 0CB3                              l4153 0C84  
                            l4313 27B8                              l3187 19F0                              l4411 1F80  
                            l4403 1F56                              l3603 09D9                              l3531 08D2  
                            l3523 08A5                              l3515 088D                              l3507 0864  
                            l3179 27A0                              l3611 159B                              l4307 18F3  
                            l4331 10C7                              l4323 1095                              l3291 272A  
                            l3283 26BA                              l4091 119D                              l4083 116B  
                            l4075 1154                              l3339 1C6D                              l3371 1B92  
                            l3363 1B78                              l3355 1B65                              l3347 1B53  
                            l3419 267B                              l3099 0B40                              l3443 1DA1  
                            l3451 1DC4                              l3435 1D92                              l3427 1D61  
                            l3275 1559                              l3267 1507                              l3259 14AA  
                            l3195 1B01                              l4067 0779                              l4059 075D  
                            l4139 1CB3                              l4251 0FCC                              l4243 0FAD  
                            l4235 0F6F                              l4227 0F35                              l4219 0EBF  
                            l4171 0CE0                              l4163 0CB7                              l4155 0C88  
                            l4147 0C63                              l4315 27BA                              l3189 19F4  
                            l4501 100A                              l4421 1FA5                              l4413 1F85  
                            l4405 1F66                              l3605 09E5                              l3541 08ED  
                            l3533 08D4                              l3525 08BA                              l3509 0874  
                            l3517 088E                              l3701 1745                              l3621 15AF  
                            l3613 159F                              l4341 10DC                              l4333 10C8  
                            l4325 10A3                              l3293 272F                              l3285 2719  
                            l4093 11A5                              l4085 117F                              l4077 115A  
                            l3365 1B7E                              l3357 1B6B                              l3373 1B9A  
                            l3349 1B58                              l3381 07A7                              l3461 1DEA  
                            l3453 1DCA                              l3445 1DA8                              l3437 1D93  
                            l3429 1D75                              l3277 1578                              l3269 1511  
                            l3197 1B06                              l4069 077E                              l4261 0FFF  
                            l4253 0FCF                              l4245 0FBC                              l4237 0F90  
                            l4229 0F3B                              l4181 0D4A                              l4173 0D09  
                            l4165 0CB8                              l4157 0C9B                              l4149 0C76  
                            l4317 27CB                              l4309 27AE                              l4511 1018  
                            l4503 1013                              l4431 1FD7                              l4423 1FB4  
                            l4415 1F91                              l4407 1F76                              l3607 09EE  
                            l3535 08D9                              l3543 08F5                              l3551 0916  
                            l3527 08C2                              l3519 0893                              l3471 0816  
                            l3711 175B                              l3703 174C                              l3631 15CC  
                            l3623 15B8                              l3615 15A3                              l4263 2631  
                            l4271 267A                              l4351 10FF                              l4343 10E1  
                            l4335 10CF                              l4327 10A8                              l3295 2736  
                            l3287 271D                              l4095 11AE                              l4087 1181  
                            l4079 115F                              l3375 1B9F                              l3367 1B88  
                            l3359 1B6E                              l3391 07F7                              l3383 07BC  
                            l3463 26D5                              l3455 1DD3                              l3447 1DB1  
                            l3439 1D9B                              l3279 1594                              l3199 1B0B  
                            l4247 0FC2                              l4239 0F91                              l4191 0D95  
                            l4183 0D54                              l4175 0D2C                              l4159 0CA4  
                            l4167 0CBF                              l4255 0FD0                              l4319 27D4  
                            l4521 1040                              l4513 101C                              l4505 1015  
                            l4441 1FFF                              l4433 1FEB                              l4425 1FBE  
                            l4417 1F99                              l4409 1F7F                              l3561 0933  
                            l3553 091D                              l3545 0907                              l3537 08E7  
                            l3529 08CA                              l3481 082A                              l3473 081A  
                            l3721 1788                              l3713 176F                              l3705 1751  
                            l3641 15E5                              l3633 15D0                              l3625 15BA  
                            l3617 15A5                              l3609 1595                              l4281 2636  
                            l4265 266F                              l4273 264F                              l4361 1114  
                            l4353 1100                              l4337 10D0                              l4329 10BE  
                            l4345 10E9                              l3297 273B                              l3289 2721  
                            l4097 11C3                              l4089 1189                              l3377 1BA5  
                            l3369 1B8D                              l3385 07D8                              l3393 1E9D  
                            l3465 26D8                              l3457 1DD5                              l3449 1DB3  
                            l3801 139D                              l4257 0FF0                              l4249 0FC3  
                            l4193 0DA0                              l4185 0D66                              l4169 0CD5  
                            l4177 0D34                              l4531 1070                              l4523 104C  
                            l4515 1028                              l4507 1016                              l4435 1FF0  
                            l4427 1FC2                              l4419 1F9D                              l4451 1A0D  
                            l4443 19F8                              l3571 0947                              l3563 0935  
                            l3555 0925                              l3547 0908                              l3539 08EB  
                            l3491 0844                              l3483 0833                              l3475 081E  
                            l3731 17C1                              l3723 178C                              l3715 1776  
                            l3707 1756                              l3651 1604                              l3643 15E7  
                            l3635 15D2                              l3627 15C3                              l3619 15AA  
                            l4283 263B                              l4267 2675                              l4275 2654  
                            l4371 1134                              l4363 1119                              l4355 1107  
                            l4347 10F0                              l4339 10D3                              l4099 11E5  
                            l3299 1C09                              l3379 1BAA                              l3387 07F2  
                            l3395 1EB2                              l3467 26F5                              l3459 1DE5  
                            l3811 13BF                              l3803 13A4                              l4259 0FFA  
                            l4195 0DC9                              l4187 0D6F                              l4179 0D47  
                            l4291 1835                              l4533 1078                              l4525 1054  
                            l4517 1030                              l4509 1017                              l4437 1FF4  
                            l4429 1FCD                              l4461 1A16                              l4453 1A0E  
                            l4445 1A03                              l3581 0970                              l3573 094B  
                            l3565 093C                              l3557 0928                              l3549 0911  
                            l3493 0848                              l3485 0834                              l3477 0820  
                            l3469 0810                              l3741 17EB                              l3733 17CF  
                            l3725 17A4                              l3717 177B                              l3709 1757  
                            l3661 1646                              l3653 1605                              l3645 15F0  
                            l3637 15D7                              l3629 15C8                              l4541 1240  
                            l4285 2665                              l4269 2677                              l4277 2655  
                            l4381 1151                              l4373 1138                              l4357 1108  
                            l4349 10F9                              l4365 1122                              l3389 07F4  
                            l3397 1ECE                              l2941 1BC8                              l2933 1BAB  
                            l3901 02DD                              l3821 1417                              l3805 13A9  
                            l3813 13C4                              l4197 0DEC                              l4189 0D7F  
                            l4293 184E                              ?_pad 0030                              l2951 2648  
                            l4535 1084                              l4527 1060                              l4519 103C  
                            l4439 1FF6                              l4471 1A21                              l4463 1A18  
                            l4455 1A10                              l4447 1A08                              l3591 09A7  
                            l3583 0978                              l3575 095F                              l3559 092F  
                            l3567 0941                              l3495 084C                              l3479 0825  
                            l3487 0836                              l3743 17ED                              l3735 17D8  
                            l3719 1780                              l3727 17AA                              l3671 168E  
                            l3663 1660                              l3655 1612                              l3647 15F5  
                            l3639 15DC                              l4551 12B1                              l4543 1247  
                            l4279 2657                              l4375 113F                              l4367 1127  
                            l4359 110B                              l3751 273F                              l3399 1ED7  
                            l2943 1BE8                              l2935 1BB1                              l3911 02F9  
                            l3903 02E2                              l3823 1423                              l3815 13DF  
                            l3831 00B4                              l3807 13AE                              l4199 0DF5  
                            l4295 1858                              l4287 182E                              l2953 264C  
                            l3761 268B                              l4537 1088                              l4529 1064  
                            l4481 1A2F                              l4473 1A24                              l4465 1A1A  
                            l4457 1A13                              l4449 1A0B                              l3593 09C2  
                            l3585 097C                              l3577 0966                              l3569 0946  
                            l3497 084E                              l3489 083F                              l3745 17F6  
                            l3737 17DA                              l3729 17B7                              l3681 16C4  
                            l3673 1695                              l3665 166D                              l3657 161F  
                            l3649 15FB                              l4553 12B8                              l4545 124E  
                            l4377 1147                              l4369 112F                              l3753 2746  
                            l2945 1BFC                              l2937 1BB7                              l2961 27EE  
                            l3921 0312                              l3913 02FC                              l3905 02E7  
                            l3841 0112                              l3833 00CE                              l3825 142F  
                            l3817 13FD                              l3809 13BA                              l4297 185D  
                            l4289 1832                              l4561 0807                              l3763 2690  
                            l3771 26FD                              l4563 1A95                              l4491 1A3A  
                            l4483 1A31                              l4475 1A26                              l4467 1A1D  
                            l4459 1A14                              l3595 09C5                              l3587 0994  
                            l3579 096B                              l3499 0853                              l3747 17FF  
                            l3739 17E7                              l3691 1725                              l3683 16D8  
                            l3675 16A2                              l3667 167A                              l3659 1639  
                            l4555 12BF                              l4547 1275                              l4539 123B  
                            l4299 18C9                              l4379 114C                              l3755 2755  
                            l2947 1C08                              l2939 1BBC                              l2955 27D7  
                            l2971 182B                              l2963 1803                              l3931 0458  
                            l3923 031B                              l3915 0302                              l3907 02ED  
                            l3851 0148                              l3843 011E                              l3835 00EC  
                            l3827 1434                              l3819 1411                              l4571 1DF6  
                            l4651 198A                              l2949 2646                              l3765 2691  
                            l3781 2710                              l3773 2701                              l4565 1A9C  
                            l4493 1A3D                              l4485 1A33                              l4477 1A2A  
                            l4469 1A1F                              l3597 09CD                              l3589 099A  
                            l3693 172C                              l3685 16E5                              l3677 16A9  
                            l3669 1681                              l4557 1301                              l4549 12AC  
                            l3757 2757                              l3749 273C                              l2981 09F9  
                            l2957 27DA                              l2965 1808                              l2973 26BB  
                            l3941 04CB                              l3933 0462                              l3925 03EE  
                            l3909 02F1                              l3917 0308                              l3861 019B  
                            l3853 014A                              l3845 0123                              l3837 0100  
                            l3829 00B3                              l4581 1E7C                              l4573 1DFE  
                            l4661 19A3                              l4653 1990                              l4645 197A  
                            l3767 269B                              l3775 2707                              l4399 1F4D  
                            l4567 1AA1                              l4495 1A3F                              l4487 1A36  
                            l4479 1A2D                              l3599 09D3                              l3695 1738  
                            l3687 16F9                              l3679 16BD                              l3759 275F  
                            l2991 0A12                              l2983 09FD                              l2959 27E8  
                            l2967 180D                              l2975 26D4                              l3951 0540  
                            l3943 04D3                              l3935 0489                              l3927 03F3  
                            l3919 030A                              l3871 0244                              l3863 01D8  
                            l3855 0169                              l3847 013E                              l3839 0106  
                            l3791 1363                              l3783 1336                              l4583 1E86  
                            l4575 1E03                              l4559 0804                              l4663 19A4  
                            l4655 1997                              l4647 197D                              l3777 270C  
                            l3769 26F6                              l4569 1ACA                              l4497 1A41  
                            l4489 1A38                              l3697 173F                              l3689 170E  
                            l4753 11BA                              l2993 0A13                              l2985 09FF  
                            l2977 09EF                              l2969 1817                              l3953 0545  
                            l3961 055B                              l3945 04D9                              l3937 048E  
                            l3929 0406                              l3881 0270                              l3873 024A  
                            l3865 0204                              l3857 016A                              l3849 013F  
                            l3793 1386                              l3785 1338                              l4577 1E61  
                            l4665 19A8                              l4657 1998                              l4649 197F  
                            l3779 270D                              l4499 1006                              l3699 1743  
                            l2987 0A04                              l2995 0A15                              l2979 09F5  
                            l3971 057B                              l3963 0562                              l3955 054C  
                            l3947 04DE                              l3939 0498                              l3891 02A3  
                            l3883 027F                              l3875 0250                              l3867 0209  
                            l3859 0196                              l3795 1389                              l3787 1340  
                            l4579 1E76                              l4667 19AB                              l4659 199D  
                            l2997 0A1E                              l2989 0A09                              l3973 0581  
                            l3965 0566                              l3981 059B                              l3957 0552  
                            l3949 04E7                              l3893 02BF                              l3885 0287  
                            l3877 0257                              l3869 0232                              l3797 1391  
                            l3789 135E                              l2999 0A23                              l3991 0607  
                            l3983 05A2                              l3975 058D                              l3967 0572  
                            l3959 0556                              l3895 02C6                              l3887 028E  
                            l3879 026A                              l3799 1397                              l3993 0633  
                            l3985 05AF                              l3977 0592                              l3969 0577  
                            l3897 02D1                              l3889 0294                              l3995 0637  
                            l3987 05B4                              l3979 0596                              l3899 02D7  
                            l3989 05B9                              l3997 063C                              l3999 064E  
                            STR_1 207F                              STR_2 201C                              STR_3 204E  
                            STR_4 2800                              STR_5 2808                              STR_8 2804  
                            STR_9 280C                              u4000 1D3A                              u4001 1D39  
                            u4010 1D47                              u4020 1D52                              u4100 14AA  
                            u4021 1D50                              u4101 14A9                              u4030 1D53  
                            u4110 14BB                              u4015 1D43                              u4200 26B3  
                            u4120 14E7                              u3400 1816                              u4040 2783  
                            u4121 14E6                              u3401 1815                              u4041 2782  
                            u4210 2721                              u4130 14FD                              u3410 26CC  
                            u4050 18A3                              u4211 2720                              u4115 14B7  
                            u3411 26CA                              u4051 18A1                              u5100 176F  
                            u5020 1704                              u3500 0A59                              u4140 1507  
                            u3420 26CD                              u4060 18A4                              u5101 176E  
                            u5005 167B                              u3501 0A58                              u4141 1506  
                            u5110 1776                              u5030 171B                              u4310 1C4F  
                            u3510 0A5D                              u3430 09FD                              u4150 1545  
                            u3350 1BB1                              u4070 18BE                              _PIE0 0716  
                            u5111 1775                              u5015 16AA                              u4311 1C4E  
                            u3511 0A5C                              u3431 09FC                              u4135 14F9  
                            u3351 1BB0                              u4071 18BD                              u5120 1780  
                            u4240 2735                              u4400 1B88                              u3600 0B09  
                            u3520 0ABC                              u3440 0A04                              u4160 154F  
                            u4080 1484                              u3360 1BB6                              u6000 0ED4  
                            u5121 177F                              u5025 1700                              u4241 2734  
                            u4225 2726                              u4305 1C41                              u4401 1B87  
                            u3601 0B08                              u3521 0ABB                              u3441 0A03  
                            u4161 154E                              u3361 1BB5                              u6001 0ED3  
                            _PIE3 0719                              u5210 2716                              u5130 178C  
                            u4330 1C60                              u4250 1C0F                              u3610 0B1F  
                            u3530 0AC6                              u3450 0A09                              u4170 156E  
                            u4090 14A4                              u3370 1BC8                              u6010 0F07  
                            _PIE4 071A                              u5211 2715                              u5131 178B  
                            u5035 1717                              u4235 272B                              u4331 1C5F  
                            u4315 1C4B                              u4251 1C0E                              u3611 0B1E  
                            u3531 0AC4                              u3451 0A08                              u4155 1541  
                            u4091 14A3                              u3371 1BC7                              u6011 0F05  
                            u5140 179A                              u5060 1743                              u6100 10E7  
                            u4340 1C67                              u4260 1C1B                              u4420 1B98  
                            u4500 1F07                              u3700 0BCD                              u3620 0B23  
                            u3540 0AC7                              u3460 0A29                              u4180 1578  
                            u3380 1BE7                              u5300 00CE                              u5220 135E  
                            u6020 0F08                              u5205 2694                              u5061 1742  
                            u5045 1726                              u6101 10E6                              u4341 1C66  
                            u4325 1C56                              u4261 1C1A                              u4421 1B97  
                            u4405 1B84                              u4501 1F06                              u3701 0BCC  
                            u3621 0B22                              u3525 0AB8                              u3461 0A28  
                            u4181 1577                              u4085 1480                              u3381 1BE6  
                            u5301 00CD                              u5221 135D                              u5150 17B7  
                            u6110 10F0                              u4190 26B2                              u4270 1C2D  
                            u4430 1B9F                              u4350 1B53                              u4510 1F45  
                            u3710 0BD2                              u3630 0B30                              u3550 0ADC  
                            u3470 0A33                              u3390 27FE                              u5310 00E1  
                            u5230 1397                              u6030 0F3B                              u5151 17B6  
                            u5055 1739                              u6111 10EF                              u4191 26B0  
                            u4271 1C2C                              u4431 1B9E                              u4415 1B8E  
                            u4351 1B52                              u4511 1F44                              u3711 0BD1  
                            u3631 0B2F                              u3551 0ADB                              u3471 0A32  
                            u4175 156A                              u4095 14A0                              u3391 27FD  
                            u5311 00DF                              u5231 1396                              u6031 0F3A  
                            u6200 1F52                              u5160 17CF                              u5080 1755  
                            u6120 10F9                              u4360 1B5F                              u4440 07BC  
                            u4520 2684                              u3800 0C2C                              u3720 0BDD  
                            u3560 0AE9                              u3480 0A3A                              u5400 027F  
                            u5320 00E2                              u5240 139C                              u6040 0FA4  
                            u6201 1F51                              u5161 17CE                              u5145 1796  
                            u5081 1754                              u6121 10F8                              u4361 1B5E  
                            u4441 07BB                              u4521 2683                              u3801 0C2B  
                            u3721 0BDC                              u3561 0AE8                              u3481 0A39  
                            u3385 1BE3                              u5401 027E                              u5241 139B  
                            u6041 0FA3                              u6210 1F56                              u5170 17EB  
                            u5090 175B                              u6130 1106                              u4290 1C3E  
                            u4370 1B6B                              u4450 07D8                              u3810 0C37  
                            u3730 0BE5                              u3650 0B56                              u3490 0A3F  
                            u4610 1DE3                              u4530 1D75                              u5410 0294  
                            u5330 0106                              u5250 13A4                              u6050 1857  
                            u6211 1F55                              u5171 17EA                              u5155 17B3  
                            u5091 175A                              u5075 1746                              u6131 1105  
                            u4291 1C3D                              u4371 1B6A                              u4451 07D7  
                            u4515 1F41                              u3811 0C36                              u3731 0BE4  
                            u3651 0B55                              u3491 0A3E                              u4611 1DE2  
                            u4531 1D74                              u5411 0293                              u5331 0105  
                            u5251 13A3                              u6051 1856                              u6300 1FCD  
                            u6220 1F76                              u4700 0893                              u6060 18FD  
                            u6140 111F                              u5180 2746                              u4460 07F2  
                            u3820 0C3C                              u3740 0BEC                              u3660 0B98  
                            u3580 0AFF                              u4620 1DEA                              u4540 1D8C  
                            u5500 0405                              u5420 02A3                              u5340 0168  
                            u5260 13DF                              u6301 1FCC                              u6221 1F75  
                            u4701 0892                              u5165 17CB                              u6061 18FC  
                            u6141 111E                              u5181 2745                              u4285 1C31  
                            u4461 07F1                              u3821 0C3B                              u3741 0BEB  
                            u3661 0B97                              u3653 0B52                              u3645 0B34  
                            u3581 0AFE                              u4621 1DE9                              u4605 1DD6  
                            u5501 0404                              u5421 02A2                              u5341 0167  
                            u5261 13DD                              u6310 1FE1                              u4710 08D9  
                            u4630 081E                              u6150 1127                              u6070 10A8  
                            u5190 2755                              u4390 1B7C                              u4470 1EB2  
                            u3830 0C4A                              u3750 0BF2                              u3670 0BB2  
                            u3590 0B04                              u4550 1DA1                              u5510 0458  
                            u5430 02BF                              u5350 01D6                              u5270 13F2  
                            u4711 08D8                              u4631 081D                              u6151 1126  
                            u6071 10A7                              u5191 2754                              u4391 1B7B  
                            u4471 1EB1                              u3831 0C49                              u3751 0BF1  
                            u3671 0BB1                              u3591 0B03                              u3575 0AED  
                            u4551 1DA0                              u5511 0457                              u5431 02BE  
                            u5351 01D5                              u5271 13F0                              u6320 1FF0  
                            u6240 1F97                              u4800 0933                              u4640 0825  
                            u6160 113F                              u6080 10BE                              u4480 1ECE  
                            u3840 0C51                              u3760 0BF9                              u3680 0BB7  
                            u4560 1DA8                              u3920 1AF7                              u5600 0566  
                            u5520 0489                              u5440 02D7                              u5360 0230  
                            u5280 13F3                              u6400 1E03                              u3905 19D4  
                            u6321 1FEF                              u6241 1F96                              u4801 0932  
                            u4641 0824                              u6161 113E                              u6081 10BD  
                            u4385 1B6F                              u4465 07EE                              u4481 1ECD  
                            u3841 0C50                              u3761 0BF8                              u3681 0BB6  
                            u4561 1DA7                              u4545 1D88                              u3921 1AF6  
                            u5601 0565                              u5521 0488                              u5505 0401  
                            u5441 02D6                              u5425 029F                              u5361 022F  
                            u6401 1E02                              u6330 1FF4                              u4650 082A  
                            u6090 10CE                              u4490 1EDB                              u3850 0C5F  
                            u3770 0C03                              u3930 1B06                              u5610 05A1  
                            u5530 048E                              u5450 02DD                              u5370 0250  
                            u5290 1417                              u6410 1E7C                              u3915 19E4  
                            u6331 1FF3                              u6315 1FDD                              u6235 1F8A  
                            u4651 0829                              u6091 10CD                              u4491 1EDA  
                            u3851 0C5E                              u3771 0C02                              u3931 1B05  
                            u5611 05A0                              u5531 048D                              u5451 02DC  
                            u5435 02BB                              u5371 024F                              u5291 1416  
                            u6411 1E7B                              u6260 1FB2                              u6340 1A02  
                            u4900 09C2                              u4820 0945                              u4740 08EB  
                            u4660 084C                              u3860 2795                              u3780 0C0F  
                            u4580 1DC2                              u3940 1B30                              u5700 070D  
                            u5620 064E                              u5540 04D9                              u5460 02E1  
                            u5380 0257                              u6261 1FB1                              u6341 1A01  
                            u4901 09C1                              u4821 0944                              u4741 08EA  
                            u4725 08DA                              u4661 084B                              u3861 2794  
                            u6085 10BA                              u3781 0C0E                              u4581 1DC1  
                            u3941 1B2F                              u5701 070C                              u5621 064D  
                            u5541 04D8                              u5461 02E0                              u5381 0256  
                            u4910 09D7                              u4830 094B                              u4670 0853  
                            u6350 1246                              u3790 0C1D                              u4590 1DCA  
                            u3950 1B35                              u5710 073E                              u5630 065E  
                            u5550 0545                              u5470 02ED                              u5390 026A  
                            u6255 1FA6                              u4911 09D6                              u4831 094A  
                            u4815 0936                              u4735 08E1                              u4671 0852  
                            u6351 1245                              u3695 0BC3                              u4591 1DC9  
                            u4575 1DB4                              u3951 1B34                              u5711 073C  
                            u5631 065D                              u5551 0544                              u5471 02EC  
                            u5391 0269                              u6280 1FC2                              u4840 095F  
                            u4760 0907                              u4680 0858                              u3880 27A5  
                            u4920 15A3                              u6360 12B7                              u5800 1228  
                            u3960 1D03                              u5720 073F                              u5640 0667  
                            u5560 054C                              u5480 02F1                              u6281 1FC1  
                            u4905 09BE                              u4841 095E                              u4761 0906  
                            u4681 0857                              u3881 27A4                              u4921 15A2  
                            u6361 12B6                              u5801 1227                              u3945 1B2C  
                            u5641 0666                              u5625 064A                              u5561 054B  
                            u5481 02F0                              u6290 1FC8                              u4850 0966  
                            u4770 091C                              u4690 0874                              u4930 15AA  
                            u3970 1D11                              u5730 0763                              u5650 066C  
                            u5570 0552                              u5490 0302                              u5810 1C89  
                            u6370 080E                              u6530 1997                              u6291 1FC7  
                            u6275 1FB7                              u4851 0965                              u4771 091B  
                            u4755 08EE                              u4691 0873                              u3875 279A  
                            u4931 15A9                              u3795 0C19                              u3971 1D10  
                            u5731 0762                              u5651 066B                              u5635 065A  
                            u5571 0551                              u5491 0301                              u5395 0266  
                            u5811 1C88                              u6371 080D                              u6531 1996  
                            u6380 1A9C                              u4860 0970                              u4780 0925  
                            u4940 15AF                              u5740 116B                              u3980 1D1E  
                            u5660 068B                              u5580 0556                              u5820 1CA4  
                            u5900 0CFF                              u6540 19A3                              u6381 1A9B  
                            u4861 096F                              u4781 0924                              u4765 0903  
                            u4941 15AE                              u5741 116A                              u3965 1CFF  
                            u5661 068A                              u5581 0555                              u5821 1CA3  
                            u6541 19A2                              u6390 1AA1                              u4870 097C  
                            u4950 15D0                              u5750 117F                              u3990 1D28  
                            u5670 069B                              u5590 0562                              u5830 1CAD  
                            u5910 0D32                              u3895 19C6                              u6391 1AA0  
                            u4871 097B                              u4951 15CF                              u5751 117E  
                            u3991 1D27                              u5671 069A                              u5591 0561  
                            u5831 1CAC                              u5911 0D31                              u4880 098A  
                            u4960 15D7                              u5760 11A3                              u5680 06F2  
                            u5840 1CB3                              u5920 0D47                              u4961 15D6  
                            u5761 11A2                              u3985 1D1A                              u5681 06F1  
                            u5841 1CB2                              u5921 0D46                              u4890 09A7  
                            u4970 15DC                              u5770 11FF                              u5690 0701  
                            u5850 1CC3                              u5930 0D66                              u4891 09A6  
                            u4795 0929                              u4971 15DB                              u6707 10D7  
                            u5771 11FD                              u5691 0700                              u5851 1CC2  
                            u5931 0D65                              u4980 15F5                              u5780 1200  
                            u5940 0DBE                              u5860 0C76                              u4885 0986  
                            u4981 15F4                              u6717 110F                              u5941 0DBC  
                            u5861 0C75                              u4990 15FA                              u5790 1221  
                            u5950 0DBF                              u5870 0C9B                              u6807 1074  
                            u6727 100E                              u4895 09A3                              u4991 15F9  
                            u5791 1220                              u5695 06FD                              u5871 0C9A  
                            u5960 0DF2                              u5880 0CB7                              u6817 1080  
                            u6737 1020                              u5961 0DF1                              u5881 0CB6  
                            u5970 0E1B                              u5890 0CFE                              u6827 108C  
                            u6747 102C                              u5971 0E1A                              u5891 0CFC  
                            u5980 0E44                              u6837 26FE                              u6757 1038  
                            u5981 0E43                              u5990 0E70                              u6847 2704  
                            u6767 1044                              u5991 0E6F                              u6857 19F1  
                            u6777 1050                              u6697 19AF                              u6867 2649  
                            u6787 105C                              u6797 1068                              _TMR0 059C  
                            _TMR1 020C         __size_of_OLED_pulseEnable 0009                     __CFG_FCMEN$ON 0000  
                   OLED_send@mode 0023                              _dbuf 02A0                              _atoi 1154  
                            _main 197A                              _prec 0166                              _nout 0162  
                            pad@i 0034                              pad@p 0031                              fsr0h 0005  
                            fsr1h 0007                              indf0 0000                              fsr0l 0004  
                            indf1 0001                              fsr1l 0006                              pad@w 0036  
                            btemp 007E                     __CFG_BOREN$ON 0000                     ___fpclassifyf 1CDE  
                            start 007C                       ?_OLED_write 0070                   ___fldiv@new_exp 005A  
                    _tolower$1321 002C                    ?_pushButtonISR 0070                     __CFG_CSWEN$ON 0000  
                   __CFG_MCLRE$ON 0000                             ??_ISR 0078                             ??_pad 0033  
              __size_of_OLED_init 008B                __size_of_OLED_send 0018                     ___fltol@sign1 0029  
                           ?_atoi 0026                   __end_of___fladd 0C61                             ?_main 0070  
                 __end_of___fldiv 09EF                   __end_of___awdiv 1C73                   __end_of___flneg 2689  
                           STR_12 2810                             STR_14 2810                     __CFG_WDTE$OFF 0000  
                 __end_of___awmod 1BAB                   __end_of___flmul 1800                   __end_of___flsub 26F6  
                 __end_of___fltol 1DF6                             _T1CLK 0211                   ___awdiv@divisor 0020  
                           _T1CON 020E                             _IOCAN 1F3E                             _IOCAP 1F3D  
                           _IOCCN 1F54                             i1l250 0068                             i1l242 0019  
                           i1l243 007A                             i1l251 0060                             i1l252 0077  
                           i1l244 0043                             i1l253 0076                             i1l245 002C  
                           i1l246 0036                             i1l254 007A                             i1l271 1931  
                           i1l263 1A50                             i1l247 0040                             i1l280 1889  
                           i1l272 193A                             i1l264 1A5B                             i1l248 0079  
                           i1l281 188F                             i1l273 193B                             i1l265 1A78  
                           i1l249 0078                             i1l282 1891                             i1l266 1A94  
                           i1l267 1A90                             i1l276 1865                             i1l268 1A94  
                           i1l277 1891                             i1l278 1877                             i1l279 1890  
                 ___awdiv@counter 0025                      vfpfcnvrt@fmt 00E8                             _TRISA 0012  
                           _TRISB 0013                             _TRISC 0014            uartReceiveISR@checksum 016A  
                   __CFG_WRTB$OFF 0000                     __CFG_WRTC$OFF 0000                    OLED_send@value 0025  
                           _getPB 266F                             _flags 0168                             _fputc 1BAB  
                           _fputs 27D5                   __end_of_isdigit 26BB                             atoi@n 0033  
                           pad@fp 0038                             atoi@s 0026                             _width 0164  
                           _putch 0003                   __end_of_isspace 2760                   __end_of_isupper 26D5  
                           status 0003                             wtemp0 007E                   __end_of_sprintf 27D5  
                  ?___fpclassifyf 0020                   __end_of_tolower 18C7                   __end_of_strncmp 1CDE  
                 __end_of_strncpy 197A                   __initialization 007E                      __end_of_atoi 123B  
                    __end_of_main 19B8                    __CFG_SAFEN$OFF 0000                        _g_10msTick 007D  
                          ??_atoi 0028                            ??_main 0159                  _handleSensorData 1A95  
                  OLED_print_xy@s 0028               __size_of_OLED_write 000C                            ?_getPB 0070  
         _OLED_scrollDisplayRight 263B                            _ADCON1 009E                            ?_fputc 0020  
                          ?_fputs 0028                            _ADRESH 009C                            _ADRESL 009B  
                ___awdiv@dividend 0022                            _ANSELA 1F38                            ?_putch 0070  
                          _ANSELB 1F43                            _ANSELC 1F4E                __CFG_RSTOSC$HFINT1 0000  
                          _T0CON0 059E                            _T0CON1 059F                   _g_sensorVersion 022C  
                          _RC1REG 0119                            _RC1STA 011D                            i1l1090 1962  
                          i1l1091 1979                            i1l1092 1979                            i1l1085 195A  
                          i1l1086 1942                            i1l1087 1959                            i1l1088 1961  
                          i1l1089 196C                            _RC6PPS 1F26                            i1l4601 1889  
                          i1l4611 1931                            i1l4603 18FF                            i1l4613 1935  
                          i1l4605 190B                            i1l4621 1A4B                            i1l4701 0047  
                          i1l4615 193A                            i1l4607 1928                            i1l4391 195A  
                          i1l4383 193D                            i1l4631 1A61                            i1l4623 1A50  
                          i1l4711 0060                            i1l4703 004B                            i1l4609 192C  
                          i1l4393 1962                            i1l4385 1942                            i1l4641 1A90  
                          i1l4633 1A73                            i1l4625 1A54                            i1l4617 1A44  
                          i1l4713 0065                            i1l4705 004F                    __CFG_WDTCCS$SC 0000  
                          i1l4395 1967                            i1l4387 1946                            i1l4643 1A92  
                          i1l4635 1A78                            i1l4627 1A56                            i1l4619 1A49  
                          i1l4715 006C                            i1l4707 0059                            i1l4389 1958  
                          i1l4397 196C                            i1l4637 1A7E                            i1l4629 1A5B  
                          i1l4717 0070                            i1l4709 005A                            i1l4591 186B  
                          i1l4639 1A83                            i1l4719 0073                            i1l4671 000B  
                          i1l4593 1871                            i1l4585 185E                            i1l4681 0021  
                          i1l4673 000F                            i1l4595 1877                            i1l4587 1863  
                          i1l4691 0033                            i1l4683 0026                            i1l4675 0013  
                          i1l4597 187D                            i1l4589 1865                            i1l4693 0036  
                          i1l4685 0029                            i1l4677 0016                            i1l4669 0006  
                          i1l4599 1883                            i1l4695 003A                            i1l4687 002C  
                          i1l4679 001D                            i1l4697 003D                            i1l4689 0030  
                          i1l4699 0040                            _INTCON 000B                 __end_of_OLED_init 1091  
               __end_of_OLED_send 26A1                            u617_20 1957                            u617_21 1956  
                          u642_20 1863                            u618_20 1960                            u650_20 1A54  
                          u642_21 1862                            u618_21 195F                            u650_21 1A53  
                          u643_20 186B                            u619_20 1978                            u651_20 1A61  
                          u643_21 186A                            u619_21 1977                            u651_21 1A60  
                          u644_20 1871                            u652_20 1A7E                            u660_20 0030  
                          u644_21 1870                            u652_21 1A7D                            u660_21 002F  
                          _OSCFRQ 0893                            u645_20 187D                            u661_20 003A  
                          u645_21 187C                            u661_21 0039                            u646_20 1883  
                          u662_20 0047                            u646_21 1882                            u662_21 0046  
                          u647_20 192C                            u663_20 004B                            u655_20 000B  
                          u647_21 192B                            u663_21 004A                            u655_21 000A  
                          u648_20 1935                            u664_20 004F                            u656_20 000F  
                          u648_21 1934                            u664_21 004E                            u656_21 000E  
                          u649_20 1A49                            u665_20 0059                            u657_20 001D  
                          u649_21 1A48                            u665_21 0058                            u657_21 001C  
                          u666_20 006C                            u658_20 0021                            u666_21 006B  
                          u658_21 0020                            u667_20 0070                            u659_20 0026  
                          u667_21 006F                            u659_21 0025                            _SPBRGL 011B  
                          _TX1REG 011A                            _TX1STA 011E                  __end_of___xxtofl 2000  
                 ??_pushButtonISR 0070                    __CFG_PWRTE$OFF 0000                      vfprintf@cfmt 0135  
                          ___flge 1E9D                            ___fleq 07A7                         ??___fladd 0028  
                          ___wmul 2719                         ??___fldiv 0050                         ??___awdiv 0024  
                       ??___flneg 0024                    __CFG_STVREN$ON 0000                         ??___awmod 0024  
                       ??___flmul 0036                         ??___flsub 0050                         ??___fltol 0024  
                          _efgtoa 1334          __size_of_OLED_returnHome 0005                            _floorf 1450  
                     menuInput@pb 002F                  ___awdiv@quotient 0027                   ___awmod@divisor 0020  
                          _rotISR 18FF                     ?_OLED_command 0070                   ___awmod@counter 0025  
                          pad@buf 0030                            _strcpy 2760                            _strlen 1801  
               ?_readAnalogValues 0070                            fputc@c 0020                            fputs@c 002C  
                          fputs@i 002D                            fputs@s 002F                         ??_isdigit 0022  
                    _g_dataPacket 0244                __size_of__Umul8_16 0027                   ___fpclassifyf@e 002A  
                 ___fpclassifyf@u 002C                   ___fpclassifyf@x 0020                ??_readAnalogValues 0062  
                __end_of_showMenu 1E9D             OLED_waitForReady@busy 0020                         ??_isspace 0022  
                       ??_isupper 0022                 OLED_command@value 0026                       _g_100msTick 007C  
                          putch@c 0070                  __end_of_vfprintf 185E                         ??_sprintf 014D  
                       ??_tolower 0028                         ??_strncmp 0024                         ??_strncpy 0073  
                _OLED_pulseEnable 2646                        ___flge@ff1 0048                        ___flge@ff2 004C  
                 ??___fpclassifyf 0024                      ___xxtofl@arg 002A                      ___xxtofl@exp 0029  
                    ___xxtofl@val 0020                        ___fleq@ff1 0020                        ___fleq@ff2 0024  
         __end_of__initialization 00AF                        ___flneg@f1 0020                        ___fltol@f1 0020  
        __size_of_OLED_write4bits 0040                    __pcstackCOMMON 0070                      __pidataBANK4 07F8  
                   __end_of_getPB 267B              uartReceiveISR@buffer 0230                     __end_of_fputc 1C09  
                   __end_of_fputs 2800                     __end_of_putch 0004                    ??_OLED_command 0026  
              __size_of_getRotDir 0009         ??_OLED_scrollDisplayRight 0027                           ??_getPB 0020  
          __size_of_OLED_print_xy 0038                           ??_fputc 0023                           ??_fputs 0029  
                         ??_putch 0020                        __pbssBANK2 015A                        __pbssBANK3 01DE  
                      __pbssBANK4 0220                        __pbssBANK5 02A0           __size_of_uartReceiveISR 0051  
              __size_of_menuInput 00C3                      ??_OLED_write 0026                 __end_of__Umul8_16 27AC  
                      _efgtoa$870 00B7                        _efgtoa$864 00B3                        _efgtoa$865 00B5  
                      _efgtoa$874 00B9                        _efgtoa$875 00BB                        _efgtoa$876 00BD  
                      __pmaintext 197A                           ?___flge 0048                           ?___fleq 0020  
                         ?___wmul 0020                   __CFG_PPS1WAY$ON 0000                        __pintentry 0004  
                         ?_efgtoa 00AA                           ?_floorf 0062                 _OLED_waitForReady 26F6  
                         ?_rotISR 0070          ??_OLED_scrollDisplayLeft 0027                           ?_strcpy 0020  
                         ?_strlen 0020                ?_OLED_waitForReady 0070                 ??_OLED_returnHome 0027  
                       ?___xxtofl 0020                           _OSCCON1 088D                __size_of_vfpfcnvrt 039F  
              __end_of_OLED_write 266F               ??_OLED_waitForReady 0020                       rotISR@input 0077  
        __end_of_handleSensorData 1AF0                 __end_of_getRotDir 2658                         ?_showMenu 0070  
                   _OLED_print_xy 18C7         __end_of_OLED_waitForReady 2719                   __size_of___flge 00AE  
                 __size_of___fleq 0051                           ___fladd 09EF                           ___fldiv 0810  
                         ___awdiv 1C09                           ___flneg 267B                           ___awmod 1B4D  
                         ___flmul 1595                           ___flsub 26D5                           ___fltol 1D61  
                 __size_of___wmul 0023                   OLED_write@value 0026                         ?_vfprintf 012F  
                 __size_of_efgtoa F473                     ?_uartSendByte 0070                   __size_of_floorf 0145  
               ??_OLED_write4bits 0020                   menuInput@pbLong 002A                        _initialize 19F8  
                         _g_tempC 01E6                   __size_of_rotISR 003D                           __ptext1 0802  
                         __ptext2 1DF6                           __ptext3 27AC                           __ptext4 182C  
                         __ptext5 0C61                           __ptext6 1C73                           __ptext7 1334  
                         __ptext8 1892                           __ptext9 26BB                           _g_power 0228  
                 __CFG_WRTAPP$OFF 0000                   __size_of_strcpy 0025                   __size_of_strlen 002B  
                    __size_of_ISR 0078                 __end_of_menuInput 1154                      __size_of_pad 005D  
                    menuInput@dir 002E                           _isdigit 26A1                        ??___xxtofl 0024  
                ___awmod@dividend 0022                           _isspace 273C                         _IOCAFbits 1F3F  
                 __CFG_WRTSAF$OFF 0000                           _isupper 26BB                           efgtoa@c 00AE  
                         efgtoa@d 00C7                           efgtoa@e 00E0                           efgtoa@f 00AA  
                         efgtoa@g 00DC                           efgtoa@h 00D2                           efgtoa@i 00DA  
                         efgtoa@l 00D6                           efgtoa@m 00C3                           efgtoa@n 00E2  
                         efgtoa@p 00CC                           efgtoa@t 00BF                           efgtoa@u 00E4  
                         efgtoa@w 00CF                           atoi@neg 002C                           _sprintf 27AC  
                         _tolower 1892                           clrloop0 2641                           _strncmp 1C73  
                         _strncpy 193C              end_of_initialization 00AF                           floorf@e 00A4  
                         floorf@m 00A0                           floorf@u 00A6                           floorf@x 0062  
            __end_of_OLED_command 2663                           fputc@fp 0022                           init_ram 1000  
                         fputs@fp 0028                           initloop 1001                         _OLED_init 1006  
                       _OLED_send 2689               OLED_setCursor@F7345 0257                    ?_OLED_print_xy 0027  
              OLED_print_xy@F7353 0253                 __end_of_vfpfcnvrt 1000                        efgtoa@mode 00D1  
                      efgtoa@sign 00C9                        ??_showMenu 0157                           psplit$0 210052  
                  ??_uartSendByte 0020                        ??_vfprintf 0132             __CFG_WDTCPS$WDTCPS_31 0000  
        __end_of_OLED_pulseEnable 264F                           strcpy@d 0026                           strlen@a 0026  
                         strcpy@s 0024                           strlen@s 0027                         _PORTAbits 000C  
                       _PORTCbits 000E   __size_of_OLED_scrollDisplayLeft 0005                       ___fladd@grs 0037  
                   ___xxtofl@sign 0028                         _TRISCbits 0014                       ___fldiv@grs 005C  
                     ___fldiv@rem 0055                  __CFG_FEXTOSC$OFF 0000                    _uartReceiveISR 1A44  
                     ___flmul@grs 003C         __size_of_readAnalogValues 00F9                        ?_OLED_init 0070  
                      ?_OLED_send 0023             __end_of_pushButtonISR 1892        __size_of_OLED_waitForReady 0023  
                  __end_of___flge 1F4B                    __end_of___fleq 07F8                       vfpfcnvrt@ap 00E9  
                     vfpfcnvrt@ct 012A                       vfpfcnvrt@fp 012E                    __end_of___wmul 273C  
                  __end_of_efgtoa 07A7                       ?_initialize 0070                    __end_of_floorf 1595  
                      floorf@F514 0220                    __end_of_rotISR 193C                    __end_of_strcpy 2785  
                  __end_of_strlen 182C               start_initialization 007E             uartReceiveISR@rxCount 0079  
                     __end_of_ISR 007C                       __end_of_pad 1B4D          OLED_print_xy@row_offsets 002B  
          __end_of_uartReceiveISR 1A95                 pnum$text7_split_1 0052            _OLED_scrollDisplayLeft 2636  
           __end_of___fpclassifyf 1D61                   ??_OLED_print_xy 002A                  __CFG_LPBOREN$OFF 0000  
                     vfprintf@fmt 012F                          ??___flge 0050                          ??___fleq 0028  
                 _OLED_returnHome 2631                          ??___wmul 0024                        menuInput@n 0030  
                   _g_curRotState 007B                          ??_efgtoa 006C                         __Umul8_16 2785  
                     __pdataBANK4 0253                          ??_floorf 0066                       _g_dataReady 01EA  
                        ??_rotISR 0070                          ??_strcpy 0022                          ??_strlen 0022  
                OLED_print_xy@col 002F                         ___fladd@a 0024                         ___fladd@b 0020  
                OLED_print_xy@row 0027                         ___fldiv@a 0048                         ___fldiv@b 004C  
                     _g_dewPointC 015A                         ___flmul@a 0032                         ___flmul@b 002E  
                     __pbssCOMMON 0079                         ___flsub@a 0048                         ___flsub@b 004C  
                       ___latbits 0003                     __pcstackBANK0 0020                     __pcstackBANK1 00A0  
                   __pcstackBANK2 0120                     __pcstackBANK3 01A0             __size_of_OLED_command 000B  
               __size_of___xxtofl 00B5                   ?_uartReceiveISR 0070              __end_of_uartSendByte 0810  
             __size_of_initialize 004C                         _atoi$1200 0032                         _atoi$1201 0030  
                       _atoi$1199 002E                 ?_handleSensorData 0070                   _OLED_write4bits 19B8  
                     ??_OLED_init 0027                       ??_OLED_send 0024                         _g_pbState 016B  
                       _g_current 01DE                ??_handleSensorData 002E                     _g_rxFErrCount 016D  
                        ?___fladd 0020                          ?___fldiv 0048                          ?___awdiv 0020  
                        ?___flneg 0020                          ?___awmod 0020                          ?___flmul 002E  
                        ?___flsub 0048                          ?___fltol 0020                         _getRotDir 264F  
                      ?__Umul8_16 0020                 __size_of_showMenu 00A7                         _g_voltage 01E2  
        ?_OLED_scrollDisplayRight 0070                      _OLED_command 2658                 __size_of_vfprintf 0032  
               menuInput@numPages 0027                          _BAUD1CON 011F                          ?_isdigit 0020  
                        ?_isspace 0020                          ?_isupper 0020                    __size_of_getPB 000C  
                       _menuInput 1091                          ?_sprintf 0137                          ?_tolower 0026  
                  __size_of_fputc 005E                    __size_of_fputs 002B                          ?_strncmp 0020  
                        ?_strncpy 0070                     _g_rxOErrCount 016C                    __size_of_putch 0001  
                _readAnalogValues 123B                    ___wmul@product 0024                          _LATAbits 0018  
                        _LATBbits 0019                          _LATCbits 001A           __end_of_OLED_returnHome 2636  
                       clear_ram0 2640                          _PIE0bits 0716                          _PIE3bits 0719  
                        _PIE4bits 071A                          _PIR0bits 070C                          _PIR3bits 070F  
                        _PIR4bits 0710                 __CFG_BBSIZE$BB512 0000                        showMenu@pb 01DD  
                      ?_getRotDir 0070                         _vfpfcnvrt 0C61                 ?_OLED_pulseEnable 0070  
                      _ADCON0bits 009D                 ___wmul@multiplier 0020                      _RX1DTPPSbits 1ECB  
              ??_OLED_pulseEnable 0020               readAnalogValues@adc 0066              OLED_write4bits@value 0022  
                    _isspace$1230 0024                  _transition_table 2000                        ?_menuInput 0027  
                      vfpfcnvrt@c 012D                        vfpfcnvrt@f 0126           __end_of_OLED_write4bits 19F8  
                   _g_sensorTimer 01EB                     uartSendByte@s 0020                        vfprintf@ap 0131  
                      vfprintf@fp 0134   __end_of_OLED_scrollDisplayRight 2640                       ??__Umul8_16 0022  
                __size_of___fladd 0272                  __size_of___fldiv 01DF                  __size_of___awdiv 006A  
                __size_of___flneg 000E                  __size_of___awmod 005E                  __size_of___flmul 026B  
                __size_of___flsub 0021                  __size_of___fltol 0095                        ?_vfpfcnvrt 00E8  
                    ??_initialize 0020                ___fpclassifyf@F453 0224                        sprintf@fmt 0137  
                      sprintf@ret 014E                          ___xxtofl 1F4B                  __size_of_isdigit 001A  
           __size_of_uartSendByte 000E                  menuInput@pbShort 0029                          _g_relHum 015E  
                __size_of_isspace 0024                          _g_rotDir 007A                          __ptext10 2760  
                        __ptext11 1AF0                          __ptext20 09EF                          __ptext12 1801  
                        __ptext21 267B                          __ptext13 27D5                          __ptext30 1091  
                        __ptext22 1E9D                          __ptext14 1BAB                          __ptext31 264F  
                        __ptext23 07A7                          __ptext15 0003                          __ptext40 2785  
                        __ptext32 266F                          __ptext24 1B4D                          __ptext16 1450  
                        __ptext41 0810                          __ptext33 263B                          __ptext25 1C09  
                        __ptext17 1CDE                          __ptext50 2646                          __ptext42 19F8  
                        __ptext34 2636                          __ptext26 1154                          __ptext18 1D61  
                        __ptext43 1A95                          __ptext35 2631                          __ptext27 273C  
                        __ptext19 26D5                          __ptext52 1A44                          __ptext44 1F4B  
                        __ptext36 18C7                          __ptext28 26A1                          __ptext53 193C  
                        __ptext45 1006                          __ptext37 2663                          __ptext29 2719  
                        __ptext54 18FF                          __ptext46 2658                          __ptext38 123B  
                        __ptext55 185E                          __ptext47 26F6                          __ptext39 1595  
                        __ptext48 2689                          __ptext49 19B8                  __size_of_isupper 001A  
         ?_OLED_scrollDisplayLeft 0070                  __size_of_sprintf 0029                  __size_of_tolower 0035  
                     _OSCCON3bits 088F                        strcpy@dest 0027                  __size_of_strncmp 006B  
                __size_of_strncpy 003E                  menuInput@timeout 002B                     __size_of_atoi 00E7  
                   __size_of_main 003E                         pnum$text7 0021                     menuInput@page 0031  
                   menuInput@menu 0028                          getPB@ret 0021                  ?_OLED_returnHome 0070  
              __end_of_initialize 1A44              __CFG_WDTCWS$WDTCWS_7 0000                        _RC1STAbits 011D  
                        efgtoa@fp 00CB                          efgtoa@ne 00C5                          efgtoa@pp 00C1  
                        efgtoa@ou 00AF                         showMenu@s 01A0                          _showMenu 1DF6  
                        int$flags 007E                       ??_getRotDir 0020                          _vfprintf 182C  
                    _uartSendByte 0802                  ??_uartReceiveISR 0076                        _INTCONbits 000B  
  __end_of_OLED_scrollDisplayLeft 263B            __size_of_pushButtonISR 0034                          isdigit@c 0020  
                     ??_menuInput 002C                  ?_OLED_write4bits 0070                          intlevel1 0000  
                       sprintf@ap 0151                          isspace@c 0020                 __CFG_CLKOUTEN$OFF 0000  
                       strcpy@src 0020                          isupper@c 0020                        _OLED_write 2663  
                       strncmp@_l 0026                         strncmp@_r 0020                         strncpy@cp 0075  
           __end_of_OLED_print_xy 18FF                       efgtoa@nmode 00CE             _readAnalogValues$1479 0062  
                     ??_vfpfcnvrt 00EA                      getRotDir@ret 0021                     _vfpfcnvrt$890 0120  
                   _vfpfcnvrt$891 0122                     _vfpfcnvrt$895 0124                     __pstringtext1 2000  
                   __pstringtext2 204E                     __pstringtext3 207F                     __pstringtext4 2800  
                   __pstringtext5 2804                     __pstringtext6 2808                     __pstringtext7 280C  
                   __pstringtext8 2810                     __pstringtext9 0000          __end_of_readAnalogValues 1334  
          __Umul8_16@multiplicand 0020         __size_of_handleSensorData 005B                          sprintf@f 0152  
                    showMenu@page 01EC                          tolower@c 0026                          sprintf@s 0150  
                    showMenu@menu 01ED            __size_of___fpclassifyf 0083                          strncmp@l 0029  
                        strncmp@n 0022                          strncmp@r 0027                          strncpy@d 0074  
                        strncpy@n 0071                          strncpy@s 0070                     ___fladd@signs 0034  
__size_of_OLED_scrollDisplayRight 0005                      ___fladd@aexp 0035                      ___fladd@bexp 0036  
            __Umul8_16@multiplier 0028                 __Umul8_16@product 0024  
