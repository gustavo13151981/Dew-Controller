

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Tue Jan 21 00:43:55 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F15356 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 110 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 130 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 277 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 510 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   120                           PORTB equ 0Dh ;# 
   121  000D                     # 572 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   122                           PORTC equ 0Eh ;# 
   123  000E                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   124                           PORTE equ 010h ;# 
   125  0010                     # 655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   126                           TRISA equ 012h ;# 
   127  0012                     # 717 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   128                           TRISB equ 013h ;# 
   129  0013                     # 779 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   130                           TRISC equ 014h ;# 
   131  0014                     # 841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   132                           TRISE equ 016h ;# 
   133  0016                     # 862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   134                           LATA equ 018h ;# 
   135  0018                     # 924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   136                           LATB equ 019h ;# 
   137  0019                     # 986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   138                           LATC equ 01Ah ;# 
   139  001A                     # 1048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   140                           ADRES equ 09Bh ;# 
   141  009B                     # 1055 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   142                           ADRESL equ 09Bh ;# 
   143  009B                     # 1125 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   144                           ADRESH equ 09Ch ;# 
   145  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   146                           ADCON0 equ 09Dh ;# 
   147  009D                     # 1272 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   148                           ADCON1 equ 09Eh ;# 
   149  009E                     # 1338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   150                           ADACT equ 09Fh ;# 
   151  009F                     # 1390 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   152                           RC1REG equ 0119h ;# 
   153  0119                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   154                           RCREG equ 0119h ;# 
   155  0119                     # 1399 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   156                           RCREG1 equ 0119h ;# 
   157  0119                     # 1444 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   158                           TX1REG equ 011Ah ;# 
   159  011A                     # 1449 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   160                           TXREG1 equ 011Ah ;# 
   161  011A                     # 1453 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   162                           TXREG equ 011Ah ;# 
   163  011A                     # 1498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   164                           SP1BRG equ 011Bh ;# 
   165  011B                     # 1505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   166                           SP1BRGL equ 011Bh ;# 
   167  011B                     # 1510 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   168                           SPBRG equ 011Bh ;# 
   169  011B                     # 1514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   170                           SPBRG1 equ 011Bh ;# 
   171  011B                     # 1518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   172                           SPBRGL equ 011Bh ;# 
   173  011B                     # 1575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   174                           SP1BRGH equ 011Ch ;# 
   175  011C                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   176                           SPBRGH equ 011Ch ;# 
   177  011C                     # 1584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   178                           SPBRGH1 equ 011Ch ;# 
   179  011C                     # 1629 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   180                           RC1STA equ 011Dh ;# 
   181  011D                     # 1634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   182                           RCSTA1 equ 011Dh ;# 
   183  011D                     # 1638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   184                           RCSTA equ 011Dh ;# 
   185  011D                     # 1809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   186                           TX1STA equ 011Eh ;# 
   187  011E                     # 1814 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   188                           TXSTA1 equ 011Eh ;# 
   189  011E                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   190                           TXSTA equ 011Eh ;# 
   191  011E                     # 1989 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   192                           BAUD1CON equ 011Fh ;# 
   193  011F                     # 1994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   194                           BAUDCON1 equ 011Fh ;# 
   195  011F                     # 1998 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   196                           BAUDCTL1 equ 011Fh ;# 
   197  011F                     # 2002 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   198                           BAUDCON equ 011Fh ;# 
   199  011F                     # 2006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   200                           BAUDCTL equ 011Fh ;# 
   201  011F                     # 2235 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   202                           SSP1BUF equ 018Ch ;# 
   203  018C                     # 2255 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   204                           SSP1ADD equ 018Dh ;# 
   205  018D                     # 2375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   206                           SSP1MSK equ 018Eh ;# 
   207  018E                     # 2445 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   208                           SSP1STAT equ 018Fh ;# 
   209  018F                     # 2809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   210                           SSP1CON1 equ 0190h ;# 
   211  0190                     # 2929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   212                           SSP1CON2 equ 0191h ;# 
   213  0191                     # 3116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   214                           SSP1CON3 equ 0192h ;# 
   215  0192                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   216                           SSP2BUF equ 0196h ;# 
   217  0196                     # 3198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   218                           SSP2ADD equ 0197h ;# 
   219  0197                     # 3318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   220                           SSP2MSK equ 0198h ;# 
   221  0198                     # 3388 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   222                           SSP2STAT equ 0199h ;# 
   223  0199                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   224                           SSP2CON1 equ 019Ah ;# 
   225  019A                     # 3872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   226                           SSP2CON2 equ 019Bh ;# 
   227  019B                     # 4059 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   228                           SSP2CON3 equ 019Ch ;# 
   229  019C                     # 4121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   230                           TMR1 equ 020Ch ;# 
   231  020C                     # 4128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   232                           TMR1L equ 020Ch ;# 
   233  020C                     # 4298 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   234                           TMR1H equ 020Dh ;# 
   235  020D                     # 4418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   236                           T1CON equ 020Eh ;# 
   237  020E                     # 4514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   238                           T1GCON equ 020Fh ;# 
   239  020F                     # 4519 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   240                           PR1 equ 020Fh ;# 
   241  020F                     # 4710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   242                           T1GATE equ 0210h ;# 
   243  0210                     # 4715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   244                           TMR1GATE equ 0210h ;# 
   245  0210                     # 4876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   246                           T1CLK equ 0211h ;# 
   247  0211                     # 4881 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   248                           TMR1CLK equ 0211h ;# 
   249  0211                     # 5018 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   250                           T2TMR equ 028Ch ;# 
   251  028C                     # 5023 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   252                           TMR2 equ 028Ch ;# 
   253  028C                     # 5072 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   254                           T2PR equ 028Dh ;# 
   255  028D                     # 5077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   256                           PR2 equ 028Dh ;# 
   257  028D                     # 5126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   258                           T2CON equ 028Eh ;# 
   259  028E                     # 5272 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   260                           T2HLT equ 028Fh ;# 
   261  028F                     # 5400 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   262                           T2CLKCON equ 0290h ;# 
   263  0290                     # 5480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   264                           T2RST equ 0291h ;# 
   265  0291                     # 5560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   266                           CCPR1 equ 030Ch ;# 
   267  030C                     # 5567 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   268                           CCPR1L equ 030Ch ;# 
   269  030C                     # 5587 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   270                           CCPR1H equ 030Dh ;# 
   271  030D                     # 5607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   272                           CCP1CON equ 030Eh ;# 
   273  030E                     # 5734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   274                           CCP1CAP equ 030Fh ;# 
   275  030F                     # 5802 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   276                           CCPR2 equ 0310h ;# 
   277  0310                     # 5809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   278                           CCPR2L equ 0310h ;# 
   279  0310                     # 5829 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   280                           CCPR2H equ 0311h ;# 
   281  0311                     # 5849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   282                           CCP2CON equ 0312h ;# 
   283  0312                     # 5976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   284                           CCP2CAP equ 0313h ;# 
   285  0313                     # 6044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   286                           PWM3DC equ 0314h ;# 
   287  0314                     # 6051 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   288                           PWM3DCL equ 0314h ;# 
   289  0314                     # 6117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   290                           PWM3DCH equ 0315h ;# 
   291  0315                     # 6287 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   292                           PWM3CON equ 0316h ;# 
   293  0316                     # 6343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   294                           PWM4DC equ 0318h ;# 
   295  0318                     # 6350 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   296                           PWM4DCL equ 0318h ;# 
   297  0318                     # 6416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   298                           PWM4DCH equ 0319h ;# 
   299  0319                     # 6586 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   300                           PWM4CON equ 031Ah ;# 
   301  031A                     # 6642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   302                           PWM5DC equ 031Ch ;# 
   303  031C                     # 6649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   304                           PWM5DCL equ 031Ch ;# 
   305  031C                     # 6715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   306                           PWM5DCH equ 031Dh ;# 
   307  031D                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   308                           PWM5CON equ 031Eh ;# 
   309  031E                     # 6941 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   310                           PWM6DC equ 038Ch ;# 
   311  038C                     # 6948 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   312                           PWM6DCL equ 038Ch ;# 
   313  038C                     # 7014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   314                           PWM6DCH equ 038Dh ;# 
   315  038D                     # 7184 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   316                           PWM6CON equ 038Eh ;# 
   317  038E                     # 7242 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   318                           NCO1ACC equ 058Ch ;# 
   319  058C                     # 7249 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   320                           NCO1ACCL equ 058Ch ;# 
   321  058C                     # 7319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   322                           NCO1ACCH equ 058Dh ;# 
   323  058D                     # 7389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   324                           NCO1ACCU equ 058Eh ;# 
   325  058E                     # 7437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   326                           NCO1INC equ 058Fh ;# 
   327  058F                     # 7444 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   328                           NCO1INCL equ 058Fh ;# 
   329  058F                     # 7514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   330                           NCO1INCH equ 0590h ;# 
   331  0590                     # 7584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   332                           NCO1INCU equ 0591h ;# 
   333  0591                     # 7630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   334                           NCO1CON equ 0592h ;# 
   335  0592                     # 7670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   336                           NCO1CLK equ 0593h ;# 
   337  0593                     # 7736 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   338                           TMR0L equ 059Ch ;# 
   339  059C                     # 7741 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   340                           TMR0 equ 059Ch ;# 
   341  059C                     # 7874 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   342                           TMR0H equ 059Dh ;# 
   343  059D                     # 7879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   344                           PR0 equ 059Dh ;# 
   345  059D                     # 8128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   346                           T0CON0 equ 059Eh ;# 
   347  059E                     # 8198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   348                           T0CON1 equ 059Fh ;# 
   349  059F                     # 8309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   350                           CWG1CLKCON equ 060Ch ;# 
   351  060C                     # 8337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   352                           CWG1DAT equ 060Dh ;# 
   353  060D                     # 8383 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   354                           CWG1DBR equ 060Eh ;# 
   355  060E                     # 8487 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   356                           CWG1DBF equ 060Fh ;# 
   357  060F                     # 8591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   358                           CWG1CON0 equ 0610h ;# 
   359  0610                     # 8692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   360                           CWG1CON1 equ 0611h ;# 
   361  0611                     # 8770 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   362                           CWG1AS0 equ 0612h ;# 
   363  0612                     # 8890 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   364                           CWG1AS1 equ 0613h ;# 
   365  0613                     # 8934 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   366                           CWG1STR equ 0614h ;# 
   367  0614                     # 9046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   368                           PIR0 equ 070Ch ;# 
   369  070C                     # 9079 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   370                           PIR1 equ 070Dh ;# 
   371  070D                     # 9118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   372                           PIR2 equ 070Eh ;# 
   373  070E                     # 9151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   374                           PIR3 equ 070Fh ;# 
   375  070F                     # 9213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   376                           PIR4 equ 0710h ;# 
   377  0710                     # 9239 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   378                           PIR5 equ 0711h ;# 
   379  0711                     # 9284 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   380                           PIR6 equ 0712h ;# 
   381  0712                     # 9310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   382                           PIR7 equ 0713h ;# 
   383  0713                     # 9352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   384                           PIE0 equ 0716h ;# 
   385  0716                     # 9385 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   386                           PIE1 equ 0717h ;# 
   387  0717                     # 9424 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   388                           PIE2 equ 0718h ;# 
   389  0718                     # 9457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   390                           PIE3 equ 0719h ;# 
   391  0719                     # 9519 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   392                           PIE4 equ 071Ah ;# 
   393  071A                     # 9545 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   394                           PIE5 equ 071Bh ;# 
   395  071B                     # 9590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   396                           PIE6 equ 071Ch ;# 
   397  071C                     # 9616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   398                           PIE7 equ 071Dh ;# 
   399  071D                     # 9658 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   400                           PMD0 equ 0796h ;# 
   401  0796                     # 9703 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   402                           PMD1 equ 0797h ;# 
   403  0797                     # 9751 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   404                           PMD2 equ 0798h ;# 
   405  0798                     # 9796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   406                           PMD3 equ 0799h ;# 
   407  0799                     # 9846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   408                           PMD4 equ 079Ah ;# 
   409  079A                     # 9891 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   410                           PMD5 equ 079Bh ;# 
   411  079B                     # 9930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   412                           WDTCON0 equ 080Ch ;# 
   413  080C                     # 10005 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   414                           WDTCON1 equ 080Dh ;# 
   415  080D                     # 10099 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   416                           WDTPSL equ 080Eh ;# 
   417  080E                     # 10227 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   418                           WDTPSH equ 080Fh ;# 
   419  080F                     # 10355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   420                           WDTTMR equ 0810h ;# 
   421  0810                     # 10437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   422                           BORCON equ 0811h ;# 
   423  0811                     # 10464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   424                           VREGCON equ 0812h ;# 
   425  0812                     # 10485 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   426                           PCON0 equ 0813h ;# 
   427  0813                     # 10547 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   428                           PCON1 equ 0814h ;# 
   429  0814                     # 10568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   430                           NVMADR equ 081Ah ;# 
   431  081A                     # 10575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   432                           NVMADRL equ 081Ah ;# 
   433  081A                     # 10637 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   434                           NVMADRH equ 081Bh ;# 
   435  081B                     # 10693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   436                           NVMDAT equ 081Ch ;# 
   437  081C                     # 10700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   438                           NVMDATL equ 081Ch ;# 
   439  081C                     # 10762 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   440                           NVMDATH equ 081Dh ;# 
   441  081D                     # 10812 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   442                           NVMCON1 equ 081Eh ;# 
   443  081E                     # 10868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   444                           NVMCON2 equ 081Fh ;# 
   445  081F                     # 10888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   446                           CPUDOZE equ 088Ch ;# 
   447  088C                     # 10953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   448                           OSCCON1 equ 088Dh ;# 
   449  088D                     # 11023 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   450                           OSCCON2 equ 088Eh ;# 
   451  088E                     # 11093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   452                           OSCCON3 equ 088Fh ;# 
   453  088F                     # 11133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   454                           OSCSTAT equ 0890h ;# 
   455  0890                     # 11190 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   456                           OSCEN equ 0891h ;# 
   457  0891                     # 11241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   458                           OSCTUNE equ 0892h ;# 
   459  0892                     # 11299 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   460                           OSCFRQ equ 0893h ;# 
   461  0893                     # 11339 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   462                           CLKRCON equ 0895h ;# 
   463  0895                     # 11404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   464                           CLKRCLK equ 0896h ;# 
   465  0896                     # 11450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   466                           FVRCON equ 090Ch ;# 
   467  090C                     # 11526 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   468                           DAC1CON0 equ 090Eh ;# 
   469  090E                     # 11627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   470                           DAC1CON1 equ 090Fh ;# 
   471  090F                     # 11679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   472                           ZCDCON equ 091Fh ;# 
   473  091F                     # 11725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   474                           CMOUT equ 098Fh ;# 
   475  098F                     # 11730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   476                           CMSTAT equ 098Fh ;# 
   477  098F                     # 11803 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   478                           CM1CON0 equ 0990h ;# 
   479  0990                     # 11883 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   480                           CM1CON1 equ 0991h ;# 
   481  0991                     # 11923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   482                           CM1NCH equ 0992h ;# 
   483  0992                     # 11983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   484                           CM1PCH equ 0993h ;# 
   485  0993                     # 12043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   486                           CM2CON0 equ 0994h ;# 
   487  0994                     # 12123 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   488                           CM2CON1 equ 0995h ;# 
   489  0995                     # 12163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   490                           CM2NCH equ 0996h ;# 
   491  0996                     # 12223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   492                           CM2PCH equ 0997h ;# 
   493  0997                     # 12283 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   494                           RC2REG equ 0A19h ;# 
   495  0A19                     # 12288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   496                           RCREG2 equ 0A19h ;# 
   497  0A19                     # 12321 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   498                           TX2REG equ 0A1Ah ;# 
   499  0A1A                     # 12326 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   500                           TXREG2 equ 0A1Ah ;# 
   501  0A1A                     # 12359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   502                           SP2BRG equ 0A1Bh ;# 
   503  0A1B                     # 12366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   504                           SP2BRGL equ 0A1Bh ;# 
   505  0A1B                     # 12371 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   506                           SPBRG2 equ 0A1Bh ;# 
   507  0A1B                     # 12404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   508                           SP2BRGH equ 0A1Ch ;# 
   509  0A1C                     # 12409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   510                           SPBRGH2 equ 0A1Ch ;# 
   511  0A1C                     # 12442 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   512                           RC2STA equ 0A1Dh ;# 
   513  0A1D                     # 12447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   514                           RCSTA2 equ 0A1Dh ;# 
   515  0A1D                     # 12564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   516                           TX2STA equ 0A1Eh ;# 
   517  0A1E                     # 12569 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   518                           TXSTA2 equ 0A1Eh ;# 
   519  0A1E                     # 12686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   520                           BAUD2CON equ 0A1Fh ;# 
   521  0A1F                     # 12691 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   522                           BAUDCON2 equ 0A1Fh ;# 
   523  0A1F                     # 12695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   524                           BAUDCTL2 equ 0A1Fh ;# 
   525  0A1F                     # 12836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   526                           CLCDATA equ 01E0Fh ;# 
   527  1E0F                     # 12874 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   528                           CLC1CON equ 01E10h ;# 
   529  1E10                     # 12992 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   530                           CLC1POL equ 01E11h ;# 
   531  1E11                     # 13070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   532                           CLC1SEL0 equ 01E12h ;# 
   533  1E12                     # 13174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   534                           CLC1SEL1 equ 01E13h ;# 
   535  1E13                     # 13278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   536                           CLC1SEL2 equ 01E14h ;# 
   537  1E14                     # 13382 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   538                           CLC1SEL3 equ 01E15h ;# 
   539  1E15                     # 13486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   540                           CLC1GLS0 equ 01E16h ;# 
   541  1E16                     # 13598 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   542                           CLC1GLS1 equ 01E17h ;# 
   543  1E17                     # 13710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   544                           CLC1GLS2 equ 01E18h ;# 
   545  1E18                     # 13822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   546                           CLC1GLS3 equ 01E19h ;# 
   547  1E19                     # 13934 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   548                           CLC2CON equ 01E1Ah ;# 
   549  1E1A                     # 14052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   550                           CLC2POL equ 01E1Bh ;# 
   551  1E1B                     # 14130 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   552                           CLC2SEL0 equ 01E1Ch ;# 
   553  1E1C                     # 14234 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   554                           CLC2SEL1 equ 01E1Dh ;# 
   555  1E1D                     # 14338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   556                           CLC2SEL2 equ 01E1Eh ;# 
   557  1E1E                     # 14442 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   558                           CLC2SEL3 equ 01E1Fh ;# 
   559  1E1F                     # 14546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   560                           CLC2GLS0 equ 01E20h ;# 
   561  1E20                     # 14658 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   562                           CLC2GLS1 equ 01E21h ;# 
   563  1E21                     # 14770 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   564                           CLC2GLS2 equ 01E22h ;# 
   565  1E22                     # 14882 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   566                           CLC2GLS3 equ 01E23h ;# 
   567  1E23                     # 14994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   568                           CLC3CON equ 01E24h ;# 
   569  1E24                     # 15112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   570                           CLC3POL equ 01E25h ;# 
   571  1E25                     # 15190 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   572                           CLC3SEL0 equ 01E26h ;# 
   573  1E26                     # 15294 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   574                           CLC3SEL1 equ 01E27h ;# 
   575  1E27                     # 15398 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   576                           CLC3SEL2 equ 01E28h ;# 
   577  1E28                     # 15502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   578                           CLC3SEL3 equ 01E29h ;# 
   579  1E29                     # 15606 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   580                           CLC3GLS0 equ 01E2Ah ;# 
   581  1E2A                     # 15718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   582                           CLC3GLS1 equ 01E2Bh ;# 
   583  1E2B                     # 15830 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   584                           CLC3GLS2 equ 01E2Ch ;# 
   585  1E2C                     # 15942 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   586                           CLC3GLS3 equ 01E2Dh ;# 
   587  1E2D                     # 16054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   588                           CLC4CON equ 01E2Eh ;# 
   589  1E2E                     # 16172 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   590                           CLC4POL equ 01E2Fh ;# 
   591  1E2F                     # 16250 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   592                           CLC4SEL0 equ 01E30h ;# 
   593  1E30                     # 16354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   594                           CLC4SEL1 equ 01E31h ;# 
   595  1E31                     # 16458 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   596                           CLC4SEL2 equ 01E32h ;# 
   597  1E32                     # 16562 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   598                           CLC4SEL3 equ 01E33h ;# 
   599  1E33                     # 16666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   600                           CLC4GLS0 equ 01E34h ;# 
   601  1E34                     # 16778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   602                           CLC4GLS1 equ 01E35h ;# 
   603  1E35                     # 16890 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   604                           CLC4GLS2 equ 01E36h ;# 
   605  1E36                     # 17002 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   606                           CLC4GLS3 equ 01E37h ;# 
   607  1E37                     # 17114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   608                           PPSLOCK equ 01E8Fh ;# 
   609  1E8F                     # 17134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   610                           INTPPS equ 01E90h ;# 
   611  1E90                     # 17192 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   612                           T0CKIPPS equ 01E91h ;# 
   613  1E91                     # 17250 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   614                           T1CKIPPS equ 01E92h ;# 
   615  1E92                     # 17308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   616                           T1GPPS equ 01E93h ;# 
   617  1E93                     # 17366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   618                           T2INPPS equ 01E9Ch ;# 
   619  1E9C                     # 17424 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   620                           CCP1PPS equ 01EA1h ;# 
   621  1EA1                     # 17482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   622                           CCP2PPS equ 01EA2h ;# 
   623  1EA2                     # 17540 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   624                           CWG1PPS equ 01EB1h ;# 
   625  1EB1                     # 17598 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   626                           CLCIN0PPS equ 01EBBh ;# 
   627  1EBB                     # 17656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   628                           CLCIN1PPS equ 01EBCh ;# 
   629  1EBC                     # 17714 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   630                           CLCIN2PPS equ 01EBDh ;# 
   631  1EBD                     # 17772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   632                           CLCIN3PPS equ 01EBEh ;# 
   633  1EBE                     # 17830 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   634                           ADACTPPS equ 01EC3h ;# 
   635  1EC3                     # 17888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   636                           SSP1CLKPPS equ 01EC5h ;# 
   637  1EC5                     # 17946 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   638                           SSP1DATPPS equ 01EC6h ;# 
   639  1EC6                     # 18004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   640                           SSP1SSPPS equ 01EC7h ;# 
   641  1EC7                     # 18062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   642                           SSP2CLKPPS equ 01EC8h ;# 
   643  1EC8                     # 18120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   644                           SSP2DATPPS equ 01EC9h ;# 
   645  1EC9                     # 18178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   646                           SSP2SSPPS equ 01ECAh ;# 
   647  1ECA                     # 18236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   648                           RX1DTPPS equ 01ECBh ;# 
   649  1ECB                     # 18294 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   650                           TX1CKPPS equ 01ECCh ;# 
   651  1ECC                     # 18352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   652                           RX2DTPPS equ 01ECDh ;# 
   653  1ECD                     # 18410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   654                           TX2CKPPS equ 01ECEh ;# 
   655  1ECE                     # 18468 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   656                           RA0PPS equ 01F10h ;# 
   657  1F10                     # 18512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   658                           RA1PPS equ 01F11h ;# 
   659  1F11                     # 18556 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   660                           RA2PPS equ 01F12h ;# 
   661  1F12                     # 18600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   662                           RA3PPS equ 01F13h ;# 
   663  1F13                     # 18644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   664                           RA4PPS equ 01F14h ;# 
   665  1F14                     # 18688 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   666                           RA5PPS equ 01F15h ;# 
   667  1F15                     # 18732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   668                           RA6PPS equ 01F16h ;# 
   669  1F16                     # 18776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   670                           RA7PPS equ 01F17h ;# 
   671  1F17                     # 18820 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   672                           RB0PPS equ 01F18h ;# 
   673  1F18                     # 18864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   674                           RB1PPS equ 01F19h ;# 
   675  1F19                     # 18908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   676                           RB2PPS equ 01F1Ah ;# 
   677  1F1A                     # 18952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   678                           RB3PPS equ 01F1Bh ;# 
   679  1F1B                     # 18996 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   680                           RB4PPS equ 01F1Ch ;# 
   681  1F1C                     # 19040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   682                           RB5PPS equ 01F1Dh ;# 
   683  1F1D                     # 19084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   684                           RB6PPS equ 01F1Eh ;# 
   685  1F1E                     # 19128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   686                           RB7PPS equ 01F1Fh ;# 
   687  1F1F                     # 19172 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   688                           RC0PPS equ 01F20h ;# 
   689  1F20                     # 19216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   690                           RC1PPS equ 01F21h ;# 
   691  1F21                     # 19260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   692                           RC2PPS equ 01F22h ;# 
   693  1F22                     # 19304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   694                           RC3PPS equ 01F23h ;# 
   695  1F23                     # 19348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   696                           RC4PPS equ 01F24h ;# 
   697  1F24                     # 19392 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   698                           RC5PPS equ 01F25h ;# 
   699  1F25                     # 19436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   700                           RC6PPS equ 01F26h ;# 
   701  1F26                     # 19480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   702                           RC7PPS equ 01F27h ;# 
   703  1F27                     # 19524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   704                           ANSELA equ 01F38h ;# 
   705  1F38                     # 19586 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   706                           WPUA equ 01F39h ;# 
   707  1F39                     # 19648 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   708                           ODCONA equ 01F3Ah ;# 
   709  1F3A                     # 19710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   710                           SLRCONA equ 01F3Bh ;# 
   711  1F3B                     # 19772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   712                           INLVLA equ 01F3Ch ;# 
   713  1F3C                     # 19834 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   714                           IOCAP equ 01F3Dh ;# 
   715  1F3D                     # 19896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   716                           IOCAN equ 01F3Eh ;# 
   717  1F3E                     # 19958 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   718                           IOCAF equ 01F3Fh ;# 
   719  1F3F                     # 20020 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   720                           ANSELB equ 01F43h ;# 
   721  1F43                     # 20082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   722                           WPUB equ 01F44h ;# 
   723  1F44                     # 20144 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   724                           ODCONB equ 01F45h ;# 
   725  1F45                     # 20206 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   726                           SLRCONB equ 01F46h ;# 
   727  1F46                     # 20268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   728                           INLVLB equ 01F47h ;# 
   729  1F47                     # 20330 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   730                           IOCBP equ 01F48h ;# 
   731  1F48                     # 20392 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   732                           IOCBN equ 01F49h ;# 
   733  1F49                     # 20454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   734                           IOCBF equ 01F4Ah ;# 
   735  1F4A                     # 20516 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   736                           ANSELC equ 01F4Eh ;# 
   737  1F4E                     # 20578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   738                           WPUC equ 01F4Fh ;# 
   739  1F4F                     # 20640 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   740                           ODCONC equ 01F50h ;# 
   741  1F50                     # 20702 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   742                           SLRCONC equ 01F51h ;# 
   743  1F51                     # 20764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   744                           INLVLC equ 01F52h ;# 
   745  1F52                     # 20826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   746                           IOCCP equ 01F53h ;# 
   747  1F53                     # 20888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   748                           IOCCN equ 01F54h ;# 
   749  1F54                     # 20950 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   750                           IOCCF equ 01F55h ;# 
   751  1F55                     # 21012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   752                           WPUE equ 01F65h ;# 
   753  1F65                     # 21033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   754                           INLVLE equ 01F68h ;# 
   755  1F68                     # 21054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   756                           IOCEP equ 01F69h ;# 
   757  1F69                     # 21075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   758                           IOCEN equ 01F6Ah ;# 
   759  1F6A                     # 21096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   760                           IOCEF equ 01F6Bh ;# 
   761  1F6B                     # 21117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   762                           STATUS_SHAD equ 01FE4h ;# 
   763  1FE4                     # 21137 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   764                           WREG_SHAD equ 01FE5h ;# 
   765  1FE5                     # 21157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   766                           BSR_SHAD equ 01FE6h ;# 
   767  1FE6                     # 21177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   768                           PCLATH_SHAD equ 01FE7h ;# 
   769  1FE7                     # 21197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   770                           FSR0_SHAD equ 01FE8h ;# 
   771  1FE8                     # 21204 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   772                           FSR0L_SHAD equ 01FE8h ;# 
   773  1FE8                     # 21224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   774                           FSR0H_SHAD equ 01FE9h ;# 
   775  1FE9                     # 21244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   776                           FSR1L_SHAD equ 01FEAh ;# 
   777  1FEA                     # 21264 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   778                           FSR1H_SHAD equ 01FEBh ;# 
   779  1FEB                     # 21284 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   780                           STKPTR equ 01FEDh ;# 
   781  1FED                     # 21328 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   782                           TOSL equ 01FEEh ;# 
   783  1FEE                     # 21398 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   784                           TOSH equ 01FEFh ;# 
   785  1FEF                     # 110 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   786                           INDF0 equ 00h ;# 
   787  0000                     # 130 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   788                           INDF1 equ 01h ;# 
   789  0001                     # 150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   790                           PCL equ 02h ;# 
   791  0002                     # 170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   792                           STATUS equ 03h ;# 
   793  0003                     # 233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   794                           FSR0L equ 04h ;# 
   795  0004                     # 253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   796                           FSR0H equ 05h ;# 
   797  0005                     # 277 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   798                           FSR1L equ 06h ;# 
   799  0006                     # 297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   800                           FSR1H equ 07h ;# 
   801  0007                     # 317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   802                           BSR equ 08h ;# 
   803  0008                     # 375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   804                           WREG equ 09h ;# 
   805  0009                     # 395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   806                           PCLATH equ 0Ah ;# 
   807  000A                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   808                           INTCON equ 0Bh ;# 
   809  000B                     # 448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   810                           PORTA equ 0Ch ;# 
   811  000C                     # 510 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   812                           PORTB equ 0Dh ;# 
   813  000D                     # 572 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   814                           PORTC equ 0Eh ;# 
   815  000E                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   816                           PORTE equ 010h ;# 
   817  0010                     # 655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   818                           TRISA equ 012h ;# 
   819  0012                     # 717 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   820                           TRISB equ 013h ;# 
   821  0013                     # 779 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   822                           TRISC equ 014h ;# 
   823  0014                     # 841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   824                           TRISE equ 016h ;# 
   825  0016                     # 862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   826                           LATA equ 018h ;# 
   827  0018                     # 924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   828                           LATB equ 019h ;# 
   829  0019                     # 986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   830                           LATC equ 01Ah ;# 
   831  001A                     # 1048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   832                           ADRES equ 09Bh ;# 
   833  009B                     # 1055 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   834                           ADRESL equ 09Bh ;# 
   835  009B                     # 1125 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   836                           ADRESH equ 09Ch ;# 
   837  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   838                           ADCON0 equ 09Dh ;# 
   839  009D                     # 1272 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   840                           ADCON1 equ 09Eh ;# 
   841  009E                     # 1338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   842                           ADACT equ 09Fh ;# 
   843  009F                     # 1390 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   844                           RC1REG equ 0119h ;# 
   845  0119                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   846                           RCREG equ 0119h ;# 
   847  0119                     # 1399 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   848                           RCREG1 equ 0119h ;# 
   849  0119                     # 1444 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   850                           TX1REG equ 011Ah ;# 
   851  011A                     # 1449 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   852                           TXREG1 equ 011Ah ;# 
   853  011A                     # 1453 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   854                           TXREG equ 011Ah ;# 
   855  011A                     # 1498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   856                           SP1BRG equ 011Bh ;# 
   857  011B                     # 1505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   858                           SP1BRGL equ 011Bh ;# 
   859  011B                     # 1510 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   860                           SPBRG equ 011Bh ;# 
   861  011B                     # 1514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   862                           SPBRG1 equ 011Bh ;# 
   863  011B                     # 1518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   864                           SPBRGL equ 011Bh ;# 
   865  011B                     # 1575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   866                           SP1BRGH equ 011Ch ;# 
   867  011C                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   868                           SPBRGH equ 011Ch ;# 
   869  011C                     # 1584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   870                           SPBRGH1 equ 011Ch ;# 
   871  011C                     # 1629 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   872                           RC1STA equ 011Dh ;# 
   873  011D                     # 1634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   874                           RCSTA1 equ 011Dh ;# 
   875  011D                     # 1638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   876                           RCSTA equ 011Dh ;# 
   877  011D                     # 1809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   878                           TX1STA equ 011Eh ;# 
   879  011E                     # 1814 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   880                           TXSTA1 equ 011Eh ;# 
   881  011E                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   882                           TXSTA equ 011Eh ;# 
   883  011E                     # 1989 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   884                           BAUD1CON equ 011Fh ;# 
   885  011F                     # 1994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   886                           BAUDCON1 equ 011Fh ;# 
   887  011F                     # 1998 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   888                           BAUDCTL1 equ 011Fh ;# 
   889  011F                     # 2002 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   890                           BAUDCON equ 011Fh ;# 
   891  011F                     # 2006 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   892                           BAUDCTL equ 011Fh ;# 
   893  011F                     # 2235 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   894                           SSP1BUF equ 018Ch ;# 
   895  018C                     # 2255 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   896                           SSP1ADD equ 018Dh ;# 
   897  018D                     # 2375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   898                           SSP1MSK equ 018Eh ;# 
   899  018E                     # 2445 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   900                           SSP1STAT equ 018Fh ;# 
   901  018F                     # 2809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   902                           SSP1CON1 equ 0190h ;# 
   903  0190                     # 2929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   904                           SSP1CON2 equ 0191h ;# 
   905  0191                     # 3116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   906                           SSP1CON3 equ 0192h ;# 
   907  0192                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   908                           SSP2BUF equ 0196h ;# 
   909  0196                     # 3198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   910                           SSP2ADD equ 0197h ;# 
   911  0197                     # 3318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   912                           SSP2MSK equ 0198h ;# 
   913  0198                     # 3388 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   914                           SSP2STAT equ 0199h ;# 
   915  0199                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   916                           SSP2CON1 equ 019Ah ;# 
   917  019A                     # 3872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   918                           SSP2CON2 equ 019Bh ;# 
   919  019B                     # 4059 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   920                           SSP2CON3 equ 019Ch ;# 
   921  019C                     # 4121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   922                           TMR1 equ 020Ch ;# 
   923  020C                     # 4128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   924                           TMR1L equ 020Ch ;# 
   925  020C                     # 4298 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   926                           TMR1H equ 020Dh ;# 
   927  020D                     # 4418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   928                           T1CON equ 020Eh ;# 
   929  020E                     # 4514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   930                           T1GCON equ 020Fh ;# 
   931  020F                     # 4519 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   932                           PR1 equ 020Fh ;# 
   933  020F                     # 4710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   934                           T1GATE equ 0210h ;# 
   935  0210                     # 4715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   936                           TMR1GATE equ 0210h ;# 
   937  0210                     # 4876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   938                           T1CLK equ 0211h ;# 
   939  0211                     # 4881 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   940                           TMR1CLK equ 0211h ;# 
   941  0211                     # 5018 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   942                           T2TMR equ 028Ch ;# 
   943  028C                     # 5023 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   944                           TMR2 equ 028Ch ;# 
   945  028C                     # 5072 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   946                           T2PR equ 028Dh ;# 
   947  028D                     # 5077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   948                           PR2 equ 028Dh ;# 
   949  028D                     # 5126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   950                           T2CON equ 028Eh ;# 
   951  028E                     # 5272 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   952                           T2HLT equ 028Fh ;# 
   953  028F                     # 5400 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   954                           T2CLKCON equ 0290h ;# 
   955  0290                     # 5480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   956                           T2RST equ 0291h ;# 
   957  0291                     # 5560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   958                           CCPR1 equ 030Ch ;# 
   959  030C                     # 5567 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   960                           CCPR1L equ 030Ch ;# 
   961  030C                     # 5587 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   962                           CCPR1H equ 030Dh ;# 
   963  030D                     # 5607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   964                           CCP1CON equ 030Eh ;# 
   965  030E                     # 5734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   966                           CCP1CAP equ 030Fh ;# 
   967  030F                     # 5802 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   968                           CCPR2 equ 0310h ;# 
   969  0310                     # 5809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   970                           CCPR2L equ 0310h ;# 
   971  0310                     # 5829 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   972                           CCPR2H equ 0311h ;# 
   973  0311                     # 5849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   974                           CCP2CON equ 0312h ;# 
   975  0312                     # 5976 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   976                           CCP2CAP equ 0313h ;# 
   977  0313                     # 6044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   978                           PWM3DC equ 0314h ;# 
   979  0314                     # 6051 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   980                           PWM3DCL equ 0314h ;# 
   981  0314                     # 6117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   982                           PWM3DCH equ 0315h ;# 
   983  0315                     # 6287 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   984                           PWM3CON equ 0316h ;# 
   985  0316                     # 6343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   986                           PWM4DC equ 0318h ;# 
   987  0318                     # 6350 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   988                           PWM4DCL equ 0318h ;# 
   989  0318                     # 6416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   990                           PWM4DCH equ 0319h ;# 
   991  0319                     # 6586 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   992                           PWM4CON equ 031Ah ;# 
   993  031A                     # 6642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   994                           PWM5DC equ 031Ch ;# 
   995  031C                     # 6649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   996                           PWM5DCL equ 031Ch ;# 
   997  031C                     # 6715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
   998                           PWM5DCH equ 031Dh ;# 
   999  031D                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1000                           PWM5CON equ 031Eh ;# 
  1001  031E                     # 6941 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1002                           PWM6DC equ 038Ch ;# 
  1003  038C                     # 6948 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1004                           PWM6DCL equ 038Ch ;# 
  1005  038C                     # 7014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1006                           PWM6DCH equ 038Dh ;# 
  1007  038D                     # 7184 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1008                           PWM6CON equ 038Eh ;# 
  1009  038E                     # 7242 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1010                           NCO1ACC equ 058Ch ;# 
  1011  058C                     # 7249 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1012                           NCO1ACCL equ 058Ch ;# 
  1013  058C                     # 7319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1014                           NCO1ACCH equ 058Dh ;# 
  1015  058D                     # 7389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1016                           NCO1ACCU equ 058Eh ;# 
  1017  058E                     # 7437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1018                           NCO1INC equ 058Fh ;# 
  1019  058F                     # 7444 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1020                           NCO1INCL equ 058Fh ;# 
  1021  058F                     # 7514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1022                           NCO1INCH equ 0590h ;# 
  1023  0590                     # 7584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1024                           NCO1INCU equ 0591h ;# 
  1025  0591                     # 7630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1026                           NCO1CON equ 0592h ;# 
  1027  0592                     # 7670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1028                           NCO1CLK equ 0593h ;# 
  1029  0593                     # 7736 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1030                           TMR0L equ 059Ch ;# 
  1031  059C                     # 7741 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1032                           TMR0 equ 059Ch ;# 
  1033  059C                     # 7874 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1034                           TMR0H equ 059Dh ;# 
  1035  059D                     # 7879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1036                           PR0 equ 059Dh ;# 
  1037  059D                     # 8128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1038                           T0CON0 equ 059Eh ;# 
  1039  059E                     # 8198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1040                           T0CON1 equ 059Fh ;# 
  1041  059F                     # 8309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1042                           CWG1CLKCON equ 060Ch ;# 
  1043  060C                     # 8337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1044                           CWG1DAT equ 060Dh ;# 
  1045  060D                     # 8383 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1046                           CWG1DBR equ 060Eh ;# 
  1047  060E                     # 8487 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1048                           CWG1DBF equ 060Fh ;# 
  1049  060F                     # 8591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1050                           CWG1CON0 equ 0610h ;# 
  1051  0610                     # 8692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1052                           CWG1CON1 equ 0611h ;# 
  1053  0611                     # 8770 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1054                           CWG1AS0 equ 0612h ;# 
  1055  0612                     # 8890 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1056                           CWG1AS1 equ 0613h ;# 
  1057  0613                     # 8934 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1058                           CWG1STR equ 0614h ;# 
  1059  0614                     # 9046 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1060                           PIR0 equ 070Ch ;# 
  1061  070C                     # 9079 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1062                           PIR1 equ 070Dh ;# 
  1063  070D                     # 9118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1064                           PIR2 equ 070Eh ;# 
  1065  070E                     # 9151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1066                           PIR3 equ 070Fh ;# 
  1067  070F                     # 9213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1068                           PIR4 equ 0710h ;# 
  1069  0710                     # 9239 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1070                           PIR5 equ 0711h ;# 
  1071  0711                     # 9284 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1072                           PIR6 equ 0712h ;# 
  1073  0712                     # 9310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1074                           PIR7 equ 0713h ;# 
  1075  0713                     # 9352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1076                           PIE0 equ 0716h ;# 
  1077  0716                     # 9385 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1078                           PIE1 equ 0717h ;# 
  1079  0717                     # 9424 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1080                           PIE2 equ 0718h ;# 
  1081  0718                     # 9457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1082                           PIE3 equ 0719h ;# 
  1083  0719                     # 9519 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1084                           PIE4 equ 071Ah ;# 
  1085  071A                     # 9545 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1086                           PIE5 equ 071Bh ;# 
  1087  071B                     # 9590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1088                           PIE6 equ 071Ch ;# 
  1089  071C                     # 9616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1090                           PIE7 equ 071Dh ;# 
  1091  071D                     # 9658 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1092                           PMD0 equ 0796h ;# 
  1093  0796                     # 9703 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1094                           PMD1 equ 0797h ;# 
  1095  0797                     # 9751 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1096                           PMD2 equ 0798h ;# 
  1097  0798                     # 9796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1098                           PMD3 equ 0799h ;# 
  1099  0799                     # 9846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1100                           PMD4 equ 079Ah ;# 
  1101  079A                     # 9891 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1102                           PMD5 equ 079Bh ;# 
  1103  079B                     # 9930 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1104                           WDTCON0 equ 080Ch ;# 
  1105  080C                     # 10005 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1106                           WDTCON1 equ 080Dh ;# 
  1107  080D                     # 10099 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1108                           WDTPSL equ 080Eh ;# 
  1109  080E                     # 10227 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1110                           WDTPSH equ 080Fh ;# 
  1111  080F                     # 10355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1112                           WDTTMR equ 0810h ;# 
  1113  0810                     # 10437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1114                           BORCON equ 0811h ;# 
  1115  0811                     # 10464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1116                           VREGCON equ 0812h ;# 
  1117  0812                     # 10485 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1118                           PCON0 equ 0813h ;# 
  1119  0813                     # 10547 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1120                           PCON1 equ 0814h ;# 
  1121  0814                     # 10568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1122                           NVMADR equ 081Ah ;# 
  1123  081A                     # 10575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1124                           NVMADRL equ 081Ah ;# 
  1125  081A                     # 10637 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1126                           NVMADRH equ 081Bh ;# 
  1127  081B                     # 10693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1128                           NVMDAT equ 081Ch ;# 
  1129  081C                     # 10700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1130                           NVMDATL equ 081Ch ;# 
  1131  081C                     # 10762 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1132                           NVMDATH equ 081Dh ;# 
  1133  081D                     # 10812 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1134                           NVMCON1 equ 081Eh ;# 
  1135  081E                     # 10868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1136                           NVMCON2 equ 081Fh ;# 
  1137  081F                     # 10888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1138                           CPUDOZE equ 088Ch ;# 
  1139  088C                     # 10953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1140                           OSCCON1 equ 088Dh ;# 
  1141  088D                     # 11023 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1142                           OSCCON2 equ 088Eh ;# 
  1143  088E                     # 11093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1144                           OSCCON3 equ 088Fh ;# 
  1145  088F                     # 11133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1146                           OSCSTAT equ 0890h ;# 
  1147  0890                     # 11190 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1148                           OSCEN equ 0891h ;# 
  1149  0891                     # 11241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1150                           OSCTUNE equ 0892h ;# 
  1151  0892                     # 11299 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1152                           OSCFRQ equ 0893h ;# 
  1153  0893                     # 11339 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1154                           CLKRCON equ 0895h ;# 
  1155  0895                     # 11404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1156                           CLKRCLK equ 0896h ;# 
  1157  0896                     # 11450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1158                           FVRCON equ 090Ch ;# 
  1159  090C                     # 11526 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1160                           DAC1CON0 equ 090Eh ;# 
  1161  090E                     # 11627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1162                           DAC1CON1 equ 090Fh ;# 
  1163  090F                     # 11679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1164                           ZCDCON equ 091Fh ;# 
  1165  091F                     # 11725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1166                           CMOUT equ 098Fh ;# 
  1167  098F                     # 11730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1168                           CMSTAT equ 098Fh ;# 
  1169  098F                     # 11803 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1170                           CM1CON0 equ 0990h ;# 
  1171  0990                     # 11883 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1172                           CM1CON1 equ 0991h ;# 
  1173  0991                     # 11923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1174                           CM1NCH equ 0992h ;# 
  1175  0992                     # 11983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1176                           CM1PCH equ 0993h ;# 
  1177  0993                     # 12043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1178                           CM2CON0 equ 0994h ;# 
  1179  0994                     # 12123 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1180                           CM2CON1 equ 0995h ;# 
  1181  0995                     # 12163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1182                           CM2NCH equ 0996h ;# 
  1183  0996                     # 12223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1184                           CM2PCH equ 0997h ;# 
  1185  0997                     # 12283 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1186                           RC2REG equ 0A19h ;# 
  1187  0A19                     # 12288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1188                           RCREG2 equ 0A19h ;# 
  1189  0A19                     # 12321 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1190                           TX2REG equ 0A1Ah ;# 
  1191  0A1A                     # 12326 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1192                           TXREG2 equ 0A1Ah ;# 
  1193  0A1A                     # 12359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1194                           SP2BRG equ 0A1Bh ;# 
  1195  0A1B                     # 12366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1196                           SP2BRGL equ 0A1Bh ;# 
  1197  0A1B                     # 12371 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1198                           SPBRG2 equ 0A1Bh ;# 
  1199  0A1B                     # 12404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1200                           SP2BRGH equ 0A1Ch ;# 
  1201  0A1C                     # 12409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1202                           SPBRGH2 equ 0A1Ch ;# 
  1203  0A1C                     # 12442 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1204                           RC2STA equ 0A1Dh ;# 
  1205  0A1D                     # 12447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1206                           RCSTA2 equ 0A1Dh ;# 
  1207  0A1D                     # 12564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1208                           TX2STA equ 0A1Eh ;# 
  1209  0A1E                     # 12569 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1210                           TXSTA2 equ 0A1Eh ;# 
  1211  0A1E                     # 12686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1212                           BAUD2CON equ 0A1Fh ;# 
  1213  0A1F                     # 12691 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1214                           BAUDCON2 equ 0A1Fh ;# 
  1215  0A1F                     # 12695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1216                           BAUDCTL2 equ 0A1Fh ;# 
  1217  0A1F                     # 12836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1218                           CLCDATA equ 01E0Fh ;# 
  1219  1E0F                     # 12874 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1220                           CLC1CON equ 01E10h ;# 
  1221  1E10                     # 12992 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1222                           CLC1POL equ 01E11h ;# 
  1223  1E11                     # 13070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1224                           CLC1SEL0 equ 01E12h ;# 
  1225  1E12                     # 13174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1226                           CLC1SEL1 equ 01E13h ;# 
  1227  1E13                     # 13278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1228                           CLC1SEL2 equ 01E14h ;# 
  1229  1E14                     # 13382 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1230                           CLC1SEL3 equ 01E15h ;# 
  1231  1E15                     # 13486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1232                           CLC1GLS0 equ 01E16h ;# 
  1233  1E16                     # 13598 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1234                           CLC1GLS1 equ 01E17h ;# 
  1235  1E17                     # 13710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1236                           CLC1GLS2 equ 01E18h ;# 
  1237  1E18                     # 13822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1238                           CLC1GLS3 equ 01E19h ;# 
  1239  1E19                     # 13934 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1240                           CLC2CON equ 01E1Ah ;# 
  1241  1E1A                     # 14052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1242                           CLC2POL equ 01E1Bh ;# 
  1243  1E1B                     # 14130 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1244                           CLC2SEL0 equ 01E1Ch ;# 
  1245  1E1C                     # 14234 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1246                           CLC2SEL1 equ 01E1Dh ;# 
  1247  1E1D                     # 14338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1248                           CLC2SEL2 equ 01E1Eh ;# 
  1249  1E1E                     # 14442 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1250                           CLC2SEL3 equ 01E1Fh ;# 
  1251  1E1F                     # 14546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1252                           CLC2GLS0 equ 01E20h ;# 
  1253  1E20                     # 14658 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1254                           CLC2GLS1 equ 01E21h ;# 
  1255  1E21                     # 14770 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1256                           CLC2GLS2 equ 01E22h ;# 
  1257  1E22                     # 14882 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1258                           CLC2GLS3 equ 01E23h ;# 
  1259  1E23                     # 14994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1260                           CLC3CON equ 01E24h ;# 
  1261  1E24                     # 15112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1262                           CLC3POL equ 01E25h ;# 
  1263  1E25                     # 15190 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1264                           CLC3SEL0 equ 01E26h ;# 
  1265  1E26                     # 15294 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1266                           CLC3SEL1 equ 01E27h ;# 
  1267  1E27                     # 15398 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1268                           CLC3SEL2 equ 01E28h ;# 
  1269  1E28                     # 15502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1270                           CLC3SEL3 equ 01E29h ;# 
  1271  1E29                     # 15606 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1272                           CLC3GLS0 equ 01E2Ah ;# 
  1273  1E2A                     # 15718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1274                           CLC3GLS1 equ 01E2Bh ;# 
  1275  1E2B                     # 15830 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1276                           CLC3GLS2 equ 01E2Ch ;# 
  1277  1E2C                     # 15942 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1278                           CLC3GLS3 equ 01E2Dh ;# 
  1279  1E2D                     # 16054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1280                           CLC4CON equ 01E2Eh ;# 
  1281  1E2E                     # 16172 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1282                           CLC4POL equ 01E2Fh ;# 
  1283  1E2F                     # 16250 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1284                           CLC4SEL0 equ 01E30h ;# 
  1285  1E30                     # 16354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1286                           CLC4SEL1 equ 01E31h ;# 
  1287  1E31                     # 16458 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1288                           CLC4SEL2 equ 01E32h ;# 
  1289  1E32                     # 16562 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1290                           CLC4SEL3 equ 01E33h ;# 
  1291  1E33                     # 16666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1292                           CLC4GLS0 equ 01E34h ;# 
  1293  1E34                     # 16778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1294                           CLC4GLS1 equ 01E35h ;# 
  1295  1E35                     # 16890 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1296                           CLC4GLS2 equ 01E36h ;# 
  1297  1E36                     # 17002 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1298                           CLC4GLS3 equ 01E37h ;# 
  1299  1E37                     # 17114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1300                           PPSLOCK equ 01E8Fh ;# 
  1301  1E8F                     # 17134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1302                           INTPPS equ 01E90h ;# 
  1303  1E90                     # 17192 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1304                           T0CKIPPS equ 01E91h ;# 
  1305  1E91                     # 17250 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1306                           T1CKIPPS equ 01E92h ;# 
  1307  1E92                     # 17308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1308                           T1GPPS equ 01E93h ;# 
  1309  1E93                     # 17366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1310                           T2INPPS equ 01E9Ch ;# 
  1311  1E9C                     # 17424 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1312                           CCP1PPS equ 01EA1h ;# 
  1313  1EA1                     # 17482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1314                           CCP2PPS equ 01EA2h ;# 
  1315  1EA2                     # 17540 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1316                           CWG1PPS equ 01EB1h ;# 
  1317  1EB1                     # 17598 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1318                           CLCIN0PPS equ 01EBBh ;# 
  1319  1EBB                     # 17656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1320                           CLCIN1PPS equ 01EBCh ;# 
  1321  1EBC                     # 17714 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1322                           CLCIN2PPS equ 01EBDh ;# 
  1323  1EBD                     # 17772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1324                           CLCIN3PPS equ 01EBEh ;# 
  1325  1EBE                     # 17830 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1326                           ADACTPPS equ 01EC3h ;# 
  1327  1EC3                     # 17888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1328                           SSP1CLKPPS equ 01EC5h ;# 
  1329  1EC5                     # 17946 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1330                           SSP1DATPPS equ 01EC6h ;# 
  1331  1EC6                     # 18004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1332                           SSP1SSPPS equ 01EC7h ;# 
  1333  1EC7                     # 18062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1334                           SSP2CLKPPS equ 01EC8h ;# 
  1335  1EC8                     # 18120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1336                           SSP2DATPPS equ 01EC9h ;# 
  1337  1EC9                     # 18178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1338                           SSP2SSPPS equ 01ECAh ;# 
  1339  1ECA                     # 18236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1340                           RX1DTPPS equ 01ECBh ;# 
  1341  1ECB                     # 18294 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1342                           TX1CKPPS equ 01ECCh ;# 
  1343  1ECC                     # 18352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1344                           RX2DTPPS equ 01ECDh ;# 
  1345  1ECD                     # 18410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1346                           TX2CKPPS equ 01ECEh ;# 
  1347  1ECE                     # 18468 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1348                           RA0PPS equ 01F10h ;# 
  1349  1F10                     # 18512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1350                           RA1PPS equ 01F11h ;# 
  1351  1F11                     # 18556 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1352                           RA2PPS equ 01F12h ;# 
  1353  1F12                     # 18600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1354                           RA3PPS equ 01F13h ;# 
  1355  1F13                     # 18644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1356                           RA4PPS equ 01F14h ;# 
  1357  1F14                     # 18688 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1358                           RA5PPS equ 01F15h ;# 
  1359  1F15                     # 18732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1360                           RA6PPS equ 01F16h ;# 
  1361  1F16                     # 18776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1362                           RA7PPS equ 01F17h ;# 
  1363  1F17                     # 18820 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1364                           RB0PPS equ 01F18h ;# 
  1365  1F18                     # 18864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1366                           RB1PPS equ 01F19h ;# 
  1367  1F19                     # 18908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1368                           RB2PPS equ 01F1Ah ;# 
  1369  1F1A                     # 18952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1370                           RB3PPS equ 01F1Bh ;# 
  1371  1F1B                     # 18996 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1372                           RB4PPS equ 01F1Ch ;# 
  1373  1F1C                     # 19040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1374                           RB5PPS equ 01F1Dh ;# 
  1375  1F1D                     # 19084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1376                           RB6PPS equ 01F1Eh ;# 
  1377  1F1E                     # 19128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1378                           RB7PPS equ 01F1Fh ;# 
  1379  1F1F                     # 19172 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1380                           RC0PPS equ 01F20h ;# 
  1381  1F20                     # 19216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1382                           RC1PPS equ 01F21h ;# 
  1383  1F21                     # 19260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1384                           RC2PPS equ 01F22h ;# 
  1385  1F22                     # 19304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1386                           RC3PPS equ 01F23h ;# 
  1387  1F23                     # 19348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1388                           RC4PPS equ 01F24h ;# 
  1389  1F24                     # 19392 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1390                           RC5PPS equ 01F25h ;# 
  1391  1F25                     # 19436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1392                           RC6PPS equ 01F26h ;# 
  1393  1F26                     # 19480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1394                           RC7PPS equ 01F27h ;# 
  1395  1F27                     # 19524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1396                           ANSELA equ 01F38h ;# 
  1397  1F38                     # 19586 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1398                           WPUA equ 01F39h ;# 
  1399  1F39                     # 19648 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1400                           ODCONA equ 01F3Ah ;# 
  1401  1F3A                     # 19710 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1402                           SLRCONA equ 01F3Bh ;# 
  1403  1F3B                     # 19772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1404                           INLVLA equ 01F3Ch ;# 
  1405  1F3C                     # 19834 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1406                           IOCAP equ 01F3Dh ;# 
  1407  1F3D                     # 19896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1408                           IOCAN equ 01F3Eh ;# 
  1409  1F3E                     # 19958 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1410                           IOCAF equ 01F3Fh ;# 
  1411  1F3F                     # 20020 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1412                           ANSELB equ 01F43h ;# 
  1413  1F43                     # 20082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1414                           WPUB equ 01F44h ;# 
  1415  1F44                     # 20144 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1416                           ODCONB equ 01F45h ;# 
  1417  1F45                     # 20206 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1418                           SLRCONB equ 01F46h ;# 
  1419  1F46                     # 20268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1420                           INLVLB equ 01F47h ;# 
  1421  1F47                     # 20330 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1422                           IOCBP equ 01F48h ;# 
  1423  1F48                     # 20392 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1424                           IOCBN equ 01F49h ;# 
  1425  1F49                     # 20454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1426                           IOCBF equ 01F4Ah ;# 
  1427  1F4A                     # 20516 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1428                           ANSELC equ 01F4Eh ;# 
  1429  1F4E                     # 20578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1430                           WPUC equ 01F4Fh ;# 
  1431  1F4F                     # 20640 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1432                           ODCONC equ 01F50h ;# 
  1433  1F50                     # 20702 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1434                           SLRCONC equ 01F51h ;# 
  1435  1F51                     # 20764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1436                           INLVLC equ 01F52h ;# 
  1437  1F52                     # 20826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1438                           IOCCP equ 01F53h ;# 
  1439  1F53                     # 20888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1440                           IOCCN equ 01F54h ;# 
  1441  1F54                     # 20950 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1442                           IOCCF equ 01F55h ;# 
  1443  1F55                     # 21012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1444                           WPUE equ 01F65h ;# 
  1445  1F65                     # 21033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1446                           INLVLE equ 01F68h ;# 
  1447  1F68                     # 21054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1448                           IOCEP equ 01F69h ;# 
  1449  1F69                     # 21075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1450                           IOCEN equ 01F6Ah ;# 
  1451  1F6A                     # 21096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1452                           IOCEF equ 01F6Bh ;# 
  1453  1F6B                     # 21117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1454                           STATUS_SHAD equ 01FE4h ;# 
  1455  1FE4                     # 21137 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1456                           WREG_SHAD equ 01FE5h ;# 
  1457  1FE5                     # 21157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1458                           BSR_SHAD equ 01FE6h ;# 
  1459  1FE6                     # 21177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1460                           PCLATH_SHAD equ 01FE7h ;# 
  1461  1FE7                     # 21197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1462                           FSR0_SHAD equ 01FE8h ;# 
  1463  1FE8                     # 21204 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1464                           FSR0L_SHAD equ 01FE8h ;# 
  1465  1FE8                     # 21224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1466                           FSR0H_SHAD equ 01FE9h ;# 
  1467  1FE9                     # 21244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1468                           FSR1L_SHAD equ 01FEAh ;# 
  1469  1FEA                     # 21264 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1470                           FSR1H_SHAD equ 01FEBh ;# 
  1471  1FEB                     # 21284 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1472                           STKPTR equ 01FEDh ;# 
  1473  1FED                     # 21328 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1474                           TOSL equ 01FEEh ;# 
  1475  1FEE                     # 21398 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f15356.h"
  1476                           TOSH equ 01FEFh ;# 
  1477  1FEF                     	FNCALL	_main,_OLED_command
  1478                           	FNCALL	_main,_OLED_init
  1479                           	FNCALL	_main,_OLED_returnHome
  1480                           	FNCALL	_main,_checkStatus
  1481                           	FNCALL	_main,_convertAnalogValues
  1482                           	FNCALL	_main,_handleSensorData
  1483                           	FNCALL	_main,_initialize
  1484                           	FNCALL	_main,_showMenu
  1485                           	FNCALL	_main,_timeNow
  1486                           	FNCALL	_main,_timeSince
  1487                           	FNCALL	_main,_uartSendByte
  1488                           	FNCALL	_timeSince,_timeNow
  1489                           	FNCALL	_showMenu,_OLED_print_xy
  1490                           	FNCALL	_showMenu,_OLED_returnHome
  1491                           	FNCALL	_showMenu,_getPB
  1492                           	FNCALL	_showMenu,_menuInput
  1493                           	FNCALL	_showMenu,_sprintf
  1494                           	FNCALL	_sprintf,_vfprintf
  1495                           	FNCALL	_vfprintf,_vfpfcnvrt
  1496                           	FNCALL	_vfpfcnvrt,_atoi
  1497                           	FNCALL	_vfpfcnvrt,_efgtoa
  1498                           	FNCALL	_vfpfcnvrt,_fputc
  1499                           	FNCALL	_vfpfcnvrt,_isdigit
  1500                           	FNCALL	_vfpfcnvrt,_isupper
  1501                           	FNCALL	_vfpfcnvrt,_stoa
  1502                           	FNCALL	_vfpfcnvrt,_strncmp
  1503                           	FNCALL	_vfpfcnvrt,_tolower
  1504                           	FNCALL	_stoa,_fputc
  1505                           	FNCALL	_stoa,_strlen
  1506                           	FNCALL	_efgtoa,___awdiv
  1507                           	FNCALL	_efgtoa,___awmod
  1508                           	FNCALL	_efgtoa,___fladd
  1509                           	FNCALL	_efgtoa,___fldiv
  1510                           	FNCALL	_efgtoa,___fleq
  1511                           	FNCALL	_efgtoa,___flge
  1512                           	FNCALL	_efgtoa,___flmul
  1513                           	FNCALL	_efgtoa,___flneg
  1514                           	FNCALL	_efgtoa,___flsub
  1515                           	FNCALL	_efgtoa,___fltol
  1516                           	FNCALL	_efgtoa,___fpclassifyf
  1517                           	FNCALL	_efgtoa,_floorf
  1518                           	FNCALL	_efgtoa,_isupper
  1519                           	FNCALL	_efgtoa,_pad
  1520                           	FNCALL	_efgtoa,_strcpy
  1521                           	FNCALL	_efgtoa,_tolower
  1522                           	FNCALL	_tolower,_isupper
  1523                           	FNCALL	_pad,_fputc
  1524                           	FNCALL	_pad,_fputs
  1525                           	FNCALL	_pad,_strlen
  1526                           	FNCALL	_fputs,_fputc
  1527                           	FNCALL	_fputc,_putch
  1528                           	FNCALL	___flsub,___fladd
  1529                           	FNCALL	_atoi,___wmul
  1530                           	FNCALL	_atoi,_isdigit
  1531                           	FNCALL	_atoi,_isspace
  1532                           	FNCALL	_menuInput,_OLED_returnHome
  1533                           	FNCALL	_menuInput,_OLED_scrollDisplayLeft
  1534                           	FNCALL	_menuInput,_OLED_scrollDisplayRight
  1535                           	FNCALL	_menuInput,_getPB
  1536                           	FNCALL	_menuInput,_getRotDir
  1537                           	FNCALL	_OLED_scrollDisplayRight,_OLED_command
  1538                           	FNCALL	_OLED_scrollDisplayLeft,_OLED_command
  1539                           	FNCALL	_OLED_returnHome,_OLED_command
  1540                           	FNCALL	_OLED_print_xy,_OLED_command
  1541                           	FNCALL	_OLED_print_xy,_OLED_write
  1542                           	FNCALL	_OLED_write,_OLED_send
  1543                           	FNCALL	_OLED_write,_OLED_waitForReady
  1544                           	FNCALL	_handleSensorData,___xxtofl
  1545                           	FNCALL	_convertAnalogValues,___fladd
  1546                           	FNCALL	_convertAnalogValues,___fldiv
  1547                           	FNCALL	_convertAnalogValues,___flmul
  1548                           	FNCALL	_convertAnalogValues,___xxtofl
  1549                           	FNCALL	_convertAnalogValues,_adcGetConversion
  1550                           	FNCALL	_convertAnalogValues,_ema
  1551                           	FNCALL	_ema,___lmul
  1552                           	FNCALL	___flmul,__Umul8_16
  1553                           	FNCALL	_checkStatus,___flge
  1554                           	FNCALL	_OLED_init,_OLED_command
  1555                           	FNCALL	_OLED_init,_OLED_write4bits
  1556                           	FNCALL	_OLED_command,_OLED_send
  1557                           	FNCALL	_OLED_command,_OLED_waitForReady
  1558                           	FNCALL	_OLED_waitForReady,_OLED_pulseEnable
  1559                           	FNCALL	_OLED_send,_OLED_write4bits
  1560                           	FNCALL	_OLED_write4bits,_OLED_pulseEnable
  1561                           	FNROOT	_main
  1562                           	FNCALL	_ISR,___llmod
  1563                           	FNCALL	_ISR,_pushButtonISR
  1564                           	FNCALL	_ISR,_rotISR
  1565                           	FNCALL	_ISR,_uartReceiveISR
  1566                           	FNCALL	_uartReceiveISR,_strncpy
  1567                           	FNCALL	intlevel1,_ISR
  1568                           	global	intlevel1
  1569                           	FNROOT	intlevel1
  1570                           	global	stoa@F1143
  1571                           	global	OLED_print_xy@F7353
  1572                           	global	OLED_setCursor@F7345
  1573                           psect	idataBANK4,class=CODE,space=0,delta=2,noexec
  1574                           global __pidataBANK4
  1575                           __pidataBANK4:
  1576  2192                     	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  1577                           	line	548
  1578                           
  1579                           ;initializer for stoa@F1143
  1580                           	retlw	028h
  1581  2192  3428               	retlw	06Eh
  1582  2193  346E               	retlw	075h
  1583  2194  3475               	retlw	06Ch
  1584  2195  346C               	retlw	06Ch
  1585  2196  346C               	retlw	029h
  1586  2197  3429               	retlw	low(0)
  1587  2198  3400               	file	"oled.c"
  1588                           	line	153
  1589                           
  1590                           ;initializer for OLED_print_xy@F7353
  1591                           	retlw	low(0)
  1592  2199  3400               	retlw	040h
  1593  219A  3440               	retlw	014h
  1594  219B  3414               	retlw	054h
  1595  219C  3454               	line	139
  1596                           
  1597                           ;initializer for OLED_setCursor@F7345
  1598                           	retlw	low(0)
  1599  219D  3400               	retlw	040h
  1600  219E  3440               	retlw	014h
  1601  219F  3414               	retlw	054h
  1602  21A0  3454               	global	_transition_table
  1603                           psect	stringtext1,class=STRCODE,delta=2,noexec
  1604                           global __pstringtext1
  1605                           __pstringtext1:
  1606  2800                     	file	"main.c"
  1607                           	line	55
  1608                           _transition_table:
  1609  2800                     	retlw	low(0)
  1610  2800  3400               	retlw	04h
  1611  2801  3404               	retlw	01h
  1612  2802  3401               	retlw	low(0)
  1613  2803  3400               	retlw	082h
  1614  2804  3482               	retlw	low(0)
  1615  2805  3400               	retlw	01h
  1616  2806  3401               	retlw	low(0)
  1617  2807  3400               	retlw	02h
  1618  2808  3402               	retlw	03h
  1619  2809  3403               	retlw	01h
  1620  280A  3401               	retlw	low(0)
  1621  280B  3400               	retlw	02h
  1622  280C  3402               	retlw	03h
  1623  280D  3403               	retlw	low(0)
  1624  280E  3400               	retlw	080h
  1625  280F  3480               	retlw	045h
  1626  2810  3445               	retlw	04h
  1627  2811  3404               	retlw	low(0)
  1628  2812  3400               	retlw	low(0)
  1629  2813  3400               	retlw	05h
  1630  2814  3405               	retlw	04h
  1631  2815  3404               	retlw	06h
  1632  2816  3406               	retlw	low(0)
  1633  2817  3400               	retlw	05h
  1634  2818  3405               	retlw	low(0)
  1635  2819  3400               	retlw	06h
  1636  281A  3406               	retlw	040h
  1637  281B  3440               	global __end_of_transition_table
  1638                           __end_of_transition_table:
  1639  281C                     	global	_transition_table
  1640                           	global	uartReceiveISR@rxCount
  1641                           	global	_g_curRotState
  1642                           	global	_g_10msTick
  1643                           	global	_g_100msTick
  1644                           	global	_width
  1645                           	global	_prec
  1646                           	global	_flags
  1647                           	global	uartReceiveISR@checksum
  1648                           	global	_g_pbState
  1649                           	global	_g_rotDir
  1650                           	global	_g_dataReady
  1651                           	global	_g_rxOErrCount
  1652                           	global	_g_rxFErrCount
  1653                           	global	_g_sensorTimer
  1654                           	global	_g_status
  1655                           	global	showMenu@page
  1656                           	global	showMenu@menu
  1657                           	global	floorf@F514
  1658                           	global	___fpclassifyf@F453
  1659                           	global	_g_power
  1660                           	global	_g_current
  1661                           	global	_g_voltage
  1662                           	global	_g_tempAux
  1663                           	global	_g_sensorVersion
  1664                           	global	_g_dewPointC
  1665                           	global	_g_relHum
  1666                           	global	_g_tempC
  1667                           	global	_nout
  1668                           	global	convertAnalogValues@avgI
  1669                           	global	convertAnalogValues@avgV
  1670                           	global	convertAnalogValues@avgT
  1671                           	global	_g_dataPacket
  1672                           	global	uartReceiveISR@buffer
  1673                           	global	_dbuf
  1674                           	global	_PORTCbits
  1675                           _PORTCbits	set	0xE
  1676  000E                     	global	_TRISCbits
  1677                           _TRISCbits	set	0x14
  1678  0014                     	global	_PORTAbits
  1679                           _PORTAbits	set	0xC
  1680  000C                     	global	_INTCONbits
  1681                           _INTCONbits	set	0xB
  1682  000B                     	global	_INTCON
  1683                           _INTCON	set	0xB
  1684  000B                     	global	_TRISC
  1685                           _TRISC	set	0x14
  1686  0014                     	global	_TRISB
  1687                           _TRISB	set	0x13
  1688  0013                     	global	_TRISA
  1689                           _TRISA	set	0x12
  1690  0012                     	global	_LATAbits
  1691                           _LATAbits	set	0x18
  1692  0018                     	global	_LATCbits
  1693                           _LATCbits	set	0x1A
  1694  001A                     	global	_LATBbits
  1695                           _LATBbits	set	0x19
  1696  0019                     	global	_ADCON1
  1697                           _ADCON1	set	0x9E
  1698  009E                     	global	_ADRESL
  1699                           _ADRESL	set	0x9B
  1700  009B                     	global	_ADRESH
  1701                           _ADRESH	set	0x9C
  1702  009C                     	global	_ADCON0bits
  1703                           _ADCON0bits	set	0x9D
  1704  009D                     	global	_RC1REG
  1705                           _RC1REG	set	0x119
  1706  0119                     	global	_RC1STAbits
  1707                           _RC1STAbits	set	0x11D
  1708  011D                     	global	_TX1REG
  1709                           _TX1REG	set	0x11A
  1710  011A                     	global	_TX1STA
  1711                           _TX1STA	set	0x11E
  1712  011E                     	global	_RC1STA
  1713                           _RC1STA	set	0x11D
  1714  011D                     	global	_SPBRGL
  1715                           _SPBRGL	set	0x11B
  1716  011B                     	global	_BAUD1CON
  1717                           _BAUD1CON	set	0x11F
  1718  011F                     	global	_TMR1
  1719                           _TMR1	set	0x20C
  1720  020C                     	global	_T1CLK
  1721                           _T1CLK	set	0x211
  1722  0211                     	global	_T1CON
  1723                           _T1CON	set	0x20E
  1724  020E                     	global	_TMR0
  1725                           _TMR0	set	0x59C
  1726  059C                     	global	_T0CON1
  1727                           _T0CON1	set	0x59F
  1728  059F                     	global	_T0CON0
  1729                           _T0CON0	set	0x59E
  1730  059E                     	global	_PIE3bits
  1731                           _PIE3bits	set	0x719
  1732  0719                     	global	_PIR4bits
  1733                           _PIR4bits	set	0x710
  1734  0710                     	global	_PIE4bits
  1735                           _PIE4bits	set	0x71A
  1736  071A                     	global	_PIR0bits
  1737                           _PIR0bits	set	0x70C
  1738  070C                     	global	_PIR3bits
  1739                           _PIR3bits	set	0x70F
  1740  070F                     	global	_PIE4
  1741                           _PIE4	set	0x71A
  1742  071A                     	global	_PIE3
  1743                           _PIE3	set	0x719
  1744  0719                     	global	_PIE0
  1745                           _PIE0	set	0x716
  1746  0716                     	global	_PIE0bits
  1747                           _PIE0bits	set	0x716
  1748  0716                     	global	_OSCCON3bits
  1749                           _OSCCON3bits	set	0x88F
  1750  088F                     	global	_OSCCON1
  1751                           _OSCCON1	set	0x88D
  1752  088D                     	global	_OSCFRQ
  1753                           _OSCFRQ	set	0x893
  1754  0893                     	global	_RX1DTPPSbits
  1755                           _RX1DTPPSbits	set	0x1ECB
  1756  1ECB                     	global	_IOCAFbits
  1757                           _IOCAFbits	set	0x1F3F
  1758  1F3F                     	global	_IOCCN
  1759                           _IOCCN	set	0x1F54
  1760  1F54                     	global	_IOCAN
  1761                           _IOCAN	set	0x1F3E
  1762  1F3E                     	global	_IOCAP
  1763                           _IOCAP	set	0x1F3D
  1764  1F3D                     	global	_ANSELC
  1765                           _ANSELC	set	0x1F4E
  1766  1F4E                     	global	_ANSELB
  1767                           _ANSELB	set	0x1F43
  1768  1F43                     	global	_ANSELA
  1769                           _ANSELA	set	0x1F38
  1770  1F38                     	global	_RC6PPS
  1771                           _RC6PPS	set	0x1F26
  1772  1F26                     	
  1773                           STR_7:	
  1774  281C                     	retlw	67	;'C'
  1775  281C  3443               	retlw	104	;'h'
  1776  281D  3468               	retlw	49	;'1'
  1777  281E  3431               	retlw	58	;':'
  1778  281F  343A               	retlw	32	;' '
  1779  2820  3420               	retlw	120	;'x'
  1780  2821  3478               	retlw	120	;'x'
  1781  2822  3478               	retlw	32	;' '
  1782  2823  3420               	retlw	105	;'i'
  1783  2824  3469               	retlw	110	;'n'
  1784  2825  346E               	retlw	99	;'c'
  1785  2826  3463               	retlw	104	;'h'
  1786  2827  3468               	retlw	67	;'C'
  1787  2828  3443               	retlw	104	;'h'
  1788  2829  3468               	retlw	50	;'2'
  1789  282A  3432               	retlw	58	;':'
  1790  282B  343A               	retlw	32	;' '
  1791  282C  3420               	retlw	120	;'x'
  1792  282D  3478               	retlw	120	;'x'
  1793  282E  3478               	retlw	32	;' '
  1794  282F  3420               	retlw	105	;'i'
  1795  2830  3469               	retlw	110	;'n'
  1796  2831  346E               	retlw	99	;'c'
  1797  2832  3463               	retlw	104	;'h'
  1798  2833  3468               	retlw	67	;'C'
  1799  2834  3443               	retlw	104	;'h'
  1800  2835  3468               	retlw	51	;'3'
  1801  2836  3433               	retlw	58	;':'
  1802  2837  343A               	retlw	32	;' '
  1803  2838  3420               	retlw	120	;'x'
  1804  2839  3478               	retlw	120	;'x'
  1805  283A  3478               	retlw	32	;' '
  1806  283B  3420               	retlw	105	;'i'
  1807  283C  3469               	retlw	110	;'n'
  1808  283D  346E               	retlw	99	;'c'
  1809  283E  3463               	retlw	104	;'h'
  1810  283F  3468               	retlw	67	;'C'
  1811  2840  3443               	retlw	104	;'h'
  1812  2841  3468               	retlw	52	;'4'
  1813  2842  3434               	retlw	58	;':'
  1814  2843  343A               	retlw	32	;' '
  1815  2844  3420               	retlw	120	;'x'
  1816  2845  3478               	retlw	120	;'x'
  1817  2846  3478               	retlw	32	;' '
  1818  2847  3420               	retlw	105	;'i'
  1819  2848  3469               	retlw	110	;'n'
  1820  2849  346E               	retlw	99	;'c'
  1821  284A  3463               	retlw	104	;'h'
  1822  284B  3468               	retlw	0
  1823  284C  3400               psect	stringtext2,class=STRCODE,delta=2,noexec
  1824                           global __pstringtext2
  1825                           __pstringtext2:
  1826  284D                     	
  1827                           STR_3:	
  1828  284D                     	retlw	84	;'T'
  1829  284D  3454               	retlw	101	;'e'
  1830  284E  3465               	retlw	109	;'m'
  1831  284F  346D               	retlw	112	;'p'
  1832  2850  3470               	retlw	101	;'e'
  1833  2851  3465               	retlw	114	;'r'
  1834  2852  3472               	retlw	97	;'a'
  1835  2853  3461               	retlw	116	;'t'
  1836  2854  3474               	retlw	117	;'u'
  1837  2855  3475               	retlw	114	;'r'
  1838  2856  3472               	retlw	101	;'e'
  1839  2857  3465               	retlw	32	;' '
  1840  2858  3420               	retlw	82	;'R'
  1841  2859  3452               	retlw	101	;'e'
  1842  285A  3465               	retlw	108	;'l'
  1843  285B  346C               	retlw	46	;'.'
  1844  285C  342E               	retlw	104	;'h'
  1845  285D  3468               	retlw	117	;'u'
  1846  285E  3475               	retlw	109	;'m'
  1847  285F  346D               	retlw	105	;'i'
  1848  2860  3469               	retlw	100	;'d'
  1849  2861  3464               	retlw	105	;'i'
  1850  2862  3469               	retlw	116	;'t'
  1851  2863  3474               	retlw	121	;'y'
  1852  2864  3479               	retlw	68	;'D'
  1853  2865  3444               	retlw	101	;'e'
  1854  2866  3465               	retlw	119	;'w'
  1855  2867  3477               	retlw	112	;'p'
  1856  2868  3470               	retlw	111	;'o'
  1857  2869  346F               	retlw	105	;'i'
  1858  286A  3469               	retlw	110	;'n'
  1859  286B  346E               	retlw	116	;'t'
  1860  286C  3474               	retlw	32	;' '
  1861  286D  3420               	retlw	32	;' '
  1862  286E  3420               	retlw	32	;' '
  1863  286F  3420               	retlw	32	;' '
  1864  2870  3420               	retlw	66	;'B'
  1865  2871  3442               	retlw	97	;'a'
  1866  2872  3461               	retlw	116	;'t'
  1867  2873  3474               	retlw	46	;'.'
  1868  2874  342E               	retlw	32	;' '
  1869  2875  3420               	retlw	32	;' '
  1870  2876  3420               	retlw	32	;' '
  1871  2877  3420               	retlw	80	;'P'
  1872  2878  3450               	retlw	111	;'o'
  1873  2879  346F               	retlw	119	;'w'
  1874  287A  3477               	retlw	101	;'e'
  1875  287B  3465               	retlw	114	;'r'
  1876  287C  3472               	retlw	0
  1877  287D  3400               psect	stringtext3,class=STRCODE,delta=2,noexec
  1878                           global __pstringtext3
  1879                           __pstringtext3:
  1880  287E                     	
  1881                           STR_6:	
  1882  287E                     	retlw	37	;'%'
  1883  287E  3425               	retlw	115	;'s'
  1884  287F  3473               	retlw	37	;'%'
  1885  2880  3425               	retlw	53	;'5'
  1886  2881  3435               	retlw	46	;'.'
  1887  2882  342E               	retlw	49	;'1'
  1888  2883  3431               	retlw	102	;'f'
  1889  2884  3466               	retlw	32	;' '
  1890  2885  3420               	retlw	37	;'%'
  1891  2886  3425               	retlw	37	;'%'
  1892  2887  3425               	retlw	32	;' '
  1893  2888  3420               	retlw	32	;' '
  1894  2889  3420               	retlw	32	;' '
  1895  288A  3420               	retlw	32	;' '
  1896  288B  3420               	retlw	32	;' '
  1897  288C  3420               	retlw	37	;'%'
  1898  288D  3425               	retlw	53	;'5'
  1899  288E  3435               	retlw	46	;'.'
  1900  288F  342E               	retlw	49	;'1'
  1901  2890  3431               	retlw	102	;'f'
  1902  2891  3466               	retlw	32	;' '
  1903  2892  3420               	retlw	-33
  1904  2893  34DF               	retlw	67	;'C'
  1905  2894  3443               	retlw	32	;' '
  1906  2895  3420               	retlw	32	;' '
  1907  2896  3420               	retlw	32	;' '
  1908  2897  3420               	retlw	32	;' '
  1909  2898  3420               	retlw	37	;'%'
  1910  2899  3425               	retlw	52	;'4'
  1911  289A  3434               	retlw	46	;'.'
  1912  289B  342E               	retlw	49	;'1'
  1913  289C  3431               	retlw	102	;'f'
  1914  289D  3466               	retlw	86	;'V'
  1915  289E  3456               	retlw	32	;' '
  1916  289F  3420               	retlw	32	;' '
  1917  28A0  3420               	retlw	37	;'%'
  1918  28A1  3425               	retlw	52	;'4'
  1919  28A2  3434               	retlw	46	;'.'
  1920  28A3  342E               	retlw	49	;'1'
  1921  28A4  3431               	retlw	102	;'f'
  1922  28A5  3466               	retlw	87	;'W'
  1923  28A6  3457               	retlw	0
  1924  28A7  3400               psect	stringtext4,class=STRCODE,delta=2,noexec
  1925                           global __pstringtext4
  1926                           __pstringtext4:
  1927  28A8                     	
  1928                           STR_5:	
  1929  28A8                     	retlw	37	;'%'
  1930  28A8  3425               	retlw	51	;'3'
  1931  28A9  3433               	retlw	46	;'.'
  1932  28AA  342E               	retlw	48	;'0'
  1933  28AB  3430               	retlw	102	;'f'
  1934  28AC  3466               	retlw	32	;' '
  1935  28AD  3420               	retlw	124	;'|'
  1936  28AE  347C               	retlw	32	;' '
  1937  28AF  3420               	retlw	37	;'%'
  1938  28B0  3425               	retlw	51	;'3'
  1939  28B1  3433               	retlw	46	;'.'
  1940  28B2  342E               	retlw	48	;'0'
  1941  28B3  3430               	retlw	102	;'f'
  1942  28B4  3466               	retlw	32	;' '
  1943  28B5  3420               	retlw	-33
  1944  28B6  34DF               	retlw	67	;'C'
  1945  28B7  3443               	retlw	0
  1946  28B8  3400               psect	stringtext5,class=STRCODE,delta=2,noexec
  1947                           global __pstringtext5
  1948                           __pstringtext5:
  1949  28B9                     	
  1950                           STR_4:	
  1951  28B9                     	retlw	37	;'%'
  1952  28B9  3425               	retlw	53	;'5'
  1953  28BA  3435               	retlw	46	;'.'
  1954  28BB  342E               	retlw	49	;'1'
  1955  28BC  3431               	retlw	102	;'f'
  1956  28BD  3466               	retlw	32	;' '
  1957  28BE  3420               	retlw	-33
  1958  28BF  34DF               	retlw	67	;'C'
  1959  28C0  3443               	retlw	32	;' '
  1960  28C1  3420               	retlw	32	;' '
  1961  28C2  3420               	retlw	32	;' '
  1962  28C3  3420               	retlw	32	;' '
  1963  28C4  3420               	retlw	0
  1964  28C5  3400               psect	stringtext6,class=STRCODE,delta=2,noexec
  1965                           global __pstringtext6
  1966                           __pstringtext6:
  1967  28C6                     	
  1968                           STR_8:	
  1969  28C6                     	retlw	73	;'I'
  1970  28C6  3449               	retlw	78	;'N'
  1971  28C7  344E               	retlw	70	;'F'
  1972  28C8  3446               	retlw	0
  1973  28C9  3400               psect	stringtext7,class=STRCODE,delta=2,noexec
  1974                           global __pstringtext7
  1975                           __pstringtext7:
  1976  28CA                     	
  1977                           STR_12:	
  1978  28CA                     	retlw	78	;'N'
  1979  28CA  344E               	retlw	65	;'A'
  1980  28CB  3441               	retlw	78	;'N'
  1981  28CC  344E               	retlw	0
  1982  28CD  3400               psect	stringtext8,class=STRCODE,delta=2,noexec
  1983                           global __pstringtext8
  1984                           __pstringtext8:
  1985  28CE                     	
  1986                           STR_9:	
  1987  28CE                     	retlw	105	;'i'
  1988  28CE  3469               	retlw	110	;'n'
  1989  28CF  346E               	retlw	102	;'f'
  1990  28D0  3466               	retlw	0
  1991  28D1  3400               psect	stringtext9,class=STRCODE,delta=2,noexec
  1992                           global __pstringtext9
  1993                           __pstringtext9:
  1994  28D2                     	
  1995                           STR_13:	
  1996  28D2                     	retlw	110	;'n'
  1997  28D2  346E               	retlw	97	;'a'
  1998  28D3  3461               	retlw	110	;'n'
  1999  28D4  346E               	retlw	0
  2000  28D5  3400               psect	stringtext10,class=STRCODE,delta=2,noexec
  2001                           global __pstringtext10
  2002                           __pstringtext10:
  2003  28D6                     	
  2004                           STR_16:	
  2005  28D6                     	retlw	108	;'l'
  2006  28D6  346C               	retlw	102	;'f'
  2007  28D7  3466               	retlw	0
  2008  28D8  3400               psect	stringtext11,class=STRCODE,delta=2,noexec
  2009                           global __pstringtext11
  2010                           __pstringtext11:
  2011  0000                     STR_1	equ	STR_3+36
  2012  2871                     STR_10	equ	STR_9+0
  2013  28CE                     STR_11	equ	STR_9+0
  2014  28CE                     STR_14	equ	STR_9+0
  2015  28CE                     STR_15	equ	STR_9+0
  2016  28CE                     STR_17	equ	STR_16+0
  2017  28D6                     STR_18	equ	STR_16+0
  2018  28D6                     STR_19	equ	STR_16+0
  2019  28D6                     STR_20	equ	STR_16+0
  2020  28D6                     STR_2	equ	STR_6+27
  2021  2899                     ; #config settings
  2022                           global __CFG_FEXTOSC$OFF
  2023                           __CFG_FEXTOSC$OFF equ 0x0
  2024  0000                     global __CFG_RSTOSC$HFINT1
  2025                           __CFG_RSTOSC$HFINT1 equ 0x0
  2026  0000                     global __CFG_CLKOUTEN$OFF
  2027                           __CFG_CLKOUTEN$OFF equ 0x0
  2028  0000                     global __CFG_CSWEN$ON
  2029                           __CFG_CSWEN$ON equ 0x0
  2030  0000                     global __CFG_FCMEN$ON
  2031                           __CFG_FCMEN$ON equ 0x0
  2032  0000                     global __CFG_MCLRE$ON
  2033                           __CFG_MCLRE$ON equ 0x0
  2034  0000                     global __CFG_PWRTE$OFF
  2035                           __CFG_PWRTE$OFF equ 0x0
  2036  0000                     global __CFG_LPBOREN$OFF
  2037                           __CFG_LPBOREN$OFF equ 0x0
  2038  0000                     global __CFG_BOREN$ON
  2039                           __CFG_BOREN$ON equ 0x0
  2040  0000                     global __CFG_BORV$LO
  2041                           __CFG_BORV$LO equ 0x0
  2042  0000                     global __CFG_ZCD$OFF
  2043                           __CFG_ZCD$OFF equ 0x0
  2044  0000                     global __CFG_PPS1WAY$ON
  2045                           __CFG_PPS1WAY$ON equ 0x0
  2046  0000                     global __CFG_STVREN$ON
  2047                           __CFG_STVREN$ON equ 0x0
  2048  0000                     global __CFG_WDTCPS$WDTCPS_31
  2049                           __CFG_WDTCPS$WDTCPS_31 equ 0x0
  2050  0000                     global __CFG_WDTE$OFF
  2051                           __CFG_WDTE$OFF equ 0x0
  2052  0000                     global __CFG_WDTCWS$WDTCWS_7
  2053                           __CFG_WDTCWS$WDTCWS_7 equ 0x0
  2054  0000                     global __CFG_WDTCCS$SC
  2055                           __CFG_WDTCCS$SC equ 0x0
  2056  0000                     global __CFG_BBSIZE$BB512
  2057                           __CFG_BBSIZE$BB512 equ 0x0
  2058  0000                     global __CFG_BBEN$OFF
  2059                           __CFG_BBEN$OFF equ 0x0
  2060  0000                     global __CFG_SAFEN$OFF
  2061                           __CFG_SAFEN$OFF equ 0x0
  2062  0000                     global __CFG_WRTAPP$OFF
  2063                           __CFG_WRTAPP$OFF equ 0x0
  2064  0000                     global __CFG_WRTB$OFF
  2065                           __CFG_WRTB$OFF equ 0x0
  2066  0000                     global __CFG_WRTC$OFF
  2067                           __CFG_WRTC$OFF equ 0x0
  2068  0000                     global __CFG_WRTSAF$OFF
  2069                           __CFG_WRTSAF$OFF equ 0x0
  2070  0000                     global __CFG_LVP$ON
  2071                           __CFG_LVP$ON equ 0x0
  2072  0000                     global __CFG_CP$OFF
  2073                           __CFG_CP$OFF equ 0x0
  2074  0000                     	file	"C:\Users\Ondre\AppData\Local\Temp\sdjs."
  2075                           	line	#
  2076                           psect cinit,class=CODE,delta=2
  2077                           global start_initialization
  2078                           start_initialization:
  2079  0097                     
  2080                           global __initialization
  2081                           __initialization:
  2082  0097                     psect	bssCOMMON,class=COMMON,space=1,noexec
  2083                           global __pbssCOMMON
  2084                           __pbssCOMMON:
  2085  007B                     uartReceiveISR@rxCount:
  2086  007B                            ds      1
  2087  007B                     
  2088                           _g_curRotState:
  2089  007C                            ds      1
  2090  007C                     
  2091                           _g_10msTick:
  2092  007D                            ds      1
  2093  007D                     
  2094                           psect	bssBANK2,class=BANK2,space=1,noexec
  2095                           global __pbssBANK2
  2096                           __pbssBANK2:
  2097  0162                     _g_100msTick:
  2098  0162                            ds      4
  2099  0162                     
  2100                           _width:
  2101  0166                            ds      2
  2102  0166                     
  2103                           _prec:
  2104  0168                            ds      2
  2105  0168                     
  2106                           _flags:
  2107  016A                            ds      2
  2108  016A                     
  2109                           uartReceiveISR@checksum:
  2110  016C                            ds      1
  2111  016C                     
  2112                           _g_pbState:
  2113  016D                            ds      1
  2114  016D                     
  2115                           _g_rotDir:
  2116  016E                            ds      1
  2117  016E                     
  2118                           _g_dataReady:
  2119  016F                            ds      1
  2120  016F                     
  2121                           psect	bssBANK3,class=BANK3,space=1,noexec
  2122                           global __pbssBANK3
  2123                           __pbssBANK3:
  2124  01EA                     _g_rxOErrCount:
  2125  01EA                            ds      1
  2126  01EA                     
  2127                           _g_rxFErrCount:
  2128  01EB                            ds      1
  2129  01EB                     
  2130                           _g_sensorTimer:
  2131  01EC                            ds      1
  2132  01EC                     
  2133                           _g_status:
  2134  01ED                            ds      1
  2135  01ED                     
  2136                           showMenu@page:
  2137  01EE                            ds      1
  2138  01EE                     
  2139                           showMenu@menu:
  2140  01EF                            ds      1
  2141  01EF                     
  2142                           psect	bssBANK4,class=BANK4,space=1,noexec
  2143                           global __pbssBANK4
  2144                           __pbssBANK4:
  2145  0220                     floorf@F514:
  2146  0220                            ds      4
  2147  0220                     
  2148                           ___fpclassifyf@F453:
  2149  0224                            ds      4
  2150  0224                     
  2151                           _g_power:
  2152  0228                            ds      4
  2153  0228                     
  2154                           _g_current:
  2155  022C                            ds      4
  2156  022C                     
  2157                           _g_voltage:
  2158  0230                            ds      4
  2159  0230                     
  2160                           _g_tempAux:
  2161  0234                            ds      4
  2162  0234                     
  2163                           _g_sensorVersion:
  2164  0238                            ds      4
  2165  0238                     
  2166                           _g_dewPointC:
  2167  023C                            ds      4
  2168  023C                     
  2169                           _g_relHum:
  2170  0240                            ds      4
  2171  0240                     
  2172                           _g_tempC:
  2173  0244                            ds      4
  2174  0244                     
  2175                           _nout:
  2176  0248                            ds      2
  2177  0248                     
  2178                           convertAnalogValues@avgI:
  2179  024A                            ds      2
  2180  024A                     
  2181                           convertAnalogValues@avgV:
  2182  024C                            ds      2
  2183  024C                     
  2184                           convertAnalogValues@avgT:
  2185  024E                            ds      2
  2186  024E                     
  2187                           _g_dataPacket:
  2188  0250                            ds      15
  2189  0250                     
  2190                           psect	dataBANK4,class=BANK4,space=1,noexec
  2191                           global __pdataBANK4
  2192                           __pdataBANK4:
  2193  025F                     	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  2194                           	line	548
  2195                           stoa@F1143:
  2196  025F                            ds      7
  2197  025F                     
  2198                           psect	dataBANK4
  2199                           	file	"oled.c"
  2200                           	line	153
  2201                           OLED_print_xy@F7353:
  2202  0266                            ds      4
  2203  0266                     
  2204                           psect	dataBANK4
  2205                           	file	"oled.c"
  2206                           	line	139
  2207                           OLED_setCursor@F7345:
  2208  026A                            ds      4
  2209  026A                     
  2210                           psect	bssBANK5,class=BANK5,space=1,noexec
  2211                           global __pbssBANK5
  2212                           __pbssBANK5:
  2213  02A0                     uartReceiveISR@buffer:
  2214  02A0                            ds      20
  2215  02A0                     
  2216                           psect	bssBANK6,class=BANK6,space=1,noexec
  2217                           global __pbssBANK6
  2218                           __pbssBANK6:
  2219  0320                     _dbuf:
  2220  0320                            ds      80
  2221  0320                     
  2222                           	file	"C:\Users\Ondre\AppData\Local\Temp\sdjs."
  2223                           	line	#
  2224                           psect inittext,class=CODE,delta=2
  2225                           global init_ram,btemp
  2226                           init_ram:
  2227  2141                     	movwf btemp,f
  2228  2141  00FE               initloop:
  2229  2142                     	moviw fsr0++
  2230  2142  0012               	movwi fsr1++
  2231  2143  001E               	decfsz btemp
  2232  2144  0BFE               	goto initloop
  2233  2145  2942               	retlw 0
  2234  2146  3400               ; Initialize objects allocated to BANK4
  2235                           	global __pidataBANK4,__pdataBANK4
  2236                           psect cinit,class=CODE,delta=2,merge=1
  2237                           	movlw low(__pidataBANK4)
  2238  0097  3092               	movwf fsr0l
  2239  0098  0084               	movlw high(__pidataBANK4)|80h
  2240  0099  30A1               	movwf fsr0h
  2241  009A  0085               	movlw low(__pdataBANK4)
  2242  009B  305F               	movwf fsr1l
  2243  009C  0086               	movlw high(__pdataBANK4)
  2244  009D  3002               	movwf fsr1h
  2245  009E  0087               	movlw 0Fh
  2246  009F  300F               	fcall init_ram
  2247  00A0  31A1  2141  3180   	line	#
  2248                           psect clrtext,class=CODE,delta=2
  2249                           global clear_ram0
  2250                           ;	Called with FSR0 containing the base address, and
  2251                           ;	WREG with the size to clear
  2252                           clear_ram0:
  2253  213B                     	clrwdt			;clear the watchdog before getting into this loop
  2254  213B  0064               clrloop0:
  2255  213C                     	clrf	indf0		;clear RAM location pointed to by FSR
  2256  213C  0180               	addfsr	0,1
  2257  213D  3101               	decfsz wreg		;Have we reached the end of clearing yet?
  2258  213E  0B89               	goto clrloop0	;have we reached the end yet?
  2259  213F  293C               	retlw	0		;all done for this memory range, return
  2260  2140  3400               ; Clear objects allocated to COMMON
  2261                           psect cinit,class=CODE,delta=2,merge=1
  2262                           	global __pbssCOMMON
  2263                           	clrf	((__pbssCOMMON)+0)&07Fh
  2264  00A3  01FB               	clrf	((__pbssCOMMON)+1)&07Fh
  2265  00A4  01FC               	clrf	((__pbssCOMMON)+2)&07Fh
  2266  00A5  01FD               ; Clear objects allocated to BANK2
  2267                           psect cinit,class=CODE,delta=2,merge=1
  2268                           	global __pbssBANK2
  2269                           	movlw	low(__pbssBANK2)
  2270  00A6  3062               	movwf	fsr0l
  2271  00A7  0084               	movlw	high(__pbssBANK2)
  2272  00A8  3001               	movwf	fsr0h
  2273  00A9  0085               	movlw	0Eh
  2274  00AA  300E               	fcall	clear_ram0
  2275  00AB  31A1  213B  3180   ; Clear objects allocated to BANK3
  2276                           psect cinit,class=CODE,delta=2,merge=1
  2277                           	global __pbssBANK3
  2278                           	movlb 3	; select bank3
  2279  00AE  0143               	clrf	((__pbssBANK3)+0)&07Fh
  2280  00AF  01EA               	clrf	((__pbssBANK3)+1)&07Fh
  2281  00B0  01EB               	clrf	((__pbssBANK3)+2)&07Fh
  2282  00B1  01EC               	clrf	((__pbssBANK3)+3)&07Fh
  2283  00B2  01ED               	clrf	((__pbssBANK3)+4)&07Fh
  2284  00B3  01EE               	clrf	((__pbssBANK3)+5)&07Fh
  2285  00B4  01EF               ; Clear objects allocated to BANK4
  2286                           psect cinit,class=CODE,delta=2,merge=1
  2287                           	global __pbssBANK4
  2288                           	movlw	low(__pbssBANK4)
  2289  00B5  3020               	movwf	fsr0l
  2290  00B6  0084               	movlw	high(__pbssBANK4)
  2291  00B7  3002               	movwf	fsr0h
  2292  00B8  0085               	movlw	03Fh
  2293  00B9  303F               	fcall	clear_ram0
  2294  00BA  31A1  213B  3180   ; Clear objects allocated to BANK5
  2295                           psect cinit,class=CODE,delta=2,merge=1
  2296                           	global __pbssBANK5
  2297                           	movlw	low(__pbssBANK5)
  2298  00BD  30A0               	movwf	fsr0l
  2299  00BE  0084               	movlw	high(__pbssBANK5)
  2300  00BF  3002               	movwf	fsr0h
  2301  00C0  0085               	movlw	014h
  2302  00C1  3014               	fcall	clear_ram0
  2303  00C2  31A1  213B  3180   ; Clear objects allocated to BANK6
  2304                           psect cinit,class=CODE,delta=2,merge=1
  2305                           	global __pbssBANK6
  2306                           	movlw	low(__pbssBANK6)
  2307  00C5  3020               	movwf	fsr0l
  2308  00C6  0084               	movlw	high(__pbssBANK6)
  2309  00C7  3003               	movwf	fsr0h
  2310  00C8  0085               	movlw	050h
  2311  00C9  3050               	fcall	clear_ram0
  2312  00CA  31A1  213B  3180   psect cinit,class=CODE,delta=2,merge=1
  2313                           global end_of_initialization,__end_of__initialization
  2314                           
  2315                           ;End of C runtime variable initialization code
  2316                           
  2317                           end_of_initialization:
  2318  00CD                     __end_of__initialization:
  2319  00CD                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  2320  00CD  107E               movlb 0
  2321  00CE  0140               ljmp _main	;jump to C main() function
  2322  00CF  319D  2D60         psect	cstackBANK3,class=BANK3,space=1,noexec
  2323                           global __pcstackBANK3
  2324                           __pcstackBANK3:
  2325  01A0                     	global	showMenu@s
  2326                           showMenu@s:	; 61 bytes @ 0x0
  2327  01A0                     	ds	61
  2328  01A0                     	global	showMenu@s12
  2329                           showMenu@s12:	; 12 bytes @ 0x3D
  2330  01DD                     	ds	12
  2331  01DD                     	global	showMenu@pb
  2332                           showMenu@pb:	; 1 bytes @ 0x49
  2333  01E9                     	ds	1
  2334  01E9                     psect	cstackBANK2,class=BANK2,space=1,noexec
  2335                           global __pcstackBANK2
  2336                           __pcstackBANK2:
  2337  0120                     	global	_vfpfcnvrt$945
  2338                           _vfpfcnvrt$945:	; 2 bytes @ 0x0
  2339  0120                     	ds	2
  2340  0120                     	global	_vfpfcnvrt$946
  2341                           _vfpfcnvrt$946:	; 2 bytes @ 0x2
  2342  0122                     	ds	2
  2343  0122                     	global	_vfpfcnvrt$950
  2344                           _vfpfcnvrt$950:	; 2 bytes @ 0x4
  2345  0124                     	ds	2
  2346  0124                     	global	vfpfcnvrt@cp
  2347                           vfpfcnvrt@cp:	; 1 bytes @ 0x6
  2348  0126                     	ds	1
  2349  0126                     	global	vfpfcnvrt@f
  2350                           vfpfcnvrt@f:	; 4 bytes @ 0x7
  2351  0127                     	ds	4
  2352  0127                     	global	vfpfcnvrt@ct
  2353                           vfpfcnvrt@ct:	; 3 bytes @ 0xB
  2354  012B                     	ds	3
  2355  012B                     	global	vfpfcnvrt@c
  2356                           vfpfcnvrt@c:	; 1 bytes @ 0xE
  2357  012E                     	ds	1
  2358  012E                     	global	vfpfcnvrt@fp
  2359                           vfpfcnvrt@fp:	; 1 bytes @ 0xF
  2360  012F                     	ds	1
  2361  012F                     	global	?_vfprintf
  2362                           ?_vfprintf:	; 2 bytes @ 0x10
  2363  0130                     	global	vfprintf@fmt
  2364                           vfprintf@fmt:	; 2 bytes @ 0x10
  2365  0130                     	ds	2
  2366  0130                     	global	vfprintf@ap
  2367                           vfprintf@ap:	; 1 bytes @ 0x12
  2368  0132                     	ds	1
  2369  0132                     ??_vfprintf:	; 1 bytes @ 0x13
  2370  0133                     	ds	2
  2371  0133                     	global	vfprintf@fp
  2372                           vfprintf@fp:	; 1 bytes @ 0x15
  2373  0135                     	ds	1
  2374  0135                     	global	vfprintf@cfmt
  2375                           vfprintf@cfmt:	; 2 bytes @ 0x16
  2376  0136                     	ds	2
  2377  0136                     	global	?_sprintf
  2378                           ?_sprintf:	; 2 bytes @ 0x18
  2379  0138                     	global	sprintf@fmt
  2380                           sprintf@fmt:	; 2 bytes @ 0x18
  2381  0138                     	ds	19
  2382  0138                     ??_sprintf:	; 1 bytes @ 0x2B
  2383  014B                     	ds	1
  2384  014B                     	global	sprintf@ret
  2385                           sprintf@ret:	; 2 bytes @ 0x2C
  2386  014C                     	ds	2
  2387  014C                     	global	sprintf@s
  2388                           sprintf@s:	; 1 bytes @ 0x2E
  2389  014E                     	ds	1
  2390  014E                     	global	sprintf@ap
  2391                           sprintf@ap:	; 1 bytes @ 0x2F
  2392  014F                     	ds	1
  2393  014F                     	global	sprintf@f
  2394                           sprintf@f:	; 5 bytes @ 0x30
  2395  0150                     	ds	5
  2396  0150                     ??_showMenu:	; 1 bytes @ 0x35
  2397  0155                     	ds	2
  2398  0155                     ??_main:	; 1 bytes @ 0x37
  2399  0157                     	ds	2
  2400  0157                     	global	main@sensorTime
  2401                           main@sensorTime:	; 4 bytes @ 0x39
  2402  0159                     	ds	4
  2403  0159                     	global	main@sensorTimeout
  2404                           main@sensorTimeout:	; 4 bytes @ 0x3D
  2405  015D                     	ds	4
  2406  015D                     	global	main@state
  2407                           main@state:	; 1 bytes @ 0x41
  2408  0161                     	ds	1
  2409  0161                     psect	cstackBANK1,class=BANK1,space=1,noexec
  2410                           global __pcstackBANK1
  2411                           __pcstackBANK1:
  2412  00A0                     	global	floorf@m
  2413                           floorf@m:	; 4 bytes @ 0x0
  2414  00A0                     	ds	4
  2415  00A0                     	global	floorf@e
  2416                           floorf@e:	; 2 bytes @ 0x4
  2417  00A4                     	ds	2
  2418  00A4                     	global	floorf@u
  2419                           floorf@u:	; 4 bytes @ 0x6
  2420  00A6                     	ds	4
  2421  00A6                     	global	?_efgtoa
  2422                           ?_efgtoa:	; 2 bytes @ 0xA
  2423  00AA                     	global	efgtoa@f
  2424                           efgtoa@f:	; 4 bytes @ 0xA
  2425  00AA                     	ds	4
  2426  00AA                     	global	efgtoa@c
  2427                           efgtoa@c:	; 1 bytes @ 0xE
  2428  00AE                     	ds	1
  2429  00AE                     	global	efgtoa@ou
  2430                           efgtoa@ou:	; 4 bytes @ 0xF
  2431  00AF                     	ds	4
  2432  00AF                     	global	_efgtoa$909
  2433                           _efgtoa$909:	; 2 bytes @ 0x13
  2434  00B3                     	ds	2
  2435  00B3                     	global	_efgtoa$910
  2436                           _efgtoa$910:	; 2 bytes @ 0x15
  2437  00B5                     	ds	2
  2438  00B5                     	global	_efgtoa$915
  2439                           _efgtoa$915:	; 2 bytes @ 0x17
  2440  00B7                     	ds	2
  2441  00B7                     	global	_efgtoa$919
  2442                           _efgtoa$919:	; 2 bytes @ 0x19
  2443  00B9                     	ds	2
  2444  00B9                     	global	_efgtoa$920
  2445                           _efgtoa$920:	; 2 bytes @ 0x1B
  2446  00BB                     	ds	2
  2447  00BB                     	global	_efgtoa$921
  2448                           _efgtoa$921:	; 2 bytes @ 0x1D
  2449  00BD                     	ds	2
  2450  00BD                     	global	efgtoa@t
  2451                           efgtoa@t:	; 2 bytes @ 0x1F
  2452  00BF                     	ds	2
  2453  00BF                     	global	efgtoa@pp
  2454                           efgtoa@pp:	; 2 bytes @ 0x21
  2455  00C1                     	ds	2
  2456  00C1                     	global	efgtoa@m
  2457                           efgtoa@m:	; 2 bytes @ 0x23
  2458  00C3                     	ds	2
  2459  00C3                     	global	efgtoa@ne
  2460                           efgtoa@ne:	; 2 bytes @ 0x25
  2461  00C5                     	ds	2
  2462  00C5                     	global	efgtoa@d
  2463                           efgtoa@d:	; 2 bytes @ 0x27
  2464  00C7                     	ds	2
  2465  00C7                     	global	efgtoa@sign
  2466                           efgtoa@sign:	; 2 bytes @ 0x29
  2467  00C9                     	ds	2
  2468  00C9                     	global	efgtoa@fp
  2469                           efgtoa@fp:	; 1 bytes @ 0x2B
  2470  00CB                     	ds	1
  2471  00CB                     	global	efgtoa@p
  2472                           efgtoa@p:	; 2 bytes @ 0x2C
  2473  00CC                     	ds	2
  2474  00CC                     	global	efgtoa@nmode
  2475                           efgtoa@nmode:	; 1 bytes @ 0x2E
  2476  00CE                     	ds	1
  2477  00CE                     	global	efgtoa@w
  2478                           efgtoa@w:	; 2 bytes @ 0x2F
  2479  00CF                     	ds	2
  2480  00CF                     	global	efgtoa@mode
  2481                           efgtoa@mode:	; 1 bytes @ 0x31
  2482  00D1                     	ds	1
  2483  00D1                     	global	efgtoa@h
  2484                           efgtoa@h:	; 4 bytes @ 0x32
  2485  00D2                     	ds	4
  2486  00D2                     	global	efgtoa@l
  2487                           efgtoa@l:	; 4 bytes @ 0x36
  2488  00D6                     	ds	4
  2489  00D6                     	global	efgtoa@i
  2490                           efgtoa@i:	; 2 bytes @ 0x3A
  2491  00DA                     	ds	2
  2492  00DA                     	global	efgtoa@g
  2493                           efgtoa@g:	; 4 bytes @ 0x3C
  2494  00DC                     	ds	4
  2495  00DC                     	global	efgtoa@e
  2496                           efgtoa@e:	; 2 bytes @ 0x40
  2497  00E0                     	ds	2
  2498  00E0                     	global	efgtoa@n
  2499                           efgtoa@n:	; 2 bytes @ 0x42
  2500  00E2                     	ds	2
  2501  00E2                     	global	efgtoa@u
  2502                           efgtoa@u:	; 4 bytes @ 0x44
  2503  00E4                     	ds	4
  2504  00E4                     	global	?_vfpfcnvrt
  2505                           ?_vfpfcnvrt:	; 2 bytes @ 0x48
  2506  00E8                     	global	vfpfcnvrt@fmt
  2507                           vfpfcnvrt@fmt:	; 1 bytes @ 0x48
  2508  00E8                     	ds	1
  2509  00E8                     	global	vfpfcnvrt@ap
  2510                           vfpfcnvrt@ap:	; 1 bytes @ 0x49
  2511  00E9                     	ds	1
  2512  00E9                     ??_vfpfcnvrt:	; 1 bytes @ 0x4A
  2513  00EA                     	ds	6
  2514  00EA                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  2515                           global __pcstackCOMMON
  2516                           __pcstackCOMMON:
  2517  0070                     ?_initialize:	; 1 bytes @ 0x0
  2518  0070                     ?_OLED_init:	; 1 bytes @ 0x0
  2519  0070                     ?_OLED_returnHome:	; 1 bytes @ 0x0
  2520  0070                     ?_OLED_command:	; 1 bytes @ 0x0
  2521  0070                     ?_convertAnalogValues:	; 1 bytes @ 0x0
  2522  0070                     ?_checkStatus:	; 1 bytes @ 0x0
  2523  0070                     ?_uartSendByte:	; 1 bytes @ 0x0
  2524  0070                     ?_handleSensorData:	; 1 bytes @ 0x0
  2525  0070                     ?_showMenu:	; 1 bytes @ 0x0
  2526  0070                     ?_getPB:	; 1 bytes @ 0x0
  2527  0070                     ?_getRotDir:	; 1 bytes @ 0x0
  2528  0070                     ?_OLED_scrollDisplayLeft:	; 1 bytes @ 0x0
  2529  0070                     ?_OLED_scrollDisplayRight:	; 1 bytes @ 0x0
  2530  0070                     ?_pushButtonISR:	; 1 bytes @ 0x0
  2531  0070                     ??_pushButtonISR:	; 1 bytes @ 0x0
  2532  0070                     ?_rotISR:	; 1 bytes @ 0x0
  2533  0070                     ??_rotISR:	; 1 bytes @ 0x0
  2534  0070                     ?_uartReceiveISR:	; 1 bytes @ 0x0
  2535  0070                     ?_strncpy:	; 1 bytes @ 0x0
  2536  0070                     ?_putch:	; 1 bytes @ 0x0
  2537  0070                     ?_main:	; 1 bytes @ 0x0
  2538  0070                     ?_ISR:	; 1 bytes @ 0x0
  2539  0070                     ?_OLED_pulseEnable:	; 1 bytes @ 0x0
  2540  0070                     ?_OLED_write4bits:	; 1 bytes @ 0x0
  2541  0070                     ?_OLED_waitForReady:	; 1 bytes @ 0x0
  2542  0070                     ?_OLED_write:	; 1 bytes @ 0x0
  2543  0070                     	global	?___llmod
  2544                           ?___llmod:	; 4 bytes @ 0x0
  2545  0070                     putch@c:	; 1 bytes @ 0x0
  2546  0070                     	global	strncpy@s
  2547                           strncpy@s:	; 1 bytes @ 0x0
  2548  0070                     	global	___llmod@divisor
  2549                           ___llmod@divisor:	; 4 bytes @ 0x0
  2550  0070                     	ds	1
  2551  0070                     	global	strncpy@n
  2552                           strncpy@n:	; 2 bytes @ 0x1
  2553  0071                     	ds	2
  2554  0071                     ??_strncpy:	; 1 bytes @ 0x3
  2555  0073                     	ds	1
  2556  0073                     	global	strncpy@d
  2557                           strncpy@d:	; 1 bytes @ 0x4
  2558  0074                     	global	___llmod@dividend
  2559                           ___llmod@dividend:	; 4 bytes @ 0x4
  2560  0074                     	ds	1
  2561  0074                     	global	strncpy@cp
  2562                           strncpy@cp:	; 1 bytes @ 0x5
  2563  0075                     	ds	1
  2564  0075                     ??_uartReceiveISR:	; 1 bytes @ 0x6
  2565  0076                     	ds	1
  2566  0076                     	global	rotISR@input
  2567                           rotISR@input:	; 1 bytes @ 0x7
  2568  0077                     	ds	1
  2569  0077                     ??___llmod:	; 1 bytes @ 0x8
  2570  0078                     	ds	1
  2571  0078                     	global	___llmod@counter
  2572                           ___llmod@counter:	; 1 bytes @ 0x9
  2573  0079                     	ds	1
  2574  0079                     ??_ISR:	; 1 bytes @ 0xA
  2575  007A                     	ds	1
  2576  007A                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2577                           global __pcstackBANK0
  2578                           __pcstackBANK0:
  2579  0020                     ?___fleq:	; 1 bit 
  2580  0020                     ??_initialize:	; 1 bytes @ 0x0
  2581  0020                     ??_uartSendByte:	; 1 bytes @ 0x0
  2582  0020                     ??_getPB:	; 1 bytes @ 0x0
  2583  0020                     ??_getRotDir:	; 1 bytes @ 0x0
  2584  0020                     ?_strcpy:	; 1 bytes @ 0x0
  2585  0020                     ??_putch:	; 1 bytes @ 0x0
  2586  0020                     ??_OLED_pulseEnable:	; 1 bytes @ 0x0
  2587  0020                     ??_OLED_write4bits:	; 1 bytes @ 0x0
  2588  0020                     ??_OLED_waitForReady:	; 1 bytes @ 0x0
  2589  0020                     ?_fputc:	; 2 bytes @ 0x0
  2590  0020                     	global	?_strlen
  2591                           ?_strlen:	; 2 bytes @ 0x0
  2592  0020                     	global	?___fpclassifyf
  2593                           ?___fpclassifyf:	; 2 bytes @ 0x0
  2594  0020                     	global	?_isupper
  2595                           ?_isupper:	; 2 bytes @ 0x0
  2596  0020                     	global	?_isdigit
  2597                           ?_isdigit:	; 2 bytes @ 0x0
  2598  0020                     	global	?_strncmp
  2599                           ?_strncmp:	; 2 bytes @ 0x0
  2600  0020                     	global	?__Umul8_16
  2601                           ?__Umul8_16:	; 2 bytes @ 0x0
  2602  0020                     	global	?_isspace
  2603                           ?_isspace:	; 2 bytes @ 0x0
  2604  0020                     	global	?_adcGetConversion
  2605                           ?_adcGetConversion:	; 2 bytes @ 0x0
  2606  0020                     	global	?___wmul
  2607                           ?___wmul:	; 2 bytes @ 0x0
  2608  0020                     	global	?___awdiv
  2609                           ?___awdiv:	; 2 bytes @ 0x0
  2610  0020                     	global	?___awmod
  2611                           ?___awmod:	; 2 bytes @ 0x0
  2612  0020                     	global	?_timeNow
  2613                           ?_timeNow:	; 4 bytes @ 0x0
  2614  0020                     	global	?___lmul
  2615                           ?___lmul:	; 4 bytes @ 0x0
  2616  0020                     	global	?___flneg
  2617                           ?___flneg:	; 4 bytes @ 0x0
  2618  0020                     	global	?___fltol
  2619                           ?___fltol:	; 4 bytes @ 0x0
  2620  0020                     	global	?___xxtofl
  2621                           ?___xxtofl:	; 4 bytes @ 0x0
  2622  0020                     	global	uartSendByte@s
  2623                           uartSendByte@s:	; 1 bytes @ 0x0
  2624  0020                     	global	OLED_waitForReady@busy
  2625                           OLED_waitForReady@busy:	; 1 bytes @ 0x0
  2626  0020                     	global	__Umul8_16@multiplicand
  2627                           __Umul8_16@multiplicand:	; 1 bytes @ 0x0
  2628  0020                     	global	___wmul@multiplier
  2629                           ___wmul@multiplier:	; 2 bytes @ 0x0
  2630  0020                     	global	___awdiv@divisor
  2631                           ___awdiv@divisor:	; 2 bytes @ 0x0
  2632  0020                     	global	___awmod@divisor
  2633                           ___awmod@divisor:	; 2 bytes @ 0x0
  2634  0020                     	global	isdigit@c
  2635                           isdigit@c:	; 2 bytes @ 0x0
  2636  0020                     	global	isspace@c
  2637                           isspace@c:	; 2 bytes @ 0x0
  2638  0020                     	global	isupper@c
  2639                           isupper@c:	; 2 bytes @ 0x0
  2640  0020                     	global	fputc@c
  2641                           fputc@c:	; 2 bytes @ 0x0
  2642  0020                     	global	strcpy@src
  2643                           strcpy@src:	; 2 bytes @ 0x0
  2644  0020                     	global	strlen@s
  2645                           strlen@s:	; 2 bytes @ 0x0
  2646  0020                     	global	strncmp@_r
  2647                           strncmp@_r:	; 2 bytes @ 0x0
  2648  0020                     	global	___lmul@multiplier
  2649                           ___lmul@multiplier:	; 4 bytes @ 0x0
  2650  0020                     	global	___fleq@ff1
  2651                           ___fleq@ff1:	; 4 bytes @ 0x0
  2652  0020                     	global	___flneg@f1
  2653                           ___flneg@f1:	; 4 bytes @ 0x0
  2654  0020                     	global	___fltol@f1
  2655                           ___fltol@f1:	; 4 bytes @ 0x0
  2656  0020                     	global	___xxtofl@val
  2657                           ___xxtofl@val:	; 4 bytes @ 0x0
  2658  0020                     	global	___fpclassifyf@x
  2659                           ___fpclassifyf@x:	; 4 bytes @ 0x0
  2660  0020                     	ds	1
  2661  0020                     	global	getRotDir@ret
  2662                           getRotDir@ret:	; 1 bytes @ 0x1
  2663  0021                     	global	getPB@ret
  2664                           getPB@ret:	; 1 bytes @ 0x1
  2665  0021                     	ds	1
  2666  0021                     ??_strlen:	; 1 bytes @ 0x2
  2667  0022                     ??_isupper:	; 1 bytes @ 0x2
  2668  0022                     ??_strcpy:	; 1 bytes @ 0x2
  2669  0022                     ??_isdigit:	; 1 bytes @ 0x2
  2670  0022                     ??__Umul8_16:	; 1 bytes @ 0x2
  2671  0022                     ??_isspace:	; 1 bytes @ 0x2
  2672  0022                     ??_adcGetConversion:	; 1 bytes @ 0x2
  2673  0022                     	global	OLED_write4bits@value
  2674                           OLED_write4bits@value:	; 1 bytes @ 0x2
  2675  0022                     	global	fputc@fp
  2676                           fputc@fp:	; 1 bytes @ 0x2
  2677  0022                     	global	___wmul@multiplicand
  2678                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  2679  0022                     	global	___awdiv@dividend
  2680                           ___awdiv@dividend:	; 2 bytes @ 0x2
  2681  0022                     	global	___awmod@dividend
  2682                           ___awmod@dividend:	; 2 bytes @ 0x2
  2683  0022                     	global	strncmp@n
  2684                           strncmp@n:	; 2 bytes @ 0x2
  2685  0022                     	ds	1
  2686  0022                     ??_fputc:	; 1 bytes @ 0x3
  2687  0023                     ?_OLED_send:	; 1 bytes @ 0x3
  2688  0023                     	global	adcGetConversion@channel
  2689                           adcGetConversion@channel:	; 1 bytes @ 0x3
  2690  0023                     	global	OLED_send@mode
  2691                           OLED_send@mode:	; 1 bytes @ 0x3
  2692  0023                     	ds	1
  2693  0023                     ??_timeNow:	; 1 bytes @ 0x4
  2694  0024                     ??___fpclassifyf:	; 1 bytes @ 0x4
  2695  0024                     ??_strncmp:	; 1 bytes @ 0x4
  2696  0024                     ??_OLED_send:	; 1 bytes @ 0x4
  2697  0024                     ??___wmul:	; 1 bytes @ 0x4
  2698  0024                     ??___awdiv:	; 1 bytes @ 0x4
  2699  0024                     ??___awmod:	; 1 bytes @ 0x4
  2700  0024                     ??___flneg:	; 1 bytes @ 0x4
  2701  0024                     ??___fltol:	; 1 bytes @ 0x4
  2702  0024                     ??___xxtofl:	; 1 bytes @ 0x4
  2703  0024                     	global	?_timeSince
  2704                           ?_timeSince:	; 4 bytes @ 0x4
  2705  0024                     	global	_isspace$1286
  2706                           _isspace$1286:	; 1 bytes @ 0x4
  2707  0024                     	global	___wmul@product
  2708                           ___wmul@product:	; 2 bytes @ 0x4
  2709  0024                     	global	strcpy@s
  2710                           strcpy@s:	; 2 bytes @ 0x4
  2711  0024                     	global	strlen@a
  2712                           strlen@a:	; 2 bytes @ 0x4
  2713  0024                     	global	__Umul8_16@product
  2714                           __Umul8_16@product:	; 2 bytes @ 0x4
  2715  0024                     	global	timeSince@since
  2716                           timeSince@since:	; 4 bytes @ 0x4
  2717  0024                     	global	___lmul@multiplicand
  2718                           ___lmul@multiplicand:	; 4 bytes @ 0x4
  2719  0024                     	global	___fleq@ff2
  2720                           ___fleq@ff2:	; 4 bytes @ 0x4
  2721  0024                     	ds	1
  2722  0024                     	global	OLED_send@value
  2723                           OLED_send@value:	; 1 bytes @ 0x5
  2724  0025                     	global	___awdiv@counter
  2725                           ___awdiv@counter:	; 1 bytes @ 0x5
  2726  0025                     	global	___awmod@counter
  2727                           ___awmod@counter:	; 1 bytes @ 0x5
  2728  0025                     	ds	1
  2729  0025                     ??_OLED_command:	; 1 bytes @ 0x6
  2730  0026                     ??_OLED_write:	; 1 bytes @ 0x6
  2731  0026                     	global	?_tolower
  2732                           ?_tolower:	; 2 bytes @ 0x6
  2733  0026                     	global	?_atoi
  2734                           ?_atoi:	; 2 bytes @ 0x6
  2735  0026                     	global	OLED_command@value
  2736                           OLED_command@value:	; 1 bytes @ 0x6
  2737  0026                     	global	OLED_write@value
  2738                           OLED_write@value:	; 1 bytes @ 0x6
  2739  0026                     	global	___awdiv@sign
  2740                           ___awdiv@sign:	; 1 bytes @ 0x6
  2741  0026                     	global	___awmod@sign
  2742                           ___awmod@sign:	; 1 bytes @ 0x6
  2743  0026                     	global	strcpy@d
  2744                           strcpy@d:	; 1 bytes @ 0x6
  2745  0026                     	global	strncmp@_l
  2746                           strncmp@_l:	; 1 bytes @ 0x6
  2747  0026                     	global	atoi@s
  2748                           atoi@s:	; 2 bytes @ 0x6
  2749  0026                     	global	tolower@c
  2750                           tolower@c:	; 2 bytes @ 0x6
  2751  0026                     	global	__Umul8_16@word_mpld
  2752                           __Umul8_16@word_mpld:	; 2 bytes @ 0x6
  2753  0026                     	ds	1
  2754  0026                     ??_OLED_init:	; 1 bytes @ 0x7
  2755  0027                     ??_OLED_returnHome:	; 1 bytes @ 0x7
  2756  0027                     ?_OLED_print_xy:	; 1 bytes @ 0x7
  2757  0027                     ?_menuInput:	; 1 bytes @ 0x7
  2758  0027                     ??_OLED_scrollDisplayLeft:	; 1 bytes @ 0x7
  2759  0027                     ??_OLED_scrollDisplayRight:	; 1 bytes @ 0x7
  2760  0027                     	global	menuInput@numPages
  2761                           menuInput@numPages:	; 1 bytes @ 0x7
  2762  0027                     	global	OLED_print_xy@row
  2763                           OLED_print_xy@row:	; 1 bytes @ 0x7
  2764  0027                     	global	strcpy@dest
  2765                           strcpy@dest:	; 1 bytes @ 0x7
  2766  0027                     	global	___awdiv@quotient
  2767                           ___awdiv@quotient:	; 2 bytes @ 0x7
  2768  0027                     	global	strncmp@r
  2769                           strncmp@r:	; 2 bytes @ 0x7
  2770  0027                     	ds	1
  2771  0027                     ??_timeSince:	; 1 bytes @ 0x8
  2772  0028                     ??_tolower:	; 1 bytes @ 0x8
  2773  0028                     ??_atoi:	; 1 bytes @ 0x8
  2774  0028                     ??___lmul:	; 1 bytes @ 0x8
  2775  0028                     ??___fleq:	; 1 bytes @ 0x8
  2776  0028                     ?_fputs:	; 2 bytes @ 0x8
  2777  0028                     	global	?_stoa
  2778                           ?_stoa:	; 2 bytes @ 0x8
  2779  0028                     	global	menuInput@menu
  2780                           menuInput@menu:	; 1 bytes @ 0x8
  2781  0028                     	global	stoa@s
  2782                           stoa@s:	; 1 bytes @ 0x8
  2783  0028                     	global	___xxtofl@sign
  2784                           ___xxtofl@sign:	; 1 bytes @ 0x8
  2785  0028                     	global	fputs@fp
  2786                           fputs@fp:	; 1 bytes @ 0x8
  2787  0028                     	global	__Umul8_16@multiplier
  2788                           __Umul8_16@multiplier:	; 1 bytes @ 0x8
  2789  0028                     	global	OLED_print_xy@s
  2790                           OLED_print_xy@s:	; 2 bytes @ 0x8
  2791  0028                     	global	___lmul@product
  2792                           ___lmul@product:	; 4 bytes @ 0x8
  2793  0028                     	ds	1
  2794  0028                     ??_fputs:	; 1 bytes @ 0x9
  2795  0029                     	global	menuInput@pbShort
  2796                           menuInput@pbShort:	; 1 bytes @ 0x9
  2797  0029                     	global	___fltol@sign1
  2798                           ___fltol@sign1:	; 1 bytes @ 0x9
  2799  0029                     	global	___xxtofl@exp
  2800                           ___xxtofl@exp:	; 1 bytes @ 0x9
  2801  0029                     	global	strncmp@l
  2802                           strncmp@l:	; 1 bytes @ 0x9
  2803  0029                     	ds	1
  2804  0029                     ??_OLED_print_xy:	; 1 bytes @ 0xA
  2805  002A                     ??_stoa:	; 1 bytes @ 0xA
  2806  002A                     	global	menuInput@pbLong
  2807                           menuInput@pbLong:	; 1 bytes @ 0xA
  2808  002A                     	global	___fltol@exp1
  2809                           ___fltol@exp1:	; 1 bytes @ 0xA
  2810  002A                     	global	___fpclassifyf@e
  2811                           ___fpclassifyf@e:	; 2 bytes @ 0xA
  2812  002A                     	global	___xxtofl@arg
  2813                           ___xxtofl@arg:	; 4 bytes @ 0xA
  2814  002A                     	ds	1
  2815  002A                     	global	menuInput@timeout
  2816                           menuInput@timeout:	; 1 bytes @ 0xB
  2817  002B                     	global	OLED_print_xy@row_offsets
  2818                           OLED_print_xy@row_offsets:	; 4 bytes @ 0xB
  2819  002B                     	ds	1
  2820  002B                     ??_menuInput:	; 1 bytes @ 0xC
  2821  002C                     	global	?_ema
  2822                           ?_ema:	; 2 bytes @ 0xC
  2823  002C                     	global	fputs@c
  2824                           fputs@c:	; 1 bytes @ 0xC
  2825  002C                     	global	ema@in
  2826                           ema@in:	; 2 bytes @ 0xC
  2827  002C                     	global	atoi@neg
  2828                           atoi@neg:	; 2 bytes @ 0xC
  2829  002C                     	global	_tolower$1377
  2830                           _tolower$1377:	; 2 bytes @ 0xC
  2831  002C                     	global	___fpclassifyf@u
  2832                           ___fpclassifyf@u:	; 4 bytes @ 0xC
  2833  002C                     	ds	1
  2834  002C                     	global	fputs@i
  2835                           fputs@i:	; 2 bytes @ 0xD
  2836  002D                     	global	stoa@nuls
  2837                           stoa@nuls:	; 7 bytes @ 0xD
  2838  002D                     	ds	1
  2839  002D                     ??_handleSensorData:	; 1 bytes @ 0xE
  2840  002E                     	global	?___flmul
  2841                           ?___flmul:	; 4 bytes @ 0xE
  2842  002E                     	global	menuInput@dir
  2843                           menuInput@dir:	; 1 bytes @ 0xE
  2844  002E                     	global	ema@average
  2845                           ema@average:	; 2 bytes @ 0xE
  2846  002E                     	global	_atoi$1255
  2847                           _atoi$1255:	; 2 bytes @ 0xE
  2848  002E                     	global	___flmul@b
  2849                           ___flmul@b:	; 4 bytes @ 0xE
  2850  002E                     	ds	1
  2851  002E                     	global	menuInput@pb
  2852                           menuInput@pb:	; 1 bytes @ 0xF
  2853  002F                     	global	OLED_print_xy@col
  2854                           OLED_print_xy@col:	; 1 bytes @ 0xF
  2855  002F                     	global	fputs@s
  2856                           fputs@s:	; 1 bytes @ 0xF
  2857  002F                     	ds	1
  2858  002F                     	global	?_pad
  2859                           ?_pad:	; 2 bytes @ 0x10
  2860  0030                     	global	menuInput@n
  2861                           menuInput@n:	; 1 bytes @ 0x10
  2862  0030                     	global	pad@buf
  2863                           pad@buf:	; 1 bytes @ 0x10
  2864  0030                     	global	_atoi$1257
  2865                           _atoi$1257:	; 2 bytes @ 0x10
  2866  0030                     	global	ema@alpha
  2867                           ema@alpha:	; 4 bytes @ 0x10
  2868  0030                     	ds	1
  2869  0030                     	global	menuInput@page
  2870                           menuInput@page:	; 1 bytes @ 0x11
  2871  0031                     	global	pad@p
  2872                           pad@p:	; 2 bytes @ 0x11
  2873  0031                     	ds	1
  2874  0031                     	global	_atoi$1256
  2875                           _atoi$1256:	; 1 bytes @ 0x12
  2876  0032                     	global	___flmul@a
  2877                           ___flmul@a:	; 4 bytes @ 0x12
  2878  0032                     	ds	1
  2879  0032                     ??_pad:	; 1 bytes @ 0x13
  2880  0033                     	global	atoi@n
  2881                           atoi@n:	; 2 bytes @ 0x13
  2882  0033                     	ds	1
  2883  0033                     ??_ema:	; 1 bytes @ 0x14
  2884  0034                     	global	pad@i
  2885                           pad@i:	; 2 bytes @ 0x14
  2886  0034                     	global	stoa@i
  2887                           stoa@i:	; 2 bytes @ 0x14
  2888  0034                     	global	timeSince@now
  2889                           timeSince@now:	; 4 bytes @ 0x14
  2890  0034                     	ds	2
  2891  0034                     ??___flmul:	; 1 bytes @ 0x16
  2892  0036                     	global	pad@w
  2893                           pad@w:	; 2 bytes @ 0x16
  2894  0036                     	global	stoa@w
  2895                           stoa@w:	; 2 bytes @ 0x16
  2896  0036                     	ds	2
  2897  0036                     	global	pad@fp
  2898                           pad@fp:	; 1 bytes @ 0x18
  2899  0038                     	global	stoa@fp
  2900                           stoa@fp:	; 1 bytes @ 0x18
  2901  0038                     	ds	1
  2902  0038                     	global	stoa@cp
  2903                           stoa@cp:	; 2 bytes @ 0x19
  2904  0039                     	ds	2
  2905  0039                     	global	___flmul@sign
  2906                           ___flmul@sign:	; 1 bytes @ 0x1B
  2907  003B                     	global	stoa@p
  2908                           stoa@p:	; 2 bytes @ 0x1B
  2909  003B                     	ds	1
  2910  003B                     	global	ema@tmp
  2911                           ema@tmp:	; 4 bytes @ 0x1C
  2912  003C                     	global	___flmul@grs
  2913                           ___flmul@grs:	; 4 bytes @ 0x1C
  2914  003C                     	ds	1
  2915  003C                     	global	stoa@l
  2916                           stoa@l:	; 2 bytes @ 0x1D
  2917  003D                     	ds	3
  2918  003D                     	global	___flmul@aexp
  2919                           ___flmul@aexp:	; 1 bytes @ 0x20
  2920  0040                     	ds	1
  2921  0040                     	global	___flmul@bexp
  2922                           ___flmul@bexp:	; 1 bytes @ 0x21
  2923  0041                     	ds	1
  2924  0041                     	global	___flmul@prod
  2925                           ___flmul@prod:	; 4 bytes @ 0x22
  2926  0042                     	ds	4
  2927  0042                     	global	___flmul@temp
  2928                           ___flmul@temp:	; 2 bytes @ 0x26
  2929  0046                     	ds	2
  2930  0046                     ?___flge:	; 1 bit 
  2931  0048                     	global	?___fladd
  2932                           ?___fladd:	; 4 bytes @ 0x28
  2933  0048                     	global	?___fldiv
  2934                           ?___fldiv:	; 4 bytes @ 0x28
  2935  0048                     	global	___flge@ff1
  2936                           ___flge@ff1:	; 4 bytes @ 0x28
  2937  0048                     	global	___fladd@b
  2938                           ___fladd@b:	; 4 bytes @ 0x28
  2939  0048                     	global	___fldiv@a
  2940                           ___fldiv@a:	; 4 bytes @ 0x28
  2941  0048                     	ds	4
  2942  0048                     	global	___flge@ff2
  2943                           ___flge@ff2:	; 4 bytes @ 0x2C
  2944  004C                     	global	___fladd@a
  2945                           ___fladd@a:	; 4 bytes @ 0x2C
  2946  004C                     	global	___fldiv@b
  2947                           ___fldiv@b:	; 4 bytes @ 0x2C
  2948  004C                     	ds	4
  2949  004C                     ??___flge:	; 1 bytes @ 0x30
  2950  0050                     ??___fladd:	; 1 bytes @ 0x30
  2951  0050                     ??___fldiv:	; 1 bytes @ 0x30
  2952  0050                     	ds	5
  2953  0050                     	global	___fldiv@rem
  2954                           ___fldiv@rem:	; 4 bytes @ 0x35
  2955  0055                     	ds	3
  2956  0055                     ??_checkStatus:	; 1 bytes @ 0x38
  2957  0058                     	ds	1
  2958  0058                     	global	___fldiv@sign
  2959                           ___fldiv@sign:	; 1 bytes @ 0x39
  2960  0059                     	ds	1
  2961  0059                     	global	___fldiv@new_exp
  2962                           ___fldiv@new_exp:	; 2 bytes @ 0x3A
  2963  005A                     	ds	2
  2964  005A                     	global	___fladd@signs
  2965                           ___fladd@signs:	; 1 bytes @ 0x3C
  2966  005C                     	global	___fldiv@grs
  2967                           ___fldiv@grs:	; 4 bytes @ 0x3C
  2968  005C                     	ds	1
  2969  005C                     	global	___fladd@aexp
  2970                           ___fladd@aexp:	; 1 bytes @ 0x3D
  2971  005D                     	ds	1
  2972  005D                     	global	___fladd@bexp
  2973                           ___fladd@bexp:	; 1 bytes @ 0x3E
  2974  005E                     	ds	1
  2975  005E                     	global	___fladd@grs
  2976                           ___fladd@grs:	; 1 bytes @ 0x3F
  2977  005F                     	ds	1
  2978  005F                     	global	?___flsub
  2979                           ?___flsub:	; 4 bytes @ 0x40
  2980  0060                     	global	___fldiv@bexp
  2981                           ___fldiv@bexp:	; 1 bytes @ 0x40
  2982  0060                     	global	___flsub@a
  2983                           ___flsub@a:	; 4 bytes @ 0x40
  2984  0060                     	ds	1
  2985  0060                     	global	___fldiv@aexp
  2986                           ___fldiv@aexp:	; 1 bytes @ 0x41
  2987  0061                     	ds	1
  2988  0061                     ??_convertAnalogValues:	; 1 bytes @ 0x42
  2989  0062                     	global	?_floorf
  2990                           ?_floorf:	; 4 bytes @ 0x42
  2991  0062                     	global	floorf@x
  2992                           floorf@x:	; 4 bytes @ 0x42
  2993  0062                     	global	_convertAnalogValues$1541
  2994                           _convertAnalogValues$1541:	; 4 bytes @ 0x42
  2995  0062                     	ds	2
  2996  0062                     	global	___flsub@b
  2997                           ___flsub@b:	; 4 bytes @ 0x44
  2998  0064                     	ds	2
  2999  0064                     ??_floorf:	; 1 bytes @ 0x46
  3000  0066                     	global	convertAnalogValues@adc
  3001                           convertAnalogValues@adc:	; 2 bytes @ 0x46
  3002  0066                     	ds	2
  3003  0066                     ??___flsub:	; 1 bytes @ 0x48
  3004  0068                     	ds	4
  3005  0068                     ??_efgtoa:	; 1 bytes @ 0x4C
  3006  006C                     	ds	4
  3007  006C                     ;!
  3008                           ;!Data Sizes:
  3009                           ;!    Strings     189
  3010                           ;!    Constant    28
  3011                           ;!    Data        15
  3012                           ;!    BSS         186
  3013                           ;!    Persistent  0
  3014                           ;!    Stack       0
  3015                           ;!
  3016                           ;!Auto Spaces:
  3017                           ;!    Space          Size  Autos    Used
  3018                           ;!    COMMON           14     11      14
  3019                           ;!    BANK0            80     80      80
  3020                           ;!    BANK1            80     80      80
  3021                           ;!    BANK2            80     66      80
  3022                           ;!    BANK3            80     74      80
  3023                           ;!    BANK4            80      0      78
  3024                           ;!    BANK5            80      0      20
  3025                           ;!    BANK6            80      0      80
  3026                           ;!    BANK7            80      0       0
  3027                           ;!    BANK8            80      0       0
  3028                           ;!    BANK9            80      0       0
  3029                           ;!    BANK10           80      0       0
  3030                           ;!    BANK11           80      0       0
  3031                           ;!    BANK12           80      0       0
  3032                           ;!    BANK13           80      0       0
  3033                           ;!    BANK14           80      0       0
  3034                           ;!    BANK15           80      0       0
  3035                           ;!    BANK16           80      0       0
  3036                           ;!    BANK17           80      0       0
  3037                           ;!    BANK18           80      0       0
  3038                           ;!    BANK19           80      0       0
  3039                           ;!    BANK20           80      0       0
  3040                           ;!    BANK21           80      0       0
  3041                           ;!    BANK22           80      0       0
  3042                           ;!    BANK23           80      0       0
  3043                           ;!    BANK24           80      0       0
  3044                           ;!    BANK25           32      0       0
  3045                           
  3046                           ;!
  3047                           ;!Pointer List with Targets:
  3048                           ;!
  3049                           ;!    strncpy@s	PTR const unsigned char  size(1) Largest target is 20
  3050                           ;!		 -> uartReceiveISR@buffer(BANK5[20]), 
  3051                           ;!
  3052                           ;!    strncpy@d	PTR unsigned char  size(1) Largest target is 15
  3053                           ;!		 -> g_dataPacket(BANK4[15]), 
  3054                           ;!
  3055                           ;!    strncpy@cp	PTR unsigned char  size(1) Largest target is 15
  3056                           ;!		 -> g_dataPacket(BANK4[15]), 
  3057                           ;!
  3058                           ;!    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
  3059                           ;!		 -> STR_18(CODE[3]), 
  3060                           ;!
  3061                           ;!    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
  3062                           ;!		 -> STR_18(CODE[3]), 
  3063                           ;!
  3064                           ;!    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
  3065                           ;!		 -> vfpfcnvrt@ct(BANK2[3]), 
  3066                           ;!
  3067                           ;!    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
  3068                           ;!		 -> vfpfcnvrt@ct(BANK2[3]), 
  3069                           ;!
  3070                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 80
  3071                           ;!		 -> ?_sprintf(BANK2[2]), stoa@nuls(BANK0[7]), dbuf(BANK6[80]), showMenu@s12(BANK3[12
                                 ]), 
  3072                           ;!
  3073                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 80
  3074                           ;!		 -> ?_sprintf(BANK2[2]), stoa@nuls(BANK0[7]), dbuf(BANK6[80]), showMenu@s12(BANK3[12
                                 ]), 
  3075                           ;!
  3076                           ;!    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
  3077                           ;!		 -> dbuf(BANK6[80]), 
  3078                           ;!
  3079                           ;!    strcpy@d	PTR unsigned char  size(1) Largest target is 80
  3080                           ;!		 -> dbuf(BANK6[80]), 
  3081                           ;!
  3082                           ;!    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
  3083                           ;!		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
  3084                           ;!		 -> dbuf(BANK6[80]), 
  3085                           ;!
  3086                           ;!    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
  3087                           ;!		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
  3088                           ;!		 -> dbuf(BANK6[80]), 
  3089                           ;!
  3090                           ;!    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 42
  3091                           ;!		 -> STR_6(CODE[42]), STR_5(CODE[17]), STR_4(CODE[13]), STR_2(CODE[15]), 
  3092                           ;!
  3093                           ;!    sprintf@s	PTR unsigned char  size(1) Largest target is 61
  3094                           ;!		 -> showMenu@s12(BANK3[12]), showMenu@s(BANK3[61]), 
  3095                           ;!
  3096                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  3097                           ;!		 -> ?_sprintf(BANK2[2]), 
  3098                           ;!
  3099                           ;!    f.buffer	PTR unsigned char  size(1) Largest target is 61
  3100                           ;!		 -> showMenu@s12(BANK3[12]), showMenu@s(BANK3[61]), 
  3101                           ;!
  3102                           ;!    fputs@s	PTR const unsigned char  size(1) Largest target is 80
  3103                           ;!		 -> dbuf(BANK6[80]), 
  3104                           ;!
  3105                           ;!    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
  3106                           ;!		 -> sprintf@f(BANK2[5]), 
  3107                           ;!
  3108                           ;!    S1299_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 61
  3109                           ;!		 -> showMenu@s12(BANK3[12]), showMenu@s(BANK3[61]), 
  3110                           ;!
  3111                           ;!    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 61
  3112                           ;!		 -> showMenu@s12(BANK3[12]), showMenu@s(BANK3[61]), 
  3113                           ;!
  3114                           ;!    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
  3115                           ;!		 -> sprintf@f(BANK2[5]), 
  3116                           ;!
  3117                           ;!    atoi@s	PTR const unsigned char  size(2) Largest target is 42
  3118                           ;!		 -> STR_6(CODE[42]), STR_5(CODE[17]), STR_4(CODE[13]), STR_2(CODE[15]), 
  3119                           ;!
  3120                           ;!    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
  3121                           ;!		 -> sprintf@ap(BANK2[1]), 
  3122                           ;!
  3123                           ;!    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
  3124                           ;!		 -> sprintf@f(BANK2[5]), 
  3125                           ;!
  3126                           ;!    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 42
  3127                           ;!		 -> STR_6(CODE[42]), STR_5(CODE[17]), STR_4(CODE[13]), STR_2(CODE[15]), 
  3128                           ;!
  3129                           ;!    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 42
  3130                           ;!		 -> STR_6(CODE[42]), STR_5(CODE[17]), STR_4(CODE[13]), STR_2(CODE[15]), 
  3131                           ;!
  3132                           ;!    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 12
  3133                           ;!		 -> ?_sprintf(BANK2[2]), showMenu@s12(BANK3[12]), 
  3134                           ;!
  3135                           ;!    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
  3136                           ;!		 -> sprintf@f(BANK2[5]), 
  3137                           ;!
  3138                           ;!    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
  3139                           ;!		 -> sprintf@ap(BANK2[1]), 
  3140                           ;!
  3141                           ;!    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
  3142                           ;!		 -> vfprintf@cfmt(BANK2[2]), 
  3143                           ;!
  3144                           ;!    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
  3145                           ;!		 -> sprintf@f(BANK2[5]), 
  3146                           ;!
  3147                           ;!    stoa@s	PTR unsigned char  size(1) Largest target is 12
  3148                           ;!		 -> ?_sprintf(BANK2[2]), showMenu@s12(BANK3[12]), 
  3149                           ;!
  3150                           ;!    stoa@cp	PTR unsigned char  size(2) Largest target is 12
  3151                           ;!		 -> ?_sprintf(BANK2[2]), stoa@nuls(BANK0[7]), showMenu@s12(BANK3[12]), 
  3152                           ;!
  3153                           ;!    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
  3154                           ;!		 -> sprintf@f(BANK2[5]), 
  3155                           ;!
  3156                           ;!    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
  3157                           ;!		 -> dbuf(BANK6[80]), 
  3158                           ;!
  3159                           ;!    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
  3160                           ;!		 -> sprintf@f(BANK2[5]), 
  3161                           ;!
  3162                           ;!    pad@buf	PTR unsigned char  size(1) Largest target is 80
  3163                           ;!		 -> dbuf(BANK6[80]), 
  3164                           ;!
  3165                           ;!    OLED_print_xy@s	PTR unsigned char  size(2) Largest target is 61
  3166                           ;!		 -> STR_7(CODE[49]), STR_3(CODE[49]), showMenu@s(BANK3[61]), STR_1(CODE[13]), 
  3167                           ;!
  3168                           ;!    sp__strncpy	PTR unsigned char  size(1) Largest target is 15
  3169                           ;!		 -> g_dataPacket(BANK4[15]), 
  3170                           ;!
  3171                           ;!    menuInput@menu	PTR unsigned char  size(1) Largest target is 1
  3172                           ;!		 -> showMenu@menu(BANK3[1]), 
  3173                           ;!
  3174                           ;!    menuInput@page	PTR unsigned char  size(1) Largest target is 1
  3175                           ;!		 -> showMenu@page(BANK3[1]), 
  3176                           ;!
  3177                           
  3178                           
  3179                           ;!
  3180                           ;!Critical Paths under _main in COMMON
  3181                           ;!
  3182                           ;!    None.
  3183                           ;!
  3184                           ;!Critical Paths under _ISR in COMMON
  3185                           ;!
  3186                           ;!    _ISR->___llmod
  3187                           ;!    _uartReceiveISR->_strncpy
  3188                           ;!
  3189                           ;!Critical Paths under _main in BANK0
  3190                           ;!
  3191                           ;!    _timeSince->_timeNow
  3192                           ;!    _vfpfcnvrt->_efgtoa
  3193                           ;!    _stoa->_fputc
  3194                           ;!    _efgtoa->_floorf
  3195                           ;!    _tolower->_isupper
  3196                           ;!    _pad->_fputs
  3197                           ;!    _fputs->_fputc
  3198                           ;!    _floorf->___fldiv
  3199                           ;!    ___flsub->___fladd
  3200                           ;!    _atoi->___wmul
  3201                           ;!    _atoi->_isdigit
  3202                           ;!    _OLED_scrollDisplayRight->_OLED_command
  3203                           ;!    _OLED_scrollDisplayLeft->_OLED_command
  3204                           ;!    _OLED_returnHome->_OLED_command
  3205                           ;!    _OLED_print_xy->_OLED_command
  3206                           ;!    _OLED_print_xy->_OLED_write
  3207                           ;!    _OLED_write->_OLED_send
  3208                           ;!    _handleSensorData->___xxtofl
  3209                           ;!    _convertAnalogValues->___fldiv
  3210                           ;!    _ema->___lmul
  3211                           ;!    ___flmul->___xxtofl
  3212                           ;!    ___fldiv->___flmul
  3213                           ;!    ___fladd->___flmul
  3214                           ;!    _checkStatus->___flge
  3215                           ;!    ___flge->___flmul
  3216                           ;!    _OLED_init->_OLED_command
  3217                           ;!    _OLED_command->_OLED_send
  3218                           ;!    _OLED_send->_OLED_write4bits
  3219                           ;!
  3220                           ;!Critical Paths under _ISR in BANK0
  3221                           ;!
  3222                           ;!    None.
  3223                           ;!
  3224                           ;!Critical Paths under _main in BANK1
  3225                           ;!
  3226                           ;!    _vfprintf->_vfpfcnvrt
  3227                           ;!    _vfpfcnvrt->_efgtoa
  3228                           ;!    _efgtoa->_floorf
  3229                           ;!
  3230                           ;!Critical Paths under _ISR in BANK1
  3231                           ;!
  3232                           ;!    None.
  3233                           ;!
  3234                           ;!Critical Paths under _main in BANK2
  3235                           ;!
  3236                           ;!    _main->_showMenu
  3237                           ;!    _showMenu->_sprintf
  3238                           ;!    _sprintf->_vfprintf
  3239                           ;!    _vfprintf->_vfpfcnvrt
  3240                           ;!
  3241                           ;!Critical Paths under _ISR in BANK2
  3242                           ;!
  3243                           ;!    None.
  3244                           ;!
  3245                           ;!Critical Paths under _main in BANK3
  3246                           ;!
  3247                           ;!    _main->_showMenu
  3248                           ;!
  3249                           ;!Critical Paths under _ISR in BANK3
  3250                           ;!
  3251                           ;!    None.
  3252                           ;!
  3253                           ;!Critical Paths under _main in BANK4
  3254                           ;!
  3255                           ;!    None.
  3256                           ;!
  3257                           ;!Critical Paths under _ISR in BANK4
  3258                           ;!
  3259                           ;!    None.
  3260                           ;!
  3261                           ;!Critical Paths under _main in BANK5
  3262                           ;!
  3263                           ;!    None.
  3264                           ;!
  3265                           ;!Critical Paths under _ISR in BANK5
  3266                           ;!
  3267                           ;!    None.
  3268                           ;!
  3269                           ;!Critical Paths under _main in BANK6
  3270                           ;!
  3271                           ;!    None.
  3272                           ;!
  3273                           ;!Critical Paths under _ISR in BANK6
  3274                           ;!
  3275                           ;!    None.
  3276                           ;!
  3277                           ;!Critical Paths under _main in BANK7
  3278                           ;!
  3279                           ;!    None.
  3280                           ;!
  3281                           ;!Critical Paths under _ISR in BANK7
  3282                           ;!
  3283                           ;!    None.
  3284                           ;!
  3285                           ;!Critical Paths under _main in BANK8
  3286                           ;!
  3287                           ;!    None.
  3288                           ;!
  3289                           ;!Critical Paths under _ISR in BANK8
  3290                           ;!
  3291                           ;!    None.
  3292                           ;!
  3293                           ;!Critical Paths under _main in BANK9
  3294                           ;!
  3295                           ;!    None.
  3296                           ;!
  3297                           ;!Critical Paths under _ISR in BANK9
  3298                           ;!
  3299                           ;!    None.
  3300                           ;!
  3301                           ;!Critical Paths under _main in BANK10
  3302                           ;!
  3303                           ;!    None.
  3304                           ;!
  3305                           ;!Critical Paths under _ISR in BANK10
  3306                           ;!
  3307                           ;!    None.
  3308                           ;!
  3309                           ;!Critical Paths under _main in BANK11
  3310                           ;!
  3311                           ;!    None.
  3312                           ;!
  3313                           ;!Critical Paths under _ISR in BANK11
  3314                           ;!
  3315                           ;!    None.
  3316                           ;!
  3317                           ;!Critical Paths under _main in BANK12
  3318                           ;!
  3319                           ;!    None.
  3320                           ;!
  3321                           ;!Critical Paths under _ISR in BANK12
  3322                           ;!
  3323                           ;!    None.
  3324                           ;!
  3325                           ;!Critical Paths under _main in BANK13
  3326                           ;!
  3327                           ;!    None.
  3328                           ;!
  3329                           ;!Critical Paths under _ISR in BANK13
  3330                           ;!
  3331                           ;!    None.
  3332                           ;!
  3333                           ;!Critical Paths under _main in BANK14
  3334                           ;!
  3335                           ;!    None.
  3336                           ;!
  3337                           ;!Critical Paths under _ISR in BANK14
  3338                           ;!
  3339                           ;!    None.
  3340                           ;!
  3341                           ;!Critical Paths under _main in BANK15
  3342                           ;!
  3343                           ;!    None.
  3344                           ;!
  3345                           ;!Critical Paths under _ISR in BANK15
  3346                           ;!
  3347                           ;!    None.
  3348                           ;!
  3349                           ;!Critical Paths under _main in BANK16
  3350                           ;!
  3351                           ;!    None.
  3352                           ;!
  3353                           ;!Critical Paths under _ISR in BANK16
  3354                           ;!
  3355                           ;!    None.
  3356                           ;!
  3357                           ;!Critical Paths under _main in BANK17
  3358                           ;!
  3359                           ;!    None.
  3360                           ;!
  3361                           ;!Critical Paths under _ISR in BANK17
  3362                           ;!
  3363                           ;!    None.
  3364                           ;!
  3365                           ;!Critical Paths under _main in BANK18
  3366                           ;!
  3367                           ;!    None.
  3368                           ;!
  3369                           ;!Critical Paths under _ISR in BANK18
  3370                           ;!
  3371                           ;!    None.
  3372                           ;!
  3373                           ;!Critical Paths under _main in BANK19
  3374                           ;!
  3375                           ;!    None.
  3376                           ;!
  3377                           ;!Critical Paths under _ISR in BANK19
  3378                           ;!
  3379                           ;!    None.
  3380                           ;!
  3381                           ;!Critical Paths under _main in BANK20
  3382                           ;!
  3383                           ;!    None.
  3384                           ;!
  3385                           ;!Critical Paths under _ISR in BANK20
  3386                           ;!
  3387                           ;!    None.
  3388                           ;!
  3389                           ;!Critical Paths under _main in BANK21
  3390                           ;!
  3391                           ;!    None.
  3392                           ;!
  3393                           ;!Critical Paths under _ISR in BANK21
  3394                           ;!
  3395                           ;!    None.
  3396                           ;!
  3397                           ;!Critical Paths under _main in BANK22
  3398                           ;!
  3399                           ;!    None.
  3400                           ;!
  3401                           ;!Critical Paths under _ISR in BANK22
  3402                           ;!
  3403                           ;!    None.
  3404                           ;!
  3405                           ;!Critical Paths under _main in BANK23
  3406                           ;!
  3407                           ;!    None.
  3408                           ;!
  3409                           ;!Critical Paths under _ISR in BANK23
  3410                           ;!
  3411                           ;!    None.
  3412                           ;!
  3413                           ;!Critical Paths under _main in BANK24
  3414                           ;!
  3415                           ;!    None.
  3416                           ;!
  3417                           ;!Critical Paths under _ISR in BANK24
  3418                           ;!
  3419                           ;!    None.
  3420                           ;!
  3421                           ;!Critical Paths under _main in BANK25
  3422                           ;!
  3423                           ;!    None.
  3424                           ;!
  3425                           ;!Critical Paths under _ISR in BANK25
  3426                           ;!
  3427                           ;!    None.
  3428                           
  3429 ;;
  3430 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3431 ;;
  3432                           
  3433                           ;!
  3434                           ;!Call Graph Tables:
  3435                           ;!
  3436                           ;! ---------------------------------------------------------------------------------
  3437                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3438                           ;! ---------------------------------------------------------------------------------
  3439                           ;! (0) _main                                                11    11      0   51011
  3440                           ;!                                             55 BANK2     11    11      0
  3441                           ;!                       _OLED_command
  3442                           ;!                          _OLED_init
  3443                           ;!                    _OLED_returnHome
  3444                           ;!                        _checkStatus
  3445                           ;!                _convertAnalogValues
  3446                           ;!                   _handleSensorData
  3447                           ;!                         _initialize
  3448                           ;!                           _showMenu
  3449                           ;!                            _timeNow
  3450                           ;!                          _timeSince
  3451                           ;!                       _uartSendByte
  3452                           ;! ---------------------------------------------------------------------------------
  3453                           ;! (1) _uartSendByte                                         1     1      0      22
  3454                           ;!                                              0 BANK0      1     1      0
  3455                           ;! ---------------------------------------------------------------------------------
  3456                           ;! (1) _timeSince                                           20    16      4     285
  3457                           ;!                                              4 BANK0     20    16      4
  3458                           ;!                            _timeNow
  3459                           ;! ---------------------------------------------------------------------------------
  3460                           ;! (2) _timeNow                                              4     0      4       0
  3461                           ;!                                              0 BANK0      4     0      4
  3462                           ;! ---------------------------------------------------------------------------------
  3463                           ;! (1) _showMenu                                            76    76      0   37576
  3464                           ;!                                             53 BANK2      2     2      0
  3465                           ;!                                              0 BANK3     74    74      0
  3466                           ;!                      _OLED_print_xy
  3467                           ;!                    _OLED_returnHome
  3468                           ;!                              _getPB
  3469                           ;!                          _menuInput
  3470                           ;!                            _sprintf
  3471                           ;! ---------------------------------------------------------------------------------
  3472                           ;! (2) _sprintf                                             29    10     19   32692
  3473                           ;!                                             24 BANK2     29    10     19
  3474                           ;!                           _vfprintf
  3475                           ;! ---------------------------------------------------------------------------------
  3476                           ;! (3) _vfprintf                                             8     5      3   32047
  3477                           ;!                                             16 BANK2      8     5      3
  3478                           ;!                          _vfpfcnvrt
  3479                           ;! ---------------------------------------------------------------------------------
  3480                           ;! (4) _vfpfcnvrt                                           38    36      2   31707
  3481                           ;!                                             72 BANK1      8     6      2
  3482                           ;!                                              0 BANK2     16    16      0
  3483                           ;!                               _atoi
  3484                           ;!                             _efgtoa
  3485                           ;!                              _fputc
  3486                           ;!                            _isdigit
  3487                           ;!                            _isupper
  3488                           ;!                               _stoa
  3489                           ;!                            _strncmp
  3490                           ;!                            _tolower
  3491                           ;! ---------------------------------------------------------------------------------
  3492                           ;! (5) _strncmp                                             10     6      4     410
  3493                           ;!                                              0 BANK0     10     6      4
  3494                           ;! ---------------------------------------------------------------------------------
  3495                           ;! (5) _stoa                                                23    21      2    2018
  3496                           ;!                                              8 BANK0     23    21      2
  3497                           ;!                              _fputc
  3498                           ;!                             _strlen
  3499                           ;! ---------------------------------------------------------------------------------
  3500                           ;! (5) _efgtoa                                              66    61      5   23524
  3501                           ;!                                             76 BANK0      4     4      0
  3502                           ;!                                             10 BANK1     62    57      5
  3503                           ;!                            ___awdiv
  3504                           ;!                            ___awmod
  3505                           ;!                            ___fladd
  3506                           ;!                            ___fldiv
  3507                           ;!                             ___fleq
  3508                           ;!                             ___flge
  3509                           ;!                            ___flmul
  3510                           ;!                            ___flneg
  3511                           ;!                            ___flsub
  3512                           ;!                            ___fltol
  3513                           ;!                      ___fpclassifyf
  3514                           ;!                             _floorf
  3515                           ;!                            _isupper
  3516                           ;!                                _pad
  3517                           ;!                             _strcpy
  3518                           ;!                            _tolower
  3519                           ;! ---------------------------------------------------------------------------------
  3520                           ;! (5) _tolower                                              8     6      2     944
  3521                           ;!                                              6 BANK0      8     6      2
  3522                           ;!                            _isupper
  3523                           ;! ---------------------------------------------------------------------------------
  3524                           ;! (6) _isupper                                              6     4      2     465
  3525                           ;!                                              0 BANK0      6     4      2
  3526                           ;! ---------------------------------------------------------------------------------
  3527                           ;! (6) _strcpy                                               8     6      2     641
  3528                           ;!                                              0 BANK0      8     6      2
  3529                           ;! ---------------------------------------------------------------------------------
  3530                           ;! (6) _pad                                                  9     6      3    3860
  3531                           ;!                                             16 BANK0      9     6      3
  3532                           ;!                              _fputc
  3533                           ;!                              _fputs
  3534                           ;!                             _strlen
  3535                           ;! ---------------------------------------------------------------------------------
  3536                           ;! (6) _strlen                                               6     4      2     164
  3537                           ;!                                              0 BANK0      6     4      2
  3538                           ;! ---------------------------------------------------------------------------------
  3539                           ;! (7) _fputs                                                8     7      1    1605
  3540                           ;!                                              8 BANK0      8     7      1
  3541                           ;!                              _fputc
  3542                           ;! ---------------------------------------------------------------------------------
  3543                           ;! (6) _fputc                                                8     5      3    1290
  3544                           ;!                                              0 BANK0      8     5      3
  3545                           ;!                              _putch
  3546                           ;! ---------------------------------------------------------------------------------
  3547                           ;! (7) _putch                                                1     1      0       0
  3548                           ;! ---------------------------------------------------------------------------------
  3549                           ;! (6) _floorf                                              20    16      4     490
  3550                           ;!                                             66 BANK0     10     6      4
  3551                           ;!                                              0 BANK1     10    10      0
  3552                           ;!                            ___fldiv (ARG)
  3553                           ;! ---------------------------------------------------------------------------------
  3554                           ;! (6) ___fpclassifyf                                       16    12      4     287
  3555                           ;!                                              0 BANK0     16    12      4
  3556                           ;! ---------------------------------------------------------------------------------
  3557                           ;! (6) ___fltol                                             11     7      4     381
  3558                           ;!                                              0 BANK0     11     7      4
  3559                           ;! ---------------------------------------------------------------------------------
  3560                           ;! (6) ___flsub                                              8     0      8    2789
  3561                           ;!                                             64 BANK0      8     0      8
  3562                           ;!                            ___fladd
  3563                           ;!                            ___flmul (ARG)
  3564                           ;! ---------------------------------------------------------------------------------
  3565                           ;! (6) ___flneg                                              4     0      4     121
  3566                           ;!                                              0 BANK0      4     0      4
  3567                           ;! ---------------------------------------------------------------------------------
  3568                           ;! (6) ___fleq                                              12     4      8     394
  3569                           ;!                                              0 BANK0     12     4      8
  3570                           ;! ---------------------------------------------------------------------------------
  3571                           ;! (6) ___awmod                                              7     3      4     448
  3572                           ;!                                              0 BANK0      7     3      4
  3573                           ;! ---------------------------------------------------------------------------------
  3574                           ;! (6) ___awdiv                                              9     5      4     452
  3575                           ;!                                              0 BANK0      9     5      4
  3576                           ;! ---------------------------------------------------------------------------------
  3577                           ;! (5) _atoi                                                15    13      2    1283
  3578                           ;!                                              6 BANK0     15    13      2
  3579                           ;!                             ___wmul
  3580                           ;!                            _isdigit
  3581                           ;!                            _isspace
  3582                           ;! ---------------------------------------------------------------------------------
  3583                           ;! (6) _isspace                                              5     3      2     207
  3584                           ;!                                              0 BANK0      5     3      2
  3585                           ;! ---------------------------------------------------------------------------------
  3586                           ;! (5) _isdigit                                              6     4      2     313
  3587                           ;!                                              0 BANK0      6     4      2
  3588                           ;! ---------------------------------------------------------------------------------
  3589                           ;! (6) ___wmul                                               6     2      4     290
  3590                           ;!                                              0 BANK0      6     2      4
  3591                           ;! ---------------------------------------------------------------------------------
  3592                           ;! (2) _menuInput                                           11     6      5    2765
  3593                           ;!                                              7 BANK0     11     6      5
  3594                           ;!                    _OLED_returnHome
  3595                           ;!             _OLED_scrollDisplayLeft
  3596                           ;!            _OLED_scrollDisplayRight
  3597                           ;!                              _getPB
  3598                           ;!                          _getRotDir
  3599                           ;! ---------------------------------------------------------------------------------
  3600                           ;! (3) _getRotDir                                            2     2      0      23
  3601                           ;!                                              0 BANK0      2     2      0
  3602                           ;! ---------------------------------------------------------------------------------
  3603                           ;! (3) _getPB                                                2     2      0      23
  3604                           ;!                                              0 BANK0      2     2      0
  3605                           ;! ---------------------------------------------------------------------------------
  3606                           ;! (3) _OLED_scrollDisplayRight                              0     0      0     352
  3607                           ;!                       _OLED_command
  3608                           ;! ---------------------------------------------------------------------------------
  3609                           ;! (3) _OLED_scrollDisplayLeft                               0     0      0     352
  3610                           ;!                       _OLED_command
  3611                           ;! ---------------------------------------------------------------------------------
  3612                           ;! (3) _OLED_returnHome                                      0     0      0     352
  3613                           ;!                       _OLED_command
  3614                           ;! ---------------------------------------------------------------------------------
  3615                           ;! (2) _OLED_print_xy                                        9     6      3    1577
  3616                           ;!                                              7 BANK0      9     6      3
  3617                           ;!                       _OLED_command
  3618                           ;!                         _OLED_write
  3619                           ;! ---------------------------------------------------------------------------------
  3620                           ;! (3) _OLED_write                                           1     1      0     352
  3621                           ;!                                              6 BANK0      1     1      0
  3622                           ;!                          _OLED_send
  3623                           ;!                  _OLED_waitForReady
  3624                           ;! ---------------------------------------------------------------------------------
  3625                           ;! (1) _initialize                                           0     0      0       0
  3626                           ;! ---------------------------------------------------------------------------------
  3627                           ;! (1) _handleSensorData                                     4     4      0     626
  3628                           ;!                                             14 BANK0      4     4      0
  3629                           ;!                           ___xxtofl
  3630                           ;! ---------------------------------------------------------------------------------
  3631                           ;! (1) _convertAnalogValues                                  6     6      0   10341
  3632                           ;!                                             66 BANK0      6     6      0
  3633                           ;!                            ___fladd
  3634                           ;!                            ___fldiv
  3635                           ;!                            ___flmul
  3636                           ;!                           ___xxtofl
  3637                           ;!                   _adcGetConversion
  3638                           ;!                                _ema
  3639                           ;! ---------------------------------------------------------------------------------
  3640                           ;! (2) _ema                                                 20    12      8    1191
  3641                           ;!                                             12 BANK0     20    12      8
  3642                           ;!                             ___lmul
  3643                           ;! ---------------------------------------------------------------------------------
  3644                           ;! (3) ___lmul                                              12     4      8     396
  3645                           ;!                                              0 BANK0     12     4      8
  3646                           ;! ---------------------------------------------------------------------------------
  3647                           ;! (2) _adcGetConversion                                     4     2      2      22
  3648                           ;!                                              0 BANK0      4     2      2
  3649                           ;! ---------------------------------------------------------------------------------
  3650                           ;! (2) ___xxtofl                                            14    10      4     626
  3651                           ;!                                              0 BANK0     14    10      4
  3652                           ;! ---------------------------------------------------------------------------------
  3653                           ;! (6) ___flmul                                             26    18      8    3785
  3654                           ;!                                             14 BANK0     26    18      8
  3655                           ;!                          __Umul8_16
  3656                           ;!                           ___xxtofl (ARG)
  3657                           ;! ---------------------------------------------------------------------------------
  3658                           ;! (7) __Umul8_16                                            9     7      2     799
  3659                           ;!                                              0 BANK0      9     7      2
  3660                           ;! ---------------------------------------------------------------------------------
  3661                           ;! (6) ___fldiv                                             26    18      8    2185
  3662                           ;!                                             40 BANK0     26    18      8
  3663                           ;!                            ___flmul (ARG)
  3664                           ;!                           ___xxtofl (ARG)
  3665                           ;! ---------------------------------------------------------------------------------
  3666                           ;! (7) ___fladd                                             24    16      8    2440
  3667                           ;!                                             40 BANK0     24    16      8
  3668                           ;!                            ___flmul (ARG)
  3669                           ;!                           ___xxtofl (ARG)
  3670                           ;! ---------------------------------------------------------------------------------
  3671                           ;! (1) _checkStatus                                          0     0      0     942
  3672                           ;!                             ___flge
  3673                           ;! ---------------------------------------------------------------------------------
  3674                           ;! (6) ___flge                                              16     8      8     942
  3675                           ;!                                             40 BANK0     16     8      8
  3676                           ;!                            ___flmul (ARG)
  3677                           ;! ---------------------------------------------------------------------------------
  3678                           ;! (1) _OLED_init                                            1     1      0     440
  3679                           ;!                                              7 BANK0      1     1      0
  3680                           ;!                       _OLED_command
  3681                           ;!                    _OLED_write4bits
  3682                           ;! ---------------------------------------------------------------------------------
  3683                           ;! (4) _OLED_command                                         1     1      0     352
  3684                           ;!                                              6 BANK0      1     1      0
  3685                           ;!                          _OLED_send
  3686                           ;!                  _OLED_waitForReady
  3687                           ;! ---------------------------------------------------------------------------------
  3688                           ;! (5) _OLED_waitForReady                                    1     1      0      24
  3689                           ;!                                              0 BANK0      1     1      0
  3690                           ;!                   _OLED_pulseEnable
  3691                           ;! ---------------------------------------------------------------------------------
  3692                           ;! (5) _OLED_send                                            3     2      1     306
  3693                           ;!                                              3 BANK0      3     2      1
  3694                           ;!                    _OLED_write4bits
  3695                           ;! ---------------------------------------------------------------------------------
  3696                           ;! (6) _OLED_write4bits                                      3     3      0      88
  3697                           ;!                                              0 BANK0      3     3      0
  3698                           ;!                   _OLED_pulseEnable
  3699                           ;! ---------------------------------------------------------------------------------
  3700                           ;! (6) _OLED_pulseEnable                                     0     0      0       0
  3701                           ;! ---------------------------------------------------------------------------------
  3702                           ;! Estimated maximum stack depth 7
  3703                           ;! ---------------------------------------------------------------------------------
  3704                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3705                           ;! ---------------------------------------------------------------------------------
  3706                           ;! (10) _ISR                                                 1     1      0     660
  3707                           ;!                                             10 COMMON     1     1      0
  3708                           ;!                            ___llmod
  3709                           ;!                      _pushButtonISR
  3710                           ;!                             _rotISR
  3711                           ;!                     _uartReceiveISR
  3712                           ;! ---------------------------------------------------------------------------------
  3713                           ;! (11) _uartReceiveISR                                      1     1      0     326
  3714                           ;!                                              6 COMMON     1     1      0
  3715                           ;!                            _strncpy
  3716                           ;! ---------------------------------------------------------------------------------
  3717                           ;! (12) _strncpy                                             6     3      3     326
  3718                           ;!                                              0 COMMON     6     3      3
  3719                           ;! ---------------------------------------------------------------------------------
  3720                           ;! (11) _rotISR                                              8     8      0      23
  3721                           ;!                                              0 COMMON     8     8      0
  3722                           ;! ---------------------------------------------------------------------------------
  3723                           ;! (11) _pushButtonISR                                       1     1      0       0
  3724                           ;!                                              0 COMMON     1     1      0
  3725                           ;! ---------------------------------------------------------------------------------
  3726                           ;! (11) ___llmod                                            10     2      8     311
  3727                           ;!                                              0 COMMON    10     2      8
  3728                           ;! ---------------------------------------------------------------------------------
  3729                           ;! Estimated maximum stack depth 12
  3730                           ;! ---------------------------------------------------------------------------------
  3731                           ;!
  3732                           ;! Call Graph Graphs:
  3733                           ;!
  3734                           ;! _main (ROOT)
  3735                           ;!   _OLED_command
  3736                           ;!     _OLED_send
  3737                           ;!       _OLED_write4bits
  3738                           ;!         _OLED_pulseEnable
  3739                           ;!     _OLED_waitForReady
  3740                           ;!       _OLED_pulseEnable
  3741                           ;!   _OLED_init
  3742                           ;!     _OLED_command
  3743                           ;!       _OLED_send
  3744                           ;!         _OLED_write4bits
  3745                           ;!           _OLED_pulseEnable
  3746                           ;!       _OLED_waitForReady
  3747                           ;!         _OLED_pulseEnable
  3748                           ;!     _OLED_write4bits
  3749                           ;!       _OLED_pulseEnable
  3750                           ;!   _OLED_returnHome
  3751                           ;!     _OLED_command
  3752                           ;!       _OLED_send
  3753                           ;!         _OLED_write4bits
  3754                           ;!           _OLED_pulseEnable
  3755                           ;!       _OLED_waitForReady
  3756                           ;!         _OLED_pulseEnable
  3757                           ;!   _checkStatus
  3758                           ;!     ___flge
  3759                           ;!       ___flmul (ARG)
  3760                           ;!         __Umul8_16
  3761                           ;!         ___xxtofl (ARG)
  3762                           ;!   _convertAnalogValues
  3763                           ;!     ___fladd
  3764                           ;!       ___flmul (ARG)
  3765                           ;!         __Umul8_16
  3766                           ;!         ___xxtofl (ARG)
  3767                           ;!       ___xxtofl (ARG)
  3768                           ;!     ___fldiv
  3769                           ;!       ___flmul (ARG)
  3770                           ;!         __Umul8_16
  3771                           ;!         ___xxtofl (ARG)
  3772                           ;!       ___xxtofl (ARG)
  3773                           ;!     ___flmul
  3774                           ;!       __Umul8_16
  3775                           ;!       ___xxtofl (ARG)
  3776                           ;!     ___xxtofl
  3777                           ;!     _adcGetConversion
  3778                           ;!     _ema
  3779                           ;!       ___lmul
  3780                           ;!   _handleSensorData
  3781                           ;!     ___xxtofl
  3782                           ;!   _initialize
  3783                           ;!   _showMenu
  3784                           ;!     _OLED_print_xy
  3785                           ;!       _OLED_command
  3786                           ;!         _OLED_send
  3787                           ;!           _OLED_write4bits
  3788                           ;!             _OLED_pulseEnable
  3789                           ;!         _OLED_waitForReady
  3790                           ;!           _OLED_pulseEnable
  3791                           ;!       _OLED_write
  3792                           ;!         _OLED_send
  3793                           ;!           _OLED_write4bits
  3794                           ;!             _OLED_pulseEnable
  3795                           ;!         _OLED_waitForReady
  3796                           ;!           _OLED_pulseEnable
  3797                           ;!     _OLED_returnHome
  3798                           ;!       _OLED_command
  3799                           ;!         _OLED_send
  3800                           ;!           _OLED_write4bits
  3801                           ;!             _OLED_pulseEnable
  3802                           ;!         _OLED_waitForReady
  3803                           ;!           _OLED_pulseEnable
  3804                           ;!     _getPB
  3805                           ;!     _menuInput
  3806                           ;!       _OLED_returnHome
  3807                           ;!         _OLED_command
  3808                           ;!           _OLED_send
  3809                           ;!             _OLED_write4bits
  3810                           ;!               _OLED_pulseEnable
  3811                           ;!           _OLED_waitForReady
  3812                           ;!             _OLED_pulseEnable
  3813                           ;!       _OLED_scrollDisplayLeft
  3814                           ;!         _OLED_command
  3815                           ;!           _OLED_send
  3816                           ;!             _OLED_write4bits
  3817                           ;!               _OLED_pulseEnable
  3818                           ;!           _OLED_waitForReady
  3819                           ;!             _OLED_pulseEnable
  3820                           ;!       _OLED_scrollDisplayRight
  3821                           ;!         _OLED_command
  3822                           ;!           _OLED_send
  3823                           ;!             _OLED_write4bits
  3824                           ;!               _OLED_pulseEnable
  3825                           ;!           _OLED_waitForReady
  3826                           ;!             _OLED_pulseEnable
  3827                           ;!       _getPB
  3828                           ;!       _getRotDir
  3829                           ;!     _sprintf
  3830                           ;!       _vfprintf
  3831                           ;!         _vfpfcnvrt
  3832                           ;!           _atoi
  3833                           ;!             ___wmul
  3834                           ;!             _isdigit
  3835                           ;!             _isspace
  3836                           ;!           _efgtoa
  3837                           ;!             ___awdiv
  3838                           ;!             ___awmod
  3839                           ;!             ___fladd
  3840                           ;!               ___flmul (ARG)
  3841                           ;!                 __Umul8_16
  3842                           ;!                 ___xxtofl (ARG)
  3843                           ;!               ___xxtofl (ARG)
  3844                           ;!             ___fldiv
  3845                           ;!               ___flmul (ARG)
  3846                           ;!                 __Umul8_16
  3847                           ;!                 ___xxtofl (ARG)
  3848                           ;!               ___xxtofl (ARG)
  3849                           ;!             ___fleq
  3850                           ;!             ___flge
  3851                           ;!               ___flmul (ARG)
  3852                           ;!                 __Umul8_16
  3853                           ;!                 ___xxtofl (ARG)
  3854                           ;!             ___flmul
  3855                           ;!               __Umul8_16
  3856                           ;!               ___xxtofl (ARG)
  3857                           ;!             ___flneg
  3858                           ;!             ___flsub
  3859                           ;!               ___fladd
  3860                           ;!                 ___flmul (ARG)
  3861                           ;!                   __Umul8_16
  3862                           ;!                   ___xxtofl (ARG)
  3863                           ;!                 ___xxtofl (ARG)
  3864                           ;!               ___flmul (ARG)
  3865                           ;!                 __Umul8_16
  3866                           ;!                 ___xxtofl (ARG)
  3867                           ;!             ___fltol
  3868                           ;!             ___fpclassifyf
  3869                           ;!             _floorf
  3870                           ;!               ___fldiv (ARG)
  3871                           ;!                 ___flmul (ARG)
  3872                           ;!                   __Umul8_16
  3873                           ;!                   ___xxtofl (ARG)
  3874                           ;!                 ___xxtofl (ARG)
  3875                           ;!             _isupper
  3876                           ;!             _pad
  3877                           ;!               _fputc
  3878                           ;!                 _putch
  3879                           ;!               _fputs
  3880                           ;!                 _fputc
  3881                           ;!                   _putch
  3882                           ;!               _strlen
  3883                           ;!             _strcpy
  3884                           ;!             _tolower
  3885                           ;!               _isupper
  3886                           ;!           _fputc
  3887                           ;!             _putch
  3888                           ;!           _isdigit
  3889                           ;!           _isupper
  3890                           ;!           _stoa
  3891                           ;!             _fputc
  3892                           ;!               _putch
  3893                           ;!             _strlen
  3894                           ;!           _strncmp
  3895                           ;!           _tolower
  3896                           ;!             _isupper
  3897                           ;!   _timeNow
  3898                           ;!   _timeSince
  3899                           ;!     _timeNow
  3900                           ;!   _uartSendByte
  3901                           ;!
  3902                           ;! _ISR (ROOT)
  3903                           ;!   ___llmod
  3904                           ;!   _pushButtonISR
  3905                           ;!   _rotISR
  3906                           ;!   _uartReceiveISR
  3907                           ;!     _strncpy
  3908                           ;!
  3909                           
  3910                           ;! Address spaces:
  3911                           
  3912                           ;!Name               Size   Autos  Total    Cost      Usage
  3913                           ;!BIGRAM             7F0      0       0       0        0.0%
  3914                           ;!NULL                 0      0       0       0        0.0%
  3915                           ;!CODE                 0      0       0       0        0.0%
  3916                           ;!BITCOMMON            E      0       0       1        0.0%
  3917                           ;!BITSFR0              0      0       0       1        0.0%
  3918                           ;!SFR0                 0      0       0       1        0.0%
  3919                           ;!COMMON               E      B       E       2      100.0%
  3920                           ;!BITSFR1              0      0       0       2        0.0%
  3921                           ;!SFR1                 0      0       0       2        0.0%
  3922                           ;!BITSFR2              0      0       0       3        0.0%
  3923                           ;!SFR2                 0      0       0       3        0.0%
  3924                           ;!STACK                0      0       0       3        0.0%
  3925                           ;!BITBANK0            50      0       0       4        0.0%
  3926                           ;!BITSFR3              0      0       0       4        0.0%
  3927                           ;!SFR3                 0      0       0       4        0.0%
  3928                           ;!BANK0               50     50      50       5      100.0%
  3929                           ;!BITSFR4              0      0       0       5        0.0%
  3930                           ;!SFR4                 0      0       0       5        0.0%
  3931                           ;!BITBANK1            50      0       0       6        0.0%
  3932                           ;!BITSFR5              0      0       0       6        0.0%
  3933                           ;!SFR5                 0      0       0       6        0.0%
  3934                           ;!BANK1               50     50      50       7      100.0%
  3935                           ;!BITSFR6              0      0       0       7        0.0%
  3936                           ;!SFR6                 0      0       0       7        0.0%
  3937                           ;!BITSFR7              0      0       0       8        0.0%
  3938                           ;!SFR7                 0      0       0       8        0.0%
  3939                           ;!ABS                  0      0     200       8        0.0%
  3940                           ;!BITBANK2            50      0       0       9        0.0%
  3941                           ;!BITSFR8              0      0       0       9        0.0%
  3942                           ;!SFR8                 0      0       0       9        0.0%
  3943                           ;!BANK2               50     42      50      10      100.0%
  3944                           ;!BITSFR9              0      0       0      10        0.0%
  3945                           ;!SFR9                 0      0       0      10        0.0%
  3946                           ;!BITBANK3            50      0       0      11        0.0%
  3947                           ;!BITSFR10             0      0       0      11        0.0%
  3948                           ;!SFR10                0      0       0      11        0.0%
  3949                           ;!BANK3               50     4A      50      12      100.0%
  3950                           ;!BITSFR11             0      0       0      12        0.0%
  3951                           ;!SFR11                0      0       0      12        0.0%
  3952                           ;!BITBANK4            50      0       0      13        0.0%
  3953                           ;!BITSFR12             0      0       0      13        0.0%
  3954                           ;!SFR12                0      0       0      13        0.0%
  3955                           ;!BANK4               50      0      4E      14       97.5%
  3956                           ;!BITSFR13             0      0       0      14        0.0%
  3957                           ;!SFR13                0      0       0      14        0.0%
  3958                           ;!BITBANK5            50      0       0      15        0.0%
  3959                           ;!BITSFR14             0      0       0      15        0.0%
  3960                           ;!SFR14                0      0       0      15        0.0%
  3961                           ;!BANK5               50      0      14      16       25.0%
  3962                           ;!BITSFR15             0      0       0      16        0.0%
  3963                           ;!SFR15                0      0       0      16        0.0%
  3964                           ;!BITBANK6            50      0       0      17        0.0%
  3965                           ;!BITSFR16             0      0       0      17        0.0%
  3966                           ;!SFR16                0      0       0      17        0.0%
  3967                           ;!BANK6               50      0      50      18      100.0%
  3968                           ;!BITSFR17             0      0       0      18        0.0%
  3969                           ;!SFR17                0      0       0      18        0.0%
  3970                           ;!BITBANK7            50      0       0      19        0.0%
  3971                           ;!BITSFR18             0      0       0      19        0.0%
  3972                           ;!SFR18                0      0       0      19        0.0%
  3973                           ;!BANK7               50      0       0      20        0.0%
  3974                           ;!BITSFR19             0      0       0      20        0.0%
  3975                           ;!SFR19                0      0       0      20        0.0%
  3976                           ;!BITBANK8            50      0       0      21        0.0%
  3977                           ;!BITSFR20             0      0       0      21        0.0%
  3978                           ;!SFR20                0      0       0      21        0.0%
  3979                           ;!BANK8               50      0       0      22        0.0%
  3980                           ;!BITSFR21             0      0       0      22        0.0%
  3981                           ;!SFR21                0      0       0      22        0.0%
  3982                           ;!BITBANK9            50      0       0      23        0.0%
  3983                           ;!BITSFR22             0      0       0      23        0.0%
  3984                           ;!SFR22                0      0       0      23        0.0%
  3985                           ;!BANK9               50      0       0      24        0.0%
  3986                           ;!BITSFR23             0      0       0      24        0.0%
  3987                           ;!SFR23                0      0       0      24        0.0%
  3988                           ;!BITBANK10           50      0       0      25        0.0%
  3989                           ;!BITSFR24             0      0       0      25        0.0%
  3990                           ;!SFR24                0      0       0      25        0.0%
  3991                           ;!BANK10              50      0       0      26        0.0%
  3992                           ;!BITSFR25             0      0       0      26        0.0%
  3993                           ;!SFR25                0      0       0      26        0.0%
  3994                           ;!BITBANK11           50      0       0      27        0.0%
  3995                           ;!BITSFR26             0      0       0      27        0.0%
  3996                           ;!SFR26                0      0       0      27        0.0%
  3997                           ;!BANK11              50      0       0      28        0.0%
  3998                           ;!BITSFR27             0      0       0      28        0.0%
  3999                           ;!SFR27                0      0       0      28        0.0%
  4000                           ;!BITBANK12           50      0       0      29        0.0%
  4001                           ;!BITSFR28             0      0       0      29        0.0%
  4002                           ;!SFR28                0      0       0      29        0.0%
  4003                           ;!BANK12              50      0       0      30        0.0%
  4004                           ;!BITSFR29             0      0       0      30        0.0%
  4005                           ;!SFR29                0      0       0      30        0.0%
  4006                           ;!BITBANK13           50      0       0      31        0.0%
  4007                           ;!BITSFR30             0      0       0      31        0.0%
  4008                           ;!SFR30                0      0       0      31        0.0%
  4009                           ;!BANK13              50      0       0      32        0.0%
  4010                           ;!BITSFR31             0      0       0      32        0.0%
  4011                           ;!SFR31                0      0       0      32        0.0%
  4012                           ;!BITBANK14           50      0       0      33        0.0%
  4013                           ;!BITSFR32             0      0       0      33        0.0%
  4014                           ;!SFR32                0      0       0      33        0.0%
  4015                           ;!BANK14              50      0       0      34        0.0%
  4016                           ;!BITSFR33             0      0       0      34        0.0%
  4017                           ;!SFR33                0      0       0      34        0.0%
  4018                           ;!BITBANK15           50      0       0      35        0.0%
  4019                           ;!BITSFR34             0      0       0      35        0.0%
  4020                           ;!SFR34                0      0       0      35        0.0%
  4021                           ;!BANK15              50      0       0      36        0.0%
  4022                           ;!BITSFR35             0      0       0      36        0.0%
  4023                           ;!SFR35                0      0       0      36        0.0%
  4024                           ;!BITBANK16           50      0       0      37        0.0%
  4025                           ;!BITSFR36             0      0       0      37        0.0%
  4026                           ;!SFR36                0      0       0      37        0.0%
  4027                           ;!BANK16              50      0       0      38        0.0%
  4028                           ;!BITSFR37             0      0       0      38        0.0%
  4029                           ;!SFR37                0      0       0      38        0.0%
  4030                           ;!BITBANK17           50      0       0      39        0.0%
  4031                           ;!BITSFR38             0      0       0      39        0.0%
  4032                           ;!SFR38                0      0       0      39        0.0%
  4033                           ;!BANK17              50      0       0      40        0.0%
  4034                           ;!BITSFR39             0      0       0      40        0.0%
  4035                           ;!SFR39                0      0       0      40        0.0%
  4036                           ;!BITBANK18           50      0       0      41        0.0%
  4037                           ;!BITSFR40             0      0       0      41        0.0%
  4038                           ;!SFR40                0      0       0      41        0.0%
  4039                           ;!BANK18              50      0       0      42        0.0%
  4040                           ;!BITSFR41             0      0       0      42        0.0%
  4041                           ;!SFR41                0      0       0      42        0.0%
  4042                           ;!BITBANK19           50      0       0      43        0.0%
  4043                           ;!BITSFR42             0      0       0      43        0.0%
  4044                           ;!SFR42                0      0       0      43        0.0%
  4045                           ;!BANK19              50      0       0      44        0.0%
  4046                           ;!BITSFR43             0      0       0      44        0.0%
  4047                           ;!SFR43                0      0       0      44        0.0%
  4048                           ;!BITBANK20           50      0       0      45        0.0%
  4049                           ;!BITSFR44             0      0       0      45        0.0%
  4050                           ;!SFR44                0      0       0      45        0.0%
  4051                           ;!BANK20              50      0       0      46        0.0%
  4052                           ;!BITSFR45             0      0       0      46        0.0%
  4053                           ;!SFR45                0      0       0      46        0.0%
  4054                           ;!BITBANK21           50      0       0      47        0.0%
  4055                           ;!BITSFR46             0      0       0      47        0.0%
  4056                           ;!SFR46                0      0       0      47        0.0%
  4057                           ;!BANK21              50      0       0      48        0.0%
  4058                           ;!BITSFR47             0      0       0      48        0.0%
  4059                           ;!SFR47                0      0       0      48        0.0%
  4060                           ;!BITBANK22           50      0       0      49        0.0%
  4061                           ;!BITSFR48             0      0       0      49        0.0%
  4062                           ;!SFR48                0      0       0      49        0.0%
  4063                           ;!BANK22              50      0       0      50        0.0%
  4064                           ;!BITSFR49             0      0       0      50        0.0%
  4065                           ;!SFR49                0      0       0      50        0.0%
  4066                           ;!BITBANK23           50      0       0      51        0.0%
  4067                           ;!BITSFR50             0      0       0      51        0.0%
  4068                           ;!SFR50                0      0       0      51        0.0%
  4069                           ;!BANK23              50      0       0      52        0.0%
  4070                           ;!BITSFR51             0      0       0      52        0.0%
  4071                           ;!SFR51                0      0       0      52        0.0%
  4072                           ;!BITBANK24           50      0       0      53        0.0%
  4073                           ;!BITSFR52             0      0       0      53        0.0%
  4074                           ;!SFR52                0      0       0      53        0.0%
  4075                           ;!BANK24              50      0       0      54        0.0%
  4076                           ;!BITSFR53             0      0       0      54        0.0%
  4077                           ;!SFR53                0      0       0      54        0.0%
  4078                           ;!BITBANK25           20      0       0      55        0.0%
  4079                           ;!BITSFR54             0      0       0      55        0.0%
  4080                           ;!SFR54                0      0       0      55        0.0%
  4081                           ;!BANK25              20      0       0      56        0.0%
  4082                           ;!BITSFR55             0      0       0      56        0.0%
  4083                           ;!SFR55                0      0       0      56        0.0%
  4084                           ;!BITSFR56             0      0       0      57        0.0%
  4085                           ;!SFR56                0      0       0      57        0.0%
  4086                           ;!DATA                 0      0     200      57        0.0%
  4087                           ;!BITSFR57             0      0       0      58        0.0%
  4088                           ;!SFR57                0      0       0      58        0.0%
  4089                           ;!BITSFR58             0      0       0      59        0.0%
  4090                           ;!SFR58                0      0       0      59        0.0%
  4091                           ;!BITSFR59             0      0       0      60        0.0%
  4092                           ;!SFR59                0      0       0      60        0.0%
  4093                           ;!BITSFR60             0      0       0      61        0.0%
  4094                           ;!SFR60                0      0       0      61        0.0%
  4095                           ;!BITSFR61             0      0       0      62        0.0%
  4096                           ;!SFR61                0      0       0      62        0.0%
  4097                           ;!BITSFR62             0      0       0      63        0.0%
  4098                           ;!SFR62                0      0       0      63        0.0%
  4099                           ;!BITSFR63             0      0       0      64        0.0%
  4100                           ;!SFR63                0      0       0      64        0.0%
  4101                           
  4102                           	global	_main
  4103                           
  4104 ;; *************** function _main *****************
  4105 ;; Defined at:
  4106 ;;		line 107 in file "main.c"
  4107 ;; Parameters:    Size  Location     Type
  4108 ;;		None
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;  sensorTimeou    4   61[BANK2 ] unsigned long 
  4111 ;;  sensorTime      4   57[BANK2 ] unsigned long 
  4112 ;;  state           1   65[BANK2 ] unsigned char 
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  1    wreg      void 
  4115 ;; Registers used:
  4116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4117 ;; Tracked objects:
  4118 ;;		On entry : B3F/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4123 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4124 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4125 ;;      Totals:         0       0       0      11       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4126 ;;Total ram usage:       11 bytes
  4127 ;; Hardware stack levels required when called:   12
  4128 ;; This function calls:
  4129 ;;		_OLED_command
  4130 ;;		_OLED_init
  4131 ;;		_OLED_returnHome
  4132 ;;		_checkStatus
  4133 ;;		_convertAnalogValues
  4134 ;;		_handleSensorData
  4135 ;;		_initialize
  4136 ;;		_showMenu
  4137 ;;		_timeNow
  4138 ;;		_timeSince
  4139 ;;		_uartSendByte
  4140 ;; This function is called by:
  4141 ;;		Startup code after reset
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
  4145                           	file	"main.c"
  4146                           	line	107
  4147                           global __pmaintext
  4148                           __pmaintext:	;psect for function _main
  4149  1D60                     psect	maintext
  4150                           	file	"main.c"
  4151                           	line	107
  4152                           	global	__size_of_main
  4153                           	__size_of_main	equ	__end_of_main-_main
  4154  00D6                     	
  4155                           _main:	
  4156  1D60                     ;incstack = 0
  4157                           	opt	stack 4
  4158                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4159                           	line	112
  4160                           	
  4161                           l5019:	
  4162  1D60                     ;main.c: 109:  uint32_t sensorTime, sensorTimeout;;main.c: 110:  uint8_t state;;main.c: 
                                 112:  initialize();
  4163                           	fcall	_initialize
  4164  1D60  31A4  24DB  319D   	line	113
  4165                           	
  4166                           l5021:	
  4167  1D63                     ;main.c: 113:  LATBbits.LATB5 = 1;
  4168                           	movlb 0	; select bank0
  4169  1D63  0140               	bsf	(25),5	;volatile
  4170  1D64  1699               	line	114
  4171                           	
  4172                           l5023:	
  4173  1D65                     ;main.c: 114:  LATCbits.LATC3 = 1;
  4174                           	bsf	(26),3	;volatile
  4175  1D65  159A               	line	115
  4176                           ;main.c: 115:  OLED_init();
  4177                           	fcall	_OLED_init
  4178  1D66  319A  221A  319D   	line	116
  4179                           ;main.c: 116:  OLED_returnHome();
  4180                           	fcall	_OLED_returnHome
  4181  1D69  31A1  212C  319D   	line	117
  4182                           ;main.c: 117:  OLED_command(0x01);
  4183                           	movlw	low(01h)
  4184  1D6C  3001               	fcall	_OLED_command
  4185  1D6D  31A1  2147  319D   	line	119
  4186                           	
  4187                           l5025:	
  4188  1D70                     ;main.c: 119:  LATAbits.LATA0 = 1;
  4189                           	movlb 0	; select bank0
  4190  1D70  0140               	bsf	(24),0	;volatile
  4191  1D71  1418               	line	121
  4192                           	
  4193                           l5027:	
  4194  1D72                     ;main.c: 121:  sensorTime = sensorTimeout = timeNow();
  4195                           	fcall	_timeNow
  4196  1D72  3188  2003  319D   	movlb 0	; select bank0
  4197  1D75  0140               	movf	(3+(?_timeNow)),w
  4198  1D76  0823               	movlb 2	; select bank2
  4199  1D77  0142               	movwf	(main@sensorTimeout+3)^0100h
  4200  1D78  00E0               	movlb 0	; select bank0
  4201  1D79  0140               	movf	(2+(?_timeNow)),w
  4202  1D7A  0822               	movlb 2	; select bank2
  4203  1D7B  0142               	movwf	(main@sensorTimeout+2)^0100h
  4204  1D7C  00DF               	movlb 0	; select bank0
  4205  1D7D  0140               	movf	(1+(?_timeNow)),w
  4206  1D7E  0821               	movlb 2	; select bank2
  4207  1D7F  0142               	movwf	(main@sensorTimeout+1)^0100h
  4208  1D80  00DE               	movlb 0	; select bank0
  4209  1D81  0140               	movf	(0+(?_timeNow)),w
  4210  1D82  0820               	movlb 2	; select bank2
  4211  1D83  0142               	movwf	(main@sensorTimeout)^0100h
  4212  1D84  00DD               
  4213                           	movf	((main@sensorTimeout+3)^0100h),w
  4214  1D85  0860               	movwf	(main@sensorTime+3)^0100h
  4215  1D86  00DC               	movf	((main@sensorTimeout+2)^0100h),w
  4216  1D87  085F               	movwf	(main@sensorTime+2)^0100h
  4217  1D88  00DB               	movf	((main@sensorTimeout+1)^0100h),w
  4218  1D89  085E               	movwf	(main@sensorTime+1)^0100h
  4219  1D8A  00DA               	movf	((main@sensorTimeout)^0100h),w
  4220  1D8B  085D               	movwf	(main@sensorTime)^0100h
  4221  1D8C  00D9               
  4222                           	line	122
  4223                           	
  4224                           l5029:	
  4225  1D8D                     ;main.c: 122:  state = 0;
  4226                           	clrf	(main@state)^0100h
  4227  1D8D  01E1               	line	124
  4228                           ;main.c: 124:  while (1) {
  4229                           	
  4230                           l187:	
  4231  1D8E                     	line	125
  4232                           # 125 "main.c"
  4233                           clrwdt ;# 
  4234  1D8E  0064               psect	maintext
  4235                           	line	126
  4236                           	
  4237                           l5031:	
  4238  1D8F                     ;main.c: 126:   convertAnalogValues();
  4239                           	fcall	_convertAnalogValues
  4240  1D8F  3188  2015  319D   	line	127
  4241                           	
  4242                           l5033:	
  4243  1D92                     ;main.c: 127:   checkStatus();
  4244                           	fcall	_checkStatus
  4245  1D92  31A2  22E3  319D   	line	129
  4246                           ;main.c: 129:   switch (state) {
  4247                           	goto	l5059
  4248  1D95  2E15               	line	130
  4249                           ;main.c: 130:   case 0:
  4250                           	
  4251                           l189:	
  4252  1D96                     	line	131
  4253                           	
  4254                           l5035:	
  4255  1D96                     ;main.c: 131:    if (timeSince(sensorTime) >= 50) {
  4256                           	movlb 2	; select bank2
  4257  1D96  0142               	movf	(main@sensorTime+3)^0100h,w
  4258  1D97  085C               	movlb 0	; select bank0
  4259  1D98  0140               	movwf	(timeSince@since+3)
  4260  1D99  00A7               	movlb 2	; select bank2
  4261  1D9A  0142               	movf	(main@sensorTime+2)^0100h,w
  4262  1D9B  085B               	movlb 0	; select bank0
  4263  1D9C  0140               	movwf	(timeSince@since+2)
  4264  1D9D  00A6               	movlb 2	; select bank2
  4265  1D9E  0142               	movf	(main@sensorTime+1)^0100h,w
  4266  1D9F  085A               	movlb 0	; select bank0
  4267  1DA0  0140               	movwf	(timeSince@since+1)
  4268  1DA1  00A5               	movlb 2	; select bank2
  4269  1DA2  0142               	movf	(main@sensorTime)^0100h,w
  4270  1DA3  0859               	movlb 0	; select bank0
  4271  1DA4  0140               	movwf	(timeSince@since)
  4272  1DA5  00A4               
  4273                           	fcall	_timeSince
  4274  1DA6  3199  2117  319D   	movlb 0	; select bank0
  4275  1DA9  0140               		movf	(3+(?_timeSince)),w
  4276  1DAA  0827               	btfss	status,2
  4277  1DAB  1D03               	goto	u7020
  4278  1DAC  2DB9               	movf	(2+(?_timeSince)),w
  4279  1DAD  0826               	btfss	status,2
  4280  1DAE  1D03               	goto	u7020
  4281  1DAF  2DB9               	movf	(1+(?_timeSince)),w
  4282  1DB0  0825               	btfss	status,2
  4283  1DB1  1D03               	goto	u7020
  4284  1DB2  2DB9               	movlw	50
  4285  1DB3  3032               	subwf	 (0+(?_timeSince)),w
  4286  1DB4  0224               	btfss	status,0
  4287  1DB5  1C03               	goto	u7021
  4288  1DB6  2DB8               	goto	u7020
  4289  1DB7  2DB9               
  4290                           u7021:
  4291  1DB8                     	goto	l5061
  4292  1DB8  2E26               u7020:
  4293  1DB9                     	line	132
  4294                           	
  4295                           l5037:	
  4296  1DB9                     ;main.c: 132:     sensorTime = sensorTimeout = timeNow();
  4297                           	fcall	_timeNow
  4298  1DB9  3188  2003  319D   	movlb 0	; select bank0
  4299  1DBC  0140               	movf	(3+(?_timeNow)),w
  4300  1DBD  0823               	movlb 2	; select bank2
  4301  1DBE  0142               	movwf	(main@sensorTimeout+3)^0100h
  4302  1DBF  00E0               	movlb 0	; select bank0
  4303  1DC0  0140               	movf	(2+(?_timeNow)),w
  4304  1DC1  0822               	movlb 2	; select bank2
  4305  1DC2  0142               	movwf	(main@sensorTimeout+2)^0100h
  4306  1DC3  00DF               	movlb 0	; select bank0
  4307  1DC4  0140               	movf	(1+(?_timeNow)),w
  4308  1DC5  0821               	movlb 2	; select bank2
  4309  1DC6  0142               	movwf	(main@sensorTimeout+1)^0100h
  4310  1DC7  00DE               	movlb 0	; select bank0
  4311  1DC8  0140               	movf	(0+(?_timeNow)),w
  4312  1DC9  0820               	movlb 2	; select bank2
  4313  1DCA  0142               	movwf	(main@sensorTimeout)^0100h
  4314  1DCB  00DD               
  4315                           	movf	((main@sensorTimeout+3)^0100h),w
  4316  1DCC  0860               	movwf	(main@sensorTime+3)^0100h
  4317  1DCD  00DC               	movf	((main@sensorTimeout+2)^0100h),w
  4318  1DCE  085F               	movwf	(main@sensorTime+2)^0100h
  4319  1DCF  00DB               	movf	((main@sensorTimeout+1)^0100h),w
  4320  1DD0  085E               	movwf	(main@sensorTime+1)^0100h
  4321  1DD1  00DA               	movf	((main@sensorTimeout)^0100h),w
  4322  1DD2  085D               	movwf	(main@sensorTime)^0100h
  4323  1DD3  00D9               
  4324                           	line	133
  4325                           	
  4326                           l5039:	
  4327  1DD4                     ;main.c: 133:     uartSendByte('?');
  4328                           	movlw	low(03Fh)
  4329  1DD4  303F               	fcall	_uartSendByte
  4330  1DD5  31A1  2184  319D   	line	134
  4331                           	
  4332                           l5041:	
  4333  1DD8                     ;main.c: 134:     state = 1;
  4334                           	movlb 2	; select bank2
  4335  1DD8  0142               	clrf	(main@state)^0100h
  4336  1DD9  01E1               	incf	(main@state)^0100h,f
  4337  1DDA  0AE1               	goto	l5061
  4338  1DDB  2E26               	line	135
  4339                           ;main.c: 135:    }
  4340                           	
  4341                           l190:	
  4342  1DDC                     	line	136
  4343                           ;main.c: 136:    break;
  4344                           	goto	l5061
  4345  1DDC  2E26               	line	137
  4346                           ;main.c: 137:   case 1:
  4347                           	
  4348                           l192:	
  4349  1DDD                     	line	138
  4350                           	
  4351                           l5043:	
  4352  1DDD                     ;main.c: 138:    if (timeSince(sensorTimeout) > 20) {
  4353                           	movf	(main@sensorTimeout+3)^0100h,w
  4354  1DDD  0860               	movlb 0	; select bank0
  4355  1DDE  0140               	movwf	(timeSince@since+3)
  4356  1DDF  00A7               	movlb 2	; select bank2
  4357  1DE0  0142               	movf	(main@sensorTimeout+2)^0100h,w
  4358  1DE1  085F               	movlb 0	; select bank0
  4359  1DE2  0140               	movwf	(timeSince@since+2)
  4360  1DE3  00A6               	movlb 2	; select bank2
  4361  1DE4  0142               	movf	(main@sensorTimeout+1)^0100h,w
  4362  1DE5  085E               	movlb 0	; select bank0
  4363  1DE6  0140               	movwf	(timeSince@since+1)
  4364  1DE7  00A5               	movlb 2	; select bank2
  4365  1DE8  0142               	movf	(main@sensorTimeout)^0100h,w
  4366  1DE9  085D               	movlb 0	; select bank0
  4367  1DEA  0140               	movwf	(timeSince@since)
  4368  1DEB  00A4               
  4369                           	fcall	_timeSince
  4370  1DEC  3199  2117  319D   	movlb 0	; select bank0
  4371  1DEF  0140               		movf	(3+(?_timeSince)),w
  4372  1DF0  0827               	btfss	status,2
  4373  1DF1  1D03               	goto	u7030
  4374  1DF2  2DFF               	movf	(2+(?_timeSince)),w
  4375  1DF3  0826               	btfss	status,2
  4376  1DF4  1D03               	goto	u7030
  4377  1DF5  2DFF               	movf	(1+(?_timeSince)),w
  4378  1DF6  0825               	btfss	status,2
  4379  1DF7  1D03               	goto	u7030
  4380  1DF8  2DFF               	movlw	21
  4381  1DF9  3015               	subwf	 (0+(?_timeSince)),w
  4382  1DFA  0224               	btfss	status,0
  4383  1DFB  1C03               	goto	u7031
  4384  1DFC  2DFE               	goto	u7030
  4385  1DFD  2DFF               
  4386                           u7031:
  4387  1DFE                     	goto	l5049
  4388  1DFE  2E04               u7030:
  4389  1DFF                     	line	139
  4390                           	
  4391                           l5045:	
  4392  1DFF                     ;main.c: 139:     g_status.NOSENSOR = 1;
  4393                           	movlb 3	; select bank3
  4394  1DFF  0143               	bsf	(_g_status)^0180h,1
  4395  1E00  14ED               	line	140
  4396                           	
  4397                           l5047:	
  4398  1E01                     ;main.c: 140:     state = 0;
  4399                           	movlb 2	; select bank2
  4400  1E01  0142               	clrf	(main@state)^0100h
  4401  1E02  01E1               	line	141
  4402                           ;main.c: 141:    } else if (g_dataReady == 1) {
  4403                           	goto	l5061
  4404  1E03  2E26               	
  4405                           l193:	
  4406  1E04                     	
  4407                           l5049:	
  4408  1E04                     	movlb 2	; select bank2
  4409  1E04  0142               		decf	((_g_dataReady)^0100h),w	;volatile
  4410  1E05  036F               	btfss	status,2
  4411  1E06  1D03               	goto	u7041
  4412  1E07  2E09               	goto	u7040
  4413  1E08  2E0A               u7041:
  4414  1E09                     	goto	l5061
  4415  1E09  2E26               u7040:
  4416  1E0A                     	line	142
  4417                           	
  4418                           l5051:	
  4419  1E0A                     ;main.c: 142:     g_dataReady = 0;
  4420                           	clrf	(_g_dataReady)^0100h	;volatile
  4421  1E0A  01EF               	line	143
  4422                           	
  4423                           l5053:	
  4424  1E0B                     ;main.c: 143:     handleSensorData();
  4425                           	fcall	_handleSensorData
  4426  1E0B  31A6  261E  319D   	line	144
  4427                           	
  4428                           l5055:	
  4429  1E0E                     ;main.c: 144:     state = 0;
  4430                           	movlb 2	; select bank2
  4431  1E0E  0142               	clrf	(main@state)^0100h
  4432  1E0F  01E1               	goto	l5061
  4433  1E10  2E26               	line	145
  4434                           ;main.c: 145:    }
  4435                           	
  4436                           l195:	
  4437  1E11                     	goto	l5061
  4438  1E11  2E26               	
  4439                           l194:	
  4440  1E12                     	line	146
  4441                           ;main.c: 146:    break;
  4442                           	goto	l5061
  4443  1E12  2E26               	line	147
  4444                           ;main.c: 147:   default:
  4445                           	
  4446                           l196:	
  4447  1E13                     	line	148
  4448                           	
  4449                           l5057:	
  4450  1E13                     ;main.c: 148:    state = 0;
  4451                           	clrf	(main@state)^0100h
  4452  1E13  01E1               	line	149
  4453                           ;main.c: 149:   }
  4454                           	goto	l5061
  4455  1E14  2E26               	
  4456                           l188:	
  4457  1E15                     	
  4458                           l5059:	
  4459  1E15                     	movlb 2	; select bank2
  4460  1E15  0142               	movf	(main@state)^0100h,w
  4461  1E16  0861               	movwf	(??_main+0)^0100h+0
  4462  1E17  00D7               	clrf	(??_main+0)^0100h+0+1
  4463  1E18  01D8               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4464                           ; Switch size 1, requested type "space"
  4465                           ; Number of cases is 1, Range of values is 0 to 0
  4466                           ; switch strategies available:
  4467                           ; Name         Instructions Cycles
  4468                           ; simple_byte            4     3 (average)
  4469                           ; direct_byte            8     6 (fixed)
  4470                           ; jumptable            260     6 (fixed)
  4471                           ;	Chosen strategy is simple_byte
  4472                           
  4473                           	movf 1+(??_main+0)^0100h+0,w
  4474  1E19  0858               	opt asmopt_push
  4475                           	opt asmopt_off
  4476                           	xorlw	0^0	; case 0
  4477  1E1A  3A00               	skipnz
  4478  1E1B  1903               	goto	l5171
  4479  1E1C  2E1E               	goto	l5057
  4480  1E1D  2E13               	opt asmopt_pop
  4481                           	
  4482                           l5171:	
  4483  1E1E                     ; Switch size 1, requested type "space"
  4484                           ; Number of cases is 2, Range of values is 0 to 1
  4485                           ; switch strategies available:
  4486                           ; Name         Instructions Cycles
  4487                           ; simple_byte            7     4 (average)
  4488                           ; direct_byte           10     6 (fixed)
  4489                           ; jumptable            260     6 (fixed)
  4490                           ;	Chosen strategy is simple_byte
  4491                           
  4492                           	movf 0+(??_main+0)^0100h+0,w
  4493  1E1E  0857               	opt asmopt_push
  4494                           	opt asmopt_off
  4495                           	xorlw	0^0	; case 0
  4496  1E1F  3A00               	skipnz
  4497  1E20  1903               	goto	l5035
  4498  1E21  2D96               	xorlw	1^0	; case 1
  4499  1E22  3A01               	skipnz
  4500  1E23  1903               	goto	l5043
  4501  1E24  2DDD               	goto	l5057
  4502  1E25  2E13               	opt asmopt_pop
  4503                           
  4504                           	
  4505                           l191:	
  4506  1E26                     	line	151
  4507                           	
  4508                           l5061:	
  4509  1E26                     ;main.c: 151:   showMenu();
  4510                           	fcall	_showMenu
  4511  1E26  3192  226B  319D   	line	152
  4512                           	
  4513                           l5063:	
  4514  1E29                     ;main.c: 152:   _delay((unsigned long)((10)*(4000000/4000.0)));
  4515                           	opt asmopt_push
  4516                           opt asmopt_off
  4517                           movlw	13
  4518  1E29  300D               	movlb 2	; select bank2
  4519  1E2A  0142               movwf	((??_main+0)^0100h+0),f
  4520  1E2B  00D7               	movlw	251
  4521  1E2C  30FB               u7197:
  4522  1E2D                     decfsz	wreg
  4523  1E2D  0B89               	goto	u7197
  4524  1E2E  2E2D               	decfsz	((??_main+0)^0100h+0),f
  4525  1E2F  0BD7               	goto	u7197
  4526  1E30  2E2D               	nop2
  4527  1E31  3200               opt asmopt_pop
  4528                           
  4529                           	goto	l187
  4530  1E32  2D8E               	line	154
  4531                           ;main.c: 154:  }
  4532                           	
  4533                           l197:	
  4534  1E33                     	goto	l187
  4535  1E33  2D8E               	
  4536                           l198:	
  4537  1E34                     	line	155
  4538                           	
  4539                           l199:	
  4540  1E34                     	global	start
  4541                           	ljmp	start
  4542  1E34  3180  2895         	opt stack 0
  4543                           GLOBAL	__end_of_main
  4544                           	__end_of_main:
  4545  1E36                     	signat	_main,89
  4546                           	global	_uartSendByte
  4547                           
  4548 ;; *************** function _uartSendByte *****************
  4549 ;; Defined at:
  4550 ;;		line 373 in file "main.c"
  4551 ;; Parameters:    Size  Location     Type
  4552 ;;  s               1    wreg     unsigned char 
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;  s               1    0[BANK0 ] unsigned char 
  4555 ;; Return value:  Size  Location     Type
  4556 ;;                  1    wreg      void 
  4557 ;; Registers used:
  4558 ;;		wreg
  4559 ;; Tracked objects:
  4560 ;;		On entry : 0/0
  4561 ;;		On exit  : 0/0
  4562 ;;		Unchanged: 0/0
  4563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4565 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4567 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4568 ;;Total ram usage:        1 bytes
  4569 ;; Hardware stack levels used:    1
  4570 ;; Hardware stack levels required when called:    3
  4571 ;; This function calls:
  4572 ;;		Nothing
  4573 ;; This function is called by:
  4574 ;;		_main
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  4578                           	line	373
  4579                           global __ptext1
  4580                           __ptext1:	;psect for function _uartSendByte
  4581  2184                     psect	text1
  4582                           	file	"main.c"
  4583                           	line	373
  4584                           	global	__size_of_uartSendByte
  4585                           	__size_of_uartSendByte	equ	__end_of_uartSendByte-_uartSendByte
  4586  000E                     	
  4587                           _uartSendByte:	
  4588  2184                     ;incstack = 0
  4589                           	opt	stack 12
  4590                           ; Regs used in _uartSendByte: [wreg]
  4591                           ;uartSendByte@s stored from wreg
  4592                           	movlb 0	; select bank0
  4593  2184  0140               	movwf	(uartSendByte@s)
  4594  2185  00A0               	line	375
  4595                           	
  4596                           l4893:	
  4597  2186                     ;main.c: 373: void uartSendByte(char s);main.c: 374: {;main.c: 375:  TX1REG = s;
  4598                           	movf	(uartSendByte@s),w
  4599  2186  0820               	movlb 2	; select bank2
  4600  2187  0142               	movwf	(282)^0100h	;volatile
  4601  2188  009A               	line	376
  4602                           	
  4603                           l4895:	
  4604  2189                     ;main.c: 376:  __nop();
  4605                           	opt	asmopt_push
  4606                           	opt	asmopt_off
  4607                           	nop
  4608  2189  0000               	opt	asmopt_pop
  4609                           	line	377
  4610                           ;main.c: 377:  while (!PIR3bits.TX1IF);
  4611                           	goto	l276
  4612  218A  298B               	
  4613                           l277:	
  4614  218B                     	
  4615                           l276:	
  4616  218B                     	movlb 14	; select bank14
  4617  218B  014E               	btfss	(1807)^0700h,4	;volatile
  4618  218C  1E0F               	goto	u6781
  4619  218D  298F               	goto	u6780
  4620  218E  2990               u6781:
  4621  218F                     	goto	l276
  4622  218F  298B               u6780:
  4623  2190                     	goto	l279
  4624  2190  2991               	
  4625                           l278:	
  4626  2191                     	line	378
  4627                           	
  4628                           l279:	
  4629  2191                     	return
  4630  2191  0008               	opt stack 0
  4631                           GLOBAL	__end_of_uartSendByte
  4632                           	__end_of_uartSendByte:
  4633  2192                     	signat	_uartSendByte,4217
  4634                           	global	_timeSince
  4635                           
  4636 ;; *************** function _timeSince *****************
  4637 ;; Defined at:
  4638 ;;		line 162 in file "main.c"
  4639 ;; Parameters:    Size  Location     Type
  4640 ;;  since           4    4[BANK0 ] unsigned long 
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;  now             4   20[BANK0 ] unsigned long 
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  4    4[BANK0 ] unsigned long 
  4645 ;; Registers used:
  4646 ;;		wreg, status,2, status,0, pclath, cstack
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4652 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4653 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4654 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4655 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4656 ;;Total ram usage:       20 bytes
  4657 ;; Hardware stack levels used:    1
  4658 ;; Hardware stack levels required when called:    4
  4659 ;; This function calls:
  4660 ;;		_timeNow
  4661 ;; This function is called by:
  4662 ;;		_main
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  4666                           	line	162
  4667                           global __ptext2
  4668                           __ptext2:	;psect for function _timeSince
  4669  1917                     psect	text2
  4670                           	file	"main.c"
  4671                           	line	162
  4672                           	global	__size_of_timeSince
  4673                           	__size_of_timeSince	equ	__end_of_timeSince-_timeSince
  4674  0080                     	
  4675                           _timeSince:	
  4676  1917                     ;incstack = 0
  4677                           	opt	stack 11
  4678                           ; Regs used in _timeSince: [wreg+status,2+status,0+pclath+cstack]
  4679                           	line	164
  4680                           	
  4681                           l4881:	
  4682  1917                     ;main.c: 162: uint32_t timeSince(uint32_t since);main.c: 163: {;main.c: 164:  uint32_t n
                                 ow = timeNow();
  4683                           	fcall	_timeNow
  4684  1917  3188  2003  3199   	movlb 0	; select bank0
  4685  191A  0140               	movf	(3+(?_timeNow)),w
  4686  191B  0823               	movwf	(timeSince@now+3)
  4687  191C  00B7               	movf	(2+(?_timeNow)),w
  4688  191D  0822               	movwf	(timeSince@now+2)
  4689  191E  00B6               	movf	(1+(?_timeNow)),w
  4690  191F  0821               	movwf	(timeSince@now+1)
  4691  1920  00B5               	movf	(0+(?_timeNow)),w
  4692  1921  0820               	movwf	(timeSince@now)
  4693  1922  00B4               
  4694                           	line	165
  4695                           	
  4696                           l4883:	
  4697  1923                     ;main.c: 165:  if (now >= since)
  4698                           	movf	(timeSince@since+3),w
  4699  1923  0827               	subwf	(timeSince@now+3),w
  4700  1924  0237               	skipz
  4701  1925  1D03               	goto	u6775
  4702  1926  2931               	movf	(timeSince@since+2),w
  4703  1927  0826               	subwf	(timeSince@now+2),w
  4704  1928  0236               	skipz
  4705  1929  1D03               	goto	u6775
  4706  192A  2931               	movf	(timeSince@since+1),w
  4707  192B  0825               	subwf	(timeSince@now+1),w
  4708  192C  0235               	skipz
  4709  192D  1D03               	goto	u6775
  4710  192E  2931               	movf	(timeSince@since),w
  4711  192F  0824               	subwf	(timeSince@now),w
  4712  1930  0234               u6775:
  4713  1931                     	skipc
  4714  1931  1C03               	goto	u6771
  4715  1932  2934               	goto	u6770
  4716  1933  2935               u6771:
  4717  1934                     	goto	l4889
  4718  1934  295E               u6770:
  4719  1935                     	line	166
  4720                           	
  4721                           l4885:	
  4722  1935                     ;main.c: 166:   return (now - since);
  4723                           	movf	(timeSince@now),w
  4724  1935  0834               	movwf	(??_timeSince+0)+0
  4725  1936  00A8               	movf	(timeSince@now+1),w
  4726  1937  0835               	movwf	((??_timeSince+0)+0+1)
  4727  1938  00A9               	movf	(timeSince@now+2),w
  4728  1939  0836               	movwf	((??_timeSince+0)+0+2)
  4729  193A  00AA               	movf	(timeSince@now+3),w
  4730  193B  0837               	movwf	((??_timeSince+0)+0+3)
  4731  193C  00AB               	comf	(timeSince@since),w
  4732  193D  0924               	movwf	(??_timeSince+4)+0
  4733  193E  00AC               	comf	(timeSince@since+1),w
  4734  193F  0925               	movwf	((??_timeSince+4)+0+1)
  4735  1940  00AD               	comf	(timeSince@since+2),w
  4736  1941  0926               	movwf	((??_timeSince+4)+0+2)
  4737  1942  00AE               	comf	(timeSince@since+3),w
  4738  1943  0927               	movwf	((??_timeSince+4)+0+3)
  4739  1944  00AF               	incf	(??_timeSince+4)+0,f
  4740  1945  0AAC               	skipnz
  4741  1946  1903               	incf	((??_timeSince+4)+0+1),f
  4742  1947  0AAD               	skipnz
  4743  1948  1903               	incf	((??_timeSince+4)+0+2),f
  4744  1949  0AAE               	skipnz
  4745  194A  1903               	incf	((??_timeSince+4)+0+3),f
  4746  194B  0AAF               	movf	0+(??_timeSince+4)+0,w
  4747  194C  082C               	addwf	(??_timeSince+0)+0,f
  4748  194D  07A8               	movf	1+(??_timeSince+4)+0,w
  4749  194E  082D               	addwfc	(??_timeSince+0)+1,f
  4750  194F  3DA9               	movf	2+(??_timeSince+4)+0,w
  4751  1950  082E               	addwfc	(??_timeSince+0)+2,f
  4752  1951  3DAA               	movf	3+(??_timeSince+4)+0,w
  4753  1952  082F               	addwfc	(??_timeSince+0)+3,f
  4754  1953  3DAB               	movf	3+(??_timeSince+0)+0,w
  4755  1954  082B               	movwf	(?_timeSince+3)
  4756  1955  00A7               	movf	2+(??_timeSince+0)+0,w
  4757  1956  082A               	movwf	(?_timeSince+2)
  4758  1957  00A6               	movf	1+(??_timeSince+0)+0,w
  4759  1958  0829               	movwf	(?_timeSince+1)
  4760  1959  00A5               	movf	0+(??_timeSince+0)+0,w
  4761  195A  0828               	movwf	(?_timeSince)
  4762  195B  00A4               
  4763                           	goto	l206
  4764  195C  2996               	
  4765                           l4887:	
  4766  195D                     	goto	l206
  4767  195D  2996               	
  4768                           l205:	
  4769  195E                     	line	168
  4770                           	
  4771                           l4889:	
  4772  195E                     ;main.c: 168:  return (now + (1 + (0xffffffffu)/2 - since));
  4773                           	movlw	0
  4774  195E  3000               	movwf	((??_timeSince+0)+0)
  4775  195F  00A8               	movlw	0
  4776  1960  3000               	movwf	((??_timeSince+0)+0+1)
  4777  1961  00A9               	movlw	0
  4778  1962  3000               	movwf	((??_timeSince+0)+0+2)
  4779  1963  00AA               	movlw	080h
  4780  1964  3080               	movwf	((??_timeSince+0)+0+3)
  4781  1965  00AB               	movf	(timeSince@now),w
  4782  1966  0834               	movwf	(??_timeSince+4)+0
  4783  1967  00AC               	movf	(timeSince@now+1),w
  4784  1968  0835               	movwf	((??_timeSince+4)+0+1)
  4785  1969  00AD               	movf	(timeSince@now+2),w
  4786  196A  0836               	movwf	((??_timeSince+4)+0+2)
  4787  196B  00AE               	movf	(timeSince@now+3),w
  4788  196C  0837               	movwf	((??_timeSince+4)+0+3)
  4789  196D  00AF               	comf	(timeSince@since),w
  4790  196E  0924               	movwf	(??_timeSince+8)+0
  4791  196F  00B0               	comf	(timeSince@since+1),w
  4792  1970  0925               	movwf	((??_timeSince+8)+0+1)
  4793  1971  00B1               	comf	(timeSince@since+2),w
  4794  1972  0926               	movwf	((??_timeSince+8)+0+2)
  4795  1973  00B2               	comf	(timeSince@since+3),w
  4796  1974  0927               	movwf	((??_timeSince+8)+0+3)
  4797  1975  00B3               	incf	(??_timeSince+8)+0,f
  4798  1976  0AB0               	skipnz
  4799  1977  1903               	incf	((??_timeSince+8)+0+1),f
  4800  1978  0AB1               	skipnz
  4801  1979  1903               	incf	((??_timeSince+8)+0+2),f
  4802  197A  0AB2               	skipnz
  4803  197B  1903               	incf	((??_timeSince+8)+0+3),f
  4804  197C  0AB3               	movf	0+(??_timeSince+8)+0,w
  4805  197D  0830               	addwf	(??_timeSince+4)+0,f
  4806  197E  07AC               	movf	1+(??_timeSince+8)+0,w
  4807  197F  0831               	addwfc	(??_timeSince+4)+1,f
  4808  1980  3DAD               	movf	2+(??_timeSince+8)+0,w
  4809  1981  0832               	addwfc	(??_timeSince+4)+2,f
  4810  1982  3DAE               	movf	3+(??_timeSince+8)+0,w
  4811  1983  0833               	addwfc	(??_timeSince+4)+3,f
  4812  1984  3DAF               	movf	0+(??_timeSince+4)+0,w
  4813  1985  082C               	addwf	(??_timeSince+0)+0,f
  4814  1986  07A8               	movf	1+(??_timeSince+4)+0,w
  4815  1987  082D               	addwfc	(??_timeSince+0)+1,f
  4816  1988  3DA9               	movf	2+(??_timeSince+4)+0,w
  4817  1989  082E               	addwfc	(??_timeSince+0)+2,f
  4818  198A  3DAA               	movf	3+(??_timeSince+4)+0,w
  4819  198B  082F               	addwfc	(??_timeSince+0)+3,f
  4820  198C  3DAB               	movf	3+(??_timeSince+0)+0,w
  4821  198D  082B               	movwf	(?_timeSince+3)
  4822  198E  00A7               	movf	2+(??_timeSince+0)+0,w
  4823  198F  082A               	movwf	(?_timeSince+2)
  4824  1990  00A6               	movf	1+(??_timeSince+0)+0,w
  4825  1991  0829               	movwf	(?_timeSince+1)
  4826  1992  00A5               	movf	0+(??_timeSince+0)+0,w
  4827  1993  0828               	movwf	(?_timeSince)
  4828  1994  00A4               
  4829                           	goto	l206
  4830  1995  2996               	
  4831                           l4891:	
  4832  1996                     	line	169
  4833                           	
  4834                           l206:	
  4835  1996                     	return
  4836  1996  0008               	opt stack 0
  4837                           GLOBAL	__end_of_timeSince
  4838                           	__end_of_timeSince:
  4839  1997                     	signat	_timeSince,4220
  4840                           	global	_timeNow
  4841                           
  4842 ;; *************** function _timeNow *****************
  4843 ;; Defined at:
  4844 ;;		line 157 in file "main.c"
  4845 ;; Parameters:    Size  Location     Type
  4846 ;;		None
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;		None
  4849 ;; Return value:  Size  Location     Type
  4850 ;;                  4    0[BANK0 ] unsigned long 
  4851 ;; Registers used:
  4852 ;;		wreg
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/0
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4858 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4861 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4862 ;;Total ram usage:        4 bytes
  4863 ;; Hardware stack levels used:    1
  4864 ;; Hardware stack levels required when called:    3
  4865 ;; This function calls:
  4866 ;;		Nothing
  4867 ;; This function is called by:
  4868 ;;		_main
  4869 ;;		_timeSince
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  4873                           	line	157
  4874                           global __ptext3
  4875                           __ptext3:	;psect for function _timeNow
  4876  0803                     psect	text3
  4877                           	file	"main.c"
  4878                           	line	157
  4879                           	global	__size_of_timeNow
  4880                           	__size_of_timeNow	equ	__end_of_timeNow-_timeNow
  4881  0012                     	
  4882                           _timeNow:	
  4883  0803                     ;incstack = 0
  4884                           	opt	stack 11
  4885                           ; Regs used in _timeNow: [wreg]
  4886                           	line	159
  4887                           	
  4888                           l4615:	
  4889  0803                     ;main.c: 159:  return g_100msTick;
  4890                           	movlb 2	; select bank2
  4891  0803  0142               	movf	(_g_100msTick+3)^0100h,w	;volatile
  4892  0804  0865               	movlb 0	; select bank0
  4893  0805  0140               	movwf	(?_timeNow+3)
  4894  0806  00A3               	movlb 2	; select bank2
  4895  0807  0142               	movf	(_g_100msTick+2)^0100h,w	;volatile
  4896  0808  0864               	movlb 0	; select bank0
  4897  0809  0140               	movwf	(?_timeNow+2)
  4898  080A  00A2               	movlb 2	; select bank2
  4899  080B  0142               	movf	(_g_100msTick+1)^0100h,w	;volatile
  4900  080C  0863               	movlb 0	; select bank0
  4901  080D  0140               	movwf	(?_timeNow+1)
  4902  080E  00A1               	movlb 2	; select bank2
  4903  080F  0142               	movf	(_g_100msTick)^0100h,w	;volatile
  4904  0810  0862               	movlb 0	; select bank0
  4905  0811  0140               	movwf	(?_timeNow)
  4906  0812  00A0               
  4907                           	goto	l202
  4908  0813  2814               	
  4909                           l4617:	
  4910  0814                     	line	160
  4911                           	
  4912                           l202:	
  4913  0814                     	return
  4914  0814  0008               	opt stack 0
  4915                           GLOBAL	__end_of_timeNow
  4916                           	__end_of_timeNow:
  4917  0815                     	signat	_timeNow,92
  4918                           	global	_showMenu
  4919                           
  4920 ;; *************** function _showMenu *****************
  4921 ;; Defined at:
  4922 ;;		line 226 in file "main.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;		None
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;  s              61    0[BANK3 ] unsigned char [61]
  4927 ;;  s12            12   61[BANK3 ] unsigned char [12]
  4928 ;;  pb              1   73[BANK3 ] enum E7840
  4929 ;; Return value:  Size  Location     Type
  4930 ;;                  1    wreg      void 
  4931 ;; Registers used:
  4932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4933 ;; Tracked objects:
  4934 ;;		On entry : 0/0
  4935 ;;		On exit  : 0/0
  4936 ;;		Unchanged: 0/0
  4937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4939 ;;      Locals:         0       0       0       0      74       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4940 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4941 ;;      Totals:         0       0       0       2      74       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4942 ;;Total ram usage:       76 bytes
  4943 ;; Hardware stack levels used:    1
  4944 ;; Hardware stack levels required when called:   11
  4945 ;; This function calls:
  4946 ;;		_OLED_print_xy
  4947 ;;		_OLED_returnHome
  4948 ;;		_getPB
  4949 ;;		_menuInput
  4950 ;;		_sprintf
  4951 ;; This function is called by:
  4952 ;;		_main
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  4956                           	line	226
  4957                           global __ptext4
  4958                           __ptext4:	;psect for function _showMenu
  4959  126B                     psect	text4
  4960                           	file	"main.c"
  4961                           	line	226
  4962                           	global	__size_of_showMenu
  4963                           	__size_of_showMenu	equ	__end_of_showMenu-_showMenu
  4964  014B                     	
  4965                           _showMenu:	
  4966  126B                     ;incstack = 0
  4967                           	opt	stack 4
  4968                           ; Regs used in _showMenu: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4969                           	line	233
  4970                           	
  4971                           l4907:	
  4972  126B                     ;main.c: 228:  static uint8_t menu = 0;;main.c: 229:  static uint8_t page = 0;;main.c: 2
                                 30:  enum e_buttonPress pb;;main.c: 231:  char s[61], s12[12];;main.c: 233:  pb = getPB(
                                 );
  4973                           	fcall	_getPB
  4974  126B  31A1  215E  3192   	movlb 2	; select bank2
  4975  126E  0142               	movwf	(??_showMenu+0)^0100h+0
  4976  126F  00D5               	movf	(??_showMenu+0)^0100h+0,w
  4977  1270  0855               	movlb 3	; select bank3
  4978  1271  0143               	movwf	(showMenu@pb)^0180h
  4979  1272  00E9               	line	234
  4980                           	
  4981                           l4909:	
  4982  1273                     ;main.c: 234:  if (menu == 0) {
  4983                           	movf	((showMenu@menu)^0180h),w
  4984  1273  086F               	btfss	status,2
  4985  1274  1D03               	goto	u6811
  4986  1275  2A77               	goto	u6810
  4987  1276  2A78               u6811:
  4988  1277                     	goto	l4933
  4989  1277  2B8F               u6810:
  4990  1278                     	line	236
  4991                           	
  4992                           l4911:	
  4993  1278                     ;main.c: 236:   if (g_status.NOSENSOR) {
  4994                           	btfss	(_g_status)^0180h,1
  4995  1278  1CED               	goto	u6821
  4996  1279  2A7B               	goto	u6820
  4997  127A  2A7C               u6821:
  4998  127B                     	goto	l4923
  4999  127B  2ACF               u6820:
  5000  127C                     	line	237
  5001                           	
  5002                           l4913:	
  5003  127C                     ;main.c: 237:    OLED_returnHome();
  5004                           	fcall	_OLED_returnHome
  5005  127C  31A1  212C  3192   	line	238
  5006                           	
  5007                           l4915:	
  5008  127F                     ;main.c: 238:    OLED_print_xy(0, 0, "Bat.   Power");
  5009                           	movlb 0	; select bank0
  5010  127F  0140               	clrf	(OLED_print_xy@row)
  5011  1280  01A7               	movlw	low(((STR_1)|8000h))
  5012  1281  3071               	movwf	(OLED_print_xy@s)
  5013  1282  00A8               	movlw	high(((STR_1)|8000h))
  5014  1283  30A8               	movwf	((OLED_print_xy@s))+1
  5015  1284  00A9               	movlw	low(0)
  5016  1285  3000               	fcall	_OLED_print_xy
  5017  1286  31A4  2425  3192   	line	239
  5018                           	
  5019                           l4917:	
  5020  1289                     ;main.c: 239:    sprintf(s, "%4.1fV  %4.1fW", g_voltage, g_power);
  5021                           	movlw	low(((STR_2)|8000h))
  5022  1289  3099               	movlb 2	; select bank2
  5023  128A  0142               	movwf	(sprintf@fmt)^0100h
  5024  128B  00B8               	movlw	high(((STR_2)|8000h))
  5025  128C  30A8               	movwf	((sprintf@fmt)^0100h)+1
  5026  128D  00B9               	movlb 4	; select bank4
  5027  128E  0144               	movf	(_g_voltage+3)^0200h,w
  5028  128F  0833               	movlb 2	; select bank2
  5029  1290  0142               	movwf	3+(?_sprintf)^0100h+02h
  5030  1291  00BD               	movlb 4	; select bank4
  5031  1292  0144               	movf	(_g_voltage+2)^0200h,w
  5032  1293  0832               	movlb 2	; select bank2
  5033  1294  0142               	movwf	2+(?_sprintf)^0100h+02h
  5034  1295  00BC               	movlb 4	; select bank4
  5035  1296  0144               	movf	(_g_voltage+1)^0200h,w
  5036  1297  0831               	movlb 2	; select bank2
  5037  1298  0142               	movwf	1+(?_sprintf)^0100h+02h
  5038  1299  00BB               	movlb 4	; select bank4
  5039  129A  0144               	movf	(_g_voltage)^0200h,w
  5040  129B  0830               	movlb 2	; select bank2
  5041  129C  0142               	movwf	0+(?_sprintf)^0100h+02h
  5042  129D  00BA               
  5043                           	movlb 4	; select bank4
  5044  129E  0144               	movf	(_g_power+3)^0200h,w
  5045  129F  082B               	movlb 2	; select bank2
  5046  12A0  0142               	movwf	3+(?_sprintf)^0100h+06h
  5047  12A1  00C1               	movlb 4	; select bank4
  5048  12A2  0144               	movf	(_g_power+2)^0200h,w
  5049  12A3  082A               	movlb 2	; select bank2
  5050  12A4  0142               	movwf	2+(?_sprintf)^0100h+06h
  5051  12A5  00C0               	movlb 4	; select bank4
  5052  12A6  0144               	movf	(_g_power+1)^0200h,w
  5053  12A7  0829               	movlb 2	; select bank2
  5054  12A8  0142               	movwf	1+(?_sprintf)^0100h+06h
  5055  12A9  00BF               	movlb 4	; select bank4
  5056  12AA  0144               	movf	(_g_power)^0200h,w
  5057  12AB  0828               	movlb 2	; select bank2
  5058  12AC  0142               	movwf	0+(?_sprintf)^0100h+06h
  5059  12AD  00BE               
  5060                           	movlw	(low(showMenu@s|((0x1)<<8)))&0ffh
  5061  12AE  30A0               	fcall	_sprintf
  5062  12AF  31A3  2330  3192   	line	240
  5063                           	
  5064                           l4919:	
  5065  12B2                     ;main.c: 240:    OLED_print_xy(0, 1, s);
  5066                           	movlb 0	; select bank0
  5067  12B2  0140               	clrf	(OLED_print_xy@row)
  5068  12B3  01A7               	incf	(OLED_print_xy@row),f
  5069  12B4  0AA7               	movlw	low(showMenu@s)
  5070  12B5  30A0               	movwf	(OLED_print_xy@s)
  5071  12B6  00A8               	movlw	high(showMenu@s)
  5072  12B7  3001               	movwf	(OLED_print_xy@s+1)
  5073  12B8  00A9               	movlw	low(0)
  5074  12B9  3000               	fcall	_OLED_print_xy
  5075  12BA  31A4  2425  3192   	line	241
  5076                           	
  5077                           l4921:	
  5078  12BD                     ;main.c: 241:    menuInput(&page, 1, &menu, 1, 0, 0);
  5079                           	movlb 0	; select bank0
  5080  12BD  0140               	clrf	(menuInput@numPages)
  5081  12BE  01A7               	incf	(menuInput@numPages),f
  5082  12BF  0AA7               	movlw	(low(showMenu@menu|((0x1)<<8)))&0ffh
  5083  12C0  30EF               	movlb 2	; select bank2
  5084  12C1  0142               	movwf	(??_showMenu+0)^0100h+0
  5085  12C2  00D5               	movf	(??_showMenu+0)^0100h+0,w
  5086  12C3  0855               	movlb 0	; select bank0
  5087  12C4  0140               	movwf	(menuInput@menu)
  5088  12C5  00A8               	clrf	(menuInput@pbShort)
  5089  12C6  01A9               	incf	(menuInput@pbShort),f
  5090  12C7  0AA9               	clrf	(menuInput@pbLong)
  5091  12C8  01AA               	clrf	(menuInput@timeout)
  5092  12C9  01AB               	movlw	(low(showMenu@page|((0x1)<<8)))&0ffh
  5093  12CA  30EE               	fcall	_menuInput
  5094  12CB  319C  249D  3192   	line	242
  5095                           ;main.c: 242:   } else {
  5096                           	goto	l248
  5097  12CE  2BB5               	
  5098                           l242:	
  5099  12CF                     	line	243
  5100                           	
  5101                           l4923:	
  5102  12CF                     ;main.c: 243:    OLED_print_xy(0, 0, "Temperature Rel.humidityDewpoint    Bat.   Power")
                                 ;
  5103                           	movlb 0	; select bank0
  5104  12CF  0140               	clrf	(OLED_print_xy@row)
  5105  12D0  01A7               	movlw	low(((STR_3)|8000h))
  5106  12D1  304D               	movwf	(OLED_print_xy@s)
  5107  12D2  00A8               	movlw	high(((STR_3)|8000h))
  5108  12D3  30A8               	movwf	((OLED_print_xy@s))+1
  5109  12D4  00A9               	movlw	low(0)
  5110  12D5  3000               	fcall	_OLED_print_xy
  5111  12D6  31A4  2425  3192   	line	244
  5112                           	
  5113                           l4925:	
  5114  12D9                     ;main.c: 244:    if (g_status.NOAUXTEMP)
  5115                           	movlb 3	; select bank3
  5116  12D9  0143               	btfss	(_g_status)^0180h,2
  5117  12DA  1D6D               	goto	u6831
  5118  12DB  2ADD               	goto	u6830
  5119  12DC  2ADE               u6831:
  5120  12DD                     	goto	l4929
  5121  12DD  2AF8               u6830:
  5122  12DE                     	line	245
  5123                           	
  5124                           l4927:	
  5125  12DE                     ;main.c: 245:     sprintf(s12, "%5.1f \337C    ", g_tempC);
  5126                           	movlw	low(((STR_4)|8000h))
  5127  12DE  30B9               	movlb 2	; select bank2
  5128  12DF  0142               	movwf	(sprintf@fmt)^0100h
  5129  12E0  00B8               	movlw	high(((STR_4)|8000h))
  5130  12E1  30A8               	movwf	((sprintf@fmt)^0100h)+1
  5131  12E2  00B9               	movlb 4	; select bank4
  5132  12E3  0144               	movf	(_g_tempC+3)^0200h,w
  5133  12E4  0847               	movlb 2	; select bank2
  5134  12E5  0142               	movwf	3+(?_sprintf)^0100h+02h
  5135  12E6  00BD               	movlb 4	; select bank4
  5136  12E7  0144               	movf	(_g_tempC+2)^0200h,w
  5137  12E8  0846               	movlb 2	; select bank2
  5138  12E9  0142               	movwf	2+(?_sprintf)^0100h+02h
  5139  12EA  00BC               	movlb 4	; select bank4
  5140  12EB  0144               	movf	(_g_tempC+1)^0200h,w
  5141  12EC  0845               	movlb 2	; select bank2
  5142  12ED  0142               	movwf	1+(?_sprintf)^0100h+02h
  5143  12EE  00BB               	movlb 4	; select bank4
  5144  12EF  0144               	movf	(_g_tempC)^0200h,w
  5145  12F0  0844               	movlb 2	; select bank2
  5146  12F1  0142               	movwf	0+(?_sprintf)^0100h+02h
  5147  12F2  00BA               
  5148                           	movlw	(low(showMenu@s12|((0x1)<<8)))&0ffh
  5149  12F3  30DD               	fcall	_sprintf
  5150  12F4  31A3  2330  3192   	goto	l245
  5151  12F7  2B21               	line	246
  5152                           ;main.c: 246:    else
  5153                           	
  5154                           l244:	
  5155  12F8                     	line	247
  5156                           	
  5157                           l4929:	
  5158  12F8                     ;main.c: 247:     sprintf(s12, "%3.0f | %3.0f \337C", g_tempC, g_tempAux);
  5159                           	movlw	low(((STR_5)|8000h))
  5160  12F8  30A8               	movlb 2	; select bank2
  5161  12F9  0142               	movwf	(sprintf@fmt)^0100h
  5162  12FA  00B8               	movlw	high(((STR_5)|8000h))
  5163  12FB  30A8               	movwf	((sprintf@fmt)^0100h)+1
  5164  12FC  00B9               	movlb 4	; select bank4
  5165  12FD  0144               	movf	(_g_tempC+3)^0200h,w
  5166  12FE  0847               	movlb 2	; select bank2
  5167  12FF  0142               	movwf	3+(?_sprintf)^0100h+02h
  5168  1300  00BD               	movlb 4	; select bank4
  5169  1301  0144               	movf	(_g_tempC+2)^0200h,w
  5170  1302  0846               	movlb 2	; select bank2
  5171  1303  0142               	movwf	2+(?_sprintf)^0100h+02h
  5172  1304  00BC               	movlb 4	; select bank4
  5173  1305  0144               	movf	(_g_tempC+1)^0200h,w
  5174  1306  0845               	movlb 2	; select bank2
  5175  1307  0142               	movwf	1+(?_sprintf)^0100h+02h
  5176  1308  00BB               	movlb 4	; select bank4
  5177  1309  0144               	movf	(_g_tempC)^0200h,w
  5178  130A  0844               	movlb 2	; select bank2
  5179  130B  0142               	movwf	0+(?_sprintf)^0100h+02h
  5180  130C  00BA               
  5181                           	movlb 4	; select bank4
  5182  130D  0144               	movf	(_g_tempAux+3)^0200h,w
  5183  130E  0837               	movlb 2	; select bank2
  5184  130F  0142               	movwf	3+(?_sprintf)^0100h+06h
  5185  1310  00C1               	movlb 4	; select bank4
  5186  1311  0144               	movf	(_g_tempAux+2)^0200h,w
  5187  1312  0836               	movlb 2	; select bank2
  5188  1313  0142               	movwf	2+(?_sprintf)^0100h+06h
  5189  1314  00C0               	movlb 4	; select bank4
  5190  1315  0144               	movf	(_g_tempAux+1)^0200h,w
  5191  1316  0835               	movlb 2	; select bank2
  5192  1317  0142               	movwf	1+(?_sprintf)^0100h+06h
  5193  1318  00BF               	movlb 4	; select bank4
  5194  1319  0144               	movf	(_g_tempAux)^0200h,w
  5195  131A  0834               	movlb 2	; select bank2
  5196  131B  0142               	movwf	0+(?_sprintf)^0100h+06h
  5197  131C  00BE               
  5198                           	movlw	(low(showMenu@s12|((0x1)<<8)))&0ffh
  5199  131D  30DD               	fcall	_sprintf
  5200  131E  31A3  2330  3192   	
  5201                           l245:	
  5202  1321                     	line	249
  5203                           ;main.c: 249:    sprintf(s, "%s%5.1f %%     %5.1f \337C    %4.1fV  %4.1fW",
  5204                           	movlw	low(((STR_6)|8000h))
  5205  1321  307E               	movlb 2	; select bank2
  5206  1322  0142               	movwf	(sprintf@fmt)^0100h
  5207  1323  00B8               	movlw	high(((STR_6)|8000h))
  5208  1324  30A8               	movwf	((sprintf@fmt)^0100h)+1
  5209  1325  00B9               	movlw	(low(showMenu@s12|((0x1)<<8)))&0ffh
  5210  1326  30DD               	movwf	(??_showMenu+0)^0100h+0
  5211  1327  00D5               	movf	(??_showMenu+0)^0100h+0,w
  5212  1328  0855               	movwf	(0+low(?_sprintf|((0x1)<<8)+02h))^00h
  5213  1329  00BA               	movlb 4	; select bank4
  5214  132A  0144               	movf	(_g_relHum+3)^0200h,w
  5215  132B  0843               	movlb 2	; select bank2
  5216  132C  0142               	movwf	3+(?_sprintf)^0100h+03h
  5217  132D  00BE               	movlb 4	; select bank4
  5218  132E  0144               	movf	(_g_relHum+2)^0200h,w
  5219  132F  0842               	movlb 2	; select bank2
  5220  1330  0142               	movwf	2+(?_sprintf)^0100h+03h
  5221  1331  00BD               	movlb 4	; select bank4
  5222  1332  0144               	movf	(_g_relHum+1)^0200h,w
  5223  1333  0841               	movlb 2	; select bank2
  5224  1334  0142               	movwf	1+(?_sprintf)^0100h+03h
  5225  1335  00BC               	movlb 4	; select bank4
  5226  1336  0144               	movf	(_g_relHum)^0200h,w
  5227  1337  0840               	movlb 2	; select bank2
  5228  1338  0142               	movwf	0+(?_sprintf)^0100h+03h
  5229  1339  00BB               
  5230                           	movlb 4	; select bank4
  5231  133A  0144               	movf	(_g_dewPointC+3)^0200h,w
  5232  133B  083F               	movlb 2	; select bank2
  5233  133C  0142               	movwf	3+(?_sprintf)^0100h+07h
  5234  133D  00C2               	movlb 4	; select bank4
  5235  133E  0144               	movf	(_g_dewPointC+2)^0200h,w
  5236  133F  083E               	movlb 2	; select bank2
  5237  1340  0142               	movwf	2+(?_sprintf)^0100h+07h
  5238  1341  00C1               	movlb 4	; select bank4
  5239  1342  0144               	movf	(_g_dewPointC+1)^0200h,w
  5240  1343  083D               	movlb 2	; select bank2
  5241  1344  0142               	movwf	1+(?_sprintf)^0100h+07h
  5242  1345  00C0               	movlb 4	; select bank4
  5243  1346  0144               	movf	(_g_dewPointC)^0200h,w
  5244  1347  083C               	movlb 2	; select bank2
  5245  1348  0142               	movwf	0+(?_sprintf)^0100h+07h
  5246  1349  00BF               
  5247                           	movlb 4	; select bank4
  5248  134A  0144               	movf	(_g_voltage+3)^0200h,w
  5249  134B  0833               	movlb 2	; select bank2
  5250  134C  0142               	movwf	3+(?_sprintf)^0100h+0Bh
  5251  134D  00C6               	movlb 4	; select bank4
  5252  134E  0144               	movf	(_g_voltage+2)^0200h,w
  5253  134F  0832               	movlb 2	; select bank2
  5254  1350  0142               	movwf	2+(?_sprintf)^0100h+0Bh
  5255  1351  00C5               	movlb 4	; select bank4
  5256  1352  0144               	movf	(_g_voltage+1)^0200h,w
  5257  1353  0831               	movlb 2	; select bank2
  5258  1354  0142               	movwf	1+(?_sprintf)^0100h+0Bh
  5259  1355  00C4               	movlb 4	; select bank4
  5260  1356  0144               	movf	(_g_voltage)^0200h,w
  5261  1357  0830               	movlb 2	; select bank2
  5262  1358  0142               	movwf	0+(?_sprintf)^0100h+0Bh
  5263  1359  00C3               
  5264                           	movlb 4	; select bank4
  5265  135A  0144               	movf	(_g_power+3)^0200h,w
  5266  135B  082B               	movlb 2	; select bank2
  5267  135C  0142               	movwf	3+(?_sprintf)^0100h+0Fh
  5268  135D  00CA               	movlb 4	; select bank4
  5269  135E  0144               	movf	(_g_power+2)^0200h,w
  5270  135F  082A               	movlb 2	; select bank2
  5271  1360  0142               	movwf	2+(?_sprintf)^0100h+0Fh
  5272  1361  00C9               	movlb 4	; select bank4
  5273  1362  0144               	movf	(_g_power+1)^0200h,w
  5274  1363  0829               	movlb 2	; select bank2
  5275  1364  0142               	movwf	1+(?_sprintf)^0100h+0Fh
  5276  1365  00C8               	movlb 4	; select bank4
  5277  1366  0144               	movf	(_g_power)^0200h,w
  5278  1367  0828               	movlb 2	; select bank2
  5279  1368  0142               	movwf	0+(?_sprintf)^0100h+0Fh
  5280  1369  00C7               
  5281                           	movlw	(low(showMenu@s|((0x1)<<8)))&0ffh
  5282  136A  30A0               	fcall	_sprintf
  5283  136B  31A3  2330  3192   	line	251
  5284                           ;main.c: 251:    OLED_print_xy(0, 1, s);
  5285                           	movlb 0	; select bank0
  5286  136E  0140               	clrf	(OLED_print_xy@row)
  5287  136F  01A7               	incf	(OLED_print_xy@row),f
  5288  1370  0AA7               	movlw	low(showMenu@s)
  5289  1371  30A0               	movwf	(OLED_print_xy@s)
  5290  1372  00A8               	movlw	high(showMenu@s)
  5291  1373  3001               	movwf	(OLED_print_xy@s+1)
  5292  1374  00A9               	movlw	low(0)
  5293  1375  3000               	fcall	_OLED_print_xy
  5294  1376  31A4  2425  3192   	line	252
  5295                           	
  5296                           l4931:	
  5297  1379                     ;main.c: 252:    menuInput(&page, 4, &menu, 1, 0, 0);
  5298                           	movlw	low(04h)
  5299  1379  3004               	movlb 2	; select bank2
  5300  137A  0142               	movwf	(??_showMenu+0)^0100h+0
  5301  137B  00D5               	movf	(??_showMenu+0)^0100h+0,w
  5302  137C  0855               	movlb 0	; select bank0
  5303  137D  0140               	movwf	(menuInput@numPages)
  5304  137E  00A7               	movlw	(low(showMenu@menu|((0x1)<<8)))&0ffh
  5305  137F  30EF               	movlb 2	; select bank2
  5306  1380  0142               	movwf	(??_showMenu+1)^0100h+0
  5307  1381  00D6               	movf	(??_showMenu+1)^0100h+0,w
  5308  1382  0856               	movlb 0	; select bank0
  5309  1383  0140               	movwf	(menuInput@menu)
  5310  1384  00A8               	clrf	(menuInput@pbShort)
  5311  1385  01A9               	incf	(menuInput@pbShort),f
  5312  1386  0AA9               	clrf	(menuInput@pbLong)
  5313  1387  01AA               	clrf	(menuInput@timeout)
  5314  1388  01AB               	movlw	(low(showMenu@page|((0x1)<<8)))&0ffh
  5315  1389  30EE               	fcall	_menuInput
  5316  138A  319C  249D  3192   	goto	l248
  5317  138D  2BB5               	line	253
  5318                           ;main.c: 253:   }
  5319                           	
  5320                           l243:	
  5321  138E                     	line	254
  5322                           ;main.c: 254:  } else if (menu == 1) {
  5323                           	goto	l248
  5324  138E  2BB5               	
  5325                           l241:	
  5326  138F                     	
  5327                           l4933:	
  5328  138F                     	movlb 3	; select bank3
  5329  138F  0143               		decf	((showMenu@menu)^0180h),w
  5330  1390  036F               	btfss	status,2
  5331  1391  1D03               	goto	u6841
  5332  1392  2B94               	goto	u6840
  5333  1393  2B95               u6841:
  5334  1394                     	goto	l248
  5335  1394  2BB5               u6840:
  5336  1395                     	line	256
  5337                           	
  5338                           l4935:	
  5339  1395                     ;main.c: 256:   OLED_print_xy(0, 0, "Ch1: xx inchCh2: xx inchCh3: xx inchCh4: xx inch");
                                 
  5340                           	movlb 0	; select bank0
  5341  1395  0140               	clrf	(OLED_print_xy@row)
  5342  1396  01A7               	movlw	low(((STR_7)|8000h))
  5343  1397  301C               	movwf	(OLED_print_xy@s)
  5344  1398  00A8               	movlw	high(((STR_7)|8000h))
  5345  1399  30A8               	movwf	((OLED_print_xy@s))+1
  5346  139A  00A9               	movlw	low(0)
  5347  139B  3000               	fcall	_OLED_print_xy
  5348  139C  31A4  2425  3192   	line	257
  5349                           	
  5350                           l4937:	
  5351  139F                     ;main.c: 257:   menuInput(&page, 4, &menu, 1, 0, 0);
  5352                           	movlw	low(04h)
  5353  139F  3004               	movlb 2	; select bank2
  5354  13A0  0142               	movwf	(??_showMenu+0)^0100h+0
  5355  13A1  00D5               	movf	(??_showMenu+0)^0100h+0,w
  5356  13A2  0855               	movlb 0	; select bank0
  5357  13A3  0140               	movwf	(menuInput@numPages)
  5358  13A4  00A7               	movlw	(low(showMenu@menu|((0x1)<<8)))&0ffh
  5359  13A5  30EF               	movlb 2	; select bank2
  5360  13A6  0142               	movwf	(??_showMenu+1)^0100h+0
  5361  13A7  00D6               	movf	(??_showMenu+1)^0100h+0,w
  5362  13A8  0856               	movlb 0	; select bank0
  5363  13A9  0140               	movwf	(menuInput@menu)
  5364  13AA  00A8               	clrf	(menuInput@pbShort)
  5365  13AB  01A9               	incf	(menuInput@pbShort),f
  5366  13AC  0AA9               	clrf	(menuInput@pbLong)
  5367  13AD  01AA               	clrf	(menuInput@timeout)
  5368  13AE  01AB               	movlw	(low(showMenu@page|((0x1)<<8)))&0ffh
  5369  13AF  30EE               	fcall	_menuInput
  5370  13B0  319C  249D  3192   	goto	l248
  5371  13B3  2BB5               	line	258
  5372                           ;main.c: 258:  }
  5373                           	
  5374                           l247:	
  5375  13B4                     	goto	l248
  5376  13B4  2BB5               	
  5377                           l246:	
  5378  13B5                     	line	259
  5379                           	
  5380                           l248:	
  5381  13B5                     	return
  5382  13B5  0008               	opt stack 0
  5383                           GLOBAL	__end_of_showMenu
  5384                           	__end_of_showMenu:
  5385  13B6                     	signat	_showMenu,89
  5386                           	global	_sprintf
  5387                           
  5388 ;; *************** function _sprintf *****************
  5389 ;; Defined at:
  5390 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;  s               1    wreg     PTR unsigned char 
  5393 ;;		 -> showMenu@s12(12), showMenu@s(61), 
  5394 ;;  fmt             2   24[BANK2 ] PTR const unsigned char 
  5395 ;;		 -> STR_6(42), STR_5(17), STR_4(13), STR_2(15), 
  5396 ;; Auto vars:     Size  Location     Type
  5397 ;;  s               1   46[BANK2 ] PTR unsigned char 
  5398 ;;		 -> showMenu@s12(12), showMenu@s(61), 
  5399 ;;  f               5   48[BANK2 ] struct _IO_FILE
  5400 ;;  ret             2   44[BANK2 ] int 
  5401 ;;  ap              1   47[BANK2 ] PTR void [1]
  5402 ;;		 -> ?_sprintf(2), 
  5403 ;; Return value:  Size  Location     Type
  5404 ;;                  2   24[BANK2 ] int 
  5405 ;; Registers used:
  5406 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5407 ;; Tracked objects:
  5408 ;;		On entry : 0/0
  5409 ;;		On exit  : 0/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5412 ;;      Params:         0       0       0      19       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5413 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5414 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5415 ;;      Totals:         0       0       0      29       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5416 ;;Total ram usage:       29 bytes
  5417 ;; Hardware stack levels used:    1
  5418 ;; Hardware stack levels required when called:   10
  5419 ;; This function calls:
  5420 ;;		_vfprintf
  5421 ;; This function is called by:
  5422 ;;		_showMenu
  5423 ;; This function uses a non-reentrant model
  5424 ;;
  5425                           psect	text5,local,class=CODE,delta=2,merge=1,group=2
  5426                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  5427                           	line	9
  5428                           global __ptext5
  5429                           __ptext5:	;psect for function _sprintf
  5430  2330                     psect	text5
  5431                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  5432                           	line	9
  5433                           	global	__size_of_sprintf
  5434                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  5435  0029                     	
  5436                           _sprintf:	
  5437  2330                     ;incstack = 0
  5438                           	opt	stack 4
  5439                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5440                           ;sprintf@s stored from wreg
  5441                           	movlb 2	; select bank2
  5442  2330  0142               	movwf	(sprintf@s)^0100h
  5443  2331  00CE               	line	15
  5444                           	
  5445                           l4645:	
  5446  2332                     	movlw	(low(?_sprintf|((0x1)<<8)+02h))&0ffh
  5447  2332  303A               	movwf	(??_sprintf+0)^0100h+0
  5448  2333  00CB               	movf	(??_sprintf+0)^0100h+0,w
  5449  2334  084B               	movwf	(sprintf@ap)^0100h
  5450  2335  00CF               	line	16
  5451                           	movf	(sprintf@s)^0100h,w
  5452  2336  084E               	movwf	(??_sprintf+0)^0100h+0
  5453  2337  00CB               	movf	(??_sprintf+0)^0100h+0,w
  5454  2338  084B               	movwf	(sprintf@f)^0100h
  5455  2339  00D0               	line	17
  5456                           	
  5457                           l4647:	
  5458  233A                     	clrf	0+(sprintf@f)^0100h+01h
  5459  233A  01D1               	clrf	1+(sprintf@f)^0100h+01h
  5460  233B  01D2               	line	18
  5461                           	
  5462                           l4649:	
  5463  233C                     	clrf	0+(sprintf@f)^0100h+03h
  5464  233C  01D3               	clrf	1+(sprintf@f)^0100h+03h
  5465  233D  01D4               	line	19
  5466                           	
  5467                           l4651:	
  5468  233E                     	movf	(sprintf@fmt+1)^0100h,w
  5469  233E  0839               	movwf	(vfprintf@fmt+1)^0100h
  5470  233F  00B1               	movf	(sprintf@fmt)^0100h,w
  5471  2340  0838               	movwf	(vfprintf@fmt)^0100h
  5472  2341  00B0               	movlw	(low(sprintf@ap|((0x1)<<8)))&0ffh
  5473  2342  304F               	movwf	(??_sprintf+0)^0100h+0
  5474  2343  00CB               	movf	(??_sprintf+0)^0100h+0,w
  5475  2344  084B               	movwf	(vfprintf@ap)^0100h
  5476  2345  00B2               	movlw	(low(sprintf@f|((0x1)<<8)))&0ffh
  5477  2346  3050               	fcall	_vfprintf
  5478  2347  3187  27C5  31A3   	movlb 2	; select bank2
  5479  234A  0142               	movf	(1+(?_vfprintf))^0100h,w
  5480  234B  0831               	movwf	(sprintf@ret+1)^0100h
  5481  234C  00CD               	movf	(0+(?_vfprintf))^0100h,w
  5482  234D  0830               	movwf	(sprintf@ret)^0100h
  5483  234E  00CC               	line	20
  5484                           	
  5485                           l4653:	
  5486  234F                     	movf	0+(sprintf@f)^0100h+01h,w
  5487  234F  0851               	addwf	(sprintf@s)^0100h,w
  5488  2350  074E               	movwf	(??_sprintf+0)^0100h+0
  5489  2351  00CB               	movf	0+(??_sprintf+0)^0100h+0,w
  5490  2352  084B               	movwf	fsr1l
  5491  2353  0086               	movlw 1	; select bank2/3
  5492  2354  3001               	movwf fsr1h	
  5493  2355  0087               	
  5494                           	clrf	indf1
  5495  2356  0181               	goto	l1124
  5496  2357  2B58               	line	22
  5497                           	
  5498                           l4655:	
  5499  2358                     	line	23
  5500                           ;	Return value of _sprintf is never used
  5501                           	
  5502                           l1124:	
  5503  2358                     	return
  5504  2358  0008               	opt stack 0
  5505                           GLOBAL	__end_of_sprintf
  5506                           	__end_of_sprintf:
  5507  2359                     	signat	_sprintf,4698
  5508                           	global	_vfprintf
  5509                           
  5510 ;; *************** function _vfprintf *****************
  5511 ;; Defined at:
  5512 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;  fp              1    wreg     PTR struct _IO_FILE
  5515 ;;		 -> sprintf@f(5), 
  5516 ;;  fmt             2   16[BANK2 ] PTR const unsigned char 
  5517 ;;		 -> STR_6(42), STR_5(17), STR_4(13), STR_2(15), 
  5518 ;;  ap              1   18[BANK2 ] PTR PTR void 
  5519 ;;		 -> sprintf@ap(1), 
  5520 ;; Auto vars:     Size  Location     Type
  5521 ;;  fp              1   21[BANK2 ] PTR struct _IO_FILE
  5522 ;;		 -> sprintf@f(5), 
  5523 ;;  cfmt            2   22[BANK2 ] PTR unsigned char 
  5524 ;;		 -> STR_6(42), STR_5(17), STR_4(13), STR_2(15), 
  5525 ;; Return value:  Size  Location     Type
  5526 ;;                  2   16[BANK2 ] int 
  5527 ;; Registers used:
  5528 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5529 ;; Tracked objects:
  5530 ;;		On entry : 0/0
  5531 ;;		On exit  : 0/0
  5532 ;;		Unchanged: 0/0
  5533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5534 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5535 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5536 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5537 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5538 ;;Total ram usage:        8 bytes
  5539 ;; Hardware stack levels used:    1
  5540 ;; Hardware stack levels required when called:    9
  5541 ;; This function calls:
  5542 ;;		_vfpfcnvrt
  5543 ;; This function is called by:
  5544 ;;		_sprintf
  5545 ;; This function uses a non-reentrant model
  5546 ;;
  5547                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  5548                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  5549                           	line	1368
  5550                           global __ptext6
  5551                           __ptext6:	;psect for function _vfprintf
  5552  07C5                     psect	text6
  5553                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  5554                           	line	1368
  5555                           	global	__size_of_vfprintf
  5556                           	__size_of_vfprintf	equ	__end_of_vfprintf-_vfprintf
  5557  0039                     	
  5558                           _vfprintf:	
  5559  07C5                     ;incstack = 0
  5560                           	opt	stack 4
  5561                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5562                           ;vfprintf@fp stored from wreg
  5563                           	movlb 2	; select bank2
  5564  07C5  0142               	movwf	(vfprintf@fp)^0100h
  5565  07C6  00B5               	line	1373
  5566                           	
  5567                           l4589:	
  5568  07C7                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1368: int v
                                 fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
                                 0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pi
                                 c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
                                 8\v2.00\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5569                           	movf	(vfprintf@fmt+1)^0100h,w
  5570  07C7  0831               	movwf	(vfprintf@cfmt+1)^0100h
  5571  07C8  00B7               	movf	(vfprintf@fmt)^0100h,w
  5572  07C9  0830               	movwf	(vfprintf@cfmt)^0100h
  5573  07CA  00B6               	line	1374
  5574                           	
  5575                           l4591:	
  5576  07CB                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1374:     n
                                 out = 0;
  5577                           	movlb 4	; select bank4
  5578  07CB  0144               	clrf	(_nout)^0200h
  5579  07CC  01C8               	clrf	(_nout+1)^0200h
  5580  07CD  01C9               	line	1375
  5581                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
                                 hile (*cfmt) {
  5582                           	goto	l4595
  5583  07CE  2FE9               	
  5584                           l585:	
  5585  07CF                     	line	1376
  5586                           	
  5587                           l4593:	
  5588  07CF                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1376:      
                                    nout += vfpfcnvrt(fp, &cfmt, ap);
  5589                           	movlw	(low(vfprintf@cfmt|((0x1)<<8)))&0ffh
  5590  07CF  3036               	movlb 2	; select bank2
  5591  07D0  0142               	movwf	(??_vfprintf+0)^0100h+0
  5592  07D1  00B3               	movf	(??_vfprintf+0)^0100h+0,w
  5593  07D2  0833               	movlb 1	; select bank1
  5594  07D3  0141               	movwf	(vfpfcnvrt@fmt)^080h
  5595  07D4  00E8               	movlb 2	; select bank2
  5596  07D5  0142               	movf	(vfprintf@ap)^0100h,w
  5597  07D6  0832               	movwf	(??_vfprintf+1)^0100h+0
  5598  07D7  00B4               	movf	(??_vfprintf+1)^0100h+0,w
  5599  07D8  0834               	movlb 1	; select bank1
  5600  07D9  0141               	movwf	(vfpfcnvrt@ap)^080h
  5601  07DA  00E9               	movlb 2	; select bank2
  5602  07DB  0142               	movf	(vfprintf@fp)^0100h,w
  5603  07DC  0835               	fcall	_vfpfcnvrt
  5604  07DD  318C  2423  3187   	movlb 1	; select bank1
  5605  07E0  0141               	movf	(0+(?_vfpfcnvrt))^080h,w
  5606  07E1  0868               	movlb 4	; select bank4
  5607  07E2  0144               	addwf	(_nout)^0200h,f
  5608  07E3  07C8               	movlb 1	; select bank1
  5609  07E4  0141               	movf	(1+(?_vfpfcnvrt))^080h,w
  5610  07E5  0869               	movlb 4	; select bank4
  5611  07E6  0144               	addwfc	(_nout+1)^0200h,f
  5612  07E7  3DC9               	goto	l4595
  5613  07E8  2FE9               	line	1377
  5614                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1377:     }
                                 
  5615                           	
  5616                           l584:	
  5617  07E9                     	line	1375
  5618                           	
  5619                           l4595:	
  5620  07E9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
                                 hile (*cfmt) {
  5621                           	movlb 2	; select bank2
  5622  07E9  0142               	movf	(vfprintf@cfmt)^0100h,w
  5623  07EA  0836               	movwf	fsr0l
  5624  07EB  0084               	movf	((vfprintf@cfmt+1)^0100h),w
  5625  07EC  0837               	movwf	fsr0h
  5626  07ED  0085               	moviw	fsr0++
  5627  07EE  0012               	btfss	status,2
  5628  07EF  1D03               	goto	u6401
  5629  07F0  2FF2               	goto	u6400
  5630  07F1  2FF3               u6401:
  5631  07F2                     	goto	l4593
  5632  07F2  2FCF               u6400:
  5633  07F3                     	goto	l4597
  5634  07F3  2FF4               	
  5635                           l586:	
  5636  07F4                     	line	1378
  5637                           	
  5638                           l4597:	
  5639  07F4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1378:     r
                                 eturn nout;
  5640                           	movlb 4	; select bank4
  5641  07F4  0144               	movf	(_nout+1)^0200h,w
  5642  07F5  0849               	movlb 2	; select bank2
  5643  07F6  0142               	movwf	(?_vfprintf+1)^0100h
  5644  07F7  00B1               	movlb 4	; select bank4
  5645  07F8  0144               	movf	(_nout)^0200h,w
  5646  07F9  0848               	movlb 2	; select bank2
  5647  07FA  0142               	movwf	(?_vfprintf)^0100h
  5648  07FB  00B0               	goto	l587
  5649  07FC  2FFD               	
  5650                           l4599:	
  5651  07FD                     	line	1382
  5652                           	
  5653                           l587:	
  5654  07FD                     	return
  5655  07FD  0008               	opt stack 0
  5656                           GLOBAL	__end_of_vfprintf
  5657                           	__end_of_vfprintf:
  5658  07FE                     	signat	_vfprintf,12410
  5659                           	global	_vfpfcnvrt
  5660                           
  5661 ;; *************** function _vfpfcnvrt *****************
  5662 ;; Defined at:
  5663 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;  fp              1    wreg     PTR struct _IO_FILE
  5666 ;;		 -> sprintf@f(5), 
  5667 ;;  fmt             1   72[BANK1 ] PTR PTR unsigned char 
  5668 ;;		 -> vfprintf@cfmt(2), 
  5669 ;;  ap              1   73[BANK1 ] PTR PTR void 
  5670 ;;		 -> sprintf@ap(1), 
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;  fp              1   15[BANK2 ] PTR struct _IO_FILE
  5673 ;;		 -> sprintf@f(5), 
  5674 ;;  f               4    7[BANK2 ] PTR struct _IO_FILE
  5675 ;;  llu             4    0        unsigned long 
  5676 ;;  ll              4    0        long 
  5677 ;;  ct              3   11[BANK2 ] unsigned char [3]
  5678 ;;  vp              2    0        PTR void 
  5679 ;;  i               2    0        int 
  5680 ;;  done            2    0        int 
  5681 ;;  c               1   14[BANK2 ] unsigned char 
  5682 ;;  cp              1    6[BANK2 ] PTR unsigned char 
  5683 ;;		 -> ?_sprintf(2), showMenu@s12(12), 
  5684 ;; Return value:  Size  Location     Type
  5685 ;;                  2   72[BANK1 ] int 
  5686 ;; Registers used:
  5687 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5688 ;; Tracked objects:
  5689 ;;		On entry : 0/0
  5690 ;;		On exit  : 0/0
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5693 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5694 ;;      Locals:         0       0       0      16       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5695 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5696 ;;      Totals:         0       0       8      16       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5697 ;;Total ram usage:       24 bytes
  5698 ;; Hardware stack levels used:    1
  5699 ;; Hardware stack levels required when called:    8
  5700 ;; This function calls:
  5701 ;;		_atoi
  5702 ;;		_efgtoa
  5703 ;;		_fputc
  5704 ;;		_isdigit
  5705 ;;		_isupper
  5706 ;;		_stoa
  5707 ;;		_strncmp
  5708 ;;		_tolower
  5709 ;; This function is called by:
  5710 ;;		_vfprintf
  5711 ;; This function uses a non-reentrant model
  5712 ;;
  5713                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  5714                           	line	670
  5715                           global __ptext7
  5716                           __ptext7:	;psect for function _vfpfcnvrt
  5717  0C23                     psect	text7
  5718                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  5719                           	line	670
  5720                           	global	__size_of_vfpfcnvrt
  5721                           	__size_of_vfpfcnvrt	equ	__end_of_vfpfcnvrt-_vfpfcnvrt
  5722  03DD                     	
  5723                           _vfpfcnvrt:	
  5724  0C23                     ;incstack = 0
  5725                           	opt	stack 4
  5726                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5727                           ;vfpfcnvrt@fp stored from wreg
  5728                           	movlb 2	; select bank2
  5729  0C23  0142               	movwf	(vfpfcnvrt@fp)^0100h
  5730  0C24  00AF               	line	680
  5731                           	
  5732                           l4439:	
  5733  0C25                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 670: static
                                  int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
                                 2.00\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.00\
                                 pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
                                 rochip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
                                  (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5734                           	movlb 1	; select bank1
  5735  0C25  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5736  0C26  0868               	movwf	fsr1l
  5737  0C27  0086               	movlw 1	; select bank2/3
  5738  0C28  3001               	movwf fsr1h	
  5739  0C29  0087               	
  5740                           	moviw	[0]fsr1
  5741  0C2A  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5742  0C2B  00EA               	moviw	[1]fsr1
  5743  0C2C  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5744  0C2D  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5745  0C2E  086A               	movwf	fsr0l
  5746  0C2F  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5747  0C30  086B               	movwf	fsr0h
  5748  0C31  0085               	moviw	fsr0++
  5749  0C32  0012               xorlw	37
  5750  0C33  3A25               	btfss	status,2
  5751  0C34  1D03               	goto	u6201
  5752  0C35  2C37               	goto	u6200
  5753  0C36  2C38               u6201:
  5754  0C37                     	goto	l4557
  5755  0C37  2FD0               u6200:
  5756  0C38                     	line	681
  5757                           	
  5758                           l4441:	
  5759  0C38                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 681:       
                                   ++*fmt;
  5760                           	movf	(vfpfcnvrt@fmt)^080h,w
  5761  0C38  0868               	movwf	fsr1l
  5762  0C39  0086               	movlw 1	; select bank2/3
  5763  0C3A  3001               	movwf fsr1h	
  5764  0C3B  0087               	
  5765                           	movlw	01h
  5766  0C3C  3001               	addwf	indf1,f
  5767  0C3D  0781               	addfsr	fsr1,1
  5768  0C3E  3141               	skipnc
  5769  0C3F  1803               	incf	indf1,f
  5770  0C40  0A81               	line	683
  5771                           	
  5772                           l4443:	
  5773  0C41                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 683:       
                                   flags = width = 0;
  5774                           	movlb 2	; select bank2
  5775  0C41  0142               	clrf	(_width)^0100h
  5776  0C42  01E6               	clrf	(_width+1)^0100h
  5777  0C43  01E7               	clrf	(_flags)^0100h
  5778  0C44  01EA               	clrf	(_flags+1)^0100h
  5779  0C45  01EB               	line	684
  5780                           	
  5781                           l4445:	
  5782  0C46                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 684:       
                                   prec = -1;
  5783                           	movlw	0FFh
  5784  0C46  30FF               	movwf	(_prec)^0100h
  5785  0C47  00E8               	movlw	0FFh
  5786  0C48  30FF               	movwf	((_prec)^0100h)+1
  5787  0C49  00E9               	line	723
  5788                           	
  5789                           l4447:	
  5790  0C4A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 723:       
                                   if ((*fmt)[0] == '*') {
  5791                           	movlb 1	; select bank1
  5792  0C4A  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5793  0C4B  0868               	movwf	fsr1l
  5794  0C4C  0086               	movlw 1	; select bank2/3
  5795  0C4D  3001               	movwf fsr1h	
  5796  0C4E  0087               	
  5797                           	moviw	[0]fsr1
  5798  0C4F  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5799  0C50  00EA               	moviw	[1]fsr1
  5800  0C51  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5801  0C52  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5802  0C53  086A               	movwf	fsr0l
  5803  0C54  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5804  0C55  086B               	movwf	fsr0h
  5805  0C56  0085               	moviw	fsr0++
  5806  0C57  0012               xorlw	42
  5807  0C58  3A2A               	btfss	status,2
  5808  0C59  1D03               	goto	u6211
  5809  0C5A  2C5C               	goto	u6210
  5810  0C5B  2C5D               u6211:
  5811  0C5C                     	goto	l4459
  5812  0C5C  2C81               u6210:
  5813  0C5D                     	line	724
  5814                           	
  5815                           l4449:	
  5816  0C5D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 724:       
                                       ++*fmt;
  5817                           	movf	(vfpfcnvrt@fmt)^080h,w
  5818  0C5D  0868               	movwf	fsr1l
  5819  0C5E  0086               	movlw 1	; select bank2/3
  5820  0C5F  3001               	movwf fsr1h	
  5821  0C60  0087               	
  5822                           	movlw	01h
  5823  0C61  3001               	addwf	indf1,f
  5824  0C62  0781               	addfsr	fsr1,1
  5825  0C63  3141               	skipnc
  5826  0C64  1803               	incf	indf1,f
  5827  0C65  0A81               	line	725
  5828                           	
  5829                           l4451:	
  5830  0C66                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 725:       
                                       width = (*(int *)__va_arg(*(int **)ap, (int)0));
  5831                           	movf	(vfpfcnvrt@ap)^080h,w
  5832  0C66  0869               	movwf	fsr1l
  5833  0C67  0086               	movlw 1	; select bank2/3
  5834  0C68  3001               	movwf fsr1h	
  5835  0C69  0087               	
  5836                           	movf	indf1,w
  5837  0C6A  0801               	movwf	fsr0l
  5838  0C6B  0084               	movlw 1	; select bank2/3
  5839  0C6C  3001               	movwf fsr0h	
  5840  0C6D  0085               	
  5841                           	movlw	02h
  5842  0C6E  3002               	addwf	indf1,f
  5843  0C6F  0781               	moviw	[0]fsr0
  5844  0C70  3F00               	movlb 2	; select bank2
  5845  0C71  0142               	movwf	(_width)^0100h
  5846  0C72  00E6               	moviw	[1]fsr0
  5847  0C73  3F01               	movwf	(_width+1)^0100h
  5848  0C74  00E7               	line	726
  5849                           	
  5850                           l4453:	
  5851  0C75                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 726:       
                                       if (width < 0) {
  5852                           	btfss	(_width+1)^0100h,7
  5853  0C75  1FE7               	goto	u6221
  5854  0C76  2C78               	goto	u6220
  5855  0C77  2C79               u6221:
  5856  0C78                     	goto	l4469
  5857  0C78  2CF6               u6220:
  5858  0C79                     	line	727
  5859                           	
  5860                           l4455:	
  5861  0C79                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 727:       
                                           flags |= (1 << 0);
  5862                           	bsf	(_flags)^0100h+(0/8),(0)&7
  5863  0C79  146A               	line	728
  5864                           	
  5865                           l4457:	
  5866  0C7A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 728:       
                                           width = -width;
  5867                           	comf	(_width)^0100h,f
  5868  0C7A  09E6               	comf	(_width+1)^0100h,f
  5869  0C7B  09E7               	incf	(_width)^0100h,f
  5870  0C7C  0AE6               	skipnz
  5871  0C7D  1903               	incf	(_width+1)^0100h,f
  5872  0C7E  0AE7               	goto	l4469
  5873  0C7F  2CF6               	line	729
  5874                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 729:       
                                       }
  5875                           	
  5876                           l550:	
  5877  0C80                     	line	730
  5878                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 730:       
                                   } else {
  5879                           	goto	l4469
  5880  0C80  2CF6               	
  5881                           l549:	
  5882  0C81                     	line	731
  5883                           	
  5884                           l4459:	
  5885  0C81                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 731:       
                                       width = atoi(*fmt);
  5886                           	movlb 1	; select bank1
  5887  0C81  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5888  0C82  0868               	movwf	fsr1l
  5889  0C83  0086               	movlw 1	; select bank2/3
  5890  0C84  3001               	movwf fsr1h	
  5891  0C85  0087               	
  5892                           	moviw	[0]fsr1
  5893  0C86  3F40               	movlb 0	; select bank0
  5894  0C87  0140               	movwf	(atoi@s)
  5895  0C88  00A6               	moviw	[1]fsr1
  5896  0C89  3F41               	movwf	(atoi@s+1)
  5897  0C8A  00A7               	fcall	_atoi
  5898  0C8B  319F  2719  318C   	movlb 0	; select bank0
  5899  0C8E  0140               	movf	(1+(?_atoi)),w
  5900  0C8F  0827               	movlb 2	; select bank2
  5901  0C90  0142               	movwf	(_width+1)^0100h
  5902  0C91  00E7               	movlb 0	; select bank0
  5903  0C92  0140               	movf	(0+(?_atoi)),w
  5904  0C93  0826               	movlb 2	; select bank2
  5905  0C94  0142               	movwf	(_width)^0100h
  5906  0C95  00E6               	line	732
  5907                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 732:       
                                       while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5908                           	goto	l4463
  5909  0C96  2CA2               	
  5910                           l553:	
  5911  0C97                     	line	733
  5912                           	
  5913                           l4461:	
  5914  0C97                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 733:       
                                           ++*fmt;
  5915                           	movlb 1	; select bank1
  5916  0C97  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5917  0C98  0868               	movwf	fsr1l
  5918  0C99  0086               	movlw 1	; select bank2/3
  5919  0C9A  3001               	movwf fsr1h	
  5920  0C9B  0087               	
  5921                           	movlw	01h
  5922  0C9C  3001               	addwf	indf1,f
  5923  0C9D  0781               	addfsr	fsr1,1
  5924  0C9E  3141               	skipnc
  5925  0C9F  1803               	incf	indf1,f
  5926  0CA0  0A81               	goto	l4463
  5927  0CA1  2CA2               	line	734
  5928                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 732:       
                                       while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5929                           	
  5930                           l552:	
  5931  0CA2                     	line	732
  5932                           	
  5933                           l4463:	
  5934  0CA2                     	movlb 1	; select bank1
  5935  0CA2  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5936  0CA3  0868               	movwf	fsr1l
  5937  0CA4  0086               	movlw 1	; select bank2/3
  5938  0CA5  3001               	movwf fsr1h	
  5939  0CA6  0087               	
  5940                           	moviw	[0]fsr1
  5941  0CA7  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5942  0CA8  00EA               	moviw	[1]fsr1
  5943  0CA9  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5944  0CAA  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5945  0CAB  086A               	movwf	fsr0l
  5946  0CAC  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5947  0CAD  086B               	movwf	fsr0h
  5948  0CAE  0085               	movf	indf0,w ;code access
  5949  0CAF  0800               	addlw	low(0FFD0h)
  5950  0CB0  3ED0               	movwf	(??_vfpfcnvrt+2)^080h+0
  5951  0CB1  00EC               	movlw	high(0FFD0h)
  5952  0CB2  30FF               	skipnc
  5953  0CB3  1803               	movlw	(high(0FFD0h)+1)&0ffh
  5954  0CB4  3000               	movwf	((??_vfpfcnvrt+2)^080h+0)+1
  5955  0CB5  00ED               	movlw	0
  5956  0CB6  3000               	subwf	1+(??_vfpfcnvrt+2)^080h+0,w
  5957  0CB7  026D               	movlw	0Ah
  5958  0CB8  300A               	skipnz
  5959  0CB9  1903               	subwf	0+(??_vfpfcnvrt+2)^080h+0,w
  5960  0CBA  026C               	skipc
  5961  0CBB  1C03               	goto	u6231
  5962  0CBC  2CBE               	goto	u6230
  5963  0CBD  2CC0               u6231:
  5964  0CBE                     	movlw	1
  5965  0CBE  3001               	goto	u6240
  5966  0CBF  2CC1               u6230:
  5967  0CC0                     	movlw	0
  5968  0CC0  3000               u6240:
  5969  0CC1                     	movwf	(??_vfpfcnvrt+4)^080h+0
  5970  0CC1  00EE               	clrf	(??_vfpfcnvrt+4)^080h+0+1
  5971  0CC2  01EF               	movf	0+(??_vfpfcnvrt+4)^080h+0,w
  5972  0CC3  086E               	movlb 2	; select bank2
  5973  0CC4  0142               	movwf	(_vfpfcnvrt$945)^0100h
  5974  0CC5  00A0               	movlb 1	; select bank1
  5975  0CC6  0141               	movf	1+(??_vfpfcnvrt+4)^080h+0,w
  5976  0CC7  086F               	movlb 2	; select bank2
  5977  0CC8  0142               	movwf	(_vfpfcnvrt$945+1)^0100h
  5978  0CC9  00A1               	goto	l4467
  5979  0CCA  2CEE               	
  5980                           l555:	
  5981  0CCB                     	
  5982                           l4465:	
  5983  0CCB                     	movlb 1	; select bank1
  5984  0CCB  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  5985  0CCC  0868               	movwf	fsr1l
  5986  0CCD  0086               	movlw 1	; select bank2/3
  5987  0CCE  3001               	movwf fsr1h	
  5988  0CCF  0087               	
  5989                           	moviw	[0]fsr1
  5990  0CD0  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  5991  0CD1  00EA               	moviw	[1]fsr1
  5992  0CD2  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  5993  0CD3  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  5994  0CD4  086A               	movwf	fsr0l
  5995  0CD5  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  5996  0CD6  086B               	movwf	fsr0h
  5997  0CD7  0085               	movf	indf0,w ;code access
  5998  0CD8  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  5999  0CD9  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  6000  0CDA  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  6001  0CDB  086C               	movlb 0	; select bank0
  6002  0CDC  0140               	movwf	(isdigit@c)
  6003  0CDD  00A0               	movlb 1	; select bank1
  6004  0CDE  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  6005  0CDF  086D               	movlb 0	; select bank0
  6006  0CE0  0140               	movwf	(isdigit@c+1)
  6007  0CE1  00A1               	fcall	_isdigit
  6008  0CE2  31A1  21B9  318C   	movlb 0	; select bank0
  6009  0CE5  0140               	movf	(1+(?_isdigit)),w
  6010  0CE6  0821               	movlb 2	; select bank2
  6011  0CE7  0142               	movwf	(_vfpfcnvrt$945+1)^0100h
  6012  0CE8  00A1               	movlb 0	; select bank0
  6013  0CE9  0140               	movf	(0+(?_isdigit)),w
  6014  0CEA  0820               	movlb 2	; select bank2
  6015  0CEB  0142               	movwf	(_vfpfcnvrt$945)^0100h
  6016  0CEC  00A0               	goto	l4467
  6017  0CED  2CEE               	
  6018                           l557:	
  6019  0CEE                     	
  6020                           l4467:	
  6021  0CEE                     	movf	((_vfpfcnvrt$945)^0100h),w
  6022  0CEE  0820               iorwf	((_vfpfcnvrt$945+1)^0100h),w
  6023  0CEF  0421               	btfss	status,2
  6024  0CF0  1D03               	goto	u6251
  6025  0CF1  2CF3               	goto	u6250
  6026  0CF2  2CF4               u6251:
  6027  0CF3                     	goto	l4461
  6028  0CF3  2C97               u6250:
  6029  0CF4                     	goto	l4469
  6030  0CF4  2CF6               	
  6031                           l558:	
  6032  0CF5                     	goto	l4469
  6033  0CF5  2CF6               	line	735
  6034                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 735:       
                                   }
  6035                           	
  6036                           l551:	
  6037  0CF6                     	line	740
  6038                           	
  6039                           l4469:	
  6040  0CF6                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 740:       
                                   if ((*fmt)[0] == '.') {
  6041                           	movlb 1	; select bank1
  6042  0CF6  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6043  0CF7  0868               	movwf	fsr1l
  6044  0CF8  0086               	movlw 1	; select bank2/3
  6045  0CF9  3001               	movwf fsr1h	
  6046  0CFA  0087               	
  6047                           	moviw	[0]fsr1
  6048  0CFB  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  6049  0CFC  00EA               	moviw	[1]fsr1
  6050  0CFD  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  6051  0CFE  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  6052  0CFF  086A               	movwf	fsr0l
  6053  0D00  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  6054  0D01  086B               	movwf	fsr0h
  6055  0D02  0085               	moviw	fsr0++
  6056  0D03  0012               xorlw	46
  6057  0D04  3A2E               	btfss	status,2
  6058  0D05  1D03               	goto	u6261
  6059  0D06  2D08               	goto	u6260
  6060  0D07  2D09               u6261:
  6061  0D08                     	goto	l4491
  6062  0D08  2DB7               u6260:
  6063  0D09                     	line	741
  6064                           	
  6065                           l4471:	
  6066  0D09                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 741:       
                                       prec = 0;
  6067                           	movlb 2	; select bank2
  6068  0D09  0142               	clrf	(_prec)^0100h
  6069  0D0A  01E8               	clrf	(_prec+1)^0100h
  6070  0D0B  01E9               	line	742
  6071                           	
  6072                           l4473:	
  6073  0D0C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 742:       
                                       ++*fmt;
  6074                           	movlb 1	; select bank1
  6075  0D0C  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6076  0D0D  0868               	movwf	fsr1l
  6077  0D0E  0086               	movlw 1	; select bank2/3
  6078  0D0F  3001               	movwf fsr1h	
  6079  0D10  0087               	
  6080                           	movlw	01h
  6081  0D11  3001               	addwf	indf1,f
  6082  0D12  0781               	addfsr	fsr1,1
  6083  0D13  3141               	skipnc
  6084  0D14  1803               	incf	indf1,f
  6085  0D15  0A81               	line	743
  6086                           	
  6087                           l4475:	
  6088  0D16                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 743:       
                                       if ((*fmt)[0] == '*') {
  6089                           	movf	(vfpfcnvrt@fmt)^080h,w
  6090  0D16  0868               	movwf	fsr1l
  6091  0D17  0086               	movlw 1	; select bank2/3
  6092  0D18  3001               	movwf fsr1h	
  6093  0D19  0087               	
  6094                           	moviw	[0]fsr1
  6095  0D1A  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  6096  0D1B  00EA               	moviw	[1]fsr1
  6097  0D1C  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  6098  0D1D  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  6099  0D1E  086A               	movwf	fsr0l
  6100  0D1F  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  6101  0D20  086B               	movwf	fsr0h
  6102  0D21  0085               	moviw	fsr0++
  6103  0D22  0012               xorlw	42
  6104  0D23  3A2A               	btfss	status,2
  6105  0D24  1D03               	goto	u6271
  6106  0D25  2D27               	goto	u6270
  6107  0D26  2D28               u6271:
  6108  0D27                     	goto	l4481
  6109  0D27  2D41               u6270:
  6110  0D28                     	line	744
  6111                           	
  6112                           l4477:	
  6113  0D28                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 744:       
                                           ++*fmt;
  6114                           	movf	(vfpfcnvrt@fmt)^080h,w
  6115  0D28  0868               	movwf	fsr1l
  6116  0D29  0086               	movlw 1	; select bank2/3
  6117  0D2A  3001               	movwf fsr1h	
  6118  0D2B  0087               	
  6119                           	movlw	01h
  6120  0D2C  3001               	addwf	indf1,f
  6121  0D2D  0781               	addfsr	fsr1,1
  6122  0D2E  3141               	skipnc
  6123  0D2F  1803               	incf	indf1,f
  6124  0D30  0A81               	line	745
  6125                           	
  6126                           l4479:	
  6127  0D31                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 745:       
                                           prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6128                           	movf	(vfpfcnvrt@ap)^080h,w
  6129  0D31  0869               	movwf	fsr1l
  6130  0D32  0086               	movlw 1	; select bank2/3
  6131  0D33  3001               	movwf fsr1h	
  6132  0D34  0087               	
  6133                           	movf	indf1,w
  6134  0D35  0801               	movwf	fsr0l
  6135  0D36  0084               	movlw 1	; select bank2/3
  6136  0D37  3001               	movwf fsr0h	
  6137  0D38  0085               	
  6138                           	movlw	02h
  6139  0D39  3002               	addwf	indf1,f
  6140  0D3A  0781               	moviw	[0]fsr0
  6141  0D3B  3F00               	movlb 2	; select bank2
  6142  0D3C  0142               	movwf	(_prec)^0100h
  6143  0D3D  00E8               	moviw	[1]fsr0
  6144  0D3E  3F01               	movwf	(_prec+1)^0100h
  6145  0D3F  00E9               	line	746
  6146                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 746:       
                                       } else {
  6147                           	goto	l4491
  6148  0D40  2DB7               	
  6149                           l560:	
  6150  0D41                     	line	747
  6151                           	
  6152                           l4481:	
  6153  0D41                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 747:       
                                           prec = atoi(*fmt);
  6154                           	movlb 1	; select bank1
  6155  0D41  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6156  0D42  0868               	movwf	fsr1l
  6157  0D43  0086               	movlw 1	; select bank2/3
  6158  0D44  3001               	movwf fsr1h	
  6159  0D45  0087               	
  6160                           	moviw	[0]fsr1
  6161  0D46  3F40               	movlb 0	; select bank0
  6162  0D47  0140               	movwf	(atoi@s)
  6163  0D48  00A6               	moviw	[1]fsr1
  6164  0D49  3F41               	movwf	(atoi@s+1)
  6165  0D4A  00A7               	fcall	_atoi
  6166  0D4B  319F  2719  318C   	movlb 0	; select bank0
  6167  0D4E  0140               	movf	(1+(?_atoi)),w
  6168  0D4F  0827               	movlb 2	; select bank2
  6169  0D50  0142               	movwf	(_prec+1)^0100h
  6170  0D51  00E9               	movlb 0	; select bank0
  6171  0D52  0140               	movf	(0+(?_atoi)),w
  6172  0D53  0826               	movlb 2	; select bank2
  6173  0D54  0142               	movwf	(_prec)^0100h
  6174  0D55  00E8               	line	748
  6175                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 748:       
                                           while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6176                           	goto	l4485
  6177  0D56  2D62               	
  6178                           l563:	
  6179  0D57                     	line	749
  6180                           	
  6181                           l4483:	
  6182  0D57                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 749:       
                                               ++*fmt;
  6183                           	movlb 1	; select bank1
  6184  0D57  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6185  0D58  0868               	movwf	fsr1l
  6186  0D59  0086               	movlw 1	; select bank2/3
  6187  0D5A  3001               	movwf fsr1h	
  6188  0D5B  0087               	
  6189                           	movlw	01h
  6190  0D5C  3001               	addwf	indf1,f
  6191  0D5D  0781               	addfsr	fsr1,1
  6192  0D5E  3141               	skipnc
  6193  0D5F  1803               	incf	indf1,f
  6194  0D60  0A81               	goto	l4485
  6195  0D61  2D62               	line	750
  6196                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 748:       
                                           while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6197                           	
  6198                           l562:	
  6199  0D62                     	line	748
  6200                           	
  6201                           l4485:	
  6202  0D62                     	movlb 1	; select bank1
  6203  0D62  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6204  0D63  0868               	movwf	fsr1l
  6205  0D64  0086               	movlw 1	; select bank2/3
  6206  0D65  3001               	movwf fsr1h	
  6207  0D66  0087               	
  6208                           	moviw	[0]fsr1
  6209  0D67  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  6210  0D68  00EA               	moviw	[1]fsr1
  6211  0D69  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  6212  0D6A  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  6213  0D6B  086A               	movwf	fsr0l
  6214  0D6C  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  6215  0D6D  086B               	movwf	fsr0h
  6216  0D6E  0085               	movf	indf0,w ;code access
  6217  0D6F  0800               	addlw	low(0FFD0h)
  6218  0D70  3ED0               	movwf	(??_vfpfcnvrt+2)^080h+0
  6219  0D71  00EC               	movlw	high(0FFD0h)
  6220  0D72  30FF               	skipnc
  6221  0D73  1803               	movlw	(high(0FFD0h)+1)&0ffh
  6222  0D74  3000               	movwf	((??_vfpfcnvrt+2)^080h+0)+1
  6223  0D75  00ED               	movlw	0
  6224  0D76  3000               	subwf	1+(??_vfpfcnvrt+2)^080h+0,w
  6225  0D77  026D               	movlw	0Ah
  6226  0D78  300A               	skipnz
  6227  0D79  1903               	subwf	0+(??_vfpfcnvrt+2)^080h+0,w
  6228  0D7A  026C               	skipc
  6229  0D7B  1C03               	goto	u6281
  6230  0D7C  2D7E               	goto	u6280
  6231  0D7D  2D80               u6281:
  6232  0D7E                     	movlw	1
  6233  0D7E  3001               	goto	u6290
  6234  0D7F  2D81               u6280:
  6235  0D80                     	movlw	0
  6236  0D80  3000               u6290:
  6237  0D81                     	movwf	(??_vfpfcnvrt+4)^080h+0
  6238  0D81  00EE               	clrf	(??_vfpfcnvrt+4)^080h+0+1
  6239  0D82  01EF               	movf	0+(??_vfpfcnvrt+4)^080h+0,w
  6240  0D83  086E               	movlb 2	; select bank2
  6241  0D84  0142               	movwf	(_vfpfcnvrt$946)^0100h
  6242  0D85  00A2               	movlb 1	; select bank1
  6243  0D86  0141               	movf	1+(??_vfpfcnvrt+4)^080h+0,w
  6244  0D87  086F               	movlb 2	; select bank2
  6245  0D88  0142               	movwf	(_vfpfcnvrt$946+1)^0100h
  6246  0D89  00A3               	goto	l4489
  6247  0D8A  2DAE               	
  6248                           l565:	
  6249  0D8B                     	
  6250                           l4487:	
  6251  0D8B                     	movlb 1	; select bank1
  6252  0D8B  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6253  0D8C  0868               	movwf	fsr1l
  6254  0D8D  0086               	movlw 1	; select bank2/3
  6255  0D8E  3001               	movwf fsr1h	
  6256  0D8F  0087               	
  6257                           	moviw	[0]fsr1
  6258  0D90  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  6259  0D91  00EA               	moviw	[1]fsr1
  6260  0D92  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  6261  0D93  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  6262  0D94  086A               	movwf	fsr0l
  6263  0D95  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  6264  0D96  086B               	movwf	fsr0h
  6265  0D97  0085               	movf	indf0,w ;code access
  6266  0D98  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  6267  0D99  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  6268  0D9A  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  6269  0D9B  086C               	movlb 0	; select bank0
  6270  0D9C  0140               	movwf	(isdigit@c)
  6271  0D9D  00A0               	movlb 1	; select bank1
  6272  0D9E  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  6273  0D9F  086D               	movlb 0	; select bank0
  6274  0DA0  0140               	movwf	(isdigit@c+1)
  6275  0DA1  00A1               	fcall	_isdigit
  6276  0DA2  31A1  21B9  318C   	movlb 0	; select bank0
  6277  0DA5  0140               	movf	(1+(?_isdigit)),w
  6278  0DA6  0821               	movlb 2	; select bank2
  6279  0DA7  0142               	movwf	(_vfpfcnvrt$946+1)^0100h
  6280  0DA8  00A3               	movlb 0	; select bank0
  6281  0DA9  0140               	movf	(0+(?_isdigit)),w
  6282  0DAA  0820               	movlb 2	; select bank2
  6283  0DAB  0142               	movwf	(_vfpfcnvrt$946)^0100h
  6284  0DAC  00A2               	goto	l4489
  6285  0DAD  2DAE               	
  6286                           l567:	
  6287  0DAE                     	
  6288                           l4489:	
  6289  0DAE                     	movf	((_vfpfcnvrt$946)^0100h),w
  6290  0DAE  0822               iorwf	((_vfpfcnvrt$946+1)^0100h),w
  6291  0DAF  0423               	btfss	status,2
  6292  0DB0  1D03               	goto	u6301
  6293  0DB1  2DB3               	goto	u6300
  6294  0DB2  2DB4               u6301:
  6295  0DB3                     	goto	l4483
  6296  0DB3  2D57               u6300:
  6297  0DB4                     	goto	l4491
  6298  0DB4  2DB7               	
  6299                           l568:	
  6300  0DB5                     	goto	l4491
  6301  0DB5  2DB7               	line	751
  6302                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 751:       
                                       }
  6303                           	
  6304                           l561:	
  6305  0DB6                     	goto	l4491
  6306  0DB6  2DB7               	line	752
  6307                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 752:       
                                   }
  6308                           	
  6309                           l559:	
  6310  0DB7                     	line	757
  6311                           	
  6312                           l4491:	
  6313  0DB7                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 757:       
                                   ct[0] = tolower((int)(*fmt)[0]);
  6314                           	movlb 1	; select bank1
  6315  0DB7  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6316  0DB8  0868               	movwf	fsr1l
  6317  0DB9  0086               	movlw 1	; select bank2/3
  6318  0DBA  3001               	movwf fsr1h	
  6319  0DBB  0087               	
  6320                           	moviw	[0]fsr1
  6321  0DBC  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  6322  0DBD  00EA               	moviw	[1]fsr1
  6323  0DBE  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  6324  0DBF  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  6325  0DC0  086A               	movwf	fsr0l
  6326  0DC1  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  6327  0DC2  086B               	movwf	fsr0h
  6328  0DC3  0085               	movf	indf0,w ;code access
  6329  0DC4  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  6330  0DC5  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  6331  0DC6  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  6332  0DC7  086C               	movlb 0	; select bank0
  6333  0DC8  0140               	movwf	(tolower@c)
  6334  0DC9  00A6               	movlb 1	; select bank1
  6335  0DCA  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  6336  0DCB  086D               	movlb 0	; select bank0
  6337  0DCC  0140               	movwf	(tolower@c+1)
  6338  0DCD  00A7               	fcall	_tolower
  6339  0DCE  31A3  23B8  318C   	movlb 0	; select bank0
  6340  0DD1  0140               	movf	(0+(?_tolower)),w
  6341  0DD2  0826               	movlb 1	; select bank1
  6342  0DD3  0141               	movwf	(??_vfpfcnvrt+4)^080h+0
  6343  0DD4  00EE               	movf	(??_vfpfcnvrt+4)^080h+0,w
  6344  0DD5  086E               	movlb 2	; select bank2
  6345  0DD6  0142               	movwf	(vfpfcnvrt@ct)^0100h
  6346  0DD7  00AB               	line	758
  6347                           	
  6348                           l4493:	
  6349  0DD8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 758:       
                                   if (ct[0]) {
  6350                           	movf	((vfpfcnvrt@ct)^0100h),w
  6351  0DD8  082B               	btfsc	status,2
  6352  0DD9  1903               	goto	u6311
  6353  0DDA  2DDC               	goto	u6310
  6354  0DDB  2DDD               u6311:
  6355  0DDC                     	goto	l4501
  6356  0DDC  2E2C               u6310:
  6357  0DDD                     	line	759
  6358                           	
  6359                           l4495:	
  6360  0DDD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 759:       
                                       ct[1] = tolower((int)(*fmt)[1]);
  6361                           	movlb 1	; select bank1
  6362  0DDD  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6363  0DDE  0868               	movwf	fsr1l
  6364  0DDF  0086               	movlw 1	; select bank2/3
  6365  0DE0  3001               	movwf fsr1h	
  6366  0DE1  0087               	
  6367                           	moviw	[0]fsr1
  6368  0DE2  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  6369  0DE3  00EA               	moviw	[1]fsr1
  6370  0DE4  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  6371  0DE5  00EB               	movlw	01h
  6372  0DE6  3001               	addwf	(??_vfpfcnvrt+0)^080h+0,w
  6373  0DE7  076A               	movwf	fsr0l
  6374  0DE8  0084               	movf	(??_vfpfcnvrt+0)^080h+1,w
  6375  0DE9  086B               	skipnc
  6376  0DEA  1803               	incf	(??_vfpfcnvrt+0)^080h+1,w
  6377  0DEB  0A6B               	movwf	fsr0h
  6378  0DEC  0085               
  6379                           	movf	indf0,w ;code access
  6380  0DED  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  6381  0DEE  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  6382  0DEF  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  6383  0DF0  086C               	movlb 0	; select bank0
  6384  0DF1  0140               	movwf	(tolower@c)
  6385  0DF2  00A6               	movlb 1	; select bank1
  6386  0DF3  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  6387  0DF4  086D               	movlb 0	; select bank0
  6388  0DF5  0140               	movwf	(tolower@c+1)
  6389  0DF6  00A7               	fcall	_tolower
  6390  0DF7  31A3  23B8  318C   	movlb 0	; select bank0
  6391  0DFA  0140               	movf	(0+(?_tolower)),w
  6392  0DFB  0826               	movlb 1	; select bank1
  6393  0DFC  0141               	movwf	(??_vfpfcnvrt+4)^080h+0
  6394  0DFD  00EE               	movf	(??_vfpfcnvrt+4)^080h+0,w
  6395  0DFE  086E               	movlb 2	; select bank2
  6396  0DFF  0142               	movwf	0+(vfpfcnvrt@ct)^0100h+01h
  6397  0E00  00AC               	line	760
  6398                           	
  6399                           l4497:	
  6400  0E01                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 760:       
                                       if (ct[1]) {
  6401                           	movf	(0+(vfpfcnvrt@ct)^0100h+01h),w
  6402  0E01  082C               	btfsc	status,2
  6403  0E02  1903               	goto	u6321
  6404  0E03  2E05               	goto	u6320
  6405  0E04  2E06               u6321:
  6406  0E05                     	goto	l4501
  6407  0E05  2E2C               u6320:
  6408  0E06                     	line	761
  6409                           	
  6410                           l4499:	
  6411  0E06                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 761:       
                                           ct[2] = tolower((int)(*fmt)[2]);
  6412                           	movlb 1	; select bank1
  6413  0E06  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6414  0E07  0868               	movwf	fsr1l
  6415  0E08  0086               	movlw 1	; select bank2/3
  6416  0E09  3001               	movwf fsr1h	
  6417  0E0A  0087               	
  6418                           	moviw	[0]fsr1
  6419  0E0B  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  6420  0E0C  00EA               	moviw	[1]fsr1
  6421  0E0D  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  6422  0E0E  00EB               	movlw	02h
  6423  0E0F  3002               	addwf	(??_vfpfcnvrt+0)^080h+0,w
  6424  0E10  076A               	movwf	fsr0l
  6425  0E11  0084               	movf	(??_vfpfcnvrt+0)^080h+1,w
  6426  0E12  086B               	skipnc
  6427  0E13  1803               	incf	(??_vfpfcnvrt+0)^080h+1,w
  6428  0E14  0A6B               	movwf	fsr0h
  6429  0E15  0085               
  6430                           	movf	indf0,w ;code access
  6431  0E16  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  6432  0E17  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  6433  0E18  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  6434  0E19  086C               	movlb 0	; select bank0
  6435  0E1A  0140               	movwf	(tolower@c)
  6436  0E1B  00A6               	movlb 1	; select bank1
  6437  0E1C  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  6438  0E1D  086D               	movlb 0	; select bank0
  6439  0E1E  0140               	movwf	(tolower@c+1)
  6440  0E1F  00A7               	fcall	_tolower
  6441  0E20  31A3  23B8  318C   	movlb 0	; select bank0
  6442  0E23  0140               	movf	(0+(?_tolower)),w
  6443  0E24  0826               	movlb 1	; select bank1
  6444  0E25  0141               	movwf	(??_vfpfcnvrt+4)^080h+0
  6445  0E26  00EE               	movf	(??_vfpfcnvrt+4)^080h+0,w
  6446  0E27  086E               	movlb 2	; select bank2
  6447  0E28  0142               	movwf	0+(vfpfcnvrt@ct)^0100h+02h
  6448  0E29  00AD               	goto	l4501
  6449  0E2A  2E2C               	line	762
  6450                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 762:       
                                       }
  6451                           	
  6452                           l570:	
  6453  0E2B                     	goto	l4501
  6454  0E2B  2E2C               	line	763
  6455                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 763:       
                                   }
  6456                           	
  6457                           l569:	
  6458  0E2C                     	line	920
  6459                           	
  6460                           l4501:	
  6461  0E2C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 920:       
                                   if (ct[0] == 'f') {
  6462                           		movlw	102
  6463  0E2C  3066               	xorwf	((vfpfcnvrt@ct)^0100h),w
  6464  0E2D  062B               	btfss	status,2
  6465  0E2E  1D03               	goto	u6331
  6466  0E2F  2E31               	goto	u6330
  6467  0E30  2E32               u6331:
  6468  0E31                     	goto	l4513
  6469  0E31  2E82               u6330:
  6470  0E32                     	line	922
  6471                           	
  6472                           l4503:	
  6473  0E32                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 922:       
                                       c = (*fmt)[0];
  6474                           	movlb 1	; select bank1
  6475  0E32  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6476  0E33  0868               	movwf	fsr1l
  6477  0E34  0086               	movlw 1	; select bank2/3
  6478  0E35  3001               	movwf fsr1h	
  6479  0E36  0087               	
  6480                           	moviw	[0]fsr1
  6481  0E37  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  6482  0E38  00EA               	moviw	[1]fsr1
  6483  0E39  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  6484  0E3A  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  6485  0E3B  086A               	movwf	fsr0l
  6486  0E3C  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  6487  0E3D  086B               	movwf	fsr0h
  6488  0E3E  0085               	movf	indf0,w ;code access
  6489  0E3F  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  6490  0E40  00EC               	movf	(??_vfpfcnvrt+2)^080h+0,w
  6491  0E41  086C               	movlb 2	; select bank2
  6492  0E42  0142               	movwf	(vfpfcnvrt@c)^0100h
  6493  0E43  00AE               	line	923
  6494                           	
  6495                           l4505:	
  6496  0E44                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 923:       
                                       ++*fmt;
  6497                           	movlb 1	; select bank1
  6498  0E44  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6499  0E45  0868               	movwf	fsr1l
  6500  0E46  0086               	movlw 1	; select bank2/3
  6501  0E47  3001               	movwf fsr1h	
  6502  0E48  0087               	
  6503                           	movlw	01h
  6504  0E49  3001               	addwf	indf1,f
  6505  0E4A  0781               	addfsr	fsr1,1
  6506  0E4B  3141               	skipnc
  6507  0E4C  1803               	incf	indf1,f
  6508  0E4D  0A81               	line	924
  6509                           	
  6510                           l4507:	
  6511  0E4E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 924:       
                                       f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6512                           	movf	(vfpfcnvrt@ap)^080h,w
  6513  0E4E  0869               	movwf	fsr1l
  6514  0E4F  0086               	movlw 1	; select bank2/3
  6515  0E50  3001               	movwf fsr1h	
  6516  0E51  0087               	
  6517                           	movf	indf1,w
  6518  0E52  0801               	movwf	fsr0l
  6519  0E53  0084               	movlw 1	; select bank2/3
  6520  0E54  3001               	movwf fsr0h	
  6521  0E55  0085               	
  6522                           	movlw	04h
  6523  0E56  3004               	addwf	indf1,f
  6524  0E57  0781               	moviw	[0]fsr0
  6525  0E58  3F00               	movlb 2	; select bank2
  6526  0E59  0142               	movwf	(vfpfcnvrt@f)^0100h
  6527  0E5A  00A7               	moviw	[1]fsr0
  6528  0E5B  3F01               	movwf	(vfpfcnvrt@f+1)^0100h
  6529  0E5C  00A8               	moviw	[2]fsr0
  6530  0E5D  3F02               	movwf	(vfpfcnvrt@f+2)^0100h
  6531  0E5E  00A9               	moviw	[3]fsr0
  6532  0E5F  3F03               	movwf	(vfpfcnvrt@f+3)^0100h
  6533  0E60  00AA               	line	926
  6534                           	
  6535                           l4509:	
  6536  0E61                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 926:       
                                       return efgtoa(fp, f, c);
  6537                           	movf	(vfpfcnvrt@f+3)^0100h,w
  6538  0E61  082A               	movlb 1	; select bank1
  6539  0E62  0141               	movwf	(efgtoa@f+3)^080h
  6540  0E63  00AD               	movlb 2	; select bank2
  6541  0E64  0142               	movf	(vfpfcnvrt@f+2)^0100h,w
  6542  0E65  0829               	movlb 1	; select bank1
  6543  0E66  0141               	movwf	(efgtoa@f+2)^080h
  6544  0E67  00AC               	movlb 2	; select bank2
  6545  0E68  0142               	movf	(vfpfcnvrt@f+1)^0100h,w
  6546  0E69  0828               	movlb 1	; select bank1
  6547  0E6A  0141               	movwf	(efgtoa@f+1)^080h
  6548  0E6B  00AB               	movlb 2	; select bank2
  6549  0E6C  0142               	movf	(vfpfcnvrt@f)^0100h,w
  6550  0E6D  0827               	movlb 1	; select bank1
  6551  0E6E  0141               	movwf	(efgtoa@f)^080h
  6552  0E6F  00AA               
  6553                           	movlb 2	; select bank2
  6554  0E70  0142               	movf	(vfpfcnvrt@c)^0100h,w
  6555  0E71  082E               	movlb 1	; select bank1
  6556  0E72  0141               	movwf	(??_vfpfcnvrt+0)^080h+0
  6557  0E73  00EA               	movf	(??_vfpfcnvrt+0)^080h+0,w
  6558  0E74  086A               	movwf	(efgtoa@c)^080h
  6559  0E75  00AE               	movlb 2	; select bank2
  6560  0E76  0142               	movf	(vfpfcnvrt@fp)^0100h,w
  6561  0E77  082F               	fcall	_efgtoa
  6562  0E78  3190  200A  318C   	movlb 1	; select bank1
  6563  0E7B  0141               	movf	(1+(?_efgtoa))^080h,w
  6564  0E7C  082B               	movwf	(?_vfpfcnvrt+1)^080h
  6565  0E7D  00E9               	movf	(0+(?_efgtoa))^080h,w
  6566  0E7E  082A               	movwf	(?_vfpfcnvrt)^080h
  6567  0E7F  00E8               	goto	l572
  6568  0E80  2FFF               	
  6569                           l4511:	
  6570  0E81                     	goto	l572
  6571  0E81  2FFF               	line	927
  6572                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 927:       
                                   }
  6573                           	
  6574                           l571:	
  6575  0E82                     	line	928
  6576                           	
  6577                           l4513:	
  6578  0E82                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 928:       
                                   if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  6579                           	movlw	low(((STR_18)|8000h))
  6580  0E82  30D6               	movlb 0	; select bank0
  6581  0E83  0140               	movwf	(strncmp@_r)
  6582  0E84  00A0               	movlw	high(((STR_18)|8000h))
  6583  0E85  30A8               	movwf	((strncmp@_r))+1
  6584  0E86  00A1               	movlw	02h
  6585  0E87  3002               	movwf	(strncmp@n)
  6586  0E88  00A2               	movlw	0
  6587  0E89  3000               	movwf	((strncmp@n))+1
  6588  0E8A  00A3               	movlw	(low(vfpfcnvrt@ct|((0x1)<<8)))&0ffh
  6589  0E8B  302B               	fcall	_strncmp
  6590  0E8C  3198  203F  318C   	movlb 0	; select bank0
  6591  0E8F  0140               	movf	((0+(?_strncmp))),w
  6592  0E90  0820               iorwf	((1+(?_strncmp))),w
  6593  0E91  0421               	btfss	status,2
  6594  0E92  1D03               	goto	u6341
  6595  0E93  2E95               	goto	u6340
  6596  0E94  2E96               u6341:
  6597  0E95                     	goto	l4531
  6598  0E95  2F53               u6340:
  6599  0E96                     	line	930
  6600                           	
  6601                           l4515:	
  6602  0E96                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 931:       
                                       if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  6603                           	movlb 1	; select bank1
  6604  0E96  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6605  0E97  0868               	movwf	fsr1l
  6606  0E98  0086               	movlw 1	; select bank2/3
  6607  0E99  3001               	movwf fsr1h	
  6608  0E9A  0087               	
  6609                           	moviw	[0]fsr1
  6610  0E9B  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  6611  0E9C  00EA               	moviw	[1]fsr1
  6612  0E9D  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  6613  0E9E  00EB               	movlw	01h
  6614  0E9F  3001               	addwf	(??_vfpfcnvrt+0)^080h+0,w
  6615  0EA0  076A               	movwf	fsr0l
  6616  0EA1  0084               	movf	(??_vfpfcnvrt+0)^080h+1,w
  6617  0EA2  086B               	skipnc
  6618  0EA3  1803               	incf	(??_vfpfcnvrt+0)^080h+1,w
  6619  0EA4  0A6B               	movwf	fsr0h
  6620  0EA5  0085               
  6621                           	movf	indf0,w ;code access
  6622  0EA6  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  6623  0EA7  00EC               	movf	(??_vfpfcnvrt+2)^080h+0,w
  6624  0EA8  086C               	movlb 2	; select bank2
  6625  0EA9  0142               	movwf	(vfpfcnvrt@c)^0100h
  6626  0EAA  00AE               	line	931
  6627                           	movlb 1	; select bank1
  6628  0EAB  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6629  0EAC  0868               	movwf	fsr1l
  6630  0EAD  0086               	movlw 1	; select bank2/3
  6631  0EAE  3001               	movwf fsr1h	
  6632  0EAF  0087               	
  6633                           	moviw	[0]fsr1
  6634  0EB0  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  6635  0EB1  00EA               	moviw	[1]fsr1
  6636  0EB2  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  6637  0EB3  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  6638  0EB4  086A               	movwf	fsr0l
  6639  0EB5  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  6640  0EB6  086B               	movwf	fsr0h
  6641  0EB7  0085               	movf	indf0,w ;code access
  6642  0EB8  0800               	addlw	low(0FFBFh)
  6643  0EB9  3EBF               	movwf	(??_vfpfcnvrt+2)^080h+0
  6644  0EBA  00EC               	movlw	high(0FFBFh)
  6645  0EBB  30FF               	skipnc
  6646  0EBC  1803               	movlw	(high(0FFBFh)+1)&0ffh
  6647  0EBD  3000               	movwf	((??_vfpfcnvrt+2)^080h+0)+1
  6648  0EBE  00ED               	movlw	0
  6649  0EBF  3000               	subwf	1+(??_vfpfcnvrt+2)^080h+0,w
  6650  0EC0  026D               	movlw	01Ah
  6651  0EC1  301A               	skipnz
  6652  0EC2  1903               	subwf	0+(??_vfpfcnvrt+2)^080h+0,w
  6653  0EC3  026C               	skipc
  6654  0EC4  1C03               	goto	u6351
  6655  0EC5  2EC7               	goto	u6350
  6656  0EC6  2EC9               u6351:
  6657  0EC7                     	movlw	1
  6658  0EC7  3001               	goto	u6360
  6659  0EC8  2ECA               u6350:
  6660  0EC9                     	movlw	0
  6661  0EC9  3000               u6360:
  6662  0ECA                     	movwf	(??_vfpfcnvrt+4)^080h+0
  6663  0ECA  00EE               	clrf	(??_vfpfcnvrt+4)^080h+0+1
  6664  0ECB  01EF               	movf	0+(??_vfpfcnvrt+4)^080h+0,w
  6665  0ECC  086E               	movlb 2	; select bank2
  6666  0ECD  0142               	movwf	(_vfpfcnvrt$950)^0100h
  6667  0ECE  00A4               	movlb 1	; select bank1
  6668  0ECF  0141               	movf	1+(??_vfpfcnvrt+4)^080h+0,w
  6669  0ED0  086F               	movlb 2	; select bank2
  6670  0ED1  0142               	movwf	(_vfpfcnvrt$950+1)^0100h
  6671  0ED2  00A5               	goto	l4519
  6672  0ED3  2EF7               	
  6673                           l576:	
  6674  0ED4                     	
  6675                           l4517:	
  6676  0ED4                     	movlb 1	; select bank1
  6677  0ED4  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6678  0ED5  0868               	movwf	fsr1l
  6679  0ED6  0086               	movlw 1	; select bank2/3
  6680  0ED7  3001               	movwf fsr1h	
  6681  0ED8  0087               	
  6682                           	moviw	[0]fsr1
  6683  0ED9  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  6684  0EDA  00EA               	moviw	[1]fsr1
  6685  0EDB  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  6686  0EDC  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  6687  0EDD  086A               	movwf	fsr0l
  6688  0EDE  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  6689  0EDF  086B               	movwf	fsr0h
  6690  0EE0  0085               	movf	indf0,w ;code access
  6691  0EE1  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  6692  0EE2  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  6693  0EE3  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  6694  0EE4  086C               	movlb 0	; select bank0
  6695  0EE5  0140               	movwf	(isupper@c)
  6696  0EE6  00A0               	movlb 1	; select bank1
  6697  0EE7  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  6698  0EE8  086D               	movlb 0	; select bank0
  6699  0EE9  0140               	movwf	(isupper@c+1)
  6700  0EEA  00A1               	fcall	_isupper
  6701  0EEB  31A1  21D3  318C   	movlb 0	; select bank0
  6702  0EEE  0140               	movf	(1+(?_isupper)),w
  6703  0EEF  0821               	movlb 2	; select bank2
  6704  0EF0  0142               	movwf	(_vfpfcnvrt$950+1)^0100h
  6705  0EF1  00A5               	movlb 0	; select bank0
  6706  0EF2  0140               	movf	(0+(?_isupper)),w
  6707  0EF3  0820               	movlb 2	; select bank2
  6708  0EF4  0142               	movwf	(_vfpfcnvrt$950)^0100h
  6709  0EF5  00A4               	goto	l4519
  6710  0EF6  2EF7               	
  6711                           l578:	
  6712  0EF7                     	
  6713                           l4519:	
  6714  0EF7                     	movf	((_vfpfcnvrt$950)^0100h),w
  6715  0EF7  0824               iorwf	((_vfpfcnvrt$950+1)^0100h),w
  6716  0EF8  0425               	btfsc	status,2
  6717  0EF9  1903               	goto	u6371
  6718  0EFA  2EFC               	goto	u6370
  6719  0EFB  2EFD               u6371:
  6720  0EFC                     	goto	l4523
  6721  0EFC  2F12               u6370:
  6722  0EFD                     	line	932
  6723                           	
  6724                           l4521:	
  6725  0EFD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 932:       
                                           f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  6726                           	movlb 1	; select bank1
  6727  0EFD  0141               	movf	(vfpfcnvrt@ap)^080h,w
  6728  0EFE  0869               	movwf	fsr1l
  6729  0EFF  0086               	movlw 1	; select bank2/3
  6730  0F00  3001               	movwf fsr1h	
  6731  0F01  0087               	
  6732                           	movf	indf1,w
  6733  0F02  0801               	movwf	fsr0l
  6734  0F03  0084               	movlw 1	; select bank2/3
  6735  0F04  3001               	movwf fsr0h	
  6736  0F05  0085               	
  6737                           	movlw	04h
  6738  0F06  3004               	addwf	indf1,f
  6739  0F07  0781               	moviw	[0]fsr0
  6740  0F08  3F00               	movlb 2	; select bank2
  6741  0F09  0142               	movwf	(vfpfcnvrt@f)^0100h
  6742  0F0A  00A7               	moviw	[1]fsr0
  6743  0F0B  3F01               	movwf	(vfpfcnvrt@f+1)^0100h
  6744  0F0C  00A8               	moviw	[2]fsr0
  6745  0F0D  3F02               	movwf	(vfpfcnvrt@f+2)^0100h
  6746  0F0E  00A9               	moviw	[3]fsr0
  6747  0F0F  3F03               	movwf	(vfpfcnvrt@f+3)^0100h
  6748  0F10  00AA               	line	933
  6749                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 933:       
                                       } else {
  6750                           	goto	l4525
  6751  0F11  2F27               	
  6752                           l574:	
  6753  0F12                     	line	934
  6754                           	
  6755                           l4523:	
  6756  0F12                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 934:       
                                           f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6757                           	movlb 1	; select bank1
  6758  0F12  0141               	movf	(vfpfcnvrt@ap)^080h,w
  6759  0F13  0869               	movwf	fsr1l
  6760  0F14  0086               	movlw 1	; select bank2/3
  6761  0F15  3001               	movwf fsr1h	
  6762  0F16  0087               	
  6763                           	movf	indf1,w
  6764  0F17  0801               	movwf	fsr0l
  6765  0F18  0084               	movlw 1	; select bank2/3
  6766  0F19  3001               	movwf fsr0h	
  6767  0F1A  0085               	
  6768                           	movlw	04h
  6769  0F1B  3004               	addwf	indf1,f
  6770  0F1C  0781               	moviw	[0]fsr0
  6771  0F1D  3F00               	movlb 2	; select bank2
  6772  0F1E  0142               	movwf	(vfpfcnvrt@f)^0100h
  6773  0F1F  00A7               	moviw	[1]fsr0
  6774  0F20  3F01               	movwf	(vfpfcnvrt@f+1)^0100h
  6775  0F21  00A8               	moviw	[2]fsr0
  6776  0F22  3F02               	movwf	(vfpfcnvrt@f+2)^0100h
  6777  0F23  00A9               	moviw	[3]fsr0
  6778  0F24  3F03               	movwf	(vfpfcnvrt@f+3)^0100h
  6779  0F25  00AA               	goto	l4525
  6780  0F26  2F27               	line	935
  6781                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 935:       
                                       }
  6782                           	
  6783                           l579:	
  6784  0F27                     	line	936
  6785                           	
  6786                           l4525:	
  6787  0F27                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 936:       
                                       *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  6788                           	movlb 1	; select bank1
  6789  0F27  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6790  0F28  0868               	movwf	fsr1l
  6791  0F29  0086               	movlw 1	; select bank2/3
  6792  0F2A  3001               	movwf fsr1h	
  6793  0F2B  0087               	
  6794                           	movlw	02h
  6795  0F2C  3002               	addwf	indf1,f
  6796  0F2D  0781               	addfsr	fsr1,1
  6797  0F2E  3141               	skipnc
  6798  0F2F  1803               	incf	indf1,f
  6799  0F30  0A81               	line	938
  6800                           	
  6801                           l4527:	
  6802  0F31                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 938:       
                                       return efgtoa(fp, f, c);
  6803                           	movlb 2	; select bank2
  6804  0F31  0142               	movf	(vfpfcnvrt@f+3)^0100h,w
  6805  0F32  082A               	movlb 1	; select bank1
  6806  0F33  0141               	movwf	(efgtoa@f+3)^080h
  6807  0F34  00AD               	movlb 2	; select bank2
  6808  0F35  0142               	movf	(vfpfcnvrt@f+2)^0100h,w
  6809  0F36  0829               	movlb 1	; select bank1
  6810  0F37  0141               	movwf	(efgtoa@f+2)^080h
  6811  0F38  00AC               	movlb 2	; select bank2
  6812  0F39  0142               	movf	(vfpfcnvrt@f+1)^0100h,w
  6813  0F3A  0828               	movlb 1	; select bank1
  6814  0F3B  0141               	movwf	(efgtoa@f+1)^080h
  6815  0F3C  00AB               	movlb 2	; select bank2
  6816  0F3D  0142               	movf	(vfpfcnvrt@f)^0100h,w
  6817  0F3E  0827               	movlb 1	; select bank1
  6818  0F3F  0141               	movwf	(efgtoa@f)^080h
  6819  0F40  00AA               
  6820                           	movlb 2	; select bank2
  6821  0F41  0142               	movf	(vfpfcnvrt@c)^0100h,w
  6822  0F42  082E               	movlb 1	; select bank1
  6823  0F43  0141               	movwf	(??_vfpfcnvrt+0)^080h+0
  6824  0F44  00EA               	movf	(??_vfpfcnvrt+0)^080h+0,w
  6825  0F45  086A               	movwf	(efgtoa@c)^080h
  6826  0F46  00AE               	movlb 2	; select bank2
  6827  0F47  0142               	movf	(vfpfcnvrt@fp)^0100h,w
  6828  0F48  082F               	fcall	_efgtoa
  6829  0F49  3190  200A  318C   	movlb 1	; select bank1
  6830  0F4C  0141               	movf	(1+(?_efgtoa))^080h,w
  6831  0F4D  082B               	movwf	(?_vfpfcnvrt+1)^080h
  6832  0F4E  00E9               	movf	(0+(?_efgtoa))^080h,w
  6833  0F4F  082A               	movwf	(?_vfpfcnvrt)^080h
  6834  0F50  00E8               	goto	l572
  6835  0F51  2FFF               	
  6836                           l4529:	
  6837  0F52                     	goto	l572
  6838  0F52  2FFF               	line	939
  6839                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 939:       
                                   }
  6840                           	
  6841                           l573:	
  6842  0F53                     	line	1149
  6843                           	
  6844                           l4531:	
  6845  0F53                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1149:      
                                    if (*fmt[0] == 's') {
  6846                           	movlb 1	; select bank1
  6847  0F53  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  6848  0F54  0868               	movwf	fsr1l
  6849  0F55  0086               	movlw 1	; select bank2/3
  6850  0F56  3001               	movwf fsr1h	
  6851  0F57  0087               	
  6852                           	moviw	[0]fsr1
  6853  0F58  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  6854  0F59  00EA               	moviw	[1]fsr1
  6855  0F5A  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  6856  0F5B  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  6857  0F5C  086A               	movwf	fsr0l
  6858  0F5D  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  6859  0F5E  086B               	movwf	fsr0h
  6860  0F5F  0085               	moviw	fsr0++
  6861  0F60  0012               xorlw	115
  6862  0F61  3A73               	btfss	status,2
  6863  0F62  1D03               	goto	u6381
  6864  0F63  2F65               	goto	u6380
  6865  0F64  2F66               u6381:
  6866  0F65                     	goto	l4541
  6867  0F65  2F92               u6380:
  6868  0F66                     	line	1151
  6869                           	
  6870                           l4533:	
  6871  0F66                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1151:      
                                        ++*fmt;
  6872                           	movf	(vfpfcnvrt@fmt)^080h,w
  6873  0F66  0868               	movwf	fsr1l
  6874  0F67  0086               	movlw 1	; select bank2/3
  6875  0F68  3001               	movwf fsr1h	
  6876  0F69  0087               	
  6877                           	movlw	01h
  6878  0F6A  3001               	addwf	indf1,f
  6879  0F6B  0781               	addfsr	fsr1,1
  6880  0F6C  3141               	skipnc
  6881  0F6D  1803               	incf	indf1,f
  6882  0F6E  0A81               	line	1152
  6883                           	
  6884                           l4535:	
  6885  0F6F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1152:      
                                        cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  6886                           	movf	(vfpfcnvrt@ap)^080h,w
  6887  0F6F  0869               	movwf	fsr1l
  6888  0F70  0086               	movlw 1	; select bank2/3
  6889  0F71  3001               	movwf fsr1h	
  6890  0F72  0087               	
  6891                           	moviw	[0]fsr1
  6892  0F73  3F40               	movwf	fsr0l
  6893  0F74  0084               	movlw 1	; select bank2/3
  6894  0F75  3001               	movwf fsr0h	
  6895  0F76  0085               	
  6896                           	incf	indf1,f
  6897  0F77  0A81               	movf	indf0,w
  6898  0F78  0800               	movwf	(??_vfpfcnvrt+0)^080h+0
  6899  0F79  00EA               	movf	(??_vfpfcnvrt+0)^080h+0,w
  6900  0F7A  086A               	movlb 2	; select bank2
  6901  0F7B  0142               	movwf	(vfpfcnvrt@cp)^0100h
  6902  0F7C  00A6               	line	1154
  6903                           	
  6904                           l4537:	
  6905  0F7D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1154:      
                                        return stoa(fp, cp);
  6906                           	movf	(vfpfcnvrt@cp)^0100h,w
  6907  0F7D  0826               	movlb 1	; select bank1
  6908  0F7E  0141               	movwf	(??_vfpfcnvrt+0)^080h+0
  6909  0F7F  00EA               	movf	(??_vfpfcnvrt+0)^080h+0,w
  6910  0F80  086A               	movlb 0	; select bank0
  6911  0F81  0140               	movwf	(stoa@s)
  6912  0F82  00A8               	movlb 2	; select bank2
  6913  0F83  0142               	movf	(vfpfcnvrt@fp)^0100h,w
  6914  0F84  082F               	fcall	_stoa
  6915  0F85  319E  2636  318C   	movlb 0	; select bank0
  6916  0F88  0140               	movf	(1+(?_stoa)),w
  6917  0F89  0829               	movlb 1	; select bank1
  6918  0F8A  0141               	movwf	(?_vfpfcnvrt+1)^080h
  6919  0F8B  00E9               	movlb 0	; select bank0
  6920  0F8C  0140               	movf	(0+(?_stoa)),w
  6921  0F8D  0828               	movlb 1	; select bank1
  6922  0F8E  0141               	movwf	(?_vfpfcnvrt)^080h
  6923  0F8F  00E8               	goto	l572
  6924  0F90  2FFF               	
  6925                           l4539:	
  6926  0F91                     	goto	l572
  6927  0F91  2FFF               	line	1155
  6928                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1155:      
                                    }
  6929                           	
  6930                           l580:	
  6931  0F92                     	line	1350
  6932                           	
  6933                           l4541:	
  6934  0F92                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1350:      
                                    if ((*fmt)[0] == '%') {
  6935                           	movf	(vfpfcnvrt@fmt)^080h,w
  6936  0F92  0868               	movwf	fsr1l
  6937  0F93  0086               	movlw 1	; select bank2/3
  6938  0F94  3001               	movwf fsr1h	
  6939  0F95  0087               	
  6940                           	moviw	[0]fsr1
  6941  0F96  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  6942  0F97  00EA               	moviw	[1]fsr1
  6943  0F98  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  6944  0F99  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  6945  0F9A  086A               	movwf	fsr0l
  6946  0F9B  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  6947  0F9C  086B               	movwf	fsr0h
  6948  0F9D  0085               	moviw	fsr0++
  6949  0F9E  0012               xorlw	37
  6950  0F9F  3A25               	btfss	status,2
  6951  0FA0  1D03               	goto	u6391
  6952  0FA1  2FA3               	goto	u6390
  6953  0FA2  2FA4               u6391:
  6954  0FA3                     	goto	l4551
  6955  0FA3  2FC3               u6390:
  6956  0FA4                     	line	1351
  6957                           	
  6958                           l4543:	
  6959  0FA4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1351:      
                                        ++*fmt;
  6960                           	movf	(vfpfcnvrt@fmt)^080h,w
  6961  0FA4  0868               	movwf	fsr1l
  6962  0FA5  0086               	movlw 1	; select bank2/3
  6963  0FA6  3001               	movwf fsr1h	
  6964  0FA7  0087               	
  6965                           	movlw	01h
  6966  0FA8  3001               	addwf	indf1,f
  6967  0FA9  0781               	addfsr	fsr1,1
  6968  0FAA  3141               	skipnc
  6969  0FAB  1803               	incf	indf1,f
  6970  0FAC  0A81               	line	1352
  6971                           	
  6972                           l4545:	
  6973  0FAD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1352:      
                                        fputc((int)'%', fp);
  6974                           	movlw	025h
  6975  0FAD  3025               	movlb 0	; select bank0
  6976  0FAE  0140               	movwf	(fputc@c)
  6977  0FAF  00A0               	movlw	0
  6978  0FB0  3000               	movwf	((fputc@c))+1
  6979  0FB1  00A1               	movlb 2	; select bank2
  6980  0FB2  0142               	movf	(vfpfcnvrt@fp)^0100h,w
  6981  0FB3  082F               	movlb 1	; select bank1
  6982  0FB4  0141               	movwf	(??_vfpfcnvrt+0)^080h+0
  6983  0FB5  00EA               	movf	(??_vfpfcnvrt+0)^080h+0,w
  6984  0FB6  086A               	movlb 0	; select bank0
  6985  0FB7  0140               	movwf	(fputc@fp)
  6986  0FB8  00A2               	fcall	_fputc
  6987  0FB9  31A6  26D8  318C   	line	1353
  6988                           	
  6989                           l4547:	
  6990  0FBC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1353:      
                                        return 1;
  6991                           	movlw	01h
  6992  0FBC  3001               	movlb 1	; select bank1
  6993  0FBD  0141               	movwf	(?_vfpfcnvrt)^080h
  6994  0FBE  00E8               	movlw	0
  6995  0FBF  3000               	movwf	((?_vfpfcnvrt)^080h)+1
  6996  0FC0  00E9               	goto	l572
  6997  0FC1  2FFF               	
  6998                           l4549:	
  6999  0FC2                     	goto	l572
  7000  0FC2  2FFF               	line	1354
  7001                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1354:      
                                    }
  7002                           	
  7003                           l581:	
  7004  0FC3                     	line	1357
  7005                           	
  7006                           l4551:	
  7007  0FC3                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1357:      
                                    ++*fmt;
  7008                           	movf	(vfpfcnvrt@fmt)^080h,w
  7009  0FC3  0868               	movwf	fsr1l
  7010  0FC4  0086               	movlw 1	; select bank2/3
  7011  0FC5  3001               	movwf fsr1h	
  7012  0FC6  0087               	
  7013                           	movlw	01h
  7014  0FC7  3001               	addwf	indf1,f
  7015  0FC8  0781               	addfsr	fsr1,1
  7016  0FC9  3141               	skipnc
  7017  0FCA  1803               	incf	indf1,f
  7018  0FCB  0A81               	line	1358
  7019                           	
  7020                           l4553:	
  7021  0FCC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1358:      
                                    return 0;
  7022                           	clrf	(?_vfpfcnvrt)^080h
  7023  0FCC  01E8               	clrf	(?_vfpfcnvrt+1)^080h
  7024  0FCD  01E9               	goto	l572
  7025  0FCE  2FFF               	
  7026                           l4555:	
  7027  0FCF                     	goto	l572
  7028  0FCF  2FFF               	line	1359
  7029                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1359:     }
                                 
  7030                           	
  7031                           l548:	
  7032  0FD0                     	line	1362
  7033                           	
  7034                           l4557:	
  7035  0FD0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1362:     f
                                 putc((int)(*fmt)[0], fp);
  7036                           	movf	(vfpfcnvrt@fmt)^080h,w
  7037  0FD0  0868               	movwf	fsr1l
  7038  0FD1  0086               	movlw 1	; select bank2/3
  7039  0FD2  3001               	movwf fsr1h	
  7040  0FD3  0087               	
  7041                           	moviw	[0]fsr1
  7042  0FD4  3F40               	movwf	(??_vfpfcnvrt+0)^080h+0
  7043  0FD5  00EA               	moviw	[1]fsr1
  7044  0FD6  3F41               	movwf	(??_vfpfcnvrt+0)^080h+0+1
  7045  0FD7  00EB               	movf	0+(??_vfpfcnvrt+0)^080h+0,w
  7046  0FD8  086A               	movwf	fsr0l
  7047  0FD9  0084               	movf	(1+(??_vfpfcnvrt+0)^080h+0),w
  7048  0FDA  086B               	movwf	fsr0h
  7049  0FDB  0085               	movf	indf0,w ;code access
  7050  0FDC  0800               	movwf	(??_vfpfcnvrt+2)^080h+0
  7051  0FDD  00EC               	clrf	(??_vfpfcnvrt+2)^080h+0+1
  7052  0FDE  01ED               	movf	0+(??_vfpfcnvrt+2)^080h+0,w
  7053  0FDF  086C               	movlb 0	; select bank0
  7054  0FE0  0140               	movwf	(fputc@c)
  7055  0FE1  00A0               	movlb 1	; select bank1
  7056  0FE2  0141               	movf	1+(??_vfpfcnvrt+2)^080h+0,w
  7057  0FE3  086D               	movlb 0	; select bank0
  7058  0FE4  0140               	movwf	(fputc@c+1)
  7059  0FE5  00A1               	movlb 2	; select bank2
  7060  0FE6  0142               	movf	(vfpfcnvrt@fp)^0100h,w
  7061  0FE7  082F               	movlb 1	; select bank1
  7062  0FE8  0141               	movwf	(??_vfpfcnvrt+4)^080h+0
  7063  0FE9  00EE               	movf	(??_vfpfcnvrt+4)^080h+0,w
  7064  0FEA  086E               	movlb 0	; select bank0
  7065  0FEB  0140               	movwf	(fputc@fp)
  7066  0FEC  00A2               	fcall	_fputc
  7067  0FED  31A6  26D8  318C   	line	1363
  7068                           	
  7069                           l4559:	
  7070  0FF0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1363:     +
                                 +*fmt;
  7071                           	movlb 1	; select bank1
  7072  0FF0  0141               	movf	(vfpfcnvrt@fmt)^080h,w
  7073  0FF1  0868               	movwf	fsr1l
  7074  0FF2  0086               	movlw 1	; select bank2/3
  7075  0FF3  3001               	movwf fsr1h	
  7076  0FF4  0087               	
  7077                           	movlw	01h
  7078  0FF5  3001               	addwf	indf1,f
  7079  0FF6  0781               	addfsr	fsr1,1
  7080  0FF7  3141               	skipnc
  7081  0FF8  1803               	incf	indf1,f
  7082  0FF9  0A81               	line	1364
  7083                           	
  7084                           l4561:	
  7085  0FFA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1364:     r
                                 eturn 1;
  7086                           	movlw	01h
  7087  0FFA  3001               	movwf	(?_vfpfcnvrt)^080h
  7088  0FFB  00E8               	movlw	0
  7089  0FFC  3000               	movwf	((?_vfpfcnvrt)^080h)+1
  7090  0FFD  00E9               	goto	l572
  7091  0FFE  2FFF               	
  7092                           l4563:	
  7093  0FFF                     	line	1365
  7094                           	
  7095                           l572:	
  7096  0FFF                     	return
  7097  0FFF  0008               	opt stack 0
  7098                           GLOBAL	__end_of_vfpfcnvrt
  7099                           	__end_of_vfpfcnvrt:
  7100  1000                     	signat	_vfpfcnvrt,12410
  7101                           	global	_strncmp
  7102                           
  7103 ;; *************** function _strncmp *****************
  7104 ;; Defined at:
  7105 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  7106 ;; Parameters:    Size  Location     Type
  7107 ;;  _l              1    wreg     PTR const unsigned char 
  7108 ;;		 -> vfpfcnvrt@ct(3), 
  7109 ;;  _r              2    0[BANK0 ] PTR const unsigned char 
  7110 ;;		 -> STR_18(3), 
  7111 ;;  n               2    2[BANK0 ] unsigned int 
  7112 ;; Auto vars:     Size  Location     Type
  7113 ;;  _l              1    6[BANK0 ] PTR const unsigned char 
  7114 ;;		 -> vfpfcnvrt@ct(3), 
  7115 ;;  r               2    7[BANK0 ] PTR const unsigned char 
  7116 ;;		 -> STR_18(3), 
  7117 ;;  l               1    9[BANK0 ] PTR const unsigned char 
  7118 ;;		 -> vfpfcnvrt@ct(3), 
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  2    0[BANK0 ] int 
  7121 ;; Registers used:
  7122 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7128 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7129 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7130 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7131 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7132 ;;Total ram usage:       10 bytes
  7133 ;; Hardware stack levels used:    1
  7134 ;; Hardware stack levels required when called:    3
  7135 ;; This function calls:
  7136 ;;		Nothing
  7137 ;; This function is called by:
  7138 ;;		_vfpfcnvrt
  7139 ;; This function uses a non-reentrant model
  7140 ;;
  7141                           psect	text8,local,class=CODE,delta=2,merge=1,group=2
  7142                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  7143                           	line	3
  7144                           global __ptext8
  7145                           __ptext8:	;psect for function _strncmp
  7146  183F                     psect	text8
  7147                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  7148                           	line	3
  7149                           	global	__size_of_strncmp
  7150                           	__size_of_strncmp	equ	__end_of_strncmp-_strncmp
  7151  006B                     	
  7152                           _strncmp:	
  7153  183F                     ;incstack = 0
  7154                           	opt	stack 8
  7155                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  7156                           ;strncmp@_l stored from wreg
  7157                           	movlb 0	; select bank0
  7158  183F  0140               	movwf	(strncmp@_l)
  7159  1840  00A6               	line	5
  7160                           	
  7161                           l4411:	
  7162  1841                     	movf	(strncmp@_l),w
  7163  1841  0826               	movwf	(??_strncmp+0)+0
  7164  1842  00A4               	movf	(??_strncmp+0)+0,w
  7165  1843  0824               	movwf	(strncmp@l)
  7166  1844  00A9               	movf	(strncmp@_r+1),w
  7167  1845  0821               	movwf	(strncmp@r+1)
  7168  1846  00A8               	movf	(strncmp@_r),w
  7169  1847  0820               	movwf	(strncmp@r)
  7170  1848  00A7               	line	6
  7171                           	
  7172                           l4413:	
  7173  1849                     	movlw	01h
  7174  1849  3001               	subwf	(strncmp@n),f
  7175  184A  02A2               	movlw	0
  7176  184B  3000               	subwfb	(strncmp@n+1),f
  7177  184C  3BA3               		incf	(((strncmp@n))),w
  7178  184D  0A22               	skipz
  7179  184E  1D03               	goto	u6151
  7180  184F  2854               	incf	(((strncmp@n+1))),w
  7181  1850  0A23               	btfss	status,2
  7182  1851  1D03               	goto	u6151
  7183  1852  2854               	goto	u6150
  7184  1853  2855               u6151:
  7185  1854                     	goto	l4425
  7186  1854  2867               u6150:
  7187  1855                     	
  7188                           l4415:	
  7189  1855                     	clrf	(?_strncmp)
  7190  1855  01A0               	clrf	(?_strncmp+1)
  7191  1856  01A1               	goto	l1143
  7192  1857  28A9               	
  7193                           l4417:	
  7194  1858                     	goto	l1143
  7195  1858  28A9               	
  7196                           l1142:	
  7197  1859                     	line	7
  7198                           	goto	l4425
  7199  1859  2867               	
  7200                           l1145:	
  7201  185A                     	
  7202                           l4419:	
  7203  185A                     	movlw	low(01h)
  7204  185A  3001               	movwf	(??_strncmp+0)+0
  7205  185B  00A4               	movf	(??_strncmp+0)+0,w
  7206  185C  0824               	addwf	(strncmp@l),f
  7207  185D  07A9               	
  7208                           l4421:	
  7209  185E                     	movlw	01h
  7210  185E  3001               	addwf	(strncmp@r),f
  7211  185F  07A7               	movlw	0
  7212  1860  3000               	addwfc	(strncmp@r+1),f
  7213  1861  3DA8               	
  7214                           l4423:	
  7215  1862                     	movlw	01h
  7216  1862  3001               	subwf	(strncmp@n),f
  7217  1863  02A2               	movlw	0
  7218  1864  3000               	subwfb	(strncmp@n+1),f
  7219  1865  3BA3               	goto	l4425
  7220  1866  2867               	
  7221                           l1144:	
  7222  1867                     	
  7223                           l4425:	
  7224  1867                     	movf	(strncmp@l),w
  7225  1867  0829               	movwf	fsr1l
  7226  1868  0086               	movlw 1	; select bank2/3
  7227  1869  3001               	movwf fsr1h	
  7228  186A  0087               	
  7229                           	movf	(indf1),w
  7230  186B  0801               	btfsc	status,2
  7231  186C  1903               	goto	u6161
  7232  186D  286F               	goto	u6160
  7233  186E  2870               u6161:
  7234  186F                     	goto	l4433
  7235  186F  2891               u6160:
  7236  1870                     	
  7237                           l4427:	
  7238  1870                     	movf	(strncmp@r),w
  7239  1870  0827               	movwf	fsr0l
  7240  1871  0084               	movf	((strncmp@r+1)),w
  7241  1872  0828               	movwf	fsr0h
  7242  1873  0085               	moviw	fsr0++
  7243  1874  0012               	btfsc	status,2
  7244  1875  1903               	goto	u6171
  7245  1876  2878               	goto	u6170
  7246  1877  2879               u6171:
  7247  1878                     	goto	l4433
  7248  1878  2891               u6170:
  7249  1879                     	
  7250                           l4429:	
  7251  1879                     	movf	((strncmp@n)),w
  7252  1879  0822               iorwf	((strncmp@n+1)),w
  7253  187A  0423               	btfsc	status,2
  7254  187B  1903               	goto	u6181
  7255  187C  287E               	goto	u6180
  7256  187D  287F               u6181:
  7257  187E                     	goto	l4433
  7258  187E  2891               u6180:
  7259  187F                     	
  7260                           l4431:	
  7261  187F                     	movf	(strncmp@r),w
  7262  187F  0827               	movwf	fsr0l
  7263  1880  0084               	movf	((strncmp@r+1)),w
  7264  1881  0828               	movwf	fsr0h
  7265  1882  0085               	movf	indf0,w ;code access
  7266  1883  0800               	movwf	(??_strncmp+0)+0
  7267  1884  00A4               	movf	(strncmp@l),w
  7268  1885  0829               	movwf	fsr1l
  7269  1886  0086               	movlw 1	; select bank2/3
  7270  1887  3001               	movwf fsr1h	
  7271  1888  0087               	
  7272                           	movf	indf1,w
  7273  1889  0801               	xorwf	(??_strncmp+0)+0,w
  7274  188A  0624               	skipnz
  7275  188B  1903               	goto	u6191
  7276  188C  288E               	goto	u6190
  7277  188D  288F               u6191:
  7278  188E                     	goto	l4419
  7279  188E  285A               u6190:
  7280  188F                     	goto	l4433
  7281  188F  2891               	
  7282                           l1147:	
  7283  1890                     	goto	l4433
  7284  1890  2891               	
  7285                           l1148:	
  7286  1891                     	line	8
  7287                           	
  7288                           l4433:	
  7289  1891                     	movf	(strncmp@r),w
  7290  1891  0827               	movwf	fsr0l
  7291  1892  0084               	movf	((strncmp@r+1)),w
  7292  1893  0828               	movwf	fsr0h
  7293  1894  0085               	movf	indf0,w ;code access
  7294  1895  0800               	movwf	(??_strncmp+0)+0
  7295  1896  00A4               	clrf	(??_strncmp+0)+0+1
  7296  1897  01A5               	comf	(??_strncmp+0)+0,f
  7297  1898  09A4               	comf	(??_strncmp+0)+1,f
  7298  1899  09A5               	incf	(??_strncmp+0)+0,f
  7299  189A  0AA4               	skipnz
  7300  189B  1903               	incf	(??_strncmp+0)+1,f
  7301  189C  0AA5               	movf	(strncmp@l),w
  7302  189D  0829               	movwf	fsr1l
  7303  189E  0086               	movlw 1	; select bank2/3
  7304  189F  3001               	movwf fsr1h	
  7305  18A0  0087               	
  7306                           	movf	indf1,w
  7307  18A1  0801               	addwf	0+(??_strncmp+0)+0,w
  7308  18A2  0724               	movwf	(?_strncmp)
  7309  18A3  00A0               	movf	1+(??_strncmp+0)+0,w
  7310  18A4  0825               	skipnc
  7311  18A5  1803               	incf	1+(??_strncmp+0)+0,w
  7312  18A6  0A25               	movwf	((?_strncmp))+1
  7313  18A7  00A1               	goto	l1143
  7314  18A8  28A9               	
  7315                           l4435:	
  7316  18A9                     	line	9
  7317                           	
  7318                           l1143:	
  7319  18A9                     	return
  7320  18A9  0008               	opt stack 0
  7321                           GLOBAL	__end_of_strncmp
  7322                           	__end_of_strncmp:
  7323  18AA                     	signat	_strncmp,12410
  7324                           	global	_stoa
  7325                           
  7326 ;; *************** function _stoa *****************
  7327 ;; Defined at:
  7328 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  7329 ;; Parameters:    Size  Location     Type
  7330 ;;  fp              1    wreg     PTR struct _IO_FILE
  7331 ;;		 -> sprintf@f(5), 
  7332 ;;  s               1    8[BANK0 ] PTR unsigned char 
  7333 ;;		 -> ?_sprintf(2), showMenu@s12(12), 
  7334 ;; Auto vars:     Size  Location     Type
  7335 ;;  fp              1   24[BANK0 ] PTR struct _IO_FILE
  7336 ;;		 -> sprintf@f(5), 
  7337 ;;  nuls            7   13[BANK0 ] unsigned char [7]
  7338 ;;  l               2   29[BANK0 ] int 
  7339 ;;  p               2   27[BANK0 ] int 
  7340 ;;  cp              2   25[BANK0 ] PTR unsigned char 
  7341 ;;		 -> ?_sprintf(2), stoa@nuls(7), showMenu@s12(12), 
  7342 ;;  w               2   22[BANK0 ] int 
  7343 ;;  i               2   20[BANK0 ] int 
  7344 ;; Return value:  Size  Location     Type
  7345 ;;                  2    8[BANK0 ] int 
  7346 ;; Registers used:
  7347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7348 ;; Tracked objects:
  7349 ;;		On entry : 0/0
  7350 ;;		On exit  : 0/0
  7351 ;;		Unchanged: 0/0
  7352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7353 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7354 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7355 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7356 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7357 ;;Total ram usage:       23 bytes
  7358 ;; Hardware stack levels used:    1
  7359 ;; Hardware stack levels required when called:    5
  7360 ;; This function calls:
  7361 ;;		_fputc
  7362 ;;		_strlen
  7363 ;; This function is called by:
  7364 ;;		_vfpfcnvrt
  7365 ;; This function uses a non-reentrant model
  7366 ;;
  7367                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  7368                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  7369                           	line	546
  7370                           global __ptext9
  7371                           __ptext9:	;psect for function _stoa
  7372  1E36                     psect	text9
  7373                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  7374                           	line	546
  7375                           	global	__size_of_stoa
  7376                           	__size_of_stoa	equ	__end_of_stoa-_stoa
  7377  00E3                     	
  7378                           _stoa:	
  7379  1E36                     ;incstack = 0
  7380                           	opt	stack 6
  7381                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7382                           ;stoa@fp stored from wreg
  7383                           	movlb 0	; select bank0
  7384  1E36  0140               	movwf	(stoa@fp)
  7385  1E37  00B8               	line	548
  7386                           	
  7387                           l4317:	
  7388  1E38                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 546: static
                                  int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\
                                 common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\commo
                                 n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7389                           	movlw	low(stoa@F1143)
  7390  1E38  305F               	movwf	fsr1l
  7391  1E39  0086               	movlw	high(stoa@F1143)
  7392  1E3A  3002               	movwf	fsr1h
  7393  1E3B  0087               	movlw	low(stoa@nuls)
  7394  1E3C  302D               	movwf	fsr0l
  7395  1E3D  0084               	movlw	high(stoa@nuls)
  7396  1E3E  3000               	movwf	fsr0h
  7397  1E3F  0085               	movlw	7
  7398  1E40  3007               	movwf	(??_stoa+0)+0
  7399  1E41  00AA               u5990:
  7400  1E42                     	moviw	fsr1++
  7401  1E42  0016               	movwi	fsr0++
  7402  1E43  001A               	decfsz	(??_stoa+0)+0,f
  7403  1E44  0BAA               	goto	u5990
  7404  1E45  2E42               	line	552
  7405                           	
  7406                           l4319:	
  7407  1E46                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 549:     in
                                 t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c
                                 : 552:     cp = s;
  7408                           	movf	(stoa@s),w
  7409  1E46  0828               	movwf	(stoa@cp)
  7410  1E47  00B9               	movlw	0x1
  7411  1E48  3001               
  7412                           	movwf	(stoa@cp+1)
  7413  1E49  00BA               	line	553
  7414                           	
  7415                           l4321:	
  7416  1E4A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 553:     if
                                  (!cp) {
  7417                           	movf	((stoa@cp)),w
  7418  1E4A  0839               iorwf	((stoa@cp+1)),w
  7419  1E4B  043A               	btfss	status,2
  7420  1E4C  1D03               	goto	u6001
  7421  1E4D  2E4F               	goto	u6000
  7422  1E4E  2E50               u6001:
  7423  1E4F                     	goto	l4325
  7424  1E4F  2E55               u6000:
  7425  1E50                     	line	554
  7426                           	
  7427                           l4323:	
  7428  1E50                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 554:       
                                   cp = nuls;
  7429                           	movlw	low(stoa@nuls)
  7430  1E50  302D               	movwf	(stoa@cp)
  7431  1E51  00B9               	movlw	high(stoa@nuls)
  7432  1E52  3000               	movwf	(stoa@cp+1)
  7433  1E53  00BA               	goto	l4325
  7434  1E54  2E55               	line	555
  7435                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 555:     }

  7436                           	
  7437                           l527:	
  7438  1E55                     	line	558
  7439                           	
  7440                           l4325:	
  7441  1E55                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 558:     l 
                                 = strlen(cp);
  7442                           	movf	(stoa@cp+1),w
  7443  1E55  083A               	movwf	(strlen@s+1)
  7444  1E56  00A1               	movf	(stoa@cp),w
  7445  1E57  0839               	movwf	(strlen@s)
  7446  1E58  00A0               	fcall	_strlen
  7447  1E59  31A2  229A  319E   	movlb 0	; select bank0
  7448  1E5C  0140               	movf	(1+(?_strlen)),w
  7449  1E5D  0821               	movwf	(stoa@l+1)
  7450  1E5E  00BE               	movf	(0+(?_strlen)),w
  7451  1E5F  0820               	movwf	(stoa@l)
  7452  1E60  00BD               	line	559
  7453                           	
  7454                           l4327:	
  7455  1E61                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 559:     p 
                                 = prec;
  7456                           	movlb 2	; select bank2
  7457  1E61  0142               	movf	(_prec+1)^0100h,w
  7458  1E62  0869               	movlb 0	; select bank0
  7459  1E63  0140               	movwf	(stoa@p+1)
  7460  1E64  00BC               	movlb 2	; select bank2
  7461  1E65  0142               	movf	(_prec)^0100h,w
  7462  1E66  0868               	movlb 0	; select bank0
  7463  1E67  0140               	movwf	(stoa@p)
  7464  1E68  00BB               	line	560
  7465                           	
  7466                           l4329:	
  7467  1E69                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 560:     l 
                                 = (!(p < 0) && (p < l)) ? p : l;
  7468                           	btfsc	(stoa@p+1),7
  7469  1E69  1BBC               	goto	u6011
  7470  1E6A  2E6C               	goto	u6010
  7471  1E6B  2E6D               u6011:
  7472  1E6C                     	goto	l531
  7473  1E6C  2E82               u6010:
  7474  1E6D                     	
  7475                           l4331:	
  7476  1E6D                     	movf	(stoa@p+1),w
  7477  1E6D  083C               	xorlw	80h
  7478  1E6E  3A80               	movwf	(??_stoa+0)+0
  7479  1E6F  00AA               	movf	(stoa@l+1),w
  7480  1E70  083E               	xorlw	80h
  7481  1E71  3A80               	subwf	(??_stoa+0)+0,w
  7482  1E72  022A               	skipz
  7483  1E73  1D03               	goto	u6025
  7484  1E74  2E77               	movf	(stoa@l),w
  7485  1E75  083D               	subwf	(stoa@p),w
  7486  1E76  023B               u6025:
  7487  1E77                     
  7488                           	skipc
  7489  1E77  1C03               	goto	u6021
  7490  1E78  2E7A               	goto	u6020
  7491  1E79  2E7B               u6021:
  7492  1E7A                     	goto	l4333
  7493  1E7A  2E7D               u6020:
  7494  1E7B                     	goto	l531
  7495  1E7B  2E82               	
  7496                           l533:	
  7497  1E7C                     	goto	l531
  7498  1E7C  2E82               	
  7499                           l529:	
  7500  1E7D                     	
  7501                           l4333:	
  7502  1E7D                     	movlb 0	; select bank0
  7503  1E7D  0140               	movf	(stoa@p+1),w
  7504  1E7E  083C               	movwf	(stoa@l+1)
  7505  1E7F  00BE               	movf	(stoa@p),w
  7506  1E80  083B               	movwf	(stoa@l)
  7507  1E81  00BD               	
  7508                           l531:	
  7509  1E82                     	line	561
  7510                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 561:     p 
                                 = l;
  7511                           	movlb 0	; select bank0
  7512  1E82  0140               	movf	(stoa@l+1),w
  7513  1E83  083E               	movwf	(stoa@p+1)
  7514  1E84  00BC               	movf	(stoa@l),w
  7515  1E85  083D               	movwf	(stoa@p)
  7516  1E86  00BB               	line	562
  7517                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 562:     w 
                                 = width;
  7518                           	movlb 2	; select bank2
  7519  1E87  0142               	movf	(_width+1)^0100h,w
  7520  1E88  0867               	movlb 0	; select bank0
  7521  1E89  0140               	movwf	(stoa@w+1)
  7522  1E8A  00B7               	movlb 2	; select bank2
  7523  1E8B  0142               	movf	(_width)^0100h,w
  7524  1E8C  0866               	movlb 0	; select bank0
  7525  1E8D  0140               	movwf	(stoa@w)
  7526  1E8E  00B6               	line	565
  7527                           	
  7528                           l4335:	
  7529  1E8F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 565:     if
                                  (!(flags & (1 << 0))) {
  7530                           	movlb 2	; select bank2
  7531  1E8F  0142               	btfsc	(_flags)^0100h,(0)&7
  7532  1E90  186A               	goto	u6031
  7533  1E91  2E93               	goto	u6030
  7534  1E92  2E94               u6031:
  7535  1E93                     	goto	l4345
  7536  1E93  2EB9               u6030:
  7537  1E94                     	goto	l4343
  7538  1E94  2EA8               	line	566
  7539                           	
  7540                           l4337:	
  7541  1E95                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 566:       
                                   while (l < w) {
  7542                           	goto	l4343
  7543  1E95  2EA8               	
  7544                           l536:	
  7545  1E96                     	line	567
  7546                           	
  7547                           l4339:	
  7548  1E96                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 567:       
                                       fputc(' ', fp);
  7549                           	movlw	020h
  7550  1E96  3020               	movlb 0	; select bank0
  7551  1E97  0140               	movwf	(fputc@c)
  7552  1E98  00A0               	movlw	0
  7553  1E99  3000               	movwf	((fputc@c))+1
  7554  1E9A  00A1               	movf	(stoa@fp),w
  7555  1E9B  0838               	movwf	(??_stoa+0)+0
  7556  1E9C  00AA               	movf	(??_stoa+0)+0,w
  7557  1E9D  082A               	movwf	(fputc@fp)
  7558  1E9E  00A2               	fcall	_fputc
  7559  1E9F  31A6  26D8  319E   	line	568
  7560                           	
  7561                           l4341:	
  7562  1EA2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 568:       
                                       ++l;
  7563                           	movlw	01h
  7564  1EA2  3001               	movlb 0	; select bank0
  7565  1EA3  0140               	addwf	(stoa@l),f
  7566  1EA4  07BD               	movlw	0
  7567  1EA5  3000               	addwfc	(stoa@l+1),f
  7568  1EA6  3DBE               	goto	l4343
  7569  1EA7  2EA8               	line	569
  7570                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 569:       
                                   }
  7571                           	
  7572                           l535:	
  7573  1EA8                     	line	566
  7574                           	
  7575                           l4343:	
  7576  1EA8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 566:       
                                   while (l < w) {
  7577                           	movlb 0	; select bank0
  7578  1EA8  0140               	movf	(stoa@l+1),w
  7579  1EA9  083E               	xorlw	80h
  7580  1EAA  3A80               	movwf	(??_stoa+0)+0
  7581  1EAB  00AA               	movf	(stoa@w+1),w
  7582  1EAC  0837               	xorlw	80h
  7583  1EAD  3A80               	subwf	(??_stoa+0)+0,w
  7584  1EAE  022A               	skipz
  7585  1EAF  1D03               	goto	u6045
  7586  1EB0  2EB3               	movf	(stoa@w),w
  7587  1EB1  0836               	subwf	(stoa@l),w
  7588  1EB2  023D               u6045:
  7589  1EB3                     
  7590                           	skipc
  7591  1EB3  1C03               	goto	u6041
  7592  1EB4  2EB6               	goto	u6040
  7593  1EB5  2EB7               u6041:
  7594  1EB6                     	goto	l4339
  7595  1EB6  2E96               u6040:
  7596  1EB7                     	goto	l4345
  7597  1EB7  2EB9               	
  7598                           l537:	
  7599  1EB8                     	goto	l4345
  7600  1EB8  2EB9               	line	570
  7601                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 570:     }

  7602                           	
  7603                           l534:	
  7604  1EB9                     	line	573
  7605                           	
  7606                           l4345:	
  7607  1EB9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 573:     i 
                                 = 0;
  7608                           	movlb 0	; select bank0
  7609  1EB9  0140               	clrf	(stoa@i)
  7610  1EBA  01B4               	clrf	(stoa@i+1)
  7611  1EBB  01B5               	line	574
  7612                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 574:     wh
                                 ile (i < p) {
  7613                           	goto	l4353
  7614  1EBC  2EDA               	
  7615                           l539:	
  7616  1EBD                     	line	575
  7617                           	
  7618                           l4347:	
  7619  1EBD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 575:       
                                   fputc(*cp, fp);
  7620                           	movlb 0	; select bank0
  7621  1EBD  0140               	movf	(stoa@cp),w
  7622  1EBE  0839               	movwf	fsr1l
  7623  1EBF  0086               	movf	(stoa@cp+1),w
  7624  1EC0  083A               	movwf	fsr1h
  7625  1EC1  0087               
  7626                           	movf	indf1,w
  7627  1EC2  0801               	movwf	(??_stoa+0)+0
  7628  1EC3  00AA               	clrf	(??_stoa+0)+0+1
  7629  1EC4  01AB               	movf	0+(??_stoa+0)+0,w
  7630  1EC5  082A               	movwf	(fputc@c)
  7631  1EC6  00A0               	movf	1+(??_stoa+0)+0,w
  7632  1EC7  082B               	movwf	(fputc@c+1)
  7633  1EC8  00A1               	movf	(stoa@fp),w
  7634  1EC9  0838               	movwf	(??_stoa+2)+0
  7635  1ECA  00AC               	movf	(??_stoa+2)+0,w
  7636  1ECB  082C               	movwf	(fputc@fp)
  7637  1ECC  00A2               	fcall	_fputc
  7638  1ECD  31A6  26D8  319E   	line	576
  7639                           	
  7640                           l4349:	
  7641  1ED0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 576:       
                                   ++cp;
  7642                           	movlw	01h
  7643  1ED0  3001               	movlb 0	; select bank0
  7644  1ED1  0140               	addwf	(stoa@cp),f
  7645  1ED2  07B9               	movlw	0
  7646  1ED3  3000               	addwfc	(stoa@cp+1),f
  7647  1ED4  3DBA               	line	577
  7648                           	
  7649                           l4351:	
  7650  1ED5                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 577:       
                                   ++i;
  7651                           	movlw	01h
  7652  1ED5  3001               	addwf	(stoa@i),f
  7653  1ED6  07B4               	movlw	0
  7654  1ED7  3000               	addwfc	(stoa@i+1),f
  7655  1ED8  3DB5               	goto	l4353
  7656  1ED9  2EDA               	line	578
  7657                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 578:     }

  7658                           	
  7659                           l538:	
  7660  1EDA                     	line	574
  7661                           	
  7662                           l4353:	
  7663  1EDA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 574:     wh
                                 ile (i < p) {
  7664                           	movf	(stoa@i+1),w
  7665  1EDA  0835               	xorlw	80h
  7666  1EDB  3A80               	movwf	(??_stoa+0)+0
  7667  1EDC  00AA               	movf	(stoa@p+1),w
  7668  1EDD  083C               	xorlw	80h
  7669  1EDE  3A80               	subwf	(??_stoa+0)+0,w
  7670  1EDF  022A               	skipz
  7671  1EE0  1D03               	goto	u6055
  7672  1EE1  2EE4               	movf	(stoa@p),w
  7673  1EE2  083B               	subwf	(stoa@i),w
  7674  1EE3  0234               u6055:
  7675  1EE4                     
  7676                           	skipc
  7677  1EE4  1C03               	goto	u6051
  7678  1EE5  2EE7               	goto	u6050
  7679  1EE6  2EE8               u6051:
  7680  1EE7                     	goto	l4347
  7681  1EE7  2EBD               u6050:
  7682  1EE8                     	
  7683                           l540:	
  7684  1EE8                     	line	581
  7685                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 581:     if
                                  (flags & (1 << 0)) {
  7686                           	movlb 2	; select bank2
  7687  1EE8  0142               	btfss	(_flags)^0100h,(0)&7
  7688  1EE9  1C6A               	goto	u6061
  7689  1EEA  2EEC               	goto	u6060
  7690  1EEB  2EED               u6061:
  7691  1EEC                     	goto	l4363
  7692  1EEC  2F12               u6060:
  7693  1EED                     	goto	l4361
  7694  1EED  2F01               	line	582
  7695                           	
  7696                           l4355:	
  7697  1EEE                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 582:       
                                   while (l < w) {
  7698                           	goto	l4361
  7699  1EEE  2F01               	
  7700                           l543:	
  7701  1EEF                     	line	583
  7702                           	
  7703                           l4357:	
  7704  1EEF                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 583:       
                                       fputc(' ', fp);
  7705                           	movlw	020h
  7706  1EEF  3020               	movlb 0	; select bank0
  7707  1EF0  0140               	movwf	(fputc@c)
  7708  1EF1  00A0               	movlw	0
  7709  1EF2  3000               	movwf	((fputc@c))+1
  7710  1EF3  00A1               	movf	(stoa@fp),w
  7711  1EF4  0838               	movwf	(??_stoa+0)+0
  7712  1EF5  00AA               	movf	(??_stoa+0)+0,w
  7713  1EF6  082A               	movwf	(fputc@fp)
  7714  1EF7  00A2               	fcall	_fputc
  7715  1EF8  31A6  26D8  319E   	line	584
  7716                           	
  7717                           l4359:	
  7718  1EFB                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 584:       
                                       ++l;
  7719                           	movlw	01h
  7720  1EFB  3001               	movlb 0	; select bank0
  7721  1EFC  0140               	addwf	(stoa@l),f
  7722  1EFD  07BD               	movlw	0
  7723  1EFE  3000               	addwfc	(stoa@l+1),f
  7724  1EFF  3DBE               	goto	l4361
  7725  1F00  2F01               	line	585
  7726                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 585:       
                                   }
  7727                           	
  7728                           l542:	
  7729  1F01                     	line	582
  7730                           	
  7731                           l4361:	
  7732  1F01                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 582:       
                                   while (l < w) {
  7733                           	movlb 0	; select bank0
  7734  1F01  0140               	movf	(stoa@l+1),w
  7735  1F02  083E               	xorlw	80h
  7736  1F03  3A80               	movwf	(??_stoa+0)+0
  7737  1F04  00AA               	movf	(stoa@w+1),w
  7738  1F05  0837               	xorlw	80h
  7739  1F06  3A80               	subwf	(??_stoa+0)+0,w
  7740  1F07  022A               	skipz
  7741  1F08  1D03               	goto	u6075
  7742  1F09  2F0C               	movf	(stoa@w),w
  7743  1F0A  0836               	subwf	(stoa@l),w
  7744  1F0B  023D               u6075:
  7745  1F0C                     
  7746                           	skipc
  7747  1F0C  1C03               	goto	u6071
  7748  1F0D  2F0F               	goto	u6070
  7749  1F0E  2F10               u6071:
  7750  1F0F                     	goto	l4357
  7751  1F0F  2EEF               u6070:
  7752  1F10                     	goto	l4363
  7753  1F10  2F12               	
  7754                           l544:	
  7755  1F11                     	goto	l4363
  7756  1F11  2F12               	line	586
  7757                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 586:     }

  7758                           	
  7759                           l541:	
  7760  1F12                     	line	588
  7761                           	
  7762                           l4363:	
  7763  1F12                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 588:     re
                                 turn l;
  7764                           	movlb 0	; select bank0
  7765  1F12  0140               	movf	(stoa@l+1),w
  7766  1F13  083E               	movwf	(?_stoa+1)
  7767  1F14  00A9               	movf	(stoa@l),w
  7768  1F15  083D               	movwf	(?_stoa)
  7769  1F16  00A8               	goto	l545
  7770  1F17  2F18               	
  7771                           l4365:	
  7772  1F18                     	line	589
  7773                           	
  7774                           l545:	
  7775  1F18                     	return
  7776  1F18  0008               	opt stack 0
  7777                           GLOBAL	__end_of_stoa
  7778                           	__end_of_stoa:
  7779  1F19                     	signat	_stoa,8314
  7780                           	global	_efgtoa
  7781                           
  7782 ;; *************** function _efgtoa *****************
  7783 ;; Defined at:
  7784 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  7785 ;; Parameters:    Size  Location     Type
  7786 ;;  fp              1    wreg     PTR struct _IO_FILE
  7787 ;;		 -> sprintf@f(5), 
  7788 ;;  f               4   10[BANK1 ] PTR struct _IO_FILE
  7789 ;;  c               1   14[BANK1 ] unsigned char 
  7790 ;; Auto vars:     Size  Location     Type
  7791 ;;  fp              1   43[BANK1 ] PTR struct _IO_FILE
  7792 ;;		 -> sprintf@f(5), 
  7793 ;;  u               4   68[BANK1 ] PTR struct _IO_FILE
  7794 ;;  g               4   60[BANK1 ] PTR struct _IO_FILE
  7795 ;;  l               4   54[BANK1 ] PTR struct _IO_FILE
  7796 ;;  h               4   50[BANK1 ] PTR struct _IO_FILE
  7797 ;;  ou              4   15[BANK1 ] PTR struct _IO_FILE
  7798 ;;  n               2   66[BANK1 ] int 
  7799 ;;  e               2   64[BANK1 ] int 
  7800 ;;  i               2   58[BANK1 ] int 
  7801 ;;  w               2   47[BANK1 ] int 
  7802 ;;  p               2   44[BANK1 ] int 
  7803 ;;  sign            2   41[BANK1 ] int 
  7804 ;;  d               2   39[BANK1 ] int 
  7805 ;;  ne              2   37[BANK1 ] int 
  7806 ;;  m               2   35[BANK1 ] int 
  7807 ;;  pp              2   33[BANK1 ] int 
  7808 ;;  t               2   31[BANK1 ] int 
  7809 ;;  mode            1   49[BANK1 ] unsigned char 
  7810 ;;  nmode           1   46[BANK1 ] unsigned char 
  7811 ;; Return value:  Size  Location     Type
  7812 ;;                  2   10[BANK1 ] int 
  7813 ;; Registers used:
  7814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7815 ;; Tracked objects:
  7816 ;;		On entry : 0/0
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7820 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7821 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7822 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7823 ;;      Totals:         0       4      62       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7824 ;;Total ram usage:       66 bytes
  7825 ;; Hardware stack levels used:    1
  7826 ;; Hardware stack levels required when called:    7
  7827 ;; This function calls:
  7828 ;;		___awdiv
  7829 ;;		___awmod
  7830 ;;		___fladd
  7831 ;;		___fldiv
  7832 ;;		___fleq
  7833 ;;		___flge
  7834 ;;		___flmul
  7835 ;;		___flneg
  7836 ;;		___flsub
  7837 ;;		___fltol
  7838 ;;		___fpclassifyf
  7839 ;;		_floorf
  7840 ;;		_isupper
  7841 ;;		_pad
  7842 ;;		_strcpy
  7843 ;;		_tolower
  7844 ;; This function is called by:
  7845 ;;		_vfpfcnvrt
  7846 ;; This function uses a non-reentrant model
  7847 ;;
  7848                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  7849                           	line	319
  7850                           global __ptext10
  7851                           __ptext10:	;psect for function _efgtoa
  7852  100A                     psect	text10
  7853                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  7854                           	line	319
  7855                           	global	__size_of_efgtoa
  7856                           	__size_of_efgtoa	equ	__end_of_efgtoa-_efgtoa
  7857  F7BB                     	
  7858                           _efgtoa:	
  7859  100A                     ;incstack = 0
  7860                           	opt	stack 4
  7861                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7862                           ;efgtoa@fp stored from wreg
  7863                           	movlb 1	; select bank1
  7864  100A  0141               	movwf	(efgtoa@fp)^080h
  7865  100B  00CB               	line	326
  7866                           	
  7867                           l4025:	
  7868  100C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 319: static
                                  int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.00\
                                 pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\s
                                 ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
                                 xc8\v2.00\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
                                 t, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 323:  
                                    long double g, h, l, ou, u;
  7869                           	clrf	(efgtoa@sign)^080h
  7870  100C  01C9               	clrf	(efgtoa@sign+1)^080h
  7871  100D  01CA               	line	327
  7872                           	
  7873                           l4027:	
  7874  100E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 327:     g 
                                 = f;
  7875                           	movf	(efgtoa@f+3)^080h,w
  7876  100E  082D               	movwf	(efgtoa@g+3)^080h
  7877  100F  00DF               	movf	(efgtoa@f+2)^080h,w
  7878  1010  082C               	movwf	(efgtoa@g+2)^080h
  7879  1011  00DE               	movf	(efgtoa@f+1)^080h,w
  7880  1012  082B               	movwf	(efgtoa@g+1)^080h
  7881  1013  00DD               	movf	(efgtoa@f)^080h,w
  7882  1014  082A               	movwf	(efgtoa@g)^080h
  7883  1015  00DC               
  7884                           	line	328
  7885                           	
  7886                           l4029:	
  7887  1016                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 328:     if
                                  (g < 0.0) {
  7888                           	movf	(efgtoa@g+3)^080h,w
  7889  1016  085F               	movlb 0	; select bank0
  7890  1017  0140               	movwf	(___flge@ff1+3)
  7891  1018  00CB               	movlb 1	; select bank1
  7892  1019  0141               	movf	(efgtoa@g+2)^080h,w
  7893  101A  085E               	movlb 0	; select bank0
  7894  101B  0140               	movwf	(___flge@ff1+2)
  7895  101C  00CA               	movlb 1	; select bank1
  7896  101D  0141               	movf	(efgtoa@g+1)^080h,w
  7897  101E  085D               	movlb 0	; select bank0
  7898  101F  0140               	movwf	(___flge@ff1+1)
  7899  1020  00C9               	movlb 1	; select bank1
  7900  1021  0141               	movf	(efgtoa@g)^080h,w
  7901  1022  085C               	movlb 0	; select bank0
  7902  1023  0140               	movwf	(___flge@ff1)
  7903  1024  00C8               
  7904                           	movlw	0x0
  7905  1025  3000               	movwf	(___flge@ff2+3)
  7906  1026  00CF               	movlw	0x0
  7907  1027  3000               	movwf	(___flge@ff2+2)
  7908  1028  00CE               	movlw	0x0
  7909  1029  3000               	movwf	(___flge@ff2+1)
  7910  102A  00CD               	movlw	0x0
  7911  102B  3000               	movwf	(___flge@ff2)
  7912  102C  00CC               
  7913                           	fcall	___flge
  7914  102D  319B  233A  3190   	btfsc	status,0
  7915  1030  1803               	goto	u5471
  7916  1031  2833               	goto	u5470
  7917  1032  2834               u5471:
  7918  1033                     	goto	l4035
  7919  1033  285C               u5470:
  7920  1034                     	line	329
  7921                           	
  7922                           l4031:	
  7923  1034                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 329:       
                                   sign = 1;
  7924                           	movlw	01h
  7925  1034  3001               	movlb 1	; select bank1
  7926  1035  0141               	movwf	(efgtoa@sign)^080h
  7927  1036  00C9               	movlw	0
  7928  1037  3000               	movwf	((efgtoa@sign)^080h)+1
  7929  1038  00CA               	line	330
  7930                           	
  7931                           l4033:	
  7932  1039                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 330:       
                                   g = -g;
  7933                           	movf	(efgtoa@g+3)^080h,w
  7934  1039  085F               	movlb 0	; select bank0
  7935  103A  0140               	movwf	(___flneg@f1+3)
  7936  103B  00A3               	movlb 1	; select bank1
  7937  103C  0141               	movf	(efgtoa@g+2)^080h,w
  7938  103D  085E               	movlb 0	; select bank0
  7939  103E  0140               	movwf	(___flneg@f1+2)
  7940  103F  00A2               	movlb 1	; select bank1
  7941  1040  0141               	movf	(efgtoa@g+1)^080h,w
  7942  1041  085D               	movlb 0	; select bank0
  7943  1042  0140               	movwf	(___flneg@f1+1)
  7944  1043  00A1               	movlb 1	; select bank1
  7945  1044  0141               	movf	(efgtoa@g)^080h,w
  7946  1045  085C               	movlb 0	; select bank0
  7947  1046  0140               	movwf	(___flneg@f1)
  7948  1047  00A0               
  7949                           	fcall	___flneg
  7950  1048  31A1  2176  3190   	movlb 0	; select bank0
  7951  104B  0140               	movf	(3+(?___flneg)),w
  7952  104C  0823               	movlb 1	; select bank1
  7953  104D  0141               	movwf	(efgtoa@g+3)^080h
  7954  104E  00DF               	movlb 0	; select bank0
  7955  104F  0140               	movf	(2+(?___flneg)),w
  7956  1050  0822               	movlb 1	; select bank1
  7957  1051  0141               	movwf	(efgtoa@g+2)^080h
  7958  1052  00DE               	movlb 0	; select bank0
  7959  1053  0140               	movf	(1+(?___flneg)),w
  7960  1054  0821               	movlb 1	; select bank1
  7961  1055  0141               	movwf	(efgtoa@g+1)^080h
  7962  1056  00DD               	movlb 0	; select bank0
  7963  1057  0140               	movf	(0+(?___flneg)),w
  7964  1058  0820               	movlb 1	; select bank1
  7965  1059  0141               	movwf	(efgtoa@g)^080h
  7966  105A  00DC               
  7967                           	goto	l4035
  7968  105B  285C               	line	331
  7969                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 331:     }

  7970                           	
  7971                           l434:	
  7972  105C                     	line	334
  7973                           	
  7974                           l4035:	
  7975  105C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 334:     n 
                                 = 0;
  7976                           	movlb 1	; select bank1
  7977  105C  0141               	clrf	(efgtoa@n)^080h
  7978  105D  01E2               	clrf	(efgtoa@n+1)^080h
  7979  105E  01E3               	line	335
  7980                           	
  7981                           l4037:	
  7982  105F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 335:     w 
                                 = width;
  7983                           	movlb 2	; select bank2
  7984  105F  0142               	movf	(_width+1)^0100h,w
  7985  1060  0867               	movlb 1	; select bank1
  7986  1061  0141               	movwf	(efgtoa@w+1)^080h
  7987  1062  00D0               	movlb 2	; select bank2
  7988  1063  0142               	movf	(_width)^0100h,w
  7989  1064  0866               	movlb 1	; select bank1
  7990  1065  0141               	movwf	(efgtoa@w)^080h
  7991  1066  00CF               	line	336
  7992                           	
  7993                           l4039:	
  7994  1067                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 336:     if
                                  (sign || (flags & (1 << 2))) {
  7995                           	movf	((efgtoa@sign)^080h),w
  7996  1067  0849               iorwf	((efgtoa@sign+1)^080h),w
  7997  1068  044A               	btfss	status,2
  7998  1069  1D03               	goto	u5481
  7999  106A  286C               	goto	u5480
  8000  106B  286D               u5481:
  8001  106C                     	goto	l4043
  8002  106C  2873               u5480:
  8003  106D                     	
  8004                           l4041:	
  8005  106D                     	movlb 2	; select bank2
  8006  106D  0142               	btfss	(_flags)^0100h,(2)&7
  8007  106E  1D6A               	goto	u5491
  8008  106F  2871               	goto	u5490
  8009  1070  2872               u5491:
  8010  1071                     	goto	l4055
  8011  1071  289A               u5490:
  8012  1072                     	goto	l4043
  8013  1072  2873               	
  8014                           l437:	
  8015  1073                     	line	337
  8016                           	
  8017                           l4043:	
  8018  1073                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 337:       
                                   dbuf[n] = sign ? '-' : '+';
  8019                           	movlb 1	; select bank1
  8020  1073  0141               	movf	((efgtoa@sign)^080h),w
  8021  1074  0849               iorwf	((efgtoa@sign+1)^080h),w
  8022  1075  044A               	btfss	status,2
  8023  1076  1D03               	goto	u5501
  8024  1077  2879               	goto	u5500
  8025  1078  287A               u5501:
  8026  1079                     	goto	l4047
  8027  1079  287F               u5500:
  8028  107A                     	
  8029                           l4045:	
  8030  107A                     	movlw	02Bh
  8031  107A  302B               	movwf	(_efgtoa$909)^080h
  8032  107B  00B3               	movlw	0
  8033  107C  3000               	movwf	((_efgtoa$909)^080h)+1
  8034  107D  00B4               	goto	l4049
  8035  107E  2884               	
  8036                           l439:	
  8037  107F                     	
  8038                           l4047:	
  8039  107F                     	movlw	02Dh
  8040  107F  302D               	movwf	(_efgtoa$909)^080h
  8041  1080  00B3               	movlw	0
  8042  1081  3000               	movwf	((_efgtoa$909)^080h)+1
  8043  1082  00B4               	goto	l4049
  8044  1083  2884               	
  8045                           l441:	
  8046  1084                     	
  8047                           l4049:	
  8048  1084                     	movf	(_efgtoa$909)^080h,w
  8049  1084  0833               	movlb 0	; select bank0
  8050  1085  0140               	movwf	(??_efgtoa+0)+0
  8051  1086  00EC               	movlb 1	; select bank1
  8052  1087  0141               	movf	(efgtoa@n)^080h,w
  8053  1088  0862               	addlw	low(_dbuf|((0x3)<<8))&0ffh
  8054  1089  3E20               	movwf	fsr1l
  8055  108A  0086               	movlw 3	; select bank6/7
  8056  108B  3003               	movwf fsr1h	
  8057  108C  0087               	
  8058                           	movlb 0	; select bank0
  8059  108D  0140               	movf	(??_efgtoa+0)+0,w
  8060  108E  086C               	movwf	indf1
  8061  108F  0081               	line	338
  8062                           	
  8063                           l4051:	
  8064  1090                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 338:       
                                   ++n;
  8065                           	movlw	01h
  8066  1090  3001               	movlb 1	; select bank1
  8067  1091  0141               	addwf	(efgtoa@n)^080h,f
  8068  1092  07E2               	movlw	0
  8069  1093  3000               	addwfc	(efgtoa@n+1)^080h,f
  8070  1094  3DE3               	line	339
  8071                           	
  8072                           l4053:	
  8073  1095                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 339:       
                                   --w;
  8074                           	movlw	0FFh
  8075  1095  30FF               	addwf	(efgtoa@w)^080h,f
  8076  1096  07CF               	movlw	0FFh
  8077  1097  30FF               	addwfc	(efgtoa@w+1)^080h,f
  8078  1098  3DD0               	goto	l4055
  8079  1099  289A               	line	340
  8080                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 340:     }

  8081                           	
  8082                           l435:	
  8083  109A                     	line	343
  8084                           	
  8085                           l4055:	
  8086  109A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 344:       
                                   if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8087                           	movlb 1	; select bank1
  8088  109A  0141               	movf	(efgtoa@g+3)^080h,w
  8089  109B  085F               	movlb 0	; select bank0
  8090  109C  0140               	movwf	(___fpclassifyf@x+3)
  8091  109D  00A3               	movlb 1	; select bank1
  8092  109E  0141               	movf	(efgtoa@g+2)^080h,w
  8093  109F  085E               	movlb 0	; select bank0
  8094  10A0  0140               	movwf	(___fpclassifyf@x+2)
  8095  10A1  00A2               	movlb 1	; select bank1
  8096  10A2  0141               	movf	(efgtoa@g+1)^080h,w
  8097  10A3  085D               	movlb 0	; select bank0
  8098  10A4  0140               	movwf	(___fpclassifyf@x+1)
  8099  10A5  00A1               	movlb 1	; select bank1
  8100  10A6  0141               	movf	(efgtoa@g)^080h,w
  8101  10A7  085C               	movlb 0	; select bank0
  8102  10A8  0140               	movwf	(___fpclassifyf@x)
  8103  10A9  00A0               
  8104                           	fcall	___fpclassifyf
  8105  10AA  3199  2197  3190   	movlb 0	; select bank0
  8106  10AD  0140               		decf	((0+(?___fpclassifyf))),w
  8107  10AE  0320               iorwf	((1+(?___fpclassifyf))),w
  8108  10AF  0421               	btfss	status,2
  8109  10B0  1D03               	goto	u5511
  8110  10B1  28B3               	goto	u5510
  8111  10B2  28B5               u5511:
  8112  10B3                     	goto	l4073
  8113  10B3  3180  28D2         u5510:
  8114  10B5                     	line	344
  8115                           	
  8116                           l4057:	
  8117  10B5                     	movlb 1	; select bank1
  8118  10B5  0141               	movf	(efgtoa@c)^080h,w
  8119  10B6  082E               	addlw	low(0FFBFh)
  8120  10B7  3EBF               	movlb 0	; select bank0
  8121  10B8  0140               	movwf	(??_efgtoa+0)+0
  8122  10B9  00EC               	movlw	high(0FFBFh)
  8123  10BA  30FF               	skipnc
  8124  10BB  1803               	movlw	(high(0FFBFh)+1)&0ffh
  8125  10BC  3000               	movwf	((??_efgtoa+0)+0)+1
  8126  10BD  00ED               	movlw	0
  8127  10BE  3000               	subwf	1+(??_efgtoa+0)+0,w
  8128  10BF  026D               	movlw	01Ah
  8129  10C0  301A               	skipnz
  8130  10C1  1903               	subwf	0+(??_efgtoa+0)+0,w
  8131  10C2  026C               	skipc
  8132  10C3  1C03               	goto	u5521
  8133  10C4  28C6               	goto	u5520
  8134  10C5  28C8               u5521:
  8135  10C6                     	movlw	1
  8136  10C6  3001               	goto	u5530
  8137  10C7  28C9               u5520:
  8138  10C8                     	movlw	0
  8139  10C8  3000               u5530:
  8140  10C9                     	movwf	(??_efgtoa+2)+0
  8141  10C9  00EE               	clrf	(??_efgtoa+2)+0+1
  8142  10CA  01EF               	movf	0+(??_efgtoa+2)+0,w
  8143  10CB  086E               	movlb 1	; select bank1
  8144  10CC  0141               	movwf	(_efgtoa$910)^080h
  8145  10CD  00B5               	movlb 0	; select bank0
  8146  10CE  0140               	movf	1+(??_efgtoa+2)+0,w
  8147  10CF  086F               	movlb 1	; select bank1
  8148  10D0  0141               	movwf	(_efgtoa$910+1)^080h
  8149  10D1  00B6               	goto	l4061
  8150  10D2  28E7               	
  8151                           l445:	
  8152  10D3                     	
  8153                           l4059:	
  8154  10D3                     	movf	(efgtoa@c)^080h,w
  8155  10D3  082E               	movlb 0	; select bank0
  8156  10D4  0140               	movwf	(??_efgtoa+0)+0
  8157  10D5  00EC               	clrf	(??_efgtoa+0)+0+1
  8158  10D6  01ED               	movf	0+(??_efgtoa+0)+0,w
  8159  10D7  086C               	movwf	(isupper@c)
  8160  10D8  00A0               	movf	1+(??_efgtoa+0)+0,w
  8161  10D9  086D               	movwf	(isupper@c+1)
  8162  10DA  00A1               	fcall	_isupper
  8163  10DB  31A1  21D3  3190   	movlb 0	; select bank0
  8164  10DE  0140               	movf	(1+(?_isupper)),w
  8165  10DF  0821               	movlb 1	; select bank1
  8166  10E0  0141               	movwf	(_efgtoa$910+1)^080h
  8167  10E1  00B6               	movlb 0	; select bank0
  8168  10E2  0140               	movf	(0+(?_isupper)),w
  8169  10E3  0820               	movlb 1	; select bank1
  8170  10E4  0141               	movwf	(_efgtoa$910)^080h
  8171  10E5  00B5               	goto	l4061
  8172  10E6  28E7               	
  8173                           l447:	
  8174  10E7                     	
  8175                           l4061:	
  8176  10E7                     	movf	((_efgtoa$910)^080h),w
  8177  10E7  0835               iorwf	((_efgtoa$910+1)^080h),w
  8178  10E8  0436               	btfsc	status,2
  8179  10E9  1903               	goto	u5541
  8180  10EA  28EC               	goto	u5540
  8181  10EB  28ED               u5541:
  8182  10EC                     	goto	l4065
  8183  10EC  28F9               u5540:
  8184  10ED                     	line	345
  8185                           	
  8186                           l4063:	
  8187  10ED                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 345:       
                                       strcpy(&dbuf[n], "INF");
  8188                           	movlw	low(((STR_8)|8000h))
  8189  10ED  30C6               	movlb 0	; select bank0
  8190  10EE  0140               	movwf	(strcpy@src)
  8191  10EF  00A0               	movlw	high(((STR_8)|8000h))
  8192  10F0  30A8               	movwf	((strcpy@src))+1
  8193  10F1  00A1               	movlb 1	; select bank1
  8194  10F2  0141               	movf	(efgtoa@n)^080h,w
  8195  10F3  0862               	addlw	low(_dbuf|((0x3)<<8))&0ffh
  8196  10F4  3E20               	fcall	_strcpy
  8197  10F5  31A2  22BE  3190   	line	346
  8198                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 346:       
                                   } else {
  8199                           	goto	l4067
  8200  10F8  2905               	
  8201                           l443:	
  8202  10F9                     	line	347
  8203                           	
  8204                           l4065:	
  8205  10F9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 347:       
                                       strcpy(&dbuf[n], "inf");
  8206                           	movlw	low(((STR_9)|8000h))
  8207  10F9  30CE               	movlb 0	; select bank0
  8208  10FA  0140               	movwf	(strcpy@src)
  8209  10FB  00A0               	movlw	high(((STR_9)|8000h))
  8210  10FC  30A8               	movwf	((strcpy@src))+1
  8211  10FD  00A1               	movlb 1	; select bank1
  8212  10FE  0141               	movf	(efgtoa@n)^080h,w
  8213  10FF  0862               	addlw	low(_dbuf|((0x3)<<8))&0ffh
  8214  1100  3E20               	fcall	_strcpy
  8215  1101  31A2  22BE  3190   	goto	l4067
  8216  1104  2905               	line	348
  8217                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 348:       
                                   }
  8218                           	
  8219                           l448:	
  8220  1105                     	line	349
  8221                           	
  8222                           l4067:	
  8223  1105                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 349:       
                                   w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  8224                           	movlw	0FDh
  8225  1105  30FD               	movlb 1	; select bank1
  8226  1106  0141               	addwf	(efgtoa@w)^080h,f
  8227  1107  07CF               	movlw	0FFh
  8228  1108  30FF               	addwfc	(efgtoa@w+1)^080h,f
  8229  1109  3DD0               	line	350
  8230                           	
  8231                           l4069:	
  8232  110A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 350:       
                                   return pad(fp, &dbuf[0], w);
  8233                           	movlw	(low(_dbuf|((0x3)<<8)))&0ffh
  8234  110A  3020               	movlb 0	; select bank0
  8235  110B  0140               	movwf	(??_efgtoa+0)+0
  8236  110C  00EC               	movf	(??_efgtoa+0)+0,w
  8237  110D  086C               	movwf	(pad@buf)
  8238  110E  00B0               	movlb 1	; select bank1
  8239  110F  0141               	movf	(efgtoa@w+1)^080h,w
  8240  1110  0850               	movlb 0	; select bank0
  8241  1111  0140               	movwf	(pad@p+1)
  8242  1112  00B2               	movlb 1	; select bank1
  8243  1113  0141               	movf	(efgtoa@w)^080h,w
  8244  1114  084F               	movlb 0	; select bank0
  8245  1115  0140               	movwf	(pad@p)
  8246  1116  00B1               	movlb 1	; select bank1
  8247  1117  0141               	movf	(efgtoa@fp)^080h,w
  8248  1118  084B               	fcall	_pad
  8249  1119  31A7  2736  3190   	movlb 0	; select bank0
  8250  111C  0140               	movf	(1+(?_pad)),w
  8251  111D  0831               	movlb 1	; select bank1
  8252  111E  0141               	movwf	(?_efgtoa+1)^080h
  8253  111F  00AB               	movlb 0	; select bank0
  8254  1120  0140               	movf	(0+(?_pad)),w
  8255  1121  0830               	movlb 1	; select bank1
  8256  1122  0141               	movwf	(?_efgtoa)^080h
  8257  1123  00AA               	goto	l449
  8258  1124  3187  2FC4         	
  8259                           l4071:	
  8260  00D1                     	goto	l449
  8261  00D1  2FC4               	line	351
  8262                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 351:     }

  8263                           	
  8264                           l442:	
  8265  00D2                     	line	352
  8266                           	
  8267                           l4073:	
  8268  00D2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 353:       
                                   if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8269                           	movlb 1	; select bank1
  8270  00D2  0141               	movf	(efgtoa@g+3)^080h,w
  8271  00D3  085F               	movlb 0	; select bank0
  8272  00D4  0140               	movwf	(___fpclassifyf@x+3)
  8273  00D5  00A3               	movlb 1	; select bank1
  8274  00D6  0141               	movf	(efgtoa@g+2)^080h,w
  8275  00D7  085E               	movlb 0	; select bank0
  8276  00D8  0140               	movwf	(___fpclassifyf@x+2)
  8277  00D9  00A2               	movlb 1	; select bank1
  8278  00DA  0141               	movf	(efgtoa@g+1)^080h,w
  8279  00DB  085D               	movlb 0	; select bank0
  8280  00DC  0140               	movwf	(___fpclassifyf@x+1)
  8281  00DD  00A1               	movlb 1	; select bank1
  8282  00DE  0141               	movf	(efgtoa@g)^080h,w
  8283  00DF  085C               	movlb 0	; select bank0
  8284  00E0  0140               	movwf	(___fpclassifyf@x)
  8285  00E1  00A0               
  8286                           	fcall	___fpclassifyf
  8287  00E2  3199  2197  3180   	movlb 0	; select bank0
  8288  00E5  0140               	movf	((0+(?___fpclassifyf))),w
  8289  00E6  0820               iorwf	((1+(?___fpclassifyf))),w
  8290  00E7  0421               	btfss	status,2
  8291  00E8  1D03               	goto	u5551
  8292  00E9  28EB               	goto	u5550
  8293  00EA  28EC               u5551:
  8294  00EB                     	goto	l4091
  8295  00EB  295D               u5550:
  8296  00EC                     	line	353
  8297                           	
  8298                           l4075:	
  8299  00EC                     	movlb 1	; select bank1
  8300  00EC  0141               	movf	(efgtoa@c)^080h,w
  8301  00ED  082E               	addlw	low(0FFBFh)
  8302  00EE  3EBF               	movlb 0	; select bank0
  8303  00EF  0140               	movwf	(??_efgtoa+0)+0
  8304  00F0  00EC               	movlw	high(0FFBFh)
  8305  00F1  30FF               	skipnc
  8306  00F2  1803               	movlw	(high(0FFBFh)+1)&0ffh
  8307  00F3  3000               	movwf	((??_efgtoa+0)+0)+1
  8308  00F4  00ED               	movlw	0
  8309  00F5  3000               	subwf	1+(??_efgtoa+0)+0,w
  8310  00F6  026D               	movlw	01Ah
  8311  00F7  301A               	skipnz
  8312  00F8  1903               	subwf	0+(??_efgtoa+0)+0,w
  8313  00F9  026C               	skipc
  8314  00FA  1C03               	goto	u5561
  8315  00FB  28FD               	goto	u5560
  8316  00FC  28FF               u5561:
  8317  00FD                     	movlw	1
  8318  00FD  3001               	goto	u5570
  8319  00FE  2900               u5560:
  8320  00FF                     	movlw	0
  8321  00FF  3000               u5570:
  8322  0100                     	movwf	(??_efgtoa+2)+0
  8323  0100  00EE               	clrf	(??_efgtoa+2)+0+1
  8324  0101  01EF               	movf	0+(??_efgtoa+2)+0,w
  8325  0102  086E               	movlb 1	; select bank1
  8326  0103  0141               	movwf	(_efgtoa$915)^080h
  8327  0104  00B7               	movlb 0	; select bank0
  8328  0105  0140               	movf	1+(??_efgtoa+2)+0,w
  8329  0106  086F               	movlb 1	; select bank1
  8330  0107  0141               	movwf	(_efgtoa$915+1)^080h
  8331  0108  00B8               	goto	l4079
  8332  0109  291E               	
  8333                           l453:	
  8334  010A                     	
  8335                           l4077:	
  8336  010A                     	movf	(efgtoa@c)^080h,w
  8337  010A  082E               	movlb 0	; select bank0
  8338  010B  0140               	movwf	(??_efgtoa+0)+0
  8339  010C  00EC               	clrf	(??_efgtoa+0)+0+1
  8340  010D  01ED               	movf	0+(??_efgtoa+0)+0,w
  8341  010E  086C               	movwf	(isupper@c)
  8342  010F  00A0               	movf	1+(??_efgtoa+0)+0,w
  8343  0110  086D               	movwf	(isupper@c+1)
  8344  0111  00A1               	fcall	_isupper
  8345  0112  31A1  21D3  3180   	movlb 0	; select bank0
  8346  0115  0140               	movf	(1+(?_isupper)),w
  8347  0116  0821               	movlb 1	; select bank1
  8348  0117  0141               	movwf	(_efgtoa$915+1)^080h
  8349  0118  00B8               	movlb 0	; select bank0
  8350  0119  0140               	movf	(0+(?_isupper)),w
  8351  011A  0820               	movlb 1	; select bank1
  8352  011B  0141               	movwf	(_efgtoa$915)^080h
  8353  011C  00B7               	goto	l4079
  8354  011D  291E               	
  8355                           l455:	
  8356  011E                     	
  8357                           l4079:	
  8358  011E                     	movf	((_efgtoa$915)^080h),w
  8359  011E  0837               iorwf	((_efgtoa$915+1)^080h),w
  8360  011F  0438               	btfsc	status,2
  8361  0120  1903               	goto	u5581
  8362  0121  2923               	goto	u5580
  8363  0122  2924               u5581:
  8364  0123                     	goto	l4083
  8365  0123  2930               u5580:
  8366  0124                     	line	354
  8367                           	
  8368                           l4081:	
  8369  0124                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 354:       
                                       strcpy(&dbuf[n], "NAN");
  8370                           	movlw	low(((STR_12)|8000h))
  8371  0124  30CA               	movlb 0	; select bank0
  8372  0125  0140               	movwf	(strcpy@src)
  8373  0126  00A0               	movlw	high(((STR_12)|8000h))
  8374  0127  30A8               	movwf	((strcpy@src))+1
  8375  0128  00A1               	movlb 1	; select bank1
  8376  0129  0141               	movf	(efgtoa@n)^080h,w
  8377  012A  0862               	addlw	low(_dbuf|((0x3)<<8))&0ffh
  8378  012B  3E20               	fcall	_strcpy
  8379  012C  31A2  22BE  3180   	line	355
  8380                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 355:       
                                   } else {
  8381                           	goto	l4085
  8382  012F  293C               	
  8383                           l451:	
  8384  0130                     	line	356
  8385                           	
  8386                           l4083:	
  8387  0130                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 356:       
                                       strcpy(&dbuf[n], "nan");
  8388                           	movlw	low(((STR_13)|8000h))
  8389  0130  30D2               	movlb 0	; select bank0
  8390  0131  0140               	movwf	(strcpy@src)
  8391  0132  00A0               	movlw	high(((STR_13)|8000h))
  8392  0133  30A8               	movwf	((strcpy@src))+1
  8393  0134  00A1               	movlb 1	; select bank1
  8394  0135  0141               	movf	(efgtoa@n)^080h,w
  8395  0136  0862               	addlw	low(_dbuf|((0x3)<<8))&0ffh
  8396  0137  3E20               	fcall	_strcpy
  8397  0138  31A2  22BE  3180   	goto	l4085
  8398  013B  293C               	line	357
  8399                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 357:       
                                   }
  8400                           	
  8401                           l456:	
  8402  013C                     	line	358
  8403                           	
  8404                           l4085:	
  8405  013C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 358:       
                                   w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  8406                           	movlw	0FDh
  8407  013C  30FD               	movlb 1	; select bank1
  8408  013D  0141               	addwf	(efgtoa@w)^080h,f
  8409  013E  07CF               	movlw	0FFh
  8410  013F  30FF               	addwfc	(efgtoa@w+1)^080h,f
  8411  0140  3DD0               	line	359
  8412                           	
  8413                           l4087:	
  8414  0141                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 359:       
                                   return pad(fp, &dbuf[0], w);
  8415                           	movlw	(low(_dbuf|((0x3)<<8)))&0ffh
  8416  0141  3020               	movlb 0	; select bank0
  8417  0142  0140               	movwf	(??_efgtoa+0)+0
  8418  0143  00EC               	movf	(??_efgtoa+0)+0,w
  8419  0144  086C               	movwf	(pad@buf)
  8420  0145  00B0               	movlb 1	; select bank1
  8421  0146  0141               	movf	(efgtoa@w+1)^080h,w
  8422  0147  0850               	movlb 0	; select bank0
  8423  0148  0140               	movwf	(pad@p+1)
  8424  0149  00B2               	movlb 1	; select bank1
  8425  014A  0141               	movf	(efgtoa@w)^080h,w
  8426  014B  084F               	movlb 0	; select bank0
  8427  014C  0140               	movwf	(pad@p)
  8428  014D  00B1               	movlb 1	; select bank1
  8429  014E  0141               	movf	(efgtoa@fp)^080h,w
  8430  014F  084B               	fcall	_pad
  8431  0150  31A7  2736  3180   	movlb 0	; select bank0
  8432  0153  0140               	movf	(1+(?_pad)),w
  8433  0154  0831               	movlb 1	; select bank1
  8434  0155  0141               	movwf	(?_efgtoa+1)^080h
  8435  0156  00AB               	movlb 0	; select bank0
  8436  0157  0140               	movf	(0+(?_pad)),w
  8437  0158  0830               	movlb 1	; select bank1
  8438  0159  0141               	movwf	(?_efgtoa)^080h
  8439  015A  00AA               	goto	l449
  8440  015B  2FC4               	
  8441                           l4089:	
  8442  015C                     	goto	l449
  8443  015C  2FC4               	line	360
  8444                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 360:     }

  8445                           	
  8446                           l450:	
  8447  015D                     	line	363
  8448                           	
  8449                           l4091:	
  8450  015D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 363:     u 
                                 = 1.0;
  8451                           	movlw	0x3f
  8452  015D  303F               	movlb 1	; select bank1
  8453  015E  0141               	movwf	(efgtoa@u+3)^080h
  8454  015F  00E7               	movlw	0x80
  8455  0160  3080               	movwf	(efgtoa@u+2)^080h
  8456  0161  00E6               	movlw	0x0
  8457  0162  3000               	movwf	(efgtoa@u+1)^080h
  8458  0163  00E5               	movlw	0x0
  8459  0164  3000               	movwf	(efgtoa@u)^080h
  8460  0165  00E4               
  8461                           	line	364
  8462                           	
  8463                           l4093:	
  8464  0166                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 364:     e 
                                 = 0;
  8465                           	clrf	(efgtoa@e)^080h
  8466  0166  01E0               	clrf	(efgtoa@e+1)^080h
  8467  0167  01E1               	line	365
  8468                           	
  8469                           l4095:	
  8470  0168                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 365:     if
                                  (!(g == 0.0)) {
  8471                           	movf	(efgtoa@g+3)^080h,w
  8472  0168  085F               	movlb 0	; select bank0
  8473  0169  0140               	movwf	(___fleq@ff1+3)
  8474  016A  00A3               	movlb 1	; select bank1
  8475  016B  0141               	movf	(efgtoa@g+2)^080h,w
  8476  016C  085E               	movlb 0	; select bank0
  8477  016D  0140               	movwf	(___fleq@ff1+2)
  8478  016E  00A2               	movlb 1	; select bank1
  8479  016F  0141               	movf	(efgtoa@g+1)^080h,w
  8480  0170  085D               	movlb 0	; select bank0
  8481  0171  0140               	movwf	(___fleq@ff1+1)
  8482  0172  00A1               	movlb 1	; select bank1
  8483  0173  0141               	movf	(efgtoa@g)^080h,w
  8484  0174  085C               	movlb 0	; select bank0
  8485  0175  0140               	movwf	(___fleq@ff1)
  8486  0176  00A0               
  8487                           	movlw	0x0
  8488  0177  3000               	movwf	(___fleq@ff2+3)
  8489  0178  00A7               	movlw	0x0
  8490  0179  3000               	movwf	(___fleq@ff2+2)
  8491  017A  00A6               	movlw	0x0
  8492  017B  3000               	movwf	(___fleq@ff2+1)
  8493  017C  00A5               	movlw	0x0
  8494  017D  3000               	movwf	(___fleq@ff2)
  8495  017E  00A4               
  8496                           	fcall	___fleq
  8497  017F  31A5  2578  3180   	btfsc	status,0
  8498  0182  1803               	goto	u5591
  8499  0183  2985               	goto	u5590
  8500  0184  2986               u5591:
  8501  0185                     	goto	l4111
  8502  0185  2A50               u5590:
  8503  0186                     	goto	l4103
  8504  0186  29B9               	line	366
  8505                           	
  8506                           l4097:	
  8507  0187                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 366:       
                                   while (!(g < (u*10.0))) {
  8508                           	goto	l4103
  8509  0187  29B9               	
  8510                           l459:	
  8511  0188                     	line	367
  8512                           	
  8513                           l4099:	
  8514  0188                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 367:       
                                       u = u*10.0;
  8515                           	movlw	0x41
  8516  0188  3041               	movlb 0	; select bank0
  8517  0189  0140               	movwf	(___flmul@b+3)
  8518  018A  00B1               	movlw	0x20
  8519  018B  3020               	movwf	(___flmul@b+2)
  8520  018C  00B0               	movlw	0x0
  8521  018D  3000               	movwf	(___flmul@b+1)
  8522  018E  00AF               	movlw	0x0
  8523  018F  3000               	movwf	(___flmul@b)
  8524  0190  00AE               
  8525                           	movlb 1	; select bank1
  8526  0191  0141               	movf	(efgtoa@u+3)^080h,w
  8527  0192  0867               	movlb 0	; select bank0
  8528  0193  0140               	movwf	(___flmul@a+3)
  8529  0194  00B5               	movlb 1	; select bank1
  8530  0195  0141               	movf	(efgtoa@u+2)^080h,w
  8531  0196  0866               	movlb 0	; select bank0
  8532  0197  0140               	movwf	(___flmul@a+2)
  8533  0198  00B4               	movlb 1	; select bank1
  8534  0199  0141               	movf	(efgtoa@u+1)^080h,w
  8535  019A  0865               	movlb 0	; select bank0
  8536  019B  0140               	movwf	(___flmul@a+1)
  8537  019C  00B3               	movlb 1	; select bank1
  8538  019D  0141               	movf	(efgtoa@u)^080h,w
  8539  019E  0864               	movlb 0	; select bank0
  8540  019F  0140               	movwf	(___flmul@a)
  8541  01A0  00B2               
  8542                           	fcall	___flmul
  8543  01A1  3195  2595  3180   	movlb 0	; select bank0
  8544  01A4  0140               	movf	(3+(?___flmul)),w
  8545  01A5  0831               	movlb 1	; select bank1
  8546  01A6  0141               	movwf	(efgtoa@u+3)^080h
  8547  01A7  00E7               	movlb 0	; select bank0
  8548  01A8  0140               	movf	(2+(?___flmul)),w
  8549  01A9  0830               	movlb 1	; select bank1
  8550  01AA  0141               	movwf	(efgtoa@u+2)^080h
  8551  01AB  00E6               	movlb 0	; select bank0
  8552  01AC  0140               	movf	(1+(?___flmul)),w
  8553  01AD  082F               	movlb 1	; select bank1
  8554  01AE  0141               	movwf	(efgtoa@u+1)^080h
  8555  01AF  00E5               	movlb 0	; select bank0
  8556  01B0  0140               	movf	(0+(?___flmul)),w
  8557  01B1  082E               	movlb 1	; select bank1
  8558  01B2  0141               	movwf	(efgtoa@u)^080h
  8559  01B3  00E4               
  8560                           	line	368
  8561                           	
  8562                           l4101:	
  8563  01B4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 368:       
                                       ++e;
  8564                           	movlw	01h
  8565  01B4  3001               	addwf	(efgtoa@e)^080h,f
  8566  01B5  07E0               	movlw	0
  8567  01B6  3000               	addwfc	(efgtoa@e+1)^080h,f
  8568  01B7  3DE1               	goto	l4103
  8569  01B8  29B9               	line	369
  8570                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 369:       
                                   }
  8571                           	
  8572                           l458:	
  8573  01B9                     	line	366
  8574                           	
  8575                           l4103:	
  8576  01B9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 366:       
                                   while (!(g < (u*10.0))) {
  8577                           	movlb 1	; select bank1
  8578  01B9  0141               	movf	(efgtoa@g+3)^080h,w
  8579  01BA  085F               	movlb 0	; select bank0
  8580  01BB  0140               	movwf	(___flge@ff1+3)
  8581  01BC  00CB               	movlb 1	; select bank1
  8582  01BD  0141               	movf	(efgtoa@g+2)^080h,w
  8583  01BE  085E               	movlb 0	; select bank0
  8584  01BF  0140               	movwf	(___flge@ff1+2)
  8585  01C0  00CA               	movlb 1	; select bank1
  8586  01C1  0141               	movf	(efgtoa@g+1)^080h,w
  8587  01C2  085D               	movlb 0	; select bank0
  8588  01C3  0140               	movwf	(___flge@ff1+1)
  8589  01C4  00C9               	movlb 1	; select bank1
  8590  01C5  0141               	movf	(efgtoa@g)^080h,w
  8591  01C6  085C               	movlb 0	; select bank0
  8592  01C7  0140               	movwf	(___flge@ff1)
  8593  01C8  00C8               
  8594                           	movlw	0x41
  8595  01C9  3041               	movwf	(___flmul@b+3)
  8596  01CA  00B1               	movlw	0x20
  8597  01CB  3020               	movwf	(___flmul@b+2)
  8598  01CC  00B0               	movlw	0x0
  8599  01CD  3000               	movwf	(___flmul@b+1)
  8600  01CE  00AF               	movlw	0x0
  8601  01CF  3000               	movwf	(___flmul@b)
  8602  01D0  00AE               
  8603                           	movlb 1	; select bank1
  8604  01D1  0141               	movf	(efgtoa@u+3)^080h,w
  8605  01D2  0867               	movlb 0	; select bank0
  8606  01D3  0140               	movwf	(___flmul@a+3)
  8607  01D4  00B5               	movlb 1	; select bank1
  8608  01D5  0141               	movf	(efgtoa@u+2)^080h,w
  8609  01D6  0866               	movlb 0	; select bank0
  8610  01D7  0140               	movwf	(___flmul@a+2)
  8611  01D8  00B4               	movlb 1	; select bank1
  8612  01D9  0141               	movf	(efgtoa@u+1)^080h,w
  8613  01DA  0865               	movlb 0	; select bank0
  8614  01DB  0140               	movwf	(___flmul@a+1)
  8615  01DC  00B3               	movlb 1	; select bank1
  8616  01DD  0141               	movf	(efgtoa@u)^080h,w
  8617  01DE  0864               	movlb 0	; select bank0
  8618  01DF  0140               	movwf	(___flmul@a)
  8619  01E0  00B2               
  8620                           	fcall	___flmul
  8621  01E1  3195  2595  3180   	movlb 0	; select bank0
  8622  01E4  0140               	movf	(3+(?___flmul)),w
  8623  01E5  0831               	movwf	(___flge@ff2+3)
  8624  01E6  00CF               	movf	(2+(?___flmul)),w
  8625  01E7  0830               	movwf	(___flge@ff2+2)
  8626  01E8  00CE               	movf	(1+(?___flmul)),w
  8627  01E9  082F               	movwf	(___flge@ff2+1)
  8628  01EA  00CD               	movf	(0+(?___flmul)),w
  8629  01EB  082E               	movwf	(___flge@ff2)
  8630  01EC  00CC               
  8631                           	fcall	___flge
  8632  01ED  319B  233A  3180   	btfsc	status,0
  8633  01F0  1803               	goto	u5601
  8634  01F1  29F3               	goto	u5600
  8635  01F2  29F4               u5601:
  8636  01F3                     	goto	l4099
  8637  01F3  2988               u5600:
  8638  01F4                     	goto	l4109
  8639  01F4  2A27               	
  8640                           l460:	
  8641  01F5                     	line	370
  8642                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 370:       
                                   while (g < u) {
  8643                           	goto	l4109
  8644  01F5  2A27               	
  8645                           l462:	
  8646  01F6                     	line	371
  8647                           	
  8648                           l4105:	
  8649  01F6                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 371:       
                                       u = u/10.0;
  8650                           	movlw	0x41
  8651  01F6  3041               	movlb 0	; select bank0
  8652  01F7  0140               	movwf	(___fldiv@a+3)
  8653  01F8  00CB               	movlw	0x20
  8654  01F9  3020               	movwf	(___fldiv@a+2)
  8655  01FA  00CA               	movlw	0x0
  8656  01FB  3000               	movwf	(___fldiv@a+1)
  8657  01FC  00C9               	movlw	0x0
  8658  01FD  3000               	movwf	(___fldiv@a)
  8659  01FE  00C8               
  8660                           	movlb 1	; select bank1
  8661  01FF  0141               	movf	(efgtoa@u+3)^080h,w
  8662  0200  0867               	movlb 0	; select bank0
  8663  0201  0140               	movwf	(___fldiv@b+3)
  8664  0202  00CF               	movlb 1	; select bank1
  8665  0203  0141               	movf	(efgtoa@u+2)^080h,w
  8666  0204  0866               	movlb 0	; select bank0
  8667  0205  0140               	movwf	(___fldiv@b+2)
  8668  0206  00CE               	movlb 1	; select bank1
  8669  0207  0141               	movf	(efgtoa@u+1)^080h,w
  8670  0208  0865               	movlb 0	; select bank0
  8671  0209  0140               	movwf	(___fldiv@b+1)
  8672  020A  00CD               	movlb 1	; select bank1
  8673  020B  0141               	movf	(efgtoa@u)^080h,w
  8674  020C  0864               	movlb 0	; select bank0
  8675  020D  0140               	movwf	(___fldiv@b)
  8676  020E  00CC               
  8677                           	fcall	___fldiv
  8678  020F  3193  23B6  3180   	movlb 0	; select bank0
  8679  0212  0140               	movf	(3+(?___fldiv)),w
  8680  0213  084B               	movlb 1	; select bank1
  8681  0214  0141               	movwf	(efgtoa@u+3)^080h
  8682  0215  00E7               	movlb 0	; select bank0
  8683  0216  0140               	movf	(2+(?___fldiv)),w
  8684  0217  084A               	movlb 1	; select bank1
  8685  0218  0141               	movwf	(efgtoa@u+2)^080h
  8686  0219  00E6               	movlb 0	; select bank0
  8687  021A  0140               	movf	(1+(?___fldiv)),w
  8688  021B  0849               	movlb 1	; select bank1
  8689  021C  0141               	movwf	(efgtoa@u+1)^080h
  8690  021D  00E5               	movlb 0	; select bank0
  8691  021E  0140               	movf	(0+(?___fldiv)),w
  8692  021F  0848               	movlb 1	; select bank1
  8693  0220  0141               	movwf	(efgtoa@u)^080h
  8694  0221  00E4               
  8695                           	line	372
  8696                           	
  8697                           l4107:	
  8698  0222                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 372:       
                                       --e;
  8699                           	movlw	0FFh
  8700  0222  30FF               	addwf	(efgtoa@e)^080h,f
  8701  0223  07E0               	movlw	0FFh
  8702  0224  30FF               	addwfc	(efgtoa@e+1)^080h,f
  8703  0225  3DE1               	goto	l4109
  8704  0226  2A27               	line	373
  8705                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 373:       
                                   }
  8706                           	
  8707                           l461:	
  8708  0227                     	line	370
  8709                           	
  8710                           l4109:	
  8711  0227                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 370:       
                                   while (g < u) {
  8712                           	movlb 1	; select bank1
  8713  0227  0141               	movf	(efgtoa@g+3)^080h,w
  8714  0228  085F               	movlb 0	; select bank0
  8715  0229  0140               	movwf	(___flge@ff1+3)
  8716  022A  00CB               	movlb 1	; select bank1
  8717  022B  0141               	movf	(efgtoa@g+2)^080h,w
  8718  022C  085E               	movlb 0	; select bank0
  8719  022D  0140               	movwf	(___flge@ff1+2)
  8720  022E  00CA               	movlb 1	; select bank1
  8721  022F  0141               	movf	(efgtoa@g+1)^080h,w
  8722  0230  085D               	movlb 0	; select bank0
  8723  0231  0140               	movwf	(___flge@ff1+1)
  8724  0232  00C9               	movlb 1	; select bank1
  8725  0233  0141               	movf	(efgtoa@g)^080h,w
  8726  0234  085C               	movlb 0	; select bank0
  8727  0235  0140               	movwf	(___flge@ff1)
  8728  0236  00C8               
  8729                           	movlb 1	; select bank1
  8730  0237  0141               	movf	(efgtoa@u+3)^080h,w
  8731  0238  0867               	movlb 0	; select bank0
  8732  0239  0140               	movwf	(___flge@ff2+3)
  8733  023A  00CF               	movlb 1	; select bank1
  8734  023B  0141               	movf	(efgtoa@u+2)^080h,w
  8735  023C  0866               	movlb 0	; select bank0
  8736  023D  0140               	movwf	(___flge@ff2+2)
  8737  023E  00CE               	movlb 1	; select bank1
  8738  023F  0141               	movf	(efgtoa@u+1)^080h,w
  8739  0240  0865               	movlb 0	; select bank0
  8740  0241  0140               	movwf	(___flge@ff2+1)
  8741  0242  00CD               	movlb 1	; select bank1
  8742  0243  0141               	movf	(efgtoa@u)^080h,w
  8743  0244  0864               	movlb 0	; select bank0
  8744  0245  0140               	movwf	(___flge@ff2)
  8745  0246  00CC               
  8746                           	fcall	___flge
  8747  0247  319B  233A  3180   	btfss	status,0
  8748  024A  1C03               	goto	u5611
  8749  024B  2A4D               	goto	u5610
  8750  024C  2A4E               u5611:
  8751  024D                     	goto	l4105
  8752  024D  29F6               u5610:
  8753  024E                     	goto	l4111
  8754  024E  2A50               	
  8755                           l463:	
  8756  024F                     	goto	l4111
  8757  024F  2A50               	line	374
  8758                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 374:     }

  8759                           	
  8760                           l457:	
  8761  0250                     	line	377
  8762                           	
  8763                           l4111:	
  8764  0250                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 377:     mo
                                 de = tolower((int)c);
  8765                           	movlb 1	; select bank1
  8766  0250  0141               	movf	(efgtoa@c)^080h,w
  8767  0251  082E               	movlb 0	; select bank0
  8768  0252  0140               	movwf	(??_efgtoa+0)+0
  8769  0253  00EC               	clrf	(??_efgtoa+0)+0+1
  8770  0254  01ED               	movf	0+(??_efgtoa+0)+0,w
  8771  0255  086C               	movwf	(tolower@c)
  8772  0256  00A6               	movf	1+(??_efgtoa+0)+0,w
  8773  0257  086D               	movwf	(tolower@c+1)
  8774  0258  00A7               	fcall	_tolower
  8775  0259  31A3  23B8  3180   	movlb 0	; select bank0
  8776  025C  0140               	movf	(0+(?_tolower)),w
  8777  025D  0826               	movwf	(??_efgtoa+2)+0
  8778  025E  00EE               	movf	(??_efgtoa+2)+0,w
  8779  025F  086E               	movlb 1	; select bank1
  8780  0260  0141               	movwf	(efgtoa@mode)^080h
  8781  0261  00D1               	line	378
  8782                           	
  8783                           l4113:	
  8784  0262                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 378:     nm
                                 ode = mode;
  8785                           	movf	(efgtoa@mode)^080h,w
  8786  0262  0851               	movlb 0	; select bank0
  8787  0263  0140               	movwf	(??_efgtoa+0)+0
  8788  0264  00EC               	movf	(??_efgtoa+0)+0,w
  8789  0265  086C               	movlb 1	; select bank1
  8790  0266  0141               	movwf	(efgtoa@nmode)^080h
  8791  0267  00CE               	line	379
  8792                           	
  8793                           l4115:	
  8794  0268                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 379:     if
                                  (mode == 'g') {
  8795                           		movlw	103
  8796  0268  3067               	xorwf	((efgtoa@mode)^080h),w
  8797  0269  0651               	btfss	status,2
  8798  026A  1D03               	goto	u5621
  8799  026B  2A6D               	goto	u5620
  8800  026C  2A6E               u5621:
  8801  026D                     	goto	l464
  8802  026D  2A98               u5620:
  8803  026E                     	line	380
  8804                           	
  8805                           l4117:	
  8806  026E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 380:   if (
                                 prec == 0) {
  8807                           	movlb 2	; select bank2
  8808  026E  0142               	movf	((_prec)^0100h),w
  8809  026F  0868               iorwf	((_prec+1)^0100h),w
  8810  0270  0469               	btfss	status,2
  8811  0271  1D03               	goto	u5631
  8812  0272  2A74               	goto	u5630
  8813  0273  2A75               u5631:
  8814  0274                     	goto	l465
  8815  0274  2A79               u5630:
  8816  0275                     	line	381
  8817                           	
  8818                           l4119:	
  8819  0275                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 381:    pre
                                 c = 1;
  8820                           	movlw	01h
  8821  0275  3001               	movwf	(_prec)^0100h
  8822  0276  00E8               	movlw	0
  8823  0277  3000               	movwf	((_prec)^0100h)+1
  8824  0278  00E9               	line	382
  8825                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 382:   }
  8826                           	
  8827                           l465:	
  8828  0279                     	line	383
  8829                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 383:       
                                   p = (0 < prec) ? prec : 6;
  8830                           	movf	(_prec+1)^0100h,w
  8831  0279  0869               	xorlw	80h
  8832  027A  3A80               	movlb 0	; select bank0
  8833  027B  0140               	movwf	(??_efgtoa+0)+0
  8834  027C  00EC               	movlw	(0)^80h
  8835  027D  3080               	subwf	(??_efgtoa+0)+0,w
  8836  027E  026C               	skipz
  8837  027F  1D03               	goto	u5645
  8838  0280  2A84               	movlw	01h
  8839  0281  3001               	movlb 2	; select bank2
  8840  0282  0142               	subwf	(_prec)^0100h,w
  8841  0283  0268               u5645:
  8842  0284                     
  8843                           	skipnc
  8844  0284  1803               	goto	u5641
  8845  0285  2A87               	goto	u5640
  8846  0286  2A88               u5641:
  8847  0287                     	goto	l4123
  8848  0287  2A8E               u5640:
  8849  0288                     	
  8850                           l4121:	
  8851  0288                     	movlw	06h
  8852  0288  3006               	movlb 1	; select bank1
  8853  0289  0141               	movwf	(efgtoa@p)^080h
  8854  028A  00CC               	movlw	0
  8855  028B  3000               	movwf	((efgtoa@p)^080h)+1
  8856  028C  00CD               	goto	l4129
  8857  028D  2AAC               	
  8858                           l467:	
  8859  028E                     	
  8860                           l4123:	
  8861  028E                     	movlb 2	; select bank2
  8862  028E  0142               	movf	(_prec+1)^0100h,w
  8863  028F  0869               	movlb 1	; select bank1
  8864  0290  0141               	movwf	(efgtoa@p+1)^080h
  8865  0291  00CD               	movlb 2	; select bank2
  8866  0292  0142               	movf	(_prec)^0100h,w
  8867  0293  0868               	movlb 1	; select bank1
  8868  0294  0141               	movwf	(efgtoa@p)^080h
  8869  0295  00CC               	goto	l4129
  8870  0296  2AAC               	
  8871                           l469:	
  8872  0297                     	line	384
  8873                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 384:     } 
                                 else {
  8874                           	goto	l4129
  8875  0297  2AAC               	
  8876                           l464:	
  8877  0298                     	line	385
  8878                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 385:       
                                   p = (prec < 0) ? 6 : prec;
  8879                           	movlb 2	; select bank2
  8880  0298  0142               	btfsc	(_prec+1)^0100h,7
  8881  0299  1BE9               	goto	u5651
  8882  029A  2A9C               	goto	u5650
  8883  029B  2A9D               u5651:
  8884  029C                     	goto	l4127
  8885  029C  2AA5               u5650:
  8886  029D                     	
  8887                           l4125:	
  8888  029D                     	movf	(_prec+1)^0100h,w
  8889  029D  0869               	movlb 1	; select bank1
  8890  029E  0141               	movwf	(efgtoa@p+1)^080h
  8891  029F  00CD               	movlb 2	; select bank2
  8892  02A0  0142               	movf	(_prec)^0100h,w
  8893  02A1  0868               	movlb 1	; select bank1
  8894  02A2  0141               	movwf	(efgtoa@p)^080h
  8895  02A3  00CC               	goto	l4129
  8896  02A4  2AAC               	
  8897                           l472:	
  8898  02A5                     	
  8899                           l4127:	
  8900  02A5                     	movlw	06h
  8901  02A5  3006               	movlb 1	; select bank1
  8902  02A6  0141               	movwf	(efgtoa@p)^080h
  8903  02A7  00CC               	movlw	0
  8904  02A8  3000               	movwf	((efgtoa@p)^080h)+1
  8905  02A9  00CD               	goto	l4129
  8906  02AA  2AAC               	
  8907                           l474:	
  8908  02AB                     	goto	l4129
  8909  02AB  2AAC               	line	386
  8910                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 386:     }

  8911                           	
  8912                           l470:	
  8913  02AC                     	line	389
  8914                           	
  8915                           l4129:	
  8916  02AC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 389:     if
                                  (mode == 'g') {
  8917                           		movlw	103
  8918  02AC  3067               	xorwf	((efgtoa@mode)^080h),w
  8919  02AD  0651               	btfss	status,2
  8920  02AE  1D03               	goto	u5661
  8921  02AF  2AB1               	goto	u5660
  8922  02B0  2AB2               u5661:
  8923  02B1                     	goto	l475
  8924  02B1  2AEB               u5660:
  8925  02B2                     	line	390
  8926                           	
  8927                           l4131:	
  8928  02B2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 390:       
                                   if (!(e < -4) && !((p - 1) < e)) {
  8929                           	movf	(efgtoa@e+1)^080h,w
  8930  02B2  0861               	xorlw	80h
  8931  02B3  3A80               	movlb 0	; select bank0
  8932  02B4  0140               	movwf	(??_efgtoa+0)+0
  8933  02B5  00EC               	movlw	(0FFh)^80h
  8934  02B6  307F               	subwf	(??_efgtoa+0)+0,w
  8935  02B7  026C               	skipz
  8936  02B8  1D03               	goto	u5675
  8937  02B9  2ABD               	movlw	0FCh
  8938  02BA  30FC               	movlb 1	; select bank1
  8939  02BB  0141               	subwf	(efgtoa@e)^080h,w
  8940  02BC  0260               u5675:
  8941  02BD                     
  8942                           	skipc
  8943  02BD  1C03               	goto	u5671
  8944  02BE  2AC0               	goto	u5670
  8945  02BF  2AC1               u5671:
  8946  02C0                     	goto	l4137
  8947  02C0  2AE4               u5670:
  8948  02C1                     	
  8949                           l4133:	
  8950  02C1                     	movlb 1	; select bank1
  8951  02C1  0141               	movf	(efgtoa@p)^080h,w
  8952  02C2  084C               	addlw	0FFh
  8953  02C3  3EFF               	movlb 0	; select bank0
  8954  02C4  0140               	movwf	(??_efgtoa+0)+0
  8955  02C5  00EC               	movlw	0FFh
  8956  02C6  30FF               	movlb 1	; select bank1
  8957  02C7  0141               	addwfc	(efgtoa@p+1)^080h,w
  8958  02C8  3D4D               	movlb 0	; select bank0
  8959  02C9  0140               	movwf	1+(??_efgtoa+0)+0
  8960  02CA  00ED               	movf	1+(??_efgtoa+0)+0,w
  8961  02CB  086D               	xorlw	80h
  8962  02CC  3A80               	movwf	(??_efgtoa+2)+0
  8963  02CD  00EE               	movlb 1	; select bank1
  8964  02CE  0141               	movf	(efgtoa@e+1)^080h,w
  8965  02CF  0861               	xorlw	80h
  8966  02D0  3A80               	movlb 0	; select bank0
  8967  02D1  0140               	subwf	(??_efgtoa+2)+0,w
  8968  02D2  026E               	skipz
  8969  02D3  1D03               	goto	u5685
  8970  02D4  2AD9               	movlb 1	; select bank1
  8971  02D5  0141               	movf	(efgtoa@e)^080h,w
  8972  02D6  0860               	movlb 0	; select bank0
  8973  02D7  0140               	subwf	0+(??_efgtoa+0)+0,w
  8974  02D8  026C               u5685:
  8975  02D9                     
  8976                           	skipc
  8977  02D9  1C03               	goto	u5681
  8978  02DA  2ADC               	goto	u5680
  8979  02DB  2ADD               u5681:
  8980  02DC                     	goto	l4137
  8981  02DC  2AE4               u5680:
  8982  02DD                     	line	391
  8983                           	
  8984                           l4135:	
  8985  02DD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 391:       
                                       nmode = 'f';
  8986                           	movlw	low(066h)
  8987  02DD  3066               	movlb 0	; select bank0
  8988  02DE  0140               	movwf	(??_efgtoa+0)+0
  8989  02DF  00EC               	movf	(??_efgtoa+0)+0,w
  8990  02E0  086C               	movlb 1	; select bank1
  8991  02E1  0141               	movwf	(efgtoa@nmode)^080h
  8992  02E2  00CE               	line	392
  8993                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 392:       
                                   } else {
  8994                           	goto	l475
  8995  02E3  2AEB               	
  8996                           l476:	
  8997  02E4                     	line	393
  8998                           	
  8999                           l4137:	
  9000  02E4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 393:       
                                       nmode = 'e';
  9001                           	movlw	low(065h)
  9002  02E4  3065               	movlb 0	; select bank0
  9003  02E5  0140               	movwf	(??_efgtoa+0)+0
  9004  02E6  00EC               	movf	(??_efgtoa+0)+0,w
  9005  02E7  086C               	movlb 1	; select bank1
  9006  02E8  0141               	movwf	(efgtoa@nmode)^080h
  9007  02E9  00CE               	goto	l475
  9008  02EA  2AEB               	line	394
  9009                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 394:       
                                   }
  9010                           	
  9011                           l477:	
  9012  02EB                     	line	395
  9013                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 395:     }

  9014                           	
  9015                           l475:	
  9016  02EB                     	line	398
  9017                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 398:     m 
                                 = p;
  9018                           	movf	(efgtoa@p+1)^080h,w
  9019  02EB  084D               	movwf	(efgtoa@m+1)^080h
  9020  02EC  00C4               	movf	(efgtoa@p)^080h,w
  9021  02ED  084C               	movwf	(efgtoa@m)^080h
  9022  02EE  00C3               	line	399
  9023                           	
  9024                           l4139:	
  9025  02EF                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 399:     if
                                  (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  9026                           		movlw	103
  9027  02EF  3067               	xorwf	((efgtoa@mode)^080h),w
  9028  02F0  0651               	btfss	status,2
  9029  02F1  1D03               	goto	u5691
  9030  02F2  2AF4               	goto	u5690
  9031  02F3  2AF5               u5691:
  9032  02F4                     	goto	l4145
  9033  02F4  2B00               u5690:
  9034  02F5                     	
  9035                           l4141:	
  9036  02F5                     		movlw	102
  9037  02F5  3066               	xorwf	((efgtoa@nmode)^080h),w
  9038  02F6  064E               	btfss	status,2
  9039  02F7  1D03               	goto	u5701
  9040  02F8  2AFA               	goto	u5700
  9041  02F9  2AFB               u5701:
  9042  02FA                     	goto	l4147
  9043  02FA  2B05               u5700:
  9044  02FB                     	
  9045                           l4143:	
  9046  02FB                     	btfss	(efgtoa@e+1)^080h,7
  9047  02FB  1FE1               	goto	u5711
  9048  02FC  2AFE               	goto	u5710
  9049  02FD  2AFF               u5711:
  9050  02FE                     	goto	l4147
  9051  02FE  2B05               u5710:
  9052  02FF                     	goto	l4145
  9053  02FF  2B00               	
  9054                           l480:	
  9055  0300                     	line	400
  9056                           	
  9057                           l4145:	
  9058  0300                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 400:       
                                   ++m;
  9059                           	movlw	01h
  9060  0300  3001               	addwf	(efgtoa@m)^080h,f
  9061  0301  07C3               	movlw	0
  9062  0302  3000               	addwfc	(efgtoa@m+1)^080h,f
  9063  0303  3DC4               	goto	l4147
  9064  0304  2B05               	line	401
  9065                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 401:     }

  9066                           	
  9067                           l478:	
  9068  0305                     	line	404
  9069                           	
  9070                           l4147:	
  9071  0305                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 404:     if
                                  (nmode == 'f') {
  9072                           		movlw	102
  9073  0305  3066               	xorwf	((efgtoa@nmode)^080h),w
  9074  0306  064E               	btfss	status,2
  9075  0307  1D03               	goto	u5721
  9076  0308  2B0A               	goto	u5720
  9077  0309  2B0B               u5721:
  9078  030A                     	goto	l4159
  9079  030A  2B26               u5720:
  9080  030B                     	line	405
  9081                           	
  9082                           l4149:	
  9083  030B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 405:       
                                   if (e < 0) {
  9084                           	btfss	(efgtoa@e+1)^080h,7
  9085  030B  1FE1               	goto	u5731
  9086  030C  2B0E               	goto	u5730
  9087  030D  2B0F               u5731:
  9088  030E                     	goto	l4155
  9089  030E  2B1A               u5730:
  9090  030F                     	line	406
  9091                           	
  9092                           l4151:	
  9093  030F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 406:       
                                       u = 1.0;
  9094                           	movlw	0x3f
  9095  030F  303F               	movwf	(efgtoa@u+3)^080h
  9096  0310  00E7               	movlw	0x80
  9097  0311  3080               	movwf	(efgtoa@u+2)^080h
  9098  0312  00E6               	movlw	0x0
  9099  0313  3000               	movwf	(efgtoa@u+1)^080h
  9100  0314  00E5               	movlw	0x0
  9101  0315  3000               	movwf	(efgtoa@u)^080h
  9102  0316  00E4               
  9103                           	line	407
  9104                           	
  9105                           l4153:	
  9106  0317                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 407:       
                                       e = 0;
  9107                           	clrf	(efgtoa@e)^080h
  9108  0317  01E0               	clrf	(efgtoa@e+1)^080h
  9109  0318  01E1               	goto	l4155
  9110  0319  2B1A               	line	408
  9111                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 408:       
                                   }
  9112                           	
  9113                           l482:	
  9114  031A                     	line	409
  9115                           	
  9116                           l4155:	
  9117  031A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 409:       
                                   if (!(mode == 'g')) {
  9118                           		movlw	103
  9119  031A  3067               	xorwf	((efgtoa@mode)^080h),w
  9120  031B  0651               	btfsc	status,2
  9121  031C  1903               	goto	u5741
  9122  031D  2B1F               	goto	u5740
  9123  031E  2B20               u5741:
  9124  031F                     	goto	l4159
  9125  031F  2B26               u5740:
  9126  0320                     	line	410
  9127                           	
  9128                           l4157:	
  9129  0320                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 410:       
                                       m += e;
  9130                           	movf	(efgtoa@e)^080h,w
  9131  0320  0860               	addwf	(efgtoa@m)^080h,f
  9132  0321  07C3               	movf	(efgtoa@e+1)^080h,w
  9133  0322  0861               	addwfc	(efgtoa@m+1)^080h,f
  9134  0323  3DC4               	goto	l4159
  9135  0324  2B26               	line	411
  9136                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 411:       
                                   }
  9137                           	
  9138                           l483:	
  9139  0325                     	goto	l4159
  9140  0325  2B26               	line	412
  9141                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 412:     }

  9142                           	
  9143                           l481:	
  9144  0326                     	line	415
  9145                           	
  9146                           l4159:	
  9147  0326                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 415:     i 
                                 = 0;
  9148                           	clrf	(efgtoa@i)^080h
  9149  0326  01DA               	clrf	(efgtoa@i+1)^080h
  9150  0327  01DB               	line	416
  9151                           	
  9152                           l4161:	
  9153  0328                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 416:     h 
                                 = g;
  9154                           	movf	(efgtoa@g+3)^080h,w
  9155  0328  085F               	movwf	(efgtoa@h+3)^080h
  9156  0329  00D5               	movf	(efgtoa@g+2)^080h,w
  9157  032A  085E               	movwf	(efgtoa@h+2)^080h
  9158  032B  00D4               	movf	(efgtoa@g+1)^080h,w
  9159  032C  085D               	movwf	(efgtoa@h+1)^080h
  9160  032D  00D3               	movf	(efgtoa@g)^080h,w
  9161  032E  085C               	movwf	(efgtoa@h)^080h
  9162  032F  00D2               
  9163                           	line	417
  9164                           	
  9165                           l4163:	
  9166  0330                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 417:     ou
                                  = u;
  9167                           	movf	(efgtoa@u+3)^080h,w
  9168  0330  0867               	movwf	(efgtoa@ou+3)^080h
  9169  0331  00B2               	movf	(efgtoa@u+2)^080h,w
  9170  0332  0866               	movwf	(efgtoa@ou+2)^080h
  9171  0333  00B1               	movf	(efgtoa@u+1)^080h,w
  9172  0334  0865               	movwf	(efgtoa@ou+1)^080h
  9173  0335  00B0               	movf	(efgtoa@u)^080h,w
  9174  0336  0864               	movwf	(efgtoa@ou)^080h
  9175  0337  00AF               
  9176                           	line	418
  9177                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 418:     wh
                                 ile (i < m) {
  9178                           	goto	l4169
  9179  0338  2C11               	
  9180                           l485:	
  9181  0339                     	line	419
  9182                           	
  9183                           l4165:	
  9184  0339                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 419:       
                                   l = floorf(h/u);
  9185                           	movlb 1	; select bank1
  9186  0339  0141               	movf	(efgtoa@u+3)^080h,w
  9187  033A  0867               	movlb 0	; select bank0
  9188  033B  0140               	movwf	(___fldiv@a+3)
  9189  033C  00CB               	movlb 1	; select bank1
  9190  033D  0141               	movf	(efgtoa@u+2)^080h,w
  9191  033E  0866               	movlb 0	; select bank0
  9192  033F  0140               	movwf	(___fldiv@a+2)
  9193  0340  00CA               	movlb 1	; select bank1
  9194  0341  0141               	movf	(efgtoa@u+1)^080h,w
  9195  0342  0865               	movlb 0	; select bank0
  9196  0343  0140               	movwf	(___fldiv@a+1)
  9197  0344  00C9               	movlb 1	; select bank1
  9198  0345  0141               	movf	(efgtoa@u)^080h,w
  9199  0346  0864               	movlb 0	; select bank0
  9200  0347  0140               	movwf	(___fldiv@a)
  9201  0348  00C8               
  9202                           	movlb 1	; select bank1
  9203  0349  0141               	movf	(efgtoa@h+3)^080h,w
  9204  034A  0855               	movlb 0	; select bank0
  9205  034B  0140               	movwf	(___fldiv@b+3)
  9206  034C  00CF               	movlb 1	; select bank1
  9207  034D  0141               	movf	(efgtoa@h+2)^080h,w
  9208  034E  0854               	movlb 0	; select bank0
  9209  034F  0140               	movwf	(___fldiv@b+2)
  9210  0350  00CE               	movlb 1	; select bank1
  9211  0351  0141               	movf	(efgtoa@h+1)^080h,w
  9212  0352  0853               	movlb 0	; select bank0
  9213  0353  0140               	movwf	(___fldiv@b+1)
  9214  0354  00CD               	movlb 1	; select bank1
  9215  0355  0141               	movf	(efgtoa@h)^080h,w
  9216  0356  0852               	movlb 0	; select bank0
  9217  0357  0140               	movwf	(___fldiv@b)
  9218  0358  00CC               
  9219                           	fcall	___fldiv
  9220  0359  3193  23B6  3180   	movlb 0	; select bank0
  9221  035C  0140               	movf	(3+(?___fldiv)),w
  9222  035D  084B               	movwf	(floorf@x+3)
  9223  035E  00E5               	movf	(2+(?___fldiv)),w
  9224  035F  084A               	movwf	(floorf@x+2)
  9225  0360  00E4               	movf	(1+(?___fldiv)),w
  9226  0361  0849               	movwf	(floorf@x+1)
  9227  0362  00E3               	movf	(0+(?___fldiv)),w
  9228  0363  0848               	movwf	(floorf@x)
  9229  0364  00E2               
  9230                           	fcall	_floorf
  9231  0365  3191  2126  3180   	movlb 0	; select bank0
  9232  0368  0140               	movf	(3+(?_floorf)),w
  9233  0369  0865               	movlb 1	; select bank1
  9234  036A  0141               	movwf	(efgtoa@l+3)^080h
  9235  036B  00D9               	movlb 0	; select bank0
  9236  036C  0140               	movf	(2+(?_floorf)),w
  9237  036D  0864               	movlb 1	; select bank1
  9238  036E  0141               	movwf	(efgtoa@l+2)^080h
  9239  036F  00D8               	movlb 0	; select bank0
  9240  0370  0140               	movf	(1+(?_floorf)),w
  9241  0371  0863               	movlb 1	; select bank1
  9242  0372  0141               	movwf	(efgtoa@l+1)^080h
  9243  0373  00D7               	movlb 0	; select bank0
  9244  0374  0140               	movf	(0+(?_floorf)),w
  9245  0375  0862               	movlb 1	; select bank1
  9246  0376  0141               	movwf	(efgtoa@l)^080h
  9247  0377  00D6               
  9248                           	line	420
  9249                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 420:       
                                   d = (int)l;
  9250                           	movf	(efgtoa@l+3)^080h,w
  9251  0378  0859               	movlb 0	; select bank0
  9252  0379  0140               	movwf	(___fltol@f1+3)
  9253  037A  00A3               	movlb 1	; select bank1
  9254  037B  0141               	movf	(efgtoa@l+2)^080h,w
  9255  037C  0858               	movlb 0	; select bank0
  9256  037D  0140               	movwf	(___fltol@f1+2)
  9257  037E  00A2               	movlb 1	; select bank1
  9258  037F  0141               	movf	(efgtoa@l+1)^080h,w
  9259  0380  0857               	movlb 0	; select bank0
  9260  0381  0140               	movwf	(___fltol@f1+1)
  9261  0382  00A1               	movlb 1	; select bank1
  9262  0383  0141               	movf	(efgtoa@l)^080h,w
  9263  0384  0856               	movlb 0	; select bank0
  9264  0385  0140               	movwf	(___fltol@f1)
  9265  0386  00A0               
  9266                           	fcall	___fltol
  9267  0387  319A  22A5  3180   	movlb 0	; select bank0
  9268  038A  0140               	movf	(1+(?___fltol)),w
  9269  038B  0821               	movlb 1	; select bank1
  9270  038C  0141               	movwf	(efgtoa@d+1)^080h
  9271  038D  00C8               	movlb 0	; select bank0
  9272  038E  0140               	movf	(0+(?___fltol)),w
  9273  038F  0820               	movlb 1	; select bank1
  9274  0390  0141               	movwf	(efgtoa@d)^080h
  9275  0391  00C7               	line	421
  9276                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 421:       
                                   h -= l*u;
  9277                           	movf	(efgtoa@l+3)^080h,w
  9278  0392  0859               	movlb 0	; select bank0
  9279  0393  0140               	movwf	(___flmul@a+3)
  9280  0394  00B5               	movlb 1	; select bank1
  9281  0395  0141               	movf	(efgtoa@l+2)^080h,w
  9282  0396  0858               	movlb 0	; select bank0
  9283  0397  0140               	movwf	(___flmul@a+2)
  9284  0398  00B4               	movlb 1	; select bank1
  9285  0399  0141               	movf	(efgtoa@l+1)^080h,w
  9286  039A  0857               	movlb 0	; select bank0
  9287  039B  0140               	movwf	(___flmul@a+1)
  9288  039C  00B3               	movlb 1	; select bank1
  9289  039D  0141               	movf	(efgtoa@l)^080h,w
  9290  039E  0856               	movlb 0	; select bank0
  9291  039F  0140               	movwf	(___flmul@a)
  9292  03A0  00B2               
  9293                           	movlb 1	; select bank1
  9294  03A1  0141               	movf	(efgtoa@u+3)^080h,w
  9295  03A2  0867               	movlb 0	; select bank0
  9296  03A3  0140               	movwf	(___flmul@b+3)
  9297  03A4  00B1               	movlb 1	; select bank1
  9298  03A5  0141               	movf	(efgtoa@u+2)^080h,w
  9299  03A6  0866               	movlb 0	; select bank0
  9300  03A7  0140               	movwf	(___flmul@b+2)
  9301  03A8  00B0               	movlb 1	; select bank1
  9302  03A9  0141               	movf	(efgtoa@u+1)^080h,w
  9303  03AA  0865               	movlb 0	; select bank0
  9304  03AB  0140               	movwf	(___flmul@b+1)
  9305  03AC  00AF               	movlb 1	; select bank1
  9306  03AD  0141               	movf	(efgtoa@u)^080h,w
  9307  03AE  0864               	movlb 0	; select bank0
  9308  03AF  0140               	movwf	(___flmul@b)
  9309  03B0  00AE               
  9310                           	fcall	___flmul
  9311  03B1  3195  2595  3180   	movlb 0	; select bank0
  9312  03B4  0140               	movf	(3+(?___flmul)),w
  9313  03B5  0831               	movwf	(___flsub@a+3)
  9314  03B6  00E3               	movf	(2+(?___flmul)),w
  9315  03B7  0830               	movwf	(___flsub@a+2)
  9316  03B8  00E2               	movf	(1+(?___flmul)),w
  9317  03B9  082F               	movwf	(___flsub@a+1)
  9318  03BA  00E1               	movf	(0+(?___flmul)),w
  9319  03BB  082E               	movwf	(___flsub@a)
  9320  03BC  00E0               
  9321                           	movlb 1	; select bank1
  9322  03BD  0141               	movf	(efgtoa@h+3)^080h,w
  9323  03BE  0855               	movlb 0	; select bank0
  9324  03BF  0140               	movwf	(___flsub@b+3)
  9325  03C0  00E7               	movlb 1	; select bank1
  9326  03C1  0141               	movf	(efgtoa@h+2)^080h,w
  9327  03C2  0854               	movlb 0	; select bank0
  9328  03C3  0140               	movwf	(___flsub@b+2)
  9329  03C4  00E6               	movlb 1	; select bank1
  9330  03C5  0141               	movf	(efgtoa@h+1)^080h,w
  9331  03C6  0853               	movlb 0	; select bank0
  9332  03C7  0140               	movwf	(___flsub@b+1)
  9333  03C8  00E5               	movlb 1	; select bank1
  9334  03C9  0141               	movf	(efgtoa@h)^080h,w
  9335  03CA  0852               	movlb 0	; select bank0
  9336  03CB  0140               	movwf	(___flsub@b)
  9337  03CC  00E4               
  9338                           	fcall	___flsub
  9339  03CD  31A1  21ED  3180   	movlb 0	; select bank0
  9340  03D0  0140               	movf	(3+(?___flsub)),w
  9341  03D1  0863               	movlb 1	; select bank1
  9342  03D2  0141               	movwf	(efgtoa@h+3)^080h
  9343  03D3  00D5               	movlb 0	; select bank0
  9344  03D4  0140               	movf	(2+(?___flsub)),w
  9345  03D5  0862               	movlb 1	; select bank1
  9346  03D6  0141               	movwf	(efgtoa@h+2)^080h
  9347  03D7  00D4               	movlb 0	; select bank0
  9348  03D8  0140               	movf	(1+(?___flsub)),w
  9349  03D9  0861               	movlb 1	; select bank1
  9350  03DA  0141               	movwf	(efgtoa@h+1)^080h
  9351  03DB  00D3               	movlb 0	; select bank0
  9352  03DC  0140               	movf	(0+(?___flsub)),w
  9353  03DD  0860               	movlb 1	; select bank1
  9354  03DE  0141               	movwf	(efgtoa@h)^080h
  9355  03DF  00D2               
  9356                           	line	422
  9357                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 422:       
                                   u = u/10.0;
  9358                           	movlw	0x41
  9359  03E0  3041               	movlb 0	; select bank0
  9360  03E1  0140               	movwf	(___fldiv@a+3)
  9361  03E2  00CB               	movlw	0x20
  9362  03E3  3020               	movwf	(___fldiv@a+2)
  9363  03E4  00CA               	movlw	0x0
  9364  03E5  3000               	movwf	(___fldiv@a+1)
  9365  03E6  00C9               	movlw	0x0
  9366  03E7  3000               	movwf	(___fldiv@a)
  9367  03E8  00C8               
  9368                           	movlb 1	; select bank1
  9369  03E9  0141               	movf	(efgtoa@u+3)^080h,w
  9370  03EA  0867               	movlb 0	; select bank0
  9371  03EB  0140               	movwf	(___fldiv@b+3)
  9372  03EC  00CF               	movlb 1	; select bank1
  9373  03ED  0141               	movf	(efgtoa@u+2)^080h,w
  9374  03EE  0866               	movlb 0	; select bank0
  9375  03EF  0140               	movwf	(___fldiv@b+2)
  9376  03F0  00CE               	movlb 1	; select bank1
  9377  03F1  0141               	movf	(efgtoa@u+1)^080h,w
  9378  03F2  0865               	movlb 0	; select bank0
  9379  03F3  0140               	movwf	(___fldiv@b+1)
  9380  03F4  00CD               	movlb 1	; select bank1
  9381  03F5  0141               	movf	(efgtoa@u)^080h,w
  9382  03F6  0864               	movlb 0	; select bank0
  9383  03F7  0140               	movwf	(___fldiv@b)
  9384  03F8  00CC               
  9385                           	fcall	___fldiv
  9386  03F9  3193  23B6  3180   	movlb 0	; select bank0
  9387  03FC  0140               	movf	(3+(?___fldiv)),w
  9388  03FD  084B               	movlb 1	; select bank1
  9389  03FE  0141               	movwf	(efgtoa@u+3)^080h
  9390  03FF  00E7               	movlb 0	; select bank0
  9391  0400  0140               	movf	(2+(?___fldiv)),w
  9392  0401  084A               	movlb 1	; select bank1
  9393  0402  0141               	movwf	(efgtoa@u+2)^080h
  9394  0403  00E6               	movlb 0	; select bank0
  9395  0404  0140               	movf	(1+(?___fldiv)),w
  9396  0405  0849               	movlb 1	; select bank1
  9397  0406  0141               	movwf	(efgtoa@u+1)^080h
  9398  0407  00E5               	movlb 0	; select bank0
  9399  0408  0140               	movf	(0+(?___fldiv)),w
  9400  0409  0848               	movlb 1	; select bank1
  9401  040A  0141               	movwf	(efgtoa@u)^080h
  9402  040B  00E4               
  9403                           	line	423
  9404                           	
  9405                           l4167:	
  9406  040C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 423:       
                                   ++i;
  9407                           	movlw	01h
  9408  040C  3001               	addwf	(efgtoa@i)^080h,f
  9409  040D  07DA               	movlw	0
  9410  040E  3000               	addwfc	(efgtoa@i+1)^080h,f
  9411  040F  3DDB               	goto	l4169
  9412  0410  2C11               	line	424
  9413                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 424:     }

  9414                           	
  9415                           l484:	
  9416  0411                     	line	418
  9417                           	
  9418                           l4169:	
  9419  0411                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 418:     wh
                                 ile (i < m) {
  9420                           	movf	(efgtoa@i+1)^080h,w
  9421  0411  085B               	xorlw	80h
  9422  0412  3A80               	movlb 0	; select bank0
  9423  0413  0140               	movwf	(??_efgtoa+0)+0
  9424  0414  00EC               	movlb 1	; select bank1
  9425  0415  0141               	movf	(efgtoa@m+1)^080h,w
  9426  0416  0844               	xorlw	80h
  9427  0417  3A80               	movlb 0	; select bank0
  9428  0418  0140               	subwf	(??_efgtoa+0)+0,w
  9429  0419  026C               	skipz
  9430  041A  1D03               	goto	u5755
  9431  041B  2C1F               	movlb 1	; select bank1
  9432  041C  0141               	movf	(efgtoa@m)^080h,w
  9433  041D  0843               	subwf	(efgtoa@i)^080h,w
  9434  041E  025A               u5755:
  9435  041F                     
  9436                           	skipc
  9437  041F  1C03               	goto	u5751
  9438  0420  2C22               	goto	u5750
  9439  0421  2C23               u5751:
  9440  0422                     	goto	l4165
  9441  0422  2B39               u5750:
  9442  0423                     	goto	l4171
  9443  0423  2C24               	
  9444                           l486:	
  9445  0424                     	line	427
  9446                           	
  9447                           l4171:	
  9448  0424                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 427:     l 
                                 = u*5.0;
  9449                           	movlw	0x40
  9450  0424  3040               	movlb 0	; select bank0
  9451  0425  0140               	movwf	(___flmul@b+3)
  9452  0426  00B1               	movlw	0xa0
  9453  0427  30A0               	movwf	(___flmul@b+2)
  9454  0428  00B0               	movlw	0x0
  9455  0429  3000               	movwf	(___flmul@b+1)
  9456  042A  00AF               	movlw	0x0
  9457  042B  3000               	movwf	(___flmul@b)
  9458  042C  00AE               
  9459                           	movlb 1	; select bank1
  9460  042D  0141               	movf	(efgtoa@u+3)^080h,w
  9461  042E  0867               	movlb 0	; select bank0
  9462  042F  0140               	movwf	(___flmul@a+3)
  9463  0430  00B5               	movlb 1	; select bank1
  9464  0431  0141               	movf	(efgtoa@u+2)^080h,w
  9465  0432  0866               	movlb 0	; select bank0
  9466  0433  0140               	movwf	(___flmul@a+2)
  9467  0434  00B4               	movlb 1	; select bank1
  9468  0435  0141               	movf	(efgtoa@u+1)^080h,w
  9469  0436  0865               	movlb 0	; select bank0
  9470  0437  0140               	movwf	(___flmul@a+1)
  9471  0438  00B3               	movlb 1	; select bank1
  9472  0439  0141               	movf	(efgtoa@u)^080h,w
  9473  043A  0864               	movlb 0	; select bank0
  9474  043B  0140               	movwf	(___flmul@a)
  9475  043C  00B2               
  9476                           	fcall	___flmul
  9477  043D  3195  2595  3180   	movlb 0	; select bank0
  9478  0440  0140               	movf	(3+(?___flmul)),w
  9479  0441  0831               	movlb 1	; select bank1
  9480  0442  0141               	movwf	(efgtoa@l+3)^080h
  9481  0443  00D9               	movlb 0	; select bank0
  9482  0444  0140               	movf	(2+(?___flmul)),w
  9483  0445  0830               	movlb 1	; select bank1
  9484  0446  0141               	movwf	(efgtoa@l+2)^080h
  9485  0447  00D8               	movlb 0	; select bank0
  9486  0448  0140               	movf	(1+(?___flmul)),w
  9487  0449  082F               	movlb 1	; select bank1
  9488  044A  0141               	movwf	(efgtoa@l+1)^080h
  9489  044B  00D7               	movlb 0	; select bank0
  9490  044C  0140               	movf	(0+(?___flmul)),w
  9491  044D  082E               	movlb 1	; select bank1
  9492  044E  0141               	movwf	(efgtoa@l)^080h
  9493  044F  00D6               
  9494                           	line	428
  9495                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 428:     if
                                  (h < l) {
  9496                           	movf	(efgtoa@h+3)^080h,w
  9497  0450  0855               	movlb 0	; select bank0
  9498  0451  0140               	movwf	(___flge@ff1+3)
  9499  0452  00CB               	movlb 1	; select bank1
  9500  0453  0141               	movf	(efgtoa@h+2)^080h,w
  9501  0454  0854               	movlb 0	; select bank0
  9502  0455  0140               	movwf	(___flge@ff1+2)
  9503  0456  00CA               	movlb 1	; select bank1
  9504  0457  0141               	movf	(efgtoa@h+1)^080h,w
  9505  0458  0853               	movlb 0	; select bank0
  9506  0459  0140               	movwf	(___flge@ff1+1)
  9507  045A  00C9               	movlb 1	; select bank1
  9508  045B  0141               	movf	(efgtoa@h)^080h,w
  9509  045C  0852               	movlb 0	; select bank0
  9510  045D  0140               	movwf	(___flge@ff1)
  9511  045E  00C8               
  9512                           	movlb 1	; select bank1
  9513  045F  0141               	movf	(efgtoa@l+3)^080h,w
  9514  0460  0859               	movlb 0	; select bank0
  9515  0461  0140               	movwf	(___flge@ff2+3)
  9516  0462  00CF               	movlb 1	; select bank1
  9517  0463  0141               	movf	(efgtoa@l+2)^080h,w
  9518  0464  0858               	movlb 0	; select bank0
  9519  0465  0140               	movwf	(___flge@ff2+2)
  9520  0466  00CE               	movlb 1	; select bank1
  9521  0467  0141               	movf	(efgtoa@l+1)^080h,w
  9522  0468  0857               	movlb 0	; select bank0
  9523  0469  0140               	movwf	(___flge@ff2+1)
  9524  046A  00CD               	movlb 1	; select bank1
  9525  046B  0141               	movf	(efgtoa@l)^080h,w
  9526  046C  0856               	movlb 0	; select bank0
  9527  046D  0140               	movwf	(___flge@ff2)
  9528  046E  00CC               
  9529                           	fcall	___flge
  9530  046F  319B  233A  3180   	btfsc	status,0
  9531  0472  1803               	goto	u5761
  9532  0473  2C75               	goto	u5760
  9533  0474  2C76               u5761:
  9534  0475                     	goto	l4175
  9535  0475  2C80               u5760:
  9536  0476                     	line	429
  9537                           	
  9538                           l4173:	
  9539  0476                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 429:       
                                   l = 0.0;
  9540                           	movlw	0x0
  9541  0476  3000               	movlb 1	; select bank1
  9542  0477  0141               	movwf	(efgtoa@l+3)^080h
  9543  0478  00D9               	movlw	0x0
  9544  0479  3000               	movwf	(efgtoa@l+2)^080h
  9545  047A  00D8               	movlw	0x0
  9546  047B  3000               	movwf	(efgtoa@l+1)^080h
  9547  047C  00D7               	movlw	0x0
  9548  047D  3000               	movwf	(efgtoa@l)^080h
  9549  047E  00D6               
  9550                           	line	430
  9551                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 430:     } 
                                 else {
  9552                           	goto	l4181
  9553  047F  2CB6               	
  9554                           l487:	
  9555  0480                     	line	432
  9556                           	
  9557                           l4175:	
  9558  0480                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 432:       
                                   if ((h == l) && !(d % 2)) {
  9559                           	movlb 1	; select bank1
  9560  0480  0141               	movf	(efgtoa@h+3)^080h,w
  9561  0481  0855               	movlb 0	; select bank0
  9562  0482  0140               	movwf	(___fleq@ff1+3)
  9563  0483  00A3               	movlb 1	; select bank1
  9564  0484  0141               	movf	(efgtoa@h+2)^080h,w
  9565  0485  0854               	movlb 0	; select bank0
  9566  0486  0140               	movwf	(___fleq@ff1+2)
  9567  0487  00A2               	movlb 1	; select bank1
  9568  0488  0141               	movf	(efgtoa@h+1)^080h,w
  9569  0489  0853               	movlb 0	; select bank0
  9570  048A  0140               	movwf	(___fleq@ff1+1)
  9571  048B  00A1               	movlb 1	; select bank1
  9572  048C  0141               	movf	(efgtoa@h)^080h,w
  9573  048D  0852               	movlb 0	; select bank0
  9574  048E  0140               	movwf	(___fleq@ff1)
  9575  048F  00A0               
  9576                           	movlb 1	; select bank1
  9577  0490  0141               	movf	(efgtoa@l+3)^080h,w
  9578  0491  0859               	movlb 0	; select bank0
  9579  0492  0140               	movwf	(___fleq@ff2+3)
  9580  0493  00A7               	movlb 1	; select bank1
  9581  0494  0141               	movf	(efgtoa@l+2)^080h,w
  9582  0495  0858               	movlb 0	; select bank0
  9583  0496  0140               	movwf	(___fleq@ff2+2)
  9584  0497  00A6               	movlb 1	; select bank1
  9585  0498  0141               	movf	(efgtoa@l+1)^080h,w
  9586  0499  0857               	movlb 0	; select bank0
  9587  049A  0140               	movwf	(___fleq@ff2+1)
  9588  049B  00A5               	movlb 1	; select bank1
  9589  049C  0141               	movf	(efgtoa@l)^080h,w
  9590  049D  0856               	movlb 0	; select bank0
  9591  049E  0140               	movwf	(___fleq@ff2)
  9592  049F  00A4               
  9593                           	fcall	___fleq
  9594  04A0  31A5  2578  3180   	btfss	status,0
  9595  04A3  1C03               	goto	u5771
  9596  04A4  2CA6               	goto	u5770
  9597  04A5  2CA7               u5771:
  9598  04A6                     	goto	l4181
  9599  04A6  2CB6               u5770:
  9600  04A7                     	
  9601                           l4177:	
  9602  04A7                     	movlb 1	; select bank1
  9603  04A7  0141               	btfsc	(efgtoa@d)^080h,(0)&7
  9604  04A8  1847               	goto	u5781
  9605  04A9  2CAB               	goto	u5780
  9606  04AA  2CAC               u5781:
  9607  04AB                     	goto	l4181
  9608  04AB  2CB6               u5780:
  9609  04AC                     	line	433
  9610                           	
  9611                           l4179:	
  9612  04AC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 433:       
                                       l = 0.0;
  9613                           	movlw	0x0
  9614  04AC  3000               	movwf	(efgtoa@l+3)^080h
  9615  04AD  00D9               	movlw	0x0
  9616  04AE  3000               	movwf	(efgtoa@l+2)^080h
  9617  04AF  00D8               	movlw	0x0
  9618  04B0  3000               	movwf	(efgtoa@l+1)^080h
  9619  04B1  00D7               	movlw	0x0
  9620  04B2  3000               	movwf	(efgtoa@l)^080h
  9621  04B3  00D6               
  9622                           	goto	l4181
  9623  04B4  2CB6               	line	434
  9624                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 434:       
                                   }
  9625                           	
  9626                           l489:	
  9627  04B5                     	goto	l4181
  9628  04B5  2CB6               	line	435
  9629                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 435:     }

  9630                           	
  9631                           l488:	
  9632  04B6                     	line	438
  9633                           	
  9634                           l4181:	
  9635  04B6                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 438:     h 
                                 = g + l;
  9636                           	movlb 1	; select bank1
  9637  04B6  0141               	movf	(efgtoa@l+3)^080h,w
  9638  04B7  0859               	movlb 0	; select bank0
  9639  04B8  0140               	movwf	(___fladd@b+3)
  9640  04B9  00CB               	movlb 1	; select bank1
  9641  04BA  0141               	movf	(efgtoa@l+2)^080h,w
  9642  04BB  0858               	movlb 0	; select bank0
  9643  04BC  0140               	movwf	(___fladd@b+2)
  9644  04BD  00CA               	movlb 1	; select bank1
  9645  04BE  0141               	movf	(efgtoa@l+1)^080h,w
  9646  04BF  0857               	movlb 0	; select bank0
  9647  04C0  0140               	movwf	(___fladd@b+1)
  9648  04C1  00C9               	movlb 1	; select bank1
  9649  04C2  0141               	movf	(efgtoa@l)^080h,w
  9650  04C3  0856               	movlb 0	; select bank0
  9651  04C4  0140               	movwf	(___fladd@b)
  9652  04C5  00C8               
  9653                           	movlb 1	; select bank1
  9654  04C6  0141               	movf	(efgtoa@g+3)^080h,w
  9655  04C7  085F               	movlb 0	; select bank0
  9656  04C8  0140               	movwf	(___fladd@a+3)
  9657  04C9  00CF               	movlb 1	; select bank1
  9658  04CA  0141               	movf	(efgtoa@g+2)^080h,w
  9659  04CB  085E               	movlb 0	; select bank0
  9660  04CC  0140               	movwf	(___fladd@a+2)
  9661  04CD  00CE               	movlb 1	; select bank1
  9662  04CE  0141               	movf	(efgtoa@g+1)^080h,w
  9663  04CF  085D               	movlb 0	; select bank0
  9664  04D0  0140               	movwf	(___fladd@a+1)
  9665  04D1  00CD               	movlb 1	; select bank1
  9666  04D2  0141               	movf	(efgtoa@g)^080h,w
  9667  04D3  085C               	movlb 0	; select bank0
  9668  04D4  0140               	movwf	(___fladd@a)
  9669  04D5  00CC               
  9670                           	fcall	___fladd
  9671  04D6  3189  21B1  3180   	movlb 0	; select bank0
  9672  04D9  0140               	movf	(3+(?___fladd)),w
  9673  04DA  084B               	movlb 1	; select bank1
  9674  04DB  0141               	movwf	(efgtoa@h+3)^080h
  9675  04DC  00D5               	movlb 0	; select bank0
  9676  04DD  0140               	movf	(2+(?___fladd)),w
  9677  04DE  084A               	movlb 1	; select bank1
  9678  04DF  0141               	movwf	(efgtoa@h+2)^080h
  9679  04E0  00D4               	movlb 0	; select bank0
  9680  04E1  0140               	movf	(1+(?___fladd)),w
  9681  04E2  0849               	movlb 1	; select bank1
  9682  04E3  0141               	movwf	(efgtoa@h+1)^080h
  9683  04E4  00D3               	movlb 0	; select bank0
  9684  04E5  0140               	movf	(0+(?___fladd)),w
  9685  04E6  0848               	movlb 1	; select bank1
  9686  04E7  0141               	movwf	(efgtoa@h)^080h
  9687  04E8  00D2               
  9688                           	line	441
  9689                           	
  9690                           l4183:	
  9691  04E9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 441:     u 
                                 = ou;
  9692                           	movf	(efgtoa@ou+3)^080h,w
  9693  04E9  0832               	movwf	(efgtoa@u+3)^080h
  9694  04EA  00E7               	movf	(efgtoa@ou+2)^080h,w
  9695  04EB  0831               	movwf	(efgtoa@u+2)^080h
  9696  04EC  00E6               	movf	(efgtoa@ou+1)^080h,w
  9697  04ED  0830               	movwf	(efgtoa@u+1)^080h
  9698  04EE  00E5               	movf	(efgtoa@ou)^080h,w
  9699  04EF  082F               	movwf	(efgtoa@u)^080h
  9700  04F0  00E4               
  9701                           	line	442
  9702                           	
  9703                           l4185:	
  9704  04F1                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 442:     ne
                                  = (nmode == 'e') ? 0 : e;
  9705                           		movlw	101
  9706  04F1  3065               	xorwf	((efgtoa@nmode)^080h),w
  9707  04F2  064E               	btfsc	status,2
  9708  04F3  1903               	goto	u5791
  9709  04F4  2CF6               	goto	u5790
  9710  04F5  2CF7               u5791:
  9711  04F6                     	goto	l4189
  9712  04F6  2CFC               u5790:
  9713  04F7                     	
  9714                           l4187:	
  9715  04F7                     	movf	(efgtoa@e+1)^080h,w
  9716  04F7  0861               	movwf	(efgtoa@ne+1)^080h
  9717  04F8  00C6               	movf	(efgtoa@e)^080h,w
  9718  04F9  0860               	movwf	(efgtoa@ne)^080h
  9719  04FA  00C5               	goto	l493
  9720  04FB  2CFE               	
  9721                           l491:	
  9722  04FC                     	
  9723                           l4189:	
  9724  04FC                     	clrf	(efgtoa@ne)^080h
  9725  04FC  01C5               	clrf	(efgtoa@ne+1)^080h
  9726  04FD  01C6               	
  9727                           l493:	
  9728  04FE                     	line	443
  9729                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 443:     pp
                                  = 0;
  9730                           	clrf	(efgtoa@pp)^080h
  9731  04FE  01C1               	clrf	(efgtoa@pp+1)^080h
  9732  04FF  01C2               	line	444
  9733                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 444:     t 
                                 = 0;
  9734                           	clrf	(efgtoa@t)^080h
  9735  0500  01BF               	clrf	(efgtoa@t+1)^080h
  9736  0501  01C0               	line	445
  9737                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 445:     i 
                                 = 0;
  9738                           	clrf	(efgtoa@i)^080h
  9739  0502  01DA               	clrf	(efgtoa@i+1)^080h
  9740  0503  01DB               	line	446
  9741                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 446:     wh
                                 ile ((i < m) && (n < (80 - 5))) {
  9742                           	goto	l4239
  9743  0504  2E5A               	
  9744                           l495:	
  9745  0505                     	line	447
  9746                           	
  9747                           l4191:	
  9748  0505                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 447:       
                                   l = floorf(h/u);
  9749                           	movlb 1	; select bank1
  9750  0505  0141               	movf	(efgtoa@u+3)^080h,w
  9751  0506  0867               	movlb 0	; select bank0
  9752  0507  0140               	movwf	(___fldiv@a+3)
  9753  0508  00CB               	movlb 1	; select bank1
  9754  0509  0141               	movf	(efgtoa@u+2)^080h,w
  9755  050A  0866               	movlb 0	; select bank0
  9756  050B  0140               	movwf	(___fldiv@a+2)
  9757  050C  00CA               	movlb 1	; select bank1
  9758  050D  0141               	movf	(efgtoa@u+1)^080h,w
  9759  050E  0865               	movlb 0	; select bank0
  9760  050F  0140               	movwf	(___fldiv@a+1)
  9761  0510  00C9               	movlb 1	; select bank1
  9762  0511  0141               	movf	(efgtoa@u)^080h,w
  9763  0512  0864               	movlb 0	; select bank0
  9764  0513  0140               	movwf	(___fldiv@a)
  9765  0514  00C8               
  9766                           	movlb 1	; select bank1
  9767  0515  0141               	movf	(efgtoa@h+3)^080h,w
  9768  0516  0855               	movlb 0	; select bank0
  9769  0517  0140               	movwf	(___fldiv@b+3)
  9770  0518  00CF               	movlb 1	; select bank1
  9771  0519  0141               	movf	(efgtoa@h+2)^080h,w
  9772  051A  0854               	movlb 0	; select bank0
  9773  051B  0140               	movwf	(___fldiv@b+2)
  9774  051C  00CE               	movlb 1	; select bank1
  9775  051D  0141               	movf	(efgtoa@h+1)^080h,w
  9776  051E  0853               	movlb 0	; select bank0
  9777  051F  0140               	movwf	(___fldiv@b+1)
  9778  0520  00CD               	movlb 1	; select bank1
  9779  0521  0141               	movf	(efgtoa@h)^080h,w
  9780  0522  0852               	movlb 0	; select bank0
  9781  0523  0140               	movwf	(___fldiv@b)
  9782  0524  00CC               
  9783                           	fcall	___fldiv
  9784  0525  3193  23B6  3180   	movlb 0	; select bank0
  9785  0528  0140               	movf	(3+(?___fldiv)),w
  9786  0529  084B               	movwf	(floorf@x+3)
  9787  052A  00E5               	movf	(2+(?___fldiv)),w
  9788  052B  084A               	movwf	(floorf@x+2)
  9789  052C  00E4               	movf	(1+(?___fldiv)),w
  9790  052D  0849               	movwf	(floorf@x+1)
  9791  052E  00E3               	movf	(0+(?___fldiv)),w
  9792  052F  0848               	movwf	(floorf@x)
  9793  0530  00E2               
  9794                           	fcall	_floorf
  9795  0531  3191  2126  3180   	movlb 0	; select bank0
  9796  0534  0140               	movf	(3+(?_floorf)),w
  9797  0535  0865               	movlb 1	; select bank1
  9798  0536  0141               	movwf	(efgtoa@l+3)^080h
  9799  0537  00D9               	movlb 0	; select bank0
  9800  0538  0140               	movf	(2+(?_floorf)),w
  9801  0539  0864               	movlb 1	; select bank1
  9802  053A  0141               	movwf	(efgtoa@l+2)^080h
  9803  053B  00D8               	movlb 0	; select bank0
  9804  053C  0140               	movf	(1+(?_floorf)),w
  9805  053D  0863               	movlb 1	; select bank1
  9806  053E  0141               	movwf	(efgtoa@l+1)^080h
  9807  053F  00D7               	movlb 0	; select bank0
  9808  0540  0140               	movf	(0+(?_floorf)),w
  9809  0541  0862               	movlb 1	; select bank1
  9810  0542  0141               	movwf	(efgtoa@l)^080h
  9811  0543  00D6               
  9812                           	line	448
  9813                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 448:       
                                   d = (int)l;
  9814                           	movf	(efgtoa@l+3)^080h,w
  9815  0544  0859               	movlb 0	; select bank0
  9816  0545  0140               	movwf	(___fltol@f1+3)
  9817  0546  00A3               	movlb 1	; select bank1
  9818  0547  0141               	movf	(efgtoa@l+2)^080h,w
  9819  0548  0858               	movlb 0	; select bank0
  9820  0549  0140               	movwf	(___fltol@f1+2)
  9821  054A  00A2               	movlb 1	; select bank1
  9822  054B  0141               	movf	(efgtoa@l+1)^080h,w
  9823  054C  0857               	movlb 0	; select bank0
  9824  054D  0140               	movwf	(___fltol@f1+1)
  9825  054E  00A1               	movlb 1	; select bank1
  9826  054F  0141               	movf	(efgtoa@l)^080h,w
  9827  0550  0856               	movlb 0	; select bank0
  9828  0551  0140               	movwf	(___fltol@f1)
  9829  0552  00A0               
  9830                           	fcall	___fltol
  9831  0553  319A  22A5  3180   	movlb 0	; select bank0
  9832  0556  0140               	movf	(1+(?___fltol)),w
  9833  0557  0821               	movlb 1	; select bank1
  9834  0558  0141               	movwf	(efgtoa@d+1)^080h
  9835  0559  00C8               	movlb 0	; select bank0
  9836  055A  0140               	movf	(0+(?___fltol)),w
  9837  055B  0820               	movlb 1	; select bank1
  9838  055C  0141               	movwf	(efgtoa@d)^080h
  9839  055D  00C7               	line	449
  9840                           	
  9841                           l4193:	
  9842  055E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 449:       
                                   if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  9843                           	movlb 2	; select bank2
  9844  055E  0142               	btfsc	(_flags)^0100h,(4)&7
  9845  055F  1A6A               	goto	u5801
  9846  0560  2D62               	goto	u5800
  9847  0561  2D63               u5801:
  9848  0562                     	goto	l4203
  9849  0562  2D79               u5800:
  9850  0563                     	
  9851                           l4195:	
  9852  0563                     	movlb 1	; select bank1
  9853  0563  0141               	movf	((efgtoa@d)^080h),w
  9854  0564  0847               iorwf	((efgtoa@d+1)^080h),w
  9855  0565  0448               	btfss	status,2
  9856  0566  1D03               	goto	u5811
  9857  0567  2D69               	goto	u5810
  9858  0568  2D6A               u5811:
  9859  0569                     	goto	l4203
  9860  0569  2D79               u5810:
  9861  056A                     	
  9862                           l4197:	
  9863  056A                     		movlw	103
  9864  056A  3067               	xorwf	((efgtoa@mode)^080h),w
  9865  056B  0651               	btfss	status,2
  9866  056C  1D03               	goto	u5821
  9867  056D  2D6F               	goto	u5820
  9868  056E  2D70               u5821:
  9869  056F                     	goto	l4203
  9870  056F  2D79               u5820:
  9871  0570                     	
  9872                           l4199:	
  9873  0570                     	btfss	(efgtoa@ne+1)^080h,7
  9874  0570  1FC6               	goto	u5831
  9875  0571  2D73               	goto	u5830
  9876  0572  2D74               u5831:
  9877  0573                     	goto	l4203
  9878  0573  2D79               u5830:
  9879  0574                     	line	450
  9880                           	
  9881                           l4201:	
  9882  0574                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 450:       
                                       ++t;
  9883                           	movlw	01h
  9884  0574  3001               	addwf	(efgtoa@t)^080h,f
  9885  0575  07BF               	movlw	0
  9886  0576  3000               	addwfc	(efgtoa@t+1)^080h,f
  9887  0577  3DC0               	line	451
  9888                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 451:       
                                   } else {
  9889                           	goto	l4231
  9890  0578  2DD7               	
  9891                           l496:	
  9892  0579                     	line	452
  9893                           	
  9894                           l4203:	
  9895  0579                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 452:       
                                       if (!pp && (ne < 0)) {
  9896                           	movlb 1	; select bank1
  9897  0579  0141               	movf	((efgtoa@pp)^080h),w
  9898  057A  0841               iorwf	((efgtoa@pp+1)^080h),w
  9899  057B  0442               	btfss	status,2
  9900  057C  1D03               	goto	u5841
  9901  057D  2D7F               	goto	u5840
  9902  057E  2D80               u5841:
  9903  057F                     	goto	l4223
  9904  057F  2DB9               u5840:
  9905  0580                     	
  9906                           l4205:	
  9907  0580                     	btfss	(efgtoa@ne+1)^080h,7
  9908  0580  1FC6               	goto	u5851
  9909  0581  2D83               	goto	u5850
  9910  0582  2D84               u5851:
  9911  0583                     	goto	l4223
  9912  0583  2DB9               u5850:
  9913  0584                     	line	453
  9914                           	
  9915                           l4207:	
  9916  0584                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 453:       
                                           dbuf[n++] = '.';
  9917                           	movlw	low(02Eh)
  9918  0584  302E               	movlb 0	; select bank0
  9919  0585  0140               	movwf	(??_efgtoa+0)+0
  9920  0586  00EC               	movlb 1	; select bank1
  9921  0587  0141               	movf	(efgtoa@n)^080h,w
  9922  0588  0862               	addlw	low(_dbuf|((0x3)<<8))&0ffh
  9923  0589  3E20               	movwf	fsr1l
  9924  058A  0086               	movlw 3	; select bank6/7
  9925  058B  3003               	movwf fsr1h	
  9926  058C  0087               	
  9927                           	movlb 0	; select bank0
  9928  058D  0140               	movf	(??_efgtoa+0)+0,w
  9929  058E  086C               	movwf	indf1
  9930  058F  0081               	
  9931                           l4209:	
  9932  0590                     	movlw	01h
  9933  0590  3001               	movlb 1	; select bank1
  9934  0591  0141               	addwf	(efgtoa@n)^080h,f
  9935  0592  07E2               	movlw	0
  9936  0593  3000               	addwfc	(efgtoa@n+1)^080h,f
  9937  0594  3DE3               	line	454
  9938                           	
  9939                           l4211:	
  9940  0595                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 454:       
                                           --w;
  9941                           	movlw	0FFh
  9942  0595  30FF               	addwf	(efgtoa@w)^080h,f
  9943  0596  07CF               	movlw	0FFh
  9944  0597  30FF               	addwfc	(efgtoa@w+1)^080h,f
  9945  0598  3DD0               	line	455
  9946                           	
  9947                           l4213:	
  9948  0599                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 455:       
                                           pp = 1;
  9949                           	movlw	01h
  9950  0599  3001               	movwf	(efgtoa@pp)^080h
  9951  059A  00C1               	movlw	0
  9952  059B  3000               	movwf	((efgtoa@pp)^080h)+1
  9953  059C  00C2               	goto	l4223
  9954  059D  2DB9               	line	456
  9955                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 456:       
                                       }
  9956                           	
  9957                           l498:	
  9958  059E                     	line	457
  9959                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 457:       
                                       while (t) {
  9960                           	goto	l4223
  9961  059E  2DB9               	
  9962                           l500:	
  9963  059F                     	line	458
  9964                           	
  9965                           l4215:	
  9966  059F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 458:       
                                           dbuf[n++] = '0';
  9967                           	movlw	low(030h)
  9968  059F  3030               	movlb 0	; select bank0
  9969  05A0  0140               	movwf	(??_efgtoa+0)+0
  9970  05A1  00EC               	movlb 1	; select bank1
  9971  05A2  0141               	movf	(efgtoa@n)^080h,w
  9972  05A3  0862               	addlw	low(_dbuf|((0x3)<<8))&0ffh
  9973  05A4  3E20               	movwf	fsr1l
  9974  05A5  0086               	movlw 3	; select bank6/7
  9975  05A6  3003               	movwf fsr1h	
  9976  05A7  0087               	
  9977                           	movlb 0	; select bank0
  9978  05A8  0140               	movf	(??_efgtoa+0)+0,w
  9979  05A9  086C               	movwf	indf1
  9980  05AA  0081               	
  9981                           l4217:	
  9982  05AB                     	movlw	01h
  9983  05AB  3001               	movlb 1	; select bank1
  9984  05AC  0141               	addwf	(efgtoa@n)^080h,f
  9985  05AD  07E2               	movlw	0
  9986  05AE  3000               	addwfc	(efgtoa@n+1)^080h,f
  9987  05AF  3DE3               	line	459
  9988                           	
  9989                           l4219:	
  9990  05B0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 459:       
                                           --w;
  9991                           	movlw	0FFh
  9992  05B0  30FF               	addwf	(efgtoa@w)^080h,f
  9993  05B1  07CF               	movlw	0FFh
  9994  05B2  30FF               	addwfc	(efgtoa@w+1)^080h,f
  9995  05B3  3DD0               	line	460
  9996                           	
  9997                           l4221:	
  9998  05B4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 460:       
                                           --t;
  9999                           	movlw	0FFh
 10000  05B4  30FF               	addwf	(efgtoa@t)^080h,f
 10001  05B5  07BF               	movlw	0FFh
 10002  05B6  30FF               	addwfc	(efgtoa@t+1)^080h,f
 10003  05B7  3DC0               	goto	l4223
 10004  05B8  2DB9               	line	461
 10005                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 461:       
                                       }
 10006                           	
 10007                           l499:	
 10008  05B9                     	line	457
 10009                           	
 10010                           l4223:	
 10011  05B9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 457:       
                                       while (t) {
 10012                           	movf	((efgtoa@t)^080h),w
 10013  05B9  083F               iorwf	((efgtoa@t+1)^080h),w
 10014  05BA  0440               	btfss	status,2
 10015  05BB  1D03               	goto	u5861
 10016  05BC  2DBE               	goto	u5860
 10017  05BD  2DBF               u5861:
 10018  05BE                     	goto	l4215
 10019  05BE  2D9F               u5860:
 10020  05BF                     	goto	l4225
 10021  05BF  2DC0               	
 10022                           l501:	
 10023  05C0                     	line	462
 10024                           	
 10025                           l4225:	
 10026  05C0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 462:       
                                       dbuf[n++] = '0' + d;
 10027                           	movf	(efgtoa@d)^080h,w
 10028  05C0  0847               	addlw	030h
 10029  05C1  3E30               	movlb 0	; select bank0
 10030  05C2  0140               	movwf	(??_efgtoa+0)+0
 10031  05C3  00EC               	movlb 1	; select bank1
 10032  05C4  0141               	movf	(efgtoa@n)^080h,w
 10033  05C5  0862               	addlw	low(_dbuf|((0x3)<<8))&0ffh
 10034  05C6  3E20               	movwf	fsr1l
 10035  05C7  0086               	movlw 3	; select bank6/7
 10036  05C8  3003               	movwf fsr1h	
 10037  05C9  0087               	
 10038                           	movlb 0	; select bank0
 10039  05CA  0140               	movf	(??_efgtoa+0)+0,w
 10040  05CB  086C               	movwf	indf1
 10041  05CC  0081               	
 10042                           l4227:	
 10043  05CD                     	movlw	01h
 10044  05CD  3001               	movlb 1	; select bank1
 10045  05CE  0141               	addwf	(efgtoa@n)^080h,f
 10046  05CF  07E2               	movlw	0
 10047  05D0  3000               	addwfc	(efgtoa@n+1)^080h,f
 10048  05D1  3DE3               	line	463
 10049                           	
 10050                           l4229:	
 10051  05D2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 463:       
                                       --w;
 10052                           	movlw	0FFh
 10053  05D2  30FF               	addwf	(efgtoa@w)^080h,f
 10054  05D3  07CF               	movlw	0FFh
 10055  05D4  30FF               	addwfc	(efgtoa@w+1)^080h,f
 10056  05D5  3DD0               	goto	l4231
 10057  05D6  2DD7               	line	464
 10058                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 464:       
                                   }
 10059                           	
 10060                           l497:	
 10061  05D7                     	line	465
 10062                           	
 10063                           l4231:	
 10064  05D7                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 465:       
                                   h -= l*u;
 10065                           	movf	(efgtoa@l+3)^080h,w
 10066  05D7  0859               	movlb 0	; select bank0
 10067  05D8  0140               	movwf	(___flmul@a+3)
 10068  05D9  00B5               	movlb 1	; select bank1
 10069  05DA  0141               	movf	(efgtoa@l+2)^080h,w
 10070  05DB  0858               	movlb 0	; select bank0
 10071  05DC  0140               	movwf	(___flmul@a+2)
 10072  05DD  00B4               	movlb 1	; select bank1
 10073  05DE  0141               	movf	(efgtoa@l+1)^080h,w
 10074  05DF  0857               	movlb 0	; select bank0
 10075  05E0  0140               	movwf	(___flmul@a+1)
 10076  05E1  00B3               	movlb 1	; select bank1
 10077  05E2  0141               	movf	(efgtoa@l)^080h,w
 10078  05E3  0856               	movlb 0	; select bank0
 10079  05E4  0140               	movwf	(___flmul@a)
 10080  05E5  00B2               
 10081                           	movlb 1	; select bank1
 10082  05E6  0141               	movf	(efgtoa@u+3)^080h,w
 10083  05E7  0867               	movlb 0	; select bank0
 10084  05E8  0140               	movwf	(___flmul@b+3)
 10085  05E9  00B1               	movlb 1	; select bank1
 10086  05EA  0141               	movf	(efgtoa@u+2)^080h,w
 10087  05EB  0866               	movlb 0	; select bank0
 10088  05EC  0140               	movwf	(___flmul@b+2)
 10089  05ED  00B0               	movlb 1	; select bank1
 10090  05EE  0141               	movf	(efgtoa@u+1)^080h,w
 10091  05EF  0865               	movlb 0	; select bank0
 10092  05F0  0140               	movwf	(___flmul@b+1)
 10093  05F1  00AF               	movlb 1	; select bank1
 10094  05F2  0141               	movf	(efgtoa@u)^080h,w
 10095  05F3  0864               	movlb 0	; select bank0
 10096  05F4  0140               	movwf	(___flmul@b)
 10097  05F5  00AE               
 10098                           	fcall	___flmul
 10099  05F6  3195  2595  3180   	movlb 0	; select bank0
 10100  05F9  0140               	movf	(3+(?___flmul)),w
 10101  05FA  0831               	movwf	(___flsub@a+3)
 10102  05FB  00E3               	movf	(2+(?___flmul)),w
 10103  05FC  0830               	movwf	(___flsub@a+2)
 10104  05FD  00E2               	movf	(1+(?___flmul)),w
 10105  05FE  082F               	movwf	(___flsub@a+1)
 10106  05FF  00E1               	movf	(0+(?___flmul)),w
 10107  0600  082E               	movwf	(___flsub@a)
 10108  0601  00E0               
 10109                           	movlb 1	; select bank1
 10110  0602  0141               	movf	(efgtoa@h+3)^080h,w
 10111  0603  0855               	movlb 0	; select bank0
 10112  0604  0140               	movwf	(___flsub@b+3)
 10113  0605  00E7               	movlb 1	; select bank1
 10114  0606  0141               	movf	(efgtoa@h+2)^080h,w
 10115  0607  0854               	movlb 0	; select bank0
 10116  0608  0140               	movwf	(___flsub@b+2)
 10117  0609  00E6               	movlb 1	; select bank1
 10118  060A  0141               	movf	(efgtoa@h+1)^080h,w
 10119  060B  0853               	movlb 0	; select bank0
 10120  060C  0140               	movwf	(___flsub@b+1)
 10121  060D  00E5               	movlb 1	; select bank1
 10122  060E  0141               	movf	(efgtoa@h)^080h,w
 10123  060F  0852               	movlb 0	; select bank0
 10124  0610  0140               	movwf	(___flsub@b)
 10125  0611  00E4               
 10126                           	fcall	___flsub
 10127  0612  31A1  21ED  3180   	movlb 0	; select bank0
 10128  0615  0140               	movf	(3+(?___flsub)),w
 10129  0616  0863               	movlb 1	; select bank1
 10130  0617  0141               	movwf	(efgtoa@h+3)^080h
 10131  0618  00D5               	movlb 0	; select bank0
 10132  0619  0140               	movf	(2+(?___flsub)),w
 10133  061A  0862               	movlb 1	; select bank1
 10134  061B  0141               	movwf	(efgtoa@h+2)^080h
 10135  061C  00D4               	movlb 0	; select bank0
 10136  061D  0140               	movf	(1+(?___flsub)),w
 10137  061E  0861               	movlb 1	; select bank1
 10138  061F  0141               	movwf	(efgtoa@h+1)^080h
 10139  0620  00D3               	movlb 0	; select bank0
 10140  0621  0140               	movf	(0+(?___flsub)),w
 10141  0622  0860               	movlb 1	; select bank1
 10142  0623  0141               	movwf	(efgtoa@h)^080h
 10143  0624  00D2               
 10144                           	line	466
 10145                           	
 10146                           l4233:	
 10147  0625                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 466:       
                                   u = u/10.0;
 10148                           	movlw	0x41
 10149  0625  3041               	movlb 0	; select bank0
 10150  0626  0140               	movwf	(___fldiv@a+3)
 10151  0627  00CB               	movlw	0x20
 10152  0628  3020               	movwf	(___fldiv@a+2)
 10153  0629  00CA               	movlw	0x0
 10154  062A  3000               	movwf	(___fldiv@a+1)
 10155  062B  00C9               	movlw	0x0
 10156  062C  3000               	movwf	(___fldiv@a)
 10157  062D  00C8               
 10158                           	movlb 1	; select bank1
 10159  062E  0141               	movf	(efgtoa@u+3)^080h,w
 10160  062F  0867               	movlb 0	; select bank0
 10161  0630  0140               	movwf	(___fldiv@b+3)
 10162  0631  00CF               	movlb 1	; select bank1
 10163  0632  0141               	movf	(efgtoa@u+2)^080h,w
 10164  0633  0866               	movlb 0	; select bank0
 10165  0634  0140               	movwf	(___fldiv@b+2)
 10166  0635  00CE               	movlb 1	; select bank1
 10167  0636  0141               	movf	(efgtoa@u+1)^080h,w
 10168  0637  0865               	movlb 0	; select bank0
 10169  0638  0140               	movwf	(___fldiv@b+1)
 10170  0639  00CD               	movlb 1	; select bank1
 10171  063A  0141               	movf	(efgtoa@u)^080h,w
 10172  063B  0864               	movlb 0	; select bank0
 10173  063C  0140               	movwf	(___fldiv@b)
 10174  063D  00CC               
 10175                           	fcall	___fldiv
 10176  063E  3193  23B6  3180   	movlb 0	; select bank0
 10177  0641  0140               	movf	(3+(?___fldiv)),w
 10178  0642  084B               	movlb 1	; select bank1
 10179  0643  0141               	movwf	(efgtoa@u+3)^080h
 10180  0644  00E7               	movlb 0	; select bank0
 10181  0645  0140               	movf	(2+(?___fldiv)),w
 10182  0646  084A               	movlb 1	; select bank1
 10183  0647  0141               	movwf	(efgtoa@u+2)^080h
 10184  0648  00E6               	movlb 0	; select bank0
 10185  0649  0140               	movf	(1+(?___fldiv)),w
 10186  064A  0849               	movlb 1	; select bank1
 10187  064B  0141               	movwf	(efgtoa@u+1)^080h
 10188  064C  00E5               	movlb 0	; select bank0
 10189  064D  0140               	movf	(0+(?___fldiv)),w
 10190  064E  0848               	movlb 1	; select bank1
 10191  064F  0141               	movwf	(efgtoa@u)^080h
 10192  0650  00E4               
 10193                           	line	467
 10194                           	
 10195                           l4235:	
 10196  0651                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 467:       
                                   --ne;
 10197                           	movlw	0FFh
 10198  0651  30FF               	addwf	(efgtoa@ne)^080h,f
 10199  0652  07C5               	movlw	0FFh
 10200  0653  30FF               	addwfc	(efgtoa@ne+1)^080h,f
 10201  0654  3DC6               	line	468
 10202                           	
 10203                           l4237:	
 10204  0655                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 468:       
                                   ++i;
 10205                           	movlw	01h
 10206  0655  3001               	addwf	(efgtoa@i)^080h,f
 10207  0656  07DA               	movlw	0
 10208  0657  3000               	addwfc	(efgtoa@i+1)^080h,f
 10209  0658  3DDB               	goto	l4239
 10210  0659  2E5A               	line	469
 10211                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 469:     }

 10212                           	
 10213                           l494:	
 10214  065A                     	line	446
 10215                           	
 10216                           l4239:	
 10217  065A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 446:     wh
                                 ile ((i < m) && (n < (80 - 5))) {
 10218                           	movf	(efgtoa@i+1)^080h,w
 10219  065A  085B               	xorlw	80h
 10220  065B  3A80               	movlb 0	; select bank0
 10221  065C  0140               	movwf	(??_efgtoa+0)+0
 10222  065D  00EC               	movlb 1	; select bank1
 10223  065E  0141               	movf	(efgtoa@m+1)^080h,w
 10224  065F  0844               	xorlw	80h
 10225  0660  3A80               	movlb 0	; select bank0
 10226  0661  0140               	subwf	(??_efgtoa+0)+0,w
 10227  0662  026C               	skipz
 10228  0663  1D03               	goto	u5875
 10229  0664  2E68               	movlb 1	; select bank1
 10230  0665  0141               	movf	(efgtoa@m)^080h,w
 10231  0666  0843               	subwf	(efgtoa@i)^080h,w
 10232  0667  025A               u5875:
 10233  0668                     
 10234                           	skipnc
 10235  0668  1803               	goto	u5871
 10236  0669  2E6B               	goto	u5870
 10237  066A  2E6C               u5871:
 10238  066B                     	goto	l4243
 10239  066B  2E7E               u5870:
 10240  066C                     	
 10241                           l4241:	
 10242  066C                     	movlb 1	; select bank1
 10243  066C  0141               	movf	(efgtoa@n+1)^080h,w
 10244  066D  0863               	xorlw	80h
 10245  066E  3A80               	movlb 0	; select bank0
 10246  066F  0140               	movwf	(??_efgtoa+0)+0
 10247  0670  00EC               	movlw	(0)^80h
 10248  0671  3080               	subwf	(??_efgtoa+0)+0,w
 10249  0672  026C               	skipz
 10250  0673  1D03               	goto	u5885
 10251  0674  2E78               	movlw	04Bh
 10252  0675  304B               	movlb 1	; select bank1
 10253  0676  0141               	subwf	(efgtoa@n)^080h,w
 10254  0677  0262               u5885:
 10255  0678                     
 10256                           	skipc
 10257  0678  1C03               	goto	u5881
 10258  0679  2E7B               	goto	u5880
 10259  067A  2E7C               u5881:
 10260  067B                     	goto	l4191
 10261  067B  2D05               u5880:
 10262  067C                     	goto	l4243
 10263  067C  2E7E               	
 10264                           l503:	
 10265  067D                     	goto	l4243
 10266  067D  2E7E               	
 10267                           l504:	
 10268  067E                     	line	470
 10269                           	
 10270                           l4243:	
 10271  067E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 470:     if
                                  (!pp && (flags & (1 << 4))) {
 10272                           	movlb 1	; select bank1
 10273  067E  0141               	movf	((efgtoa@pp)^080h),w
 10274  067F  0841               iorwf	((efgtoa@pp+1)^080h),w
 10275  0680  0442               	btfss	status,2
 10276  0681  1D03               	goto	u5891
 10277  0682  2E84               	goto	u5890
 10278  0683  2E85               u5891:
 10279  0684                     	goto	l4251
 10280  0684  2E9C               u5890:
 10281  0685                     	
 10282                           l4245:	
 10283  0685                     	movlb 2	; select bank2
 10284  0685  0142               	btfss	(_flags)^0100h,(4)&7
 10285  0686  1E6A               	goto	u5901
 10286  0687  2E89               	goto	u5900
 10287  0688  2E8A               u5901:
 10288  0689                     	goto	l4251
 10289  0689  2E9C               u5900:
 10290  068A                     	line	471
 10291                           	
 10292                           l4247:	
 10293  068A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 471:       
                                   dbuf[n++] = '.';
 10294                           	movlw	low(02Eh)
 10295  068A  302E               	movlb 0	; select bank0
 10296  068B  0140               	movwf	(??_efgtoa+0)+0
 10297  068C  00EC               	movlb 1	; select bank1
 10298  068D  0141               	movf	(efgtoa@n)^080h,w
 10299  068E  0862               	addlw	low(_dbuf|((0x3)<<8))&0ffh
 10300  068F  3E20               	movwf	fsr1l
 10301  0690  0086               	movlw 3	; select bank6/7
 10302  0691  3003               	movwf fsr1h	
 10303  0692  0087               	
 10304                           	movlb 0	; select bank0
 10305  0693  0140               	movf	(??_efgtoa+0)+0,w
 10306  0694  086C               	movwf	indf1
 10307  0695  0081               	
 10308                           l4249:	
 10309  0696                     	movlw	01h
 10310  0696  3001               	movlb 1	; select bank1
 10311  0697  0141               	addwf	(efgtoa@n)^080h,f
 10312  0698  07E2               	movlw	0
 10313  0699  3000               	addwfc	(efgtoa@n+1)^080h,f
 10314  069A  3DE3               	goto	l4251
 10315  069B  2E9C               	line	472
 10316                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 472:     }

 10317                           	
 10318                           l505:	
 10319  069C                     	line	473
 10320                           	
 10321                           l4251:	
 10322  069C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 473:     db
                                 uf[n] = '\0';
 10323                           	movlb 1	; select bank1
 10324  069C  0141               	movf	(efgtoa@n)^080h,w
 10325  069D  0862               	addlw	low(_dbuf|((0x3)<<8))&0ffh
 10326  069E  3E20               	movwf	fsr1l
 10327  069F  0086               	movlw 3	; select bank6/7
 10328  06A0  3003               	movwf fsr1h	
 10329  06A1  0087               	
 10330                           	clrf	indf1
 10331  06A2  0181               	line	476
 10332                           	
 10333                           l4253:	
 10334  06A3                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 476:     if
                                  (nmode == 'e') {
 10335                           		movlw	101
 10336  06A3  3065               	xorwf	((efgtoa@nmode)^080h),w
 10337  06A4  064E               	btfss	status,2
 10338  06A5  1D03               	goto	u5911
 10339  06A6  2EA8               	goto	u5910
 10340  06A7  2EA9               u5911:
 10341  06A8                     	goto	l4313
 10342  06A8  2FA9               u5910:
 10343  06A9                     	line	477
 10344                           	
 10345                           l4255:	
 10346  06A9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 477:       
                                   i = sizeof(dbuf) - 1;
 10347                           	movlw	04Fh
 10348  06A9  304F               	movwf	(efgtoa@i)^080h
 10349  06AA  00DA               	movlw	0
 10350  06AB  3000               	movwf	((efgtoa@i)^080h)+1
 10351  06AC  00DB               	line	478
 10352                           	
 10353                           l4257:	
 10354  06AD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 478:       
                                   dbuf[i] = '\0';
 10355                           	movf	(efgtoa@i)^080h,w
 10356  06AD  085A               	addlw	low(_dbuf|((0x3)<<8))&0ffh
 10357  06AE  3E20               	movwf	fsr1l
 10358  06AF  0086               	movlw 3	; select bank6/7
 10359  06B0  3003               	movwf fsr1h	
 10360  06B1  0087               	
 10361                           	clrf	indf1
 10362  06B2  0181               	line	479
 10363                           	
 10364                           l4259:	
 10365  06B3                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 479:       
                                   sign = 0;
 10366                           	clrf	(efgtoa@sign)^080h
 10367  06B3  01C9               	clrf	(efgtoa@sign+1)^080h
 10368  06B4  01CA               	line	480
 10369                           	
 10370                           l4261:	
 10371  06B5                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 480:       
                                   if (e < 0) {
 10372                           	btfss	(efgtoa@e+1)^080h,7
 10373  06B5  1FE1               	goto	u5921
 10374  06B6  2EB8               	goto	u5920
 10375  06B7  2EB9               u5921:
 10376  06B8                     	goto	l4267
 10377  06B8  2EC3               u5920:
 10378  06B9                     	line	481
 10379                           	
 10380                           l4263:	
 10381  06B9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 481:       
                                       sign = 1;
 10382                           	movlw	01h
 10383  06B9  3001               	movwf	(efgtoa@sign)^080h
 10384  06BA  00C9               	movlw	0
 10385  06BB  3000               	movwf	((efgtoa@sign)^080h)+1
 10386  06BC  00CA               	line	482
 10387                           	
 10388                           l4265:	
 10389  06BD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 482:       
                                       e = -e;
 10390                           	comf	(efgtoa@e)^080h,f
 10391  06BD  09E0               	comf	(efgtoa@e+1)^080h,f
 10392  06BE  09E1               	incf	(efgtoa@e)^080h,f
 10393  06BF  0AE0               	skipnz
 10394  06C0  1903               	incf	(efgtoa@e+1)^080h,f
 10395  06C1  0AE1               	goto	l4267
 10396  06C2  2EC3               	line	483
 10397                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 483:       
                                   }
 10398                           	
 10399                           l507:	
 10400  06C3                     	line	484
 10401                           	
 10402                           l4267:	
 10403  06C3                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 484:       
                                   p = 2;
 10404                           	movlw	02h
 10405  06C3  3002               	movwf	(efgtoa@p)^080h
 10406  06C4  00CC               	movlw	0
 10407  06C5  3000               	movwf	((efgtoa@p)^080h)+1
 10408  06C6  00CD               	line	485
 10409                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 485:       
                                   while (e || (0 < p)) {
 10410                           	goto	l4279
 10411  06C7  2F0A               	
 10412                           l509:	
 10413  06C8                     	line	486
 10414                           	
 10415                           l4269:	
 10416  06C8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 486:       
                                       --i;
 10417                           	movlw	0FFh
 10418  06C8  30FF               	movlb 1	; select bank1
 10419  06C9  0141               	addwf	(efgtoa@i)^080h,f
 10420  06CA  07DA               	movlw	0FFh
 10421  06CB  30FF               	addwfc	(efgtoa@i+1)^080h,f
 10422  06CC  3DDB               	line	487
 10423                           	
 10424                           l4271:	
 10425  06CD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 487:       
                                       dbuf[i] = '0' + (e % 10);
 10426                           	movlw	0Ah
 10427  06CD  300A               	movlb 0	; select bank0
 10428  06CE  0140               	movwf	(___awmod@divisor)
 10429  06CF  00A0               	movlw	0
 10430  06D0  3000               	movwf	((___awmod@divisor))+1
 10431  06D1  00A1               	movlb 1	; select bank1
 10432  06D2  0141               	movf	(efgtoa@e+1)^080h,w
 10433  06D3  0861               	movlb 0	; select bank0
 10434  06D4  0140               	movwf	(___awmod@dividend+1)
 10435  06D5  00A3               	movlb 1	; select bank1
 10436  06D6  0141               	movf	(efgtoa@e)^080h,w
 10437  06D7  0860               	movlb 0	; select bank0
 10438  06D8  0140               	movwf	(___awmod@dividend)
 10439  06D9  00A2               	fcall	___awmod
 10440  06DA  31A6  267A  3180   	movlb 0	; select bank0
 10441  06DD  0140               	movf	(0+(?___awmod)),w
 10442  06DE  0820               	addlw	030h
 10443  06DF  3E30               	movwf	(??_efgtoa+0)+0
 10444  06E0  00EC               	movlb 1	; select bank1
 10445  06E1  0141               	movf	(efgtoa@i)^080h,w
 10446  06E2  085A               	addlw	low(_dbuf|((0x3)<<8))&0ffh
 10447  06E3  3E20               	movwf	fsr1l
 10448  06E4  0086               	movlw 3	; select bank6/7
 10449  06E5  3003               	movwf fsr1h	
 10450  06E6  0087               	
 10451                           	movlb 0	; select bank0
 10452  06E7  0140               	movf	(??_efgtoa+0)+0,w
 10453  06E8  086C               	movwf	indf1
 10454  06E9  0081               	line	488
 10455                           	
 10456                           l4273:	
 10457  06EA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 488:       
                                       e = e / 10;
 10458                           	movlw	0Ah
 10459  06EA  300A               	movwf	(___awdiv@divisor)
 10460  06EB  00A0               	movlw	0
 10461  06EC  3000               	movwf	((___awdiv@divisor))+1
 10462  06ED  00A1               	movlb 1	; select bank1
 10463  06EE  0141               	movf	(efgtoa@e+1)^080h,w
 10464  06EF  0861               	movlb 0	; select bank0
 10465  06F0  0140               	movwf	(___awdiv@dividend+1)
 10466  06F1  00A3               	movlb 1	; select bank1
 10467  06F2  0141               	movf	(efgtoa@e)^080h,w
 10468  06F3  0860               	movlb 0	; select bank0
 10469  06F4  0140               	movwf	(___awdiv@dividend)
 10470  06F5  00A2               	fcall	___awdiv
 10471  06F6  31A7  2796  3180   	movlb 0	; select bank0
 10472  06F9  0140               	movf	(1+(?___awdiv)),w
 10473  06FA  0821               	movlb 1	; select bank1
 10474  06FB  0141               	movwf	(efgtoa@e+1)^080h
 10475  06FC  00E1               	movlb 0	; select bank0
 10476  06FD  0140               	movf	(0+(?___awdiv)),w
 10477  06FE  0820               	movlb 1	; select bank1
 10478  06FF  0141               	movwf	(efgtoa@e)^080h
 10479  0700  00E0               	line	489
 10480                           	
 10481                           l4275:	
 10482  0701                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 489:       
                                       --p;
 10483                           	movlw	0FFh
 10484  0701  30FF               	addwf	(efgtoa@p)^080h,f
 10485  0702  07CC               	movlw	0FFh
 10486  0703  30FF               	addwfc	(efgtoa@p+1)^080h,f
 10487  0704  3DCD               	line	490
 10488                           	
 10489                           l4277:	
 10490  0705                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 490:       
                                       --w;
 10491                           	movlw	0FFh
 10492  0705  30FF               	addwf	(efgtoa@w)^080h,f
 10493  0706  07CF               	movlw	0FFh
 10494  0707  30FF               	addwfc	(efgtoa@w+1)^080h,f
 10495  0708  3DD0               	goto	l4279
 10496  0709  2F0A               	line	491
 10497                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 491:       
                                   }
 10498                           	
 10499                           l508:	
 10500  070A                     	line	485
 10501                           	
 10502                           l4279:	
 10503  070A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 485:       
                                   while (e || (0 < p)) {
 10504                           	movf	((efgtoa@e)^080h),w
 10505  070A  0860               iorwf	((efgtoa@e+1)^080h),w
 10506  070B  0461               	btfss	status,2
 10507  070C  1D03               	goto	u5931
 10508  070D  2F0F               	goto	u5930
 10509  070E  2F10               u5931:
 10510  070F                     	goto	l4269
 10511  070F  2EC8               u5930:
 10512  0710                     	
 10513                           l4281:	
 10514  0710                     	movf	(efgtoa@p+1)^080h,w
 10515  0710  084D               	xorlw	80h
 10516  0711  3A80               	movlb 0	; select bank0
 10517  0712  0140               	movwf	(??_efgtoa+0)+0
 10518  0713  00EC               	movlw	(0)^80h
 10519  0714  3080               	subwf	(??_efgtoa+0)+0,w
 10520  0715  026C               	skipz
 10521  0716  1D03               	goto	u5945
 10522  0717  2F1B               	movlw	01h
 10523  0718  3001               	movlb 1	; select bank1
 10524  0719  0141               	subwf	(efgtoa@p)^080h,w
 10525  071A  024C               u5945:
 10526  071B                     
 10527                           	skipnc
 10528  071B  1803               	goto	u5941
 10529  071C  2F1E               	goto	u5940
 10530  071D  2F1F               u5941:
 10531  071E                     	goto	l4269
 10532  071E  2EC8               u5940:
 10533  071F                     	goto	l4283
 10534  071F  2F20               	
 10535                           l510:	
 10536  0720                     	line	492
 10537                           	
 10538                           l4283:	
 10539  0720                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 492:       
                                   --i;
 10540                           	movlw	0FFh
 10541  0720  30FF               	movlb 1	; select bank1
 10542  0721  0141               	addwf	(efgtoa@i)^080h,f
 10543  0722  07DA               	movlw	0FFh
 10544  0723  30FF               	addwfc	(efgtoa@i+1)^080h,f
 10545  0724  3DDB               	line	493
 10546                           	
 10547                           l4285:	
 10548  0725                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 493:       
                                   dbuf[i] = sign ? '-' : '+';
 10549                           	movf	((efgtoa@sign)^080h),w
 10550  0725  0849               iorwf	((efgtoa@sign+1)^080h),w
 10551  0726  044A               	btfss	status,2
 10552  0727  1D03               	goto	u5951
 10553  0728  2F2A               	goto	u5950
 10554  0729  2F2B               u5951:
 10555  072A                     	goto	l4289
 10556  072A  2F30               u5950:
 10557  072B                     	
 10558                           l4287:	
 10559  072B                     	movlw	02Bh
 10560  072B  302B               	movwf	(_efgtoa$919)^080h
 10561  072C  00B9               	movlw	0
 10562  072D  3000               	movwf	((_efgtoa$919)^080h)+1
 10563  072E  00BA               	goto	l4291
 10564  072F  2F35               	
 10565                           l512:	
 10566  0730                     	
 10567                           l4289:	
 10568  0730                     	movlw	02Dh
 10569  0730  302D               	movwf	(_efgtoa$919)^080h
 10570  0731  00B9               	movlw	0
 10571  0732  3000               	movwf	((_efgtoa$919)^080h)+1
 10572  0733  00BA               	goto	l4291
 10573  0734  2F35               	
 10574                           l514:	
 10575  0735                     	
 10576                           l4291:	
 10577  0735                     	movf	(_efgtoa$919)^080h,w
 10578  0735  0839               	movlb 0	; select bank0
 10579  0736  0140               	movwf	(??_efgtoa+0)+0
 10580  0737  00EC               	movlb 1	; select bank1
 10581  0738  0141               	movf	(efgtoa@i)^080h,w
 10582  0739  085A               	addlw	low(_dbuf|((0x3)<<8))&0ffh
 10583  073A  3E20               	movwf	fsr1l
 10584  073B  0086               	movlw 3	; select bank6/7
 10585  073C  3003               	movwf fsr1h	
 10586  073D  0087               	
 10587                           	movlb 0	; select bank0
 10588  073E  0140               	movf	(??_efgtoa+0)+0,w
 10589  073F  086C               	movwf	indf1
 10590  0740  0081               	line	494
 10591                           	
 10592                           l4293:	
 10593  0741                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 494:       
                                   --w;
 10594                           	movlw	0FFh
 10595  0741  30FF               	movlb 1	; select bank1
 10596  0742  0141               	addwf	(efgtoa@w)^080h,f
 10597  0743  07CF               	movlw	0FFh
 10598  0744  30FF               	addwfc	(efgtoa@w+1)^080h,f
 10599  0745  3DD0               	line	495
 10600                           	
 10601                           l4295:	
 10602  0746                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 496:       
                                   dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 10603                           	movlw	0FFh
 10604  0746  30FF               	addwf	(efgtoa@i)^080h,f
 10605  0747  07DA               	movlw	0FFh
 10606  0748  30FF               	addwfc	(efgtoa@i+1)^080h,f
 10607  0749  3DDB               	line	496
 10608                           	
 10609                           l4297:	
 10610  074A                     	movf	(efgtoa@c)^080h,w
 10611  074A  082E               	addlw	low(0FFBFh)
 10612  074B  3EBF               	movlb 0	; select bank0
 10613  074C  0140               	movwf	(??_efgtoa+0)+0
 10614  074D  00EC               	movlw	high(0FFBFh)
 10615  074E  30FF               	skipnc
 10616  074F  1803               	movlw	(high(0FFBFh)+1)&0ffh
 10617  0750  3000               	movwf	((??_efgtoa+0)+0)+1
 10618  0751  00ED               	movlw	0
 10619  0752  3000               	subwf	1+(??_efgtoa+0)+0,w
 10620  0753  026D               	movlw	01Ah
 10621  0754  301A               	skipnz
 10622  0755  1903               	subwf	0+(??_efgtoa+0)+0,w
 10623  0756  026C               	skipc
 10624  0757  1C03               	goto	u5961
 10625  0758  2F5A               	goto	u5960
 10626  0759  2F5C               u5961:
 10627  075A                     	movlw	1
 10628  075A  3001               	goto	u5970
 10629  075B  2F5D               u5960:
 10630  075C                     	movlw	0
 10631  075C  3000               u5970:
 10632  075D                     	movwf	(??_efgtoa+2)+0
 10633  075D  00EE               	clrf	(??_efgtoa+2)+0+1
 10634  075E  01EF               	movf	0+(??_efgtoa+2)+0,w
 10635  075F  086E               	movlb 1	; select bank1
 10636  0760  0141               	movwf	(_efgtoa$921)^080h
 10637  0761  00BD               	movlb 0	; select bank0
 10638  0762  0140               	movf	1+(??_efgtoa+2)+0,w
 10639  0763  086F               	movlb 1	; select bank1
 10640  0764  0141               	movwf	(_efgtoa$921+1)^080h
 10641  0765  00BE               	goto	l4301
 10642  0766  2F7B               	
 10643                           l520:	
 10644  0767                     	
 10645                           l4299:	
 10646  0767                     	movf	(efgtoa@c)^080h,w
 10647  0767  082E               	movlb 0	; select bank0
 10648  0768  0140               	movwf	(??_efgtoa+0)+0
 10649  0769  00EC               	clrf	(??_efgtoa+0)+0+1
 10650  076A  01ED               	movf	0+(??_efgtoa+0)+0,w
 10651  076B  086C               	movwf	(isupper@c)
 10652  076C  00A0               	movf	1+(??_efgtoa+0)+0,w
 10653  076D  086D               	movwf	(isupper@c+1)
 10654  076E  00A1               	fcall	_isupper
 10655  076F  31A1  21D3  3180   	movlb 0	; select bank0
 10656  0772  0140               	movf	(1+(?_isupper)),w
 10657  0773  0821               	movlb 1	; select bank1
 10658  0774  0141               	movwf	(_efgtoa$921+1)^080h
 10659  0775  00BE               	movlb 0	; select bank0
 10660  0776  0140               	movf	(0+(?_isupper)),w
 10661  0777  0820               	movlb 1	; select bank1
 10662  0778  0141               	movwf	(_efgtoa$921)^080h
 10663  0779  00BD               	goto	l4301
 10664  077A  2F7B               	
 10665                           l522:	
 10666  077B                     	
 10667                           l4301:	
 10668  077B                     	movf	((_efgtoa$921)^080h),w
 10669  077B  083D               iorwf	((_efgtoa$921+1)^080h),w
 10670  077C  043E               	btfss	status,2
 10671  077D  1D03               	goto	u5981
 10672  077E  2F80               	goto	u5980
 10673  077F  2F81               u5981:
 10674  0780                     	goto	l4305
 10675  0780  2F86               u5980:
 10676  0781                     	
 10677                           l4303:	
 10678  0781                     	movlw	065h
 10679  0781  3065               	movwf	(_efgtoa$920)^080h
 10680  0782  00BB               	movlw	0
 10681  0783  3000               	movwf	((_efgtoa$920)^080h)+1
 10682  0784  00BC               	goto	l4307
 10683  0785  2F8B               	
 10684                           l516:	
 10685  0786                     	
 10686                           l4305:	
 10687  0786                     	movlw	045h
 10688  0786  3045               	movwf	(_efgtoa$920)^080h
 10689  0787  00BB               	movlw	0
 10690  0788  3000               	movwf	((_efgtoa$920)^080h)+1
 10691  0789  00BC               	goto	l4307
 10692  078A  2F8B               	
 10693                           l518:	
 10694  078B                     	
 10695                           l4307:	
 10696  078B                     	movf	(_efgtoa$920)^080h,w
 10697  078B  083B               	movlb 0	; select bank0
 10698  078C  0140               	movwf	(??_efgtoa+0)+0
 10699  078D  00EC               	movlb 1	; select bank1
 10700  078E  0141               	movf	(efgtoa@i)^080h,w
 10701  078F  085A               	addlw	low(_dbuf|((0x3)<<8))&0ffh
 10702  0790  3E20               	movwf	fsr1l
 10703  0791  0086               	movlw 3	; select bank6/7
 10704  0792  3003               	movwf fsr1h	
 10705  0793  0087               	
 10706                           	movlb 0	; select bank0
 10707  0794  0140               	movf	(??_efgtoa+0)+0,w
 10708  0795  086C               	movwf	indf1
 10709  0796  0081               	line	497
 10710                           	
 10711                           l4309:	
 10712  0797                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 497:       
                                   --w;
 10713                           	movlw	0FFh
 10714  0797  30FF               	movlb 1	; select bank1
 10715  0798  0141               	addwf	(efgtoa@w)^080h,f
 10716  0799  07CF               	movlw	0FFh
 10717  079A  30FF               	addwfc	(efgtoa@w+1)^080h,f
 10718  079B  3DD0               	line	498
 10719                           	
 10720                           l4311:	
 10721  079C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 498:       
                                   strcpy(&dbuf[n], &dbuf[i]);
 10722                           	movf	(efgtoa@i)^080h,w
 10723  079C  085A               	addlw	low(_dbuf|((0x3)<<8))&0ffh
 10724  079D  3E20               	movlb 0	; select bank0
 10725  079E  0140               	movwf	(strcpy@src)
 10726  079F  00A0               	movlw	0x3
 10727  07A0  3003               
 10728                           	movwf	(strcpy@src+1)
 10729  07A1  00A1               	movlb 1	; select bank1
 10730  07A2  0141               	movf	(efgtoa@n)^080h,w
 10731  07A3  0862               	addlw	low(_dbuf|((0x3)<<8))&0ffh
 10732  07A4  3E20               	fcall	_strcpy
 10733  07A5  31A2  22BE  3180   	goto	l4313
 10734  07A8  2FA9               	line	499
 10735                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 499:     }

 10736                           	
 10737                           l506:	
 10738  07A9                     	line	502
 10739                           	
 10740                           l4313:	
 10741  07A9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 502:     re
                                 turn pad(fp, &dbuf[0], w);
 10742                           	movlw	(low(_dbuf|((0x3)<<8)))&0ffh
 10743  07A9  3020               	movlb 0	; select bank0
 10744  07AA  0140               	movwf	(??_efgtoa+0)+0
 10745  07AB  00EC               	movf	(??_efgtoa+0)+0,w
 10746  07AC  086C               	movwf	(pad@buf)
 10747  07AD  00B0               	movlb 1	; select bank1
 10748  07AE  0141               	movf	(efgtoa@w+1)^080h,w
 10749  07AF  0850               	movlb 0	; select bank0
 10750  07B0  0140               	movwf	(pad@p+1)
 10751  07B1  00B2               	movlb 1	; select bank1
 10752  07B2  0141               	movf	(efgtoa@w)^080h,w
 10753  07B3  084F               	movlb 0	; select bank0
 10754  07B4  0140               	movwf	(pad@p)
 10755  07B5  00B1               	movlb 1	; select bank1
 10756  07B6  0141               	movf	(efgtoa@fp)^080h,w
 10757  07B7  084B               	fcall	_pad
 10758  07B8  31A7  2736  3180   	movlb 0	; select bank0
 10759  07BB  0140               	movf	(1+(?_pad)),w
 10760  07BC  0831               	movlb 1	; select bank1
 10761  07BD  0141               	movwf	(?_efgtoa+1)^080h
 10762  07BE  00AB               	movlb 0	; select bank0
 10763  07BF  0140               	movf	(0+(?_pad)),w
 10764  07C0  0830               	movlb 1	; select bank1
 10765  07C1  0141               	movwf	(?_efgtoa)^080h
 10766  07C2  00AA               	goto	l449
 10767  07C3  2FC4               	
 10768                           l4315:	
 10769  07C4                     	line	503
 10770                           	
 10771                           l449:	
 10772  07C4                     	return
 10773  07C4  0008               	opt stack 0
 10774                           GLOBAL	__end_of_efgtoa
 10775                           	__end_of_efgtoa:
 10776  07C5                     	signat	_efgtoa,12410
 10777                           	global	_tolower
 10778                           
 10779 ;; *************** function _tolower *****************
 10780 ;; Defined at:
 10781 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\tolower.c"
 10782 ;; Parameters:    Size  Location     Type
 10783 ;;  c               2    6[BANK0 ] int 
 10784 ;; Auto vars:     Size  Location     Type
 10785 ;;		None
 10786 ;; Return value:  Size  Location     Type
 10787 ;;                  2    6[BANK0 ] int 
 10788 ;; Registers used:
 10789 ;;		wreg, status,2, status,0, pclath, cstack
 10790 ;; Tracked objects:
 10791 ;;		On entry : 0/0
 10792 ;;		On exit  : 0/0
 10793 ;;		Unchanged: 0/0
 10794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10795 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10796 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10797 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10798 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10799 ;;Total ram usage:        8 bytes
 10800 ;; Hardware stack levels used:    1
 10801 ;; Hardware stack levels required when called:    4
 10802 ;; This function calls:
 10803 ;;		_isupper
 10804 ;; This function is called by:
 10805 ;;		_efgtoa
 10806 ;;		_vfpfcnvrt
 10807 ;; This function uses a non-reentrant model
 10808 ;;
 10809                           psect	text11,local,class=CODE,delta=2,merge=1,group=2
 10810                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\tolower.c"
 10811                           	line	4
 10812                           global __ptext11
 10813                           __ptext11:	;psect for function _tolower
 10814  23B8                     psect	text11
 10815                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\tolower.c"
 10816                           	line	4
 10817                           	global	__size_of_tolower
 10818                           	__size_of_tolower	equ	__end_of_tolower-_tolower
 10819  0035                     	
 10820                           _tolower:	
 10821  23B8                     ;incstack = 0
 10822                           	opt	stack 7
 10823                           ; Regs used in _tolower: [wreg+status,2+status,0+pclath+cstack]
 10824                           	line	6
 10825                           	
 10826                           l3483:	
 10827  23B8                     	movlb 0	; select bank0
 10828  23B8  0140               	movf	(tolower@c),w
 10829  23B9  0826               	addlw	0BFh
 10830  23BA  3EBF               	movwf	(??_tolower+0)+0
 10831  23BB  00A8               	movlw	0FFh
 10832  23BC  30FF               	addwfc	(tolower@c+1),w
 10833  23BD  3D27               	movwf	1+(??_tolower+0)+0
 10834  23BE  00A9               	movlw	0
 10835  23BF  3000               	subwf	1+(??_tolower+0)+0,w
 10836  23C0  0229               	movlw	01Ah
 10837  23C1  301A               	skipnz
 10838  23C2  1903               	subwf	0+(??_tolower+0)+0,w
 10839  23C3  0228               	skipc
 10840  23C4  1C03               	goto	u4301
 10841  23C5  2BC7               	goto	u4300
 10842  23C6  2BC9               u4301:
 10843  23C7                     	movlw	1
 10844  23C7  3001               	goto	u4310
 10845  23C8  2BCA               u4300:
 10846  23C9                     	movlw	0
 10847  23C9  3000               u4310:
 10848  23CA                     	movwf	(??_tolower+2)+0
 10849  23CA  00AA               	clrf	(??_tolower+2)+0+1
 10850  23CB  01AB               	movf	0+(??_tolower+2)+0,w
 10851  23CC  082A               	movwf	(_tolower$1377)
 10852  23CD  00AC               	movf	1+(??_tolower+2)+0,w
 10853  23CE  082B               	movwf	(_tolower$1377+1)
 10854  23CF  00AD               	goto	l3487
 10855  23D0  2BDE               	
 10856                           l1165:	
 10857  23D1                     	
 10858                           l3485:	
 10859  23D1                     	movf	(tolower@c+1),w
 10860  23D1  0827               	movwf	(isupper@c+1)
 10861  23D2  00A1               	movf	(tolower@c),w
 10862  23D3  0826               	movwf	(isupper@c)
 10863  23D4  00A0               	fcall	_isupper
 10864  23D5  31A1  21D3  31A3   	movlb 0	; select bank0
 10865  23D8  0140               	movf	(1+(?_isupper)),w
 10866  23D9  0821               	movwf	(_tolower$1377+1)
 10867  23DA  00AD               	movf	(0+(?_isupper)),w
 10868  23DB  0820               	movwf	(_tolower$1377)
 10869  23DC  00AC               	goto	l3487
 10870  23DD  2BDE               	
 10871                           l1167:	
 10872  23DE                     	
 10873                           l3487:	
 10874  23DE                     	movf	((_tolower$1377)),w
 10875  23DE  082C               iorwf	((_tolower$1377+1)),w
 10876  23DF  042D               	btfsc	status,2
 10877  23E0  1903               	goto	u4321
 10878  23E1  2BE3               	goto	u4320
 10879  23E2  2BE4               u4321:
 10880  23E3                     	goto	l1163
 10881  23E3  2BEC               u4320:
 10882  23E4                     	
 10883                           l3489:	
 10884  23E4                     	movlw	020h
 10885  23E4  3020               	iorwf	(tolower@c),w
 10886  23E5  0426               	movwf	(?_tolower)
 10887  23E6  00A6               	movlw	0
 10888  23E7  3000               	iorwf	(tolower@c+1),w
 10889  23E8  0427               	movwf	1+(?_tolower)
 10890  23E9  00A7               	goto	l1168
 10891  23EA  2BEC               	
 10892                           l3491:	
 10893  23EB                     	goto	l1168
 10894  23EB  2BEC               	
 10895                           l1163:	
 10896  23EC                     	line	7
 10897                           	line	8
 10898                           	
 10899                           l1168:	
 10900  23EC                     	return
 10901  23EC  0008               	opt stack 0
 10902                           GLOBAL	__end_of_tolower
 10903                           	__end_of_tolower:
 10904  23ED                     	signat	_tolower,4218
 10905                           	global	_isupper
 10906                           
 10907 ;; *************** function _isupper *****************
 10908 ;; Defined at:
 10909 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isupper.c"
 10910 ;; Parameters:    Size  Location     Type
 10911 ;;  c               2    0[BANK0 ] int 
 10912 ;; Auto vars:     Size  Location     Type
 10913 ;;		None
 10914 ;; Return value:  Size  Location     Type
 10915 ;;                  2    0[BANK0 ] int 
 10916 ;; Registers used:
 10917 ;;		wreg, status,2, status,0
 10918 ;; Tracked objects:
 10919 ;;		On entry : 0/0
 10920 ;;		On exit  : 0/0
 10921 ;;		Unchanged: 0/0
 10922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10923 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10925 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10926 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10927 ;;Total ram usage:        6 bytes
 10928 ;; Hardware stack levels used:    1
 10929 ;; Hardware stack levels required when called:    3
 10930 ;; This function calls:
 10931 ;;		Nothing
 10932 ;; This function is called by:
 10933 ;;		_efgtoa
 10934 ;;		_vfpfcnvrt
 10935 ;;		_tolower
 10936 ;; This function uses a non-reentrant model
 10937 ;;
 10938                           psect	text12,local,class=CODE,delta=2,merge=1,group=2
 10939                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isupper.c"
 10940                           	line	5
 10941                           global __ptext12
 10942                           __ptext12:	;psect for function _isupper
 10943  21D3                     psect	text12
 10944                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isupper.c"
 10945                           	line	5
 10946                           	global	__size_of_isupper
 10947                           	__size_of_isupper	equ	__end_of_isupper-_isupper
 10948  001A                     	
 10949                           _isupper:	
 10950  21D3                     ;incstack = 0
 10951                           	opt	stack 7
 10952                           ; Regs used in _isupper: [wreg+status,2+status,0]
 10953                           	line	7
 10954                           	
 10955                           l3215:	
 10956  21D3                     	movlb 0	; select bank0
 10957  21D3  0140               	movf	(isupper@c),w
 10958  21D4  0820               	addlw	0BFh
 10959  21D5  3EBF               	movwf	(??_isupper+0)+0
 10960  21D6  00A2               	movlw	0FFh
 10961  21D7  30FF               	addwfc	(isupper@c+1),w
 10962  21D8  3D21               	movwf	1+(??_isupper+0)+0
 10963  21D9  00A3               	movlw	0
 10964  21DA  3000               	subwf	1+(??_isupper+0)+0,w
 10965  21DB  0223               	movlw	01Ah
 10966  21DC  301A               	skipnz
 10967  21DD  1903               	subwf	0+(??_isupper+0)+0,w
 10968  21DE  0222               	skipc
 10969  21DF  1C03               	goto	u3661
 10970  21E0  29E2               	goto	u3660
 10971  21E1  29E4               u3661:
 10972  21E2                     	movlw	1
 10973  21E2  3001               	goto	u3670
 10974  21E3  29E5               u3660:
 10975  21E4                     	movlw	0
 10976  21E4  3000               u3670:
 10977  21E5                     	movwf	(??_isupper+2)+0
 10978  21E5  00A4               	clrf	(??_isupper+2)+0+1
 10979  21E6  01A5               	movf	0+(??_isupper+2)+0,w
 10980  21E7  0824               	movwf	(?_isupper)
 10981  21E8  00A0               	movf	1+(??_isupper+2)+0,w
 10982  21E9  0825               	movwf	(?_isupper+1)
 10983  21EA  00A1               	goto	l1094
 10984  21EB  29EC               	
 10985                           l3217:	
 10986  21EC                     	line	8
 10987                           	
 10988                           l1094:	
 10989  21EC                     	return
 10990  21EC  0008               	opt stack 0
 10991                           GLOBAL	__end_of_isupper
 10992                           	__end_of_isupper:
 10993  21ED                     	signat	_isupper,4218
 10994                           	global	_strcpy
 10995                           
 10996 ;; *************** function _strcpy *****************
 10997 ;; Defined at:
 10998 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
 10999 ;; Parameters:    Size  Location     Type
 11000 ;;  dest            1    wreg     PTR unsigned char 
 11001 ;;		 -> dbuf(80), 
 11002 ;;  src             2    0[BANK0 ] PTR const unsigned char 
 11003 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
 11004 ;;		 -> dbuf(80), 
 11005 ;; Auto vars:     Size  Location     Type
 11006 ;;  dest            1    7[BANK0 ] PTR unsigned char 
 11007 ;;		 -> dbuf(80), 
 11008 ;;  s               2    4[BANK0 ] PTR const unsigned char 
 11009 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
 11010 ;;		 -> dbuf(80), 
 11011 ;;  d               1    6[BANK0 ] PTR unsigned char 
 11012 ;;		 -> dbuf(80), 
 11013 ;; Return value:  Size  Location     Type
 11014 ;;                  1    wreg      PTR unsigned char 
 11015 ;; Registers used:
 11016 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 11017 ;; Tracked objects:
 11018 ;;		On entry : 0/0
 11019 ;;		On exit  : 0/0
 11020 ;;		Unchanged: 0/0
 11021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11022 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11023 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11024 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11025 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11026 ;;Total ram usage:        8 bytes
 11027 ;; Hardware stack levels used:    1
 11028 ;; Hardware stack levels required when called:    3
 11029 ;; This function calls:
 11030 ;;		Nothing
 11031 ;; This function is called by:
 11032 ;;		_efgtoa
 11033 ;; This function uses a non-reentrant model
 11034 ;;
 11035                           psect	text13,local,class=CODE,delta=2,merge=1,group=2
 11036                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
 11037                           	line	7
 11038                           global __ptext13
 11039                           __ptext13:	;psect for function _strcpy
 11040  22BE                     psect	text13
 11041                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
 11042                           	line	7
 11043                           	global	__size_of_strcpy
 11044                           	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
 11045  0025                     	
 11046                           _strcpy:	
 11047  22BE                     ;incstack = 0
 11048                           	opt	stack 7
 11049                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
 11050                           ;strcpy@dest stored from wreg
 11051                           	movlb 0	; select bank0
 11052  22BE  0140               	movwf	(strcpy@dest)
 11053  22BF  00A7               	line	13
 11054                           	
 11055                           l3479:	
 11056  22C0                     	movf	(strcpy@src+1),w
 11057  22C0  0821               	movwf	(strcpy@s+1)
 11058  22C1  00A5               	movf	(strcpy@src),w
 11059  22C2  0820               	movwf	(strcpy@s)
 11060  22C3  00A4               	line	14
 11061                           	movf	(strcpy@dest),w
 11062  22C4  0827               	movwf	(??_strcpy+0)+0
 11063  22C5  00A2               	movf	(??_strcpy+0)+0,w
 11064  22C6  0822               	movwf	(strcpy@d)
 11065  22C7  00A6               	line	15
 11066                           	goto	l3481
 11067  22C8  2ACA               	
 11068                           l1131:	
 11069  22C9                     	goto	l3481
 11070  22C9  2ACA               	
 11071                           l1130:	
 11072  22CA                     	
 11073                           l3481:	
 11074  22CA                     	movf	(strcpy@d),w
 11075  22CA  0826               	movwf	fsr1l
 11076  22CB  0086               	movlw 3	; select bank6/7
 11077  22CC  3003               	movwf fsr1h	
 11078  22CD  0087               	
 11079                           	incf	(strcpy@d),f
 11080  22CE  0AA6               	movf	(strcpy@s+1),w
 11081  22CF  0825               	movwf	(??_strcpy+0)+0+1
 11082  22D0  00A3               	movf	(strcpy@s),w
 11083  22D1  0824               	movwf	(??_strcpy+0)+0
 11084  22D2  00A2               	incf	(strcpy@s),f
 11085  22D3  0AA4               	skipnz
 11086  22D4  1903               	incf	(strcpy@s+1),f
 11087  22D5  0AA5               	movf	0+(??_strcpy+0)+0,w
 11088  22D6  0822               	movwf	fsr0l
 11089  22D7  0084               	movf	(1+(??_strcpy+0)+0),w
 11090  22D8  0823               	movwf	fsr0h
 11091  22D9  0085               	movf	indf0,w ;code access
 11092  22DA  0800               	movwi	[0]fsr1
 11093  22DB  3FC0               	movf	wreg
 11094  22DC  0889               	btfss	status,2
 11095  22DD  1D03               	goto	u4291
 11096  22DE  2AE0               	goto	u4290
 11097  22DF  2AE1               u4291:
 11098  22E0                     	goto	l3481
 11099  22E0  2ACA               u4290:
 11100  22E1                     	goto	l1133
 11101  22E1  2AE2               	
 11102                           l1132:	
 11103  22E2                     	line	18
 11104                           ;	Return value of _strcpy is never used
 11105                           	
 11106                           l1133:	
 11107  22E2                     	return
 11108  22E2  0008               	opt stack 0
 11109                           GLOBAL	__end_of_strcpy
 11110                           	__end_of_strcpy:
 11111  22E3                     	signat	_strcpy,8313
 11112                           	global	_pad
 11113                           
 11114 ;; *************** function _pad *****************
 11115 ;; Defined at:
 11116 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
 11117 ;; Parameters:    Size  Location     Type
 11118 ;;  fp              1    wreg     PTR struct _IO_FILE
 11119 ;;		 -> sprintf@f(5), 
 11120 ;;  buf             1   16[BANK0 ] PTR unsigned char 
 11121 ;;		 -> dbuf(80), 
 11122 ;;  p               2   17[BANK0 ] int 
 11123 ;; Auto vars:     Size  Location     Type
 11124 ;;  fp              1   24[BANK0 ] PTR struct _IO_FILE
 11125 ;;		 -> sprintf@f(5), 
 11126 ;;  w               2   22[BANK0 ] int 
 11127 ;;  i               2   20[BANK0 ] int 
 11128 ;; Return value:  Size  Location     Type
 11129 ;;                  2   16[BANK0 ] int 
 11130 ;; Registers used:
 11131 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11132 ;; Tracked objects:
 11133 ;;		On entry : 0/0
 11134 ;;		On exit  : 0/0
 11135 ;;		Unchanged: 0/0
 11136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11137 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11138 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11139 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11140 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11141 ;;Total ram usage:        9 bytes
 11142 ;; Hardware stack levels used:    1
 11143 ;; Hardware stack levels required when called:    6
 11144 ;; This function calls:
 11145 ;;		_fputc
 11146 ;;		_fputs
 11147 ;;		_strlen
 11148 ;; This function is called by:
 11149 ;;		_efgtoa
 11150 ;; This function uses a non-reentrant model
 11151 ;;
 11152                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
 11153                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
 11154                           	line	72
 11155                           global __ptext14
 11156                           __ptext14:	;psect for function _pad
 11157  2736                     psect	text14
 11158                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
 11159                           	line	72
 11160                           	global	__size_of_pad
 11161                           	__size_of_pad	equ	__end_of_pad-_pad
 11162  0060                     	
 11163                           _pad:	
 11164  2736                     ;incstack = 0
 11165                           	opt	stack 4
 11166                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11167                           ;pad@fp stored from wreg
 11168                           	movlb 0	; select bank0
 11169  2736  0140               	movwf	(pad@fp)
 11170  2737  00B8               	line	77
 11171                           	
 11172                           l3433:	
 11173  2738                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 72: static 
                                 int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
                                 es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99
                                 \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
                                 es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 11174                           	movlb 2	; select bank2
 11175  2738  0142               	btfss	(_flags)^0100h,(0)&7
 11176  2739  1C6A               	goto	u4171
 11177  273A  2F3C               	goto	u4170
 11178  273B  2F3D               u4171:
 11179  273C                     	goto	l3437
 11180  273C  2F47               u4170:
 11181  273D                     	line	78
 11182                           	
 11183                           l3435:	
 11184  273D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 78:        
                                  fputs((const char *)buf, fp);
 11185                           	movlb 0	; select bank0
 11186  273D  0140               	movf	(pad@fp),w
 11187  273E  0838               	movwf	(??_pad+0)+0
 11188  273F  00B3               	movf	(??_pad+0)+0,w
 11189  2740  0833               	movwf	(fputs@fp)
 11190  2741  00A8               	movf	(pad@buf),w
 11191  2742  0830               	fcall	_fputs
 11192  2743  31A3  2359  31A7   	goto	l3437
 11193  2746  2F47               	line	79
 11194                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 79:     }
 11195                           	
 11196                           l422:	
 11197  2747                     	line	82
 11198                           	
 11199                           l3437:	
 11200  2747                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 82:     w =
                                  (p < 0) ? 0 : p;
 11201                           	movlb 0	; select bank0
 11202  2747  0140               	btfsc	(pad@p+1),7
 11203  2748  1BB2               	goto	u4181
 11204  2749  2F4B               	goto	u4180
 11205  274A  2F4C               u4181:
 11206  274B                     	goto	l3441
 11207  274B  2F51               u4180:
 11208  274C                     	
 11209                           l3439:	
 11210  274C                     	movf	(pad@p+1),w
 11211  274C  0832               	movwf	(pad@w+1)
 11212  274D  00B7               	movf	(pad@p),w
 11213  274E  0831               	movwf	(pad@w)
 11214  274F  00B6               	goto	l426
 11215  2750  2F53               	
 11216                           l424:	
 11217  2751                     	
 11218                           l3441:	
 11219  2751                     	clrf	(pad@w)
 11220  2751  01B6               	clrf	(pad@w+1)
 11221  2752  01B7               	
 11222                           l426:	
 11223  2753                     	line	83
 11224                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 83:     i =
                                  0;
 11225                           	clrf	(pad@i)
 11226  2753  01B4               	clrf	(pad@i+1)
 11227  2754  01B5               	line	84
 11228                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
                                 le (i < w) {
 11229                           	goto	l3447
 11230  2755  2F68               	
 11231                           l428:	
 11232  2756                     	line	85
 11233                           	
 11234                           l3443:	
 11235  2756                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 85:        
                                  fputc(' ', fp);
 11236                           	movlw	020h
 11237  2756  3020               	movlb 0	; select bank0
 11238  2757  0140               	movwf	(fputc@c)
 11239  2758  00A0               	movlw	0
 11240  2759  3000               	movwf	((fputc@c))+1
 11241  275A  00A1               	movf	(pad@fp),w
 11242  275B  0838               	movwf	(??_pad+0)+0
 11243  275C  00B3               	movf	(??_pad+0)+0,w
 11244  275D  0833               	movwf	(fputc@fp)
 11245  275E  00A2               	fcall	_fputc
 11246  275F  31A6  26D8  31A7   	line	86
 11247                           	
 11248                           l3445:	
 11249  2762                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 86:        
                                  ++i;
 11250                           	movlw	01h
 11251  2762  3001               	movlb 0	; select bank0
 11252  2763  0140               	addwf	(pad@i),f
 11253  2764  07B4               	movlw	0
 11254  2765  3000               	addwfc	(pad@i+1),f
 11255  2766  3DB5               	goto	l3447
 11256  2767  2F68               	line	87
 11257                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 87:     }
 11258                           	
 11259                           l427:	
 11260  2768                     	line	84
 11261                           	
 11262                           l3447:	
 11263  2768                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
                                 le (i < w) {
 11264                           	movf	(pad@i+1),w
 11265  2768  0835               	xorlw	80h
 11266  2769  3A80               	movwf	(??_pad+0)+0
 11267  276A  00B3               	movf	(pad@w+1),w
 11268  276B  0837               	xorlw	80h
 11269  276C  3A80               	subwf	(??_pad+0)+0,w
 11270  276D  0233               	skipz
 11271  276E  1D03               	goto	u4195
 11272  276F  2F72               	movf	(pad@w),w
 11273  2770  0836               	subwf	(pad@i),w
 11274  2771  0234               u4195:
 11275  2772                     
 11276                           	skipc
 11277  2772  1C03               	goto	u4191
 11278  2773  2F75               	goto	u4190
 11279  2774  2F76               u4191:
 11280  2775                     	goto	l3443
 11281  2775  2F56               u4190:
 11282  2776                     	
 11283                           l429:	
 11284  2776                     	line	90
 11285                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 90:     if 
                                 (!(flags & (1 << 0))) {
 11286                           	movlb 2	; select bank2
 11287  2776  0142               	btfsc	(_flags)^0100h,(0)&7
 11288  2777  186A               	goto	u4201
 11289  2778  2F7A               	goto	u4200
 11290  2779  2F7B               u4201:
 11291  277A                     	goto	l3451
 11292  277A  2F85               u4200:
 11293  277B                     	line	91
 11294                           	
 11295                           l3449:	
 11296  277B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 91:        
                                  fputs((const char *)buf, fp);
 11297                           	movlb 0	; select bank0
 11298  277B  0140               	movf	(pad@fp),w
 11299  277C  0838               	movwf	(??_pad+0)+0
 11300  277D  00B3               	movf	(??_pad+0)+0,w
 11301  277E  0833               	movwf	(fputs@fp)
 11302  277F  00A8               	movf	(pad@buf),w
 11303  2780  0830               	fcall	_fputs
 11304  2781  31A3  2359  31A7   	goto	l3451
 11305  2784  2F85               	line	92
 11306                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 92:     }
 11307                           	
 11308                           l430:	
 11309  2785                     	line	94
 11310                           	
 11311                           l3451:	
 11312  2785                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 94:     ret
                                 urn strlen(buf) + w;
 11313                           	movlb 0	; select bank0
 11314  2785  0140               	movf	(pad@buf),w
 11315  2786  0830               	movwf	(strlen@s)
 11316  2787  00A0               	movlw	0x3
 11317  2788  3003               
 11318                           	movwf	(strlen@s+1)
 11319  2789  00A1               	fcall	_strlen
 11320  278A  31A2  229A  31A7   	movlb 0	; select bank0
 11321  278D  0140               	movf	(pad@w),w
 11322  278E  0836               	addwf	(0+(?_strlen)),w
 11323  278F  0720               	movwf	(?_pad)
 11324  2790  00B0               	movf	(pad@w+1),w
 11325  2791  0837               	addwfc	(1+(?_strlen)),w
 11326  2792  3D21               	movwf	1+(?_pad)
 11327  2793  00B1               	goto	l431
 11328  2794  2F95               	
 11329                           l3453:	
 11330  2795                     	line	95
 11331                           	
 11332                           l431:	
 11333  2795                     	return
 11334  2795  0008               	opt stack 0
 11335                           GLOBAL	__end_of_pad
 11336                           	__end_of_pad:
 11337  2796                     	signat	_pad,12410
 11338                           	global	_strlen
 11339                           
 11340 ;; *************** function _strlen *****************
 11341 ;; Defined at:
 11342 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 11343 ;; Parameters:    Size  Location     Type
 11344 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 11345 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(80), showMenu@s12(12), 
 11346 ;; Auto vars:     Size  Location     Type
 11347 ;;  a               2    4[BANK0 ] PTR const unsigned char 
 11348 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(80), showMenu@s12(12), 
 11349 ;; Return value:  Size  Location     Type
 11350 ;;                  2    0[BANK0 ] unsigned int 
 11351 ;; Registers used:
 11352 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11353 ;; Tracked objects:
 11354 ;;		On entry : 0/0
 11355 ;;		On exit  : 0/0
 11356 ;;		Unchanged: 0/0
 11357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11358 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11359 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11360 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11361 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11362 ;;Total ram usage:        6 bytes
 11363 ;; Hardware stack levels used:    1
 11364 ;; Hardware stack levels required when called:    3
 11365 ;; This function calls:
 11366 ;;		Nothing
 11367 ;; This function is called by:
 11368 ;;		_pad
 11369 ;;		_stoa
 11370 ;; This function uses a non-reentrant model
 11371 ;;
 11372                           psect	text15,local,class=CODE,delta=2,merge=1,group=2
 11373                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 11374                           	line	12
 11375                           global __ptext15
 11376                           __ptext15:	;psect for function _strlen
 11377  229A                     psect	text15
 11378                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 11379                           	line	12
 11380                           	global	__size_of_strlen
 11381                           	__size_of_strlen	equ	__end_of_strlen-_strlen
 11382  0024                     	
 11383                           _strlen:	
 11384  229A                     ;incstack = 0
 11385                           	opt	stack 7
 11386                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 11387                           	line	14
 11388                           	
 11389                           l3205:	
 11390  229A                     	movlb 0	; select bank0
 11391  229A  0140               	movf	(strlen@s+1),w
 11392  229B  0821               	movwf	(strlen@a+1)
 11393  229C  00A5               	movf	(strlen@s),w
 11394  229D  0820               	movwf	(strlen@a)
 11395  229E  00A4               	line	16
 11396                           	goto	l3209
 11397  229F  2AA5               	
 11398                           l1137:	
 11399  22A0                     	line	17
 11400                           	
 11401                           l3207:	
 11402  22A0                     	movlw	01h
 11403  22A0  3001               	addwf	(strlen@s),f
 11404  22A1  07A0               	movlw	0
 11405  22A2  3000               	addwfc	(strlen@s+1),f
 11406  22A3  3DA1               	goto	l3209
 11407  22A4  2AA5               	line	18
 11408                           	
 11409                           l1136:	
 11410  22A5                     	line	16
 11411                           	
 11412                           l3209:	
 11413  22A5                     	movf	(strlen@s),w
 11414  22A5  0820               	movwf	fsr1l
 11415  22A6  0086               	movf	(strlen@s+1),w
 11416  22A7  0821               	movwf	fsr1h
 11417  22A8  0087               
 11418                           	movf	(indf1),w
 11419  22A9  0801               	btfss	status,2
 11420  22AA  1D03               	goto	u3651
 11421  22AB  2AAD               	goto	u3650
 11422  22AC  2AAE               u3651:
 11423  22AD                     	goto	l3207
 11424  22AD  2AA0               u3650:
 11425  22AE                     	goto	l3211
 11426  22AE  2AAF               	
 11427                           l1138:	
 11428  22AF                     	line	25
 11429                           	
 11430                           l3211:	
 11431  22AF                     	comf	(strlen@a),w
 11432  22AF  0924               	movwf	(??_strlen+0)+0
 11433  22B0  00A2               	comf	(strlen@a+1),w
 11434  22B1  0925               	movwf	((??_strlen+0)+0+1)
 11435  22B2  00A3               	incf	(??_strlen+0)+0,f
 11436  22B3  0AA2               	skipnz
 11437  22B4  1903               	incf	((??_strlen+0)+0+1),f
 11438  22B5  0AA3               	movf	(strlen@s),w
 11439  22B6  0820               	addwf	0+(??_strlen+0)+0,w
 11440  22B7  0722               	movwf	(?_strlen)
 11441  22B8  00A0               	movf	(strlen@s+1),w
 11442  22B9  0821               	addwfc	1+(??_strlen+0)+0,w
 11443  22BA  3D23               	movwf	1+(?_strlen)
 11444  22BB  00A1               	goto	l1139
 11445  22BC  2ABD               	
 11446                           l3213:	
 11447  22BD                     	line	26
 11448                           	
 11449                           l1139:	
 11450  22BD                     	return
 11451  22BD  0008               	opt stack 0
 11452                           GLOBAL	__end_of_strlen
 11453                           	__end_of_strlen:
 11454  22BE                     	signat	_strlen,4218
 11455                           	global	_fputs
 11456                           
 11457 ;; *************** function _fputs *****************
 11458 ;; Defined at:
 11459 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
 11460 ;; Parameters:    Size  Location     Type
 11461 ;;  s               1    wreg     PTR const unsigned char 
 11462 ;;		 -> dbuf(80), 
 11463 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
 11464 ;;		 -> sprintf@f(5), 
 11465 ;; Auto vars:     Size  Location     Type
 11466 ;;  s               1   15[BANK0 ] PTR const unsigned char 
 11467 ;;		 -> dbuf(80), 
 11468 ;;  i               2   13[BANK0 ] int 
 11469 ;;  c               1   12[BANK0 ] unsigned char 
 11470 ;; Return value:  Size  Location     Type
 11471 ;;                  2    8[BANK0 ] int 
 11472 ;; Registers used:
 11473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11474 ;; Tracked objects:
 11475 ;;		On entry : 0/0
 11476 ;;		On exit  : 0/0
 11477 ;;		Unchanged: 0/0
 11478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11479 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11480 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11481 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11482 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11483 ;;Total ram usage:        8 bytes
 11484 ;; Hardware stack levels used:    1
 11485 ;; Hardware stack levels required when called:    5
 11486 ;; This function calls:
 11487 ;;		_fputc
 11488 ;; This function is called by:
 11489 ;;		_pad
 11490 ;; This function uses a non-reentrant model
 11491 ;;
 11492                           psect	text16,local,class=CODE,delta=2,merge=1,group=2
 11493                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
 11494                           	line	8
 11495                           global __ptext16
 11496                           __ptext16:	;psect for function _fputs
 11497  2359                     psect	text16
 11498                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
 11499                           	line	8
 11500                           	global	__size_of_fputs
 11501                           	__size_of_fputs	equ	__end_of_fputs-_fputs
 11502  002B                     	
 11503                           _fputs:	
 11504  2359                     ;incstack = 0
 11505                           	opt	stack 4
 11506                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11507                           ;fputs@s stored from wreg
 11508                           	movlb 0	; select bank0
 11509  2359  0140               	movwf	(fputs@s)
 11510  235A  00AF               	line	13
 11511                           	
 11512                           l3197:	
 11513  235B                     	clrf	(fputs@i)
 11514  235B  01AD               	clrf	(fputs@i+1)
 11515  235C  01AE               	line	14
 11516                           	goto	l3203
 11517  235D  2B72               	
 11518                           l1115:	
 11519  235E                     	line	15
 11520                           	
 11521                           l3199:	
 11522  235E                     	movf	(fputs@c),w
 11523  235E  082C               	movwf	(??_fputs+0)+0
 11524  235F  00A9               	clrf	(??_fputs+0)+0+1
 11525  2360  01AA               	movf	0+(??_fputs+0)+0,w
 11526  2361  0829               	movwf	(fputc@c)
 11527  2362  00A0               	movf	1+(??_fputs+0)+0,w
 11528  2363  082A               	movwf	(fputc@c+1)
 11529  2364  00A1               	movf	(fputs@fp),w
 11530  2365  0828               	movwf	(??_fputs+2)+0
 11531  2366  00AB               	movf	(??_fputs+2)+0,w
 11532  2367  082B               	movwf	(fputc@fp)
 11533  2368  00A2               	fcall	_fputc
 11534  2369  31A6  26D8  31A3   	line	16
 11535                           	
 11536                           l3201:	
 11537  236C                     	movlw	01h
 11538  236C  3001               	movlb 0	; select bank0
 11539  236D  0140               	addwf	(fputs@i),f
 11540  236E  07AD               	movlw	0
 11541  236F  3000               	addwfc	(fputs@i+1),f
 11542  2370  3DAE               	goto	l3203
 11543  2371  2B72               	line	17
 11544                           	
 11545                           l1114:	
 11546  2372                     	line	14
 11547                           	
 11548                           l3203:	
 11549  2372                     	movf	(fputs@i),w
 11550  2372  082D               	addwf	(fputs@s),w
 11551  2373  072F               	movwf	(??_fputs+0)+0
 11552  2374  00A9               	movf	0+(??_fputs+0)+0,w
 11553  2375  0829               	movwf	fsr1l
 11554  2376  0086               	movlw 3	; select bank6/7
 11555  2377  3003               	movwf fsr1h	
 11556  2378  0087               	
 11557                           	movf	indf1,w
 11558  2379  0801               	movwf	(??_fputs+1)+0
 11559  237A  00AA               	movf	(??_fputs+1)+0,w
 11560  237B  082A               	movwf	(fputs@c)
 11561  237C  00AC               	movf	(((fputs@c))),w
 11562  237D  082C               	btfss	status,2
 11563  237E  1D03               	goto	u3641
 11564  237F  2B81               	goto	u3640
 11565  2380  2B82               u3641:
 11566  2381                     	goto	l3199
 11567  2381  2B5E               u3640:
 11568  2382                     	goto	l1117
 11569  2382  2B83               	
 11570                           l1116:	
 11571  2383                     	line	19
 11572                           ;	Return value of _fputs is never used
 11573                           	
 11574                           l1117:	
 11575  2383                     	return
 11576  2383  0008               	opt stack 0
 11577                           GLOBAL	__end_of_fputs
 11578                           	__end_of_fputs:
 11579  2384                     	signat	_fputs,8314
 11580                           	global	_fputc
 11581                           
 11582 ;; *************** function _fputc *****************
 11583 ;; Defined at:
 11584 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
 11585 ;; Parameters:    Size  Location     Type
 11586 ;;  c               2    0[BANK0 ] int 
 11587 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
 11588 ;;		 -> sprintf@f(5), 
 11589 ;; Auto vars:     Size  Location     Type
 11590 ;;		None
 11591 ;; Return value:  Size  Location     Type
 11592 ;;                  2    0[BANK0 ] int 
 11593 ;; Registers used:
 11594 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11595 ;; Tracked objects:
 11596 ;;		On entry : 0/0
 11597 ;;		On exit  : 0/0
 11598 ;;		Unchanged: 0/0
 11599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11600 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11602 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11603 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11604 ;;Total ram usage:        8 bytes
 11605 ;; Hardware stack levels used:    1
 11606 ;; Hardware stack levels required when called:    4
 11607 ;; This function calls:
 11608 ;;		_putch
 11609 ;; This function is called by:
 11610 ;;		_pad
 11611 ;;		_stoa
 11612 ;;		_vfpfcnvrt
 11613 ;;		_fputs
 11614 ;; This function uses a non-reentrant model
 11615 ;;
 11616                           psect	text17,local,class=CODE,delta=2,merge=1,group=2
 11617                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
 11618                           	line	8
 11619                           global __ptext17
 11620                           __ptext17:	;psect for function _fputc
 11621  26D8                     psect	text17
 11622                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
 11623                           	line	8
 11624                           	global	__size_of_fputc
 11625                           	__size_of_fputc	equ	__end_of_fputc-_fputc
 11626  005E                     	
 11627                           _fputc:	
 11628  26D8                     ;incstack = 0
 11629                           	opt	stack 6
 11630                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11631                           	line	12
 11632                           	
 11633                           l3175:	
 11634  26D8                     	movlb 0	; select bank0
 11635  26D8  0140               	movf	((fputc@fp)),w
 11636  26D9  0822               	btfsc	status,2
 11637  26DA  1903               	goto	u3601
 11638  26DB  2EDD               	goto	u3600
 11639  26DC  2EDE               u3601:
 11640  26DD                     	goto	l3179
 11641  26DD  2EE4               u3600:
 11642  26DE                     	
 11643                           l3177:	
 11644  26DE                     	movf	((fputc@fp)),w
 11645  26DE  0822               	btfss	status,2
 11646  26DF  1D03               	goto	u3611
 11647  26E0  2EE2               	goto	u3610
 11648  26E1  2EE3               u3611:
 11649  26E2                     	goto	l3181
 11650  26E2  2EE9               u3610:
 11651  26E3                     	goto	l3179
 11652  26E3  2EE4               	
 11653                           l1104:	
 11654  26E4                     	line	13
 11655                           	
 11656                           l3179:	
 11657  26E4                     	movf	(fputc@c),w
 11658  26E4  0820               	fcall	_putch
 11659  26E5  3187  27FE  31A6   	line	14
 11660                           	goto	l1109
 11661  26E8  2F35               	
 11662                           l1102:	
 11663  26E9                     	line	15
 11664                           	
 11665                           l3181:	
 11666  26E9                     	movlb 0	; select bank0
 11667  26E9  0140               	movf	(fputc@fp),w
 11668  26EA  0822               	addlw	03h
 11669  26EB  3E03               	movwf	fsr1l
 11670  26EC  0086               	movlw 1	; select bank2/3
 11671  26ED  3001               	movwf fsr1h	
 11672  26EE  0087               	
 11673                           		moviw	fsr1++
 11674  26EF  0016               	iorwf	indf1,w
 11675  26F0  0401               	btfsc	status,2
 11676  26F1  1903               	goto	u3621
 11677  26F2  2EF4               	goto	u3620
 11678  26F3  2EF5               
 11679                           u3621:
 11680  26F4                     	goto	l3185
 11681  26F4  2F15               u3620:
 11682  26F5                     	
 11683                           l3183:	
 11684  26F5                     	movf	(fputc@fp),w
 11685  26F5  0822               	addlw	03h
 11686  26F6  3E03               	movwf	fsr1l
 11687  26F7  0086               	movlw 1	; select bank2/3
 11688  26F8  3001               	movwf fsr1h	
 11689  26F9  0087               	
 11690                           	moviw	[0]fsr1
 11691  26FA  3F40               	movwf	(??_fputc+0)+0
 11692  26FB  00A3               	moviw	[1]fsr1
 11693  26FC  3F41               	movwf	(??_fputc+0)+0+1
 11694  26FD  00A4               	incf	(fputc@fp),w
 11695  26FE  0A22               	movwf	fsr1l
 11696  26FF  0086               	movlw 1	; select bank2/3
 11697  2700  3001               	movwf fsr1h	
 11698  2701  0087               	
 11699                           	moviw	[0]fsr1
 11700  2702  3F40               	movwf	(??_fputc+2)+0
 11701  2703  00A5               	moviw	[1]fsr1
 11702  2704  3F41               	movwf	(??_fputc+2)+0+1
 11703  2705  00A6               	movf	1+(??_fputc+2)+0,w
 11704  2706  0826               	xorlw	80h
 11705  2707  3A80               	movwf	(??_fputc+4)+0
 11706  2708  00A7               	movf	1+(??_fputc+0)+0,w
 11707  2709  0824               	xorlw	80h
 11708  270A  3A80               	subwf	(??_fputc+4)+0,w
 11709  270B  0227               	skipz
 11710  270C  1D03               	goto	u3635
 11711  270D  2F10               	movf	0+(??_fputc+0)+0,w
 11712  270E  0823               	subwf	0+(??_fputc+2)+0,w
 11713  270F  0225               u3635:
 11714  2710                     
 11715                           	skipnc
 11716  2710  1803               	goto	u3631
 11717  2711  2F13               	goto	u3630
 11718  2712  2F14               u3631:
 11719  2713                     	goto	l1109
 11720  2713  2F35               u3630:
 11721  2714                     	goto	l3185
 11722  2714  2F15               	
 11723                           l1108:	
 11724  2715                     	line	16
 11725                           	
 11726                           l3185:	
 11727  2715                     	movlb 0	; select bank0
 11728  2715  0140               	movf	(fputc@c),w
 11729  2716  0820               	movwf	(??_fputc+0)+0
 11730  2717  00A3               	movf	(fputc@fp),w
 11731  2718  0822               	movwf	fsr1l
 11732  2719  0086               	movlw 1	; select bank2/3
 11733  271A  3001               	movwf fsr1h	
 11734  271B  0087               	
 11735                           	incf	(fputc@fp),w
 11736  271C  0A22               	movwf	fsr0l
 11737  271D  0084               	movlw 1	; select bank2/3
 11738  271E  3001               	movwf fsr0h	
 11739  271F  0085               	
 11740                           	movf	indf0,w
 11741  2720  0800               	addwf	indf1,w
 11742  2721  0701               	movwf	(??_fputc+1)+0
 11743  2722  00A4               	movf	0+(??_fputc+1)+0,w
 11744  2723  0824               	movwf	fsr1l
 11745  2724  0086               	movlw 1	; select bank2/3
 11746  2725  3001               	movwf fsr1h	
 11747  2726  0087               	
 11748                           	movf	(??_fputc+0)+0,w
 11749  2727  0823               	movwf	indf1
 11750  2728  0081               	line	17
 11751                           	
 11752                           l3187:	
 11753  2729                     	incf	(fputc@fp),w
 11754  2729  0A22               	movwf	fsr1l
 11755  272A  0086               	movlw 1	; select bank2/3
 11756  272B  3001               	movwf fsr1h	
 11757  272C  0087               	
 11758                           	movlw	01h
 11759  272D  3001               	addwf	indf1,f
 11760  272E  0781               	addfsr	fsr1,1
 11761  272F  3141               	skipnc
 11762  2730  1803               	incf	indf1,f
 11763  2731  0A81               	goto	l1109
 11764  2732  2F35               	line	18
 11765                           	
 11766                           l1106:	
 11767  2733                     	goto	l1109
 11768  2733  2F35               	line	19
 11769                           	
 11770                           l1105:	
 11771  2734                     	goto	l1109
 11772  2734  2F35               	line	20
 11773                           	
 11774                           l3189:	
 11775  2735                     	line	21
 11776                           ;	Return value of _fputc is never used
 11777                           	
 11778                           l1109:	
 11779  2735                     	return
 11780  2735  0008               	opt stack 0
 11781                           GLOBAL	__end_of_fputc
 11782                           	__end_of_fputc:
 11783  2736                     	signat	_fputc,8314
 11784                           	global	_putch
 11785                           
 11786 ;; *************** function _putch *****************
 11787 ;; Defined at:
 11788 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
 11789 ;; Parameters:    Size  Location     Type
 11790 ;;  c               1    wreg     unsigned char 
 11791 ;; Auto vars:     Size  Location     Type
 11792 ;;  c               1    0[COMMON] unsigned char 
 11793 ;; Return value:  Size  Location     Type
 11794 ;;                  1    wreg      void 
 11795 ;; Registers used:
 11796 ;;		wreg
 11797 ;; Tracked objects:
 11798 ;;		On entry : 0/0
 11799 ;;		On exit  : 0/0
 11800 ;;		Unchanged: 0/0
 11801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11806 ;;Total ram usage:        0 bytes
 11807 ;; Hardware stack levels used:    1
 11808 ;; Hardware stack levels required when called:    3
 11809 ;; This function calls:
 11810 ;;		Nothing
 11811 ;; This function is called by:
 11812 ;;		_fputc
 11813 ;; This function uses a non-reentrant model
 11814 ;;
 11815                           psect	text18,local,class=CODE,delta=2,merge=1,group=2
 11816                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
 11817                           	line	7
 11818                           global __ptext18
 11819                           __ptext18:	;psect for function _putch
 11820  07FE                     psect	text18
 11821                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
 11822                           	line	7
 11823                           	global	__size_of_putch
 11824                           	__size_of_putch	equ	__end_of_putch-_putch
 11825  0001                     	
 11826                           _putch:	
 11827  07FE                     ;incstack = 0
 11828                           	opt	stack 6
 11829                           ; Regs used in _putch: [wreg]
 11830                           	line	9
 11831                           	
 11832                           l1127:	
 11833  07FE                     	return
 11834  07FE  0008               	opt stack 0
 11835                           GLOBAL	__end_of_putch
 11836                           	__end_of_putch:
 11837  07FF                     	signat	_putch,4217
 11838                           	global	_floorf
 11839                           
 11840 ;; *************** function _floorf *****************
 11841 ;; Defined at:
 11842 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\floorf.c"
 11843 ;; Parameters:    Size  Location     Type
 11844 ;;  x               4   66[BANK0 ] float 
 11845 ;; Auto vars:     Size  Location     Type
 11846 ;;  u               4    6[BANK1 ] struct .
 11847 ;;  m               4    0[BANK1 ] unsigned long 
 11848 ;;  e               2    4[BANK1 ] int 
 11849 ;; Return value:  Size  Location     Type
 11850 ;;                  4   66[BANK0 ] float 
 11851 ;; Registers used:
 11852 ;;		wreg, status,2, status,0
 11853 ;; Tracked objects:
 11854 ;;		On entry : 0/0
 11855 ;;		On exit  : 0/0
 11856 ;;		Unchanged: 0/0
 11857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11858 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11859 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11860 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11861 ;;      Totals:         0      10      10       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11862 ;;Total ram usage:       20 bytes
 11863 ;; Hardware stack levels used:    1
 11864 ;; Hardware stack levels required when called:    3
 11865 ;; This function calls:
 11866 ;;		Nothing
 11867 ;; This function is called by:
 11868 ;;		_efgtoa
 11869 ;; This function uses a non-reentrant model
 11870 ;;
 11871                           psect	text19,local,class=CODE,delta=2,merge=1,group=2
 11872                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\floorf.c"
 11873                           	line	3
 11874                           global __ptext19
 11875                           __ptext19:	;psect for function _floorf
 11876  1126                     psect	text19
 11877                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\floorf.c"
 11878                           	line	3
 11879                           	global	__size_of_floorf
 11880                           	__size_of_floorf	equ	__end_of_floorf-_floorf
 11881  0145                     	
 11882                           _floorf:	
 11883  1126                     ;incstack = 0
 11884                           	opt	stack 7
 11885                           ; Regs used in _floorf: [wreg+status,2+status,0]
 11886                           	line	5
 11887                           	
 11888                           l3493:	
 11889  1126                     	movlb 4	; select bank4
 11890  1126  0144               	movf	(floorf@F514+3)^0200h,w
 11891  1127  0823               	movlb 1	; select bank1
 11892  1128  0141               	movwf	(floorf@u+3)^080h
 11893  1129  00A9               	movlb 4	; select bank4
 11894  112A  0144               	movf	(floorf@F514+2)^0200h,w
 11895  112B  0822               	movlb 1	; select bank1
 11896  112C  0141               	movwf	(floorf@u+2)^080h
 11897  112D  00A8               	movlb 4	; select bank4
 11898  112E  0144               	movf	(floorf@F514+1)^0200h,w
 11899  112F  0821               	movlb 1	; select bank1
 11900  1130  0141               	movwf	(floorf@u+1)^080h
 11901  1131  00A7               	movlb 4	; select bank4
 11902  1132  0144               	movf	(floorf@F514)^0200h,w
 11903  1133  0820               	movlb 1	; select bank1
 11904  1134  0141               	movwf	(floorf@u)^080h
 11905  1135  00A6               
 11906                           	movlb 0	; select bank0
 11907  1136  0140               	movf	(floorf@x+3),w
 11908  1137  0865               	movlb 1	; select bank1
 11909  1138  0141               	movwf	(floorf@u+3)^080h
 11910  1139  00A9               	movlb 0	; select bank0
 11911  113A  0140               	movf	(floorf@x+2),w
 11912  113B  0864               	movlb 1	; select bank1
 11913  113C  0141               	movwf	(floorf@u+2)^080h
 11914  113D  00A8               	movlb 0	; select bank0
 11915  113E  0140               	movf	(floorf@x+1),w
 11916  113F  0863               	movlb 1	; select bank1
 11917  1140  0141               	movwf	(floorf@u+1)^080h
 11918  1141  00A7               	movlb 0	; select bank0
 11919  1142  0140               	movf	(floorf@x),w
 11920  1143  0862               	movlb 1	; select bank1
 11921  1144  0141               	movwf	(floorf@u)^080h
 11922  1145  00A6               
 11923                           	line	6
 11924                           	
 11925                           l3495:	
 11926  1146                     	movf	(floorf@u)^080h,w
 11927  1146  0826               	movlb 0	; select bank0
 11928  1147  0140               	movwf	(??_floorf+0)+0
 11929  1148  00E6               	movlb 1	; select bank1
 11930  1149  0141               	movf	(floorf@u+1)^080h,w
 11931  114A  0827               	movlb 0	; select bank0
 11932  114B  0140               	movwf	((??_floorf+0)+0+1)
 11933  114C  00E7               	movlb 1	; select bank1
 11934  114D  0141               	movf	(floorf@u+2)^080h,w
 11935  114E  0828               	movlb 0	; select bank0
 11936  114F  0140               	movwf	((??_floorf+0)+0+2)
 11937  1150  00E8               	movlb 1	; select bank1
 11938  1151  0141               	movf	(floorf@u+3)^080h,w
 11939  1152  0829               	movlb 0	; select bank0
 11940  1153  0140               	movwf	((??_floorf+0)+0+3)
 11941  1154  00E9               	movlw	017h
 11942  1155  3017               u4335:
 11943  1156                     	lsrf	(??_floorf+0)+3,f
 11944  1156  36E9               	rrf	(??_floorf+0)+2,f
 11945  1157  0CE8               	rrf	(??_floorf+0)+1,f
 11946  1158  0CE7               	rrf	(??_floorf+0)+0,f
 11947  1159  0CE6               u4330:
 11948  115A                     	decfsz	wreg,f
 11949  115A  0B89               	goto	u4335
 11950  115B  2956               	movlw	0FFh
 11951  115C  30FF               	andwf	0+(??_floorf+0)+0,w
 11952  115D  0566               	movwf	(??_floorf+4)+0
 11953  115E  00EA               	movlw	0
 11954  115F  3000               	andwf	1+(??_floorf+0)+0,w
 11955  1160  0567               	movwf	1+(??_floorf+4)+0
 11956  1161  00EB               	movf	0+(??_floorf+4)+0,w
 11957  1162  086A               	addlw	081h
 11958  1163  3E81               	movlb 1	; select bank1
 11959  1164  0141               	movwf	(floorf@e)^080h
 11960  1165  00A4               	movlw	0FFh
 11961  1166  30FF               	movlb 0	; select bank0
 11962  1167  0140               	addwfc	1+(??_floorf+4)+0,w
 11963  1168  3D6B               	movlb 1	; select bank1
 11964  1169  0141               	movwf	1+(floorf@e)^080h
 11965  116A  00A5               	line	9
 11966                           	
 11967                           l3497:	
 11968  116B                     	movf	(floorf@e+1)^080h,w
 11969  116B  0825               	xorlw	80h
 11970  116C  3A80               	movlb 0	; select bank0
 11971  116D  0140               	movwf	(??_floorf+0)+0
 11972  116E  00E6               	movlw	(0)^80h
 11973  116F  3080               	subwf	(??_floorf+0)+0,w
 11974  1170  0266               	skipz
 11975  1171  1D03               	goto	u4345
 11976  1172  2976               	movlw	017h
 11977  1173  3017               	movlb 1	; select bank1
 11978  1174  0141               	subwf	(floorf@e)^080h,w
 11979  1175  0224               u4345:
 11980  1176                     
 11981                           	skipc
 11982  1176  1C03               	goto	u4341
 11983  1177  2979               	goto	u4340
 11984  1178  297A               u4341:
 11985  1179                     	goto	l1069
 11986  1179  297B               u4340:
 11987  117A                     	line	10
 11988                           	
 11989                           l3499:	
 11990  117A                     	goto	l1070
 11991  117A  2A6A               	
 11992                           l1069:	
 11993  117B                     	line	11
 11994                           	movlb 1	; select bank1
 11995  117B  0141               	btfsc	(floorf@e+1)^080h,7
 11996  117C  1BA5               	goto	u4351
 11997  117D  297F               	goto	u4350
 11998  117E  2980               u4351:
 11999  117F                     	goto	l3513
 12000  117F  2A07               u4350:
 12001  1180                     	line	12
 12002                           	
 12003                           l3501:	
 12004  1180                     	movlw	0FFh
 12005  1180  30FF               	movlb 0	; select bank0
 12006  1181  0140               	movwf	((??_floorf+0)+0)
 12007  1182  00E6               	movlw	0FFh
 12008  1183  30FF               	movwf	((??_floorf+0)+0+1)
 12009  1184  00E7               	movlw	07Fh
 12010  1185  307F               	movwf	((??_floorf+0)+0+2)
 12011  1186  00E8               	movlw	0
 12012  1187  3000               	movwf	((??_floorf+0)+0+3)
 12013  1188  00E9               	movlb 1	; select bank1
 12014  1189  0141               	incf	(floorf@e)^080h,w
 12015  118A  0A24               	movlb 0	; select bank0
 12016  118B  0140               	goto	u4360
 12017  118C  2991               u4365:
 12018  118D                     	asrf	(??_floorf+0)+3,f
 12019  118D  37E9               	rrf	(??_floorf+0)+2,f
 12020  118E  0CE8               	rrf	(??_floorf+0)+1,f
 12021  118F  0CE7               	rrf	(??_floorf+0)+0,f
 12022  1190  0CE6               u4360:
 12023  1191                     	decfsz	wreg,f
 12024  1191  0B89               	goto	u4365
 12025  1192  298D               	movf	3+(??_floorf+0)+0,w
 12026  1193  0869               	movlb 1	; select bank1
 12027  1194  0141               	movwf	(floorf@m+3)^080h
 12028  1195  00A3               	movlb 0	; select bank0
 12029  1196  0140               	movf	2+(??_floorf+0)+0,w
 12030  1197  0868               	movlb 1	; select bank1
 12031  1198  0141               	movwf	(floorf@m+2)^080h
 12032  1199  00A2               	movlb 0	; select bank0
 12033  119A  0140               	movf	1+(??_floorf+0)+0,w
 12034  119B  0867               	movlb 1	; select bank1
 12035  119C  0141               	movwf	(floorf@m+1)^080h
 12036  119D  00A1               	movlb 0	; select bank0
 12037  119E  0140               	movf	0+(??_floorf+0)+0,w
 12038  119F  0866               	movlb 1	; select bank1
 12039  11A0  0141               	movwf	(floorf@m)^080h
 12040  11A1  00A0               
 12041                           	line	13
 12042                           	
 12043                           l3503:	
 12044  11A2                     	movf	(floorf@u)^080h,w
 12045  11A2  0826               	andwf	(floorf@m)^080h,w
 12046  11A3  0520               	movlb 0	; select bank0
 12047  11A4  0140               	movwf	((??_floorf+0)+0+0)
 12048  11A5  00E6               	movlb 1	; select bank1
 12049  11A6  0141               	movf	(floorf@u+1)^080h,w
 12050  11A7  0827               	andwf	(floorf@m+1)^080h,w
 12051  11A8  0521               	movlb 0	; select bank0
 12052  11A9  0140               	movwf	((??_floorf+0)+0+1)
 12053  11AA  00E7               	movlb 1	; select bank1
 12054  11AB  0141               	movf	(floorf@u+2)^080h,w
 12055  11AC  0828               	andwf	(floorf@m+2)^080h,w
 12056  11AD  0522               	movlb 0	; select bank0
 12057  11AE  0140               	movwf	((??_floorf+0)+0+2)
 12058  11AF  00E8               	movlb 1	; select bank1
 12059  11B0  0141               	movf	(floorf@u+3)^080h,w
 12060  11B1  0829               	andwf	(floorf@m+3)^080h,w
 12061  11B2  0523               	movlb 0	; select bank0
 12062  11B3  0140               	movwf	((??_floorf+0)+0+3)
 12063  11B4  00E9               	movf	3+(??_floorf+0)+0,w
 12064  11B5  0869               	iorwf	2+(??_floorf+0)+0,w
 12065  11B6  0468               	iorwf	1+(??_floorf+0)+0,w
 12066  11B7  0467               	iorwf	0+(??_floorf+0)+0,w
 12067  11B8  0466               	skipz
 12068  11B9  1D03               	goto	u4371
 12069  11BA  29BC               	goto	u4370
 12070  11BB  29BD               u4371:
 12071  11BC                     	goto	l3507
 12072  11BC  29BE               u4370:
 12073  11BD                     	line	14
 12074                           	
 12075                           l3505:	
 12076  11BD                     	goto	l1070
 12077  11BD  2A6A               	
 12078                           l1072:	
 12079  11BE                     	line	16
 12080                           	
 12081                           l3507:	
 12082  11BE                     	movlb 1	; select bank1
 12083  11BE  0141               	movf	(floorf@u)^080h,w
 12084  11BF  0826               	movlb 0	; select bank0
 12085  11C0  0140               	movwf	(??_floorf+0)+0
 12086  11C1  00E6               	movlb 1	; select bank1
 12087  11C2  0141               	movf	(floorf@u+1)^080h,w
 12088  11C3  0827               	movlb 0	; select bank0
 12089  11C4  0140               	movwf	((??_floorf+0)+0+1)
 12090  11C5  00E7               	movlb 1	; select bank1
 12091  11C6  0141               	movf	(floorf@u+2)^080h,w
 12092  11C7  0828               	movlb 0	; select bank0
 12093  11C8  0140               	movwf	((??_floorf+0)+0+2)
 12094  11C9  00E8               	movlb 1	; select bank1
 12095  11CA  0141               	movf	(floorf@u+3)^080h,w
 12096  11CB  0829               	movlb 0	; select bank0
 12097  11CC  0140               	movwf	((??_floorf+0)+0+3)
 12098  11CD  00E9               	movlw	01Fh
 12099  11CE  301F               u4385:
 12100  11CF                     	lsrf	(??_floorf+0)+3,f
 12101  11CF  36E9               	rrf	(??_floorf+0)+2,f
 12102  11D0  0CE8               	rrf	(??_floorf+0)+1,f
 12103  11D1  0CE7               	rrf	(??_floorf+0)+0,f
 12104  11D2  0CE6               u4380:
 12105  11D3                     	decfsz	wreg,f
 12106  11D3  0B89               	goto	u4385
 12107  11D4  29CF               	movf	3+(??_floorf+0)+0,w
 12108  11D5  0869               	iorwf	2+(??_floorf+0)+0,w
 12109  11D6  0468               	iorwf	1+(??_floorf+0)+0,w
 12110  11D7  0467               	iorwf	0+(??_floorf+0)+0,w
 12111  11D8  0466               	skipnz
 12112  11D9  1903               	goto	u4391
 12113  11DA  29DC               	goto	u4390
 12114  11DB  29DD               u4391:
 12115  11DC                     	goto	l3511
 12116  11DC  29E7               u4390:
 12117  11DD                     	line	17
 12118                           	
 12119                           l3509:	
 12120  11DD                     	movlb 1	; select bank1
 12121  11DD  0141               	movf	(floorf@m)^080h,w
 12122  11DE  0820               	addwf	(floorf@u)^080h,f
 12123  11DF  07A6               	movf	(floorf@m+1)^080h,w
 12124  11E0  0821               	addwfc	(floorf@u+1)^080h,f
 12125  11E1  3DA7               	movf	(floorf@m+2)^080h,w
 12126  11E2  0822               	addwfc	(floorf@u+2)^080h,f
 12127  11E3  3DA8               	movf	(floorf@m+3)^080h,w
 12128  11E4  0823               	addwfc	(floorf@u+3)^080h,f
 12129  11E5  3DA9               	goto	l3511
 12130  11E6  29E7               	
 12131                           l1073:	
 12132  11E7                     	line	18
 12133                           	
 12134                           l3511:	
 12135  11E7                     	movlb 1	; select bank1
 12136  11E7  0141               	comf	(floorf@m)^080h,w
 12137  11E8  0920               	movlb 0	; select bank0
 12138  11E9  0140               	movwf	(??_floorf+0)+0
 12139  11EA  00E6               	movlb 1	; select bank1
 12140  11EB  0141               	comf	(floorf@m+1)^080h,w
 12141  11EC  0921               	movlb 0	; select bank0
 12142  11ED  0140               	movwf	((??_floorf+0)+0+1)
 12143  11EE  00E7               	movlb 1	; select bank1
 12144  11EF  0141               	comf	(floorf@m+2)^080h,w
 12145  11F0  0922               	movlb 0	; select bank0
 12146  11F1  0140               	movwf	((??_floorf+0)+0+2)
 12147  11F2  00E8               	movlb 1	; select bank1
 12148  11F3  0141               	comf	(floorf@m+3)^080h,w
 12149  11F4  0923               	movlb 0	; select bank0
 12150  11F5  0140               	movwf	((??_floorf+0)+0+3)
 12151  11F6  00E9               
 12152                           	movf	0+(??_floorf+0)+0,w
 12153  11F7  0866               	movlb 1	; select bank1
 12154  11F8  0141               	andwf	(floorf@u)^080h,f
 12155  11F9  05A6               	movlb 0	; select bank0
 12156  11FA  0140               	movf	1+(??_floorf+0)+0,w
 12157  11FB  0867               	movlb 1	; select bank1
 12158  11FC  0141               	andwf	(floorf@u+1)^080h,f
 12159  11FD  05A7               	movlb 0	; select bank0
 12160  11FE  0140               	movf	2+(??_floorf+0)+0,w
 12161  11FF  0868               	movlb 1	; select bank1
 12162  1200  0141               	andwf	(floorf@u+2)^080h,f
 12163  1201  05A8               	movlb 0	; select bank0
 12164  1202  0140               	movf	3+(??_floorf+0)+0,w
 12165  1203  0869               	movlb 1	; select bank1
 12166  1204  0141               	andwf	(floorf@u+3)^080h,f
 12167  1205  05A9               	line	19
 12168                           	goto	l1074
 12169  1206  2A59               	
 12170                           l1071:	
 12171  1207                     	line	21
 12172                           	
 12173                           l3513:	
 12174  1207                     	movf	(floorf@u)^080h,w
 12175  1207  0826               	movlb 0	; select bank0
 12176  1208  0140               	movwf	(??_floorf+0)+0
 12177  1209  00E6               	movlb 1	; select bank1
 12178  120A  0141               	movf	(floorf@u+1)^080h,w
 12179  120B  0827               	movlb 0	; select bank0
 12180  120C  0140               	movwf	((??_floorf+0)+0+1)
 12181  120D  00E7               	movlb 1	; select bank1
 12182  120E  0141               	movf	(floorf@u+2)^080h,w
 12183  120F  0828               	movlb 0	; select bank0
 12184  1210  0140               	movwf	((??_floorf+0)+0+2)
 12185  1211  00E8               	movlb 1	; select bank1
 12186  1212  0141               	movf	(floorf@u+3)^080h,w
 12187  1213  0829               	movlb 0	; select bank0
 12188  1214  0140               	movwf	((??_floorf+0)+0+3)
 12189  1215  00E9               	movlw	01Fh
 12190  1216  301F               u4405:
 12191  1217                     	lsrf	(??_floorf+0)+3,f
 12192  1217  36E9               	rrf	(??_floorf+0)+2,f
 12193  1218  0CE8               	rrf	(??_floorf+0)+1,f
 12194  1219  0CE7               	rrf	(??_floorf+0)+0,f
 12195  121A  0CE6               u4400:
 12196  121B                     	decfsz	wreg,f
 12197  121B  0B89               	goto	u4405
 12198  121C  2A17               	movf	3+(??_floorf+0)+0,w
 12199  121D  0869               	iorwf	2+(??_floorf+0)+0,w
 12200  121E  0468               	iorwf	1+(??_floorf+0)+0,w
 12201  121F  0467               	iorwf	0+(??_floorf+0)+0,w
 12202  1220  0466               	skipz
 12203  1221  1D03               	goto	u4411
 12204  1222  2A24               	goto	u4410
 12205  1223  2A25               u4411:
 12206  1224                     	goto	l3517
 12207  1224  2A2F               u4410:
 12208  1225                     	line	22
 12209                           	
 12210                           l3515:	
 12211  1225                     	movlw	high highword(0)
 12212  1225  3000               	movlb 1	; select bank1
 12213  1226  0141               	movwf	(floorf@u+3)^080h
 12214  1227  00A9               	movlw	low highword(0)
 12215  1228  3000               	movwf	(floorf@u+2)^080h
 12216  1229  00A8               	movlw	high(0)
 12217  122A  3000               	movwf	(floorf@u+1)^080h
 12218  122B  00A7               	movlw	low(0)
 12219  122C  3000               	movwf	(floorf@u)^080h
 12220  122D  00A6               
 12221                           	goto	l1074
 12222  122E  2A59               	line	23
 12223                           	
 12224                           l1075:	
 12225  122F                     	
 12226                           l3517:	
 12227  122F                     	movlb 1	; select bank1
 12228  122F  0141               	movf	(floorf@u)^080h,w
 12229  1230  0826               	movlb 0	; select bank0
 12230  1231  0140               	movwf	(??_floorf+0)+0
 12231  1232  00E6               	movlb 1	; select bank1
 12232  1233  0141               	movf	(floorf@u+1)^080h,w
 12233  1234  0827               	movlb 0	; select bank0
 12234  1235  0140               	movwf	((??_floorf+0)+0+1)
 12235  1236  00E7               	movlb 1	; select bank1
 12236  1237  0141               	movf	(floorf@u+2)^080h,w
 12237  1238  0828               	movlb 0	; select bank0
 12238  1239  0140               	movwf	((??_floorf+0)+0+2)
 12239  123A  00E8               	movlb 1	; select bank1
 12240  123B  0141               	movf	(floorf@u+3)^080h,w
 12241  123C  0829               	movlb 0	; select bank0
 12242  123D  0140               	movwf	((??_floorf+0)+0+3)
 12243  123E  00E9               	movlw	01h
 12244  123F  3001               u4425:
 12245  1240                     	lslf	(??_floorf+0)+0,f
 12246  1240  35E6               	rlf	(??_floorf+0)+1,f
 12247  1241  0DE7               	rlf	(??_floorf+0)+2,f
 12248  1242  0DE8               	rlf	(??_floorf+0)+3,f
 12249  1243  0DE9               u4420:
 12250  1244                     	decfsz	wreg,f
 12251  1244  0B89               	goto	u4425
 12252  1245  2A40               	movf	3+(??_floorf+0)+0,w
 12253  1246  0869               	iorwf	2+(??_floorf+0)+0,w
 12254  1247  0468               	iorwf	1+(??_floorf+0)+0,w
 12255  1248  0467               	iorwf	0+(??_floorf+0)+0,w
 12256  1249  0466               	skipnz
 12257  124A  1903               	goto	u4431
 12258  124B  2A4D               	goto	u4430
 12259  124C  2A4E               u4431:
 12260  124D                     	goto	l1074
 12261  124D  2A59               u4430:
 12262  124E                     	line	24
 12263                           	
 12264                           l3519:	
 12265  124E                     	movlw	0xbf
 12266  124E  30BF               	movlb 1	; select bank1
 12267  124F  0141               	movwf	(floorf@u+3)^080h
 12268  1250  00A9               	movlw	0x80
 12269  1251  3080               	movwf	(floorf@u+2)^080h
 12270  1252  00A8               	movlw	0x0
 12271  1253  3000               	movwf	(floorf@u+1)^080h
 12272  1254  00A7               	movlw	0x0
 12273  1255  3000               	movwf	(floorf@u)^080h
 12274  1256  00A6               
 12275                           	goto	l1074
 12276  1257  2A59               	
 12277                           l1077:	
 12278  1258                     	goto	l1074
 12279  1258  2A59               	
 12280                           l1076:	
 12281  1259                     	line	25
 12282                           	
 12283                           l1074:	
 12284  1259                     	line	26
 12285                           	movlb 1	; select bank1
 12286  1259  0141               	movf	(floorf@u+3)^080h,w
 12287  125A  0829               	movlb 0	; select bank0
 12288  125B  0140               	movwf	(?_floorf+3)
 12289  125C  00E5               	movlb 1	; select bank1
 12290  125D  0141               	movf	(floorf@u+2)^080h,w
 12291  125E  0828               	movlb 0	; select bank0
 12292  125F  0140               	movwf	(?_floorf+2)
 12293  1260  00E4               	movlb 1	; select bank1
 12294  1261  0141               	movf	(floorf@u+1)^080h,w
 12295  1262  0827               	movlb 0	; select bank0
 12296  1263  0140               	movwf	(?_floorf+1)
 12297  1264  00E3               	movlb 1	; select bank1
 12298  1265  0141               	movf	(floorf@u)^080h,w
 12299  1266  0826               	movlb 0	; select bank0
 12300  1267  0140               	movwf	(?_floorf)
 12301  1268  00E2               
 12302                           	goto	l1070
 12303  1269  2A6A               	
 12304                           l3521:	
 12305  126A                     	line	27
 12306                           	
 12307                           l1070:	
 12308  126A                     	return
 12309  126A  0008               	opt stack 0
 12310                           GLOBAL	__end_of_floorf
 12311                           	__end_of_floorf:
 12312  126B                     	signat	_floorf,4220
 12313                           	global	___fpclassifyf
 12314                           
 12315 ;; *************** function ___fpclassifyf *****************
 12316 ;; Defined at:
 12317 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__fpclassifyf.c"
 12318 ;; Parameters:    Size  Location     Type
 12319 ;;  x               4    0[BANK0 ] float 
 12320 ;; Auto vars:     Size  Location     Type
 12321 ;;  u               4   12[BANK0 ] struct .
 12322 ;;  e               2   10[BANK0 ] int 
 12323 ;; Return value:  Size  Location     Type
 12324 ;;                  2    0[BANK0 ] int 
 12325 ;; Registers used:
 12326 ;;		wreg, status,2, status,0
 12327 ;; Tracked objects:
 12328 ;;		On entry : 0/0
 12329 ;;		On exit  : 0/0
 12330 ;;		Unchanged: 0/0
 12331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12332 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12333 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12334 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12335 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12336 ;;Total ram usage:       16 bytes
 12337 ;; Hardware stack levels used:    1
 12338 ;; Hardware stack levels required when called:    3
 12339 ;; This function calls:
 12340 ;;		Nothing
 12341 ;; This function is called by:
 12342 ;;		_efgtoa
 12343 ;; This function uses a non-reentrant model
 12344 ;;
 12345                           psect	text20,local,class=CODE,delta=2,merge=1,group=2
 12346                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__fpclassifyf.c
                                 "
 12347                           	line	4
 12348                           global __ptext20
 12349                           __ptext20:	;psect for function ___fpclassifyf
 12350  1997                     psect	text20
 12351                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__fpclassifyf.c
                                 "
 12352                           	line	4
 12353                           	global	__size_of___fpclassifyf
 12354                           	__size_of___fpclassifyf	equ	__end_of___fpclassifyf-___fpclassifyf
 12355  0083                     	
 12356                           ___fpclassifyf:	
 12357  1997                     ;incstack = 0
 12358                           	opt	stack 7
 12359                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
 12360                           	line	6
 12361                           	
 12362                           l3455:	
 12363  1997                     	movlb 4	; select bank4
 12364  1997  0144               	movf	(___fpclassifyf@F453+3)^0200h,w
 12365  1998  0827               	movlb 0	; select bank0
 12366  1999  0140               	movwf	(___fpclassifyf@u+3)
 12367  199A  00AF               	movlb 4	; select bank4
 12368  199B  0144               	movf	(___fpclassifyf@F453+2)^0200h,w
 12369  199C  0826               	movlb 0	; select bank0
 12370  199D  0140               	movwf	(___fpclassifyf@u+2)
 12371  199E  00AE               	movlb 4	; select bank4
 12372  199F  0144               	movf	(___fpclassifyf@F453+1)^0200h,w
 12373  19A0  0825               	movlb 0	; select bank0
 12374  19A1  0140               	movwf	(___fpclassifyf@u+1)
 12375  19A2  00AD               	movlb 4	; select bank4
 12376  19A3  0144               	movf	(___fpclassifyf@F453)^0200h,w
 12377  19A4  0824               	movlb 0	; select bank0
 12378  19A5  0140               	movwf	(___fpclassifyf@u)
 12379  19A6  00AC               
 12380                           	movf	(___fpclassifyf@x+3),w
 12381  19A7  0823               	movwf	(___fpclassifyf@u+3)
 12382  19A8  00AF               	movf	(___fpclassifyf@x+2),w
 12383  19A9  0822               	movwf	(___fpclassifyf@u+2)
 12384  19AA  00AE               	movf	(___fpclassifyf@x+1),w
 12385  19AB  0821               	movwf	(___fpclassifyf@u+1)
 12386  19AC  00AD               	movf	(___fpclassifyf@x),w
 12387  19AD  0820               	movwf	(___fpclassifyf@u)
 12388  19AE  00AC               
 12389                           	line	7
 12390                           	
 12391                           l3457:	
 12392  19AF                     	movf	(___fpclassifyf@u),w
 12393  19AF  082C               	movwf	(??___fpclassifyf+0)+0
 12394  19B0  00A4               	movf	(___fpclassifyf@u+1),w
 12395  19B1  082D               	movwf	((??___fpclassifyf+0)+0+1)
 12396  19B2  00A5               	movf	(___fpclassifyf@u+2),w
 12397  19B3  082E               	movwf	((??___fpclassifyf+0)+0+2)
 12398  19B4  00A6               	movf	(___fpclassifyf@u+3),w
 12399  19B5  082F               	movwf	((??___fpclassifyf+0)+0+3)
 12400  19B6  00A7               	movlw	017h
 12401  19B7  3017               u4215:
 12402  19B8                     	lsrf	(??___fpclassifyf+0)+3,f
 12403  19B8  36A7               	rrf	(??___fpclassifyf+0)+2,f
 12404  19B9  0CA6               	rrf	(??___fpclassifyf+0)+1,f
 12405  19BA  0CA5               	rrf	(??___fpclassifyf+0)+0,f
 12406  19BB  0CA4               u4210:
 12407  19BC                     	decfsz	wreg,f
 12408  19BC  0B89               	goto	u4215
 12409  19BD  29B8               	movlw	0FFh
 12410  19BE  30FF               	andwf	0+(??___fpclassifyf+0)+0,w
 12411  19BF  0524               	movwf	(___fpclassifyf@e)
 12412  19C0  00AA               	movlw	0
 12413  19C1  3000               	andwf	1+(??___fpclassifyf+0)+0,w
 12414  19C2  0525               	movwf	1+(___fpclassifyf@e)
 12415  19C3  00AB               	line	8
 12416                           	
 12417                           l3459:	
 12418  19C4                     	movf	((___fpclassifyf@e)),w
 12419  19C4  082A               iorwf	((___fpclassifyf@e+1)),w
 12420  19C5  042B               	btfss	status,2
 12421  19C6  1D03               	goto	u4221
 12422  19C7  29C9               	goto	u4220
 12423  19C8  29CA               u4221:
 12424  19C9                     	goto	l3469
 12425  19C9  29ED               u4220:
 12426  19CA                     	
 12427                           l3461:	
 12428  19CA                     	movf	(___fpclassifyf@u),w
 12429  19CA  082C               	movwf	(??___fpclassifyf+0)+0
 12430  19CB  00A4               	movf	(___fpclassifyf@u+1),w
 12431  19CC  082D               	movwf	((??___fpclassifyf+0)+0+1)
 12432  19CD  00A5               	movf	(___fpclassifyf@u+2),w
 12433  19CE  082E               	movwf	((??___fpclassifyf+0)+0+2)
 12434  19CF  00A6               	movf	(___fpclassifyf@u+3),w
 12435  19D0  082F               	movwf	((??___fpclassifyf+0)+0+3)
 12436  19D1  00A7               	movlw	01h
 12437  19D2  3001               u4235:
 12438  19D3                     	lslf	(??___fpclassifyf+0)+0,f
 12439  19D3  35A4               	rlf	(??___fpclassifyf+0)+1,f
 12440  19D4  0DA5               	rlf	(??___fpclassifyf+0)+2,f
 12441  19D5  0DA6               	rlf	(??___fpclassifyf+0)+3,f
 12442  19D6  0DA7               u4230:
 12443  19D7                     	decfsz	wreg,f
 12444  19D7  0B89               	goto	u4235
 12445  19D8  29D3               	movf	3+(??___fpclassifyf+0)+0,w
 12446  19D9  0827               	iorwf	2+(??___fpclassifyf+0)+0,w
 12447  19DA  0426               	iorwf	1+(??___fpclassifyf+0)+0,w
 12448  19DB  0425               	iorwf	0+(??___fpclassifyf+0)+0,w
 12449  19DC  0424               	skipz
 12450  19DD  1D03               	goto	u4241
 12451  19DE  29E0               	goto	u4240
 12452  19DF  29E1               u4241:
 12453  19E0                     	goto	l3465
 12454  19E0  29E6               u4240:
 12455  19E1                     	
 12456                           l3463:	
 12457  19E1                     	movlw	02h
 12458  19E1  3002               	movwf	(?___fpclassifyf)
 12459  19E2  00A0               	movlw	0
 12460  19E3  3000               	movwf	((?___fpclassifyf))+1
 12461  19E4  00A1               	goto	l1032
 12462  19E5  2A19               	
 12463                           l1029:	
 12464  19E6                     	
 12465                           l3465:	
 12466  19E6                     	movlw	03h
 12467  19E6  3003               	movwf	(?___fpclassifyf)
 12468  19E7  00A0               	movlw	0
 12469  19E8  3000               	movwf	((?___fpclassifyf))+1
 12470  19E9  00A1               	goto	l1032
 12471  19EA  2A19               	
 12472                           l1031:	
 12473  19EB                     	goto	l1032
 12474  19EB  2A19               	
 12475                           l3467:	
 12476  19EC                     	goto	l1032
 12477  19EC  2A19               	
 12478                           l1027:	
 12479  19ED                     	line	9
 12480                           	
 12481                           l3469:	
 12482  19ED                     		incf	((___fpclassifyf@e)),w
 12483  19ED  0A2A               iorwf	((___fpclassifyf@e+1)),w
 12484  19EE  042B               	btfss	status,2
 12485  19EF  1D03               	goto	u4251
 12486  19F0  29F2               	goto	u4250
 12487  19F1  29F3               u4251:
 12488  19F2                     	goto	l3475
 12489  19F2  2A14               u4250:
 12490  19F3                     	
 12491                           l3471:	
 12492  19F3                     	movf	(___fpclassifyf@u),w
 12493  19F3  082C               	movwf	(??___fpclassifyf+0)+0
 12494  19F4  00A4               	movf	(___fpclassifyf@u+1),w
 12495  19F5  082D               	movwf	((??___fpclassifyf+0)+0+1)
 12496  19F6  00A5               	movf	(___fpclassifyf@u+2),w
 12497  19F7  082E               	movwf	((??___fpclassifyf+0)+0+2)
 12498  19F8  00A6               	movf	(___fpclassifyf@u+3),w
 12499  19F9  082F               	movwf	((??___fpclassifyf+0)+0+3)
 12500  19FA  00A7               	movlw	09h
 12501  19FB  3009               u4265:
 12502  19FC                     	lslf	(??___fpclassifyf+0)+0,f
 12503  19FC  35A4               	rlf	(??___fpclassifyf+0)+1,f
 12504  19FD  0DA5               	rlf	(??___fpclassifyf+0)+2,f
 12505  19FE  0DA6               	rlf	(??___fpclassifyf+0)+3,f
 12506  19FF  0DA7               u4260:
 12507  1A00                     	decfsz	wreg,f
 12508  1A00  0B89               	goto	u4265
 12509  1A01  29FC               	movf	3+(??___fpclassifyf+0)+0,w
 12510  1A02  0827               	iorwf	2+(??___fpclassifyf+0)+0,w
 12511  1A03  0426               	iorwf	1+(??___fpclassifyf+0)+0,w
 12512  1A04  0425               	iorwf	0+(??___fpclassifyf+0)+0,w
 12513  1A05  0424               	skipnz
 12514  1A06  1903               	goto	u4271
 12515  1A07  2A09               	goto	u4270
 12516  1A08  2A0B               u4271:
 12517  1A09                     	movlw	1
 12518  1A09  3001               	goto	u4280
 12519  1A0A  2A0C               u4270:
 12520  1A0B                     	movlw	0
 12521  1A0B  3000               u4280:
 12522  1A0C                     	movwf	(??___fpclassifyf+4)+0
 12523  1A0C  00A8               	clrf	(??___fpclassifyf+4)+0+1
 12524  1A0D  01A9               	movf	0+(??___fpclassifyf+4)+0,w
 12525  1A0E  0828               	movwf	(?___fpclassifyf)
 12526  1A0F  00A0               	movf	1+(??___fpclassifyf+4)+0,w
 12527  1A10  0829               	movwf	(?___fpclassifyf+1)
 12528  1A11  00A1               	goto	l1032
 12529  1A12  2A19               	
 12530                           l3473:	
 12531  1A13                     	goto	l1032
 12532  1A13  2A19               	
 12533                           l1033:	
 12534  1A14                     	line	10
 12535                           	
 12536                           l3475:	
 12537  1A14                     	movlw	04h
 12538  1A14  3004               	movwf	(?___fpclassifyf)
 12539  1A15  00A0               	movlw	0
 12540  1A16  3000               	movwf	((?___fpclassifyf))+1
 12541  1A17  00A1               	goto	l1032
 12542  1A18  2A19               	
 12543                           l3477:	
 12544  1A19                     	line	11
 12545                           	
 12546                           l1032:	
 12547  1A19                     	return
 12548  1A19  0008               	opt stack 0
 12549                           GLOBAL	__end_of___fpclassifyf
 12550                           	__end_of___fpclassifyf:
 12551  1A1A                     	signat	___fpclassifyf,4218
 12552                           	global	___fltol
 12553                           
 12554 ;; *************** function ___fltol *****************
 12555 ;; Defined at:
 12556 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
 12557 ;; Parameters:    Size  Location     Type
 12558 ;;  f1              4    0[BANK0 ] int 
 12559 ;; Auto vars:     Size  Location     Type
 12560 ;;  exp1            1   10[BANK0 ] unsigned char 
 12561 ;;  sign1           1    9[BANK0 ] unsigned char 
 12562 ;; Return value:  Size  Location     Type
 12563 ;;                  4    0[BANK0 ] long 
 12564 ;; Registers used:
 12565 ;;		wreg, status,2, status,0
 12566 ;; Tracked objects:
 12567 ;;		On entry : 0/0
 12568 ;;		On exit  : 0/0
 12569 ;;		Unchanged: 0/0
 12570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12571 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12572 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12573 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12574 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12575 ;;Total ram usage:       11 bytes
 12576 ;; Hardware stack levels used:    1
 12577 ;; Hardware stack levels required when called:    3
 12578 ;; This function calls:
 12579 ;;		Nothing
 12580 ;; This function is called by:
 12581 ;;		_efgtoa
 12582 ;; This function uses a non-reentrant model
 12583 ;;
 12584                           psect	text21,local,class=CODE,delta=2,merge=1,group=1
 12585                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
 12586                           	line	43
 12587                           global __ptext21
 12588                           __ptext21:	;psect for function ___fltol
 12589  1AA5                     psect	text21
 12590                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
 12591                           	line	43
 12592                           	global	__size_of___fltol
 12593                           	__size_of___fltol	equ	__end_of___fltol-___fltol
 12594  0095                     	
 12595                           ___fltol:	
 12596  1AA5                     ;incstack = 0
 12597                           	opt	stack 7
 12598                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 12599                           	line	47
 12600                           	
 12601                           l3669:	
 12602  1AA5                     	movlb 0	; select bank0
 12603  1AA5  0140               	movf	(___fltol@f1),w
 12604  1AA6  0820               	movwf	(??___fltol+0)+0
 12605  1AA7  00A4               	movf	(___fltol@f1+1),w
 12606  1AA8  0821               	movwf	((??___fltol+0)+0+1)
 12607  1AA9  00A5               	movf	(___fltol@f1+2),w
 12608  1AAA  0822               	movwf	((??___fltol+0)+0+2)
 12609  1AAB  00A6               	movf	(___fltol@f1+3),w
 12610  1AAC  0823               	movwf	((??___fltol+0)+0+3)
 12611  1AAD  00A7               	clrc
 12612  1AAE  1003               	rlf	(??___fltol+0)+2,w
 12613  1AAF  0D26               	rlf	(??___fltol+0)+3,w
 12614  1AB0  0D27               	movwf	(??___fltol+4)+0
 12615  1AB1  00A8               	movf	(??___fltol+4)+0,w
 12616  1AB2  0828               	movwf	(___fltol@exp1)
 12617  1AB3  00AA               	movf	(((___fltol@exp1))),w
 12618  1AB4  082A               	btfss	status,2
 12619  1AB5  1D03               	goto	u4781
 12620  1AB6  2AB8               	goto	u4780
 12621  1AB7  2AB9               u4781:
 12622  1AB8                     	goto	l3675
 12623  1AB8  2AC3               u4780:
 12624  1AB9                     	line	48
 12625                           	
 12626                           l3671:	
 12627  1AB9                     	movlw	high highword(0)
 12628  1AB9  3000               	movwf	(?___fltol+3)
 12629  1ABA  00A3               	movlw	low highword(0)
 12630  1ABB  3000               	movwf	(?___fltol+2)
 12631  1ABC  00A2               	movlw	high(0)
 12632  1ABD  3000               	movwf	(?___fltol+1)
 12633  1ABE  00A1               	movlw	low(0)
 12634  1ABF  3000               	movwf	(?___fltol)
 12635  1AC0  00A0               
 12636                           	goto	l785
 12637  1AC1  2B39               	
 12638                           l3673:	
 12639  1AC2                     	goto	l785
 12640  1AC2  2B39               	
 12641                           l784:	
 12642  1AC3                     	line	49
 12643                           	
 12644                           l3675:	
 12645  1AC3                     	movf	(___fltol@f1),w
 12646  1AC3  0820               	movwf	(??___fltol+0)+0
 12647  1AC4  00A4               	movf	(___fltol@f1+1),w
 12648  1AC5  0821               	movwf	((??___fltol+0)+0+1)
 12649  1AC6  00A5               	movf	(___fltol@f1+2),w
 12650  1AC7  0822               	movwf	((??___fltol+0)+0+2)
 12651  1AC8  00A6               	movf	(___fltol@f1+3),w
 12652  1AC9  0823               	movwf	((??___fltol+0)+0+3)
 12653  1ACA  00A7               	movlw	01Fh
 12654  1ACB  301F               u4795:
 12655  1ACC                     	lsrf	(??___fltol+0)+3,f
 12656  1ACC  36A7               	rrf	(??___fltol+0)+2,f
 12657  1ACD  0CA6               	rrf	(??___fltol+0)+1,f
 12658  1ACE  0CA5               	rrf	(??___fltol+0)+0,f
 12659  1ACF  0CA4               u4790:
 12660  1AD0                     	decfsz	wreg,f
 12661  1AD0  0B89               	goto	u4795
 12662  1AD1  2ACC               	movf	0+(??___fltol+0)+0,w
 12663  1AD2  0824               	movwf	(??___fltol+4)+0
 12664  1AD3  00A8               	movf	(??___fltol+4)+0,w
 12665  1AD4  0828               	movwf	(___fltol@sign1)
 12666  1AD5  00A9               	line	50
 12667                           	
 12668                           l3677:	
 12669  1AD6                     	bsf	(___fltol@f1)+(23/8),(23)&7
 12670  1AD6  17A2               	line	51
 12671                           	
 12672                           l3679:	
 12673  1AD7                     	movlw	0FFh
 12674  1AD7  30FF               	andwf	(___fltol@f1),f
 12675  1AD8  05A0               	movlw	0FFh
 12676  1AD9  30FF               	andwf	(___fltol@f1+1),f
 12677  1ADA  05A1               	movlw	0FFh
 12678  1ADB  30FF               	andwf	(___fltol@f1+2),f
 12679  1ADC  05A2               	movlw	0
 12680  1ADD  3000               	andwf	(___fltol@f1+3),f
 12681  1ADE  05A3               	line	52
 12682                           	
 12683                           l3681:	
 12684  1ADF                     	movlw	096h
 12685  1ADF  3096               	subwf	(___fltol@exp1),f
 12686  1AE0  02AA               	line	53
 12687                           	
 12688                           l3683:	
 12689  1AE1                     	btfss	(___fltol@exp1),7
 12690  1AE1  1FAA               	goto	u4801
 12691  1AE2  2AE4               	goto	u4800
 12692  1AE3  2AE5               u4801:
 12693  1AE4                     	goto	l3693
 12694  1AE4  2B08               u4800:
 12695  1AE5                     	line	54
 12696                           	
 12697                           l3685:	
 12698  1AE5                     	movf	(___fltol@exp1),w
 12699  1AE5  082A               	xorlw	80h
 12700  1AE6  3A80               	addlw	-((-23)^80h)
 12701  1AE7  3E97               	skipnc
 12702  1AE8  1803               	goto	u4811
 12703  1AE9  2AEB               	goto	u4810
 12704  1AEA  2AEC               u4811:
 12705  1AEB                     	goto	l3691
 12706  1AEB  2AF7               u4810:
 12707  1AEC                     	line	55
 12708                           	
 12709                           l3687:	
 12710  1AEC                     	movlw	high highword(0)
 12711  1AEC  3000               	movwf	(?___fltol+3)
 12712  1AED  00A3               	movlw	low highword(0)
 12713  1AEE  3000               	movwf	(?___fltol+2)
 12714  1AEF  00A2               	movlw	high(0)
 12715  1AF0  3000               	movwf	(?___fltol+1)
 12716  1AF1  00A1               	movlw	low(0)
 12717  1AF2  3000               	movwf	(?___fltol)
 12718  1AF3  00A0               
 12719                           	goto	l785
 12720  1AF4  2B39               	
 12721                           l3689:	
 12722  1AF5                     	goto	l785
 12723  1AF5  2B39               	
 12724                           l787:	
 12725  1AF6                     	goto	l3691
 12726  1AF6  2AF7               	line	56
 12727                           	
 12728                           l788:	
 12729  1AF7                     	line	57
 12730                           	
 12731                           l3691:	
 12732  1AF7                     	movlw	01h
 12733  1AF7  3001               u4825:
 12734  1AF8                     	lsrf	(___fltol@f1+3),f
 12735  1AF8  36A3               	rrf	(___fltol@f1+2),f
 12736  1AF9  0CA2               	rrf	(___fltol@f1+1),f
 12737  1AFA  0CA1               	rrf	(___fltol@f1),f
 12738  1AFB  0CA0               	decfsz	wreg,f
 12739  1AFC  0B89               	goto	u4825
 12740  1AFD  2AF8               
 12741                           	movlw	low(01h)
 12742  1AFE  3001               	movwf	(??___fltol+0)+0
 12743  1AFF  00A4               	movf	(??___fltol+0)+0,w
 12744  1B00  0824               	addwf	(___fltol@exp1),f
 12745  1B01  07AA               	btfss	status,2
 12746  1B02  1D03               	goto	u4831
 12747  1B03  2B05               	goto	u4830
 12748  1B04  2B06               u4831:
 12749  1B05                     	goto	l3691
 12750  1B05  2AF7               u4830:
 12751  1B06                     	goto	l3701
 12752  1B06  2B29               	
 12753                           l789:	
 12754  1B07                     	line	59
 12755                           	goto	l3701
 12756  1B07  2B29               	
 12757                           l786:	
 12758  1B08                     	line	60
 12759                           	
 12760                           l3693:	
 12761  1B08                     	movlw	low(020h)
 12762  1B08  3020               	subwf	(___fltol@exp1),w
 12763  1B09  022A               	skipc
 12764  1B0A  1C03               	goto	u4841
 12765  1B0B  2B0D               	goto	u4840
 12766  1B0C  2B0E               u4841:
 12767  1B0D                     	goto	l792
 12768  1B0D  2B22               u4840:
 12769  1B0E                     	line	61
 12770                           	
 12771                           l3695:	
 12772  1B0E                     	movlw	high highword(0)
 12773  1B0E  3000               	movwf	(?___fltol+3)
 12774  1B0F  00A3               	movlw	low highword(0)
 12775  1B10  3000               	movwf	(?___fltol+2)
 12776  1B11  00A2               	movlw	high(0)
 12777  1B12  3000               	movwf	(?___fltol+1)
 12778  1B13  00A1               	movlw	low(0)
 12779  1B14  3000               	movwf	(?___fltol)
 12780  1B15  00A0               
 12781                           	goto	l785
 12782  1B16  2B39               	
 12783                           l3697:	
 12784  1B17                     	goto	l785
 12785  1B17  2B39               	
 12786                           l791:	
 12787  1B18                     	line	62
 12788                           	goto	l792
 12789  1B18  2B22               	
 12790                           l793:	
 12791  1B19                     	line	63
 12792                           	
 12793                           l3699:	
 12794  1B19                     	movlw	01h
 12795  1B19  3001               u4855:
 12796  1B1A                     	lslf	(___fltol@f1),f
 12797  1B1A  35A0               	rlf	(___fltol@f1+1),f
 12798  1B1B  0DA1               	rlf	(___fltol@f1+2),f
 12799  1B1C  0DA2               	rlf	(___fltol@f1+3),f
 12800  1B1D  0DA3               	decfsz	wreg,f
 12801  1B1E  0B89               	goto	u4855
 12802  1B1F  2B1A               	line	64
 12803                           	movlw	01h
 12804  1B20  3001               	subwf	(___fltol@exp1),f
 12805  1B21  02AA               	line	65
 12806                           	
 12807                           l792:	
 12808  1B22                     	line	62
 12809                           	movf	((___fltol@exp1)),w
 12810  1B22  082A               	btfss	status,2
 12811  1B23  1D03               	goto	u4861
 12812  1B24  2B26               	goto	u4860
 12813  1B25  2B27               u4861:
 12814  1B26                     	goto	l3699
 12815  1B26  2B19               u4860:
 12816  1B27                     	goto	l3701
 12817  1B27  2B29               	
 12818                           l794:	
 12819  1B28                     	goto	l3701
 12820  1B28  2B29               	line	66
 12821                           	
 12822                           l790:	
 12823  1B29                     	line	67
 12824                           	
 12825                           l3701:	
 12826  1B29                     	movf	((___fltol@sign1)),w
 12827  1B29  0829               	btfsc	status,2
 12828  1B2A  1903               	goto	u4871
 12829  1B2B  2B2D               	goto	u4870
 12830  1B2C  2B2E               u4871:
 12831  1B2D                     	goto	l795
 12832  1B2D  2B39               u4870:
 12833  1B2E                     	line	68
 12834                           	
 12835                           l3703:	
 12836  1B2E                     	comf	(___fltol@f1),f
 12837  1B2E  09A0               	comf	(___fltol@f1+1),f
 12838  1B2F  09A1               	comf	(___fltol@f1+2),f
 12839  1B30  09A2               	comf	(___fltol@f1+3),f
 12840  1B31  09A3               	incf	(___fltol@f1),f
 12841  1B32  0AA0               	skipnz
 12842  1B33  1903               	incf	(___fltol@f1+1),f
 12843  1B34  0AA1               	skipnz
 12844  1B35  1903               	incf	(___fltol@f1+2),f
 12845  1B36  0AA2               	skipnz
 12846  1B37  1903               	incf	(___fltol@f1+3),f
 12847  1B38  0AA3               	
 12848                           l795:	
 12849  1B39                     	line	69
 12850                           	line	70
 12851                           	
 12852                           l785:	
 12853  1B39                     	return
 12854  1B39  0008               	opt stack 0
 12855                           GLOBAL	__end_of___fltol
 12856                           	__end_of___fltol:
 12857  1B3A                     	signat	___fltol,4220
 12858                           	global	___flsub
 12859                           
 12860 ;; *************** function ___flsub *****************
 12861 ;; Defined at:
 12862 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
 12863 ;; Parameters:    Size  Location     Type
 12864 ;;  a               4   64[BANK0 ] long 
 12865 ;;  b               4   68[BANK0 ] long 
 12866 ;; Auto vars:     Size  Location     Type
 12867 ;;		None
 12868 ;; Return value:  Size  Location     Type
 12869 ;;                  4   64[BANK0 ] long 
 12870 ;; Registers used:
 12871 ;;		wreg, status,2, status,0, pclath, cstack
 12872 ;; Tracked objects:
 12873 ;;		On entry : 0/0
 12874 ;;		On exit  : 0/0
 12875 ;;		Unchanged: 0/0
 12876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12877 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12880 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12881 ;;Total ram usage:        8 bytes
 12882 ;; Hardware stack levels used:    1
 12883 ;; Hardware stack levels required when called:    4
 12884 ;; This function calls:
 12885 ;;		___fladd
 12886 ;; This function is called by:
 12887 ;;		_efgtoa
 12888 ;; This function uses a non-reentrant model
 12889 ;;
 12890                           psect	text22,local,class=CODE,delta=2,merge=1,group=1
 12891                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
 12892                           	line	242
 12893                           global __ptext22
 12894                           __ptext22:	;psect for function ___flsub
 12895  21ED                     psect	text22
 12896                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
 12897                           	line	242
 12898                           	global	__size_of___flsub
 12899                           	__size_of___flsub	equ	__end_of___flsub-___flsub
 12900  0021                     	
 12901                           ___flsub:	
 12902  21ED                     ;incstack = 0
 12903                           	opt	stack 6
 12904                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 12905                           	line	248
 12906                           	
 12907                           l3705:	
 12908  21ED                     	movlw	080h
 12909  21ED  3080               	movlb 0	; select bank0
 12910  21EE  0140               	xorwf	(___flsub@a+3),f
 12911  21EF  06E3               	line	249
 12912                           	
 12913                           l3707:	
 12914  21F0                     	movf	(___flsub@b+3),w
 12915  21F0  0867               	movwf	(___fladd@b+3)
 12916  21F1  00CB               	movf	(___flsub@b+2),w
 12917  21F2  0866               	movwf	(___fladd@b+2)
 12918  21F3  00CA               	movf	(___flsub@b+1),w
 12919  21F4  0865               	movwf	(___fladd@b+1)
 12920  21F5  00C9               	movf	(___flsub@b),w
 12921  21F6  0864               	movwf	(___fladd@b)
 12922  21F7  00C8               
 12923                           	movf	(___flsub@a+3),w
 12924  21F8  0863               	movwf	(___fladd@a+3)
 12925  21F9  00CF               	movf	(___flsub@a+2),w
 12926  21FA  0862               	movwf	(___fladd@a+2)
 12927  21FB  00CE               	movf	(___flsub@a+1),w
 12928  21FC  0861               	movwf	(___fladd@a+1)
 12929  21FD  00CD               	movf	(___flsub@a),w
 12930  21FE  0860               	movwf	(___fladd@a)
 12931  21FF  00CC               
 12932                           	fcall	___fladd
 12933  2200  3189  21B1  31A1   	movlb 0	; select bank0
 12934  2203  0140               	movf	(3+(?___fladd)),w
 12935  2204  084B               	movwf	(?___flsub+3)
 12936  2205  00E3               	movf	(2+(?___fladd)),w
 12937  2206  084A               	movwf	(?___flsub+2)
 12938  2207  00E2               	movf	(1+(?___fladd)),w
 12939  2208  0849               	movwf	(?___flsub+1)
 12940  2209  00E1               	movf	(0+(?___fladd)),w
 12941  220A  0848               	movwf	(?___flsub)
 12942  220B  00E0               
 12943                           	goto	l938
 12944  220C  2A0D               	
 12945                           l3709:	
 12946  220D                     	line	250
 12947                           	
 12948                           l938:	
 12949  220D                     	return
 12950  220D  0008               	opt stack 0
 12951                           GLOBAL	__end_of___flsub
 12952                           	__end_of___flsub:
 12953  220E                     	signat	___flsub,8316
 12954                           	global	___flneg
 12955                           
 12956 ;; *************** function ___flneg *****************
 12957 ;; Defined at:
 12958 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flneg.c"
 12959 ;; Parameters:    Size  Location     Type
 12960 ;;  f1              4    0[BANK0 ] long 
 12961 ;; Auto vars:     Size  Location     Type
 12962 ;;		None
 12963 ;; Return value:  Size  Location     Type
 12964 ;;                  4    0[BANK0 ] long 
 12965 ;; Registers used:
 12966 ;;		wreg
 12967 ;; Tracked objects:
 12968 ;;		On entry : 0/0
 12969 ;;		On exit  : 0/0
 12970 ;;		Unchanged: 0/0
 12971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12972 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12975 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12976 ;;Total ram usage:        4 bytes
 12977 ;; Hardware stack levels used:    1
 12978 ;; Hardware stack levels required when called:    3
 12979 ;; This function calls:
 12980 ;;		Nothing
 12981 ;; This function is called by:
 12982 ;;		_efgtoa
 12983 ;; This function uses a non-reentrant model
 12984 ;;
 12985                           psect	text23,local,class=CODE,delta=2,merge=1,group=1
 12986                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flneg.c"
 12987                           	line	15
 12988                           global __ptext23
 12989                           __ptext23:	;psect for function ___flneg
 12990  2176                     psect	text23
 12991                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flneg.c"
 12992                           	line	15
 12993                           	global	__size_of___flneg
 12994                           	__size_of___flneg	equ	__end_of___flneg-___flneg
 12995  000E                     	
 12996                           ___flneg:	
 12997  2176                     ;incstack = 0
 12998                           	opt	stack 7
 12999                           ; Regs used in ___flneg: [wreg]
 13000                           	line	17
 13001                           	
 13002                           l3661:	
 13003  2176                     	movlb 0	; select bank0
 13004  2176  0140               	movf	(___flneg@f1+3),w
 13005  2177  0823               	iorwf	(___flneg@f1+2),w
 13006  2178  0422               	iorwf	(___flneg@f1+1),w
 13007  2179  0421               	iorwf	(___flneg@f1),w
 13008  217A  0420               	skipnz
 13009  217B  1903               	goto	u4771
 13010  217C  297E               	goto	u4770
 13011  217D  297F               u4771:
 13012  217E                     	goto	l3665
 13013  217E  2982               u4770:
 13014  217F                     	line	18
 13015                           	
 13016                           l3663:	
 13017  217F                     	movlw	080h
 13018  217F  3080               	xorwf	(___flneg@f1+3),f
 13019  2180  06A3               	goto	l3665
 13020  2181  2982               	
 13021                           l780:	
 13022  2182                     	line	19
 13023                           	
 13024                           l3665:	
 13025  2182                     	goto	l781
 13026  2182  2983               	
 13027                           l3667:	
 13028  2183                     	line	20
 13029                           	
 13030                           l781:	
 13031  2183                     	return
 13032  2183  0008               	opt stack 0
 13033                           GLOBAL	__end_of___flneg
 13034                           	__end_of___flneg:
 13035  2184                     	signat	___flneg,4220
 13036                           	global	___fleq
 13037                           
 13038 ;; *************** function ___fleq *****************
 13039 ;; Defined at:
 13040 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fleq.c"
 13041 ;; Parameters:    Size  Location     Type
 13042 ;;  ff1             4    0[BANK0 ] long 
 13043 ;;  ff2             4    4[BANK0 ] long 
 13044 ;; Auto vars:     Size  Location     Type
 13045 ;;		None
 13046 ;; Return value:  Size  Location     Type
 13047 ;;		None               void
 13048 ;; Registers used:
 13049 ;;		wreg, status,2, status,0
 13050 ;; Tracked objects:
 13051 ;;		On entry : 0/0
 13052 ;;		On exit  : 0/0
 13053 ;;		Unchanged: 0/0
 13054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13055 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13057 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13058 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13059 ;;Total ram usage:       12 bytes
 13060 ;; Hardware stack levels used:    1
 13061 ;; Hardware stack levels required when called:    3
 13062 ;; This function calls:
 13063 ;;		Nothing
 13064 ;; This function is called by:
 13065 ;;		_efgtoa
 13066 ;; This function uses a non-reentrant model
 13067 ;;
 13068                           psect	text24,local,class=CODE,delta=2,merge=1,group=1
 13069                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fleq.c"
 13070                           	line	4
 13071                           global __ptext24
 13072                           __ptext24:	;psect for function ___fleq
 13073  2578                     psect	text24
 13074                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fleq.c"
 13075                           	line	4
 13076                           	global	__size_of___fleq
 13077                           	__size_of___fleq	equ	__end_of___fleq-___fleq
 13078  0051                     	
 13079                           ___fleq:	
 13080  2578                     ;incstack = 0
 13081                           	opt	stack 7
 13082                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 13083                           	line	7
 13084                           	
 13085                           l3623:	
 13086  2578                     	movlw	0
 13087  2578  3000               	movlb 0	; select bank0
 13088  2579  0140               	andwf	(___fleq@ff1),w
 13089  257A  0520               	movwf	(??___fleq+0)+0
 13090  257B  00A8               	movlw	0
 13091  257C  3000               	andwf	(___fleq@ff1+1),w
 13092  257D  0521               	movwf	((??___fleq+0)+0+1)
 13093  257E  00A9               	movlw	080h
 13094  257F  3080               	andwf	(___fleq@ff1+2),w
 13095  2580  0522               	movwf	((??___fleq+0)+0+2)
 13096  2581  00AA               	movlw	07Fh
 13097  2582  307F               	andwf	(___fleq@ff1+3),w
 13098  2583  0523               	movwf	((??___fleq+0)+0+3)
 13099  2584  00AB               	movf	3+(??___fleq+0)+0,w
 13100  2585  082B               	iorwf	2+(??___fleq+0)+0,w
 13101  2586  042A               	iorwf	1+(??___fleq+0)+0,w
 13102  2587  0429               	iorwf	0+(??___fleq+0)+0,w
 13103  2588  0428               	skipz
 13104  2589  1D03               	goto	u4691
 13105  258A  2D8C               	goto	u4690
 13106  258B  2D8D               u4691:
 13107  258C                     	goto	l760
 13108  258C  2D95               u4690:
 13109  258D                     	line	8
 13110                           	
 13111                           l3625:	
 13112  258D                     	movlw	high highword(0)
 13113  258D  3000               	movwf	(___fleq@ff1+3)
 13114  258E  00A3               	movlw	low highword(0)
 13115  258F  3000               	movwf	(___fleq@ff1+2)
 13116  2590  00A2               	movlw	high(0)
 13117  2591  3000               	movwf	(___fleq@ff1+1)
 13118  2592  00A1               	movlw	low(0)
 13119  2593  3000               	movwf	(___fleq@ff1)
 13120  2594  00A0               
 13121                           	
 13122                           l760:	
 13123  2595                     	line	9
 13124                           	movlw	0
 13125  2595  3000               	andwf	(___fleq@ff2),w
 13126  2596  0524               	movwf	(??___fleq+0)+0
 13127  2597  00A8               	movlw	0
 13128  2598  3000               	andwf	(___fleq@ff2+1),w
 13129  2599  0525               	movwf	((??___fleq+0)+0+1)
 13130  259A  00A9               	movlw	080h
 13131  259B  3080               	andwf	(___fleq@ff2+2),w
 13132  259C  0526               	movwf	((??___fleq+0)+0+2)
 13133  259D  00AA               	movlw	07Fh
 13134  259E  307F               	andwf	(___fleq@ff2+3),w
 13135  259F  0527               	movwf	((??___fleq+0)+0+3)
 13136  25A0  00AB               	movf	3+(??___fleq+0)+0,w
 13137  25A1  082B               	iorwf	2+(??___fleq+0)+0,w
 13138  25A2  042A               	iorwf	1+(??___fleq+0)+0,w
 13139  25A3  0429               	iorwf	0+(??___fleq+0)+0,w
 13140  25A4  0428               	skipz
 13141  25A5  1D03               	goto	u4701
 13142  25A6  2DA8               	goto	u4700
 13143  25A7  2DA9               u4701:
 13144  25A8                     	goto	l761
 13145  25A8  2DB1               u4700:
 13146  25A9                     	line	10
 13147                           	
 13148                           l3627:	
 13149  25A9                     	movlw	high highword(0)
 13150  25A9  3000               	movwf	(___fleq@ff2+3)
 13151  25AA  00A7               	movlw	low highword(0)
 13152  25AB  3000               	movwf	(___fleq@ff2+2)
 13153  25AC  00A6               	movlw	high(0)
 13154  25AD  3000               	movwf	(___fleq@ff2+1)
 13155  25AE  00A5               	movlw	low(0)
 13156  25AF  3000               	movwf	(___fleq@ff2)
 13157  25B0  00A4               
 13158                           	
 13159                           l761:	
 13160  25B1                     	line	11
 13161                           	movf	(___fleq@ff2+3),w
 13162  25B1  0827               	xorwf	(___fleq@ff1+3),w
 13163  25B2  0623               	skipz
 13164  25B3  1D03               	goto	u4715
 13165  25B4  2DBF               	movf	(___fleq@ff2+2),w
 13166  25B5  0826               	xorwf	(___fleq@ff1+2),w
 13167  25B6  0622               	skipz
 13168  25B7  1D03               	goto	u4715
 13169  25B8  2DBF               	movf	(___fleq@ff2+1),w
 13170  25B9  0825               	xorwf	(___fleq@ff1+1),w
 13171  25BA  0621               	skipz
 13172  25BB  1D03               	goto	u4715
 13173  25BC  2DBF               	movf	(___fleq@ff2),w
 13174  25BD  0824               	xorwf	(___fleq@ff1),w
 13175  25BE  0620               u4715:
 13176  25BF                     	skipnz
 13177  25BF  1903               	goto	u4711
 13178  25C0  2DC2               	goto	u4710
 13179  25C1  2DC3               u4711:
 13180  25C2                     	goto	l3631
 13181  25C2  2DC5               u4710:
 13182  25C3                     	
 13183                           l3629:	
 13184  25C3                     	clrc
 13185  25C3  1003               	
 13186                           	goto	l766
 13187  25C4  2DC8               	
 13188                           l763:	
 13189  25C5                     	
 13190                           l3631:	
 13191  25C5                     	setc
 13192  25C5  1403               	
 13193                           	goto	l766
 13194  25C6  2DC8               	
 13195                           l765:	
 13196  25C7                     	goto	l766
 13197  25C7  2DC8               	
 13198                           l3633:	
 13199  25C8                     	line	12
 13200                           	
 13201                           l766:	
 13202  25C8                     	return
 13203  25C8  0008               	opt stack 0
 13204                           GLOBAL	__end_of___fleq
 13205                           	__end_of___fleq:
 13206  25C9                     	signat	___fleq,8312
 13207                           	global	___awmod
 13208                           
 13209 ;; *************** function ___awmod *****************
 13210 ;; Defined at:
 13211 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 13212 ;; Parameters:    Size  Location     Type
 13213 ;;  divisor         2    0[BANK0 ] int 
 13214 ;;  dividend        2    2[BANK0 ] int 
 13215 ;; Auto vars:     Size  Location     Type
 13216 ;;  sign            1    6[BANK0 ] unsigned char 
 13217 ;;  counter         1    5[BANK0 ] unsigned char 
 13218 ;; Return value:  Size  Location     Type
 13219 ;;                  2    0[BANK0 ] int 
 13220 ;; Registers used:
 13221 ;;		wreg, status,2, status,0
 13222 ;; Tracked objects:
 13223 ;;		On entry : 0/0
 13224 ;;		On exit  : 0/0
 13225 ;;		Unchanged: 0/0
 13226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13227 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13228 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13229 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13230 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13231 ;;Total ram usage:        7 bytes
 13232 ;; Hardware stack levels used:    1
 13233 ;; Hardware stack levels required when called:    3
 13234 ;; This function calls:
 13235 ;;		Nothing
 13236 ;; This function is called by:
 13237 ;;		_efgtoa
 13238 ;; This function uses a non-reentrant model
 13239 ;;
 13240                           psect	text25,local,class=CODE,delta=2,merge=1,group=1
 13241                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 13242                           	line	5
 13243                           global __ptext25
 13244                           __ptext25:	;psect for function ___awmod
 13245  267A                     psect	text25
 13246                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 13247                           	line	5
 13248                           	global	__size_of___awmod
 13249                           	__size_of___awmod	equ	__end_of___awmod-___awmod
 13250  005E                     	
 13251                           ___awmod:	
 13252  267A                     ;incstack = 0
 13253                           	opt	stack 7
 13254                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 13255                           	line	12
 13256                           	
 13257                           l3585:	
 13258  267A                     	movlb 0	; select bank0
 13259  267A  0140               	clrf	(___awmod@sign)
 13260  267B  01A6               	line	13
 13261                           	
 13262                           l3587:	
 13263  267C                     	btfss	(___awmod@dividend+1),7
 13264  267C  1FA3               	goto	u4601
 13265  267D  2E7F               	goto	u4600
 13266  267E  2E80               u4601:
 13267  267F                     	goto	l3593
 13268  267F  2E88               u4600:
 13269  2680                     	line	14
 13270                           	
 13271                           l3589:	
 13272  2680                     	comf	(___awmod@dividend),f
 13273  2680  09A2               	comf	(___awmod@dividend+1),f
 13274  2681  09A3               	incf	(___awmod@dividend),f
 13275  2682  0AA2               	skipnz
 13276  2683  1903               	incf	(___awmod@dividend+1),f
 13277  2684  0AA3               	line	15
 13278                           	
 13279                           l3591:	
 13280  2685                     	clrf	(___awmod@sign)
 13281  2685  01A6               	incf	(___awmod@sign),f
 13282  2686  0AA6               	goto	l3593
 13283  2687  2E88               	line	16
 13284                           	
 13285                           l747:	
 13286  2688                     	line	17
 13287                           	
 13288                           l3593:	
 13289  2688                     	btfss	(___awmod@divisor+1),7
 13290  2688  1FA1               	goto	u4611
 13291  2689  2E8B               	goto	u4610
 13292  268A  2E8C               u4611:
 13293  268B                     	goto	l3597
 13294  268B  2E92               u4610:
 13295  268C                     	line	18
 13296                           	
 13297                           l3595:	
 13298  268C                     	comf	(___awmod@divisor),f
 13299  268C  09A0               	comf	(___awmod@divisor+1),f
 13300  268D  09A1               	incf	(___awmod@divisor),f
 13301  268E  0AA0               	skipnz
 13302  268F  1903               	incf	(___awmod@divisor+1),f
 13303  2690  0AA1               	goto	l3597
 13304  2691  2E92               	
 13305                           l748:	
 13306  2692                     	line	19
 13307                           	
 13308                           l3597:	
 13309  2692                     	movf	((___awmod@divisor)),w
 13310  2692  0820               iorwf	((___awmod@divisor+1)),w
 13311  2693  0421               	btfsc	status,2
 13312  2694  1903               	goto	u4621
 13313  2695  2E97               	goto	u4620
 13314  2696  2E98               u4621:
 13315  2697                     	goto	l3615
 13316  2697  2EC7               u4620:
 13317  2698                     	line	20
 13318                           	
 13319                           l3599:	
 13320  2698                     	clrf	(___awmod@counter)
 13321  2698  01A5               	incf	(___awmod@counter),f
 13322  2699  0AA5               	line	21
 13323                           	goto	l3605
 13324  269A  2EA5               	
 13325                           l751:	
 13326  269B                     	line	22
 13327                           	
 13328                           l3601:	
 13329  269B                     	movlw	01h
 13330  269B  3001               	
 13331                           u4635:
 13332  269C                     	lslf	(___awmod@divisor),f
 13333  269C  35A0               	rlf	(___awmod@divisor+1),f
 13334  269D  0DA1               	decfsz	wreg,f
 13335  269E  0B89               	goto	u4635
 13336  269F  2E9C               	line	23
 13337                           	
 13338                           l3603:	
 13339  26A0                     	movlw	low(01h)
 13340  26A0  3001               	movwf	(??___awmod+0)+0
 13341  26A1  00A4               	movf	(??___awmod+0)+0,w
 13342  26A2  0824               	addwf	(___awmod@counter),f
 13343  26A3  07A5               	goto	l3605
 13344  26A4  2EA5               	line	24
 13345                           	
 13346                           l750:	
 13347  26A5                     	line	21
 13348                           	
 13349                           l3605:	
 13350  26A5                     	btfss	(___awmod@divisor+1),(15)&7
 13351  26A5  1FA1               	goto	u4641
 13352  26A6  2EA8               	goto	u4640
 13353  26A7  2EA9               u4641:
 13354  26A8                     	goto	l3601
 13355  26A8  2E9B               u4640:
 13356  26A9                     	goto	l3607
 13357  26A9  2EAB               	
 13358                           l752:	
 13359  26AA                     	goto	l3607
 13360  26AA  2EAB               	line	25
 13361                           	
 13362                           l753:	
 13363  26AB                     	line	26
 13364                           	
 13365                           l3607:	
 13366  26AB                     	movf	(___awmod@divisor+1),w
 13367  26AB  0821               	subwf	(___awmod@dividend+1),w
 13368  26AC  0223               	skipz
 13369  26AD  1D03               	goto	u4655
 13370  26AE  2EB1               	movf	(___awmod@divisor),w
 13371  26AF  0820               	subwf	(___awmod@dividend),w
 13372  26B0  0222               u4655:
 13373  26B1                     	skipc
 13374  26B1  1C03               	goto	u4651
 13375  26B2  2EB4               	goto	u4650
 13376  26B3  2EB5               u4651:
 13377  26B4                     	goto	l3611
 13378  26B4  2EBA               u4650:
 13379  26B5                     	line	27
 13380                           	
 13381                           l3609:	
 13382  26B5                     	movf	(___awmod@divisor),w
 13383  26B5  0820               	subwf	(___awmod@dividend),f
 13384  26B6  02A2               	movf	(___awmod@divisor+1),w
 13385  26B7  0821               	subwfb	(___awmod@dividend+1),f
 13386  26B8  3BA3               	goto	l3611
 13387  26B9  2EBA               	
 13388                           l754:	
 13389  26BA                     	line	28
 13390                           	
 13391                           l3611:	
 13392  26BA                     	movlw	01h
 13393  26BA  3001               	
 13394                           u4665:
 13395  26BB                     	lsrf	(___awmod@divisor+1),f
 13396  26BB  36A1               	rrf	(___awmod@divisor),f
 13397  26BC  0CA0               	decfsz	wreg,f
 13398  26BD  0B89               	goto	u4665
 13399  26BE  2EBB               	line	29
 13400                           	
 13401                           l3613:	
 13402  26BF                     	movlw	01h
 13403  26BF  3001               	subwf	(___awmod@counter),f
 13404  26C0  02A5               	btfss	status,2
 13405  26C1  1D03               	goto	u4671
 13406  26C2  2EC4               	goto	u4670
 13407  26C3  2EC5               u4671:
 13408  26C4                     	goto	l3607
 13409  26C4  2EAB               u4670:
 13410  26C5                     	goto	l3615
 13411  26C5  2EC7               	
 13412                           l755:	
 13413  26C6                     	goto	l3615
 13414  26C6  2EC7               	line	30
 13415                           	
 13416                           l749:	
 13417  26C7                     	line	31
 13418                           	
 13419                           l3615:	
 13420  26C7                     	movf	((___awmod@sign)),w
 13421  26C7  0826               	btfsc	status,2
 13422  26C8  1903               	goto	u4681
 13423  26C9  2ECB               	goto	u4680
 13424  26CA  2ECC               u4681:
 13425  26CB                     	goto	l3619
 13426  26CB  2ED2               u4680:
 13427  26CC                     	line	32
 13428                           	
 13429                           l3617:	
 13430  26CC                     	comf	(___awmod@dividend),f
 13431  26CC  09A2               	comf	(___awmod@dividend+1),f
 13432  26CD  09A3               	incf	(___awmod@dividend),f
 13433  26CE  0AA2               	skipnz
 13434  26CF  1903               	incf	(___awmod@dividend+1),f
 13435  26D0  0AA3               	goto	l3619
 13436  26D1  2ED2               	
 13437                           l756:	
 13438  26D2                     	line	33
 13439                           	
 13440                           l3619:	
 13441  26D2                     	movf	(___awmod@dividend+1),w
 13442  26D2  0823               	movwf	(?___awmod+1)
 13443  26D3  00A1               	movf	(___awmod@dividend),w
 13444  26D4  0822               	movwf	(?___awmod)
 13445  26D5  00A0               	goto	l757
 13446  26D6  2ED7               	
 13447                           l3621:	
 13448  26D7                     	line	34
 13449                           	
 13450                           l757:	
 13451  26D7                     	return
 13452  26D7  0008               	opt stack 0
 13453                           GLOBAL	__end_of___awmod
 13454                           	__end_of___awmod:
 13455  26D8                     	signat	___awmod,8314
 13456                           	global	___awdiv
 13457                           
 13458 ;; *************** function ___awdiv *****************
 13459 ;; Defined at:
 13460 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 13461 ;; Parameters:    Size  Location     Type
 13462 ;;  divisor         2    0[BANK0 ] int 
 13463 ;;  dividend        2    2[BANK0 ] int 
 13464 ;; Auto vars:     Size  Location     Type
 13465 ;;  quotient        2    7[BANK0 ] int 
 13466 ;;  sign            1    6[BANK0 ] unsigned char 
 13467 ;;  counter         1    5[BANK0 ] unsigned char 
 13468 ;; Return value:  Size  Location     Type
 13469 ;;                  2    0[BANK0 ] int 
 13470 ;; Registers used:
 13471 ;;		wreg, status,2, status,0
 13472 ;; Tracked objects:
 13473 ;;		On entry : 0/0
 13474 ;;		On exit  : 0/0
 13475 ;;		Unchanged: 0/0
 13476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13477 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13478 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13479 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13480 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13481 ;;Total ram usage:        9 bytes
 13482 ;; Hardware stack levels used:    1
 13483 ;; Hardware stack levels required when called:    3
 13484 ;; This function calls:
 13485 ;;		Nothing
 13486 ;; This function is called by:
 13487 ;;		_efgtoa
 13488 ;; This function uses a non-reentrant model
 13489 ;;
 13490                           psect	text26,local,class=CODE,delta=2,merge=1,group=1
 13491                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 13492                           	line	5
 13493                           global __ptext26
 13494                           __ptext26:	;psect for function ___awdiv
 13495  2796                     psect	text26
 13496                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 13497                           	line	5
 13498                           	global	__size_of___awdiv
 13499                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 13500  006A                     	
 13501                           ___awdiv:	
 13502  2796                     ;incstack = 0
 13503                           	opt	stack 7
 13504                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13505                           	line	13
 13506                           	
 13507                           l3541:	
 13508  2796                     	movlb 0	; select bank0
 13509  2796  0140               	clrf	(___awdiv@sign)
 13510  2797  01A6               	line	14
 13511                           	
 13512                           l3543:	
 13513  2798                     	btfss	(___awdiv@divisor+1),7
 13514  2798  1FA1               	goto	u4501
 13515  2799  2F9B               	goto	u4500
 13516  279A  2F9C               u4501:
 13517  279B                     	goto	l3549
 13518  279B  2FA4               u4500:
 13519  279C                     	line	15
 13520                           	
 13521                           l3545:	
 13522  279C                     	comf	(___awdiv@divisor),f
 13523  279C  09A0               	comf	(___awdiv@divisor+1),f
 13524  279D  09A1               	incf	(___awdiv@divisor),f
 13525  279E  0AA0               	skipnz
 13526  279F  1903               	incf	(___awdiv@divisor+1),f
 13527  27A0  0AA1               	line	16
 13528                           	
 13529                           l3547:	
 13530  27A1                     	clrf	(___awdiv@sign)
 13531  27A1  01A6               	incf	(___awdiv@sign),f
 13532  27A2  0AA6               	goto	l3549
 13533  27A3  2FA4               	line	17
 13534                           	
 13535                           l734:	
 13536  27A4                     	line	18
 13537                           	
 13538                           l3549:	
 13539  27A4                     	btfss	(___awdiv@dividend+1),7
 13540  27A4  1FA3               	goto	u4511
 13541  27A5  2FA7               	goto	u4510
 13542  27A6  2FA8               u4511:
 13543  27A7                     	goto	l3555
 13544  27A7  2FB2               u4510:
 13545  27A8                     	line	19
 13546                           	
 13547                           l3551:	
 13548  27A8                     	comf	(___awdiv@dividend),f
 13549  27A8  09A2               	comf	(___awdiv@dividend+1),f
 13550  27A9  09A3               	incf	(___awdiv@dividend),f
 13551  27AA  0AA2               	skipnz
 13552  27AB  1903               	incf	(___awdiv@dividend+1),f
 13553  27AC  0AA3               	line	20
 13554                           	
 13555                           l3553:	
 13556  27AD                     	movlw	low(01h)
 13557  27AD  3001               	movwf	(??___awdiv+0)+0
 13558  27AE  00A4               	movf	(??___awdiv+0)+0,w
 13559  27AF  0824               	xorwf	(___awdiv@sign),f
 13560  27B0  06A6               	goto	l3555
 13561  27B1  2FB2               	line	21
 13562                           	
 13563                           l735:	
 13564  27B2                     	line	22
 13565                           	
 13566                           l3555:	
 13567  27B2                     	clrf	(___awdiv@quotient)
 13568  27B2  01A7               	clrf	(___awdiv@quotient+1)
 13569  27B3  01A8               	line	23
 13570                           	
 13571                           l3557:	
 13572  27B4                     	movf	((___awdiv@divisor)),w
 13573  27B4  0820               iorwf	((___awdiv@divisor+1)),w
 13574  27B5  0421               	btfsc	status,2
 13575  27B6  1903               	goto	u4521
 13576  27B7  2FB9               	goto	u4520
 13577  27B8  2FBA               u4521:
 13578  27B9                     	goto	l3577
 13579  27B9  2FEF               u4520:
 13580  27BA                     	line	24
 13581                           	
 13582                           l3559:	
 13583  27BA                     	clrf	(___awdiv@counter)
 13584  27BA  01A5               	incf	(___awdiv@counter),f
 13585  27BB  0AA5               	line	25
 13586                           	goto	l3565
 13587  27BC  2FC7               	
 13588                           l738:	
 13589  27BD                     	line	26
 13590                           	
 13591                           l3561:	
 13592  27BD                     	movlw	01h
 13593  27BD  3001               	
 13594                           u4535:
 13595  27BE                     	lslf	(___awdiv@divisor),f
 13596  27BE  35A0               	rlf	(___awdiv@divisor+1),f
 13597  27BF  0DA1               	decfsz	wreg,f
 13598  27C0  0B89               	goto	u4535
 13599  27C1  2FBE               	line	27
 13600                           	
 13601                           l3563:	
 13602  27C2                     	movlw	low(01h)
 13603  27C2  3001               	movwf	(??___awdiv+0)+0
 13604  27C3  00A4               	movf	(??___awdiv+0)+0,w
 13605  27C4  0824               	addwf	(___awdiv@counter),f
 13606  27C5  07A5               	goto	l3565
 13607  27C6  2FC7               	line	28
 13608                           	
 13609                           l737:	
 13610  27C7                     	line	25
 13611                           	
 13612                           l3565:	
 13613  27C7                     	btfss	(___awdiv@divisor+1),(15)&7
 13614  27C7  1FA1               	goto	u4541
 13615  27C8  2FCA               	goto	u4540
 13616  27C9  2FCB               u4541:
 13617  27CA                     	goto	l3561
 13618  27CA  2FBD               u4540:
 13619  27CB                     	goto	l3567
 13620  27CB  2FCD               	
 13621                           l739:	
 13622  27CC                     	goto	l3567
 13623  27CC  2FCD               	line	29
 13624                           	
 13625                           l740:	
 13626  27CD                     	line	30
 13627                           	
 13628                           l3567:	
 13629  27CD                     	movlw	01h
 13630  27CD  3001               	
 13631                           u4555:
 13632  27CE                     	lslf	(___awdiv@quotient),f
 13633  27CE  35A7               	rlf	(___awdiv@quotient+1),f
 13634  27CF  0DA8               	decfsz	wreg,f
 13635  27D0  0B89               	goto	u4555
 13636  27D1  2FCE               	line	31
 13637                           	movf	(___awdiv@divisor+1),w
 13638  27D2  0821               	subwf	(___awdiv@dividend+1),w
 13639  27D3  0223               	skipz
 13640  27D4  1D03               	goto	u4565
 13641  27D5  2FD8               	movf	(___awdiv@divisor),w
 13642  27D6  0820               	subwf	(___awdiv@dividend),w
 13643  27D7  0222               u4565:
 13644  27D8                     	skipc
 13645  27D8  1C03               	goto	u4561
 13646  27D9  2FDB               	goto	u4560
 13647  27DA  2FDC               u4561:
 13648  27DB                     	goto	l3573
 13649  27DB  2FE2               u4560:
 13650  27DC                     	line	32
 13651                           	
 13652                           l3569:	
 13653  27DC                     	movf	(___awdiv@divisor),w
 13654  27DC  0820               	subwf	(___awdiv@dividend),f
 13655  27DD  02A2               	movf	(___awdiv@divisor+1),w
 13656  27DE  0821               	subwfb	(___awdiv@dividend+1),f
 13657  27DF  3BA3               	line	33
 13658                           	
 13659                           l3571:	
 13660  27E0                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
 13661  27E0  1427               	goto	l3573
 13662  27E1  2FE2               	line	34
 13663                           	
 13664                           l741:	
 13665  27E2                     	line	35
 13666                           	
 13667                           l3573:	
 13668  27E2                     	movlw	01h
 13669  27E2  3001               	
 13670                           u4575:
 13671  27E3                     	lsrf	(___awdiv@divisor+1),f
 13672  27E3  36A1               	rrf	(___awdiv@divisor),f
 13673  27E4  0CA0               	decfsz	wreg,f
 13674  27E5  0B89               	goto	u4575
 13675  27E6  2FE3               	line	36
 13676                           	
 13677                           l3575:	
 13678  27E7                     	movlw	01h
 13679  27E7  3001               	subwf	(___awdiv@counter),f
 13680  27E8  02A5               	btfss	status,2
 13681  27E9  1D03               	goto	u4581
 13682  27EA  2FEC               	goto	u4580
 13683  27EB  2FED               u4581:
 13684  27EC                     	goto	l3567
 13685  27EC  2FCD               u4580:
 13686  27ED                     	goto	l3577
 13687  27ED  2FEF               	
 13688                           l742:	
 13689  27EE                     	goto	l3577
 13690  27EE  2FEF               	line	37
 13691                           	
 13692                           l736:	
 13693  27EF                     	line	38
 13694                           	
 13695                           l3577:	
 13696  27EF                     	movf	((___awdiv@sign)),w
 13697  27EF  0826               	btfsc	status,2
 13698  27F0  1903               	goto	u4591
 13699  27F1  2FF3               	goto	u4590
 13700  27F2  2FF4               u4591:
 13701  27F3                     	goto	l3581
 13702  27F3  2FFA               u4590:
 13703  27F4                     	line	39
 13704                           	
 13705                           l3579:	
 13706  27F4                     	comf	(___awdiv@quotient),f
 13707  27F4  09A7               	comf	(___awdiv@quotient+1),f
 13708  27F5  09A8               	incf	(___awdiv@quotient),f
 13709  27F6  0AA7               	skipnz
 13710  27F7  1903               	incf	(___awdiv@quotient+1),f
 13711  27F8  0AA8               	goto	l3581
 13712  27F9  2FFA               	
 13713                           l743:	
 13714  27FA                     	line	40
 13715                           	
 13716                           l3581:	
 13717  27FA                     	movf	(___awdiv@quotient+1),w
 13718  27FA  0828               	movwf	(?___awdiv+1)
 13719  27FB  00A1               	movf	(___awdiv@quotient),w
 13720  27FC  0827               	movwf	(?___awdiv)
 13721  27FD  00A0               	goto	l744
 13722  27FE  2FFF               	
 13723                           l3583:	
 13724  27FF                     	line	41
 13725                           	
 13726                           l744:	
 13727  27FF                     	return
 13728  27FF  0008               	opt stack 0
 13729                           GLOBAL	__end_of___awdiv
 13730                           	__end_of___awdiv:
 13731  2800                     	signat	___awdiv,8314
 13732                           	global	_atoi
 13733                           
 13734 ;; *************** function _atoi *****************
 13735 ;; Defined at:
 13736 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\atoi.c"
 13737 ;; Parameters:    Size  Location     Type
 13738 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 13739 ;;		 -> STR_6(42), STR_5(17), STR_4(13), STR_2(15), 
 13740 ;; Auto vars:     Size  Location     Type
 13741 ;;  n               2   19[BANK0 ] int 
 13742 ;;  neg             2   12[BANK0 ] int 
 13743 ;; Return value:  Size  Location     Type
 13744 ;;                  2    6[BANK0 ] int 
 13745 ;; Registers used:
 13746 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13747 ;; Tracked objects:
 13748 ;;		On entry : 0/0
 13749 ;;		On exit  : 0/0
 13750 ;;		Unchanged: 0/0
 13751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13752 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13753 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13754 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13755 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13756 ;;Total ram usage:       15 bytes
 13757 ;; Hardware stack levels used:    1
 13758 ;; Hardware stack levels required when called:    4
 13759 ;; This function calls:
 13760 ;;		___wmul
 13761 ;;		_isdigit
 13762 ;;		_isspace
 13763 ;; This function is called by:
 13764 ;;		_vfpfcnvrt
 13765 ;; This function uses a non-reentrant model
 13766 ;;
 13767                           psect	text27,local,class=CODE,delta=2,merge=1,group=2
 13768                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\atoi.c"
 13769                           	line	4
 13770                           global __ptext27
 13771                           __ptext27:	;psect for function _atoi
 13772  1F19                     psect	text27
 13773                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\atoi.c"
 13774                           	line	4
 13775                           	global	__size_of_atoi
 13776                           	__size_of_atoi	equ	__end_of_atoi-_atoi
 13777  00E7                     	
 13778                           _atoi:	
 13779  1F19                     ;incstack = 0
 13780                           	opt	stack 7
 13781                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13782                           	line	6
 13783                           	
 13784                           l4367:	
 13785  1F19                     	movlb 0	; select bank0
 13786  1F19  0140               	clrf	(atoi@n)
 13787  1F1A  01B3               	clrf	(atoi@n+1)
 13788  1F1B  01B4               	clrf	(atoi@neg)
 13789  1F1C  01AC               	clrf	(atoi@neg+1)
 13790  1F1D  01AD               	line	7
 13791                           	goto	l4371
 13792  1F1E  2F24               	
 13793                           l1041:	
 13794  1F1F                     	
 13795                           l4369:	
 13796  1F1F                     	movlw	01h
 13797  1F1F  3001               	addwf	(atoi@s),f
 13798  1F20  07A6               	movlw	0
 13799  1F21  3000               	addwfc	(atoi@s+1),f
 13800  1F22  3DA7               	goto	l4371
 13801  1F23  2F24               	
 13802                           l1040:	
 13803  1F24                     	
 13804                           l4371:	
 13805  1F24                     	clrf	(_atoi$1256)
 13806  1F24  01B2               	incf	(_atoi$1256),f
 13807  1F25  0AB2               	
 13808                           l4373:	
 13809  1F26                     	movf	(atoi@s),w
 13810  1F26  0826               	movwf	fsr0l
 13811  1F27  0084               	movf	((atoi@s+1)),w
 13812  1F28  0827               	movwf	fsr0h
 13813  1F29  0085               	moviw	fsr0++
 13814  1F2A  0012               xorlw	32
 13815  1F2B  3A20               	btfsc	status,2
 13816  1F2C  1903               	goto	u6081
 13817  1F2D  2F2F               	goto	u6080
 13818  1F2E  2F30               u6081:
 13819  1F2F                     	goto	l4379
 13820  1F2F  2F46               u6080:
 13821  1F30                     	
 13822                           l4375:	
 13823  1F30                     	movf	(atoi@s),w
 13824  1F30  0826               	movwf	fsr0l
 13825  1F31  0084               	movf	((atoi@s+1)),w
 13826  1F32  0827               	movwf	fsr0h
 13827  1F33  0085               	movf	indf0,w ;code access
 13828  1F34  0800               	addlw	low(0FFF7h)
 13829  1F35  3EF7               	movwf	(??_atoi+0)+0
 13830  1F36  00A8               	movlw	high(0FFF7h)
 13831  1F37  30FF               	skipnc
 13832  1F38  1803               	movlw	(high(0FFF7h)+1)&0ffh
 13833  1F39  3000               	movwf	((??_atoi+0)+0)+1
 13834  1F3A  00A9               	movlw	0
 13835  1F3B  3000               	subwf	1+(??_atoi+0)+0,w
 13836  1F3C  0229               	movlw	05h
 13837  1F3D  3005               	skipnz
 13838  1F3E  1903               	subwf	0+(??_atoi+0)+0,w
 13839  1F3F  0228               	skipc
 13840  1F40  1C03               	goto	u6091
 13841  1F41  2F43               	goto	u6090
 13842  1F42  2F44               u6091:
 13843  1F43                     	goto	l4379
 13844  1F43  2F46               u6090:
 13845  1F44                     	
 13846                           l4377:	
 13847  1F44                     	clrf	(_atoi$1256)
 13848  1F44  01B2               	goto	l4379
 13849  1F45  2F46               	
 13850                           l1047:	
 13851  1F46                     	
 13852                           l4379:	
 13853  1F46                     	movf	(_atoi$1256),w
 13854  1F46  0832               	movwf	(??_atoi+0)+0
 13855  1F47  00A8               	clrf	(??_atoi+0)+0+1
 13856  1F48  01A9               	movf	0+(??_atoi+0)+0,w
 13857  1F49  0828               	movwf	(_atoi$1255)
 13858  1F4A  00AE               	movf	1+(??_atoi+0)+0,w
 13859  1F4B  0829               	movwf	(_atoi$1255+1)
 13860  1F4C  00AF               	goto	l4383
 13861  1F4D  2F62               	
 13862                           l1043:	
 13863  1F4E                     	
 13864                           l4381:	
 13865  1F4E                     	movf	(atoi@s),w
 13866  1F4E  0826               	movwf	fsr0l
 13867  1F4F  0084               	movf	((atoi@s+1)),w
 13868  1F50  0827               	movwf	fsr0h
 13869  1F51  0085               	movf	indf0,w ;code access
 13870  1F52  0800               	movwf	(??_atoi+0)+0
 13871  1F53  00A8               	clrf	(??_atoi+0)+0+1
 13872  1F54  01A9               	movf	0+(??_atoi+0)+0,w
 13873  1F55  0828               	movwf	(isspace@c)
 13874  1F56  00A0               	movf	1+(??_atoi+0)+0,w
 13875  1F57  0829               	movwf	(isspace@c+1)
 13876  1F58  00A1               	fcall	_isspace
 13877  1F59  31A2  2276  319F   	movlb 0	; select bank0
 13878  1F5C  0140               	movf	(1+(?_isspace)),w
 13879  1F5D  0821               	movwf	(_atoi$1255+1)
 13880  1F5E  00AF               	movf	(0+(?_isspace)),w
 13881  1F5F  0820               	movwf	(_atoi$1255)
 13882  1F60  00AE               	goto	l4383
 13883  1F61  2F62               	
 13884                           l1045:	
 13885  1F62                     	
 13886                           l4383:	
 13887  1F62                     	movf	((_atoi$1255)),w
 13888  1F62  082E               iorwf	((_atoi$1255+1)),w
 13889  1F63  042F               	btfss	status,2
 13890  1F64  1D03               	goto	u6101
 13891  1F65  2F67               	goto	u6100
 13892  1F66  2F68               u6101:
 13893  1F67                     	goto	l4369
 13894  1F67  2F1F               u6100:
 13895  1F68                     	goto	l4387
 13896  1F68  2F73               	
 13897                           l1048:	
 13898  1F69                     	line	8
 13899                           	goto	l4387
 13900  1F69  2F73               	line	9
 13901                           	
 13902                           l1050:	
 13903  1F6A                     	
 13904                           l4385:	
 13905  1F6A                     	movlw	01h
 13906  1F6A  3001               	movwf	(atoi@neg)
 13907  1F6B  00AC               	movlw	0
 13908  1F6C  3000               	movwf	((atoi@neg))+1
 13909  1F6D  00AD               	line	10
 13910                           	
 13911                           l1051:	
 13912  1F6E                     	movlw	01h
 13913  1F6E  3001               	addwf	(atoi@s),f
 13914  1F6F  07A6               	movlw	0
 13915  1F70  3000               	addwfc	(atoi@s+1),f
 13916  1F71  3DA7               	line	11
 13917                           	goto	l4393
 13918  1F72  2FAF               	
 13919                           l1049:	
 13920  1F73                     	
 13921                           l4387:	
 13922  1F73                     	movf	(atoi@s),w
 13923  1F73  0826               	movwf	fsr0l
 13924  1F74  0084               	movf	((atoi@s+1)),w
 13925  1F75  0827               	movwf	fsr0h
 13926  1F76  0085               	movf	indf0,w ;code access
 13927  1F77  0800               	movwf	(??_atoi+0)+0
 13928  1F78  00A8               	clrf	(??_atoi+0)+0+1
 13929  1F79  01A9               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 13930                           ; Switch size 1, requested type "space"
 13931                           ; Number of cases is 1, Range of values is 0 to 0
 13932                           ; switch strategies available:
 13933                           ; Name         Instructions Cycles
 13934                           ; simple_byte            4     3 (average)
 13935                           ; direct_byte            8     6 (fixed)
 13936                           ; jumptable            260     6 (fixed)
 13937                           ;	Chosen strategy is simple_byte
 13938                           
 13939                           	movf 1+(??_atoi+0)+0,w
 13940  1F7A  0829               	opt asmopt_push
 13941                           	opt asmopt_off
 13942                           	xorlw	0^0	; case 0
 13943  1F7B  3A00               	skipnz
 13944  1F7C  1903               	goto	l5173
 13945  1F7D  2F7F               	goto	l4393
 13946  1F7E  2FAF               	opt asmopt_pop
 13947                           	
 13948                           l5173:	
 13949  1F7F                     ; Switch size 1, requested type "space"
 13950                           ; Number of cases is 2, Range of values is 43 to 45
 13951                           ; switch strategies available:
 13952                           ; Name         Instructions Cycles
 13953                           ; simple_byte            7     4 (average)
 13954                           ; direct_byte           15     9 (fixed)
 13955                           ; jumptable            263     9 (fixed)
 13956                           ;	Chosen strategy is simple_byte
 13957                           
 13958                           	movf 0+(??_atoi+0)+0,w
 13959  1F7F  0828               	opt asmopt_push
 13960                           	opt asmopt_off
 13961                           	xorlw	43^0	; case 43
 13962  1F80  3A2B               	skipnz
 13963  1F81  1903               	goto	l1051
 13964  1F82  2F6E               	xorlw	45^43	; case 45
 13965  1F83  3A06               	skipnz
 13966  1F84  1903               	goto	l4385
 13967  1F85  2F6A               	goto	l4393
 13968  1F86  2FAF               	opt asmopt_pop
 13969                           
 13970                           	
 13971                           l1052:	
 13972  1F87                     	line	13
 13973                           	goto	l4393
 13974  1F87  2FAF               	
 13975                           l1054:	
 13976  1F88                     	line	14
 13977                           	
 13978                           l4389:	
 13979  1F88                     	movf	(atoi@s),w
 13980  1F88  0826               	movwf	fsr0l
 13981  1F89  0084               	movf	((atoi@s+1)),w
 13982  1F8A  0827               	movwf	fsr0h
 13983  1F8B  0085               	movf	indf0,w ;code access
 13984  1F8C  0800               	addlw	low(0FFD0h)
 13985  1F8D  3ED0               	movwf	(??_atoi+0)+0
 13986  1F8E  00A8               	movlw	high(0FFD0h)
 13987  1F8F  30FF               	skipnc
 13988  1F90  1803               	movlw	(high(0FFD0h)+1)&0ffh
 13989  1F91  3000               	movwf	((??_atoi+0)+0)+1
 13990  1F92  00A9               	comf	(??_atoi+0)+0,f
 13991  1F93  09A8               	comf	(??_atoi+0)+1,f
 13992  1F94  09A9               	incf	(??_atoi+0)+0,f
 13993  1F95  0AA8               	skipnz
 13994  1F96  1903               	incf	(??_atoi+0)+1,f
 13995  1F97  0AA9               	movf	(atoi@n+1),w
 13996  1F98  0834               	movwf	(___wmul@multiplier+1)
 13997  1F99  00A1               	movf	(atoi@n),w
 13998  1F9A  0833               	movwf	(___wmul@multiplier)
 13999  1F9B  00A0               	movlw	0Ah
 14000  1F9C  300A               	movwf	(___wmul@multiplicand)
 14001  1F9D  00A2               	movlw	0
 14002  1F9E  3000               	movwf	((___wmul@multiplicand))+1
 14003  1F9F  00A3               	fcall	___wmul
 14004  1FA0  31A2  2253  319F   	movlb 0	; select bank0
 14005  1FA3  0140               	movf	0+(??_atoi+0)+0,w
 14006  1FA4  0828               	addwf	(0+(?___wmul)),w
 14007  1FA5  0720               	movwf	(atoi@n)
 14008  1FA6  00B3               	movf	1+(??_atoi+0)+0,w
 14009  1FA7  0829               	addwfc	(1+(?___wmul)),w
 14010  1FA8  3D21               	movwf	1+(atoi@n)
 14011  1FA9  00B4               	
 14012                           l4391:	
 14013  1FAA                     	movlw	01h
 14014  1FAA  3001               	addwf	(atoi@s),f
 14015  1FAB  07A6               	movlw	0
 14016  1FAC  3000               	addwfc	(atoi@s+1),f
 14017  1FAD  3DA7               	goto	l4393
 14018  1FAE  2FAF               	
 14019                           l1053:	
 14020  1FAF                     	line	13
 14021                           	
 14022                           l4393:	
 14023  1FAF                     	movf	(atoi@s),w
 14024  1FAF  0826               	movwf	fsr0l
 14025  1FB0  0084               	movf	((atoi@s+1)),w
 14026  1FB1  0827               	movwf	fsr0h
 14027  1FB2  0085               	movf	indf0,w ;code access
 14028  1FB3  0800               	addlw	low(0FFD0h)
 14029  1FB4  3ED0               	movwf	(??_atoi+0)+0
 14030  1FB5  00A8               	movlw	high(0FFD0h)
 14031  1FB6  30FF               	skipnc
 14032  1FB7  1803               	movlw	(high(0FFD0h)+1)&0ffh
 14033  1FB8  3000               	movwf	((??_atoi+0)+0)+1
 14034  1FB9  00A9               	movlw	0
 14035  1FBA  3000               	subwf	1+(??_atoi+0)+0,w
 14036  1FBB  0229               	movlw	0Ah
 14037  1FBC  300A               	skipnz
 14038  1FBD  1903               	subwf	0+(??_atoi+0)+0,w
 14039  1FBE  0228               	skipc
 14040  1FBF  1C03               	goto	u6111
 14041  1FC0  2FC2               	goto	u6110
 14042  1FC1  2FC4               u6111:
 14043  1FC2                     	movlw	1
 14044  1FC2  3001               	goto	u6120
 14045  1FC3  2FC5               u6110:
 14046  1FC4                     	movlw	0
 14047  1FC4  3000               u6120:
 14048  1FC5                     	movwf	(??_atoi+2)+0
 14049  1FC5  00AA               	clrf	(??_atoi+2)+0+1
 14050  1FC6  01AB               	movf	0+(??_atoi+2)+0,w
 14051  1FC7  082A               	movwf	(_atoi$1257)
 14052  1FC8  00B0               	movf	1+(??_atoi+2)+0,w
 14053  1FC9  082B               	movwf	(_atoi$1257+1)
 14054  1FCA  00B1               	goto	l4397
 14055  1FCB  2FE0               	
 14056                           l1056:	
 14057  1FCC                     	
 14058                           l4395:	
 14059  1FCC                     	movf	(atoi@s),w
 14060  1FCC  0826               	movwf	fsr0l
 14061  1FCD  0084               	movf	((atoi@s+1)),w
 14062  1FCE  0827               	movwf	fsr0h
 14063  1FCF  0085               	movf	indf0,w ;code access
 14064  1FD0  0800               	movwf	(??_atoi+0)+0
 14065  1FD1  00A8               	clrf	(??_atoi+0)+0+1
 14066  1FD2  01A9               	movf	0+(??_atoi+0)+0,w
 14067  1FD3  0828               	movwf	(isdigit@c)
 14068  1FD4  00A0               	movf	1+(??_atoi+0)+0,w
 14069  1FD5  0829               	movwf	(isdigit@c+1)
 14070  1FD6  00A1               	fcall	_isdigit
 14071  1FD7  31A1  21B9  319F   	movlb 0	; select bank0
 14072  1FDA  0140               	movf	(1+(?_isdigit)),w
 14073  1FDB  0821               	movwf	(_atoi$1257+1)
 14074  1FDC  00B1               	movf	(0+(?_isdigit)),w
 14075  1FDD  0820               	movwf	(_atoi$1257)
 14076  1FDE  00B0               	goto	l4397
 14077  1FDF  2FE0               	
 14078                           l1058:	
 14079  1FE0                     	
 14080                           l4397:	
 14081  1FE0                     	movf	((_atoi$1257)),w
 14082  1FE0  0830               iorwf	((_atoi$1257+1)),w
 14083  1FE1  0431               	btfss	status,2
 14084  1FE2  1D03               	goto	u6131
 14085  1FE3  2FE5               	goto	u6130
 14086  1FE4  2FE6               u6131:
 14087  1FE5                     	goto	l4389
 14088  1FE5  2F88               u6130:
 14089  1FE6                     	goto	l4399
 14090  1FE6  2FE7               	
 14091                           l1059:	
 14092  1FE7                     	line	15
 14093                           	
 14094                           l4399:	
 14095  1FE7                     	movf	((atoi@neg)),w
 14096  1FE7  082C               iorwf	((atoi@neg+1)),w
 14097  1FE8  042D               	btfss	status,2
 14098  1FE9  1D03               	goto	u6141
 14099  1FEA  2FEC               	goto	u6140
 14100  1FEB  2FED               u6141:
 14101  1FEC                     	goto	l4403
 14102  1FEC  2FF9               u6140:
 14103  1FED                     	
 14104                           l4401:	
 14105  1FED                     	comf	(atoi@n),w
 14106  1FED  0933               	movwf	(??_atoi+0)+0
 14107  1FEE  00A8               	comf	(atoi@n+1),w
 14108  1FEF  0934               	movwf	((??_atoi+0)+0+1)
 14109  1FF0  00A9               	incf	(??_atoi+0)+0,f
 14110  1FF1  0AA8               	skipnz
 14111  1FF2  1903               	incf	((??_atoi+0)+0+1),f
 14112  1FF3  0AA9               	movf	0+(??_atoi+0)+0,w
 14113  1FF4  0828               	movwf	(?_atoi)
 14114  1FF5  00A6               	movf	1+(??_atoi+0)+0,w
 14115  1FF6  0829               	movwf	(?_atoi+1)
 14116  1FF7  00A7               	goto	l1064
 14117  1FF8  2FFF               	
 14118                           l1061:	
 14119  1FF9                     	
 14120                           l4403:	
 14121  1FF9                     	movf	(atoi@n+1),w
 14122  1FF9  0834               	movwf	(?_atoi+1)
 14123  1FFA  00A7               	movf	(atoi@n),w
 14124  1FFB  0833               	movwf	(?_atoi)
 14125  1FFC  00A6               	goto	l1064
 14126  1FFD  2FFF               	
 14127                           l1063:	
 14128  1FFE                     	goto	l1064
 14129  1FFE  2FFF               	
 14130                           l4405:	
 14131  1FFF                     	line	16
 14132                           	
 14133                           l1064:	
 14134  1FFF                     	return
 14135  1FFF  0008               	opt stack 0
 14136                           GLOBAL	__end_of_atoi
 14137                           	__end_of_atoi:
 14138  2000                     	signat	_atoi,4218
 14139                           	global	_isspace
 14140                           
 14141 ;; *************** function _isspace *****************
 14142 ;; Defined at:
 14143 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isspace.c"
 14144 ;; Parameters:    Size  Location     Type
 14145 ;;  c               2    0[BANK0 ] int 
 14146 ;; Auto vars:     Size  Location     Type
 14147 ;;		None
 14148 ;; Return value:  Size  Location     Type
 14149 ;;                  2    0[BANK0 ] int 
 14150 ;; Registers used:
 14151 ;;		wreg, status,2, status,0
 14152 ;; Tracked objects:
 14153 ;;		On entry : 0/0
 14154 ;;		On exit  : 0/0
 14155 ;;		Unchanged: 0/0
 14156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14157 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14158 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14159 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14160 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14161 ;;Total ram usage:        5 bytes
 14162 ;; Hardware stack levels used:    1
 14163 ;; Hardware stack levels required when called:    3
 14164 ;; This function calls:
 14165 ;;		Nothing
 14166 ;; This function is called by:
 14167 ;;		_atoi
 14168 ;; This function uses a non-reentrant model
 14169 ;;
 14170                           psect	text28,local,class=CODE,delta=2,merge=1,group=2
 14171                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isspace.c"
 14172                           	line	5
 14173                           global __ptext28
 14174                           __ptext28:	;psect for function _isspace
 14175  2276                     psect	text28
 14176                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isspace.c"
 14177                           	line	5
 14178                           	global	__size_of_isspace
 14179                           	__size_of_isspace	equ	__end_of_isspace-_isspace
 14180  0024                     	
 14181                           _isspace:	
 14182  2276                     ;incstack = 0
 14183                           	opt	stack 7
 14184                           ; Regs used in _isspace: [wreg+status,2+status,0]
 14185                           	line	7
 14186                           	
 14187                           l3991:	
 14188  2276                     	movlb 0	; select bank0
 14189  2276  0140               	clrf	(_isspace$1286)
 14190  2277  01A4               	incf	(_isspace$1286),f
 14191  2278  0AA4               	
 14192                           l3993:	
 14193  2279                     		movlw	32
 14194  2279  3020               	xorwf	((isspace@c)),w
 14195  227A  0620               iorwf	((isspace@c+1)),w
 14196  227B  0421               	btfsc	status,2
 14197  227C  1903               	goto	u5431
 14198  227D  2A7F               	goto	u5430
 14199  227E  2A80               u5431:
 14200  227F                     	goto	l3999
 14201  227F  2A91               u5430:
 14202  2280                     	
 14203                           l3995:	
 14204  2280                     	movf	(isspace@c),w
 14205  2280  0820               	addlw	0F7h
 14206  2281  3EF7               	movwf	(??_isspace+0)+0
 14207  2282  00A2               	movlw	0FFh
 14208  2283  30FF               	addwfc	(isspace@c+1),w
 14209  2284  3D21               	movwf	1+(??_isspace+0)+0
 14210  2285  00A3               	movlw	0
 14211  2286  3000               	subwf	1+(??_isspace+0)+0,w
 14212  2287  0223               	movlw	05h
 14213  2288  3005               	skipnz
 14214  2289  1903               	subwf	0+(??_isspace+0)+0,w
 14215  228A  0222               	skipc
 14216  228B  1C03               	goto	u5441
 14217  228C  2A8E               	goto	u5440
 14218  228D  2A8F               u5441:
 14219  228E                     	goto	l3999
 14220  228E  2A91               u5440:
 14221  228F                     	
 14222                           l3997:	
 14223  228F                     	clrf	(_isspace$1286)
 14224  228F  01A4               	goto	l3999
 14225  2290  2A91               	
 14226                           l1087:	
 14227  2291                     	
 14228                           l3999:	
 14229  2291                     	movf	(_isspace$1286),w
 14230  2291  0824               	movwf	(??_isspace+0)+0
 14231  2292  00A2               	clrf	(??_isspace+0)+0+1
 14232  2293  01A3               	movf	0+(??_isspace+0)+0,w
 14233  2294  0822               	movwf	(?_isspace)
 14234  2295  00A0               	movf	1+(??_isspace+0)+0,w
 14235  2296  0823               	movwf	(?_isspace+1)
 14236  2297  00A1               	goto	l1088
 14237  2298  2A99               	
 14238                           l4001:	
 14239  2299                     	line	8
 14240                           	
 14241                           l1088:	
 14242  2299                     	return
 14243  2299  0008               	opt stack 0
 14244                           GLOBAL	__end_of_isspace
 14245                           	__end_of_isspace:
 14246  229A                     	signat	_isspace,4218
 14247                           	global	_isdigit
 14248                           
 14249 ;; *************** function _isdigit *****************
 14250 ;; Defined at:
 14251 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isdigit.c"
 14252 ;; Parameters:    Size  Location     Type
 14253 ;;  c               2    0[BANK0 ] int 
 14254 ;; Auto vars:     Size  Location     Type
 14255 ;;		None
 14256 ;; Return value:  Size  Location     Type
 14257 ;;                  2    0[BANK0 ] int 
 14258 ;; Registers used:
 14259 ;;		wreg, status,2, status,0
 14260 ;; Tracked objects:
 14261 ;;		On entry : 0/0
 14262 ;;		On exit  : 0/0
 14263 ;;		Unchanged: 0/0
 14264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14265 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14267 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14268 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14269 ;;Total ram usage:        6 bytes
 14270 ;; Hardware stack levels used:    1
 14271 ;; Hardware stack levels required when called:    3
 14272 ;; This function calls:
 14273 ;;		Nothing
 14274 ;; This function is called by:
 14275 ;;		_vfpfcnvrt
 14276 ;;		_atoi
 14277 ;; This function uses a non-reentrant model
 14278 ;;
 14279                           psect	text29,local,class=CODE,delta=2,merge=1,group=2
 14280                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isdigit.c"
 14281                           	line	5
 14282                           global __ptext29
 14283                           __ptext29:	;psect for function _isdigit
 14284  21B9                     psect	text29
 14285                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isdigit.c"
 14286                           	line	5
 14287                           	global	__size_of_isdigit
 14288                           	__size_of_isdigit	equ	__end_of_isdigit-_isdigit
 14289  001A                     	
 14290                           _isdigit:	
 14291  21B9                     ;incstack = 0
 14292                           	opt	stack 8
 14293                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 14294                           	line	7
 14295                           	
 14296                           l3523:	
 14297  21B9                     	movlb 0	; select bank0
 14298  21B9  0140               	movf	(isdigit@c),w
 14299  21BA  0820               	addlw	0D0h
 14300  21BB  3ED0               	movwf	(??_isdigit+0)+0
 14301  21BC  00A2               	movlw	0FFh
 14302  21BD  30FF               	addwfc	(isdigit@c+1),w
 14303  21BE  3D21               	movwf	1+(??_isdigit+0)+0
 14304  21BF  00A3               	movlw	0
 14305  21C0  3000               	subwf	1+(??_isdigit+0)+0,w
 14306  21C1  0223               	movlw	0Ah
 14307  21C2  300A               	skipnz
 14308  21C3  1903               	subwf	0+(??_isdigit+0)+0,w
 14309  21C4  0222               	skipc
 14310  21C5  1C03               	goto	u4441
 14311  21C6  29C8               	goto	u4440
 14312  21C7  29CA               u4441:
 14313  21C8                     	movlw	1
 14314  21C8  3001               	goto	u4450
 14315  21C9  29CB               u4440:
 14316  21CA                     	movlw	0
 14317  21CA  3000               u4450:
 14318  21CB                     	movwf	(??_isdigit+2)+0
 14319  21CB  00A4               	clrf	(??_isdigit+2)+0+1
 14320  21CC  01A5               	movf	0+(??_isdigit+2)+0,w
 14321  21CD  0824               	movwf	(?_isdigit)
 14322  21CE  00A0               	movf	1+(??_isdigit+2)+0,w
 14323  21CF  0825               	movwf	(?_isdigit+1)
 14324  21D0  00A1               	goto	l1080
 14325  21D1  29D2               	
 14326                           l3525:	
 14327  21D2                     	line	8
 14328                           	
 14329                           l1080:	
 14330  21D2                     	return
 14331  21D2  0008               	opt stack 0
 14332                           GLOBAL	__end_of_isdigit
 14333                           	__end_of_isdigit:
 14334  21D3                     	signat	_isdigit,4218
 14335                           	global	___wmul
 14336                           
 14337 ;; *************** function ___wmul *****************
 14338 ;; Defined at:
 14339 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 14340 ;; Parameters:    Size  Location     Type
 14341 ;;  multiplier      2    0[BANK0 ] unsigned int 
 14342 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 14343 ;; Auto vars:     Size  Location     Type
 14344 ;;  product         2    4[BANK0 ] unsigned int 
 14345 ;; Return value:  Size  Location     Type
 14346 ;;                  2    0[BANK0 ] unsigned int 
 14347 ;; Registers used:
 14348 ;;		wreg, status,2, status,0
 14349 ;; Tracked objects:
 14350 ;;		On entry : 0/0
 14351 ;;		On exit  : 0/0
 14352 ;;		Unchanged: 0/0
 14353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14354 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14355 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14357 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14358 ;;Total ram usage:        6 bytes
 14359 ;; Hardware stack levels used:    1
 14360 ;; Hardware stack levels required when called:    3
 14361 ;; This function calls:
 14362 ;;		Nothing
 14363 ;; This function is called by:
 14364 ;;		_atoi
 14365 ;; This function uses a non-reentrant model
 14366 ;;
 14367                           psect	text30,local,class=CODE,delta=2,merge=1,group=1
 14368                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 14369                           	line	15
 14370                           global __ptext30
 14371                           __ptext30:	;psect for function ___wmul
 14372  2253                     psect	text30
 14373                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 14374                           	line	15
 14375                           	global	__size_of___wmul
 14376                           	__size_of___wmul	equ	__end_of___wmul-___wmul
 14377  0023                     	
 14378                           ___wmul:	
 14379  2253                     ;incstack = 0
 14380                           	opt	stack 7
 14381                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 14382                           	line	43
 14383                           	
 14384                           l3527:	
 14385  2253                     	movlb 0	; select bank0
 14386  2253  0140               	clrf	(___wmul@product)
 14387  2254  01A4               	clrf	(___wmul@product+1)
 14388  2255  01A5               	goto	l3529
 14389  2256  2A57               	line	44
 14390                           	
 14391                           l590:	
 14392  2257                     	line	45
 14393                           	
 14394                           l3529:	
 14395  2257                     	btfss	(___wmul@multiplier),(0)&7
 14396  2257  1C20               	goto	u4461
 14397  2258  2A5A               	goto	u4460
 14398  2259  2A5B               u4461:
 14399  225A                     	goto	l591
 14400  225A  2A5F               u4460:
 14401  225B                     	line	46
 14402                           	
 14403                           l3531:	
 14404  225B                     	movf	(___wmul@multiplicand),w
 14405  225B  0822               	addwf	(___wmul@product),f
 14406  225C  07A4               	movf	(___wmul@multiplicand+1),w
 14407  225D  0823               	addwfc	(___wmul@product+1),f
 14408  225E  3DA5               	
 14409                           l591:	
 14410  225F                     	line	47
 14411                           	movlw	01h
 14412  225F  3001               	
 14413                           u4475:
 14414  2260                     	lslf	(___wmul@multiplicand),f
 14415  2260  35A2               	rlf	(___wmul@multiplicand+1),f
 14416  2261  0DA3               	decfsz	wreg,f
 14417  2262  0B89               	goto	u4475
 14418  2263  2A60               	line	48
 14419                           	
 14420                           l3533:	
 14421  2264                     	movlw	01h
 14422  2264  3001               	
 14423                           u4485:
 14424  2265                     	lsrf	(___wmul@multiplier+1),f
 14425  2265  36A1               	rrf	(___wmul@multiplier),f
 14426  2266  0CA0               	decfsz	wreg,f
 14427  2267  0B89               	goto	u4485
 14428  2268  2A65               	line	49
 14429                           	
 14430                           l3535:	
 14431  2269                     	movf	((___wmul@multiplier)),w
 14432  2269  0820               iorwf	((___wmul@multiplier+1)),w
 14433  226A  0421               	btfss	status,2
 14434  226B  1D03               	goto	u4491
 14435  226C  2A6E               	goto	u4490
 14436  226D  2A6F               u4491:
 14437  226E                     	goto	l3529
 14438  226E  2A57               u4490:
 14439  226F                     	goto	l3537
 14440  226F  2A70               	
 14441                           l592:	
 14442  2270                     	line	52
 14443                           	
 14444                           l3537:	
 14445  2270                     	movf	(___wmul@product+1),w
 14446  2270  0825               	movwf	(?___wmul+1)
 14447  2271  00A1               	movf	(___wmul@product),w
 14448  2272  0824               	movwf	(?___wmul)
 14449  2273  00A0               	goto	l593
 14450  2274  2A75               	
 14451                           l3539:	
 14452  2275                     	line	53
 14453                           	
 14454                           l593:	
 14455  2275                     	return
 14456  2275  0008               	opt stack 0
 14457                           GLOBAL	__end_of___wmul
 14458                           	__end_of___wmul:
 14459  2276                     	signat	___wmul,8314
 14460                           	global	_menuInput
 14461                           
 14462 ;; *************** function _menuInput *****************
 14463 ;; Defined at:
 14464 ;;		line 261 in file "main.c"
 14465 ;; Parameters:    Size  Location     Type
 14466 ;;  page            1    wreg     PTR unsigned char 
 14467 ;;		 -> showMenu@page(1), 
 14468 ;;  numPages        1    7[BANK0 ] const unsigned char 
 14469 ;;  menu            1    8[BANK0 ] PTR unsigned char 
 14470 ;;		 -> showMenu@menu(1), 
 14471 ;;  pbShort         1    9[BANK0 ] unsigned char 
 14472 ;;  pbLong          1   10[BANK0 ] unsigned char 
 14473 ;;  timeout         1   11[BANK0 ] unsigned char 
 14474 ;; Auto vars:     Size  Location     Type
 14475 ;;  page            1   17[BANK0 ] PTR unsigned char 
 14476 ;;		 -> showMenu@page(1), 
 14477 ;;  n               1   16[BANK0 ] unsigned char 
 14478 ;;  pb              1   15[BANK0 ] enum E7840
 14479 ;;  dir             1   14[BANK0 ] enum E7836
 14480 ;; Return value:  Size  Location     Type
 14481 ;;                  1    wreg      void 
 14482 ;; Registers used:
 14483 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14484 ;; Tracked objects:
 14485 ;;		On entry : 0/0
 14486 ;;		On exit  : 0/0
 14487 ;;		Unchanged: 0/0
 14488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14489 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14490 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14491 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14492 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14493 ;;Total ram usage:       11 bytes
 14494 ;; Hardware stack levels used:    1
 14495 ;; Hardware stack levels required when called:    8
 14496 ;; This function calls:
 14497 ;;		_OLED_returnHome
 14498 ;;		_OLED_scrollDisplayLeft
 14499 ;;		_OLED_scrollDisplayRight
 14500 ;;		_getPB
 14501 ;;		_getRotDir
 14502 ;; This function is called by:
 14503 ;;		_showMenu
 14504 ;; This function uses a non-reentrant model
 14505 ;;
 14506                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
 14507                           	file	"main.c"
 14508                           	line	261
 14509                           global __ptext31
 14510                           __ptext31:	;psect for function _menuInput
 14511  1C9D                     psect	text31
 14512                           	file	"main.c"
 14513                           	line	261
 14514                           	global	__size_of_menuInput
 14515                           	__size_of_menuInput	equ	__end_of_menuInput-_menuInput
 14516  00C3                     	
 14517                           _menuInput:	
 14518  1C9D                     ;incstack = 0
 14519                           	opt	stack 6
 14520                           ; Regs used in _menuInput: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14521                           ;menuInput@page stored from wreg
 14522                           	movlb 0	; select bank0
 14523  1C9D  0140               	movwf	(menuInput@page)
 14524  1C9E  00B1               	line	268
 14525                           	
 14526                           l4657:	
 14527  1C9F                     ;main.c: 261: void menuInput(uint8_t *page, const uint8_t numPages, uint8_t *menu,;main.
                                 c: 262:  uint8_t pbShort, uint8_t pbLong, uint8_t timeout);main.c: 263: {;main.c: 264:  
                                 uint8_t n;;main.c: 265:  enum e_direction dir;;main.c: 266:  enum e_buttonPress pb;;main
                                 .c: 268:  PIE0bits.IOCIE = 0;
 14528                           	movlb 14	; select bank14
 14529  1C9F  014E               	bcf	(1814)^0700h,4	;volatile
 14530  1CA0  1216               	line	269
 14531                           	
 14532                           l4659:	
 14533  1CA1                     ;main.c: 269:  dir = getRotDir();
 14534                           	fcall	_getRotDir
 14535  1CA1  31A1  216A  319C   	movlb 0	; select bank0
 14536  1CA4  0140               	movwf	(??_menuInput+0)+0
 14537  1CA5  00AC               	movf	(??_menuInput+0)+0,w
 14538  1CA6  082C               	movwf	(menuInput@dir)
 14539  1CA7  00AE               	line	270
 14540                           ;main.c: 270:  pb = getPB();
 14541                           	fcall	_getPB
 14542  1CA8  31A1  215E  319C   	movlb 0	; select bank0
 14543  1CAB  0140               	movwf	(??_menuInput+0)+0
 14544  1CAC  00AC               	movf	(??_menuInput+0)+0,w
 14545  1CAD  082C               	movwf	(menuInput@pb)
 14546  1CAE  00AF               	line	272
 14547                           	
 14548                           l4661:	
 14549  1CAF                     ;main.c: 272:  if ((dir == ROT_CW) && (*page < numPages - 1)) {
 14550                           		decf	((menuInput@dir)),w
 14551  1CAF  032E               	btfss	status,2
 14552  1CB0  1D03               	goto	u6481
 14553  1CB1  2CB3               	goto	u6480
 14554  1CB2  2CB4               u6481:
 14555  1CB3                     	goto	l4681
 14556  1CB3  2CF5               u6480:
 14557  1CB4                     	
 14558                           l4663:	
 14559  1CB4                     	movf	(menuInput@numPages),w
 14560  1CB4  0827               	addlw	low(-1)
 14561  1CB5  3EFF               	movwf	(??_menuInput+0)+0
 14562  1CB6  00AC               	movlw	high(-1)
 14563  1CB7  30FF               	skipnc
 14564  1CB8  1803               	movlw	(high(-1)+1)&0ffh
 14565  1CB9  3000               	movwf	((??_menuInput+0)+0)+1
 14566  1CBA  00AD               	movf	(menuInput@page),w
 14567  1CBB  0831               	movwf	fsr1l
 14568  1CBC  0086               	movlw 1	; select bank2/3
 14569  1CBD  3001               	movwf fsr1h	
 14570  1CBE  0087               	
 14571                           	movf	1+(??_menuInput+0)+0,w
 14572  1CBF  082D               	xorlw	80h
 14573  1CC0  3A80               	sublw	080h
 14574  1CC1  3C80               	skipz
 14575  1CC2  1D03               	goto	u6495
 14576  1CC3  2CC6               	movf	0+(??_menuInput+0)+0,w
 14577  1CC4  082C               	subwf	indf1,w
 14578  1CC5  0201               u6495:
 14579  1CC6                     
 14580                           	skipnc
 14581  1CC6  1803               	goto	u6491
 14582  1CC7  2CC9               	goto	u6490
 14583  1CC8  2CCA               u6491:
 14584  1CC9                     	goto	l4681
 14585  1CC9  2CF5               u6490:
 14586  1CCA                     	line	273
 14587                           	
 14588                           l4665:	
 14589  1CCA                     ;main.c: 273:   (*page)++;
 14590                           	movlw	low(01h)
 14591  1CCA  3001               	movlb 0	; select bank0
 14592  1CCB  0140               	movwf	(??_menuInput+0)+0
 14593  1CCC  00AC               	movf	(menuInput@page),w
 14594  1CCD  0831               	movwf	fsr1l
 14595  1CCE  0086               	movlw 1	; select bank2/3
 14596  1CCF  3001               	movwf fsr1h	
 14597  1CD0  0087               	
 14598                           	movf	(??_menuInput+0)+0,w
 14599  1CD1  082C               	addwf	indf1,f
 14600  1CD2  0781               	line	274
 14601                           	
 14602                           l4667:	
 14603  1CD3                     ;main.c: 274:   for(n = 0; n < 12; n++) {
 14604                           	clrf	(menuInput@n)
 14605  1CD3  01B0               	
 14606                           l4669:	
 14607  1CD4                     	movlw	low(0Ch)
 14608  1CD4  300C               	subwf	(menuInput@n),w
 14609  1CD5  0230               	skipc
 14610  1CD6  1C03               	goto	u6501
 14611  1CD7  2CD9               	goto	u6500
 14612  1CD8  2CDA               u6501:
 14613  1CD9                     	goto	l4673
 14614  1CD9  2CDC               u6500:
 14615  1CDA                     	goto	l4701
 14616  1CDA  2D2E               	
 14617                           l4671:	
 14618  1CDB                     	goto	l4701
 14619  1CDB  2D2E               	
 14620                           l252:	
 14621  1CDC                     	line	275
 14622                           	
 14623                           l4673:	
 14624  1CDC                     ;main.c: 275:    OLED_scrollDisplayLeft();
 14625                           	fcall	_OLED_scrollDisplayLeft
 14626  1CDC  31A1  2131  319C   	line	276
 14627                           	
 14628                           l4675:	
 14629  1CDF                     ;main.c: 276:    _delay((unsigned long)((20)*(4000000/4000.0)));
 14630                           	opt asmopt_push
 14631                           opt asmopt_off
 14632                           movlw	26
 14633  1CDF  301A               	movlb 0	; select bank0
 14634  1CE0  0140               movwf	((??_menuInput+0)+0),f
 14635  1CE1  00AC               	movlw	248
 14636  1CE2  30F8               u7207:
 14637  1CE3                     decfsz	wreg
 14638  1CE3  0B89               	goto	u7207
 14639  1CE4  2CE3               	decfsz	((??_menuInput+0)+0),f
 14640  1CE5  0BAC               	goto	u7207
 14641  1CE6  2CE3               	nop
 14642  1CE7  0000               opt asmopt_pop
 14643                           
 14644                           	line	277
 14645                           	
 14646                           l4677:	
 14647  1CE8                     ;main.c: 277:   }
 14648                           	movlw	low(01h)
 14649  1CE8  3001               	movlb 0	; select bank0
 14650  1CE9  0140               	movwf	(??_menuInput+0)+0
 14651  1CEA  00AC               	movf	(??_menuInput+0)+0,w
 14652  1CEB  082C               	addwf	(menuInput@n),f
 14653  1CEC  07B0               	
 14654                           l4679:	
 14655  1CED                     	movlw	low(0Ch)
 14656  1CED  300C               	subwf	(menuInput@n),w
 14657  1CEE  0230               	skipc
 14658  1CEF  1C03               	goto	u6511
 14659  1CF0  2CF2               	goto	u6510
 14660  1CF1  2CF3               u6511:
 14661  1CF2                     	goto	l4673
 14662  1CF2  2CDC               u6510:
 14663  1CF3                     	goto	l4701
 14664  1CF3  2D2E               	
 14665                           l253:	
 14666  1CF4                     	line	278
 14667                           ;main.c: 278:  }
 14668                           	goto	l4701
 14669  1CF4  2D2E               	line	279
 14670                           ;main.c: 279:  else if ((dir == ROT_CCW) && (*page > 0)) {
 14671                           	
 14672                           l251:	
 14673  1CF5                     	
 14674                           l4681:	
 14675  1CF5                     		movlw	2
 14676  1CF5  3002               	movlb 0	; select bank0
 14677  1CF6  0140               	xorwf	((menuInput@dir)),w
 14678  1CF7  062E               	btfss	status,2
 14679  1CF8  1D03               	goto	u6521
 14680  1CF9  2CFB               	goto	u6520
 14681  1CFA  2CFC               u6521:
 14682  1CFB                     	goto	l4701
 14683  1CFB  2D2E               u6520:
 14684  1CFC                     	
 14685                           l4683:	
 14686  1CFC                     	movf	(menuInput@page),w
 14687  1CFC  0831               	movwf	fsr1l
 14688  1CFD  0086               	movlw 1	; select bank2/3
 14689  1CFE  3001               	movwf fsr1h	
 14690  1CFF  0087               	
 14691                           	movf	(indf1),w
 14692  1D00  0801               	btfsc	status,2
 14693  1D01  1903               	goto	u6531
 14694  1D02  2D04               	goto	u6530
 14695  1D03  2D05               u6531:
 14696  1D04                     	goto	l4701
 14697  1D04  2D2E               u6530:
 14698  1D05                     	line	280
 14699                           	
 14700                           l4685:	
 14701  1D05                     ;main.c: 280:   (*page)--;
 14702                           	movf	(menuInput@page),w
 14703  1D05  0831               	movwf	fsr1l
 14704  1D06  0086               	movlw 1	; select bank2/3
 14705  1D07  3001               	movwf fsr1h	
 14706  1D08  0087               	
 14707                           	movlw	01h
 14708  1D09  3001               	subwf	indf1,f
 14709  1D0A  0281               	line	281
 14710                           	
 14711                           l4687:	
 14712  1D0B                     ;main.c: 281:   for(n = 0; n < 12; n++) {
 14713                           	clrf	(menuInput@n)
 14714  1D0B  01B0               	
 14715                           l4689:	
 14716  1D0C                     	movlw	low(0Ch)
 14717  1D0C  300C               	subwf	(menuInput@n),w
 14718  1D0D  0230               	skipc
 14719  1D0E  1C03               	goto	u6541
 14720  1D0F  2D11               	goto	u6540
 14721  1D10  2D12               u6541:
 14722  1D11                     	goto	l4693
 14723  1D11  2D14               u6540:
 14724  1D12                     	goto	l4701
 14725  1D12  2D2E               	
 14726                           l4691:	
 14727  1D13                     	goto	l4701
 14728  1D13  2D2E               	
 14729                           l256:	
 14730  1D14                     	line	282
 14731                           	
 14732                           l4693:	
 14733  1D14                     ;main.c: 282:    OLED_scrollDisplayRight();
 14734                           	fcall	_OLED_scrollDisplayRight
 14735  1D14  31A1  2136  319C   	line	283
 14736                           	
 14737                           l4695:	
 14738  1D17                     ;main.c: 283:    _delay((unsigned long)((20)*(4000000/4000.0)));
 14739                           	opt asmopt_push
 14740                           opt asmopt_off
 14741                           movlw	26
 14742  1D17  301A               	movlb 0	; select bank0
 14743  1D18  0140               movwf	((??_menuInput+0)+0),f
 14744  1D19  00AC               	movlw	248
 14745  1D1A  30F8               u7217:
 14746  1D1B                     decfsz	wreg
 14747  1D1B  0B89               	goto	u7217
 14748  1D1C  2D1B               	decfsz	((??_menuInput+0)+0),f
 14749  1D1D  0BAC               	goto	u7217
 14750  1D1E  2D1B               	nop
 14751  1D1F  0000               opt asmopt_pop
 14752                           
 14753                           	line	284
 14754                           	
 14755                           l4697:	
 14756  1D20                     ;main.c: 284:   }
 14757                           	movlw	low(01h)
 14758  1D20  3001               	movlb 0	; select bank0
 14759  1D21  0140               	movwf	(??_menuInput+0)+0
 14760  1D22  00AC               	movf	(??_menuInput+0)+0,w
 14761  1D23  082C               	addwf	(menuInput@n),f
 14762  1D24  07B0               	
 14763                           l4699:	
 14764  1D25                     	movlw	low(0Ch)
 14765  1D25  300C               	subwf	(menuInput@n),w
 14766  1D26  0230               	skipc
 14767  1D27  1C03               	goto	u6551
 14768  1D28  2D2A               	goto	u6550
 14769  1D29  2D2B               u6551:
 14770  1D2A                     	goto	l4693
 14771  1D2A  2D14               u6550:
 14772  1D2B                     	goto	l4701
 14773  1D2B  2D2E               	
 14774                           l257:	
 14775  1D2C                     	goto	l4701
 14776  1D2C  2D2E               	line	285
 14777                           ;main.c: 285:  }
 14778                           	
 14779                           l255:	
 14780  1D2D                     	goto	l4701
 14781  1D2D  2D2E               	
 14782                           l254:	
 14783  1D2E                     	line	286
 14784                           	
 14785                           l4701:	
 14786  1D2E                     ;main.c: 286:  if (pb == PB_SHORT) {
 14787                           		decf	((menuInput@pb)),w
 14788  1D2E  032F               	btfss	status,2
 14789  1D2F  1D03               	goto	u6561
 14790  1D30  2D32               	goto	u6560
 14791  1D31  2D33               u6561:
 14792  1D32                     	goto	l4709
 14793  1D32  2D44               u6560:
 14794  1D33                     	line	287
 14795                           	
 14796                           l4703:	
 14797  1D33                     ;main.c: 287:   *menu = pbShort;
 14798                           	movf	(menuInput@pbShort),w
 14799  1D33  0829               	movwf	(??_menuInput+0)+0
 14800  1D34  00AC               	movf	(menuInput@menu),w
 14801  1D35  0828               	movwf	fsr1l
 14802  1D36  0086               	movlw 1	; select bank2/3
 14803  1D37  3001               	movwf fsr1h	
 14804  1D38  0087               	
 14805                           	movf	(??_menuInput+0)+0,w
 14806  1D39  082C               	movwf	indf1
 14807  1D3A  0081               	line	288
 14808                           	
 14809                           l4705:	
 14810  1D3B                     ;main.c: 288:   *page = 0;
 14811                           	movf	(menuInput@page),w
 14812  1D3B  0831               	movwf	fsr1l
 14813  1D3C  0086               	movlw 1	; select bank2/3
 14814  1D3D  3001               	movwf fsr1h	
 14815  1D3E  0087               	
 14816                           	clrf	indf1
 14817  1D3F  0181               	line	289
 14818                           	
 14819                           l4707:	
 14820  1D40                     ;main.c: 289:   OLED_returnHome();
 14821                           	fcall	_OLED_returnHome
 14822  1D40  31A1  212C  319C   	line	290
 14823                           ;main.c: 290:  } else if (pb == PB_LONG) {
 14824                           	goto	l4717
 14825  1D43  2D5D               	
 14826                           l258:	
 14827  1D44                     	
 14828                           l4709:	
 14829  1D44                     		movlw	2
 14830  1D44  3002               	movlb 0	; select bank0
 14831  1D45  0140               	xorwf	((menuInput@pb)),w
 14832  1D46  062F               	btfss	status,2
 14833  1D47  1D03               	goto	u6571
 14834  1D48  2D4A               	goto	u6570
 14835  1D49  2D4B               u6571:
 14836  1D4A                     	goto	l4717
 14837  1D4A  2D5D               u6570:
 14838  1D4B                     	line	291
 14839                           	
 14840                           l4711:	
 14841  1D4B                     ;main.c: 291:   *menu = pbLong;
 14842                           	movf	(menuInput@pbLong),w
 14843  1D4B  082A               	movwf	(??_menuInput+0)+0
 14844  1D4C  00AC               	movf	(menuInput@menu),w
 14845  1D4D  0828               	movwf	fsr1l
 14846  1D4E  0086               	movlw 1	; select bank2/3
 14847  1D4F  3001               	movwf fsr1h	
 14848  1D50  0087               	
 14849                           	movf	(??_menuInput+0)+0,w
 14850  1D51  082C               	movwf	indf1
 14851  1D52  0081               	line	292
 14852                           	
 14853                           l4713:	
 14854  1D53                     ;main.c: 292:   *page = 0;
 14855                           	movf	(menuInput@page),w
 14856  1D53  0831               	movwf	fsr1l
 14857  1D54  0086               	movlw 1	; select bank2/3
 14858  1D55  3001               	movwf fsr1h	
 14859  1D56  0087               	
 14860                           	clrf	indf1
 14861  1D57  0181               	line	293
 14862                           	
 14863                           l4715:	
 14864  1D58                     ;main.c: 293:   OLED_returnHome();
 14865                           	fcall	_OLED_returnHome
 14866  1D58  31A1  212C  319C   	goto	l4717
 14867  1D5B  2D5D               	line	294
 14868                           ;main.c: 294:  }
 14869                           	
 14870                           l260:	
 14871  1D5C                     	goto	l4717
 14872  1D5C  2D5D               	
 14873                           l259:	
 14874  1D5D                     	line	295
 14875                           	
 14876                           l4717:	
 14877  1D5D                     ;main.c: 295:  PIE0bits.IOCIE = 1;
 14878                           	movlb 14	; select bank14
 14879  1D5D  014E               	bsf	(1814)^0700h,4	;volatile
 14880  1D5E  1616               	line	296
 14881                           	
 14882                           l261:	
 14883  1D5F                     	return
 14884  1D5F  0008               	opt stack 0
 14885                           GLOBAL	__end_of_menuInput
 14886                           	__end_of_menuInput:
 14887  1D60                     	signat	_menuInput,24697
 14888                           	global	_getRotDir
 14889                           
 14890 ;; *************** function _getRotDir *****************
 14891 ;; Defined at:
 14892 ;;		line 298 in file "main.c"
 14893 ;; Parameters:    Size  Location     Type
 14894 ;;		None
 14895 ;; Auto vars:     Size  Location     Type
 14896 ;;  ret             1    1[BANK0 ] enum E7836
 14897 ;; Return value:  Size  Location     Type
 14898 ;;                  1    wreg      enum E7836
 14899 ;; Registers used:
 14900 ;;		wreg, status,2
 14901 ;; Tracked objects:
 14902 ;;		On entry : 0/0
 14903 ;;		On exit  : 0/0
 14904 ;;		Unchanged: 0/0
 14905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14907 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14908 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14909 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14910 ;;Total ram usage:        2 bytes
 14911 ;; Hardware stack levels used:    1
 14912 ;; Hardware stack levels required when called:    3
 14913 ;; This function calls:
 14914 ;;		Nothing
 14915 ;; This function is called by:
 14916 ;;		_menuInput
 14917 ;; This function uses a non-reentrant model
 14918 ;;
 14919                           psect	text32,local,class=CODE,delta=2,merge=1,group=0
 14920                           	line	298
 14921                           global __ptext32
 14922                           __ptext32:	;psect for function _getRotDir
 14923  216A                     psect	text32
 14924                           	file	"main.c"
 14925                           	line	298
 14926                           	global	__size_of_getRotDir
 14927                           	__size_of_getRotDir	equ	__end_of_getRotDir-_getRotDir
 14928  000C                     	
 14929                           _getRotDir:	
 14930  216A                     ;incstack = 0
 14931                           	opt	stack 10
 14932                           ; Regs used in _getRotDir: [wreg+status,2]
 14933                           	line	300
 14934                           	
 14935                           l4575:	
 14936  216A                     ;main.c: 300:  enum e_direction ret = g_rotDir;
 14937                           	movlb 2	; select bank2
 14938  216A  0142               	movf	(_g_rotDir)^0100h,w	;volatile
 14939  216B  086E               	movlb 0	; select bank0
 14940  216C  0140               	movwf	(??_getRotDir+0)+0
 14941  216D  00A0               	movf	(??_getRotDir+0)+0,w
 14942  216E  0820               	movwf	(getRotDir@ret)
 14943  216F  00A1               	line	301
 14944                           	
 14945                           l4577:	
 14946  2170                     ;main.c: 301:  g_rotDir = ROT_STOP;
 14947                           	movlb 2	; select bank2
 14948  2170  0142               	clrf	(_g_rotDir)^0100h	;volatile
 14949  2171  01EE               	line	302
 14950                           	
 14951                           l4579:	
 14952  2172                     ;main.c: 302:  return ret;
 14953                           	movlb 0	; select bank0
 14954  2172  0140               	movf	(getRotDir@ret),w
 14955  2173  0821               	goto	l264
 14956  2174  2975               	
 14957                           l4581:	
 14958  2175                     	line	303
 14959                           	
 14960                           l264:	
 14961  2175                     	return
 14962  2175  0008               	opt stack 0
 14963                           GLOBAL	__end_of_getRotDir
 14964                           	__end_of_getRotDir:
 14965  2176                     	signat	_getRotDir,89
 14966                           	global	_getPB
 14967                           
 14968 ;; *************** function _getPB *****************
 14969 ;; Defined at:
 14970 ;;		line 305 in file "main.c"
 14971 ;; Parameters:    Size  Location     Type
 14972 ;;		None
 14973 ;; Auto vars:     Size  Location     Type
 14974 ;;  ret             1    1[BANK0 ] enum E7840
 14975 ;; Return value:  Size  Location     Type
 14976 ;;                  1    wreg      enum E7840
 14977 ;; Registers used:
 14978 ;;		wreg, status,2
 14979 ;; Tracked objects:
 14980 ;;		On entry : 0/0
 14981 ;;		On exit  : 0/0
 14982 ;;		Unchanged: 0/0
 14983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14985 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14986 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14987 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14988 ;;Total ram usage:        2 bytes
 14989 ;; Hardware stack levels used:    1
 14990 ;; Hardware stack levels required when called:    3
 14991 ;; This function calls:
 14992 ;;		Nothing
 14993 ;; This function is called by:
 14994 ;;		_showMenu
 14995 ;;		_menuInput
 14996 ;; This function uses a non-reentrant model
 14997 ;;
 14998                           psect	text33,local,class=CODE,delta=2,merge=1,group=0
 14999                           	line	305
 15000                           global __ptext33
 15001                           __ptext33:	;psect for function _getPB
 15002  215E                     psect	text33
 15003                           	file	"main.c"
 15004                           	line	305
 15005                           	global	__size_of_getPB
 15006                           	__size_of_getPB	equ	__end_of_getPB-_getPB
 15007  000C                     	
 15008                           _getPB:	
 15009  215E                     ;incstack = 0
 15010                           	opt	stack 10
 15011                           ; Regs used in _getPB: [wreg+status,2]
 15012                           	line	307
 15013                           	
 15014                           l4567:	
 15015  215E                     ;main.c: 307:  enum e_buttonPress ret = g_pbState;
 15016                           	movlb 2	; select bank2
 15017  215E  0142               	movf	(_g_pbState)^0100h,w	;volatile
 15018  215F  086D               	movlb 0	; select bank0
 15019  2160  0140               	movwf	(??_getPB+0)+0
 15020  2161  00A0               	movf	(??_getPB+0)+0,w
 15021  2162  0820               	movwf	(getPB@ret)
 15022  2163  00A1               	line	308
 15023                           	
 15024                           l4569:	
 15025  2164                     ;main.c: 308:  g_pbState = PB_NONE;
 15026                           	movlb 2	; select bank2
 15027  2164  0142               	clrf	(_g_pbState)^0100h	;volatile
 15028  2165  01ED               	line	309
 15029                           	
 15030                           l4571:	
 15031  2166                     ;main.c: 309:  return ret;
 15032                           	movlb 0	; select bank0
 15033  2166  0140               	movf	(getPB@ret),w
 15034  2167  0821               	goto	l267
 15035  2168  2969               	
 15036                           l4573:	
 15037  2169                     	line	310
 15038                           	
 15039                           l267:	
 15040  2169                     	return
 15041  2169  0008               	opt stack 0
 15042                           GLOBAL	__end_of_getPB
 15043                           	__end_of_getPB:
 15044  216A                     	signat	_getPB,89
 15045                           	global	_OLED_scrollDisplayRight
 15046                           
 15047 ;; *************** function _OLED_scrollDisplayRight *****************
 15048 ;; Defined at:
 15049 ;;		line 133 in file "oled.c"
 15050 ;; Parameters:    Size  Location     Type
 15051 ;;		None
 15052 ;; Auto vars:     Size  Location     Type
 15053 ;;		None
 15054 ;; Return value:  Size  Location     Type
 15055 ;;                  1    wreg      void 
 15056 ;; Registers used:
 15057 ;;		wreg, status,2, status,0, pclath, cstack
 15058 ;; Tracked objects:
 15059 ;;		On entry : 0/0
 15060 ;;		On exit  : 0/0
 15061 ;;		Unchanged: 0/0
 15062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15067 ;;Total ram usage:        0 bytes
 15068 ;; Hardware stack levels used:    1
 15069 ;; Hardware stack levels required when called:    7
 15070 ;; This function calls:
 15071 ;;		_OLED_command
 15072 ;; This function is called by:
 15073 ;;		_menuInput
 15074 ;; This function uses a non-reentrant model
 15075 ;;
 15076                           psect	text34,local,class=CODE,delta=2,merge=1,group=0
 15077                           	file	"oled.c"
 15078                           	line	133
 15079                           global __ptext34
 15080                           __ptext34:	;psect for function _OLED_scrollDisplayRight
 15081  2136                     psect	text34
 15082                           	file	"oled.c"
 15083                           	line	133
 15084                           	global	__size_of_OLED_scrollDisplayRight
 15085                           	__size_of_OLED_scrollDisplayRight	equ	__end_of_OLED_scrollDisplayRight-_OLED_scrollDisp
                                 layRight
 15086  0005                     	
 15087                           _OLED_scrollDisplayRight:	
 15088  2136                     ;incstack = 0
 15089                           	opt	stack 6
 15090                           ; Regs used in _OLED_scrollDisplayRight: [wreg+status,2+status,0+pclath+cstack]
 15091                           	line	135
 15092                           	
 15093                           l4585:	
 15094  2136                     ;oled.c: 135:     OLED_command(0x10 | 0x08 | 0x04);
 15095                           	movlw	low(01Ch)
 15096  2136  301C               	fcall	_OLED_command
 15097  2137  31A1  2147  31A1   	line	136
 15098                           	
 15099                           l363:	
 15100  213A                     	return
 15101  213A  0008               	opt stack 0
 15102                           GLOBAL	__end_of_OLED_scrollDisplayRight
 15103                           	__end_of_OLED_scrollDisplayRight:
 15104  213B                     	signat	_OLED_scrollDisplayRight,89
 15105                           	global	_OLED_scrollDisplayLeft
 15106                           
 15107 ;; *************** function _OLED_scrollDisplayLeft *****************
 15108 ;; Defined at:
 15109 ;;		line 128 in file "oled.c"
 15110 ;; Parameters:    Size  Location     Type
 15111 ;;		None
 15112 ;; Auto vars:     Size  Location     Type
 15113 ;;		None
 15114 ;; Return value:  Size  Location     Type
 15115 ;;                  1    wreg      void 
 15116 ;; Registers used:
 15117 ;;		wreg, status,2, status,0, pclath, cstack
 15118 ;; Tracked objects:
 15119 ;;		On entry : 0/0
 15120 ;;		On exit  : 0/0
 15121 ;;		Unchanged: 0/0
 15122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15127 ;;Total ram usage:        0 bytes
 15128 ;; Hardware stack levels used:    1
 15129 ;; Hardware stack levels required when called:    7
 15130 ;; This function calls:
 15131 ;;		_OLED_command
 15132 ;; This function is called by:
 15133 ;;		_menuInput
 15134 ;; This function uses a non-reentrant model
 15135 ;;
 15136                           psect	text35,local,class=CODE,delta=2,merge=1,group=0
 15137                           	line	128
 15138                           global __ptext35
 15139                           __ptext35:	;psect for function _OLED_scrollDisplayLeft
 15140  2131                     psect	text35
 15141                           	file	"oled.c"
 15142                           	line	128
 15143                           	global	__size_of_OLED_scrollDisplayLeft
 15144                           	__size_of_OLED_scrollDisplayLeft	equ	__end_of_OLED_scrollDisplayLeft-_OLED_scrollDispla
                                 yLeft
 15145  0005                     	
 15146                           _OLED_scrollDisplayLeft:	
 15147  2131                     ;incstack = 0
 15148                           	opt	stack 6
 15149                           ; Regs used in _OLED_scrollDisplayLeft: [wreg+status,2+status,0+pclath+cstack]
 15150                           	line	130
 15151                           	
 15152                           l4583:	
 15153  2131                     ;oled.c: 130:     OLED_command(0x10 | 0x08 | 0x00);
 15154                           	movlw	low(018h)
 15155  2131  3018               	fcall	_OLED_command
 15156  2132  31A1  2147  31A1   	line	131
 15157                           	
 15158                           l360:	
 15159  2135                     	return
 15160  2135  0008               	opt stack 0
 15161                           GLOBAL	__end_of_OLED_scrollDisplayLeft
 15162                           	__end_of_OLED_scrollDisplayLeft:
 15163  2136                     	signat	_OLED_scrollDisplayLeft,89
 15164                           	global	_OLED_returnHome
 15165                           
 15166 ;; *************** function _OLED_returnHome *****************
 15167 ;; Defined at:
 15168 ;;		line 163 in file "oled.c"
 15169 ;; Parameters:    Size  Location     Type
 15170 ;;		None
 15171 ;; Auto vars:     Size  Location     Type
 15172 ;;		None
 15173 ;; Return value:  Size  Location     Type
 15174 ;;                  1    wreg      void 
 15175 ;; Registers used:
 15176 ;;		wreg, status,2, status,0, pclath, cstack
 15177 ;; Tracked objects:
 15178 ;;		On entry : 0/0
 15179 ;;		On exit  : 0/0
 15180 ;;		Unchanged: 0/0
 15181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15186 ;;Total ram usage:        0 bytes
 15187 ;; Hardware stack levels used:    1
 15188 ;; Hardware stack levels required when called:    7
 15189 ;; This function calls:
 15190 ;;		_OLED_command
 15191 ;; This function is called by:
 15192 ;;		_main
 15193 ;;		_showMenu
 15194 ;;		_menuInput
 15195 ;; This function uses a non-reentrant model
 15196 ;;
 15197                           psect	text36,local,class=CODE,delta=2,merge=1,group=0
 15198                           	line	163
 15199                           global __ptext36
 15200                           __ptext36:	;psect for function _OLED_returnHome
 15201  212C                     psect	text36
 15202                           	file	"oled.c"
 15203                           	line	163
 15204                           	global	__size_of_OLED_returnHome
 15205                           	__size_of_OLED_returnHome	equ	__end_of_OLED_returnHome-_OLED_returnHome
 15206  0005                     	
 15207                           _OLED_returnHome:	
 15208  212C                     ;incstack = 0
 15209                           	opt	stack 6
 15210                           ; Regs used in _OLED_returnHome: [wreg+status,2+status,0+pclath+cstack]
 15211                           	line	164
 15212                           	
 15213                           l4565:	
 15214  212C                     ;oled.c: 164:     OLED_command(0x02);
 15215                           	movlw	low(02h)
 15216  212C  3002               	fcall	_OLED_command
 15217  212D  31A1  2147  31A1   	line	165
 15218                           	
 15219                           l385:	
 15220  2130                     	return
 15221  2130  0008               	opt stack 0
 15222                           GLOBAL	__end_of_OLED_returnHome
 15223                           	__end_of_OLED_returnHome:
 15224  2131                     	signat	_OLED_returnHome,89
 15225                           	global	_OLED_print_xy
 15226                           
 15227 ;; *************** function _OLED_print_xy *****************
 15228 ;; Defined at:
 15229 ;;		line 153 in file "oled.c"
 15230 ;; Parameters:    Size  Location     Type
 15231 ;;  col             1    wreg     unsigned char 
 15232 ;;  row             1    7[BANK0 ] unsigned char 
 15233 ;;  s               2    8[BANK0 ] PTR unsigned char 
 15234 ;;		 -> STR_7(49), STR_3(49), showMenu@s(61), STR_1(13), 
 15235 ;; Auto vars:     Size  Location     Type
 15236 ;;  col             1   15[BANK0 ] unsigned char 
 15237 ;;  row_offsets     4   11[BANK0 ] unsigned char [4]
 15238 ;; Return value:  Size  Location     Type
 15239 ;;                  1    wreg      void 
 15240 ;; Registers used:
 15241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15242 ;; Tracked objects:
 15243 ;;		On entry : 0/0
 15244 ;;		On exit  : 0/0
 15245 ;;		Unchanged: 0/0
 15246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15247 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15248 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15249 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15250 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15251 ;;Total ram usage:        9 bytes
 15252 ;; Hardware stack levels used:    1
 15253 ;; Hardware stack levels required when called:    7
 15254 ;; This function calls:
 15255 ;;		_OLED_command
 15256 ;;		_OLED_write
 15257 ;; This function is called by:
 15258 ;;		_showMenu
 15259 ;; This function uses a non-reentrant model
 15260 ;;
 15261                           psect	text37,local,class=CODE,delta=2,merge=1,group=0
 15262                           	line	153
 15263                           global __ptext37
 15264                           __ptext37:	;psect for function _OLED_print_xy
 15265  2425                     psect	text37
 15266                           	file	"oled.c"
 15267                           	line	153
 15268                           	global	__size_of_OLED_print_xy
 15269                           	__size_of_OLED_print_xy	equ	__end_of_OLED_print_xy-_OLED_print_xy
 15270  0038                     	
 15271                           _OLED_print_xy:	
 15272  2425                     ;incstack = 0
 15273                           	opt	stack 7
 15274                           ; Regs used in _OLED_print_xy: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15275                           ;OLED_print_xy@col stored from wreg
 15276                           	movlb 0	; select bank0
 15277  2425  0140               	movwf	(OLED_print_xy@col)
 15278  2426  00AF               	line	154
 15279                           	
 15280                           l4635:	
 15281  2427                     ;oled.c: 154:     uint8_t row_offsets[] = { 0x00, 0x40, 0x14, 0x54 };
 15282                           	movlb 4	; select bank4
 15283  2427  0144               	movf	(OLED_print_xy@F7353+3)^0200h,w
 15284  2428  0869               	movlb 0	; select bank0
 15285  2429  0140               	movwf	(OLED_print_xy@row_offsets+3)
 15286  242A  00AE               	movlb 4	; select bank4
 15287  242B  0144               	movf	(OLED_print_xy@F7353+2)^0200h,w
 15288  242C  0868               	movlb 0	; select bank0
 15289  242D  0140               	movwf	(OLED_print_xy@row_offsets+2)
 15290  242E  00AD               	movlb 4	; select bank4
 15291  242F  0144               	movf	(OLED_print_xy@F7353+1)^0200h,w
 15292  2430  0867               	movlb 0	; select bank0
 15293  2431  0140               	movwf	(OLED_print_xy@row_offsets+1)
 15294  2432  00AC               	movlb 4	; select bank4
 15295  2433  0144               	movf	(OLED_print_xy@F7353)^0200h,w
 15296  2434  0866               	movlb 0	; select bank0
 15297  2435  0140               	movwf	(OLED_print_xy@row_offsets)
 15298  2436  00AB               
 15299                           	line	156
 15300                           	
 15301                           l4637:	
 15302  2437                     ;oled.c: 156:     OLED_command(0x80 | (col + row_offsets[row]));
 15303                           	movf	(OLED_print_xy@row),w
 15304  2437  0827               	addlw	low(OLED_print_xy@row_offsets|((0x0)<<8))&0ffh
 15305  2438  3E2B               	movwf	fsr1l
 15306  2439  0086               	clrf fsr1h	
 15307  243A  0187               	
 15308                           	movf	indf1,w
 15309  243B  0801               	addwf	(OLED_print_xy@col),w
 15310  243C  072F               	iorlw	080h
 15311  243D  3880               	fcall	_OLED_command
 15312  243E  31A1  2147  31A4   	line	157
 15313                           ;oled.c: 157:     while (*s != (char)((void*)0))
 15314                           	goto	l4643
 15315  2441  2C51               	
 15316                           l380:	
 15317  2442                     	line	159
 15318                           	
 15319                           l4639:	
 15320  2442                     ;oled.c: 158:     {;oled.c: 159:         OLED_write(*s++);
 15321                           	movlb 0	; select bank0
 15322  2442  0140               	movf	(OLED_print_xy@s),w
 15323  2443  0828               	movwf	fsr0l
 15324  2444  0084               	movf	((OLED_print_xy@s+1)),w
 15325  2445  0829               	movwf	fsr0h
 15326  2446  0085               	movf	indf0,w ;code access
 15327  2447  0800               	fcall	_OLED_write
 15328  2448  31A1  2152  31A4   	
 15329                           l4641:	
 15330  244B                     	movlw	01h
 15331  244B  3001               	movlb 0	; select bank0
 15332  244C  0140               	addwf	(OLED_print_xy@s),f
 15333  244D  07A8               	movlw	0
 15334  244E  3000               	addwfc	(OLED_print_xy@s+1),f
 15335  244F  3DA9               	goto	l4643
 15336  2450  2C51               	line	160
 15337                           ;oled.c: 160:     }
 15338                           	
 15339                           l379:	
 15340  2451                     	line	157
 15341                           	
 15342                           l4643:	
 15343  2451                     ;oled.c: 157:     while (*s != (char)((void*)0))
 15344                           	movlb 0	; select bank0
 15345  2451  0140               	movf	(OLED_print_xy@s),w
 15346  2452  0828               	movwf	fsr0l
 15347  2453  0084               	movf	((OLED_print_xy@s+1)),w
 15348  2454  0829               	movwf	fsr0h
 15349  2455  0085               	moviw	fsr0++
 15350  2456  0012               	btfss	status,2
 15351  2457  1D03               	goto	u6471
 15352  2458  2C5A               	goto	u6470
 15353  2459  2C5B               u6471:
 15354  245A                     	goto	l4639
 15355  245A  2C42               u6470:
 15356  245B                     	goto	l382
 15357  245B  2C5C               	
 15358                           l381:	
 15359  245C                     	line	161
 15360                           	
 15361                           l382:	
 15362  245C                     	return
 15363  245C  0008               	opt stack 0
 15364                           GLOBAL	__end_of_OLED_print_xy
 15365                           	__end_of_OLED_print_xy:
 15366  245D                     	signat	_OLED_print_xy,12409
 15367                           	global	_OLED_write
 15368                           
 15369 ;; *************** function _OLED_write *****************
 15370 ;; Defined at:
 15371 ;;		line 74 in file "oled.c"
 15372 ;; Parameters:    Size  Location     Type
 15373 ;;  value           1    wreg     unsigned char 
 15374 ;; Auto vars:     Size  Location     Type
 15375 ;;  value           1    6[BANK0 ] unsigned char 
 15376 ;; Return value:  Size  Location     Type
 15377 ;;                  1    wreg      void 
 15378 ;; Registers used:
 15379 ;;		wreg, status,2, status,0, pclath, cstack
 15380 ;; Tracked objects:
 15381 ;;		On entry : 0/0
 15382 ;;		On exit  : 0/0
 15383 ;;		Unchanged: 0/0
 15384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15386 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15388 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15389 ;;Total ram usage:        1 bytes
 15390 ;; Hardware stack levels used:    1
 15391 ;; Hardware stack levels required when called:    6
 15392 ;; This function calls:
 15393 ;;		_OLED_send
 15394 ;;		_OLED_waitForReady
 15395 ;; This function is called by:
 15396 ;;		_OLED_print_xy
 15397 ;;		_OLED_print
 15398 ;; This function uses a non-reentrant model
 15399 ;;
 15400                           psect	text38,local,class=CODE,delta=2,merge=1,group=0
 15401                           	line	74
 15402                           global __ptext38
 15403                           __ptext38:	;psect for function _OLED_write
 15404  2152                     psect	text38
 15405                           	file	"oled.c"
 15406                           	line	74
 15407                           	global	__size_of_OLED_write
 15408                           	__size_of_OLED_write	equ	__end_of_OLED_write-_OLED_write
 15409  000C                     	
 15410                           _OLED_write:	
 15411  2152                     ;incstack = 0
 15412                           	opt	stack 7
 15413                           ; Regs used in _OLED_write: [wreg+status,2+status,0+pclath+cstack]
 15414                           ;OLED_write@value stored from wreg
 15415                           	movlb 0	; select bank0
 15416  2152  0140               	movwf	(OLED_write@value)
 15417  2153  00A6               	line	76
 15418                           	
 15419                           l4587:	
 15420  2154                     ;oled.c: 74: void OLED_write(uint8_t value);oled.c: 75: {;oled.c: 76:     OLED_send(valu
                                 e, 1);
 15421                           	clrf	(OLED_send@mode)
 15422  2154  01A3               	incf	(OLED_send@mode),f
 15423  2155  0AA3               	movf	(OLED_write@value),w
 15424  2156  0826               	fcall	_OLED_send
 15425  2157  31A1  21A1  31A1   	line	77
 15426                           ;oled.c: 77:     OLED_waitForReady();
 15427                           	fcall	_OLED_waitForReady
 15428  215A  31A2  2230  31A1   	line	78
 15429                           	
 15430                           l354:	
 15431  215D                     	return
 15432  215D  0008               	opt stack 0
 15433                           GLOBAL	__end_of_OLED_write
 15434                           	__end_of_OLED_write:
 15435  215E                     	signat	_OLED_write,4217
 15436                           	global	_initialize
 15437                           
 15438 ;; *************** function _initialize *****************
 15439 ;; Defined at:
 15440 ;;		line 316 in file "main.c"
 15441 ;; Parameters:    Size  Location     Type
 15442 ;;		None
 15443 ;; Auto vars:     Size  Location     Type
 15444 ;;		None
 15445 ;; Return value:  Size  Location     Type
 15446 ;;                  1    wreg      void 
 15447 ;; Registers used:
 15448 ;;		wreg, status,2, status,0
 15449 ;; Tracked objects:
 15450 ;;		On entry : 0/0
 15451 ;;		On exit  : 0/0
 15452 ;;		Unchanged: 0/0
 15453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15458 ;;Total ram usage:        0 bytes
 15459 ;; Hardware stack levels used:    1
 15460 ;; Hardware stack levels required when called:    3
 15461 ;; This function calls:
 15462 ;;		Nothing
 15463 ;; This function is called by:
 15464 ;;		_main
 15465 ;; This function uses a non-reentrant model
 15466 ;;
 15467                           psect	text39,local,class=CODE,delta=2,merge=1,group=0
 15468                           	file	"main.c"
 15469                           	line	316
 15470                           global __ptext39
 15471                           __ptext39:	;psect for function _initialize
 15472  24DB                     psect	text39
 15473                           	file	"main.c"
 15474                           	line	316
 15475                           	global	__size_of_initialize
 15476                           	__size_of_initialize	equ	__end_of_initialize-_initialize
 15477  004C                     	
 15478                           _initialize:	
 15479  24DB                     ;incstack = 0
 15480                           	opt	stack 12
 15481                           ; Regs used in _initialize: [wreg+status,2+status,0]
 15482                           	line	318
 15483                           	
 15484                           l4779:	
 15485  24DB                     ;main.c: 318:  OSCFRQ = 0b00000010;
 15486                           	movlw	low(02h)
 15487  24DB  3002               	movlb 17	; select bank17
 15488  24DC  0151               	movwf	(2195)^0880h	;volatile
 15489  24DD  0093               	line	319
 15490                           ;main.c: 319:  OSCCON1 = 0b01100000;
 15491                           	movlw	low(060h)
 15492  24DE  3060               	movwf	(2189)^0880h	;volatile
 15493  24DF  008D               	line	320
 15494                           ;main.c: 320:  while (!OSCCON3bits.ORDY);
 15495                           	goto	l270
 15496  24E0  2CE1               	
 15497                           l271:	
 15498  24E1                     	
 15499                           l270:	
 15500  24E1                     	btfss	(2191)^0880h,4	;volatile
 15501  24E1  1E0F               	goto	u6751
 15502  24E2  2CE4               	goto	u6750
 15503  24E3  2CE5               u6751:
 15504  24E4                     	goto	l270
 15505  24E4  2CE1               u6750:
 15506  24E5                     	goto	l4781
 15507  24E5  2CE6               	
 15508                           l272:	
 15509  24E6                     	line	323
 15510                           	
 15511                           l4781:	
 15512  24E6                     ;main.c: 323:  RX1DTPPSbits.RX1DTPPS = 0x17;
 15513                           	movlb 61	; select bank61
 15514  24E6  017D               	movf	(7883)^01E80h,w	;volatile
 15515  24E7  084B               	andlw	not (((1<<6)-1)<<0)
 15516  24E8  39C0               	iorlw	(017h & ((1<<6)-1))<<0
 15517  24E9  3817               	movwf	(7883)^01E80h	;volatile
 15518  24EA  00CB               	line	324
 15519                           	
 15520                           l4783:	
 15521  24EB                     ;main.c: 324:  RC6PPS = 0x0F;
 15522                           	movlw	low(0Fh)
 15523  24EB  300F               	movlb 62	; select bank62
 15524  24EC  017E               	movwf	(7974)^01F00h	;volatile
 15525  24ED  00A6               	line	327
 15526                           	
 15527                           l4785:	
 15528  24EE                     ;main.c: 327:  ANSELA = 0b01000000;
 15529                           	movlw	low(040h)
 15530  24EE  3040               	movwf	(7992)^01F00h	;volatile
 15531  24EF  00B8               	line	328
 15532                           	
 15533                           l4787:	
 15534  24F0                     ;main.c: 328:  ANSELB = 0b00000000;
 15535                           	clrf	(8003)^01F00h	;volatile
 15536  24F0  01C3               	line	329
 15537                           	
 15538                           l4789:	
 15539  24F1                     ;main.c: 329:  ANSELC = 0b00000011;
 15540                           	movlw	low(03h)
 15541  24F1  3003               	movwf	(8014)^01F00h	;volatile
 15542  24F2  00CE               	line	332
 15543                           	
 15544                           l4791:	
 15545  24F3                     ;main.c: 332:  TRISA = 0b11110000;
 15546                           	movlw	low(0F0h)
 15547  24F3  30F0               	movlb 0	; select bank0
 15548  24F4  0140               	movwf	(18)	;volatile
 15549  24F5  0092               	line	333
 15550                           	
 15551                           l4793:	
 15552  24F6                     ;main.c: 333:  TRISB = 0b00000000;
 15553                           	clrf	(19)	;volatile
 15554  24F6  0193               	line	334
 15555                           	
 15556                           l4795:	
 15557  24F7                     ;main.c: 334:  TRISC = 0b10000111;
 15558                           	movlw	low(087h)
 15559  24F7  3087               	movwf	(20)	;volatile
 15560  24F8  0094               	line	337
 15561                           	
 15562                           l4797:	
 15563  24F9                     ;main.c: 337:  ADCON0bits.ADON = 1;
 15564                           	movlb 1	; select bank1
 15565  24F9  0141               	bsf	(157)^080h,0	;volatile
 15566  24FA  141D               	line	338
 15567                           	
 15568                           l4799:	
 15569  24FB                     ;main.c: 338:  ADCON1 = 0b11100000;
 15570                           	movlw	low(0E0h)
 15571  24FB  30E0               	movwf	(158)^080h	;volatile
 15572  24FC  009E               	line	341
 15573                           	
 15574                           l4801:	
 15575  24FD                     ;main.c: 341:  T0CON0 = 0b10000000;
 15576                           	movlw	low(080h)
 15577  24FD  3080               	movlb 11	; select bank11
 15578  24FE  014B               	movwf	(1438)^0580h	;volatile
 15579  24FF  009E               	line	342
 15580                           	
 15581                           l4803:	
 15582  2500                     ;main.c: 342:  T0CON1 = 0b01000111;
 15583                           	movlw	low(047h)
 15584  2500  3047               	movwf	(1439)^0580h	;volatile
 15585  2501  009F               	line	343
 15586                           	
 15587                           l4805:	
 15588  2502                     ;main.c: 343:  TMR0 = 178;
 15589                           	movlw	low(0B2h)
 15590  2502  30B2               	movwf	(1436)^0580h	;volatile
 15591  2503  009C               	line	346
 15592                           	
 15593                           l4807:	
 15594  2504                     ;main.c: 346:  T1CON = 0b00110011;
 15595                           	movlw	low(033h)
 15596  2504  3033               	movlb 4	; select bank4
 15597  2505  0144               	movwf	(526)^0200h	;volatile
 15598  2506  008E               	line	347
 15599                           	
 15600                           l4809:	
 15601  2507                     ;main.c: 347:  T1CLK = 0b00000001;
 15602                           	movlw	low(01h)
 15603  2507  3001               	movwf	(529)^0200h	;volatile
 15604  2508  0091               	line	348
 15605                           	
 15606                           l4811:	
 15607  2509                     ;main.c: 348:  TMR1 = 53035;
 15608                           	movlw	0CFh
 15609  2509  30CF               	movwf	(524+1)^0200h	;volatile
 15610  250A  008D               	movlw	02Bh
 15611  250B  302B               	movwf	(524)^0200h	;volatile
 15612  250C  008C               	line	351
 15613                           	
 15614                           l4813:	
 15615  250D                     ;main.c: 351:  PIE0 = 0b00110000;
 15616                           	movlw	low(030h)
 15617  250D  3030               	movlb 14	; select bank14
 15618  250E  014E               	movwf	(1814)^0700h	;volatile
 15619  250F  0096               	line	352
 15620                           	
 15621                           l4815:	
 15622  2510                     ;main.c: 352:  PIE3 = 0b00100000;
 15623                           	movlw	low(020h)
 15624  2510  3020               	movwf	(1817)^0700h	;volatile
 15625  2511  0099               	line	353
 15626                           	
 15627                           l4817:	
 15628  2512                     ;main.c: 353:  PIE4 = 0b00000001;
 15629                           	movlw	low(01h)
 15630  2512  3001               	movwf	(1818)^0700h	;volatile
 15631  2513  009A               	line	354
 15632                           	
 15633                           l4819:	
 15634  2514                     ;main.c: 354:  INTCON = 0b11000000;
 15635                           	movlw	low(0C0h)
 15636  2514  30C0               	movwf	(11)	;volatile
 15637  2515  008B               	line	357
 15638                           	
 15639                           l4821:	
 15640  2516                     ;main.c: 357:  IOCAP = 0b10110000;
 15641                           	movlw	low(0B0h)
 15642  2516  30B0               	movlb 62	; select bank62
 15643  2517  017E               	movwf	(7997)^01F00h	;volatile
 15644  2518  00BD               	line	358
 15645                           	
 15646                           l4823:	
 15647  2519                     ;main.c: 358:  IOCAN = 0b10110000;
 15648                           	movlw	low(0B0h)
 15649  2519  30B0               	movwf	(7998)^01F00h	;volatile
 15650  251A  00BE               	line	359
 15651                           	
 15652                           l4825:	
 15653  251B                     ;main.c: 359:  IOCCN = 0b00000100;
 15654                           	movlw	low(04h)
 15655  251B  3004               	movwf	(8020)^01F00h	;volatile
 15656  251C  00D4               	line	363
 15657                           	
 15658                           l4827:	
 15659  251D                     ;main.c: 363:  BAUD1CON = 0b00001000;
 15660                           	movlw	low(08h)
 15661  251D  3008               	movlb 2	; select bank2
 15662  251E  0142               	movwf	(287)^0100h	;volatile
 15663  251F  009F               	line	364
 15664                           	
 15665                           l4829:	
 15666  2520                     ;main.c: 364:  SPBRGL = 25;
 15667                           	movlw	low(019h)
 15668  2520  3019               	movwf	(283)^0100h	;volatile
 15669  2521  009B               	line	365
 15670                           	
 15671                           l4831:	
 15672  2522                     ;main.c: 365:  RC1STA = 0b10010000;
 15673                           	movlw	low(090h)
 15674  2522  3090               	movwf	(285)^0100h	;volatile
 15675  2523  009D               	line	366
 15676                           	
 15677                           l4833:	
 15678  2524                     ;main.c: 366:  TX1STA = 0b00100000;
 15679                           	movlw	low(020h)
 15680  2524  3020               	movwf	(286)^0100h	;volatile
 15681  2525  009E               	line	367
 15682                           	
 15683                           l273:	
 15684  2526                     	return
 15685  2526  0008               	opt stack 0
 15686                           GLOBAL	__end_of_initialize
 15687                           	__end_of_initialize:
 15688  2527                     	signat	_initialize,89
 15689                           	global	_handleSensorData
 15690                           
 15691 ;; *************** function _handleSensorData *****************
 15692 ;; Defined at:
 15693 ;;		line 212 in file "main.c"
 15694 ;; Parameters:    Size  Location     Type
 15695 ;;		None
 15696 ;; Auto vars:     Size  Location     Type
 15697 ;;		None
 15698 ;; Return value:  Size  Location     Type
 15699 ;;                  1    wreg      void 
 15700 ;; Registers used:
 15701 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15702 ;; Tracked objects:
 15703 ;;		On entry : 0/0
 15704 ;;		On exit  : 0/0
 15705 ;;		Unchanged: 0/0
 15706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15709 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15710 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15711 ;;Total ram usage:        4 bytes
 15712 ;; Hardware stack levels used:    1
 15713 ;; Hardware stack levels required when called:    4
 15714 ;; This function calls:
 15715 ;;		___xxtofl
 15716 ;; This function is called by:
 15717 ;;		_main
 15718 ;; This function uses a non-reentrant model
 15719 ;;
 15720                           psect	text40,local,class=CODE,delta=2,merge=1,group=0
 15721                           	line	212
 15722                           global __ptext40
 15723                           __ptext40:	;psect for function _handleSensorData
 15724  261E                     psect	text40
 15725                           	file	"main.c"
 15726                           	line	212
 15727                           	global	__size_of_handleSensorData
 15728                           	__size_of_handleSensorData	equ	__end_of_handleSensorData-_handleSensorData
 15729  005C                     	
 15730                           _handleSensorData:	
 15731  261E                     ;incstack = 0
 15732                           	opt	stack 11
 15733                           ; Regs used in _handleSensorData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15734                           	line	214
 15735                           	
 15736                           l4897:	
 15737  261E                     ;main.c: 214:  if ((g_dataPacket.header == 0xAA) && (g_dataPacket.status == 1)) {
 15738                           		movlw	170
 15739  261E  30AA               	movlb 4	; select bank4
 15740  261F  0144               	xorwf	((_g_dataPacket)^0200h),w	;volatile
 15741  2620  0650               	btfss	status,2
 15742  2621  1D03               	goto	u6791
 15743  2622  2E24               	goto	u6790
 15744  2623  2E25               u6791:
 15745  2624                     	goto	l232
 15746  2624  2E76               u6790:
 15747  2625                     	
 15748                           l4899:	
 15749  2625                     		decf	(0+(_g_dataPacket)^0200h+02h),w	;volatile
 15750  2625  0352               	btfss	status,2
 15751  2626  1D03               	goto	u6801
 15752  2627  2E29               	goto	u6800
 15753  2628  2E2A               u6801:
 15754  2629                     	goto	l232
 15755  2629  2E76               u6800:
 15756  262A                     	line	215
 15757                           	
 15758                           l4901:	
 15759  262A                     ;main.c: 215:   g_tempC = g_dataPacket.tempC;
 15760                           	movlw	low(03h)
 15761  262A  3003               	addlw	low(_g_dataPacket|((0x2)<<8))&0ffh
 15762  262B  3E50               	movwf	fsr1l
 15763  262C  0086               	movlw 2	; select bank4/5
 15764  262D  3002               	movwf fsr1h	
 15765  262E  0087               	
 15766                           	moviw	[0]fsr1
 15767  262F  3F40               	movwf	(_g_tempC)^0200h
 15768  2630  00C4               	moviw	[1]fsr1
 15769  2631  3F41               	movwf	(_g_tempC+1)^0200h
 15770  2632  00C5               	moviw	[2]fsr1
 15771  2633  3F42               	movwf	(_g_tempC+2)^0200h
 15772  2634  00C6               	moviw	[3]fsr1
 15773  2635  3F43               	movwf	(_g_tempC+3)^0200h
 15774  2636  00C7               	line	216
 15775                           ;main.c: 216:   g_relHum = g_dataPacket.relHum;
 15776                           	movlw	low(07h)
 15777  2637  3007               	addlw	low(_g_dataPacket|((0x2)<<8))&0ffh
 15778  2638  3E50               	movwf	fsr1l
 15779  2639  0086               	movlw 2	; select bank4/5
 15780  263A  3002               	movwf fsr1h	
 15781  263B  0087               	
 15782                           	moviw	[0]fsr1
 15783  263C  3F40               	movwf	(_g_relHum)^0200h
 15784  263D  00C0               	moviw	[1]fsr1
 15785  263E  3F41               	movwf	(_g_relHum+1)^0200h
 15786  263F  00C1               	moviw	[2]fsr1
 15787  2640  3F42               	movwf	(_g_relHum+2)^0200h
 15788  2641  00C2               	moviw	[3]fsr1
 15789  2642  3F43               	movwf	(_g_relHum+3)^0200h
 15790  2643  00C3               	line	217
 15791                           ;main.c: 217:   g_dewPointC = g_dataPacket.dewPointC;
 15792                           	movlw	low(0Bh)
 15793  2644  300B               	addlw	low(_g_dataPacket|((0x2)<<8))&0ffh
 15794  2645  3E50               	movwf	fsr1l
 15795  2646  0086               	movlw 2	; select bank4/5
 15796  2647  3002               	movwf fsr1h	
 15797  2648  0087               	
 15798                           	moviw	[0]fsr1
 15799  2649  3F40               	movwf	(_g_dewPointC)^0200h
 15800  264A  00BC               	moviw	[1]fsr1
 15801  264B  3F41               	movwf	(_g_dewPointC+1)^0200h
 15802  264C  00BD               	moviw	[2]fsr1
 15803  264D  3F42               	movwf	(_g_dewPointC+2)^0200h
 15804  264E  00BE               	moviw	[3]fsr1
 15805  264F  3F43               	movwf	(_g_dewPointC+3)^0200h
 15806  2650  00BF               	line	218
 15807                           	
 15808                           l4903:	
 15809  2651                     ;main.c: 218:   g_sensorVersion = g_dataPacket.version;
 15810                           	movf	0+(_g_dataPacket)^0200h+01h,w	;volatile
 15811  2651  0851               	movlb 0	; select bank0
 15812  2652  0140               	movwf	(??_handleSensorData+0)+0
 15813  2653  00AE               	clrf	(??_handleSensorData+0)+0+1
 15814  2654  01AF               	clrf	(??_handleSensorData+0)+0+2
 15815  2655  01B0               	clrf	(??_handleSensorData+0)+0+3
 15816  2656  01B1               	movf	3+(??_handleSensorData+0)+0,w
 15817  2657  0831               	movwf	(___xxtofl@val+3)
 15818  2658  00A3               	movf	2+(??_handleSensorData+0)+0,w
 15819  2659  0830               	movwf	(___xxtofl@val+2)
 15820  265A  00A2               	movf	1+(??_handleSensorData+0)+0,w
 15821  265B  082F               	movwf	(___xxtofl@val+1)
 15822  265C  00A1               	movf	0+(??_handleSensorData+0)+0,w
 15823  265D  082E               	movwf	(___xxtofl@val)
 15824  265E  00A0               
 15825                           	movlw	low(0)
 15826  265F  3000               	fcall	___xxtofl
 15827  2660  319B  23E8  31A6   	movlb 0	; select bank0
 15828  2663  0140               	movf	(3+(?___xxtofl)),w
 15829  2664  0823               	movlb 4	; select bank4
 15830  2665  0144               	movwf	(_g_sensorVersion+3)^0200h
 15831  2666  00BB               	movlb 0	; select bank0
 15832  2667  0140               	movf	(2+(?___xxtofl)),w
 15833  2668  0822               	movlb 4	; select bank4
 15834  2669  0144               	movwf	(_g_sensorVersion+2)^0200h
 15835  266A  00BA               	movlb 0	; select bank0
 15836  266B  0140               	movf	(1+(?___xxtofl)),w
 15837  266C  0821               	movlb 4	; select bank4
 15838  266D  0144               	movwf	(_g_sensorVersion+1)^0200h
 15839  266E  00B9               	movlb 0	; select bank0
 15840  266F  0140               	movf	(0+(?___xxtofl)),w
 15841  2670  0820               	movlb 4	; select bank4
 15842  2671  0144               	movwf	(_g_sensorVersion)^0200h
 15843  2672  00B8               
 15844                           	line	219
 15845                           	
 15846                           l4905:	
 15847  2673                     ;main.c: 219:   g_status.NOSENSOR = 0;
 15848                           	movlb 3	; select bank3
 15849  2673  0143               	bcf	(_g_status)^0180h,1
 15850  2674  10ED               	line	220
 15851                           ;main.c: 220:  } else {
 15852                           	goto	l234
 15853  2675  2E79               	
 15854                           l232:	
 15855  2676                     	line	222
 15856                           ;main.c: 222:   g_status.NOSENSOR = 1;
 15857                           	movlb 3	; select bank3
 15858  2676  0143               	bsf	(_g_status)^0180h,1
 15859  2677  14ED               	goto	l234
 15860  2678  2E79               	line	223
 15861                           ;main.c: 223:  }
 15862                           	
 15863                           l233:	
 15864  2679                     	line	224
 15865                           	
 15866                           l234:	
 15867  2679                     	return
 15868  2679  0008               	opt stack 0
 15869                           GLOBAL	__end_of_handleSensorData
 15870                           	__end_of_handleSensorData:
 15871  267A                     	signat	_handleSensorData,89
 15872                           	global	_convertAnalogValues
 15873                           
 15874 ;; *************** function _convertAnalogValues *****************
 15875 ;; Defined at:
 15876 ;;		line 195 in file "main.c"
 15877 ;; Parameters:    Size  Location     Type
 15878 ;;		None
 15879 ;; Auto vars:     Size  Location     Type
 15880 ;;  adc             2   70[BANK0 ] unsigned short 
 15881 ;; Return value:  Size  Location     Type
 15882 ;;                  1    wreg      void 
 15883 ;; Registers used:
 15884 ;;		wreg, status,2, status,0, pclath, cstack
 15885 ;; Tracked objects:
 15886 ;;		On entry : 0/0
 15887 ;;		On exit  : 0/0
 15888 ;;		Unchanged: 0/0
 15889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15891 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15893 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15894 ;;Total ram usage:        6 bytes
 15895 ;; Hardware stack levels used:    1
 15896 ;; Hardware stack levels required when called:    5
 15897 ;; This function calls:
 15898 ;;		___fladd
 15899 ;;		___fldiv
 15900 ;;		___flmul
 15901 ;;		___xxtofl
 15902 ;;		_adcGetConversion
 15903 ;;		_ema
 15904 ;; This function is called by:
 15905 ;;		_main
 15906 ;; This function uses a non-reentrant model
 15907 ;;
 15908                           psect	text41,local,class=CODE,delta=2,merge=1,group=0
 15909                           	line	195
 15910                           global __ptext41
 15911                           __ptext41:	;psect for function _convertAnalogValues
 15912  0815                     psect	text41
 15913                           	file	"main.c"
 15914                           	line	195
 15915                           	global	__size_of_convertAnalogValues
 15916                           	__size_of_convertAnalogValues	equ	__end_of_convertAnalogValues-_convertAnalogValues
 15917  019C                     	
 15918                           _convertAnalogValues:	
 15919  0815                     ;incstack = 0
 15920                           	opt	stack 10
 15921                           ; Regs used in _convertAnalogValues: [wreg+status,2+status,0+pclath+cstack]
 15922                           	line	200
 15923                           	
 15924                           l4875:	
 15925  0815                     ;main.c: 197:  static uint16_t avgT, avgV, avgI;;main.c: 198:  uint16_t adc;;main.c: 200
                                 :  adc = adcGetConversion(0b000110);
 15926                           	movlw	low(06h)
 15927  0815  3006               	fcall	_adcGetConversion
 15928  0816  31A2  220E  3188   	movlb 0	; select bank0
 15929  0819  0140               	movf	(1+(?_adcGetConversion)),w
 15930  081A  0821               	movwf	(convertAnalogValues@adc+1)
 15931  081B  00E7               	movf	(0+(?_adcGetConversion)),w
 15932  081C  0820               	movwf	(convertAnalogValues@adc)
 15933  081D  00E6               	line	201
 15934                           ;main.c: 201:  avgT = ema(adc, avgT, ( (uint32_t)(0.65 * 65535) ));
 15935                           	movf	(convertAnalogValues@adc+1),w
 15936  081E  0867               	movwf	(ema@in+1)
 15937  081F  00AD               	movf	(convertAnalogValues@adc),w
 15938  0820  0866               	movwf	(ema@in)
 15939  0821  00AC               	movlb 4	; select bank4
 15940  0822  0144               	movf	(convertAnalogValues@avgT+1)^0200h,w
 15941  0823  084F               	movlb 0	; select bank0
 15942  0824  0140               	movwf	(ema@average+1)
 15943  0825  00AF               	movlb 4	; select bank4
 15944  0826  0144               	movf	(convertAnalogValues@avgT)^0200h,w
 15945  0827  084E               	movlb 0	; select bank0
 15946  0828  0140               	movwf	(ema@average)
 15947  0829  00AE               	movlw	0
 15948  082A  3000               	movwf	(ema@alpha+3)
 15949  082B  00B3               	movlw	0
 15950  082C  3000               	movwf	(ema@alpha+2)
 15951  082D  00B2               	movlw	0A6h
 15952  082E  30A6               	movwf	(ema@alpha+1)
 15953  082F  00B1               	movlw	065h
 15954  0830  3065               	movwf	(ema@alpha)
 15955  0831  00B0               
 15956                           	fcall	_ema
 15957  0832  3198  20AA  3188   	movlb 0	; select bank0
 15958  0835  0140               	movf	(1+(?_ema)),w
 15959  0836  082D               	movlb 4	; select bank4
 15960  0837  0144               	movwf	(convertAnalogValues@avgT+1)^0200h
 15961  0838  00CF               	movlb 0	; select bank0
 15962  0839  0140               	movf	(0+(?_ema)),w
 15963  083A  082C               	movlb 4	; select bank4
 15964  083B  0144               	movwf	(convertAnalogValues@avgT)^0200h
 15965  083C  00CE               	line	202
 15966                           ;main.c: 202:  adc = adcGetConversion(0b010000);
 15967                           	movlw	low(010h)
 15968  083D  3010               	fcall	_adcGetConversion
 15969  083E  31A2  220E  3188   	movlb 0	; select bank0
 15970  0841  0140               	movf	(1+(?_adcGetConversion)),w
 15971  0842  0821               	movwf	(convertAnalogValues@adc+1)
 15972  0843  00E7               	movf	(0+(?_adcGetConversion)),w
 15973  0844  0820               	movwf	(convertAnalogValues@adc)
 15974  0845  00E6               	line	203
 15975                           ;main.c: 203:  avgV = ema(adc, avgV, ( (uint32_t)(0.65 * 65535) ));
 15976                           	movf	(convertAnalogValues@adc+1),w
 15977  0846  0867               	movwf	(ema@in+1)
 15978  0847  00AD               	movf	(convertAnalogValues@adc),w
 15979  0848  0866               	movwf	(ema@in)
 15980  0849  00AC               	movlb 4	; select bank4
 15981  084A  0144               	movf	(convertAnalogValues@avgV+1)^0200h,w
 15982  084B  084D               	movlb 0	; select bank0
 15983  084C  0140               	movwf	(ema@average+1)
 15984  084D  00AF               	movlb 4	; select bank4
 15985  084E  0144               	movf	(convertAnalogValues@avgV)^0200h,w
 15986  084F  084C               	movlb 0	; select bank0
 15987  0850  0140               	movwf	(ema@average)
 15988  0851  00AE               	movlw	0
 15989  0852  3000               	movwf	(ema@alpha+3)
 15990  0853  00B3               	movlw	0
 15991  0854  3000               	movwf	(ema@alpha+2)
 15992  0855  00B2               	movlw	0A6h
 15993  0856  30A6               	movwf	(ema@alpha+1)
 15994  0857  00B1               	movlw	065h
 15995  0858  3065               	movwf	(ema@alpha)
 15996  0859  00B0               
 15997                           	fcall	_ema
 15998  085A  3198  20AA  3188   	movlb 0	; select bank0
 15999  085D  0140               	movf	(1+(?_ema)),w
 16000  085E  082D               	movlb 4	; select bank4
 16001  085F  0144               	movwf	(convertAnalogValues@avgV+1)^0200h
 16002  0860  00CD               	movlb 0	; select bank0
 16003  0861  0140               	movf	(0+(?_ema)),w
 16004  0862  082C               	movlb 4	; select bank4
 16005  0863  0144               	movwf	(convertAnalogValues@avgV)^0200h
 16006  0864  00CC               	line	204
 16007                           ;main.c: 204:  adc = adcGetConversion(0b010001);
 16008                           	movlw	low(011h)
 16009  0865  3011               	fcall	_adcGetConversion
 16010  0866  31A2  220E  3188   	movlb 0	; select bank0
 16011  0869  0140               	movf	(1+(?_adcGetConversion)),w
 16012  086A  0821               	movwf	(convertAnalogValues@adc+1)
 16013  086B  00E7               	movf	(0+(?_adcGetConversion)),w
 16014  086C  0820               	movwf	(convertAnalogValues@adc)
 16015  086D  00E6               	line	205
 16016                           ;main.c: 205:  avgI = ema(adc, avgI, ( (uint32_t)(0.65 * 65535) ));
 16017                           	movf	(convertAnalogValues@adc+1),w
 16018  086E  0867               	movwf	(ema@in+1)
 16019  086F  00AD               	movf	(convertAnalogValues@adc),w
 16020  0870  0866               	movwf	(ema@in)
 16021  0871  00AC               	movlb 4	; select bank4
 16022  0872  0144               	movf	(convertAnalogValues@avgI+1)^0200h,w
 16023  0873  084B               	movlb 0	; select bank0
 16024  0874  0140               	movwf	(ema@average+1)
 16025  0875  00AF               	movlb 4	; select bank4
 16026  0876  0144               	movf	(convertAnalogValues@avgI)^0200h,w
 16027  0877  084A               	movlb 0	; select bank0
 16028  0878  0140               	movwf	(ema@average)
 16029  0879  00AE               	movlw	0
 16030  087A  3000               	movwf	(ema@alpha+3)
 16031  087B  00B3               	movlw	0
 16032  087C  3000               	movwf	(ema@alpha+2)
 16033  087D  00B2               	movlw	0A6h
 16034  087E  30A6               	movwf	(ema@alpha+1)
 16035  087F  00B1               	movlw	065h
 16036  0880  3065               	movwf	(ema@alpha)
 16037  0881  00B0               
 16038                           	fcall	_ema
 16039  0882  3198  20AA  3188   	movlb 0	; select bank0
 16040  0885  0140               	movf	(1+(?_ema)),w
 16041  0886  082D               	movlb 4	; select bank4
 16042  0887  0144               	movwf	(convertAnalogValues@avgI+1)^0200h
 16043  0888  00CB               	movlb 0	; select bank0
 16044  0889  0140               	movf	(0+(?_ema)),w
 16045  088A  082C               	movlb 4	; select bank4
 16046  088B  0144               	movwf	(convertAnalogValues@avgI)^0200h
 16047  088C  00CA               	line	206
 16048                           ;main.c: 206:  g_tempAux = (avgT * 0.1191) - 34.512;
 16049                           	movlw	0xc2
 16050  088D  30C2               	movlb 0	; select bank0
 16051  088E  0140               	movwf	(___fladd@b+3)
 16052  088F  00CB               	movlw	0xa
 16053  0890  300A               	movwf	(___fladd@b+2)
 16054  0891  00CA               	movlw	0xc
 16055  0892  300C               	movwf	(___fladd@b+1)
 16056  0893  00C9               	movlw	0x4a
 16057  0894  304A               	movwf	(___fladd@b)
 16058  0895  00C8               
 16059                           	movlw	0x3d
 16060  0896  303D               	movwf	(___flmul@b+3)
 16061  0897  00B1               	movlw	0xf3
 16062  0898  30F3               	movwf	(___flmul@b+2)
 16063  0899  00B0               	movlw	0xea
 16064  089A  30EA               	movwf	(___flmul@b+1)
 16065  089B  00AF               	movlw	0xb3
 16066  089C  30B3               	movwf	(___flmul@b)
 16067  089D  00AE               
 16068                           	movlb 4	; select bank4
 16069  089E  0144               	movf	(convertAnalogValues@avgT)^0200h,w
 16070  089F  084E               	movlb 0	; select bank0
 16071  08A0  0140               	movwf	(___xxtofl@val)
 16072  08A1  00A0               	movlb 4	; select bank4
 16073  08A2  0144               	movf	(convertAnalogValues@avgT+1)^0200h,w
 16074  08A3  084F               	movlb 0	; select bank0
 16075  08A4  0140               	movwf	((___xxtofl@val))+1
 16076  08A5  00A1               	clrf	2+((___xxtofl@val))
 16077  08A6  01A2               	clrf	3+((___xxtofl@val))
 16078  08A7  01A3               	movlw	low(0)
 16079  08A8  3000               	fcall	___xxtofl
 16080  08A9  319B  23E8  3188   	movlb 0	; select bank0
 16081  08AC  0140               	movf	(3+(?___xxtofl)),w
 16082  08AD  0823               	movwf	(___flmul@a+3)
 16083  08AE  00B5               	movf	(2+(?___xxtofl)),w
 16084  08AF  0822               	movwf	(___flmul@a+2)
 16085  08B0  00B4               	movf	(1+(?___xxtofl)),w
 16086  08B1  0821               	movwf	(___flmul@a+1)
 16087  08B2  00B3               	movf	(0+(?___xxtofl)),w
 16088  08B3  0820               	movwf	(___flmul@a)
 16089  08B4  00B2               
 16090                           	fcall	___flmul
 16091  08B5  3195  2595  3188   	movlb 0	; select bank0
 16092  08B8  0140               	movf	(3+(?___flmul)),w
 16093  08B9  0831               	movwf	(___fladd@a+3)
 16094  08BA  00CF               	movf	(2+(?___flmul)),w
 16095  08BB  0830               	movwf	(___fladd@a+2)
 16096  08BC  00CE               	movf	(1+(?___flmul)),w
 16097  08BD  082F               	movwf	(___fladd@a+1)
 16098  08BE  00CD               	movf	(0+(?___flmul)),w
 16099  08BF  082E               	movwf	(___fladd@a)
 16100  08C0  00CC               
 16101                           	fcall	___fladd
 16102  08C1  3189  21B1  3188   	movlb 0	; select bank0
 16103  08C4  0140               	movf	(3+(?___fladd)),w
 16104  08C5  084B               	movlb 4	; select bank4
 16105  08C6  0144               	movwf	(_g_tempAux+3)^0200h
 16106  08C7  00B7               	movlb 0	; select bank0
 16107  08C8  0140               	movf	(2+(?___fladd)),w
 16108  08C9  084A               	movlb 4	; select bank4
 16109  08CA  0144               	movwf	(_g_tempAux+2)^0200h
 16110  08CB  00B6               	movlb 0	; select bank0
 16111  08CC  0140               	movf	(1+(?___fladd)),w
 16112  08CD  0849               	movlb 4	; select bank4
 16113  08CE  0144               	movwf	(_g_tempAux+1)^0200h
 16114  08CF  00B5               	movlb 0	; select bank0
 16115  08D0  0140               	movf	(0+(?___fladd)),w
 16116  08D1  0848               	movlb 4	; select bank4
 16117  08D2  0144               	movwf	(_g_tempAux)^0200h
 16118  08D3  00B4               
 16119                           	line	207
 16120                           ;main.c: 207:  g_voltage = (avgV * 5.0 * (150.0 + 47.0)) / (1023.0 * 47.0);
 16121                           	movlw	0x40
 16122  08D4  3040               	movlb 0	; select bank0
 16123  08D5  0140               	movwf	(___flmul@b+3)
 16124  08D6  00B1               	movlw	0xa0
 16125  08D7  30A0               	movwf	(___flmul@b+2)
 16126  08D8  00B0               	movlw	0x0
 16127  08D9  3000               	movwf	(___flmul@b+1)
 16128  08DA  00AF               	movlw	0x0
 16129  08DB  3000               	movwf	(___flmul@b)
 16130  08DC  00AE               
 16131                           	movlb 4	; select bank4
 16132  08DD  0144               	movf	(convertAnalogValues@avgV)^0200h,w
 16133  08DE  084C               	movlb 0	; select bank0
 16134  08DF  0140               	movwf	(___xxtofl@val)
 16135  08E0  00A0               	movlb 4	; select bank4
 16136  08E1  0144               	movf	(convertAnalogValues@avgV+1)^0200h,w
 16137  08E2  084D               	movlb 0	; select bank0
 16138  08E3  0140               	movwf	((___xxtofl@val))+1
 16139  08E4  00A1               	clrf	2+((___xxtofl@val))
 16140  08E5  01A2               	clrf	3+((___xxtofl@val))
 16141  08E6  01A3               	movlw	low(0)
 16142  08E7  3000               	fcall	___xxtofl
 16143  08E8  319B  23E8  3188   	movlb 0	; select bank0
 16144  08EB  0140               	movf	(3+(?___xxtofl)),w
 16145  08EC  0823               	movwf	(___flmul@a+3)
 16146  08ED  00B5               	movf	(2+(?___xxtofl)),w
 16147  08EE  0822               	movwf	(___flmul@a+2)
 16148  08EF  00B4               	movf	(1+(?___xxtofl)),w
 16149  08F0  0821               	movwf	(___flmul@a+1)
 16150  08F1  00B3               	movf	(0+(?___xxtofl)),w
 16151  08F2  0820               	movwf	(___flmul@a)
 16152  08F3  00B2               
 16153                           	fcall	___flmul
 16154  08F4  3195  2595  3188   	movlb 0	; select bank0
 16155  08F7  0140               	movf	(3+(?___flmul)),w
 16156  08F8  0831               	movwf	(_convertAnalogValues$1541+3)
 16157  08F9  00E5               	movf	(2+(?___flmul)),w
 16158  08FA  0830               	movwf	(_convertAnalogValues$1541+2)
 16159  08FB  00E4               	movf	(1+(?___flmul)),w
 16160  08FC  082F               	movwf	(_convertAnalogValues$1541+1)
 16161  08FD  00E3               	movf	(0+(?___flmul)),w
 16162  08FE  082E               	movwf	(_convertAnalogValues$1541)
 16163  08FF  00E2               
 16164                           ;main.c: 207:  g_voltage = (avgV * 5.0 * (150.0 + 47.0)) / (1023.0 * 47.0);
 16165                           	movlw	0x47
 16166  0900  3047               	movwf	(___fldiv@a+3)
 16167  0901  00CB               	movlw	0x3b
 16168  0902  303B               	movwf	(___fldiv@a+2)
 16169  0903  00CA               	movlw	0xd1
 16170  0904  30D1               	movwf	(___fldiv@a+1)
 16171  0905  00C9               	movlw	0x0
 16172  0906  3000               	movwf	(___fldiv@a)
 16173  0907  00C8               
 16174                           	movlw	0x43
 16175  0908  3043               	movwf	(___flmul@b+3)
 16176  0909  00B1               	movlw	0x45
 16177  090A  3045               	movwf	(___flmul@b+2)
 16178  090B  00B0               	movlw	0x0
 16179  090C  3000               	movwf	(___flmul@b+1)
 16180  090D  00AF               	movlw	0x0
 16181  090E  3000               	movwf	(___flmul@b)
 16182  090F  00AE               
 16183                           	movf	(_convertAnalogValues$1541+3),w
 16184  0910  0865               	movwf	(___flmul@a+3)
 16185  0911  00B5               	movf	(_convertAnalogValues$1541+2),w
 16186  0912  0864               	movwf	(___flmul@a+2)
 16187  0913  00B4               	movf	(_convertAnalogValues$1541+1),w
 16188  0914  0863               	movwf	(___flmul@a+1)
 16189  0915  00B3               	movf	(_convertAnalogValues$1541),w
 16190  0916  0862               	movwf	(___flmul@a)
 16191  0917  00B2               
 16192                           	fcall	___flmul
 16193  0918  3195  2595  3188   	movlb 0	; select bank0
 16194  091B  0140               	movf	(3+(?___flmul)),w
 16195  091C  0831               	movwf	(___fldiv@b+3)
 16196  091D  00CF               	movf	(2+(?___flmul)),w
 16197  091E  0830               	movwf	(___fldiv@b+2)
 16198  091F  00CE               	movf	(1+(?___flmul)),w
 16199  0920  082F               	movwf	(___fldiv@b+1)
 16200  0921  00CD               	movf	(0+(?___flmul)),w
 16201  0922  082E               	movwf	(___fldiv@b)
 16202  0923  00CC               
 16203                           	fcall	___fldiv
 16204  0924  3193  23B6  3188   	movlb 0	; select bank0
 16205  0927  0140               	movf	(3+(?___fldiv)),w
 16206  0928  084B               	movlb 4	; select bank4
 16207  0929  0144               	movwf	(_g_voltage+3)^0200h
 16208  092A  00B3               	movlb 0	; select bank0
 16209  092B  0140               	movf	(2+(?___fldiv)),w
 16210  092C  084A               	movlb 4	; select bank4
 16211  092D  0144               	movwf	(_g_voltage+2)^0200h
 16212  092E  00B2               	movlb 0	; select bank0
 16213  092F  0140               	movf	(1+(?___fldiv)),w
 16214  0930  0849               	movlb 4	; select bank4
 16215  0931  0144               	movwf	(_g_voltage+1)^0200h
 16216  0932  00B1               	movlb 0	; select bank0
 16217  0933  0140               	movf	(0+(?___fldiv)),w
 16218  0934  0848               	movlb 4	; select bank4
 16219  0935  0144               	movwf	(_g_voltage)^0200h
 16220  0936  00B0               
 16221                           	line	208
 16222                           ;main.c: 208:  g_current = (avgI * 5.0) / (1023.0 * 0.05 * 50.0);
 16223                           	movlw	0x45
 16224  0937  3045               	movlb 0	; select bank0
 16225  0938  0140               	movwf	(___fldiv@a+3)
 16226  0939  00CB               	movlw	0x1f
 16227  093A  301F               	movwf	(___fldiv@a+2)
 16228  093B  00CA               	movlw	0xd8
 16229  093C  30D8               	movwf	(___fldiv@a+1)
 16230  093D  00C9               	movlw	0x0
 16231  093E  3000               	movwf	(___fldiv@a)
 16232  093F  00C8               
 16233                           	movlw	0x40
 16234  0940  3040               	movwf	(___flmul@b+3)
 16235  0941  00B1               	movlw	0xa0
 16236  0942  30A0               	movwf	(___flmul@b+2)
 16237  0943  00B0               	movlw	0x0
 16238  0944  3000               	movwf	(___flmul@b+1)
 16239  0945  00AF               	movlw	0x0
 16240  0946  3000               	movwf	(___flmul@b)
 16241  0947  00AE               
 16242                           	movlb 4	; select bank4
 16243  0948  0144               	movf	(convertAnalogValues@avgI)^0200h,w
 16244  0949  084A               	movlb 0	; select bank0
 16245  094A  0140               	movwf	(___xxtofl@val)
 16246  094B  00A0               	movlb 4	; select bank4
 16247  094C  0144               	movf	(convertAnalogValues@avgI+1)^0200h,w
 16248  094D  084B               	movlb 0	; select bank0
 16249  094E  0140               	movwf	((___xxtofl@val))+1
 16250  094F  00A1               	clrf	2+((___xxtofl@val))
 16251  0950  01A2               	clrf	3+((___xxtofl@val))
 16252  0951  01A3               	movlw	low(0)
 16253  0952  3000               	fcall	___xxtofl
 16254  0953  319B  23E8  3188   	movlb 0	; select bank0
 16255  0956  0140               	movf	(3+(?___xxtofl)),w
 16256  0957  0823               	movwf	(___flmul@a+3)
 16257  0958  00B5               	movf	(2+(?___xxtofl)),w
 16258  0959  0822               	movwf	(___flmul@a+2)
 16259  095A  00B4               	movf	(1+(?___xxtofl)),w
 16260  095B  0821               	movwf	(___flmul@a+1)
 16261  095C  00B3               	movf	(0+(?___xxtofl)),w
 16262  095D  0820               	movwf	(___flmul@a)
 16263  095E  00B2               
 16264                           	fcall	___flmul
 16265  095F  3195  2595  3188   	movlb 0	; select bank0
 16266  0962  0140               	movf	(3+(?___flmul)),w
 16267  0963  0831               	movwf	(___fldiv@b+3)
 16268  0964  00CF               	movf	(2+(?___flmul)),w
 16269  0965  0830               	movwf	(___fldiv@b+2)
 16270  0966  00CE               	movf	(1+(?___flmul)),w
 16271  0967  082F               	movwf	(___fldiv@b+1)
 16272  0968  00CD               	movf	(0+(?___flmul)),w
 16273  0969  082E               	movwf	(___fldiv@b)
 16274  096A  00CC               
 16275                           	fcall	___fldiv
 16276  096B  3193  23B6  3188   	movlb 0	; select bank0
 16277  096E  0140               	movf	(3+(?___fldiv)),w
 16278  096F  084B               	movlb 4	; select bank4
 16279  0970  0144               	movwf	(_g_current+3)^0200h
 16280  0971  00AF               	movlb 0	; select bank0
 16281  0972  0140               	movf	(2+(?___fldiv)),w
 16282  0973  084A               	movlb 4	; select bank4
 16283  0974  0144               	movwf	(_g_current+2)^0200h
 16284  0975  00AE               	movlb 0	; select bank0
 16285  0976  0140               	movf	(1+(?___fldiv)),w
 16286  0977  0849               	movlb 4	; select bank4
 16287  0978  0144               	movwf	(_g_current+1)^0200h
 16288  0979  00AD               	movlb 0	; select bank0
 16289  097A  0140               	movf	(0+(?___fldiv)),w
 16290  097B  0848               	movlb 4	; select bank4
 16291  097C  0144               	movwf	(_g_current)^0200h
 16292  097D  00AC               
 16293                           	line	209
 16294                           ;main.c: 209:  g_power = g_voltage * g_current;
 16295                           	movf	(_g_current+3)^0200h,w
 16296  097E  082F               	movlb 0	; select bank0
 16297  097F  0140               	movwf	(___flmul@b+3)
 16298  0980  00B1               	movlb 4	; select bank4
 16299  0981  0144               	movf	(_g_current+2)^0200h,w
 16300  0982  082E               	movlb 0	; select bank0
 16301  0983  0140               	movwf	(___flmul@b+2)
 16302  0984  00B0               	movlb 4	; select bank4
 16303  0985  0144               	movf	(_g_current+1)^0200h,w
 16304  0986  082D               	movlb 0	; select bank0
 16305  0987  0140               	movwf	(___flmul@b+1)
 16306  0988  00AF               	movlb 4	; select bank4
 16307  0989  0144               	movf	(_g_current)^0200h,w
 16308  098A  082C               	movlb 0	; select bank0
 16309  098B  0140               	movwf	(___flmul@b)
 16310  098C  00AE               
 16311                           	movlb 4	; select bank4
 16312  098D  0144               	movf	(_g_voltage+3)^0200h,w
 16313  098E  0833               	movlb 0	; select bank0
 16314  098F  0140               	movwf	(___flmul@a+3)
 16315  0990  00B5               	movlb 4	; select bank4
 16316  0991  0144               	movf	(_g_voltage+2)^0200h,w
 16317  0992  0832               	movlb 0	; select bank0
 16318  0993  0140               	movwf	(___flmul@a+2)
 16319  0994  00B4               	movlb 4	; select bank4
 16320  0995  0144               	movf	(_g_voltage+1)^0200h,w
 16321  0996  0831               	movlb 0	; select bank0
 16322  0997  0140               	movwf	(___flmul@a+1)
 16323  0998  00B3               	movlb 4	; select bank4
 16324  0999  0144               	movf	(_g_voltage)^0200h,w
 16325  099A  0830               	movlb 0	; select bank0
 16326  099B  0140               	movwf	(___flmul@a)
 16327  099C  00B2               
 16328                           	fcall	___flmul
 16329  099D  3195  2595  3188   	movlb 0	; select bank0
 16330  09A0  0140               	movf	(3+(?___flmul)),w
 16331  09A1  0831               	movlb 4	; select bank4
 16332  09A2  0144               	movwf	(_g_power+3)^0200h
 16333  09A3  00AB               	movlb 0	; select bank0
 16334  09A4  0140               	movf	(2+(?___flmul)),w
 16335  09A5  0830               	movlb 4	; select bank4
 16336  09A6  0144               	movwf	(_g_power+2)^0200h
 16337  09A7  00AA               	movlb 0	; select bank0
 16338  09A8  0140               	movf	(1+(?___flmul)),w
 16339  09A9  082F               	movlb 4	; select bank4
 16340  09AA  0144               	movwf	(_g_power+1)^0200h
 16341  09AB  00A9               	movlb 0	; select bank0
 16342  09AC  0140               	movf	(0+(?___flmul)),w
 16343  09AD  082E               	movlb 4	; select bank4
 16344  09AE  0144               	movwf	(_g_power)^0200h
 16345  09AF  00A8               
 16346                           	line	210
 16347                           	
 16348                           l229:	
 16349  09B0                     	return
 16350  09B0  0008               	opt stack 0
 16351                           GLOBAL	__end_of_convertAnalogValues
 16352                           	__end_of_convertAnalogValues:
 16353  09B1                     	signat	_convertAnalogValues,89
 16354                           	global	_ema
 16355                           
 16356 ;; *************** function _ema *****************
 16357 ;; Defined at:
 16358 ;;		line 179 in file "main.c"
 16359 ;; Parameters:    Size  Location     Type
 16360 ;;  in              2   12[BANK0 ] unsigned short 
 16361 ;;  average         2   14[BANK0 ] unsigned short 
 16362 ;;  alpha           4   16[BANK0 ] unsigned long 
 16363 ;; Auto vars:     Size  Location     Type
 16364 ;;  tmp             4   28[BANK0 ] unsigned long 
 16365 ;; Return value:  Size  Location     Type
 16366 ;;                  2   12[BANK0 ] unsigned short 
 16367 ;; Registers used:
 16368 ;;		wreg, status,2, status,0, pclath, cstack
 16369 ;; Tracked objects:
 16370 ;;		On entry : 0/0
 16371 ;;		On exit  : 0/0
 16372 ;;		Unchanged: 0/0
 16373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16374 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16375 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16376 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16377 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16378 ;;Total ram usage:       20 bytes
 16379 ;; Hardware stack levels used:    1
 16380 ;; Hardware stack levels required when called:    4
 16381 ;; This function calls:
 16382 ;;		___lmul
 16383 ;; This function is called by:
 16384 ;;		_convertAnalogValues
 16385 ;; This function uses a non-reentrant model
 16386 ;;
 16387                           psect	text42,local,class=CODE,delta=2,merge=1,group=0
 16388                           	line	179
 16389                           global __ptext42
 16390                           __ptext42:	;psect for function _ema
 16391  18AA                     psect	text42
 16392                           	file	"main.c"
 16393                           	line	179
 16394                           	global	__size_of_ema
 16395                           	__size_of_ema	equ	__end_of_ema-_ema
 16396  006D                     	
 16397                           _ema:	
 16398  18AA                     ;incstack = 0
 16399                           	opt	stack 10
 16400                           ; Regs used in _ema: [wreg+status,2+status,0+pclath+cstack]
 16401                           	line	182
 16402                           	
 16403                           l4619:	
 16404  18AA                     ;main.c: 179: uint16_t ema(uint16_t in, uint16_t average, uint32_t alpha);main.c: 180: {
                                 ;main.c: 181:   uint32_t tmp;;main.c: 182:   tmp = in * alpha + average * (65536 - alpha
                                 );
 16405                           	movlb 0	; select bank0
 16406  18AA  0140               	comf	(ema@alpha),w
 16407  18AB  0930               	movwf	(??_ema+0)+0
 16408  18AC  00B4               	comf	(ema@alpha+1),w
 16409  18AD  0931               	movwf	((??_ema+0)+0+1)
 16410  18AE  00B5               	comf	(ema@alpha+2),w
 16411  18AF  0932               	movwf	((??_ema+0)+0+2)
 16412  18B0  00B6               	comf	(ema@alpha+3),w
 16413  18B1  0933               	movwf	((??_ema+0)+0+3)
 16414  18B2  00B7               	incf	(??_ema+0)+0,f
 16415  18B3  0AB4               	skipnz
 16416  18B4  1903               	incf	((??_ema+0)+0+1),f
 16417  18B5  0AB5               	skipnz
 16418  18B6  1903               	incf	((??_ema+0)+0+2),f
 16419  18B7  0AB6               	skipnz
 16420  18B8  1903               	incf	((??_ema+0)+0+3),f
 16421  18B9  0AB7               	movlw	0
 16422  18BA  3000               	addwf	(0+(??_ema+0)+0),w
 16423  18BB  0734               	movwf	(___lmul@multiplier)
 16424  18BC  00A0               	movlw	high(010000h)
 16425  18BD  3000               	addwfc	(1+(??_ema+0)+0),w
 16426  18BE  3D35               	movwf	1+(___lmul@multiplier)
 16427  18BF  00A1               	
 16428                           	movlw	low highword(010000h)
 16429  18C0  3001               	addwfc	(2+(??_ema+0)+0),w
 16430  18C1  3D36               	movwf	2+(___lmul@multiplier)
 16431  18C2  00A2               	
 16432                           	movlw	high highword(010000h)
 16433  18C3  3000               	addwfc	(3+(??_ema+0)+0),w
 16434  18C4  3D37               	movwf	3+(___lmul@multiplier)
 16435  18C5  00A3               	movf	(ema@average),w
 16436  18C6  082E               	movwf	(___lmul@multiplicand)
 16437  18C7  00A4               	movf	(ema@average+1),w
 16438  18C8  082F               	movwf	((___lmul@multiplicand))+1
 16439  18C9  00A5               	clrf	2+((___lmul@multiplicand))
 16440  18CA  01A6               	clrf	3+((___lmul@multiplicand))
 16441  18CB  01A7               	fcall	___lmul
 16442  18CC  31A3  23ED  3198   	movlb 0	; select bank0
 16443  18CF  0140               	movf	(0+?___lmul),w
 16444  18D0  0820               	movwf	(??_ema+4)+0
 16445  18D1  00B8               	movf	(1+?___lmul),w
 16446  18D2  0821               	movwf	((??_ema+4)+0+1)
 16447  18D3  00B9               	movf	(2+?___lmul),w
 16448  18D4  0822               	movwf	((??_ema+4)+0+2)
 16449  18D5  00BA               	movf	(3+?___lmul),w
 16450  18D6  0823               	movwf	((??_ema+4)+0+3)
 16451  18D7  00BB               	movf	(ema@in),w
 16452  18D8  082C               	movwf	(___lmul@multiplier)
 16453  18D9  00A0               	movf	(ema@in+1),w
 16454  18DA  082D               	movwf	((___lmul@multiplier))+1
 16455  18DB  00A1               	clrf	2+((___lmul@multiplier))
 16456  18DC  01A2               	clrf	3+((___lmul@multiplier))
 16457  18DD  01A3               	movf	(ema@alpha+3),w
 16458  18DE  0833               	movwf	(___lmul@multiplicand+3)
 16459  18DF  00A7               	movf	(ema@alpha+2),w
 16460  18E0  0832               	movwf	(___lmul@multiplicand+2)
 16461  18E1  00A6               	movf	(ema@alpha+1),w
 16462  18E2  0831               	movwf	(___lmul@multiplicand+1)
 16463  18E3  00A5               	movf	(ema@alpha),w
 16464  18E4  0830               	movwf	(___lmul@multiplicand)
 16465  18E5  00A4               
 16466                           	fcall	___lmul
 16467  18E6  31A3  23ED  3198   	movlb 0	; select bank0
 16468  18E9  0140               	movf	(0+(?___lmul)),w
 16469  18EA  0820               	addwf	(??_ema+4)+0,f
 16470  18EB  07B8               	movf	(1+(?___lmul)),w
 16471  18EC  0821               	addwfc	(??_ema+4)+1,f
 16472  18ED  3DB9               	movf	(2+(?___lmul)),w
 16473  18EE  0822               	addwfc	(??_ema+4)+2,f
 16474  18EF  3DBA               	movf	(3+(?___lmul)),w
 16475  18F0  0823               	addwfc	(??_ema+4)+3,f
 16476  18F1  3DBB               	movf	3+(??_ema+4)+0,w
 16477  18F2  083B               	movwf	(ema@tmp+3)
 16478  18F3  00BF               	movf	2+(??_ema+4)+0,w
 16479  18F4  083A               	movwf	(ema@tmp+2)
 16480  18F5  00BE               	movf	1+(??_ema+4)+0,w
 16481  18F6  0839               	movwf	(ema@tmp+1)
 16482  18F7  00BD               	movf	0+(??_ema+4)+0,w
 16483  18F8  0838               	movwf	(ema@tmp)
 16484  18F9  00BC               
 16485                           	line	183
 16486                           	
 16487                           l4621:	
 16488  18FA                     ;main.c: 183:   return (tmp + 32768) / 65536;
 16489                           	movlw	0
 16490  18FA  3000               	movwf	((??_ema+0)+0)
 16491  18FB  00B4               	movlw	080h
 16492  18FC  3080               	movwf	((??_ema+0)+0+1)
 16493  18FD  00B5               	movlw	0
 16494  18FE  3000               	movwf	((??_ema+0)+0+2)
 16495  18FF  00B6               	movlw	0
 16496  1900  3000               	movwf	((??_ema+0)+0+3)
 16497  1901  00B7               	movf	(ema@tmp),w
 16498  1902  083C               	addwf	(??_ema+0)+0,f
 16499  1903  07B4               	movf	(ema@tmp+1),w
 16500  1904  083D               	addwfc	(??_ema+0)+1,f
 16501  1905  3DB5               	movf	(ema@tmp+2),w
 16502  1906  083E               	addwfc	(??_ema+0)+2,f
 16503  1907  3DB6               	movf	(ema@tmp+3),w
 16504  1908  083F               	addwfc	(??_ema+0)+3,f
 16505  1909  3DB7               	movlw	010h
 16506  190A  3010               u6455:
 16507  190B                     	lsrf	(??_ema+0)+3,f
 16508  190B  36B7               	rrf	(??_ema+0)+2,f
 16509  190C  0CB6               	rrf	(??_ema+0)+1,f
 16510  190D  0CB5               	rrf	(??_ema+0)+0,f
 16511  190E  0CB4               u6450:
 16512  190F                     	decfsz	wreg,f
 16513  190F  0B89               	goto	u6455
 16514  1910  290B               	movf	1+(??_ema+0)+0,w
 16515  1911  0835               	movwf	(?_ema+1)
 16516  1912  00AD               	movf	0+(??_ema+0)+0,w
 16517  1913  0834               	movwf	(?_ema)
 16518  1914  00AC               	goto	l214
 16519  1915  2916               	
 16520                           l4623:	
 16521  1916                     	line	184
 16522                           	
 16523                           l214:	
 16524  1916                     	return
 16525  1916  0008               	opt stack 0
 16526                           GLOBAL	__end_of_ema
 16527                           	__end_of_ema:
 16528  1917                     	signat	_ema,12410
 16529                           	global	___lmul
 16530                           
 16531 ;; *************** function ___lmul *****************
 16532 ;; Defined at:
 16533 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
 16534 ;; Parameters:    Size  Location     Type
 16535 ;;  multiplier      4    0[BANK0 ] unsigned long 
 16536 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 16537 ;; Auto vars:     Size  Location     Type
 16538 ;;  product         4    8[BANK0 ] unsigned long 
 16539 ;; Return value:  Size  Location     Type
 16540 ;;                  4    0[BANK0 ] unsigned long 
 16541 ;; Registers used:
 16542 ;;		wreg, status,2, status,0
 16543 ;; Tracked objects:
 16544 ;;		On entry : 0/0
 16545 ;;		On exit  : 0/0
 16546 ;;		Unchanged: 0/0
 16547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16548 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16549 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16551 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16552 ;;Total ram usage:       12 bytes
 16553 ;; Hardware stack levels used:    1
 16554 ;; Hardware stack levels required when called:    3
 16555 ;; This function calls:
 16556 ;;		Nothing
 16557 ;; This function is called by:
 16558 ;;		_ema
 16559 ;; This function uses a non-reentrant model
 16560 ;;
 16561                           psect	text43,local,class=CODE,delta=2,merge=1,group=1
 16562                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
 16563                           	line	15
 16564                           global __ptext43
 16565                           __ptext43:	;psect for function ___lmul
 16566  23ED                     psect	text43
 16567                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
 16568                           	line	15
 16569                           	global	__size_of___lmul
 16570                           	__size_of___lmul	equ	__end_of___lmul-___lmul
 16571  0038                     	
 16572                           ___lmul:	
 16573  23ED                     ;incstack = 0
 16574                           	opt	stack 10
 16575                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 16576                           	line	119
 16577                           	
 16578                           l4601:	
 16579  23ED                     	movlw	high highword(0)
 16580  23ED  3000               	movlb 0	; select bank0
 16581  23EE  0140               	movwf	(___lmul@product+3)
 16582  23EF  00AB               	movlw	low highword(0)
 16583  23F0  3000               	movwf	(___lmul@product+2)
 16584  23F1  00AA               	movlw	high(0)
 16585  23F2  3000               	movwf	(___lmul@product+1)
 16586  23F3  00A9               	movlw	low(0)
 16587  23F4  3000               	movwf	(___lmul@product)
 16588  23F5  00A8               
 16589                           	goto	l4603
 16590  23F6  2BF7               	line	120
 16591                           	
 16592                           l602:	
 16593  23F7                     	line	121
 16594                           	
 16595                           l4603:	
 16596  23F7                     	btfss	(___lmul@multiplier),(0)&7
 16597  23F7  1C20               	goto	u6411
 16598  23F8  2BFA               	goto	u6410
 16599  23F9  2BFB               u6411:
 16600  23FA                     	goto	l4607
 16601  23FA  2C04               u6410:
 16602  23FB                     	line	122
 16603                           	
 16604                           l4605:	
 16605  23FB                     	movf	(___lmul@multiplicand),w
 16606  23FB  0824               	addwf	(___lmul@product),f
 16607  23FC  07A8               	movf	(___lmul@multiplicand+1),w
 16608  23FD  0825               	addwfc	(___lmul@product+1),f
 16609  23FE  3DA9               	movf	(___lmul@multiplicand+2),w
 16610  23FF  0826               	addwfc	(___lmul@product+2),f
 16611  2400  3DAA               	movf	(___lmul@multiplicand+3),w
 16612  2401  0827               	addwfc	(___lmul@product+3),f
 16613  2402  3DAB               	goto	l4607
 16614  2403  2C04               	
 16615                           l603:	
 16616  2404                     	line	123
 16617                           	
 16618                           l4607:	
 16619  2404                     	movlw	01h
 16620  2404  3001               u6425:
 16621  2405                     	lslf	(___lmul@multiplicand),f
 16622  2405  35A4               	rlf	(___lmul@multiplicand+1),f
 16623  2406  0DA5               	rlf	(___lmul@multiplicand+2),f
 16624  2407  0DA6               	rlf	(___lmul@multiplicand+3),f
 16625  2408  0DA7               	decfsz	wreg,f
 16626  2409  0B89               	goto	u6425
 16627  240A  2C05               	line	124
 16628                           	
 16629                           l4609:	
 16630  240B                     	movlw	01h
 16631  240B  3001               u6435:
 16632  240C                     	lsrf	(___lmul@multiplier+3),f
 16633  240C  36A3               	rrf	(___lmul@multiplier+2),f
 16634  240D  0CA2               	rrf	(___lmul@multiplier+1),f
 16635  240E  0CA1               	rrf	(___lmul@multiplier),f
 16636  240F  0CA0               	decfsz	wreg,f
 16637  2410  0B89               	goto	u6435
 16638  2411  2C0C               
 16639                           	line	125
 16640                           	movf	(___lmul@multiplier+3),w
 16641  2412  0823               	iorwf	(___lmul@multiplier+2),w
 16642  2413  0422               	iorwf	(___lmul@multiplier+1),w
 16643  2414  0421               	iorwf	(___lmul@multiplier),w
 16644  2415  0420               	skipz
 16645  2416  1D03               	goto	u6441
 16646  2417  2C19               	goto	u6440
 16647  2418  2C1A               u6441:
 16648  2419                     	goto	l4603
 16649  2419  2BF7               u6440:
 16650  241A                     	goto	l4611
 16651  241A  2C1B               	
 16652                           l604:	
 16653  241B                     	line	128
 16654                           	
 16655                           l4611:	
 16656  241B                     	movf	(___lmul@product+3),w
 16657  241B  082B               	movwf	(?___lmul+3)
 16658  241C  00A3               	movf	(___lmul@product+2),w
 16659  241D  082A               	movwf	(?___lmul+2)
 16660  241E  00A2               	movf	(___lmul@product+1),w
 16661  241F  0829               	movwf	(?___lmul+1)
 16662  2420  00A1               	movf	(___lmul@product),w
 16663  2421  0828               	movwf	(?___lmul)
 16664  2422  00A0               
 16665                           	goto	l605
 16666  2423  2C24               	
 16667                           l4613:	
 16668  2424                     	line	129
 16669                           	
 16670                           l605:	
 16671  2424                     	return
 16672  2424  0008               	opt stack 0
 16673                           GLOBAL	__end_of___lmul
 16674                           	__end_of___lmul:
 16675  2425                     	signat	___lmul,8316
 16676                           	global	_adcGetConversion
 16677                           
 16678 ;; *************** function _adcGetConversion *****************
 16679 ;; Defined at:
 16680 ;;		line 186 in file "main.c"
 16681 ;; Parameters:    Size  Location     Type
 16682 ;;  channel         1    wreg     unsigned char 
 16683 ;; Auto vars:     Size  Location     Type
 16684 ;;  channel         1    3[BANK0 ] unsigned char 
 16685 ;; Return value:  Size  Location     Type
 16686 ;;                  2    0[BANK0 ] unsigned short 
 16687 ;; Registers used:
 16688 ;;		wreg, status,2, status,0
 16689 ;; Tracked objects:
 16690 ;;		On entry : 0/0
 16691 ;;		On exit  : 0/0
 16692 ;;		Unchanged: 0/0
 16693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16694 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16695 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16696 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16697 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16698 ;;Total ram usage:        4 bytes
 16699 ;; Hardware stack levels used:    1
 16700 ;; Hardware stack levels required when called:    3
 16701 ;; This function calls:
 16702 ;;		Nothing
 16703 ;; This function is called by:
 16704 ;;		_convertAnalogValues
 16705 ;; This function uses a non-reentrant model
 16706 ;;
 16707                           psect	text44,local,class=CODE,delta=2,merge=1,group=0
 16708                           	file	"main.c"
 16709                           	line	186
 16710                           global __ptext44
 16711                           __ptext44:	;psect for function _adcGetConversion
 16712  220E                     psect	text44
 16713                           	file	"main.c"
 16714                           	line	186
 16715                           	global	__size_of_adcGetConversion
 16716                           	__size_of_adcGetConversion	equ	__end_of_adcGetConversion-_adcGetConversion
 16717  0022                     	
 16718                           _adcGetConversion:	
 16719  220E                     ;incstack = 0
 16720                           	opt	stack 11
 16721                           ; Regs used in _adcGetConversion: [wreg+status,2+status,0]
 16722                           ;adcGetConversion@channel stored from wreg
 16723                           	movlb 0	; select bank0
 16724  220E  0140               	movwf	(adcGetConversion@channel)
 16725  220F  00A3               	line	188
 16726                           	
 16727                           l4625:	
 16728  2210                     ;main.c: 186: uint16_t adcGetConversion(uint8_t channel);main.c: 187: {;main.c: 188:  AD
                                 CON0bits.CHS = channel;
 16729                           	movf	(adcGetConversion@channel),w
 16730  2210  0823               	movwf	(??_adcGetConversion+0)+0
 16731  2211  00A2               	rlf	(??_adcGetConversion+0)+0,f
 16732  2212  0DA2               	rlf	(??_adcGetConversion+0)+0,f
 16733  2213  0DA2               	movlb 1	; select bank1
 16734  2214  0141               	movf	(157)^080h,w	;volatile
 16735  2215  081D               	movlb 0	; select bank0
 16736  2216  0140               	xorwf	(??_adcGetConversion+0)+0,w
 16737  2217  0622               	andlw	not (((1<<6)-1)<<2)
 16738  2218  3903               	xorwf	(??_adcGetConversion+0)+0,w
 16739  2219  0622               	movlb 1	; select bank1
 16740  221A  0141               	movwf	(157)^080h	;volatile
 16741  221B  009D               	line	189
 16742                           	
 16743                           l4627:	
 16744  221C                     ;main.c: 189:  _delay((unsigned long)((5)*(4000000/4000000.0)));
 16745                           		opt asmopt_push
 16746                           	opt asmopt_off
 16747                           	nop2	;2 cycle nop
 16748  221C  3200               	nop2	;2 cycle nop
 16749  221D  3200               	nop
 16750  221E  0000               	opt asmopt_pop
 16751                           
 16752                           	line	190
 16753                           	
 16754                           l4629:	
 16755  221F                     ;main.c: 190:  ADCON0bits.GO = 1;
 16756                           	movlb 1	; select bank1
 16757  221F  0141               	bsf	(157)^080h,1	;volatile
 16758  2220  149D               	line	191
 16759                           ;main.c: 191:  while (ADCON0bits.GO);
 16760                           	goto	l217
 16761  2221  2A22               	
 16762                           l218:	
 16763  2222                     	
 16764                           l217:	
 16765  2222                     	btfsc	(157)^080h,1	;volatile
 16766  2222  189D               	goto	u6461
 16767  2223  2A25               	goto	u6460
 16768  2224  2A26               u6461:
 16769  2225                     	goto	l217
 16770  2225  2A22               u6460:
 16771  2226                     	goto	l4631
 16772  2226  2A27               	
 16773                           l219:	
 16774  2227                     	line	192
 16775                           	
 16776                           l4631:	
 16777  2227                     ;main.c: 192:  return (uint16_t)((ADRESH << 8) + ADRESL);
 16778                           	movf	(156)^080h,w	;volatile
 16779  2227  081C               	movlb 0	; select bank0
 16780  2228  0140               	movwf	(?_adcGetConversion+1)
 16781  2229  00A1               	movlb 1	; select bank1
 16782  222A  0141               	movf	(155)^080h,w	;volatile
 16783  222B  081B               	movlb 0	; select bank0
 16784  222C  0140               	movwf	(?_adcGetConversion)
 16785  222D  00A0               	goto	l220
 16786  222E  2A2F               	
 16787                           l4633:	
 16788  222F                     	line	193
 16789                           	
 16790                           l220:	
 16791  222F                     	return
 16792  222F  0008               	opt stack 0
 16793                           GLOBAL	__end_of_adcGetConversion
 16794                           	__end_of_adcGetConversion:
 16795  2230                     	signat	_adcGetConversion,4218
 16796                           	global	___xxtofl
 16797                           
 16798 ;; *************** function ___xxtofl *****************
 16799 ;; Defined at:
 16800 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
 16801 ;; Parameters:    Size  Location     Type
 16802 ;;  sign            1    wreg     unsigned char 
 16803 ;;  val             4    0[BANK0 ] long 
 16804 ;; Auto vars:     Size  Location     Type
 16805 ;;  sign            1    8[BANK0 ] unsigned char 
 16806 ;;  arg             4   10[BANK0 ] unsigned long 
 16807 ;;  exp             1    9[BANK0 ] unsigned char 
 16808 ;; Return value:  Size  Location     Type
 16809 ;;                  4    0[BANK0 ] unsigned char 
 16810 ;; Registers used:
 16811 ;;		wreg, status,2, status,0
 16812 ;; Tracked objects:
 16813 ;;		On entry : 0/0
 16814 ;;		On exit  : 0/0
 16815 ;;		Unchanged: 0/0
 16816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16817 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16818 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16819 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16820 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16821 ;;Total ram usage:       14 bytes
 16822 ;; Hardware stack levels used:    1
 16823 ;; Hardware stack levels required when called:    3
 16824 ;; This function calls:
 16825 ;;		Nothing
 16826 ;; This function is called by:
 16827 ;;		_convertAnalogValues
 16828 ;;		_handleSensorData
 16829 ;; This function uses a non-reentrant model
 16830 ;;
 16831                           psect	text45,local,class=CODE,delta=2,merge=1,group=1
 16832                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
 16833                           	line	10
 16834                           global __ptext45
 16835                           __ptext45:	;psect for function ___xxtofl
 16836  1BE8                     psect	text45
 16837                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
 16838                           	line	10
 16839                           	global	__size_of___xxtofl
 16840                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
 16841  00B5                     	
 16842                           ___xxtofl:	
 16843  1BE8                     ;incstack = 0
 16844                           	opt	stack 11
 16845                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 16846                           ;___xxtofl@sign stored from wreg
 16847                           	movlb 0	; select bank0
 16848  1BE8  0140               	movwf	(___xxtofl@sign)
 16849  1BE9  00A8               	line	15
 16850                           	
 16851                           l4735:	
 16852  1BEA                     	movf	((___xxtofl@sign)),w
 16853  1BEA  0828               	btfsc	status,2
 16854  1BEB  1903               	goto	u6611
 16855  1BEC  2BEE               	goto	u6610
 16856  1BED  2BEF               u6611:
 16857  1BEE                     	goto	l4741
 16858  1BEE  2C03               u6610:
 16859  1BEF                     	
 16860                           l4737:	
 16861  1BEF                     	btfss	(___xxtofl@val+3),7
 16862  1BEF  1FA3               	goto	u6621
 16863  1BF0  2BF2               	goto	u6620
 16864  1BF1  2BF3               u6621:
 16865  1BF2                     	goto	l4741
 16866  1BF2  2C03               u6620:
 16867  1BF3                     	line	16
 16868                           	
 16869                           l4739:	
 16870  1BF3                     	comf	(___xxtofl@val)+0,w
 16871  1BF3  0920               	movwf	(___xxtofl@arg)
 16872  1BF4  00AA               	comf	(___xxtofl@val)+1,w
 16873  1BF5  0921               	movwf	(___xxtofl@arg+1)
 16874  1BF6  00AB               	comf	(___xxtofl@val)+2,w
 16875  1BF7  0922               	movwf	(___xxtofl@arg+2)
 16876  1BF8  00AC               	comf	(___xxtofl@val)+3,w
 16877  1BF9  0923               	movwf	(___xxtofl@arg+3)
 16878  1BFA  00AD               	incf	(___xxtofl@arg),f
 16879  1BFB  0AAA               	skipnz
 16880  1BFC  1903               	incf	(___xxtofl@arg+1),f
 16881  1BFD  0AAB               	skipnz
 16882  1BFE  1903               	incf	(___xxtofl@arg+2),f
 16883  1BFF  0AAC               	skipnz
 16884  1C00  1903               	incf	(___xxtofl@arg+3),f
 16885  1C01  0AAD               	line	17
 16886                           	goto	l1007
 16887  1C02  2C0B               	line	18
 16888                           	
 16889                           l1006:	
 16890  1C03                     	line	19
 16891                           	
 16892                           l4741:	
 16893  1C03                     	movf	(___xxtofl@val+3),w
 16894  1C03  0823               	movwf	(___xxtofl@arg+3)
 16895  1C04  00AD               	movf	(___xxtofl@val+2),w
 16896  1C05  0822               	movwf	(___xxtofl@arg+2)
 16897  1C06  00AC               	movf	(___xxtofl@val+1),w
 16898  1C07  0821               	movwf	(___xxtofl@arg+1)
 16899  1C08  00AB               	movf	(___xxtofl@val),w
 16900  1C09  0820               	movwf	(___xxtofl@arg)
 16901  1C0A  00AA               
 16902                           	line	20
 16903                           	
 16904                           l1007:	
 16905  1C0B                     	line	21
 16906                           	movf	(___xxtofl@val+3),w
 16907  1C0B  0823               	iorwf	(___xxtofl@val+2),w
 16908  1C0C  0422               	iorwf	(___xxtofl@val+1),w
 16909  1C0D  0421               	iorwf	(___xxtofl@val),w
 16910  1C0E  0420               	skipz
 16911  1C0F  1D03               	goto	u6631
 16912  1C10  2C12               	goto	u6630
 16913  1C11  2C13               u6631:
 16914  1C12                     	goto	l4747
 16915  1C12  2C1D               u6630:
 16916  1C13                     	line	22
 16917                           	
 16918                           l4743:	
 16919  1C13                     	movlw	0x0
 16920  1C13  3000               	movwf	(?___xxtofl+3)
 16921  1C14  00A3               	movlw	0x0
 16922  1C15  3000               	movwf	(?___xxtofl+2)
 16923  1C16  00A2               	movlw	0x0
 16924  1C17  3000               	movwf	(?___xxtofl+1)
 16925  1C18  00A1               	movlw	0x0
 16926  1C19  3000               	movwf	(?___xxtofl)
 16927  1C1A  00A0               
 16928                           	goto	l1009
 16929  1C1B  2C9C               	
 16930                           l4745:	
 16931  1C1C                     	goto	l1009
 16932  1C1C  2C9C               	
 16933                           l1008:	
 16934  1C1D                     	line	23
 16935                           	
 16936                           l4747:	
 16937  1C1D                     	movlw	low(096h)
 16938  1C1D  3096               	movwf	(??___xxtofl+0)+0
 16939  1C1E  00A4               	movf	(??___xxtofl+0)+0,w
 16940  1C1F  0824               	movwf	(___xxtofl@exp)
 16941  1C20  00A9               	line	24
 16942                           	goto	l4751
 16943  1C21  2C2E               	
 16944                           l1011:	
 16945  1C22                     	line	25
 16946                           	
 16947                           l4749:	
 16948  1C22                     	movlw	low(01h)
 16949  1C22  3001               	movwf	(??___xxtofl+0)+0
 16950  1C23  00A4               	movf	(??___xxtofl+0)+0,w
 16951  1C24  0824               	addwf	(___xxtofl@exp),f
 16952  1C25  07A9               	line	26
 16953                           	movlw	01h
 16954  1C26  3001               u6645:
 16955  1C27                     	lsrf	(___xxtofl@arg+3),f
 16956  1C27  36AD               	rrf	(___xxtofl@arg+2),f
 16957  1C28  0CAC               	rrf	(___xxtofl@arg+1),f
 16958  1C29  0CAB               	rrf	(___xxtofl@arg),f
 16959  1C2A  0CAA               	decfsz	wreg,f
 16960  1C2B  0B89               	goto	u6645
 16961  1C2C  2C27               
 16962                           	goto	l4751
 16963  1C2D  2C2E               	line	27
 16964                           	
 16965                           l1010:	
 16966  1C2E                     	line	24
 16967                           	
 16968                           l4751:	
 16969  1C2E                     	movlw	high highword(0FE000000h)
 16970  1C2E  30FE               	andwf	(___xxtofl@arg+3),w
 16971  1C2F  052D               	btfss	status,2
 16972  1C30  1D03               	goto	u6651
 16973  1C31  2C33               	goto	u6650
 16974  1C32  2C34               u6651:
 16975  1C33                     	goto	l4749
 16976  1C33  2C22               u6650:
 16977  1C34                     	goto	l1013
 16978  1C34  2C49               	
 16979                           l1012:	
 16980  1C35                     	line	28
 16981                           	goto	l1013
 16982  1C35  2C49               	
 16983                           l1014:	
 16984  1C36                     	line	29
 16985                           	
 16986                           l4753:	
 16987  1C36                     	movlw	low(01h)
 16988  1C36  3001               	movwf	(??___xxtofl+0)+0
 16989  1C37  00A4               	movf	(??___xxtofl+0)+0,w
 16990  1C38  0824               	addwf	(___xxtofl@exp),f
 16991  1C39  07A9               	line	30
 16992                           	
 16993                           l4755:	
 16994  1C3A                     	movlw	01h
 16995  1C3A  3001               	addwf	(___xxtofl@arg),f
 16996  1C3B  07AA               	movlw	0
 16997  1C3C  3000               	addwfc	(___xxtofl@arg+1),f
 16998  1C3D  3DAB               	movlw	0
 16999  1C3E  3000               	addwfc	(___xxtofl@arg+2),f
 17000  1C3F  3DAC               	movlw	0
 17001  1C40  3000               	addwfc	(___xxtofl@arg+3),f
 17002  1C41  3DAD               	line	31
 17003                           	
 17004                           l4757:	
 17005  1C42                     	movlw	01h
 17006  1C42  3001               u6665:
 17007  1C43                     	lsrf	(___xxtofl@arg+3),f
 17008  1C43  36AD               	rrf	(___xxtofl@arg+2),f
 17009  1C44  0CAC               	rrf	(___xxtofl@arg+1),f
 17010  1C45  0CAB               	rrf	(___xxtofl@arg),f
 17011  1C46  0CAA               	decfsz	wreg,f
 17012  1C47  0B89               	goto	u6665
 17013  1C48  2C43               
 17014                           	line	32
 17015                           	
 17016                           l1013:	
 17017  1C49                     	line	28
 17018                           	movlw	high highword(0FF000000h)
 17019  1C49  30FF               	andwf	(___xxtofl@arg+3),w
 17020  1C4A  052D               	btfss	status,2
 17021  1C4B  1D03               	goto	u6671
 17022  1C4C  2C4E               	goto	u6670
 17023  1C4D  2C4F               u6671:
 17024  1C4E                     	goto	l4753
 17025  1C4E  2C36               u6670:
 17026  1C4F                     	goto	l4761
 17027  1C4F  2C5B               	
 17028                           l1015:	
 17029  1C50                     	line	33
 17030                           	goto	l4761
 17031  1C50  2C5B               	
 17032                           l1017:	
 17033  1C51                     	line	34
 17034                           	
 17035                           l4759:	
 17036  1C51                     	movlw	01h
 17037  1C51  3001               	subwf	(___xxtofl@exp),f
 17038  1C52  02A9               	line	35
 17039                           	movlw	01h
 17040  1C53  3001               u6685:
 17041  1C54                     	lslf	(___xxtofl@arg),f
 17042  1C54  35AA               	rlf	(___xxtofl@arg+1),f
 17043  1C55  0DAB               	rlf	(___xxtofl@arg+2),f
 17044  1C56  0DAC               	rlf	(___xxtofl@arg+3),f
 17045  1C57  0DAD               	decfsz	wreg,f
 17046  1C58  0B89               	goto	u6685
 17047  1C59  2C54               	goto	l4761
 17048  1C5A  2C5B               	line	36
 17049                           	
 17050                           l1016:	
 17051  1C5B                     	line	33
 17052                           	
 17053                           l4761:	
 17054  1C5B                     	btfsc	(___xxtofl@arg+2),(23)&7
 17055  1C5B  1BAC               	goto	u6691
 17056  1C5C  2C5E               	goto	u6690
 17057  1C5D  2C5F               u6691:
 17058  1C5E                     	goto	l1020
 17059  1C5E  2C66               u6690:
 17060  1C5F                     	
 17061                           l4763:	
 17062  1C5F                     	movlw	low(02h)
 17063  1C5F  3002               	subwf	(___xxtofl@exp),w
 17064  1C60  0229               	skipnc
 17065  1C61  1803               	goto	u6701
 17066  1C62  2C64               	goto	u6700
 17067  1C63  2C65               u6701:
 17068  1C64                     	goto	l4759
 17069  1C64  2C51               u6700:
 17070  1C65                     	goto	l1020
 17071  1C65  2C66               	
 17072                           l1019:	
 17073  1C66                     	
 17074                           l1020:	
 17075  1C66                     	line	37
 17076                           	btfsc	(___xxtofl@exp),(0)&7
 17077  1C66  1829               	goto	u6711
 17078  1C67  2C69               	goto	u6710
 17079  1C68  2C6A               u6711:
 17080  1C69                     	goto	l1021
 17081  1C69  2C72               u6710:
 17082  1C6A                     	line	38
 17083                           	
 17084                           l4765:	
 17085  1C6A                     	movlw	0FFh
 17086  1C6A  30FF               	andwf	(___xxtofl@arg),f
 17087  1C6B  05AA               	movlw	0FFh
 17088  1C6C  30FF               	andwf	(___xxtofl@arg+1),f
 17089  1C6D  05AB               	movlw	07Fh
 17090  1C6E  307F               	andwf	(___xxtofl@arg+2),f
 17091  1C6F  05AC               	movlw	0FFh
 17092  1C70  30FF               	andwf	(___xxtofl@arg+3),f
 17093  1C71  05AD               	
 17094                           l1021:	
 17095  1C72                     	line	39
 17096                           	clrc
 17097  1C72  1003               	rrf	(___xxtofl@exp),f
 17098  1C73  0CA9               
 17099                           	line	40
 17100                           	
 17101                           l4767:	
 17102  1C74                     	movf	(___xxtofl@exp),w
 17103  1C74  0829               	movwf	(??___xxtofl+0)+0
 17104  1C75  00A4               	clrf	(??___xxtofl+0)+0+1
 17105  1C76  01A5               	clrf	(??___xxtofl+0)+0+2
 17106  1C77  01A6               	clrf	(??___xxtofl+0)+0+3
 17107  1C78  01A7               	movlw	018h
 17108  1C79  3018               u6725:
 17109  1C7A                     	lslf	(??___xxtofl+0)+0,f
 17110  1C7A  35A4               	rlf	(??___xxtofl+0)+1,f
 17111  1C7B  0DA5               	rlf	(??___xxtofl+0)+2,f
 17112  1C7C  0DA6               	rlf	(??___xxtofl+0)+3,f
 17113  1C7D  0DA7               u6720:
 17114  1C7E                     	decfsz	wreg,f
 17115  1C7E  0B89               	goto	u6725
 17116  1C7F  2C7A               	movf	0+(??___xxtofl+0)+0,w
 17117  1C80  0824               	iorwf	(___xxtofl@arg),f
 17118  1C81  04AA               	movf	1+(??___xxtofl+0)+0,w
 17119  1C82  0825               	iorwf	(___xxtofl@arg+1),f
 17120  1C83  04AB               	movf	2+(??___xxtofl+0)+0,w
 17121  1C84  0826               	iorwf	(___xxtofl@arg+2),f
 17122  1C85  04AC               	movf	3+(??___xxtofl+0)+0,w
 17123  1C86  0827               	iorwf	(___xxtofl@arg+3),f
 17124  1C87  04AD               	line	41
 17125                           	
 17126                           l4769:	
 17127  1C88                     	movf	((___xxtofl@sign)),w
 17128  1C88  0828               	btfsc	status,2
 17129  1C89  1903               	goto	u6731
 17130  1C8A  2C8C               	goto	u6730
 17131  1C8B  2C8D               u6731:
 17132  1C8C                     	goto	l4775
 17133  1C8C  2C93               u6730:
 17134  1C8D                     	
 17135                           l4771:	
 17136  1C8D                     	btfss	(___xxtofl@val+3),7
 17137  1C8D  1FA3               	goto	u6741
 17138  1C8E  2C90               	goto	u6740
 17139  1C8F  2C91               u6741:
 17140  1C90                     	goto	l4775
 17141  1C90  2C93               u6740:
 17142  1C91                     	line	42
 17143                           	
 17144                           l4773:	
 17145  1C91                     	bsf	(___xxtofl@arg)+(31/8),(31)&7
 17146  1C91  17AD               	goto	l4775
 17147  1C92  2C93               	
 17148                           l1022:	
 17149  1C93                     	line	43
 17150                           	
 17151                           l4775:	
 17152  1C93                     	movf	(___xxtofl@arg+3),w
 17153  1C93  082D               	movwf	(?___xxtofl+3)
 17154  1C94  00A3               	movf	(___xxtofl@arg+2),w
 17155  1C95  082C               	movwf	(?___xxtofl+2)
 17156  1C96  00A2               	movf	(___xxtofl@arg+1),w
 17157  1C97  082B               	movwf	(?___xxtofl+1)
 17158  1C98  00A1               	movf	(___xxtofl@arg),w
 17159  1C99  082A               	movwf	(?___xxtofl)
 17160  1C9A  00A0               
 17161                           	goto	l1009
 17162  1C9B  2C9C               	
 17163                           l4777:	
 17164  1C9C                     	line	44
 17165                           	
 17166                           l1009:	
 17167  1C9C                     	return
 17168  1C9C  0008               	opt stack 0
 17169                           GLOBAL	__end_of___xxtofl
 17170                           	__end_of___xxtofl:
 17171  1C9D                     	signat	___xxtofl,8316
 17172                           	global	___flmul
 17173                           
 17174 ;; *************** function ___flmul *****************
 17175 ;; Defined at:
 17176 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
 17177 ;; Parameters:    Size  Location     Type
 17178 ;;  b               4   14[BANK0 ] unsigned char 
 17179 ;;  a               4   18[BANK0 ] unsigned char 
 17180 ;; Auto vars:     Size  Location     Type
 17181 ;;  prod            4   34[BANK0 ] struct .
 17182 ;;  grs             4   28[BANK0 ] unsigned long 
 17183 ;;  temp            2   38[BANK0 ] struct .
 17184 ;;  bexp            1   33[BANK0 ] unsigned char 
 17185 ;;  aexp            1   32[BANK0 ] unsigned char 
 17186 ;;  sign            1   27[BANK0 ] unsigned char 
 17187 ;; Return value:  Size  Location     Type
 17188 ;;                  4   14[BANK0 ] unsigned char 
 17189 ;; Registers used:
 17190 ;;		wreg, status,2, status,0, pclath, cstack
 17191 ;; Tracked objects:
 17192 ;;		On entry : 0/0
 17193 ;;		On exit  : 0/0
 17194 ;;		Unchanged: 0/0
 17195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17196 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17197 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17198 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17199 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17200 ;;Total ram usage:       26 bytes
 17201 ;; Hardware stack levels used:    1
 17202 ;; Hardware stack levels required when called:    4
 17203 ;; This function calls:
 17204 ;;		__Umul8_16
 17205 ;; This function is called by:
 17206 ;;		_convertAnalogValues
 17207 ;;		_efgtoa
 17208 ;; This function uses a non-reentrant model
 17209 ;;
 17210                           psect	text46,local,class=CODE,delta=2,merge=1,group=1
 17211                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
 17212                           	line	8
 17213                           global __ptext46
 17214                           __ptext46:	;psect for function ___flmul
 17215  1595                     psect	text46
 17216                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
 17217                           	line	8
 17218                           	global	__size_of___flmul
 17219                           	__size_of___flmul	equ	__end_of___flmul-___flmul
 17220  026B                     	
 17221                           ___flmul:	
 17222  1595                     ;incstack = 0
 17223                           	opt	stack 6
 17224                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 17225                           	line	17
 17226                           	
 17227                           l3851:	
 17228  1595                     	movlb 0	; select bank0
 17229  1595  0140               	movf	0+(___flmul@b)+03h,w
 17230  1596  0831               	andlw	080h
 17231  1597  3980               	movwf	(??___flmul+0)+0
 17232  1598  00B6               	movf	(??___flmul+0)+0,w
 17233  1599  0836               	movwf	(___flmul@sign)
 17234  159A  00BB               	line	18
 17235                           	
 17236                           l3853:	
 17237  159B                     	lslf	0+(___flmul@b)+03h,w
 17238  159B  3531               	movwf	(??___flmul+0)+0
 17239  159C  00B6               	movf	(??___flmul+0)+0,w
 17240  159D  0836               	movwf	(___flmul@bexp)
 17241  159E  00C1               	line	19
 17242                           	
 17243                           l3855:	
 17244  159F                     	btfss	0+(___flmul@b)+02h,(7)&7
 17245  159F  1FB0               	goto	u5171
 17246  15A0  2DA2               	goto	u5170
 17247  15A1  2DA3               u5171:
 17248  15A2                     	goto	l3859
 17249  15A2  2DA5               u5170:
 17250  15A3                     	line	20
 17251                           	
 17252                           l3857:	
 17253  15A3                     	bsf	(___flmul@bexp)+(0/8),(0)&7
 17254  15A3  1441               	goto	l3859
 17255  15A4  2DA5               	line	21
 17256                           	
 17257                           l977:	
 17258  15A5                     	line	24
 17259                           	
 17260                           l3859:	
 17261  15A5                     	movf	((___flmul@bexp)),w
 17262  15A5  0841               	btfsc	status,2
 17263  15A6  1903               	goto	u5181
 17264  15A7  2DA9               	goto	u5180
 17265  15A8  2DAA               u5181:
 17266  15A9                     	goto	l3867
 17267  15A9  2DBA               u5180:
 17268  15AA                     	line	26
 17269                           	
 17270                           l3861:	
 17271  15AA                     		incf	((___flmul@bexp)),w
 17272  15AA  0A41               	btfss	status,2
 17273  15AB  1D03               	goto	u5191
 17274  15AC  2DAE               	goto	u5190
 17275  15AD  2DAF               u5191:
 17276  15AE                     	goto	l3865
 17277  15AE  2DB8               u5190:
 17278  15AF                     	line	28
 17279                           	
 17280                           l3863:	
 17281  15AF                     	movlw	0x0
 17282  15AF  3000               	movwf	(___flmul@b+3)
 17283  15B0  00B1               	movlw	0x0
 17284  15B1  3000               	movwf	(___flmul@b+2)
 17285  15B2  00B0               	movlw	0x0
 17286  15B3  3000               	movwf	(___flmul@b+1)
 17287  15B4  00AF               	movlw	0x0
 17288  15B5  3000               	movwf	(___flmul@b)
 17289  15B6  00AE               
 17290                           	goto	l3865
 17291  15B7  2DB8               	line	29
 17292                           	
 17293                           l979:	
 17294  15B8                     	line	31
 17295                           	
 17296                           l3865:	
 17297  15B8                     	bsf	(___flmul@b)+(23/8),(23)&7
 17298  15B8  17B0               	line	33
 17299                           	goto	l3869
 17300  15B9  2DC3               	line	34
 17301                           	
 17302                           l978:	
 17303  15BA                     	line	36
 17304                           	
 17305                           l3867:	
 17306  15BA                     	movlw	0x0
 17307  15BA  3000               	movwf	(___flmul@b+3)
 17308  15BB  00B1               	movlw	0x0
 17309  15BC  3000               	movwf	(___flmul@b+2)
 17310  15BD  00B0               	movlw	0x0
 17311  15BE  3000               	movwf	(___flmul@b+1)
 17312  15BF  00AF               	movlw	0x0
 17313  15C0  3000               	movwf	(___flmul@b)
 17314  15C1  00AE               
 17315                           	goto	l3869
 17316  15C2  2DC3               	line	37
 17317                           	
 17318                           l980:	
 17319  15C3                     	line	39
 17320                           	
 17321                           l3869:	
 17322  15C3                     	movf	0+(___flmul@a)+03h,w
 17323  15C3  0835               	andlw	080h
 17324  15C4  3980               	movwf	(??___flmul+0)+0
 17325  15C5  00B6               	movf	(??___flmul+0)+0,w
 17326  15C6  0836               	xorwf	(___flmul@sign),f
 17327  15C7  06BB               	line	40
 17328                           	
 17329                           l3871:	
 17330  15C8                     	lslf	0+(___flmul@a)+03h,w
 17331  15C8  3535               	movwf	(??___flmul+0)+0
 17332  15C9  00B6               	movf	(??___flmul+0)+0,w
 17333  15CA  0836               	movwf	(___flmul@aexp)
 17334  15CB  00C0               	line	41
 17335                           	
 17336                           l3873:	
 17337  15CC                     	btfss	0+(___flmul@a)+02h,(7)&7
 17338  15CC  1FB4               	goto	u5201
 17339  15CD  2DCF               	goto	u5200
 17340  15CE  2DD0               u5201:
 17341  15CF                     	goto	l3877
 17342  15CF  2DD2               u5200:
 17343  15D0                     	line	42
 17344                           	
 17345                           l3875:	
 17346  15D0                     	bsf	(___flmul@aexp)+(0/8),(0)&7
 17347  15D0  1440               	goto	l3877
 17348  15D1  2DD2               	line	43
 17349                           	
 17350                           l981:	
 17351  15D2                     	line	45
 17352                           	
 17353                           l3877:	
 17354  15D2                     	movf	((___flmul@aexp)),w
 17355  15D2  0840               	btfsc	status,2
 17356  15D3  1903               	goto	u5211
 17357  15D4  2DD6               	goto	u5210
 17358  15D5  2DD7               u5211:
 17359  15D6                     	goto	l3885
 17360  15D6  2DE7               u5210:
 17361  15D7                     	line	48
 17362                           	
 17363                           l3879:	
 17364  15D7                     		incf	((___flmul@aexp)),w
 17365  15D7  0A40               	btfss	status,2
 17366  15D8  1D03               	goto	u5221
 17367  15D9  2DDB               	goto	u5220
 17368  15DA  2DDC               u5221:
 17369  15DB                     	goto	l3883
 17370  15DB  2DE5               u5220:
 17371  15DC                     	line	50
 17372                           	
 17373                           l3881:	
 17374  15DC                     	movlw	0x0
 17375  15DC  3000               	movwf	(___flmul@a+3)
 17376  15DD  00B5               	movlw	0x0
 17377  15DE  3000               	movwf	(___flmul@a+2)
 17378  15DF  00B4               	movlw	0x0
 17379  15E0  3000               	movwf	(___flmul@a+1)
 17380  15E1  00B3               	movlw	0x0
 17381  15E2  3000               	movwf	(___flmul@a)
 17382  15E3  00B2               
 17383                           	goto	l3883
 17384  15E4  2DE5               	line	51
 17385                           	
 17386                           l983:	
 17387  15E5                     	line	53
 17388                           	
 17389                           l3883:	
 17390  15E5                     	bsf	(___flmul@a)+(23/8),(23)&7
 17391  15E5  17B4               	line	54
 17392                           	goto	l3887
 17393  15E6  2DF0               	line	55
 17394                           	
 17395                           l982:	
 17396  15E7                     	line	57
 17397                           	
 17398                           l3885:	
 17399  15E7                     	movlw	0x0
 17400  15E7  3000               	movwf	(___flmul@a+3)
 17401  15E8  00B5               	movlw	0x0
 17402  15E9  3000               	movwf	(___flmul@a+2)
 17403  15EA  00B4               	movlw	0x0
 17404  15EB  3000               	movwf	(___flmul@a+1)
 17405  15EC  00B3               	movlw	0x0
 17406  15ED  3000               	movwf	(___flmul@a)
 17407  15EE  00B2               
 17408                           	goto	l3887
 17409  15EF  2DF0               	line	58
 17410                           	
 17411                           l984:	
 17412  15F0                     	line	65
 17413                           	
 17414                           l3887:	
 17415  15F0                     	movf	((___flmul@aexp)),w
 17416  15F0  0840               	btfsc	status,2
 17417  15F1  1903               	goto	u5231
 17418  15F2  2DF4               	goto	u5230
 17419  15F3  2DF5               u5231:
 17420  15F4                     	goto	l3891
 17421  15F4  2DFB               u5230:
 17422  15F5                     	
 17423                           l3889:	
 17424  15F5                     	movf	((___flmul@bexp)),w
 17425  15F5  0841               	btfss	status,2
 17426  15F6  1D03               	goto	u5241
 17427  15F7  2DF9               	goto	u5240
 17428  15F8  2DFA               u5241:
 17429  15F9                     	goto	l3895
 17430  15F9  2E05               u5240:
 17431  15FA                     	goto	l3891
 17432  15FA  2DFB               	
 17433                           l987:	
 17434  15FB                     	line	66
 17435                           	
 17436                           l3891:	
 17437  15FB                     	movlw	0x0
 17438  15FB  3000               	movwf	(?___flmul+3)
 17439  15FC  00B1               	movlw	0x0
 17440  15FD  3000               	movwf	(?___flmul+2)
 17441  15FE  00B0               	movlw	0x0
 17442  15FF  3000               	movwf	(?___flmul+1)
 17443  1600  00AF               	movlw	0x0
 17444  1601  3000               	movwf	(?___flmul)
 17445  1602  00AE               
 17446                           	goto	l988
 17447  1603  2FFF               	
 17448                           l3893:	
 17449  1604                     	goto	l988
 17450  1604  2FFF               	line	67
 17451                           	
 17452                           l985:	
 17453  1605                     	line	119
 17454                           	
 17455                           l3895:	
 17456  1605                     	movf	(___flmul@b),w
 17457  1605  082E               	movwf	(??___flmul+0)+0
 17458  1606  00B6               	movf	(??___flmul+0)+0,w
 17459  1607  0836               	movwf	(__Umul8_16@multiplicand)
 17460  1608  00A0               	movf	0+(___flmul@a)+02h,w
 17461  1609  0834               	fcall	__Umul8_16
 17462  160A  31A3  2309  3195   	movlb 0	; select bank0
 17463  160D  0140               	movf	(1+(?__Umul8_16)),w
 17464  160E  0821               	movwf	(___flmul@temp+1)
 17465  160F  00C7               	movf	(0+(?__Umul8_16)),w
 17466  1610  0820               	movwf	(___flmul@temp)
 17467  1611  00C6               	line	120
 17468                           	
 17469                           l3897:	
 17470  1612                     	movf	(___flmul@temp),w
 17471  1612  0846               	movwf	(??___flmul+0)+0
 17472  1613  00B6               	clrf	(??___flmul+0)+0+1
 17473  1614  01B7               	clrf	(??___flmul+0)+0+2
 17474  1615  01B8               	clrf	(??___flmul+0)+0+3
 17475  1616  01B9               	movf	3+(??___flmul+0)+0,w
 17476  1617  0839               	movwf	(___flmul@grs+3)
 17477  1618  00BF               	movf	2+(??___flmul+0)+0,w
 17478  1619  0838               	movwf	(___flmul@grs+2)
 17479  161A  00BE               	movf	1+(??___flmul+0)+0,w
 17480  161B  0837               	movwf	(___flmul@grs+1)
 17481  161C  00BD               	movf	0+(??___flmul+0)+0,w
 17482  161D  0836               	movwf	(___flmul@grs)
 17483  161E  00BC               
 17484                           	line	121
 17485                           	
 17486                           l3899:	
 17487  161F                     	movf	0+(___flmul@temp)+01h,w
 17488  161F  0847               	movwf	(??___flmul+0)+0
 17489  1620  00B6               	clrf	(??___flmul+0)+0+1
 17490  1621  01B7               	clrf	(??___flmul+0)+0+2
 17491  1622  01B8               	clrf	(??___flmul+0)+0+3
 17492  1623  01B9               	movf	3+(??___flmul+0)+0,w
 17493  1624  0839               	movwf	(___flmul@prod+3)
 17494  1625  00C5               	movf	2+(??___flmul+0)+0,w
 17495  1626  0838               	movwf	(___flmul@prod+2)
 17496  1627  00C4               	movf	1+(??___flmul+0)+0,w
 17497  1628  0837               	movwf	(___flmul@prod+1)
 17498  1629  00C3               	movf	0+(??___flmul+0)+0,w
 17499  162A  0836               	movwf	(___flmul@prod)
 17500  162B  00C2               
 17501                           	line	122
 17502                           	movf	0+(___flmul@b)+01h,w
 17503  162C  082F               	movwf	(??___flmul+0)+0
 17504  162D  00B6               	movf	(??___flmul+0)+0,w
 17505  162E  0836               	movwf	(__Umul8_16@multiplicand)
 17506  162F  00A0               	movf	0+(___flmul@a)+01h,w
 17507  1630  0833               	fcall	__Umul8_16
 17508  1631  31A3  2309  3195   	movlb 0	; select bank0
 17509  1634  0140               	movf	(1+(?__Umul8_16)),w
 17510  1635  0821               	movwf	(___flmul@temp+1)
 17511  1636  00C7               	movf	(0+(?__Umul8_16)),w
 17512  1637  0820               	movwf	(___flmul@temp)
 17513  1638  00C6               	line	123
 17514                           	
 17515                           l3901:	
 17516  1639                     	movf	(___flmul@temp),w
 17517  1639  0846               	movwf	(??___flmul+0)+0
 17518  163A  00B6               	clrf	(??___flmul+0)+0+1
 17519  163B  01B7               	clrf	(??___flmul+0)+0+2
 17520  163C  01B8               	clrf	(??___flmul+0)+0+3
 17521  163D  01B9               	movf	0+(??___flmul+0)+0,w
 17522  163E  0836               	addwf	(___flmul@grs),f
 17523  163F  07BC               	movf	1+(??___flmul+0)+0,w
 17524  1640  0837               	addwfc	(___flmul@grs+1),f
 17525  1641  3DBD               	movf	2+(??___flmul+0)+0,w
 17526  1642  0838               	addwfc	(___flmul@grs+2),f
 17527  1643  3DBE               	movf	3+(??___flmul+0)+0,w
 17528  1644  0839               	addwfc	(___flmul@grs+3),f
 17529  1645  3DBF               	line	124
 17530                           	
 17531                           l3903:	
 17532  1646                     	movf	0+(___flmul@temp)+01h,w
 17533  1646  0847               	movwf	(??___flmul+0)+0
 17534  1647  00B6               	clrf	(??___flmul+0)+0+1
 17535  1648  01B7               	clrf	(??___flmul+0)+0+2
 17536  1649  01B8               	clrf	(??___flmul+0)+0+3
 17537  164A  01B9               	movf	0+(??___flmul+0)+0,w
 17538  164B  0836               	addwf	(___flmul@prod),f
 17539  164C  07C2               	movf	1+(??___flmul+0)+0,w
 17540  164D  0837               	addwfc	(___flmul@prod+1),f
 17541  164E  3DC3               	movf	2+(??___flmul+0)+0,w
 17542  164F  0838               	addwfc	(___flmul@prod+2),f
 17543  1650  3DC4               	movf	3+(??___flmul+0)+0,w
 17544  1651  0839               	addwfc	(___flmul@prod+3),f
 17545  1652  3DC5               	line	125
 17546                           	movf	0+(___flmul@b)+02h,w
 17547  1653  0830               	movwf	(??___flmul+0)+0
 17548  1654  00B6               	movf	(??___flmul+0)+0,w
 17549  1655  0836               	movwf	(__Umul8_16@multiplicand)
 17550  1656  00A0               	movf	(___flmul@a),w
 17551  1657  0832               	fcall	__Umul8_16
 17552  1658  31A3  2309  3195   	movlb 0	; select bank0
 17553  165B  0140               	movf	(1+(?__Umul8_16)),w
 17554  165C  0821               	movwf	(___flmul@temp+1)
 17555  165D  00C7               	movf	(0+(?__Umul8_16)),w
 17556  165E  0820               	movwf	(___flmul@temp)
 17557  165F  00C6               	line	126
 17558                           	
 17559                           l3905:	
 17560  1660                     	movf	(___flmul@temp),w
 17561  1660  0846               	movwf	(??___flmul+0)+0
 17562  1661  00B6               	clrf	(??___flmul+0)+0+1
 17563  1662  01B7               	clrf	(??___flmul+0)+0+2
 17564  1663  01B8               	clrf	(??___flmul+0)+0+3
 17565  1664  01B9               	movf	0+(??___flmul+0)+0,w
 17566  1665  0836               	addwf	(___flmul@grs),f
 17567  1666  07BC               	movf	1+(??___flmul+0)+0,w
 17568  1667  0837               	addwfc	(___flmul@grs+1),f
 17569  1668  3DBD               	movf	2+(??___flmul+0)+0,w
 17570  1669  0838               	addwfc	(___flmul@grs+2),f
 17571  166A  3DBE               	movf	3+(??___flmul+0)+0,w
 17572  166B  0839               	addwfc	(___flmul@grs+3),f
 17573  166C  3DBF               	line	127
 17574                           	
 17575                           l3907:	
 17576  166D                     	movf	0+(___flmul@temp)+01h,w
 17577  166D  0847               	movwf	(??___flmul+0)+0
 17578  166E  00B6               	clrf	(??___flmul+0)+0+1
 17579  166F  01B7               	clrf	(??___flmul+0)+0+2
 17580  1670  01B8               	clrf	(??___flmul+0)+0+3
 17581  1671  01B9               	movf	0+(??___flmul+0)+0,w
 17582  1672  0836               	addwf	(___flmul@prod),f
 17583  1673  07C2               	movf	1+(??___flmul+0)+0,w
 17584  1674  0837               	addwfc	(___flmul@prod+1),f
 17585  1675  3DC3               	movf	2+(??___flmul+0)+0,w
 17586  1676  0838               	addwfc	(___flmul@prod+2),f
 17587  1677  3DC4               	movf	3+(??___flmul+0)+0,w
 17588  1678  0839               	addwfc	(___flmul@prod+3),f
 17589  1679  3DC5               	line	128
 17590                           	
 17591                           l3909:	
 17592  167A                     	movlw	08h
 17593  167A  3008               u5255:
 17594  167B                     	lslf	(___flmul@grs),f
 17595  167B  35BC               	rlf	(___flmul@grs+1),f
 17596  167C  0DBD               	rlf	(___flmul@grs+2),f
 17597  167D  0DBE               	rlf	(___flmul@grs+3),f
 17598  167E  0DBF               	decfsz	wreg,f
 17599  167F  0B89               	goto	u5255
 17600  1680  2E7B               	line	129
 17601                           	
 17602                           l3911:	
 17603  1681                     	movf	0+(___flmul@b)+01h,w
 17604  1681  082F               	movwf	(??___flmul+0)+0
 17605  1682  00B6               	movf	(??___flmul+0)+0,w
 17606  1683  0836               	movwf	(__Umul8_16@multiplicand)
 17607  1684  00A0               	movf	(___flmul@a),w
 17608  1685  0832               	fcall	__Umul8_16
 17609  1686  31A3  2309  3195   	movlb 0	; select bank0
 17610  1689  0140               	movf	(1+(?__Umul8_16)),w
 17611  168A  0821               	movwf	(___flmul@temp+1)
 17612  168B  00C7               	movf	(0+(?__Umul8_16)),w
 17613  168C  0820               	movwf	(___flmul@temp)
 17614  168D  00C6               	line	130
 17615                           	
 17616                           l3913:	
 17617  168E                     	movf	(___flmul@temp),w
 17618  168E  0846               	addwf	(___flmul@grs),f
 17619  168F  07BC               	movf	(___flmul@temp+1),w
 17620  1690  0847               	addwfc	(___flmul@grs+1),f
 17621  1691  3DBD               	movlw	0
 17622  1692  3000               	addwfc	(___flmul@grs+2),f
 17623  1693  3DBE               	addwfc	(___flmul@grs+3),f
 17624  1694  3DBF               	line	131
 17625                           	
 17626                           l3915:	
 17627  1695                     	movf	(___flmul@b),w
 17628  1695  082E               	movwf	(??___flmul+0)+0
 17629  1696  00B6               	movf	(??___flmul+0)+0,w
 17630  1697  0836               	movwf	(__Umul8_16@multiplicand)
 17631  1698  00A0               	movf	0+(___flmul@a)+01h,w
 17632  1699  0833               	fcall	__Umul8_16
 17633  169A  31A3  2309  3195   	movlb 0	; select bank0
 17634  169D  0140               	movf	(1+(?__Umul8_16)),w
 17635  169E  0821               	movwf	(___flmul@temp+1)
 17636  169F  00C7               	movf	(0+(?__Umul8_16)),w
 17637  16A0  0820               	movwf	(___flmul@temp)
 17638  16A1  00C6               	line	132
 17639                           	
 17640                           l3917:	
 17641  16A2                     	movf	(___flmul@temp),w
 17642  16A2  0846               	addwf	(___flmul@grs),f
 17643  16A3  07BC               	movf	(___flmul@temp+1),w
 17644  16A4  0847               	addwfc	(___flmul@grs+1),f
 17645  16A5  3DBD               	movlw	0
 17646  16A6  3000               	addwfc	(___flmul@grs+2),f
 17647  16A7  3DBE               	addwfc	(___flmul@grs+3),f
 17648  16A8  3DBF               	line	133
 17649                           	
 17650                           l3919:	
 17651  16A9                     	movlw	08h
 17652  16A9  3008               u5265:
 17653  16AA                     	lslf	(___flmul@grs),f
 17654  16AA  35BC               	rlf	(___flmul@grs+1),f
 17655  16AB  0DBD               	rlf	(___flmul@grs+2),f
 17656  16AC  0DBE               	rlf	(___flmul@grs+3),f
 17657  16AD  0DBF               	decfsz	wreg,f
 17658  16AE  0B89               	goto	u5265
 17659  16AF  2EAA               	line	134
 17660                           	movf	(___flmul@b),w
 17661  16B0  082E               	movwf	(??___flmul+0)+0
 17662  16B1  00B6               	movf	(??___flmul+0)+0,w
 17663  16B2  0836               	movwf	(__Umul8_16@multiplicand)
 17664  16B3  00A0               	movf	(___flmul@a),w
 17665  16B4  0832               	fcall	__Umul8_16
 17666  16B5  31A3  2309  3195   	movlb 0	; select bank0
 17667  16B8  0140               	movf	(1+(?__Umul8_16)),w
 17668  16B9  0821               	movwf	(___flmul@temp+1)
 17669  16BA  00C7               	movf	(0+(?__Umul8_16)),w
 17670  16BB  0820               	movwf	(___flmul@temp)
 17671  16BC  00C6               	line	135
 17672                           	
 17673                           l3921:	
 17674  16BD                     	movf	(___flmul@temp),w
 17675  16BD  0846               	addwf	(___flmul@grs),f
 17676  16BE  07BC               	movf	(___flmul@temp+1),w
 17677  16BF  0847               	addwfc	(___flmul@grs+1),f
 17678  16C0  3DBD               	movlw	0
 17679  16C1  3000               	addwfc	(___flmul@grs+2),f
 17680  16C2  3DBE               	addwfc	(___flmul@grs+3),f
 17681  16C3  3DBF               	line	136
 17682                           	
 17683                           l3923:	
 17684  16C4                     	movf	0+(___flmul@b)+01h,w
 17685  16C4  082F               	movwf	(??___flmul+0)+0
 17686  16C5  00B6               	movf	(??___flmul+0)+0,w
 17687  16C6  0836               	movwf	(__Umul8_16@multiplicand)
 17688  16C7  00A0               	movf	0+(___flmul@a)+02h,w
 17689  16C8  0834               	fcall	__Umul8_16
 17690  16C9  31A3  2309  3195   	movlb 0	; select bank0
 17691  16CC  0140               	movf	(1+(?__Umul8_16)),w
 17692  16CD  0821               	movwf	(___flmul@temp+1)
 17693  16CE  00C7               	movf	(0+(?__Umul8_16)),w
 17694  16CF  0820               	movwf	(___flmul@temp)
 17695  16D0  00C6               	line	137
 17696                           	movf	(___flmul@temp),w
 17697  16D1  0846               	addwf	(___flmul@prod),f
 17698  16D2  07C2               	movf	(___flmul@temp+1),w
 17699  16D3  0847               	addwfc	(___flmul@prod+1),f
 17700  16D4  3DC3               	movlw	0
 17701  16D5  3000               	addwfc	(___flmul@prod+2),f
 17702  16D6  3DC4               	addwfc	(___flmul@prod+3),f
 17703  16D7  3DC5               	line	138
 17704                           	
 17705                           l3925:	
 17706  16D8                     	movf	0+(___flmul@b)+02h,w
 17707  16D8  0830               	movwf	(??___flmul+0)+0
 17708  16D9  00B6               	movf	(??___flmul+0)+0,w
 17709  16DA  0836               	movwf	(__Umul8_16@multiplicand)
 17710  16DB  00A0               	movf	0+(___flmul@a)+01h,w
 17711  16DC  0833               	fcall	__Umul8_16
 17712  16DD  31A3  2309  3195   	movlb 0	; select bank0
 17713  16E0  0140               	movf	(1+(?__Umul8_16)),w
 17714  16E1  0821               	movwf	(___flmul@temp+1)
 17715  16E2  00C7               	movf	(0+(?__Umul8_16)),w
 17716  16E3  0820               	movwf	(___flmul@temp)
 17717  16E4  00C6               	line	139
 17718                           	
 17719                           l3927:	
 17720  16E5                     	movf	(___flmul@temp),w
 17721  16E5  0846               	addwf	(___flmul@prod),f
 17722  16E6  07C2               	movf	(___flmul@temp+1),w
 17723  16E7  0847               	addwfc	(___flmul@prod+1),f
 17724  16E8  3DC3               	movlw	0
 17725  16E9  3000               	addwfc	(___flmul@prod+2),f
 17726  16EA  3DC4               	addwfc	(___flmul@prod+3),f
 17727  16EB  3DC5               	line	140
 17728                           	movf	0+(___flmul@b)+02h,w
 17729  16EC  0830               	movwf	(??___flmul+0)+0
 17730  16ED  00B6               	movf	(??___flmul+0)+0,w
 17731  16EE  0836               	movwf	(__Umul8_16@multiplicand)
 17732  16EF  00A0               	movf	0+(___flmul@a)+02h,w
 17733  16F0  0834               	fcall	__Umul8_16
 17734  16F1  31A3  2309  3195   	movlb 0	; select bank0
 17735  16F4  0140               	movf	(1+(?__Umul8_16)),w
 17736  16F5  0821               	movwf	(___flmul@temp+1)
 17737  16F6  00C7               	movf	(0+(?__Umul8_16)),w
 17738  16F7  0820               	movwf	(___flmul@temp)
 17739  16F8  00C6               	line	141
 17740                           	
 17741                           l3929:	
 17742  16F9                     	movf	(___flmul@temp),w
 17743  16F9  0846               	movwf	((??___flmul+0)+0)
 17744  16FA  00B6               	movf	(___flmul@temp+1),w
 17745  16FB  0847               	movwf	((??___flmul+0)+0+1)
 17746  16FC  00B7               	clrf	((??___flmul+0)+0+2)
 17747  16FD  01B8               	clrf	((??___flmul+0)+0+3)
 17748  16FE  01B9               	movlw	08h
 17749  16FF  3008               u5275:
 17750  1700                     	lslf	(??___flmul+0)+0,f
 17751  1700  35B6               	rlf	(??___flmul+0)+1,f
 17752  1701  0DB7               	rlf	(??___flmul+0)+2,f
 17753  1702  0DB8               	rlf	(??___flmul+0)+3,f
 17754  1703  0DB9               u5270:
 17755  1704                     	decfsz	wreg,f
 17756  1704  0B89               	goto	u5275
 17757  1705  2F00               	movf	0+(??___flmul+0)+0,w
 17758  1706  0836               	addwf	(___flmul@prod),f
 17759  1707  07C2               	movf	1+(??___flmul+0)+0,w
 17760  1708  0837               	addwfc	(___flmul@prod+1),f
 17761  1709  3DC3               	movf	2+(??___flmul+0)+0,w
 17762  170A  0838               	addwfc	(___flmul@prod+2),f
 17763  170B  3DC4               	movf	3+(??___flmul+0)+0,w
 17764  170C  0839               	addwfc	(___flmul@prod+3),f
 17765  170D  3DC5               	line	145
 17766                           	
 17767                           l3931:	
 17768  170E                     	movf	(___flmul@grs),w
 17769  170E  083C               	movwf	(??___flmul+0)+0
 17770  170F  00B6               	movf	(___flmul@grs+1),w
 17771  1710  083D               	movwf	((??___flmul+0)+0+1)
 17772  1711  00B7               	movf	(___flmul@grs+2),w
 17773  1712  083E               	movwf	((??___flmul+0)+0+2)
 17774  1713  00B8               	movf	(___flmul@grs+3),w
 17775  1714  083F               	movwf	((??___flmul+0)+0+3)
 17776  1715  00B9               	movlw	018h
 17777  1716  3018               u5285:
 17778  1717                     	lsrf	(??___flmul+0)+3,f
 17779  1717  36B9               	rrf	(??___flmul+0)+2,f
 17780  1718  0CB8               	rrf	(??___flmul+0)+1,f
 17781  1719  0CB7               	rrf	(??___flmul+0)+0,f
 17782  171A  0CB6               u5280:
 17783  171B                     	decfsz	wreg,f
 17784  171B  0B89               	goto	u5285
 17785  171C  2F17               	movf	0+(??___flmul+0)+0,w
 17786  171D  0836               	addwf	(___flmul@prod),f
 17787  171E  07C2               	movf	1+(??___flmul+0)+0,w
 17788  171F  0837               	addwfc	(___flmul@prod+1),f
 17789  1720  3DC3               	movf	2+(??___flmul+0)+0,w
 17790  1721  0838               	addwfc	(___flmul@prod+2),f
 17791  1722  3DC4               	movf	3+(??___flmul+0)+0,w
 17792  1723  0839               	addwfc	(___flmul@prod+3),f
 17793  1724  3DC5               	line	146
 17794                           	
 17795                           l3933:	
 17796  1725                     	movlw	08h
 17797  1725  3008               u5295:
 17798  1726                     	lslf	(___flmul@grs),f
 17799  1726  35BC               	rlf	(___flmul@grs+1),f
 17800  1727  0DBD               	rlf	(___flmul@grs+2),f
 17801  1728  0DBE               	rlf	(___flmul@grs+3),f
 17802  1729  0DBF               	decfsz	wreg,f
 17803  172A  0B89               	goto	u5295
 17804  172B  2F26               	line	149
 17805                           	
 17806                           l3935:	
 17807  172C                     	movf	(___flmul@bexp),w
 17808  172C  0841               	addwf	(___flmul@aexp),w
 17809  172D  0740               	movwf	(??___flmul+0)+0
 17810  172E  00B6               	clrf	(??___flmul+0)+0+1
 17811  172F  01B7               	rlf	1+(??___flmul+0)+0,f
 17812  1730  0DB7               	
 17813                           	movf	0+(??___flmul+0)+0,w
 17814  1731  0836               	addlw	082h
 17815  1732  3E82               	movwf	(___flmul@temp)
 17816  1733  00C6               	movlw	0FFh
 17817  1734  30FF               	addwfc	1+(??___flmul+0)+0,w
 17818  1735  3D37               	movwf	1+(___flmul@temp)
 17819  1736  00C7               	line	152
 17820                           	goto	l3947
 17821  1737  2F51               	
 17822                           l990:	
 17823  1738                     	line	153
 17824                           	
 17825                           l3937:	
 17826  1738                     	movlw	01h
 17827  1738  3001               u5305:
 17828  1739                     	lslf	(___flmul@prod),f
 17829  1739  35C2               	rlf	(___flmul@prod+1),f
 17830  173A  0DC3               	rlf	(___flmul@prod+2),f
 17831  173B  0DC4               	rlf	(___flmul@prod+3),f
 17832  173C  0DC5               	decfsz	wreg,f
 17833  173D  0B89               	goto	u5305
 17834  173E  2F39               	line	154
 17835                           	
 17836                           l3939:	
 17837  173F                     	btfss	(___flmul@grs+3),(31)&7
 17838  173F  1FBF               	goto	u5311
 17839  1740  2F42               	goto	u5310
 17840  1741  2F43               u5311:
 17841  1742                     	goto	l3943
 17842  1742  2F45               u5310:
 17843  1743                     	line	155
 17844                           	
 17845                           l3941:	
 17846  1743                     	bsf	(___flmul@prod)+(0/8),(0)&7
 17847  1743  1442               	goto	l3943
 17848  1744  2F45               	line	156
 17849                           	
 17850                           l991:	
 17851  1745                     	line	157
 17852                           	
 17853                           l3943:	
 17854  1745                     	movlw	01h
 17855  1745  3001               u5325:
 17856  1746                     	lslf	(___flmul@grs),f
 17857  1746  35BC               	rlf	(___flmul@grs+1),f
 17858  1747  0DBD               	rlf	(___flmul@grs+2),f
 17859  1748  0DBE               	rlf	(___flmul@grs+3),f
 17860  1749  0DBF               	decfsz	wreg,f
 17861  174A  0B89               	goto	u5325
 17862  174B  2F46               	line	158
 17863                           	
 17864                           l3945:	
 17865  174C                     	movlw	0FFh
 17866  174C  30FF               	addwf	(___flmul@temp),f
 17867  174D  07C6               	movlw	0FFh
 17868  174E  30FF               	addwfc	(___flmul@temp+1),f
 17869  174F  3DC7               	goto	l3947
 17870  1750  2F51               	line	159
 17871                           	
 17872                           l989:	
 17873  1751                     	line	152
 17874                           	
 17875                           l3947:	
 17876  1751                     	btfss	(___flmul@prod+2),(23)&7
 17877  1751  1FC4               	goto	u5331
 17878  1752  2F54               	goto	u5330
 17879  1753  2F55               u5331:
 17880  1754                     	goto	l3937
 17881  1754  2F38               u5330:
 17882  1755                     	goto	l3949
 17883  1755  2F56               	
 17884                           l992:	
 17885  1756                     	line	163
 17886                           	
 17887                           l3949:	
 17888  1756                     	clrf	(___flmul@aexp)
 17889  1756  01C0               	line	164
 17890                           	
 17891                           l3951:	
 17892  1757                     	btfss	(___flmul@grs+3),(31)&7
 17893  1757  1FBF               	goto	u5341
 17894  1758  2F5A               	goto	u5340
 17895  1759  2F5B               u5341:
 17896  175A                     	goto	l3959
 17897  175A  2F7B               u5340:
 17898  175B                     	line	165
 17899                           	
 17900                           l3953:	
 17901  175B                     	movlw	0FFh
 17902  175B  30FF               	andwf	(___flmul@grs),w
 17903  175C  053C               	movwf	(??___flmul+0)+0
 17904  175D  00B6               	movlw	0FFh
 17905  175E  30FF               	andwf	(___flmul@grs+1),w
 17906  175F  053D               	movwf	((??___flmul+0)+0+1)
 17907  1760  00B7               	movlw	0FFh
 17908  1761  30FF               	andwf	(___flmul@grs+2),w
 17909  1762  053E               	movwf	((??___flmul+0)+0+2)
 17910  1763  00B8               	movlw	07Fh
 17911  1764  307F               	andwf	(___flmul@grs+3),w
 17912  1765  053F               	movwf	((??___flmul+0)+0+3)
 17913  1766  00B9               	movf	3+(??___flmul+0)+0,w
 17914  1767  0839               	iorwf	2+(??___flmul+0)+0,w
 17915  1768  0438               	iorwf	1+(??___flmul+0)+0,w
 17916  1769  0437               	iorwf	0+(??___flmul+0)+0,w
 17917  176A  0436               	skipnz
 17918  176B  1903               	goto	u5351
 17919  176C  2F6E               	goto	u5350
 17920  176D  2F6F               u5351:
 17921  176E                     	goto	l994
 17922  176E  2F72               u5350:
 17923  176F                     	line	166
 17924                           	
 17925                           l3955:	
 17926  176F                     	clrf	(___flmul@aexp)
 17927  176F  01C0               	incf	(___flmul@aexp),f
 17928  1770  0AC0               	line	167
 17929                           	goto	l3959
 17930  1771  2F7B               	line	168
 17931                           	
 17932                           l994:	
 17933  1772                     	line	169
 17934                           	btfss	(___flmul@prod),(0)&7
 17935  1772  1C42               	goto	u5361
 17936  1773  2F75               	goto	u5360
 17937  1774  2F76               u5361:
 17938  1775                     	goto	l3959
 17939  1775  2F7B               u5360:
 17940  1776                     	line	170
 17941                           	
 17942                           l3957:	
 17943  1776                     	clrf	(___flmul@aexp)
 17944  1776  01C0               	incf	(___flmul@aexp),f
 17945  1777  0AC0               	goto	l3959
 17946  1778  2F7B               	line	171
 17947                           	
 17948                           l996:	
 17949  1779                     	goto	l3959
 17950  1779  2F7B               	line	172
 17951                           	
 17952                           l995:	
 17953  177A                     	goto	l3959
 17954  177A  2F7B               	line	173
 17955                           	
 17956                           l993:	
 17957  177B                     	line	174
 17958                           	
 17959                           l3959:	
 17960  177B                     	movf	((___flmul@aexp)),w
 17961  177B  0840               	btfsc	status,2
 17962  177C  1903               	goto	u5371
 17963  177D  2F7F               	goto	u5370
 17964  177E  2F80               u5371:
 17965  177F                     	goto	l3969
 17966  177F  2FAA               u5370:
 17967  1780                     	line	175
 17968                           	
 17969                           l3961:	
 17970  1780                     	movlw	01h
 17971  1780  3001               	addwf	(___flmul@prod),f
 17972  1781  07C2               	movlw	0
 17973  1782  3000               	addwfc	(___flmul@prod+1),f
 17974  1783  3DC3               	movlw	0
 17975  1784  3000               	addwfc	(___flmul@prod+2),f
 17976  1785  3DC4               	movlw	0
 17977  1786  3000               	addwfc	(___flmul@prod+3),f
 17978  1787  3DC5               	line	176
 17979                           	
 17980                           l3963:	
 17981  1788                     	btfss	(___flmul@prod+3),(24)&7
 17982  1788  1C45               	goto	u5381
 17983  1789  2F8B               	goto	u5380
 17984  178A  2F8C               u5381:
 17985  178B                     	goto	l3969
 17986  178B  2FAA               u5380:
 17987  178C                     	line	177
 17988                           	
 17989                           l3965:	
 17990  178C                     	movf	(___flmul@prod),w
 17991  178C  0842               	movwf	(??___flmul+0)+0
 17992  178D  00B6               	movf	(___flmul@prod+1),w
 17993  178E  0843               	movwf	((??___flmul+0)+0+1)
 17994  178F  00B7               	movf	(___flmul@prod+2),w
 17995  1790  0844               	movwf	((??___flmul+0)+0+2)
 17996  1791  00B8               	movf	(___flmul@prod+3),w
 17997  1792  0845               	movwf	((??___flmul+0)+0+3)
 17998  1793  00B9               	movlw	01h
 17999  1794  3001               	movwf	(??___flmul+4)+0
 18000  1795  00BA               u5395:
 18001  1796                     	asrf	(??___flmul+0)+3,f
 18002  1796  37B9               	rrf	(??___flmul+0)+2,f
 18003  1797  0CB8               	rrf	(??___flmul+0)+1,f
 18004  1798  0CB7               	rrf	(??___flmul+0)+0,f
 18005  1799  0CB6               u5390:
 18006  179A                     	decfsz	(??___flmul+4)+0,f
 18007  179A  0BBA               	goto	u5395
 18008  179B  2F96               	movf	3+(??___flmul+0)+0,w
 18009  179C  0839               	movwf	(___flmul@prod+3)
 18010  179D  00C5               	movf	2+(??___flmul+0)+0,w
 18011  179E  0838               	movwf	(___flmul@prod+2)
 18012  179F  00C4               	movf	1+(??___flmul+0)+0,w
 18013  17A0  0837               	movwf	(___flmul@prod+1)
 18014  17A1  00C3               	movf	0+(??___flmul+0)+0,w
 18015  17A2  0836               	movwf	(___flmul@prod)
 18016  17A3  00C2               
 18017                           	line	178
 18018                           	
 18019                           l3967:	
 18020  17A4                     	movlw	01h
 18021  17A4  3001               	addwf	(___flmul@temp),f
 18022  17A5  07C6               	movlw	0
 18023  17A6  3000               	addwfc	(___flmul@temp+1),f
 18024  17A7  3DC7               	goto	l3969
 18025  17A8  2FAA               	line	179
 18026                           	
 18027                           l998:	
 18028  17A9                     	goto	l3969
 18029  17A9  2FAA               	line	180
 18030                           	
 18031                           l997:	
 18032  17AA                     	line	183
 18033                           	
 18034                           l3969:	
 18035  17AA                     	movf	(___flmul@temp+1),w
 18036  17AA  0847               	xorlw	80h
 18037  17AB  3A80               	movwf	(??___flmul+0)+0
 18038  17AC  00B6               	movlw	(0)^80h
 18039  17AD  3080               	subwf	(??___flmul+0)+0,w
 18040  17AE  0236               	skipz
 18041  17AF  1D03               	goto	u5405
 18042  17B0  2FB3               	movlw	0FFh
 18043  17B1  30FF               	subwf	(___flmul@temp),w
 18044  17B2  0246               u5405:
 18045  17B3                     
 18046                           	skipc
 18047  17B3  1C03               	goto	u5401
 18048  17B4  2FB6               	goto	u5400
 18049  17B5  2FB7               u5401:
 18050  17B6                     	goto	l3973
 18051  17B6  2FC1               u5400:
 18052  17B7                     	line	184
 18053                           	
 18054                           l3971:	
 18055  17B7                     	movlw	07Fh
 18056  17B7  307F               	movlb 0	; select bank0
 18057  17B8  0140               	movwf	(___flmul@prod+3)
 18058  17B9  00C5               	movlw	080h
 18059  17BA  3080               	movwf	(___flmul@prod+2)
 18060  17BB  00C4               	movlw	0
 18061  17BC  3000               	movwf	(___flmul@prod+1)
 18062  17BD  00C3               	movlw	0
 18063  17BE  3000               	movwf	(___flmul@prod)
 18064  17BF  00C2               
 18065                           	line	185
 18066                           	goto	l1000
 18067  17C0  2FF2               	line	187
 18068                           	
 18069                           l999:	
 18070  17C1                     	
 18071                           l3973:	
 18072  17C1                     	movlb 0	; select bank0
 18073  17C1  0140               	movf	(___flmul@temp+1),w
 18074  17C2  0847               	xorlw	80h
 18075  17C3  3A80               	movwf	(??___flmul+0)+0
 18076  17C4  00B6               	movlw	(0)^80h
 18077  17C5  3080               	subwf	(??___flmul+0)+0,w
 18078  17C6  0236               	skipz
 18079  17C7  1D03               	goto	u5415
 18080  17C8  2FCB               	movlw	01h
 18081  17C9  3001               	subwf	(___flmul@temp),w
 18082  17CA  0246               u5415:
 18083  17CB                     
 18084                           	skipnc
 18085  17CB  1803               	goto	u5411
 18086  17CC  2FCE               	goto	u5410
 18087  17CD  2FCF               u5411:
 18088  17CE                     	goto	l3979
 18089  17CE  2FDA               u5410:
 18090  17CF                     	line	188
 18091                           	
 18092                           l3975:	
 18093  17CF                     	movlw	high highword(0)
 18094  17CF  3000               	movlb 0	; select bank0
 18095  17D0  0140               	movwf	(___flmul@prod+3)
 18096  17D1  00C5               	movlw	low highword(0)
 18097  17D2  3000               	movwf	(___flmul@prod+2)
 18098  17D3  00C4               	movlw	high(0)
 18099  17D4  3000               	movwf	(___flmul@prod+1)
 18100  17D5  00C3               	movlw	low(0)
 18101  17D6  3000               	movwf	(___flmul@prod)
 18102  17D7  00C2               
 18103                           	line	190
 18104                           	
 18105                           l3977:	
 18106  17D8                     	clrf	(___flmul@sign)
 18107  17D8  01BB               	line	191
 18108                           	goto	l1000
 18109  17D9  2FF2               	line	192
 18110                           	
 18111                           l1001:	
 18112  17DA                     	line	194
 18113                           	
 18114                           l3979:	
 18115  17DA                     	movlb 0	; select bank0
 18116  17DA  0140               	movf	(___flmul@temp),w
 18117  17DB  0846               	movwf	(??___flmul+0)+0
 18118  17DC  00B6               	movf	(??___flmul+0)+0,w
 18119  17DD  0836               	movwf	(___flmul@bexp)
 18120  17DE  00C1               	line	195
 18121                           	movlw	0FFh
 18122  17DF  30FF               	andwf	(___flmul@prod),f
 18123  17E0  05C2               	movlw	0FFh
 18124  17E1  30FF               	andwf	(___flmul@prod+1),f
 18125  17E2  05C3               	movlw	07Fh
 18126  17E3  307F               	andwf	(___flmul@prod+2),f
 18127  17E4  05C4               	movlw	0
 18128  17E5  3000               	andwf	(___flmul@prod+3),f
 18129  17E6  05C5               	line	196
 18130                           	
 18131                           l3981:	
 18132  17E7                     	btfss	(___flmul@bexp),(0)&7
 18133  17E7  1C41               	goto	u5421
 18134  17E8  2FEA               	goto	u5420
 18135  17E9  2FEB               u5421:
 18136  17EA                     	goto	l3985
 18137  17EA  2FED               u5420:
 18138  17EB                     	line	197
 18139                           	
 18140                           l3983:	
 18141  17EB                     	bsf	0+(___flmul@prod)+02h+(7/8),(7)&7
 18142  17EB  17C4               	goto	l3985
 18143  17EC  2FED               	line	198
 18144                           	
 18145                           l1003:	
 18146  17ED                     	line	199
 18147                           	
 18148                           l3985:	
 18149  17ED                     	lsrf	(___flmul@bexp),w
 18150  17ED  3641               	movwf	(??___flmul+0)+0
 18151  17EE  00B6               	movf	(??___flmul+0)+0,w
 18152  17EF  0836               	movwf	0+(___flmul@prod)+03h
 18153  17F0  00C5               	goto	l1000
 18154  17F1  2FF2               	line	200
 18155                           	
 18156                           l1002:	
 18157  17F2                     	
 18158                           l1000:	
 18159  17F2                     	line	201
 18160                           	movf	(___flmul@sign),w
 18161  17F2  083B               	movwf	(??___flmul+0)+0
 18162  17F3  00B6               	movf	(??___flmul+0)+0,w
 18163  17F4  0836               	iorwf	0+(___flmul@prod)+03h,f
 18164  17F5  04C5               	line	203
 18165                           	
 18166                           l3987:	
 18167  17F6                     	movf	(___flmul@prod+3),w
 18168  17F6  0845               	movwf	(?___flmul+3)
 18169  17F7  00B1               	movf	(___flmul@prod+2),w
 18170  17F8  0844               	movwf	(?___flmul+2)
 18171  17F9  00B0               	movf	(___flmul@prod+1),w
 18172  17FA  0843               	movwf	(?___flmul+1)
 18173  17FB  00AF               	movf	(___flmul@prod),w
 18174  17FC  0842               	movwf	(?___flmul)
 18175  17FD  00AE               
 18176                           	goto	l988
 18177  17FE  2FFF               	
 18178                           l3989:	
 18179  17FF                     	line	205
 18180                           	
 18181                           l988:	
 18182  17FF                     	return
 18183  17FF  0008               	opt stack 0
 18184                           GLOBAL	__end_of___flmul
 18185                           	__end_of___flmul:
 18186  1800                     	signat	___flmul,8316
 18187                           	global	__Umul8_16
 18188                           
 18189 ;; *************** function __Umul8_16 *****************
 18190 ;; Defined at:
 18191 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8_16.c"
 18192 ;; Parameters:    Size  Location     Type
 18193 ;;  multiplier      1    wreg     unsigned char 
 18194 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 18195 ;; Auto vars:     Size  Location     Type
 18196 ;;  multiplier      1    8[BANK0 ] unsigned char 
 18197 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 18198 ;;  product         2    4[BANK0 ] unsigned int 
 18199 ;; Return value:  Size  Location     Type
 18200 ;;                  2    0[BANK0 ] unsigned int 
 18201 ;; Registers used:
 18202 ;;		wreg, status,2, status,0
 18203 ;; Tracked objects:
 18204 ;;		On entry : 0/0
 18205 ;;		On exit  : 0/0
 18206 ;;		Unchanged: 0/0
 18207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18208 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18209 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18210 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18211 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18212 ;;Total ram usage:        9 bytes
 18213 ;; Hardware stack levels used:    1
 18214 ;; Hardware stack levels required when called:    3
 18215 ;; This function calls:
 18216 ;;		Nothing
 18217 ;; This function is called by:
 18218 ;;		___flmul
 18219 ;; This function uses a non-reentrant model
 18220 ;;
 18221                           psect	text47,local,class=CODE,delta=2,merge=1,group=1
 18222                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8_16.c"
 18223                           	line	4
 18224                           global __ptext47
 18225                           __ptext47:	;psect for function __Umul8_16
 18226  2309                     psect	text47
 18227                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8_16.c"
 18228                           	line	4
 18229                           	global	__size_of__Umul8_16
 18230                           	__size_of__Umul8_16	equ	__end_of__Umul8_16-__Umul8_16
 18231  0027                     	
 18232                           __Umul8_16:	
 18233  2309                     ;incstack = 0
 18234                           	opt	stack 6
 18235                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 18236                           ;__Umul8_16@multiplier stored from wreg
 18237                           	movlb 0	; select bank0
 18238  2309  0140               	movwf	(__Umul8_16@multiplier)
 18239  230A  00A8               	line	5
 18240                           	
 18241                           l3413:	
 18242  230B                     	clrf	(__Umul8_16@product)
 18243  230B  01A4               	clrf	(__Umul8_16@product+1)
 18244  230C  01A5               	line	6
 18245                           	
 18246                           l3415:	
 18247  230D                     	movf	(__Umul8_16@multiplicand),w
 18248  230D  0820               	movwf	(??__Umul8_16+0)+0
 18249  230E  00A2               	clrf	(??__Umul8_16+0)+0+1
 18250  230F  01A3               	movf	0+(??__Umul8_16+0)+0,w
 18251  2310  0822               	movwf	(__Umul8_16@word_mpld)
 18252  2311  00A6               	movf	1+(??__Umul8_16+0)+0,w
 18253  2312  0823               	movwf	(__Umul8_16@word_mpld+1)
 18254  2313  00A7               	goto	l3417
 18255  2314  2B15               	line	50
 18256                           	
 18257                           l1174:	
 18258  2315                     	line	51
 18259                           	
 18260                           l3417:	
 18261  2315                     	btfss	(__Umul8_16@multiplier),(0)&7
 18262  2315  1C28               	goto	u4111
 18263  2316  2B18               	goto	u4110
 18264  2317  2B19               u4111:
 18265  2318                     	goto	l1175
 18266  2318  2B1D               u4110:
 18267  2319                     	line	52
 18268                           	
 18269                           l3419:	
 18270  2319                     	movf	(__Umul8_16@word_mpld),w
 18271  2319  0826               	addwf	(__Umul8_16@product),f
 18272  231A  07A4               	movf	(__Umul8_16@word_mpld+1),w
 18273  231B  0827               	addwfc	(__Umul8_16@product+1),f
 18274  231C  3DA5               	line	53
 18275                           	
 18276                           l1175:	
 18277  231D                     	line	54
 18278                           	movlw	01h
 18279  231D  3001               	
 18280                           u4125:
 18281  231E                     	lslf	(__Umul8_16@word_mpld),f
 18282  231E  35A6               	rlf	(__Umul8_16@word_mpld+1),f
 18283  231F  0DA7               	decfsz	wreg,f
 18284  2320  0B89               	goto	u4125
 18285  2321  2B1E               	line	55
 18286                           	clrc
 18287  2322  1003               	rrf	(__Umul8_16@multiplier),f
 18288  2323  0CA8               
 18289                           	line	56
 18290                           	
 18291                           l3421:	
 18292  2324                     	movf	((__Umul8_16@multiplier)),w
 18293  2324  0828               	btfss	status,2
 18294  2325  1D03               	goto	u4131
 18295  2326  2B28               	goto	u4130
 18296  2327  2B29               u4131:
 18297  2328                     	goto	l3417
 18298  2328  2B15               u4130:
 18299  2329                     	goto	l3423
 18300  2329  2B2A               	
 18301                           l1176:	
 18302  232A                     	line	59
 18303                           	
 18304                           l3423:	
 18305  232A                     	movf	(__Umul8_16@product+1),w
 18306  232A  0825               	movwf	(?__Umul8_16+1)
 18307  232B  00A1               	movf	(__Umul8_16@product),w
 18308  232C  0824               	movwf	(?__Umul8_16)
 18309  232D  00A0               	goto	l1177
 18310  232E  2B2F               	
 18311                           l3425:	
 18312  232F                     	line	60
 18313                           	
 18314                           l1177:	
 18315  232F                     	return
 18316  232F  0008               	opt stack 0
 18317                           GLOBAL	__end_of__Umul8_16
 18318                           	__end_of__Umul8_16:
 18319  2330                     	signat	__Umul8_16,8314
 18320                           	global	___fldiv
 18321                           
 18322 ;; *************** function ___fldiv *****************
 18323 ;; Defined at:
 18324 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcdiv.c"
 18325 ;; Parameters:    Size  Location     Type
 18326 ;;  a               4   40[BANK0 ] unsigned int 
 18327 ;;  b               4   44[BANK0 ] unsigned int 
 18328 ;; Auto vars:     Size  Location     Type
 18329 ;;  grs             4   60[BANK0 ] unsigned long 
 18330 ;;  rem             4   53[BANK0 ] unsigned long 
 18331 ;;  new_exp         2   58[BANK0 ] int 
 18332 ;;  aexp            1   65[BANK0 ] unsigned char 
 18333 ;;  bexp            1   64[BANK0 ] unsigned char 
 18334 ;;  sign            1   57[BANK0 ] unsigned char 
 18335 ;; Return value:  Size  Location     Type
 18336 ;;                  4   40[BANK0 ] unsigned char 
 18337 ;; Registers used:
 18338 ;;		wreg, status,2, status,0
 18339 ;; Tracked objects:
 18340 ;;		On entry : 0/0
 18341 ;;		On exit  : 0/0
 18342 ;;		Unchanged: 0/0
 18343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18344 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18345 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18346 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18347 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18348 ;;Total ram usage:       26 bytes
 18349 ;; Hardware stack levels used:    1
 18350 ;; Hardware stack levels required when called:    3
 18351 ;; This function calls:
 18352 ;;		Nothing
 18353 ;; This function is called by:
 18354 ;;		_convertAnalogValues
 18355 ;;		_efgtoa
 18356 ;; This function uses a non-reentrant model
 18357 ;;
 18358                           psect	text48,local,class=CODE,delta=2,merge=1,group=1
 18359                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcdiv.c"
 18360                           	line	8
 18361                           global __ptext48
 18362                           __ptext48:	;psect for function ___fldiv
 18363  13B6                     psect	text48
 18364                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcdiv.c"
 18365                           	line	8
 18366                           	global	__size_of___fldiv
 18367                           	__size_of___fldiv	equ	__end_of___fldiv-___fldiv
 18368  01DF                     	
 18369                           ___fldiv:	
 18370  13B6                     ;incstack = 0
 18371                           	opt	stack 7
 18372                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 18373                           	line	26
 18374                           	
 18375                           l3711:	
 18376  13B6                     	movlb 0	; select bank0
 18377  13B6  0140               	movf	0+(___fldiv@b)+03h,w
 18378  13B7  084F               	andlw	080h
 18379  13B8  3980               	movwf	(??___fldiv+0)+0
 18380  13B9  00D0               	movf	(??___fldiv+0)+0,w
 18381  13BA  0850               	movwf	(___fldiv@sign)
 18382  13BB  00D9               	line	27
 18383                           	
 18384                           l3713:	
 18385  13BC                     	lslf	0+(___fldiv@b)+03h,w
 18386  13BC  354F               	movwf	(??___fldiv+0)+0
 18387  13BD  00D0               	movf	(??___fldiv+0)+0,w
 18388  13BE  0850               	movwf	(___fldiv@bexp)
 18389  13BF  00E0               	line	28
 18390                           	
 18391                           l3715:	
 18392  13C0                     	btfss	0+(___fldiv@b)+02h,(7)&7
 18393  13C0  1FCE               	goto	u4881
 18394  13C1  2BC3               	goto	u4880
 18395  13C2  2BC4               u4881:
 18396  13C3                     	goto	l3719
 18397  13C3  2BC6               u4880:
 18398  13C4                     	line	29
 18399                           	
 18400                           l3717:	
 18401  13C4                     	bsf	(___fldiv@bexp)+(0/8),(0)&7
 18402  13C4  1460               	goto	l3719
 18403  13C5  2BC6               	line	30
 18404                           	
 18405                           l941:	
 18406  13C6                     	line	33
 18407                           	
 18408                           l3719:	
 18409  13C6                     	movf	((___fldiv@bexp)),w
 18410  13C6  0860               	btfsc	status,2
 18411  13C7  1903               	goto	u4891
 18412  13C8  2BCA               	goto	u4890
 18413  13C9  2BCB               u4891:
 18414  13CA                     	goto	l3729
 18415  13CA  2BDC               u4890:
 18416  13CB                     	line	35
 18417                           	
 18418                           l3721:	
 18419  13CB                     		incf	((___fldiv@bexp)),w
 18420  13CB  0A60               	btfss	status,2
 18421  13CC  1D03               	goto	u4901
 18422  13CD  2BCF               	goto	u4900
 18423  13CE  2BD0               u4901:
 18424  13CF                     	goto	l3725
 18425  13CF  2BD9               u4900:
 18426  13D0                     	line	37
 18427                           	
 18428                           l3723:	
 18429  13D0                     	movlw	0x0
 18430  13D0  3000               	movwf	(___fldiv@b+3)
 18431  13D1  00CF               	movlw	0x0
 18432  13D2  3000               	movwf	(___fldiv@b+2)
 18433  13D3  00CE               	movlw	0x0
 18434  13D4  3000               	movwf	(___fldiv@b+1)
 18435  13D5  00CD               	movlw	0x0
 18436  13D6  3000               	movwf	(___fldiv@b)
 18437  13D7  00CC               
 18438                           	goto	l3725
 18439  13D8  2BD9               	line	38
 18440                           	
 18441                           l943:	
 18442  13D9                     	line	40
 18443                           	
 18444                           l3725:	
 18445  13D9                     	bsf	(___fldiv@b)+(23/8),(23)&7
 18446  13D9  17CE               	line	42
 18447                           	
 18448                           l3727:	
 18449  13DA                     	clrf	0+(___fldiv@b)+03h
 18450  13DA  01CF               	line	43
 18451                           	goto	l3731
 18452  13DB  2BE5               	line	44
 18453                           	
 18454                           l942:	
 18455  13DC                     	line	46
 18456                           	
 18457                           l3729:	
 18458  13DC                     	movlw	0x0
 18459  13DC  3000               	movwf	(___fldiv@b+3)
 18460  13DD  00CF               	movlw	0x0
 18461  13DE  3000               	movwf	(___fldiv@b+2)
 18462  13DF  00CE               	movlw	0x0
 18463  13E0  3000               	movwf	(___fldiv@b+1)
 18464  13E1  00CD               	movlw	0x0
 18465  13E2  3000               	movwf	(___fldiv@b)
 18466  13E3  00CC               
 18467                           	goto	l3731
 18468  13E4  2BE5               	line	47
 18469                           	
 18470                           l944:	
 18471  13E5                     	line	49
 18472                           	
 18473                           l3731:	
 18474  13E5                     	movf	0+(___fldiv@a)+03h,w
 18475  13E5  084B               	andlw	080h
 18476  13E6  3980               	movwf	(??___fldiv+0)+0
 18477  13E7  00D0               	movf	(??___fldiv+0)+0,w
 18478  13E8  0850               	xorwf	(___fldiv@sign),f
 18479  13E9  06D9               	line	50
 18480                           	
 18481                           l3733:	
 18482  13EA                     	lslf	0+(___fldiv@a)+03h,w
 18483  13EA  354B               	movwf	(??___fldiv+0)+0
 18484  13EB  00D0               	movf	(??___fldiv+0)+0,w
 18485  13EC  0850               	movwf	(___fldiv@aexp)
 18486  13ED  00E1               	line	51
 18487                           	
 18488                           l3735:	
 18489  13EE                     	btfss	0+(___fldiv@a)+02h,(7)&7
 18490  13EE  1FCA               	goto	u4911
 18491  13EF  2BF1               	goto	u4910
 18492  13F0  2BF2               u4911:
 18493  13F1                     	goto	l3739
 18494  13F1  2BF4               u4910:
 18495  13F2                     	line	52
 18496                           	
 18497                           l3737:	
 18498  13F2                     	bsf	(___fldiv@aexp)+(0/8),(0)&7
 18499  13F2  1461               	goto	l3739
 18500  13F3  2BF4               	line	53
 18501                           	
 18502                           l945:	
 18503  13F4                     	line	56
 18504                           	
 18505                           l3739:	
 18506  13F4                     	movf	((___fldiv@aexp)),w
 18507  13F4  0861               	btfsc	status,2
 18508  13F5  1903               	goto	u4921
 18509  13F6  2BF8               	goto	u4920
 18510  13F7  2BF9               u4921:
 18511  13F8                     	goto	l3749
 18512  13F8  2C0A               u4920:
 18513  13F9                     	line	58
 18514                           	
 18515                           l3741:	
 18516  13F9                     		incf	((___fldiv@aexp)),w
 18517  13F9  0A61               	btfss	status,2
 18518  13FA  1D03               	goto	u4931
 18519  13FB  2BFD               	goto	u4930
 18520  13FC  2BFE               u4931:
 18521  13FD                     	goto	l3745
 18522  13FD  2C07               u4930:
 18523  13FE                     	line	60
 18524                           	
 18525                           l3743:	
 18526  13FE                     	movlw	0x0
 18527  13FE  3000               	movwf	(___fldiv@a+3)
 18528  13FF  00CB               	movlw	0x0
 18529  1400  3000               	movwf	(___fldiv@a+2)
 18530  1401  00CA               	movlw	0x0
 18531  1402  3000               	movwf	(___fldiv@a+1)
 18532  1403  00C9               	movlw	0x0
 18533  1404  3000               	movwf	(___fldiv@a)
 18534  1405  00C8               
 18535                           	goto	l3745
 18536  1406  2C07               	line	61
 18537                           	
 18538                           l947:	
 18539  1407                     	line	63
 18540                           	
 18541                           l3745:	
 18542  1407                     	bsf	(___fldiv@a)+(23/8),(23)&7
 18543  1407  17CA               	line	65
 18544                           	
 18545                           l3747:	
 18546  1408                     	clrf	0+(___fldiv@a)+03h
 18547  1408  01CB               	line	66
 18548                           	goto	l948
 18549  1409  2C12               	line	67
 18550                           	
 18551                           l946:	
 18552  140A                     	line	69
 18553                           	
 18554                           l3749:	
 18555  140A                     	movlw	0x0
 18556  140A  3000               	movwf	(___fldiv@a+3)
 18557  140B  00CB               	movlw	0x0
 18558  140C  3000               	movwf	(___fldiv@a+2)
 18559  140D  00CA               	movlw	0x0
 18560  140E  3000               	movwf	(___fldiv@a+1)
 18561  140F  00C9               	movlw	0x0
 18562  1410  3000               	movwf	(___fldiv@a)
 18563  1411  00C8               
 18564                           	line	70
 18565                           	
 18566                           l948:	
 18567  1412                     	line	75
 18568                           	movf	(___fldiv@a+3),w
 18569  1412  084B               	iorwf	(___fldiv@a+2),w
 18570  1413  044A               	iorwf	(___fldiv@a+1),w
 18571  1414  0449               	iorwf	(___fldiv@a),w
 18572  1415  0448               	skipz
 18573  1416  1D03               	goto	u4941
 18574  1417  2C19               	goto	u4940
 18575  1418  2C1A               u4941:
 18576  1419                     	goto	l3759
 18577  1419  2C34               u4940:
 18578  141A                     	line	76
 18579                           	
 18580                           l3751:	
 18581  141A                     	movlw	high highword(0)
 18582  141A  3000               	movwf	(___fldiv@b+3)
 18583  141B  00CF               	movlw	low highword(0)
 18584  141C  3000               	movwf	(___fldiv@b+2)
 18585  141D  00CE               	movlw	high(0)
 18586  141E  3000               	movwf	(___fldiv@b+1)
 18587  141F  00CD               	movlw	low(0)
 18588  1420  3000               	movwf	(___fldiv@b)
 18589  1421  00CC               
 18590                           	line	77
 18591                           	movlw	080h
 18592  1422  3080               	iorwf	0+(___fldiv@b)+02h,f
 18593  1423  04CE               	movlw	07Fh
 18594  1424  307F               	iorwf	1+(___fldiv@b)+02h,f
 18595  1425  04CF               	line	78
 18596                           	
 18597                           l3753:	
 18598  1426                     	movf	(___fldiv@sign),w
 18599  1426  0859               	movwf	(??___fldiv+0)+0
 18600  1427  00D0               	movf	(??___fldiv+0)+0,w
 18601  1428  0850               	iorwf	0+(___fldiv@b)+03h,f
 18602  1429  04CF               	line	79
 18603                           	
 18604                           l3755:	
 18605  142A                     	movf	(___fldiv@b+3),w
 18606  142A  084F               	movwf	(?___fldiv+3)
 18607  142B  00CB               	movf	(___fldiv@b+2),w
 18608  142C  084E               	movwf	(?___fldiv+2)
 18609  142D  00CA               	movf	(___fldiv@b+1),w
 18610  142E  084D               	movwf	(?___fldiv+1)
 18611  142F  00C9               	movf	(___fldiv@b),w
 18612  1430  084C               	movwf	(?___fldiv)
 18613  1431  00C8               
 18614                           	goto	l950
 18615  1432  2D94               	
 18616                           l3757:	
 18617  1433                     	goto	l950
 18618  1433  2D94               	line	80
 18619                           	
 18620                           l949:	
 18621  1434                     	line	83
 18622                           	
 18623                           l3759:	
 18624  1434                     	movf	((___fldiv@bexp)),w
 18625  1434  0860               	btfss	status,2
 18626  1435  1D03               	goto	u4951
 18627  1436  2C38               	goto	u4950
 18628  1437  2C39               u4951:
 18629  1438                     	goto	l3765
 18630  1438  2C4B               u4950:
 18631  1439                     	line	84
 18632                           	
 18633                           l3761:	
 18634  1439                     	movlw	high highword(0)
 18635  1439  3000               	movwf	(___fldiv@b+3)
 18636  143A  00CF               	movlw	low highword(0)
 18637  143B  3000               	movwf	(___fldiv@b+2)
 18638  143C  00CE               	movlw	high(0)
 18639  143D  3000               	movwf	(___fldiv@b+1)
 18640  143E  00CD               	movlw	low(0)
 18641  143F  3000               	movwf	(___fldiv@b)
 18642  1440  00CC               
 18643                           	line	85
 18644                           	movf	(___fldiv@b+3),w
 18645  1441  084F               	movwf	(?___fldiv+3)
 18646  1442  00CB               	movf	(___fldiv@b+2),w
 18647  1443  084E               	movwf	(?___fldiv+2)
 18648  1444  00CA               	movf	(___fldiv@b+1),w
 18649  1445  084D               	movwf	(?___fldiv+1)
 18650  1446  00C9               	movf	(___fldiv@b),w
 18651  1447  084C               	movwf	(?___fldiv)
 18652  1448  00C8               
 18653                           	goto	l950
 18654  1449  2D94               	
 18655                           l3763:	
 18656  144A                     	goto	l950
 18657  144A  2D94               	line	86
 18658                           	
 18659                           l951:	
 18660  144B                     	line	89
 18661                           	
 18662                           l3765:	
 18663  144B                     	movf	(___fldiv@aexp),w
 18664  144B  0861               	movwf	(??___fldiv+0)+0
 18665  144C  00D0               	clrf	(??___fldiv+0)+0+1
 18666  144D  01D1               	comf	(??___fldiv+0)+0,f
 18667  144E  09D0               	comf	(??___fldiv+0)+1,f
 18668  144F  09D1               	incf	(??___fldiv+0)+0,f
 18669  1450  0AD0               	skipnz
 18670  1451  1903               	incf	(??___fldiv+0)+1,f
 18671  1452  0AD1               	movf	(___fldiv@bexp),w
 18672  1453  0860               	addwf	0+(??___fldiv+0)+0,w
 18673  1454  0750               	movwf	(??___fldiv+2)+0
 18674  1455  00D2               	movf	1+(??___fldiv+0)+0,w
 18675  1456  0851               	skipnc
 18676  1457  1803               	incf	1+(??___fldiv+0)+0,w
 18677  1458  0A51               	movwf	((??___fldiv+2)+0)+1
 18678  1459  00D3               	movf	0+(??___fldiv+2)+0,w
 18679  145A  0852               	addlw	07Fh
 18680  145B  3E7F               	movwf	(___fldiv@new_exp)
 18681  145C  00DA               	movlw	0
 18682  145D  3000               	addwfc	1+(??___fldiv+2)+0,w
 18683  145E  3D53               	movwf	1+(___fldiv@new_exp)
 18684  145F  00DB               	line	92
 18685                           	
 18686                           l3767:	
 18687  1460                     	movf	(___fldiv@b+3),w
 18688  1460  084F               	movwf	(___fldiv@rem+3)
 18689  1461  00D8               	movf	(___fldiv@b+2),w
 18690  1462  084E               	movwf	(___fldiv@rem+2)
 18691  1463  00D7               	movf	(___fldiv@b+1),w
 18692  1464  084D               	movwf	(___fldiv@rem+1)
 18693  1465  00D6               	movf	(___fldiv@b),w
 18694  1466  084C               	movwf	(___fldiv@rem)
 18695  1467  00D5               
 18696                           	line	93
 18697                           	
 18698                           l3769:	
 18699  1468                     	movlw	high highword(0)
 18700  1468  3000               	movwf	(___fldiv@b+3)
 18701  1469  00CF               	movlw	low highword(0)
 18702  146A  3000               	movwf	(___fldiv@b+2)
 18703  146B  00CE               	movlw	high(0)
 18704  146C  3000               	movwf	(___fldiv@b+1)
 18705  146D  00CD               	movlw	low(0)
 18706  146E  3000               	movwf	(___fldiv@b)
 18707  146F  00CC               
 18708                           	line	94
 18709                           	
 18710                           l3771:	
 18711  1470                     	movlw	high highword(0)
 18712  1470  3000               	movwf	(___fldiv@grs+3)
 18713  1471  00DF               	movlw	low highword(0)
 18714  1472  3000               	movwf	(___fldiv@grs+2)
 18715  1473  00DE               	movlw	high(0)
 18716  1474  3000               	movwf	(___fldiv@grs+1)
 18717  1475  00DD               	movlw	low(0)
 18718  1476  3000               	movwf	(___fldiv@grs)
 18719  1477  00DC               
 18720                           	line	96
 18721                           	
 18722                           l3773:	
 18723  1478                     	clrf	(___fldiv@aexp)
 18724  1478  01E1               	line	97
 18725                           	goto	l3793
 18726  1479  2CBC               	
 18727                           l953:	
 18728  147A                     	line	100
 18729                           	
 18730                           l3775:	
 18731  147A                     	movf	((___fldiv@aexp)),w
 18732  147A  0861               	btfsc	status,2
 18733  147B  1903               	goto	u4961
 18734  147C  2C7E               	goto	u4960
 18735  147D  2C7F               u4961:
 18736  147E                     	goto	l3785
 18737  147E  2C9B               u4960:
 18738  147F                     	line	101
 18739                           	
 18740                           l3777:	
 18741  147F                     	movlw	01h
 18742  147F  3001               u4975:
 18743  1480                     	lslf	(___fldiv@rem),f
 18744  1480  35D5               	rlf	(___fldiv@rem+1),f
 18745  1481  0DD6               	rlf	(___fldiv@rem+2),f
 18746  1482  0DD7               	rlf	(___fldiv@rem+3),f
 18747  1483  0DD8               	decfsz	wreg,f
 18748  1484  0B89               	goto	u4975
 18749  1485  2C80               	line	102
 18750                           	movlw	01h
 18751  1486  3001               u4985:
 18752  1487                     	lslf	(___fldiv@b),f
 18753  1487  35CC               	rlf	(___fldiv@b+1),f
 18754  1488  0DCD               	rlf	(___fldiv@b+2),f
 18755  1489  0DCE               	rlf	(___fldiv@b+3),f
 18756  148A  0DCF               	decfsz	wreg,f
 18757  148B  0B89               	goto	u4985
 18758  148C  2C87               	line	103
 18759                           	
 18760                           l3779:	
 18761  148D                     	btfss	(___fldiv@grs+3),(31)&7
 18762  148D  1FDF               	goto	u4991
 18763  148E  2C90               	goto	u4990
 18764  148F  2C91               u4991:
 18765  1490                     	goto	l3783
 18766  1490  2C93               u4990:
 18767  1491                     	line	104
 18768                           	
 18769                           l3781:	
 18770  1491                     	bsf	(___fldiv@b)+(0/8),(0)&7
 18771  1491  144C               	goto	l3783
 18772  1492  2C93               	line	105
 18773                           	
 18774                           l955:	
 18775  1493                     	line	106
 18776                           	
 18777                           l3783:	
 18778  1493                     	movlw	01h
 18779  1493  3001               u5005:
 18780  1494                     	lslf	(___fldiv@grs),f
 18781  1494  35DC               	rlf	(___fldiv@grs+1),f
 18782  1495  0DDD               	rlf	(___fldiv@grs+2),f
 18783  1496  0DDE               	rlf	(___fldiv@grs+3),f
 18784  1497  0DDF               	decfsz	wreg,f
 18785  1498  0B89               	goto	u5005
 18786  1499  2C94               	goto	l3785
 18787  149A  2C9B               	line	107
 18788                           	
 18789                           l954:	
 18790  149B                     	line	112
 18791                           	
 18792                           l3785:	
 18793  149B                     	movf	(___fldiv@a+3),w
 18794  149B  084B               	subwf	(___fldiv@rem+3),w
 18795  149C  0258               	skipz
 18796  149D  1D03               	goto	u5015
 18797  149E  2CA9               	movf	(___fldiv@a+2),w
 18798  149F  084A               	subwf	(___fldiv@rem+2),w
 18799  14A0  0257               	skipz
 18800  14A1  1D03               	goto	u5015
 18801  14A2  2CA9               	movf	(___fldiv@a+1),w
 18802  14A3  0849               	subwf	(___fldiv@rem+1),w
 18803  14A4  0256               	skipz
 18804  14A5  1D03               	goto	u5015
 18805  14A6  2CA9               	movf	(___fldiv@a),w
 18806  14A7  0848               	subwf	(___fldiv@rem),w
 18807  14A8  0255               u5015:
 18808  14A9                     	skipc
 18809  14A9  1C03               	goto	u5011
 18810  14AA  2CAC               	goto	u5010
 18811  14AB  2CAD               u5011:
 18812  14AC                     	goto	l3791
 18813  14AC  2CB7               u5010:
 18814  14AD                     	line	115
 18815                           	
 18816                           l3787:	
 18817  14AD                     	bsf	(___fldiv@grs)+(30/8),(30)&7
 18818  14AD  175F               	line	116
 18819                           	
 18820                           l3789:	
 18821  14AE                     	movf	(___fldiv@a),w
 18822  14AE  0848               	subwf	(___fldiv@rem),f
 18823  14AF  02D5               	movf	(___fldiv@a+1),w
 18824  14B0  0849               	subwfb	(___fldiv@rem+1),f
 18825  14B1  3BD6               	movf	(___fldiv@a+2),w
 18826  14B2  084A               	subwfb	(___fldiv@rem+2),f
 18827  14B3  3BD7               	movf	(___fldiv@a+3),w
 18828  14B4  084B               	subwfb	(___fldiv@rem+3),f
 18829  14B5  3BD8               	goto	l3791
 18830  14B6  2CB7               	line	117
 18831                           	
 18832                           l956:	
 18833  14B7                     	line	118
 18834                           	
 18835                           l3791:	
 18836  14B7                     	movlw	low(01h)
 18837  14B7  3001               	movwf	(??___fldiv+0)+0
 18838  14B8  00D0               	movf	(??___fldiv+0)+0,w
 18839  14B9  0850               	addwf	(___fldiv@aexp),f
 18840  14BA  07E1               	goto	l3793
 18841  14BB  2CBC               	line	119
 18842                           	
 18843                           l952:	
 18844  14BC                     	line	97
 18845                           	
 18846                           l3793:	
 18847  14BC                     	movlw	low(01Ah)
 18848  14BC  301A               	subwf	(___fldiv@aexp),w
 18849  14BD  0261               	skipc
 18850  14BE  1C03               	goto	u5021
 18851  14BF  2CC1               	goto	u5020
 18852  14C0  2CC2               u5021:
 18853  14C1                     	goto	l3775
 18854  14C1  2C7A               u5020:
 18855  14C2                     	goto	l3795
 18856  14C2  2CC3               	
 18857                           l957:	
 18858  14C3                     	line	122
 18859                           	
 18860                           l3795:	
 18861  14C3                     	movf	(___fldiv@rem+3),w
 18862  14C3  0858               	iorwf	(___fldiv@rem+2),w
 18863  14C4  0457               	iorwf	(___fldiv@rem+1),w
 18864  14C5  0456               	iorwf	(___fldiv@rem),w
 18865  14C6  0455               	skipnz
 18866  14C7  1903               	goto	u5031
 18867  14C8  2CCA               	goto	u5030
 18868  14C9  2CCB               u5031:
 18869  14CA                     	goto	l3809
 18870  14CA  2CE7               u5030:
 18871  14CB                     	line	123
 18872                           	
 18873                           l3797:	
 18874  14CB                     	bsf	(___fldiv@grs)+(0/8),(0)&7
 18875  14CB  145C               	goto	l3809
 18876  14CC  2CE7               	line	124
 18877                           	
 18878                           l958:	
 18879  14CD                     	line	127
 18880                           	goto	l3809
 18881  14CD  2CE7               	
 18882                           l960:	
 18883  14CE                     	line	128
 18884                           	
 18885                           l3799:	
 18886  14CE                     	movlw	01h
 18887  14CE  3001               u5045:
 18888  14CF                     	lslf	(___fldiv@b),f
 18889  14CF  35CC               	rlf	(___fldiv@b+1),f
 18890  14D0  0DCD               	rlf	(___fldiv@b+2),f
 18891  14D1  0DCE               	rlf	(___fldiv@b+3),f
 18892  14D2  0DCF               	decfsz	wreg,f
 18893  14D3  0B89               	goto	u5045
 18894  14D4  2CCF               	line	129
 18895                           	
 18896                           l3801:	
 18897  14D5                     	btfss	(___fldiv@grs+3),(31)&7
 18898  14D5  1FDF               	goto	u5051
 18899  14D6  2CD8               	goto	u5050
 18900  14D7  2CD9               u5051:
 18901  14D8                     	goto	l3805
 18902  14D8  2CDB               u5050:
 18903  14D9                     	line	130
 18904                           	
 18905                           l3803:	
 18906  14D9                     	bsf	(___fldiv@b)+(0/8),(0)&7
 18907  14D9  144C               	goto	l3805
 18908  14DA  2CDB               	line	131
 18909                           	
 18910                           l961:	
 18911  14DB                     	line	132
 18912                           	
 18913                           l3805:	
 18914  14DB                     	movlw	01h
 18915  14DB  3001               u5065:
 18916  14DC                     	lslf	(___fldiv@grs),f
 18917  14DC  35DC               	rlf	(___fldiv@grs+1),f
 18918  14DD  0DDD               	rlf	(___fldiv@grs+2),f
 18919  14DE  0DDE               	rlf	(___fldiv@grs+3),f
 18920  14DF  0DDF               	decfsz	wreg,f
 18921  14E0  0B89               	goto	u5065
 18922  14E1  2CDC               	line	133
 18923                           	
 18924                           l3807:	
 18925  14E2                     	movlw	0FFh
 18926  14E2  30FF               	addwf	(___fldiv@new_exp),f
 18927  14E3  07DA               	movlw	0FFh
 18928  14E4  30FF               	addwfc	(___fldiv@new_exp+1),f
 18929  14E5  3DDB               	goto	l3809
 18930  14E6  2CE7               	line	134
 18931                           	
 18932                           l959:	
 18933  14E7                     	line	127
 18934                           	
 18935                           l3809:	
 18936  14E7                     	btfss	(___fldiv@b+2),(23)&7
 18937  14E7  1FCE               	goto	u5071
 18938  14E8  2CEA               	goto	u5070
 18939  14E9  2CEB               u5071:
 18940  14EA                     	goto	l3799
 18941  14EA  2CCE               u5070:
 18942  14EB                     	goto	l3811
 18943  14EB  2CEC               	
 18944                           l962:	
 18945  14EC                     	line	139
 18946                           	
 18947                           l3811:	
 18948  14EC                     	clrf	(___fldiv@aexp)
 18949  14EC  01E1               	line	140
 18950                           	
 18951                           l3813:	
 18952  14ED                     	btfss	(___fldiv@grs+3),(31)&7
 18953  14ED  1FDF               	goto	u5081
 18954  14EE  2CF0               	goto	u5080
 18955  14EF  2CF1               u5081:
 18956  14F0                     	goto	l3821
 18957  14F0  2D11               u5080:
 18958  14F1                     	line	141
 18959                           	
 18960                           l3815:	
 18961  14F1                     	movlw	0FFh
 18962  14F1  30FF               	andwf	(___fldiv@grs),w
 18963  14F2  055C               	movwf	(??___fldiv+0)+0
 18964  14F3  00D0               	movlw	0FFh
 18965  14F4  30FF               	andwf	(___fldiv@grs+1),w
 18966  14F5  055D               	movwf	((??___fldiv+0)+0+1)
 18967  14F6  00D1               	movlw	0FFh
 18968  14F7  30FF               	andwf	(___fldiv@grs+2),w
 18969  14F8  055E               	movwf	((??___fldiv+0)+0+2)
 18970  14F9  00D2               	movlw	07Fh
 18971  14FA  307F               	andwf	(___fldiv@grs+3),w
 18972  14FB  055F               	movwf	((??___fldiv+0)+0+3)
 18973  14FC  00D3               	movf	3+(??___fldiv+0)+0,w
 18974  14FD  0853               	iorwf	2+(??___fldiv+0)+0,w
 18975  14FE  0452               	iorwf	1+(??___fldiv+0)+0,w
 18976  14FF  0451               	iorwf	0+(??___fldiv+0)+0,w
 18977  1500  0450               	skipnz
 18978  1501  1903               	goto	u5091
 18979  1502  2D04               	goto	u5090
 18980  1503  2D05               u5091:
 18981  1504                     	goto	l964
 18982  1504  2D08               u5090:
 18983  1505                     	line	142
 18984                           	
 18985                           l3817:	
 18986  1505                     	clrf	(___fldiv@aexp)
 18987  1505  01E1               	incf	(___fldiv@aexp),f
 18988  1506  0AE1               	line	143
 18989                           	goto	l3821
 18990  1507  2D11               	line	144
 18991                           	
 18992                           l964:	
 18993  1508                     	line	145
 18994                           	btfss	(___fldiv@b),(0)&7
 18995  1508  1C4C               	goto	u5101
 18996  1509  2D0B               	goto	u5100
 18997  150A  2D0C               u5101:
 18998  150B                     	goto	l3821
 18999  150B  2D11               u5100:
 19000  150C                     	line	146
 19001                           	
 19002                           l3819:	
 19003  150C                     	clrf	(___fldiv@aexp)
 19004  150C  01E1               	incf	(___fldiv@aexp),f
 19005  150D  0AE1               	goto	l3821
 19006  150E  2D11               	line	147
 19007                           	
 19008                           l966:	
 19009  150F                     	goto	l3821
 19010  150F  2D11               	line	148
 19011                           	
 19012                           l965:	
 19013  1510                     	goto	l3821
 19014  1510  2D11               	line	149
 19015                           	
 19016                           l963:	
 19017  1511                     	line	150
 19018                           	
 19019                           l3821:	
 19020  1511                     	movf	((___fldiv@aexp)),w
 19021  1511  0861               	btfsc	status,2
 19022  1512  1903               	goto	u5111
 19023  1513  2D15               	goto	u5110
 19024  1514  2D16               u5111:
 19025  1515                     	goto	l3831
 19026  1515  2D40               u5110:
 19027  1516                     	line	151
 19028                           	
 19029                           l3823:	
 19030  1516                     	movlw	01h
 19031  1516  3001               	addwf	(___fldiv@b),f
 19032  1517  07CC               	movlw	0
 19033  1518  3000               	addwfc	(___fldiv@b+1),f
 19034  1519  3DCD               	movlw	0
 19035  151A  3000               	addwfc	(___fldiv@b+2),f
 19036  151B  3DCE               	movlw	0
 19037  151C  3000               	addwfc	(___fldiv@b+3),f
 19038  151D  3DCF               	line	152
 19039                           	
 19040                           l3825:	
 19041  151E                     	btfss	(___fldiv@b+3),(24)&7
 19042  151E  1C4F               	goto	u5121
 19043  151F  2D21               	goto	u5120
 19044  1520  2D22               u5121:
 19045  1521                     	goto	l3831
 19046  1521  2D40               u5120:
 19047  1522                     	line	153
 19048                           	
 19049                           l3827:	
 19050  1522                     	movf	(___fldiv@b),w
 19051  1522  084C               	movwf	(??___fldiv+0)+0
 19052  1523  00D0               	movf	(___fldiv@b+1),w
 19053  1524  084D               	movwf	((??___fldiv+0)+0+1)
 19054  1525  00D1               	movf	(___fldiv@b+2),w
 19055  1526  084E               	movwf	((??___fldiv+0)+0+2)
 19056  1527  00D2               	movf	(___fldiv@b+3),w
 19057  1528  084F               	movwf	((??___fldiv+0)+0+3)
 19058  1529  00D3               	movlw	01h
 19059  152A  3001               	movwf	(??___fldiv+4)+0
 19060  152B  00D4               u5135:
 19061  152C                     	asrf	(??___fldiv+0)+3,f
 19062  152C  37D3               	rrf	(??___fldiv+0)+2,f
 19063  152D  0CD2               	rrf	(??___fldiv+0)+1,f
 19064  152E  0CD1               	rrf	(??___fldiv+0)+0,f
 19065  152F  0CD0               u5130:
 19066  1530                     	decfsz	(??___fldiv+4)+0,f
 19067  1530  0BD4               	goto	u5135
 19068  1531  2D2C               	movf	3+(??___fldiv+0)+0,w
 19069  1532  0853               	movwf	(___fldiv@b+3)
 19070  1533  00CF               	movf	2+(??___fldiv+0)+0,w
 19071  1534  0852               	movwf	(___fldiv@b+2)
 19072  1535  00CE               	movf	1+(??___fldiv+0)+0,w
 19073  1536  0851               	movwf	(___fldiv@b+1)
 19074  1537  00CD               	movf	0+(??___fldiv+0)+0,w
 19075  1538  0850               	movwf	(___fldiv@b)
 19076  1539  00CC               
 19077                           	line	154
 19078                           	
 19079                           l3829:	
 19080  153A                     	movlw	01h
 19081  153A  3001               	addwf	(___fldiv@new_exp),f
 19082  153B  07DA               	movlw	0
 19083  153C  3000               	addwfc	(___fldiv@new_exp+1),f
 19084  153D  3DDB               	goto	l3831
 19085  153E  2D40               	line	155
 19086                           	
 19087                           l968:	
 19088  153F                     	goto	l3831
 19089  153F  2D40               	line	156
 19090                           	
 19091                           l967:	
 19092  1540                     	line	159
 19093                           	
 19094                           l3831:	
 19095  1540                     	movf	(___fldiv@new_exp+1),w
 19096  1540  085B               	xorlw	80h
 19097  1541  3A80               	movwf	(??___fldiv+0)+0
 19098  1542  00D0               	movlw	(0)^80h
 19099  1543  3080               	subwf	(??___fldiv+0)+0,w
 19100  1544  0250               	skipz
 19101  1545  1D03               	goto	u5145
 19102  1546  2D49               	movlw	0FFh
 19103  1547  30FF               	subwf	(___fldiv@new_exp),w
 19104  1548  025A               u5145:
 19105  1549                     
 19106                           	skipc
 19107  1549  1C03               	goto	u5141
 19108  154A  2D4C               	goto	u5140
 19109  154B  2D4D               u5141:
 19110  154C                     	goto	l969
 19111  154C  2D5A               u5140:
 19112  154D                     	line	160
 19113                           	
 19114                           l3833:	
 19115  154D                     	movlw	0FFh
 19116  154D  30FF               	movlb 0	; select bank0
 19117  154E  0140               	movwf	(___fldiv@new_exp)
 19118  154F  00DA               	movlw	0
 19119  1550  3000               	movwf	((___fldiv@new_exp))+1
 19120  1551  00DB               	line	161
 19121                           	movlw	high highword(0)
 19122  1552  3000               	movwf	(___fldiv@b+3)
 19123  1553  00CF               	movlw	low highword(0)
 19124  1554  3000               	movwf	(___fldiv@b+2)
 19125  1555  00CE               	movlw	high(0)
 19126  1556  3000               	movwf	(___fldiv@b+1)
 19127  1557  00CD               	movlw	low(0)
 19128  1558  3000               	movwf	(___fldiv@b)
 19129  1559  00CC               
 19130                           	line	162
 19131                           	
 19132                           l969:	
 19133  155A                     	line	165
 19134                           	movlb 0	; select bank0
 19135  155A  0140               	movf	(___fldiv@new_exp+1),w
 19136  155B  085B               	xorlw	80h
 19137  155C  3A80               	movwf	(??___fldiv+0)+0
 19138  155D  00D0               	movlw	(0)^80h
 19139  155E  3080               	subwf	(??___fldiv+0)+0,w
 19140  155F  0250               	skipz
 19141  1560  1D03               	goto	u5155
 19142  1561  2D64               	movlw	01h
 19143  1562  3001               	subwf	(___fldiv@new_exp),w
 19144  1563  025A               u5155:
 19145  1564                     
 19146                           	skipnc
 19147  1564  1803               	goto	u5151
 19148  1565  2D67               	goto	u5150
 19149  1566  2D68               u5151:
 19150  1567                     	goto	l970
 19151  1567  2D74               u5150:
 19152  1568                     	line	166
 19153                           	
 19154                           l3835:	
 19155  1568                     	movlb 0	; select bank0
 19156  1568  0140               	clrf	(___fldiv@new_exp)
 19157  1569  01DA               	clrf	(___fldiv@new_exp+1)
 19158  156A  01DB               	line	167
 19159                           	
 19160                           l3837:	
 19161  156B                     	movlw	high highword(0)
 19162  156B  3000               	movwf	(___fldiv@b+3)
 19163  156C  00CF               	movlw	low highword(0)
 19164  156D  3000               	movwf	(___fldiv@b+2)
 19165  156E  00CE               	movlw	high(0)
 19166  156F  3000               	movwf	(___fldiv@b+1)
 19167  1570  00CD               	movlw	low(0)
 19168  1571  3000               	movwf	(___fldiv@b)
 19169  1572  00CC               
 19170                           	line	169
 19171                           	
 19172                           l3839:	
 19173  1573                     	clrf	(___fldiv@sign)
 19174  1573  01D9               	line	170
 19175                           	
 19176                           l970:	
 19177  1574                     	line	173
 19178                           	movlb 0	; select bank0
 19179  1574  0140               	movf	(___fldiv@new_exp),w
 19180  1575  085A               	movwf	(??___fldiv+0)+0
 19181  1576  00D0               	movf	(??___fldiv+0)+0,w
 19182  1577  0850               	movwf	(___fldiv@bexp)
 19183  1578  00E0               	line	175
 19184                           	
 19185                           l3841:	
 19186  1579                     	btfss	(___fldiv@bexp),(0)&7
 19187  1579  1C60               	goto	u5161
 19188  157A  2D7C               	goto	u5160
 19189  157B  2D7D               u5161:
 19190  157C                     	goto	l3845
 19191  157C  2D7F               u5160:
 19192  157D                     	line	176
 19193                           	
 19194                           l3843:	
 19195  157D                     	bsf	0+(___fldiv@b)+02h+(7/8),(7)&7
 19196  157D  17CE               	line	177
 19197                           	goto	l972
 19198  157E  2D83               	line	179
 19199                           	
 19200                           l971:	
 19201  157F                     	line	180
 19202                           	
 19203                           l3845:	
 19204  157F                     	movlw	low(07Fh)
 19205  157F  307F               	movwf	(??___fldiv+0)+0
 19206  1580  00D0               	movf	(??___fldiv+0)+0,w
 19207  1581  0850               	andwf	0+(___fldiv@b)+02h,f
 19208  1582  05CE               	line	181
 19209                           	
 19210                           l972:	
 19211  1583                     	line	182
 19212                           	lsrf	(___fldiv@bexp),w
 19213  1583  3660               	movwf	(??___fldiv+0)+0
 19214  1584  00D0               	movf	(??___fldiv+0)+0,w
 19215  1585  0850               	movwf	0+(___fldiv@b)+03h
 19216  1586  00CF               	line	183
 19217                           	movf	(___fldiv@sign),w
 19218  1587  0859               	movwf	(??___fldiv+0)+0
 19219  1588  00D0               	movf	(??___fldiv+0)+0,w
 19220  1589  0850               	iorwf	0+(___fldiv@b)+03h,f
 19221  158A  04CF               	line	184
 19222                           	
 19223                           l3847:	
 19224  158B                     	movf	(___fldiv@b+3),w
 19225  158B  084F               	movwf	(?___fldiv+3)
 19226  158C  00CB               	movf	(___fldiv@b+2),w
 19227  158D  084E               	movwf	(?___fldiv+2)
 19228  158E  00CA               	movf	(___fldiv@b+1),w
 19229  158F  084D               	movwf	(?___fldiv+1)
 19230  1590  00C9               	movf	(___fldiv@b),w
 19231  1591  084C               	movwf	(?___fldiv)
 19232  1592  00C8               
 19233                           	goto	l950
 19234  1593  2D94               	
 19235                           l3849:	
 19236  1594                     	line	185
 19237                           	
 19238                           l950:	
 19239  1594                     	return
 19240  1594  0008               	opt stack 0
 19241                           GLOBAL	__end_of___fldiv
 19242                           	__end_of___fldiv:
 19243  1595                     	signat	___fldiv,8316
 19244                           	global	___fladd
 19245                           
 19246 ;; *************** function ___fladd *****************
 19247 ;; Defined at:
 19248 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
 19249 ;; Parameters:    Size  Location     Type
 19250 ;;  b               4   40[BANK0 ] unsigned char 
 19251 ;;  a               4   44[BANK0 ] unsigned char 
 19252 ;; Auto vars:     Size  Location     Type
 19253 ;;  grs             1   63[BANK0 ] unsigned char 
 19254 ;;  bexp            1   62[BANK0 ] unsigned char 
 19255 ;;  aexp            1   61[BANK0 ] unsigned char 
 19256 ;;  signs           1   60[BANK0 ] unsigned char 
 19257 ;; Return value:  Size  Location     Type
 19258 ;;                  4   40[BANK0 ] unsigned char 
 19259 ;; Registers used:
 19260 ;;		wreg, status,2, status,0
 19261 ;; Tracked objects:
 19262 ;;		On entry : 0/0
 19263 ;;		On exit  : 0/0
 19264 ;;		Unchanged: 0/0
 19265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19266 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19267 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19268 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19269 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19270 ;;Total ram usage:       24 bytes
 19271 ;; Hardware stack levels used:    1
 19272 ;; Hardware stack levels required when called:    3
 19273 ;; This function calls:
 19274 ;;		Nothing
 19275 ;; This function is called by:
 19276 ;;		_convertAnalogValues
 19277 ;;		_efgtoa
 19278 ;;		___flsub
 19279 ;; This function uses a non-reentrant model
 19280 ;;
 19281                           psect	text49,local,class=CODE,delta=2,merge=1,group=1
 19282                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
 19283                           	line	10
 19284                           global __ptext49
 19285                           __ptext49:	;psect for function ___fladd
 19286  09B1                     psect	text49
 19287                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
 19288                           	line	10
 19289                           	global	__size_of___fladd
 19290                           	__size_of___fladd	equ	__end_of___fladd-___fladd
 19291  0272                     	
 19292                           ___fladd:	
 19293  09B1                     ;incstack = 0
 19294                           	opt	stack 6
 19295                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 19296                           	line	21
 19297                           	
 19298                           l3219:	
 19299  09B1                     	movlb 0	; select bank0
 19300  09B1  0140               	movf	0+(___fladd@b)+03h,w
 19301  09B2  084B               	andlw	080h
 19302  09B3  3980               	movwf	(??___fladd+0)+0
 19303  09B4  00D0               	movf	(??___fladd+0)+0,w
 19304  09B5  0850               	movwf	(___fladd@signs)
 19305  09B6  00DC               	line	22
 19306                           	
 19307                           l3221:	
 19308  09B7                     	lslf	0+(___fladd@b)+03h,w
 19309  09B7  354B               	movwf	(??___fladd+0)+0
 19310  09B8  00D0               	movf	(??___fladd+0)+0,w
 19311  09B9  0850               	movwf	(___fladd@bexp)
 19312  09BA  00DE               	line	23
 19313                           	
 19314                           l3223:	
 19315  09BB                     	btfss	0+(___fladd@b)+02h,(7)&7
 19316  09BB  1FCA               	goto	u3681
 19317  09BC  29BE               	goto	u3680
 19318  09BD  29BF               u3681:
 19319  09BE                     	goto	l3227
 19320  09BE  29C1               u3680:
 19321  09BF                     	line	24
 19322                           	
 19323                           l3225:	
 19324  09BF                     	bsf	(___fladd@bexp)+(0/8),(0)&7
 19325  09BF  145E               	goto	l3227
 19326  09C0  29C1               	line	25
 19327                           	
 19328                           l884:	
 19329  09C1                     	line	28
 19330                           	
 19331                           l3227:	
 19332  09C1                     	movf	((___fladd@bexp)),w
 19333  09C1  085E               	btfsc	status,2
 19334  09C2  1903               	goto	u3691
 19335  09C3  29C5               	goto	u3690
 19336  09C4  29C6               u3691:
 19337  09C5                     	goto	l3237
 19338  09C5  29D7               u3690:
 19339  09C6                     	line	30
 19340                           	
 19341                           l3229:	
 19342  09C6                     		incf	((___fladd@bexp)),w
 19343  09C6  0A5E               	btfss	status,2
 19344  09C7  1D03               	goto	u3701
 19345  09C8  29CA               	goto	u3700
 19346  09C9  29CB               u3701:
 19347  09CA                     	goto	l3233
 19348  09CA  29D4               u3700:
 19349  09CB                     	line	32
 19350                           	
 19351                           l3231:	
 19352  09CB                     	movlw	0x0
 19353  09CB  3000               	movwf	(___fladd@b+3)
 19354  09CC  00CB               	movlw	0x0
 19355  09CD  3000               	movwf	(___fladd@b+2)
 19356  09CE  00CA               	movlw	0x0
 19357  09CF  3000               	movwf	(___fladd@b+1)
 19358  09D0  00C9               	movlw	0x0
 19359  09D1  3000               	movwf	(___fladd@b)
 19360  09D2  00C8               
 19361                           	goto	l3233
 19362  09D3  29D4               	line	33
 19363                           	
 19364                           l886:	
 19365  09D4                     	line	35
 19366                           	
 19367                           l3233:	
 19368  09D4                     	bsf	(___fladd@b)+(23/8),(23)&7
 19369  09D4  17CA               	line	37
 19370                           	
 19371                           l3235:	
 19372  09D5                     	clrf	0+(___fladd@b)+03h
 19373  09D5  01CB               	line	38
 19374                           	goto	l3239
 19375  09D6  29E0               	line	39
 19376                           	
 19377                           l885:	
 19378  09D7                     	line	41
 19379                           	
 19380                           l3237:	
 19381  09D7                     	movlw	0x0
 19382  09D7  3000               	movwf	(___fladd@b+3)
 19383  09D8  00CB               	movlw	0x0
 19384  09D9  3000               	movwf	(___fladd@b+2)
 19385  09DA  00CA               	movlw	0x0
 19386  09DB  3000               	movwf	(___fladd@b+1)
 19387  09DC  00C9               	movlw	0x0
 19388  09DD  3000               	movwf	(___fladd@b)
 19389  09DE  00C8               
 19390                           	goto	l3239
 19391  09DF  29E0               	line	42
 19392                           	
 19393                           l887:	
 19394  09E0                     	line	44
 19395                           	
 19396                           l3239:	
 19397  09E0                     	movf	0+(___fladd@a)+03h,w
 19398  09E0  084F               	andlw	080h
 19399  09E1  3980               	movwf	(??___fladd+0)+0
 19400  09E2  00D0               	movf	(??___fladd+0)+0,w
 19401  09E3  0850               	movwf	(___fladd@aexp)
 19402  09E4  00DD               	line	46
 19403                           	
 19404                           l3241:	
 19405  09E5                     	movf	(___fladd@aexp),w
 19406  09E5  085D               	xorwf	(___fladd@signs),w
 19407  09E6  065C               	skipnz
 19408  09E7  1903               	goto	u3711
 19409  09E8  29EA               	goto	u3710
 19410  09E9  29EB               u3711:
 19411  09EA                     	goto	l3245
 19412  09EA  29ED               u3710:
 19413  09EB                     	line	47
 19414                           	
 19415                           l3243:	
 19416  09EB                     	bsf	(___fladd@signs)+(6/8),(6)&7
 19417  09EB  175C               	goto	l3245
 19418  09EC  29ED               	line	48
 19419                           	
 19420                           l888:	
 19421  09ED                     	line	49
 19422                           	
 19423                           l3245:	
 19424  09ED                     	lslf	0+(___fladd@a)+03h,w
 19425  09ED  354F               	movwf	(??___fladd+0)+0
 19426  09EE  00D0               	movf	(??___fladd+0)+0,w
 19427  09EF  0850               	movwf	(___fladd@aexp)
 19428  09F0  00DD               	line	50
 19429                           	
 19430                           l3247:	
 19431  09F1                     	btfss	0+(___fladd@a)+02h,(7)&7
 19432  09F1  1FCE               	goto	u3721
 19433  09F2  29F4               	goto	u3720
 19434  09F3  29F5               u3721:
 19435  09F4                     	goto	l3251
 19436  09F4  29F7               u3720:
 19437  09F5                     	line	51
 19438                           	
 19439                           l3249:	
 19440  09F5                     	bsf	(___fladd@aexp)+(0/8),(0)&7
 19441  09F5  145D               	goto	l3251
 19442  09F6  29F7               	line	52
 19443                           	
 19444                           l889:	
 19445  09F7                     	line	55
 19446                           	
 19447                           l3251:	
 19448  09F7                     	movf	((___fladd@aexp)),w
 19449  09F7  085D               	btfsc	status,2
 19450  09F8  1903               	goto	u3731
 19451  09F9  29FB               	goto	u3730
 19452  09FA  29FC               u3731:
 19453  09FB                     	goto	l3261
 19454  09FB  2A0D               u3730:
 19455  09FC                     	line	57
 19456                           	
 19457                           l3253:	
 19458  09FC                     		incf	((___fladd@aexp)),w
 19459  09FC  0A5D               	btfss	status,2
 19460  09FD  1D03               	goto	u3741
 19461  09FE  2A00               	goto	u3740
 19462  09FF  2A01               u3741:
 19463  0A00                     	goto	l3257
 19464  0A00  2A0A               u3740:
 19465  0A01                     	line	59
 19466                           	
 19467                           l3255:	
 19468  0A01                     	movlw	0x0
 19469  0A01  3000               	movwf	(___fladd@a+3)
 19470  0A02  00CF               	movlw	0x0
 19471  0A03  3000               	movwf	(___fladd@a+2)
 19472  0A04  00CE               	movlw	0x0
 19473  0A05  3000               	movwf	(___fladd@a+1)
 19474  0A06  00CD               	movlw	0x0
 19475  0A07  3000               	movwf	(___fladd@a)
 19476  0A08  00CC               
 19477                           	goto	l3257
 19478  0A09  2A0A               	line	60
 19479                           	
 19480                           l891:	
 19481  0A0A                     	line	62
 19482                           	
 19483                           l3257:	
 19484  0A0A                     	bsf	(___fladd@a)+(23/8),(23)&7
 19485  0A0A  17CE               	line	64
 19486                           	
 19487                           l3259:	
 19488  0A0B                     	clrf	0+(___fladd@a)+03h
 19489  0A0B  01CF               	line	65
 19490                           	goto	l892
 19491  0A0C  2A15               	line	66
 19492                           	
 19493                           l890:	
 19494  0A0D                     	line	68
 19495                           	
 19496                           l3261:	
 19497  0A0D                     	movlw	0x0
 19498  0A0D  3000               	movwf	(___fladd@a+3)
 19499  0A0E  00CF               	movlw	0x0
 19500  0A0F  3000               	movwf	(___fladd@a+2)
 19501  0A10  00CE               	movlw	0x0
 19502  0A11  3000               	movwf	(___fladd@a+1)
 19503  0A12  00CD               	movlw	0x0
 19504  0A13  3000               	movwf	(___fladd@a)
 19505  0A14  00CC               
 19506                           	line	69
 19507                           	
 19508                           l892:	
 19509  0A15                     	line	75
 19510                           	movf	(___fladd@bexp),w
 19511  0A15  085E               	subwf	(___fladd@aexp),w
 19512  0A16  025D               	skipnc
 19513  0A17  1803               	goto	u3751
 19514  0A18  2A1A               	goto	u3750
 19515  0A19  2A1B               u3751:
 19516  0A1A                     	goto	l3297
 19517  0A1A  2A61               u3750:
 19518  0A1B                     	line	77
 19519                           	
 19520                           l3263:	
 19521  0A1B                     	btfss	(___fladd@signs),(6)&7
 19522  0A1B  1F5C               	goto	u3761
 19523  0A1C  2A1E               	goto	u3760
 19524  0A1D  2A1F               u3761:
 19525  0A1E                     	goto	l3267
 19526  0A1E  2A24               u3760:
 19527  0A1F                     	line	78
 19528                           	
 19529                           l3265:	
 19530  0A1F                     	movlw	low(080h)
 19531  0A1F  3080               	movwf	(??___fladd+0)+0
 19532  0A20  00D0               	movf	(??___fladd+0)+0,w
 19533  0A21  0850               	xorwf	(___fladd@signs),f
 19534  0A22  06DC               	goto	l3267
 19535  0A23  2A24               	line	79
 19536                           	
 19537                           l894:	
 19538  0A24                     	line	81
 19539                           	
 19540                           l3267:	
 19541  0A24                     	movf	(___fladd@bexp),w
 19542  0A24  085E               	movwf	(??___fladd+0)+0
 19543  0A25  00D0               	movf	(??___fladd+0)+0,w
 19544  0A26  0850               	movwf	(___fladd@grs)
 19545  0A27  00DF               	line	82
 19546                           	
 19547                           l3269:	
 19548  0A28                     	movf	(___fladd@aexp),w
 19549  0A28  085D               	movwf	(??___fladd+0)+0
 19550  0A29  00D0               	movf	(??___fladd+0)+0,w
 19551  0A2A  0850               	movwf	(___fladd@bexp)
 19552  0A2B  00DE               	line	83
 19553                           	
 19554                           l3271:	
 19555  0A2C                     	movf	(___fladd@grs),w
 19556  0A2C  085F               	movwf	(??___fladd+0)+0
 19557  0A2D  00D0               	movf	(??___fladd+0)+0,w
 19558  0A2E  0850               	movwf	(___fladd@aexp)
 19559  0A2F  00DD               	line	84
 19560                           	
 19561                           l3273:	
 19562  0A30                     	movf	(___fladd@b),w
 19563  0A30  0848               	movwf	(??___fladd+0)+0
 19564  0A31  00D0               	movf	(??___fladd+0)+0,w
 19565  0A32  0850               	movwf	(___fladd@grs)
 19566  0A33  00DF               	line	85
 19567                           	
 19568                           l3275:	
 19569  0A34                     	movf	(___fladd@a),w
 19570  0A34  084C               	movwf	(??___fladd+0)+0
 19571  0A35  00D0               	movf	(??___fladd+0)+0,w
 19572  0A36  0850               	movwf	(___fladd@b)
 19573  0A37  00C8               	line	86
 19574                           	
 19575                           l3277:	
 19576  0A38                     	movf	(___fladd@grs),w
 19577  0A38  085F               	movwf	(??___fladd+0)+0
 19578  0A39  00D0               	movf	(??___fladd+0)+0,w
 19579  0A3A  0850               	movwf	(___fladd@a)
 19580  0A3B  00CC               	line	87
 19581                           	
 19582                           l3279:	
 19583  0A3C                     	movf	0+(___fladd@b)+01h,w
 19584  0A3C  0849               	movwf	(??___fladd+0)+0
 19585  0A3D  00D0               	movf	(??___fladd+0)+0,w
 19586  0A3E  0850               	movwf	(___fladd@grs)
 19587  0A3F  00DF               	line	88
 19588                           	
 19589                           l3281:	
 19590  0A40                     	movf	0+(___fladd@a)+01h,w
 19591  0A40  084D               	movwf	(??___fladd+0)+0
 19592  0A41  00D0               	movf	(??___fladd+0)+0,w
 19593  0A42  0850               	movwf	0+(___fladd@b)+01h
 19594  0A43  00C9               	line	89
 19595                           	
 19596                           l3283:	
 19597  0A44                     	movf	(___fladd@grs),w
 19598  0A44  085F               	movwf	(??___fladd+0)+0
 19599  0A45  00D0               	movf	(??___fladd+0)+0,w
 19600  0A46  0850               	movwf	0+(___fladd@a)+01h
 19601  0A47  00CD               	line	90
 19602                           	
 19603                           l3285:	
 19604  0A48                     	movf	0+(___fladd@b)+02h,w
 19605  0A48  084A               	movwf	(??___fladd+0)+0
 19606  0A49  00D0               	movf	(??___fladd+0)+0,w
 19607  0A4A  0850               	movwf	(___fladd@grs)
 19608  0A4B  00DF               	line	91
 19609                           	
 19610                           l3287:	
 19611  0A4C                     	movf	0+(___fladd@a)+02h,w
 19612  0A4C  084E               	movwf	(??___fladd+0)+0
 19613  0A4D  00D0               	movf	(??___fladd+0)+0,w
 19614  0A4E  0850               	movwf	0+(___fladd@b)+02h
 19615  0A4F  00CA               	line	92
 19616                           	
 19617                           l3289:	
 19618  0A50                     	movf	(___fladd@grs),w
 19619  0A50  085F               	movwf	(??___fladd+0)+0
 19620  0A51  00D0               	movf	(??___fladd+0)+0,w
 19621  0A52  0850               	movwf	0+(___fladd@a)+02h
 19622  0A53  00CE               	line	93
 19623                           	
 19624                           l3291:	
 19625  0A54                     	movf	0+(___fladd@b)+03h,w
 19626  0A54  084B               	movwf	(??___fladd+0)+0
 19627  0A55  00D0               	movf	(??___fladd+0)+0,w
 19628  0A56  0850               	movwf	(___fladd@grs)
 19629  0A57  00DF               	line	94
 19630                           	
 19631                           l3293:	
 19632  0A58                     	movf	0+(___fladd@a)+03h,w
 19633  0A58  084F               	movwf	(??___fladd+0)+0
 19634  0A59  00D0               	movf	(??___fladd+0)+0,w
 19635  0A5A  0850               	movwf	0+(___fladd@b)+03h
 19636  0A5B  00CB               	line	95
 19637                           	
 19638                           l3295:	
 19639  0A5C                     	movf	(___fladd@grs),w
 19640  0A5C  085F               	movwf	(??___fladd+0)+0
 19641  0A5D  00D0               	movf	(??___fladd+0)+0,w
 19642  0A5E  0850               	movwf	0+(___fladd@a)+03h
 19643  0A5F  00CF               	goto	l3297
 19644  0A60  2A61               	line	96
 19645                           	
 19646                           l893:	
 19647  0A61                     	line	98
 19648                           	
 19649                           l3297:	
 19650  0A61                     	clrf	(___fladd@grs)
 19651  0A61  01DF               	line	100
 19652                           	
 19653                           l3299:	
 19654  0A62                     	movf	(___fladd@bexp),w
 19655  0A62  085E               	movwf	(??___fladd+0)+0
 19656  0A63  00D0               	clrf	(??___fladd+0)+0+1
 19657  0A64  01D1               	comf	(??___fladd+0)+0,f
 19658  0A65  09D0               	comf	(??___fladd+0)+1,f
 19659  0A66  09D1               	incf	(??___fladd+0)+0,f
 19660  0A67  0AD0               	skipnz
 19661  0A68  1903               	incf	(??___fladd+0)+1,f
 19662  0A69  0AD1               	movf	(___fladd@aexp),w
 19663  0A6A  085D               	addwf	0+(??___fladd+0)+0,w
 19664  0A6B  0750               	movwf	(??___fladd+2)+0
 19665  0A6C  00D2               	movf	1+(??___fladd+0)+0,w
 19666  0A6D  0851               	skipnc
 19667  0A6E  1803               	incf	1+(??___fladd+0)+0,w
 19668  0A6F  0A51               	movwf	((??___fladd+2)+0)+1
 19669  0A70  00D3               	movf	1+(??___fladd+2)+0,w
 19670  0A71  0853               	xorlw	80h
 19671  0A72  3A80               	movwf	(??___fladd+4)+0
 19672  0A73  00D4               	movlw	(0)^80h
 19673  0A74  3080               	subwf	(??___fladd+4)+0,w
 19674  0A75  0254               	skipz
 19675  0A76  1D03               	goto	u3775
 19676  0A77  2A7A               	movlw	01Ah
 19677  0A78  301A               	subwf	0+(??___fladd+2)+0,w
 19678  0A79  0252               u3775:
 19679  0A7A                     
 19680                           	skipc
 19681  0A7A  1C03               	goto	u3771
 19682  0A7B  2A7D               	goto	u3770
 19683  0A7C  2A7E               u3771:
 19684  0A7D                     	goto	l3315
 19685  0A7D  2ABA               u3770:
 19686  0A7E                     	line	101
 19687                           	
 19688                           l3301:	
 19689  0A7E                     	movlb 0	; select bank0
 19690  0A7E  0140               	movf	(___fladd@b+3),w
 19691  0A7F  084B               	iorwf	(___fladd@b+2),w
 19692  0A80  044A               	iorwf	(___fladd@b+1),w
 19693  0A81  0449               	iorwf	(___fladd@b),w
 19694  0A82  0448               	skipz
 19695  0A83  1D03               	goto	u3781
 19696  0A84  2A86               	goto	u3780
 19697  0A85  2A88               u3781:
 19698  0A86                     	movlw	1
 19699  0A86  3001               	goto	u3790
 19700  0A87  2A89               u3780:
 19701  0A88                     	movlw	0
 19702  0A88  3000               u3790:
 19703  0A89                     	movwf	(??___fladd+0)+0
 19704  0A89  00D0               	movf	(??___fladd+0)+0,w
 19705  0A8A  0850               	movwf	(___fladd@grs)
 19706  0A8B  00DF               	line	102
 19707                           	movlw	high highword(0)
 19708  0A8C  3000               	movwf	(___fladd@b+3)
 19709  0A8D  00CB               	movlw	low highword(0)
 19710  0A8E  3000               	movwf	(___fladd@b+2)
 19711  0A8F  00CA               	movlw	high(0)
 19712  0A90  3000               	movwf	(___fladd@b+1)
 19713  0A91  00C9               	movlw	low(0)
 19714  0A92  3000               	movwf	(___fladd@b)
 19715  0A93  00C8               
 19716                           	line	103
 19717                           	movf	(___fladd@aexp),w
 19718  0A94  085D               	movwf	(??___fladd+0)+0
 19719  0A95  00D0               	movf	(??___fladd+0)+0,w
 19720  0A96  0850               	movwf	(___fladd@bexp)
 19721  0A97  00DE               	line	104
 19722                           	goto	l896
 19723  0A98  2AC2               	line	105
 19724                           	
 19725                           l895:	
 19726  0A99                     	line	106
 19727                           	goto	l3315
 19728  0A99  2ABA               	
 19729                           l898:	
 19730  0A9A                     	line	109
 19731                           	btfss	(___fladd@grs),(0)&7
 19732  0A9A  1C5F               	goto	u3801
 19733  0A9B  2A9D               	goto	u3800
 19734  0A9C  2A9E               u3801:
 19735  0A9D                     	goto	l3305
 19736  0A9D  2AA4               u3800:
 19737  0A9E                     	line	110
 19738                           	
 19739                           l3303:	
 19740  0A9E                     	lsrf	(___fladd@grs),w
 19741  0A9E  365F               	iorlw	01h
 19742  0A9F  3801               	movwf	(??___fladd+0)+0
 19743  0AA0  00D0               	movf	(??___fladd+0)+0,w
 19744  0AA1  0850               	movwf	(___fladd@grs)
 19745  0AA2  00DF               	line	111
 19746                           	goto	l3307
 19747  0AA3  2AA7               	line	112
 19748                           	
 19749                           l899:	
 19750  0AA4                     	line	113
 19751                           	
 19752                           l3305:	
 19753  0AA4                     	clrc
 19754  0AA4  1003               	rrf	(___fladd@grs),f
 19755  0AA5  0CDF               
 19756                           	goto	l3307
 19757  0AA6  2AA7               	line	114
 19758                           	
 19759                           l900:	
 19760  0AA7                     	line	115
 19761                           	
 19762                           l3307:	
 19763  0AA7                     	btfss	(___fladd@b),(0)&7
 19764  0AA7  1C48               	goto	u3811
 19765  0AA8  2AAA               	goto	u3810
 19766  0AA9  2AAB               u3811:
 19767  0AAA                     	goto	l3311
 19768  0AAA  2AAD               u3810:
 19769  0AAB                     	line	116
 19770                           	
 19771                           l3309:	
 19772  0AAB                     	bsf	(___fladd@grs)+(7/8),(7)&7
 19773  0AAB  17DF               	goto	l3311
 19774  0AAC  2AAD               	line	117
 19775                           	
 19776                           l901:	
 19777  0AAD                     	line	118
 19778                           	
 19779                           l3311:	
 19780  0AAD                     	movlw	01h
 19781  0AAD  3001               	movwf	(??___fladd+0)+0
 19782  0AAE  00D0               u3825:
 19783  0AAF                     	asrf	(___fladd@b+3),f
 19784  0AAF  37CB               	rrf	(___fladd@b+2),f
 19785  0AB0  0CCA               	rrf	(___fladd@b+1),f
 19786  0AB1  0CC9               	rrf	(___fladd@b),f
 19787  0AB2  0CC8               	decfsz	(??___fladd+0)+0&07fh,f
 19788  0AB3  0BD0               	goto	u3825
 19789  0AB4  2AAF               
 19790                           	line	119
 19791                           	
 19792                           l3313:	
 19793  0AB5                     	movlw	low(01h)
 19794  0AB5  3001               	movwf	(??___fladd+0)+0
 19795  0AB6  00D0               	movf	(??___fladd+0)+0,w
 19796  0AB7  0850               	addwf	(___fladd@bexp),f
 19797  0AB8  07DE               	goto	l3315
 19798  0AB9  2ABA               	line	120
 19799                           	
 19800                           l897:	
 19801  0ABA                     	line	106
 19802                           	
 19803                           l3315:	
 19804  0ABA                     	movlb 0	; select bank0
 19805  0ABA  0140               	movf	(___fladd@aexp),w
 19806  0ABB  085D               	subwf	(___fladd@bexp),w
 19807  0ABC  025E               	skipc
 19808  0ABD  1C03               	goto	u3831
 19809  0ABE  2AC0               	goto	u3830
 19810  0ABF  2AC1               u3831:
 19811  0AC0                     	goto	l898
 19812  0AC0  2A9A               u3830:
 19813  0AC1                     	goto	l896
 19814  0AC1  2AC2               	
 19815                           l902:	
 19816  0AC2                     	line	121
 19817                           	
 19818                           l896:	
 19819  0AC2                     	line	124
 19820                           	btfsc	(___fladd@signs),(6)&7
 19821  0AC2  1B5C               	goto	u3841
 19822  0AC3  2AC5               	goto	u3840
 19823  0AC4  2AC6               u3841:
 19824  0AC5                     	goto	l3341
 19825  0AC5  2B02               u3840:
 19826  0AC6                     	line	127
 19827                           	
 19828                           l3317:	
 19829  0AC6                     	movf	((___fladd@bexp)),w
 19830  0AC6  085E               	btfss	status,2
 19831  0AC7  1D03               	goto	u3851
 19832  0AC8  2ACA               	goto	u3850
 19833  0AC9  2ACB               u3851:
 19834  0ACA                     	goto	l3323
 19835  0ACA  2AD5               u3850:
 19836  0ACB                     	line	128
 19837                           	
 19838                           l3319:	
 19839  0ACB                     	movlw	0x0
 19840  0ACB  3000               	movwf	(?___fladd+3)
 19841  0ACC  00CB               	movlw	0x0
 19842  0ACD  3000               	movwf	(?___fladd+2)
 19843  0ACE  00CA               	movlw	0x0
 19844  0ACF  3000               	movwf	(?___fladd+1)
 19845  0AD0  00C9               	movlw	0x0
 19846  0AD1  3000               	movwf	(?___fladd)
 19847  0AD2  00C8               
 19848                           	goto	l905
 19849  0AD3  2C22               	
 19850                           l3321:	
 19851  0AD4                     	goto	l905
 19852  0AD4  2C22               	line	129
 19853                           	
 19854                           l904:	
 19855  0AD5                     	line	132
 19856                           	
 19857                           l3323:	
 19858  0AD5                     	movf	(___fladd@a),w
 19859  0AD5  084C               	addwf	(___fladd@b),f
 19860  0AD6  07C8               	movf	(___fladd@a+1),w
 19861  0AD7  084D               	addwfc	(___fladd@b+1),f
 19862  0AD8  3DC9               	movf	(___fladd@a+2),w
 19863  0AD9  084E               	addwfc	(___fladd@b+2),f
 19864  0ADA  3DCA               	movf	(___fladd@a+3),w
 19865  0ADB  084F               	addwfc	(___fladd@b+3),f
 19866  0ADC  3DCB               	line	134
 19867                           	
 19868                           l3325:	
 19869  0ADD                     	btfss	(___fladd@b+3),(24)&7
 19870  0ADD  1C4B               	goto	u3861
 19871  0ADE  2AE0               	goto	u3860
 19872  0ADF  2AE1               u3861:
 19873  0AE0                     	goto	l3375
 19874  0AE0  2BA9               u3860:
 19875  0AE1                     	line	135
 19876                           	
 19877                           l3327:	
 19878  0AE1                     	btfss	(___fladd@grs),(0)&7
 19879  0AE1  1C5F               	goto	u3871
 19880  0AE2  2AE4               	goto	u3870
 19881  0AE3  2AE5               u3871:
 19882  0AE4                     	goto	l3331
 19883  0AE4  2AEB               u3870:
 19884  0AE5                     	line	136
 19885                           	
 19886                           l3329:	
 19887  0AE5                     	lsrf	(___fladd@grs),w
 19888  0AE5  365F               	iorlw	01h
 19889  0AE6  3801               	movwf	(??___fladd+0)+0
 19890  0AE7  00D0               	movf	(??___fladd+0)+0,w
 19891  0AE8  0850               	movwf	(___fladd@grs)
 19892  0AE9  00DF               	line	137
 19893                           	goto	l3333
 19894  0AEA  2AEE               	line	138
 19895                           	
 19896                           l907:	
 19897  0AEB                     	line	139
 19898                           	
 19899                           l3331:	
 19900  0AEB                     	clrc
 19901  0AEB  1003               	rrf	(___fladd@grs),f
 19902  0AEC  0CDF               
 19903                           	goto	l3333
 19904  0AED  2AEE               	line	140
 19905                           	
 19906                           l908:	
 19907  0AEE                     	line	141
 19908                           	
 19909                           l3333:	
 19910  0AEE                     	btfss	(___fladd@b),(0)&7
 19911  0AEE  1C48               	goto	u3881
 19912  0AEF  2AF1               	goto	u3880
 19913  0AF0  2AF2               u3881:
 19914  0AF1                     	goto	l3337
 19915  0AF1  2AF4               u3880:
 19916  0AF2                     	line	142
 19917                           	
 19918                           l3335:	
 19919  0AF2                     	bsf	(___fladd@grs)+(7/8),(7)&7
 19920  0AF2  17DF               	goto	l3337
 19921  0AF3  2AF4               	line	143
 19922                           	
 19923                           l909:	
 19924  0AF4                     	line	144
 19925                           	
 19926                           l3337:	
 19927  0AF4                     	movlw	01h
 19928  0AF4  3001               	movwf	(??___fladd+0)+0
 19929  0AF5  00D0               u3895:
 19930  0AF6                     	asrf	(___fladd@b+3),f
 19931  0AF6  37CB               	rrf	(___fladd@b+2),f
 19932  0AF7  0CCA               	rrf	(___fladd@b+1),f
 19933  0AF8  0CC9               	rrf	(___fladd@b),f
 19934  0AF9  0CC8               	decfsz	(??___fladd+0)+0&07fh,f
 19935  0AFA  0BD0               	goto	u3895
 19936  0AFB  2AF6               
 19937                           	line	145
 19938                           	
 19939                           l3339:	
 19940  0AFC                     	movlw	low(01h)
 19941  0AFC  3001               	movwf	(??___fladd+0)+0
 19942  0AFD  00D0               	movf	(??___fladd+0)+0,w
 19943  0AFE  0850               	addwf	(___fladd@bexp),f
 19944  0AFF  07DE               	goto	l3375
 19945  0B00  2BA9               	line	146
 19946                           	
 19947                           l906:	
 19948  0B01                     	line	148
 19949                           	goto	l3375
 19950  0B01  2BA9               	line	149
 19951                           	
 19952                           l903:	
 19953  0B02                     	line	153
 19954                           	
 19955                           l3341:	
 19956  0B02                     	movf	(___fladd@b+3),w
 19957  0B02  084B               	xorlw	80h
 19958  0B03  3A80               	movwf	(??___fladd+0)+0
 19959  0B04  00D0               	movf	(___fladd@a+3),w
 19960  0B05  084F               	xorlw	80h
 19961  0B06  3A80               	subwf	(??___fladd+0)+0,w
 19962  0B07  0250               	
 19963                           	skipz
 19964  0B08  1D03               	goto	u3903
 19965  0B09  2B14               	movf	(___fladd@a+2),w
 19966  0B0A  084E               	subwf	(___fladd@b+2),w
 19967  0B0B  024A               	skipz
 19968  0B0C  1D03               	goto	u3903
 19969  0B0D  2B14               	movf	(___fladd@a+1),w
 19970  0B0E  084D               	subwf	(___fladd@b+1),w
 19971  0B0F  0249               	skipz
 19972  0B10  1D03               	goto	u3903
 19973  0B11  2B14               	movf	(___fladd@a),w
 19974  0B12  084C               	subwf	(___fladd@b),w
 19975  0B13  0248               u3903:
 19976  0B14                     	skipnc
 19977  0B14  1803               	goto	u3901
 19978  0B15  2B17               	goto	u3900
 19979  0B16  2B18               u3901:
 19980  0B17                     	goto	l3351
 19981  0B17  2B64               u3900:
 19982  0B18                     	line	154
 19983                           	
 19984                           l3343:	
 19985  0B18                     	movlw	0FFh
 19986  0B18  30FF               	movwf	((??___fladd+0)+0)
 19987  0B19  00D0               	movlw	0FFh
 19988  0B1A  30FF               	movwf	((??___fladd+0)+0+1)
 19989  0B1B  00D1               	movlw	0FFh
 19990  0B1C  30FF               	movwf	((??___fladd+0)+0+2)
 19991  0B1D  00D2               	movlw	0FFh
 19992  0B1E  30FF               	movwf	((??___fladd+0)+0+3)
 19993  0B1F  00D3               	movf	(___fladd@a),w
 19994  0B20  084C               	movwf	(??___fladd+4)+0
 19995  0B21  00D4               	movf	(___fladd@a+1),w
 19996  0B22  084D               	movwf	((??___fladd+4)+0+1)
 19997  0B23  00D5               	movf	(___fladd@a+2),w
 19998  0B24  084E               	movwf	((??___fladd+4)+0+2)
 19999  0B25  00D6               	movf	(___fladd@a+3),w
 20000  0B26  084F               	movwf	((??___fladd+4)+0+3)
 20001  0B27  00D7               	comf	(___fladd@b),w
 20002  0B28  0948               	movwf	(??___fladd+8)+0
 20003  0B29  00D8               	comf	(___fladd@b+1),w
 20004  0B2A  0949               	movwf	((??___fladd+8)+0+1)
 20005  0B2B  00D9               	comf	(___fladd@b+2),w
 20006  0B2C  094A               	movwf	((??___fladd+8)+0+2)
 20007  0B2D  00DA               	comf	(___fladd@b+3),w
 20008  0B2E  094B               	movwf	((??___fladd+8)+0+3)
 20009  0B2F  00DB               	incf	(??___fladd+8)+0,f
 20010  0B30  0AD8               	skipnz
 20011  0B31  1903               	incf	((??___fladd+8)+0+1),f
 20012  0B32  0AD9               	skipnz
 20013  0B33  1903               	incf	((??___fladd+8)+0+2),f
 20014  0B34  0ADA               	skipnz
 20015  0B35  1903               	incf	((??___fladd+8)+0+3),f
 20016  0B36  0ADB               	movf	0+(??___fladd+8)+0,w
 20017  0B37  0858               	addwf	(??___fladd+4)+0,f
 20018  0B38  07D4               	movf	1+(??___fladd+8)+0,w
 20019  0B39  0859               	addwfc	(??___fladd+4)+1,f
 20020  0B3A  3DD5               	movf	2+(??___fladd+8)+0,w
 20021  0B3B  085A               	addwfc	(??___fladd+4)+2,f
 20022  0B3C  3DD6               	movf	3+(??___fladd+8)+0,w
 20023  0B3D  085B               	addwfc	(??___fladd+4)+3,f
 20024  0B3E  3DD7               	movf	0+(??___fladd+4)+0,w
 20025  0B3F  0854               	addwf	(??___fladd+0)+0,f
 20026  0B40  07D0               	movf	1+(??___fladd+4)+0,w
 20027  0B41  0855               	addwfc	(??___fladd+0)+1,f
 20028  0B42  3DD1               	movf	2+(??___fladd+4)+0,w
 20029  0B43  0856               	addwfc	(??___fladd+0)+2,f
 20030  0B44  3DD2               	movf	3+(??___fladd+4)+0,w
 20031  0B45  0857               	addwfc	(??___fladd+0)+3,f
 20032  0B46  3DD3               	movf	3+(??___fladd+0)+0,w
 20033  0B47  0853               	movwf	(___fladd@b+3)
 20034  0B48  00CB               	movf	2+(??___fladd+0)+0,w
 20035  0B49  0852               	movwf	(___fladd@b+2)
 20036  0B4A  00CA               	movf	1+(??___fladd+0)+0,w
 20037  0B4B  0851               	movwf	(___fladd@b+1)
 20038  0B4C  00C9               	movf	0+(??___fladd+0)+0,w
 20039  0B4D  0850               	movwf	(___fladd@b)
 20040  0B4E  00C8               
 20041                           	line	155
 20042                           	movlw	low(080h)
 20043  0B4F  3080               	movwf	(??___fladd+0)+0
 20044  0B50  00D0               	movf	(??___fladd+0)+0,w
 20045  0B51  0850               	xorwf	(___fladd@signs),f
 20046  0B52  06DC               	line	156
 20047                           	
 20048                           l3345:	
 20049  0B53                     	comf	(___fladd@grs),f
 20050  0B53  09DF               	incf	(___fladd@grs),f
 20051  0B54  0ADF               	line	157
 20052                           	
 20053                           l3347:	
 20054  0B55                     	movf	((___fladd@grs)),w
 20055  0B55  085F               	btfss	status,2
 20056  0B56  1D03               	goto	u3911
 20057  0B57  2B59               	goto	u3910
 20058  0B58  2B5A               u3911:
 20059  0B59                     	goto	l913
 20060  0B59  2B6C               u3910:
 20061  0B5A                     	line	158
 20062                           	
 20063                           l3349:	
 20064  0B5A                     	movlw	01h
 20065  0B5A  3001               	addwf	(___fladd@b),f
 20066  0B5B  07C8               	movlw	0
 20067  0B5C  3000               	addwfc	(___fladd@b+1),f
 20068  0B5D  3DC9               	movlw	0
 20069  0B5E  3000               	addwfc	(___fladd@b+2),f
 20070  0B5F  3DCA               	movlw	0
 20071  0B60  3000               	addwfc	(___fladd@b+3),f
 20072  0B61  3DCB               	goto	l913
 20073  0B62  2B6C               	line	159
 20074                           	
 20075                           l912:	
 20076  0B63                     	line	160
 20077                           	goto	l913
 20078  0B63  2B6C               	line	161
 20079                           	
 20080                           l911:	
 20081  0B64                     	line	162
 20082                           	
 20083                           l3351:	
 20084  0B64                     	movf	(___fladd@a),w
 20085  0B64  084C               	subwf	(___fladd@b),f
 20086  0B65  02C8               	movf	(___fladd@a+1),w
 20087  0B66  084D               	subwfb	(___fladd@b+1),f
 20088  0B67  3BC9               	movf	(___fladd@a+2),w
 20089  0B68  084E               	subwfb	(___fladd@b+2),f
 20090  0B69  3BCA               	movf	(___fladd@a+3),w
 20091  0B6A  084F               	subwfb	(___fladd@b+3),f
 20092  0B6B  3BCB               	line	163
 20093                           	
 20094                           l913:	
 20095  0B6C                     	line	166
 20096                           	movf	(___fladd@b+3),w
 20097  0B6C  084B               	iorwf	(___fladd@b+2),w
 20098  0B6D  044A               	iorwf	(___fladd@b+1),w
 20099  0B6E  0449               	iorwf	(___fladd@b),w
 20100  0B6F  0448               	skipz
 20101  0B70  1D03               	goto	u3921
 20102  0B71  2B73               	goto	u3920
 20103  0B72  2B74               u3921:
 20104  0B73                     	goto	l3373
 20105  0B73  2BA3               u3920:
 20106  0B74                     	
 20107                           l3353:	
 20108  0B74                     	movf	((___fladd@grs)),w
 20109  0B74  085F               	btfss	status,2
 20110  0B75  1D03               	goto	u3931
 20111  0B76  2B78               	goto	u3930
 20112  0B77  2B79               u3931:
 20113  0B78                     	goto	l3373
 20114  0B78  2BA3               u3930:
 20115  0B79                     	line	167
 20116                           	
 20117                           l3355:	
 20118  0B79                     	movlw	0x0
 20119  0B79  3000               	movwf	(?___fladd+3)
 20120  0B7A  00CB               	movlw	0x0
 20121  0B7B  3000               	movwf	(?___fladd+2)
 20122  0B7C  00CA               	movlw	0x0
 20123  0B7D  3000               	movwf	(?___fladd+1)
 20124  0B7E  00C9               	movlw	0x0
 20125  0B7F  3000               	movwf	(?___fladd)
 20126  0B80  00C8               
 20127                           	goto	l905
 20128  0B81  2C22               	
 20129                           l3357:	
 20130  0B82                     	goto	l905
 20131  0B82  2C22               	line	168
 20132                           	
 20133                           l914:	
 20134  0B83                     	line	171
 20135                           	goto	l3373
 20136  0B83  2BA3               	
 20137                           l916:	
 20138  0B84                     	line	172
 20139                           	
 20140                           l3359:	
 20141  0B84                     	movlw	01h
 20142  0B84  3001               u3945:
 20143  0B85                     	lslf	(___fladd@b),f
 20144  0B85  35C8               	rlf	(___fladd@b+1),f
 20145  0B86  0DC9               	rlf	(___fladd@b+2),f
 20146  0B87  0DCA               	rlf	(___fladd@b+3),f
 20147  0B88  0DCB               	decfsz	wreg,f
 20148  0B89  0B89               	goto	u3945
 20149  0B8A  2B85               	line	173
 20150                           	
 20151                           l3361:	
 20152  0B8B                     	btfss	(___fladd@grs),(7)&7
 20153  0B8B  1FDF               	goto	u3951
 20154  0B8C  2B8E               	goto	u3950
 20155  0B8D  2B8F               u3951:
 20156  0B8E                     	goto	l917
 20157  0B8E  2B90               u3950:
 20158  0B8F                     	line	174
 20159                           	
 20160                           l3363:	
 20161  0B8F                     	bsf	(___fladd@b)+(0/8),(0)&7
 20162  0B8F  1448               	line	175
 20163                           	
 20164                           l917:	
 20165  0B90                     	line	176
 20166                           	btfss	(___fladd@grs),(0)&7
 20167  0B90  1C5F               	goto	u3961
 20168  0B91  2B93               	goto	u3960
 20169  0B92  2B94               u3961:
 20170  0B93                     	goto	l3367
 20171  0B93  2B97               u3960:
 20172  0B94                     	line	177
 20173                           	
 20174                           l3365:	
 20175  0B94                     	setc
 20176  0B94  1403               	rlf	(___fladd@grs),f
 20177  0B95  0DDF               	line	178
 20178                           	goto	l3369
 20179  0B96  2B9A               	line	179
 20180                           	
 20181                           l918:	
 20182  0B97                     	line	180
 20183                           	
 20184                           l3367:	
 20185  0B97                     	clrc
 20186  0B97  1003               	rlf	(___fladd@grs),f
 20187  0B98  0DDF               
 20188                           	goto	l3369
 20189  0B99  2B9A               	line	181
 20190                           	
 20191                           l919:	
 20192  0B9A                     	line	182
 20193                           	
 20194                           l3369:	
 20195  0B9A                     	movf	((___fladd@bexp)),w
 20196  0B9A  085E               	btfsc	status,2
 20197  0B9B  1903               	goto	u3971
 20198  0B9C  2B9E               	goto	u3970
 20199  0B9D  2B9F               u3971:
 20200  0B9E                     	goto	l3373
 20201  0B9E  2BA3               u3970:
 20202  0B9F                     	line	183
 20203                           	
 20204                           l3371:	
 20205  0B9F                     	movlw	01h
 20206  0B9F  3001               	subwf	(___fladd@bexp),f
 20207  0BA0  02DE               	goto	l3373
 20208  0BA1  2BA3               	line	184
 20209                           	
 20210                           l920:	
 20211  0BA2                     	goto	l3373
 20212  0BA2  2BA3               	line	185
 20213                           	
 20214                           l915:	
 20215  0BA3                     	line	171
 20216                           	
 20217                           l3373:	
 20218  0BA3                     	btfss	(___fladd@b+2),(23)&7
 20219  0BA3  1FCA               	goto	u3981
 20220  0BA4  2BA6               	goto	u3980
 20221  0BA5  2BA7               u3981:
 20222  0BA6                     	goto	l3359
 20223  0BA6  2B84               u3980:
 20224  0BA7                     	goto	l3375
 20225  0BA7  2BA9               	
 20226                           l921:	
 20227  0BA8                     	goto	l3375
 20228  0BA8  2BA9               	line	186
 20229                           	
 20230                           l910:	
 20231  0BA9                     	line	192
 20232                           	
 20233                           l3375:	
 20234  0BA9                     	clrf	(___fladd@aexp)
 20235  0BA9  01DD               	line	193
 20236                           	
 20237                           l3377:	
 20238  0BAA                     	btfss	(___fladd@grs),(7)&7
 20239  0BAA  1FDF               	goto	u3991
 20240  0BAB  2BAD               	goto	u3990
 20241  0BAC  2BAE               u3991:
 20242  0BAD                     	goto	l3385
 20243  0BAD  2BC0               u3990:
 20244  0BAE                     	line	194
 20245                           	
 20246                           l3379:	
 20247  0BAE                     	movf	(___fladd@grs),w
 20248  0BAE  085F               	andlw	07Fh
 20249  0BAF  397F               	btfsc	status,2
 20250  0BB0  1903               	goto	u4001
 20251  0BB1  2BB3               	goto	u4000
 20252  0BB2  2BB4               u4001:
 20253  0BB3                     	goto	l923
 20254  0BB3  2BB7               u4000:
 20255  0BB4                     	line	195
 20256                           	
 20257                           l3381:	
 20258  0BB4                     	clrf	(___fladd@aexp)
 20259  0BB4  01DD               	incf	(___fladd@aexp),f
 20260  0BB5  0ADD               	line	196
 20261                           	goto	l3385
 20262  0BB6  2BC0               	line	197
 20263                           	
 20264                           l923:	
 20265  0BB7                     	line	198
 20266                           	btfss	(___fladd@b),(0)&7
 20267  0BB7  1C48               	goto	u4011
 20268  0BB8  2BBA               	goto	u4010
 20269  0BB9  2BBB               u4011:
 20270  0BBA                     	goto	l3385
 20271  0BBA  2BC0               u4010:
 20272  0BBB                     	line	199
 20273                           	
 20274                           l3383:	
 20275  0BBB                     	clrf	(___fladd@aexp)
 20276  0BBB  01DD               	incf	(___fladd@aexp),f
 20277  0BBC  0ADD               	goto	l3385
 20278  0BBD  2BC0               	line	200
 20279                           	
 20280                           l925:	
 20281  0BBE                     	goto	l3385
 20282  0BBE  2BC0               	line	201
 20283                           	
 20284                           l924:	
 20285  0BBF                     	goto	l3385
 20286  0BBF  2BC0               	line	202
 20287                           	
 20288                           l922:	
 20289  0BC0                     	line	203
 20290                           	
 20291                           l3385:	
 20292  0BC0                     	movf	((___fladd@aexp)),w
 20293  0BC0  085D               	btfsc	status,2
 20294  0BC1  1903               	goto	u4021
 20295  0BC2  2BC4               	goto	u4020
 20296  0BC3  2BC5               u4021:
 20297  0BC4                     	goto	l926
 20298  0BC4  2BF4               u4020:
 20299  0BC5                     	line	204
 20300                           	
 20301                           l3387:	
 20302  0BC5                     	movlw	01h
 20303  0BC5  3001               	addwf	(___fladd@b),f
 20304  0BC6  07C8               	movlw	0
 20305  0BC7  3000               	addwfc	(___fladd@b+1),f
 20306  0BC8  3DC9               	movlw	0
 20307  0BC9  3000               	addwfc	(___fladd@b+2),f
 20308  0BCA  3DCA               	movlw	0
 20309  0BCB  3000               	addwfc	(___fladd@b+3),f
 20310  0BCC  3DCB               	line	205
 20311                           	
 20312                           l3389:	
 20313  0BCD                     	btfss	(___fladd@b+3),(24)&7
 20314  0BCD  1C4B               	goto	u4031
 20315  0BCE  2BD0               	goto	u4030
 20316  0BCF  2BD1               u4031:
 20317  0BD0                     	goto	l926
 20318  0BD0  2BF4               u4030:
 20319  0BD1                     	line	206
 20320                           	
 20321                           l3391:	
 20322  0BD1                     	movf	(___fladd@b),w
 20323  0BD1  0848               	movwf	(??___fladd+0)+0
 20324  0BD2  00D0               	movf	(___fladd@b+1),w
 20325  0BD3  0849               	movwf	((??___fladd+0)+0+1)
 20326  0BD4  00D1               	movf	(___fladd@b+2),w
 20327  0BD5  084A               	movwf	((??___fladd+0)+0+2)
 20328  0BD6  00D2               	movf	(___fladd@b+3),w
 20329  0BD7  084B               	movwf	((??___fladd+0)+0+3)
 20330  0BD8  00D3               	movlw	01h
 20331  0BD9  3001               	movwf	(??___fladd+4)+0
 20332  0BDA  00D4               u4045:
 20333  0BDB                     	asrf	(??___fladd+0)+3,f
 20334  0BDB  37D3               	rrf	(??___fladd+0)+2,f
 20335  0BDC  0CD2               	rrf	(??___fladd+0)+1,f
 20336  0BDD  0CD1               	rrf	(??___fladd+0)+0,f
 20337  0BDE  0CD0               u4040:
 20338  0BDF                     	decfsz	(??___fladd+4)+0,f
 20339  0BDF  0BD4               	goto	u4045
 20340  0BE0  2BDB               	movf	3+(??___fladd+0)+0,w
 20341  0BE1  0853               	movwf	(___fladd@b+3)
 20342  0BE2  00CB               	movf	2+(??___fladd+0)+0,w
 20343  0BE3  0852               	movwf	(___fladd@b+2)
 20344  0BE4  00CA               	movf	1+(??___fladd+0)+0,w
 20345  0BE5  0851               	movwf	(___fladd@b+1)
 20346  0BE6  00C9               	movf	0+(??___fladd+0)+0,w
 20347  0BE7  0850               	movwf	(___fladd@b)
 20348  0BE8  00C8               
 20349                           	line	207
 20350                           		incf	((___fladd@bexp)),w
 20351  0BE9  0A5E               	btfsc	status,2
 20352  0BEA  1903               	goto	u4051
 20353  0BEB  2BED               	goto	u4050
 20354  0BEC  2BEE               u4051:
 20355  0BED                     	goto	l926
 20356  0BED  2BF4               u4050:
 20357  0BEE                     	line	208
 20358                           	
 20359                           l3393:	
 20360  0BEE                     	movlw	low(01h)
 20361  0BEE  3001               	movwf	(??___fladd+0)+0
 20362  0BEF  00D0               	movf	(??___fladd+0)+0,w
 20363  0BF0  0850               	addwf	(___fladd@bexp),f
 20364  0BF1  07DE               	goto	l926
 20365  0BF2  2BF4               	line	209
 20366                           	
 20367                           l928:	
 20368  0BF3                     	goto	l926
 20369  0BF3  2BF4               	line	210
 20370                           	
 20371                           l927:	
 20372  0BF4                     	line	211
 20373                           	
 20374                           l926:	
 20375  0BF4                     	line	215
 20376                           		incf	((___fladd@bexp)),w
 20377  0BF4  0A5E               	btfsc	status,2
 20378  0BF5  1903               	goto	u4061
 20379  0BF6  2BF8               	goto	u4060
 20380  0BF7  2BF9               u4061:
 20381  0BF8                     	goto	l3397
 20382  0BF8  2BFF               u4060:
 20383  0BF9                     	
 20384                           l3395:	
 20385  0BF9                     	movf	((___fladd@bexp)),w
 20386  0BF9  085E               	btfss	status,2
 20387  0BFA  1D03               	goto	u4071
 20388  0BFB  2BFD               	goto	u4070
 20389  0BFC  2BFE               u4071:
 20390  0BFD                     	goto	l3403
 20391  0BFD  2C0F               u4070:
 20392  0BFE                     	goto	l3397
 20393  0BFE  2BFF               	
 20394                           l931:	
 20395  0BFF                     	line	216
 20396                           	
 20397                           l3397:	
 20398  0BFF                     	movlw	high highword(0)
 20399  0BFF  3000               	movwf	(___fladd@b+3)
 20400  0C00  00CB               	movlw	low highword(0)
 20401  0C01  3000               	movwf	(___fladd@b+2)
 20402  0C02  00CA               	movlw	high(0)
 20403  0C03  3000               	movwf	(___fladd@b+1)
 20404  0C04  00C9               	movlw	low(0)
 20405  0C05  3000               	movwf	(___fladd@b)
 20406  0C06  00C8               
 20407                           	line	218
 20408                           	
 20409                           l3399:	
 20410  0C07                     	movf	((___fladd@bexp)),w
 20411  0C07  085E               	btfss	status,2
 20412  0C08  1D03               	goto	u4081
 20413  0C09  2C0B               	goto	u4080
 20414  0C0A  2C0C               u4081:
 20415  0C0B                     	goto	l3403
 20416  0C0B  2C0F               u4080:
 20417  0C0C                     	line	219
 20418                           	
 20419                           l3401:	
 20420  0C0C                     	clrf	(___fladd@signs)
 20421  0C0C  01DC               	goto	l3403
 20422  0C0D  2C0F               	line	220
 20423                           	
 20424                           l932:	
 20425  0C0E                     	goto	l3403
 20426  0C0E  2C0F               	line	221
 20427                           	
 20428                           l929:	
 20429  0C0F                     	line	225
 20430                           	
 20431                           l3403:	
 20432  0C0F                     	btfss	(___fladd@bexp),(0)&7
 20433  0C0F  1C5E               	goto	u4091
 20434  0C10  2C12               	goto	u4090
 20435  0C11  2C13               u4091:
 20436  0C12                     	goto	l3407
 20437  0C12  2C15               u4090:
 20438  0C13                     	line	226
 20439                           	
 20440                           l3405:	
 20441  0C13                     	bsf	0+(___fladd@b)+02h+(7/8),(7)&7
 20442  0C13  17CA               	line	227
 20443                           	goto	l934
 20444  0C14  2C19               	line	229
 20445                           	
 20446                           l933:	
 20447  0C15                     	line	230
 20448                           	
 20449                           l3407:	
 20450  0C15                     	movlw	low(07Fh)
 20451  0C15  307F               	movwf	(??___fladd+0)+0
 20452  0C16  00D0               	movf	(??___fladd+0)+0,w
 20453  0C17  0850               	andwf	0+(___fladd@b)+02h,f
 20454  0C18  05CA               	line	231
 20455                           	
 20456                           l934:	
 20457  0C19                     	line	232
 20458                           	lsrf	(___fladd@bexp),w
 20459  0C19  365E               	movwf	(??___fladd+0)+0
 20460  0C1A  00D0               	movf	(??___fladd+0)+0,w
 20461  0C1B  0850               	movwf	0+(___fladd@b)+03h
 20462  0C1C  00CB               	line	233
 20463                           	
 20464                           l3409:	
 20465  0C1D                     	btfss	(___fladd@signs),(7)&7
 20466  0C1D  1FDC               	goto	u4101
 20467  0C1E  2C20               	goto	u4100
 20468  0C1F  2C21               u4101:
 20469  0C20                     	goto	l935
 20470  0C20  2C22               u4100:
 20471  0C21                     	line	234
 20472                           	
 20473                           l3411:	
 20474  0C21                     	bsf	0+(___fladd@b)+03h+(7/8),(7)&7
 20475  0C21  17CB               	line	235
 20476                           	
 20477                           l935:	
 20478  0C22                     	line	236
 20479                           	line	237
 20480                           	
 20481                           l905:	
 20482  0C22                     	return
 20483  0C22  0008               	opt stack 0
 20484                           GLOBAL	__end_of___fladd
 20485                           	__end_of___fladd:
 20486  0C23                     	signat	___fladd,8316
 20487                           	global	_checkStatus
 20488                           
 20489 ;; *************** function _checkStatus *****************
 20490 ;; Defined at:
 20491 ;;		line 171 in file "main.c"
 20492 ;; Parameters:    Size  Location     Type
 20493 ;;		None
 20494 ;; Auto vars:     Size  Location     Type
 20495 ;;		None
 20496 ;; Return value:  Size  Location     Type
 20497 ;;                  1    wreg      void 
 20498 ;; Registers used:
 20499 ;;		wreg, status,2, status,0, pclath, cstack
 20500 ;; Tracked objects:
 20501 ;;		On entry : 0/0
 20502 ;;		On exit  : 0/0
 20503 ;;		Unchanged: 0/0
 20504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20509 ;;Total ram usage:        0 bytes
 20510 ;; Hardware stack levels used:    1
 20511 ;; Hardware stack levels required when called:    4
 20512 ;; This function calls:
 20513 ;;		___flge
 20514 ;; This function is called by:
 20515 ;;		_main
 20516 ;; This function uses a non-reentrant model
 20517 ;;
 20518                           psect	text50,local,class=CODE,delta=2,merge=1,group=0
 20519                           	file	"main.c"
 20520                           	line	171
 20521                           global __ptext50
 20522                           __ptext50:	;psect for function _checkStatus
 20523  22E3                     psect	text50
 20524                           	file	"main.c"
 20525                           	line	171
 20526                           	global	__size_of_checkStatus
 20527                           	__size_of_checkStatus	equ	__end_of_checkStatus-_checkStatus
 20528  0026                     	
 20529                           _checkStatus:	
 20530  22E3                     ;incstack = 0
 20531                           	opt	stack 11
 20532                           ; Regs used in _checkStatus: [wreg+status,2+status,0+pclath+cstack]
 20533                           	line	173
 20534                           	
 20535                           l4877:	
 20536  22E3                     ;main.c: 173:  if (g_tempAux < -30) {
 20537                           	movlb 4	; select bank4
 20538  22E3  0144               	movf	(_g_tempAux+3)^0200h,w
 20539  22E4  0837               	movlb 0	; select bank0
 20540  22E5  0140               	movwf	(___flge@ff1+3)
 20541  22E6  00CB               	movlb 4	; select bank4
 20542  22E7  0144               	movf	(_g_tempAux+2)^0200h,w
 20543  22E8  0836               	movlb 0	; select bank0
 20544  22E9  0140               	movwf	(___flge@ff1+2)
 20545  22EA  00CA               	movlb 4	; select bank4
 20546  22EB  0144               	movf	(_g_tempAux+1)^0200h,w
 20547  22EC  0835               	movlb 0	; select bank0
 20548  22ED  0140               	movwf	(___flge@ff1+1)
 20549  22EE  00C9               	movlb 4	; select bank4
 20550  22EF  0144               	movf	(_g_tempAux)^0200h,w
 20551  22F0  0834               	movlb 0	; select bank0
 20552  22F1  0140               	movwf	(___flge@ff1)
 20553  22F2  00C8               
 20554                           	movlw	0xc1
 20555  22F3  30C1               	movwf	(___flge@ff2+3)
 20556  22F4  00CF               	movlw	0xf0
 20557  22F5  30F0               	movwf	(___flge@ff2+2)
 20558  22F6  00CE               	movlw	0x0
 20559  22F7  3000               	movwf	(___flge@ff2+1)
 20560  22F8  00CD               	movlw	0x0
 20561  22F9  3000               	movwf	(___flge@ff2)
 20562  22FA  00CC               
 20563                           	fcall	___flge
 20564  22FB  319B  233A  31A2   	btfsc	status,0
 20565  22FE  1803               	goto	u6761
 20566  22FF  2B01               	goto	u6760
 20567  2300  2B02               u6761:
 20568  2301                     	goto	l209
 20569  2301  2B05               u6760:
 20570  2302                     	line	174
 20571                           	
 20572                           l4879:	
 20573  2302                     ;main.c: 174:   g_status.NOAUXTEMP = 1;
 20574                           	movlb 3	; select bank3
 20575  2302  0143               	bsf	(_g_status)^0180h,2
 20576  2303  156D               	line	175
 20577                           ;main.c: 175:  } else
 20578                           	goto	l211
 20579  2304  2B08               	
 20580                           l209:	
 20581  2305                     	line	176
 20582                           ;main.c: 176:   g_status.NOAUXTEMP = 0;
 20583                           	movlb 3	; select bank3
 20584  2305  0143               	bcf	(_g_status)^0180h,2
 20585  2306  116D               	goto	l211
 20586  2307  2B08               	
 20587                           l210:	
 20588  2308                     	line	177
 20589                           	
 20590                           l211:	
 20591  2308                     	return
 20592  2308  0008               	opt stack 0
 20593                           GLOBAL	__end_of_checkStatus
 20594                           	__end_of_checkStatus:
 20595  2309                     	signat	_checkStatus,89
 20596                           	global	___flge
 20597                           
 20598 ;; *************** function ___flge *****************
 20599 ;; Defined at:
 20600 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flge.c"
 20601 ;; Parameters:    Size  Location     Type
 20602 ;;  ff1             4   40[BANK0 ] void 
 20603 ;;  ff2             4   44[BANK0 ] void 
 20604 ;; Auto vars:     Size  Location     Type
 20605 ;;		None
 20606 ;; Return value:  Size  Location     Type
 20607 ;;		None               void
 20608 ;; Registers used:
 20609 ;;		wreg, status,2, status,0
 20610 ;; Tracked objects:
 20611 ;;		On entry : 0/0
 20612 ;;		On exit  : 0/0
 20613 ;;		Unchanged: 0/0
 20614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20615 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20617 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20618 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20619 ;;Total ram usage:       16 bytes
 20620 ;; Hardware stack levels used:    1
 20621 ;; Hardware stack levels required when called:    3
 20622 ;; This function calls:
 20623 ;;		Nothing
 20624 ;; This function is called by:
 20625 ;;		_checkStatus
 20626 ;;		_efgtoa
 20627 ;; This function uses a non-reentrant model
 20628 ;;
 20629                           psect	text51,local,class=CODE,delta=2,merge=1,group=1
 20630                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flge.c"
 20631                           	line	4
 20632                           global __ptext51
 20633                           __ptext51:	;psect for function ___flge
 20634  1B3A                     psect	text51
 20635                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flge.c"
 20636                           	line	4
 20637                           	global	__size_of___flge
 20638                           	__size_of___flge	equ	__end_of___flge-___flge
 20639  00AE                     	
 20640                           ___flge:	
 20641  1B3A                     ;incstack = 0
 20642                           	opt	stack 7
 20643                           ; Regs used in ___flge: [wreg+status,2+status,0]
 20644                           	line	7
 20645                           	
 20646                           l3635:	
 20647  1B3A                     	movlw	0
 20648  1B3A  3000               	movlb 0	; select bank0
 20649  1B3B  0140               	andwf	(___flge@ff1),w
 20650  1B3C  0548               	movwf	(??___flge+0)+0
 20651  1B3D  00D0               	movlw	0
 20652  1B3E  3000               	andwf	(___flge@ff1+1),w
 20653  1B3F  0549               	movwf	((??___flge+0)+0+1)
 20654  1B40  00D1               	movlw	080h
 20655  1B41  3080               	andwf	(___flge@ff1+2),w
 20656  1B42  054A               	movwf	((??___flge+0)+0+2)
 20657  1B43  00D2               	movlw	07Fh
 20658  1B44  307F               	andwf	(___flge@ff1+3),w
 20659  1B45  054B               	movwf	((??___flge+0)+0+3)
 20660  1B46  00D3               	movf	3+(??___flge+0)+0,w
 20661  1B47  0853               	iorwf	2+(??___flge+0)+0,w
 20662  1B48  0452               	iorwf	1+(??___flge+0)+0,w
 20663  1B49  0451               	iorwf	0+(??___flge+0)+0,w
 20664  1B4A  0450               	skipz
 20665  1B4B  1D03               	goto	u4721
 20666  1B4C  2B4E               	goto	u4720
 20667  1B4D  2B4F               u4721:
 20668  1B4E                     	goto	l769
 20669  1B4E  2B57               u4720:
 20670  1B4F                     	line	8
 20671                           	
 20672                           l3637:	
 20673  1B4F                     	movlw	high highword(0)
 20674  1B4F  3000               	movwf	(___flge@ff1+3)
 20675  1B50  00CB               	movlw	low highword(0)
 20676  1B51  3000               	movwf	(___flge@ff1+2)
 20677  1B52  00CA               	movlw	high(0)
 20678  1B53  3000               	movwf	(___flge@ff1+1)
 20679  1B54  00C9               	movlw	low(0)
 20680  1B55  3000               	movwf	(___flge@ff1)
 20681  1B56  00C8               
 20682                           	
 20683                           l769:	
 20684  1B57                     	line	9
 20685                           	movlw	0
 20686  1B57  3000               	andwf	(___flge@ff2),w
 20687  1B58  054C               	movwf	(??___flge+0)+0
 20688  1B59  00D0               	movlw	0
 20689  1B5A  3000               	andwf	(___flge@ff2+1),w
 20690  1B5B  054D               	movwf	((??___flge+0)+0+1)
 20691  1B5C  00D1               	movlw	080h
 20692  1B5D  3080               	andwf	(___flge@ff2+2),w
 20693  1B5E  054E               	movwf	((??___flge+0)+0+2)
 20694  1B5F  00D2               	movlw	07Fh
 20695  1B60  307F               	andwf	(___flge@ff2+3),w
 20696  1B61  054F               	movwf	((??___flge+0)+0+3)
 20697  1B62  00D3               	movf	3+(??___flge+0)+0,w
 20698  1B63  0853               	iorwf	2+(??___flge+0)+0,w
 20699  1B64  0452               	iorwf	1+(??___flge+0)+0,w
 20700  1B65  0451               	iorwf	0+(??___flge+0)+0,w
 20701  1B66  0450               	skipz
 20702  1B67  1D03               	goto	u4731
 20703  1B68  2B6A               	goto	u4730
 20704  1B69  2B6B               u4731:
 20705  1B6A                     	goto	l3641
 20706  1B6A  2B74               u4730:
 20707  1B6B                     	line	10
 20708                           	
 20709                           l3639:	
 20710  1B6B                     	movlw	high highword(0)
 20711  1B6B  3000               	movwf	(___flge@ff2+3)
 20712  1B6C  00CF               	movlw	low highword(0)
 20713  1B6D  3000               	movwf	(___flge@ff2+2)
 20714  1B6E  00CE               	movlw	high(0)
 20715  1B6F  3000               	movwf	(___flge@ff2+1)
 20716  1B70  00CD               	movlw	low(0)
 20717  1B71  3000               	movwf	(___flge@ff2)
 20718  1B72  00CC               
 20719                           	goto	l3641
 20720  1B73  2B74               	
 20721                           l770:	
 20722  1B74                     	line	12
 20723                           	
 20724                           l3641:	
 20725  1B74                     	btfss	(___flge@ff1+3),(31)&7
 20726  1B74  1FCB               	goto	u4741
 20727  1B75  2B77               	goto	u4740
 20728  1B76  2B78               u4741:
 20729  1B77                     	goto	l3645
 20730  1B77  2BA0               u4740:
 20731  1B78                     	line	13
 20732                           	
 20733                           l3643:	
 20734  1B78                     	movlw	0
 20735  1B78  3000               	movwf	((??___flge+0)+0)
 20736  1B79  00D0               	movlw	0
 20737  1B7A  3000               	movwf	((??___flge+0)+0+1)
 20738  1B7B  00D1               	movlw	0
 20739  1B7C  3000               	movwf	((??___flge+0)+0+2)
 20740  1B7D  00D2               	movlw	080h
 20741  1B7E  3080               	movwf	((??___flge+0)+0+3)
 20742  1B7F  00D3               	comf	(___flge@ff1),w
 20743  1B80  0948               	movwf	(??___flge+4)+0
 20744  1B81  00D4               	comf	(___flge@ff1+1),w
 20745  1B82  0949               	movwf	((??___flge+4)+0+1)
 20746  1B83  00D5               	comf	(___flge@ff1+2),w
 20747  1B84  094A               	movwf	((??___flge+4)+0+2)
 20748  1B85  00D6               	comf	(___flge@ff1+3),w
 20749  1B86  094B               	movwf	((??___flge+4)+0+3)
 20750  1B87  00D7               	incf	(??___flge+4)+0,f
 20751  1B88  0AD4               	skipnz
 20752  1B89  1903               	incf	((??___flge+4)+0+1),f
 20753  1B8A  0AD5               	skipnz
 20754  1B8B  1903               	incf	((??___flge+4)+0+2),f
 20755  1B8C  0AD6               	skipnz
 20756  1B8D  1903               	incf	((??___flge+4)+0+3),f
 20757  1B8E  0AD7               	movf	0+(??___flge+4)+0,w
 20758  1B8F  0854               	addwf	(??___flge+0)+0,f
 20759  1B90  07D0               	movf	1+(??___flge+4)+0,w
 20760  1B91  0855               	addwfc	(??___flge+0)+1,f
 20761  1B92  3DD1               	movf	2+(??___flge+4)+0,w
 20762  1B93  0856               	addwfc	(??___flge+0)+2,f
 20763  1B94  3DD2               	movf	3+(??___flge+4)+0,w
 20764  1B95  0857               	addwfc	(??___flge+0)+3,f
 20765  1B96  3DD3               	movf	3+(??___flge+0)+0,w
 20766  1B97  0853               	movwf	(___flge@ff1+3)
 20767  1B98  00CB               	movf	2+(??___flge+0)+0,w
 20768  1B99  0852               	movwf	(___flge@ff1+2)
 20769  1B9A  00CA               	movf	1+(??___flge+0)+0,w
 20770  1B9B  0851               	movwf	(___flge@ff1+1)
 20771  1B9C  00C9               	movf	0+(??___flge+0)+0,w
 20772  1B9D  0850               	movwf	(___flge@ff1)
 20773  1B9E  00C8               
 20774                           	goto	l3645
 20775  1B9F  2BA0               	
 20776                           l771:	
 20777  1BA0                     	line	14
 20778                           	
 20779                           l3645:	
 20780  1BA0                     	btfss	(___flge@ff2+3),(31)&7
 20781  1BA0  1FCF               	goto	u4751
 20782  1BA1  2BA3               	goto	u4750
 20783  1BA2  2BA4               u4751:
 20784  1BA3                     	goto	l3649
 20785  1BA3  2BCC               u4750:
 20786  1BA4                     	line	15
 20787                           	
 20788                           l3647:	
 20789  1BA4                     	movlw	0
 20790  1BA4  3000               	movwf	((??___flge+0)+0)
 20791  1BA5  00D0               	movlw	0
 20792  1BA6  3000               	movwf	((??___flge+0)+0+1)
 20793  1BA7  00D1               	movlw	0
 20794  1BA8  3000               	movwf	((??___flge+0)+0+2)
 20795  1BA9  00D2               	movlw	080h
 20796  1BAA  3080               	movwf	((??___flge+0)+0+3)
 20797  1BAB  00D3               	comf	(___flge@ff2),w
 20798  1BAC  094C               	movwf	(??___flge+4)+0
 20799  1BAD  00D4               	comf	(___flge@ff2+1),w
 20800  1BAE  094D               	movwf	((??___flge+4)+0+1)
 20801  1BAF  00D5               	comf	(___flge@ff2+2),w
 20802  1BB0  094E               	movwf	((??___flge+4)+0+2)
 20803  1BB1  00D6               	comf	(___flge@ff2+3),w
 20804  1BB2  094F               	movwf	((??___flge+4)+0+3)
 20805  1BB3  00D7               	incf	(??___flge+4)+0,f
 20806  1BB4  0AD4               	skipnz
 20807  1BB5  1903               	incf	((??___flge+4)+0+1),f
 20808  1BB6  0AD5               	skipnz
 20809  1BB7  1903               	incf	((??___flge+4)+0+2),f
 20810  1BB8  0AD6               	skipnz
 20811  1BB9  1903               	incf	((??___flge+4)+0+3),f
 20812  1BBA  0AD7               	movf	0+(??___flge+4)+0,w
 20813  1BBB  0854               	addwf	(??___flge+0)+0,f
 20814  1BBC  07D0               	movf	1+(??___flge+4)+0,w
 20815  1BBD  0855               	addwfc	(??___flge+0)+1,f
 20816  1BBE  3DD1               	movf	2+(??___flge+4)+0,w
 20817  1BBF  0856               	addwfc	(??___flge+0)+2,f
 20818  1BC0  3DD2               	movf	3+(??___flge+4)+0,w
 20819  1BC1  0857               	addwfc	(??___flge+0)+3,f
 20820  1BC2  3DD3               	movf	3+(??___flge+0)+0,w
 20821  1BC3  0853               	movwf	(___flge@ff2+3)
 20822  1BC4  00CF               	movf	2+(??___flge+0)+0,w
 20823  1BC5  0852               	movwf	(___flge@ff2+2)
 20824  1BC6  00CE               	movf	1+(??___flge+0)+0,w
 20825  1BC7  0851               	movwf	(___flge@ff2+1)
 20826  1BC8  00CD               	movf	0+(??___flge+0)+0,w
 20827  1BC9  0850               	movwf	(___flge@ff2)
 20828  1BCA  00CC               
 20829                           	goto	l3649
 20830  1BCB  2BCC               	
 20831                           l772:	
 20832  1BCC                     	line	16
 20833                           	
 20834                           l3649:	
 20835  1BCC                     	movlw	080h
 20836  1BCC  3080               	xorwf	(___flge@ff1+3),f
 20837  1BCD  06CB               	line	17
 20838                           	
 20839                           l3651:	
 20840  1BCE                     	movlw	080h
 20841  1BCE  3080               	xorwf	(___flge@ff2+3),f
 20842  1BCF  06CF               	line	18
 20843                           	
 20844                           l3653:	
 20845  1BD0                     	movf	(___flge@ff2+3),w
 20846  1BD0  084F               	subwf	(___flge@ff1+3),w
 20847  1BD1  024B               	skipz
 20848  1BD2  1D03               	goto	u4765
 20849  1BD3  2BDE               	movf	(___flge@ff2+2),w
 20850  1BD4  084E               	subwf	(___flge@ff1+2),w
 20851  1BD5  024A               	skipz
 20852  1BD6  1D03               	goto	u4765
 20853  1BD7  2BDE               	movf	(___flge@ff2+1),w
 20854  1BD8  084D               	subwf	(___flge@ff1+1),w
 20855  1BD9  0249               	skipz
 20856  1BDA  1D03               	goto	u4765
 20857  1BDB  2BDE               	movf	(___flge@ff2),w
 20858  1BDC  084C               	subwf	(___flge@ff1),w
 20859  1BDD  0248               u4765:
 20860  1BDE                     	skipnc
 20861  1BDE  1803               	goto	u4761
 20862  1BDF  2BE1               	goto	u4760
 20863  1BE0  2BE2               u4761:
 20864  1BE1                     	goto	l3657
 20865  1BE1  2BE4               u4760:
 20866  1BE2                     	
 20867                           l3655:	
 20868  1BE2                     	clrc
 20869  1BE2  1003               	
 20870                           	goto	l777
 20871  1BE3  2BE7               	
 20872                           l774:	
 20873  1BE4                     	
 20874                           l3657:	
 20875  1BE4                     	setc
 20876  1BE4  1403               	
 20877                           	goto	l777
 20878  1BE5  2BE7               	
 20879                           l776:	
 20880  1BE6                     	goto	l777
 20881  1BE6  2BE7               	
 20882                           l3659:	
 20883  1BE7                     	line	19
 20884                           	
 20885                           l777:	
 20886  1BE7                     	return
 20887  1BE7  0008               	opt stack 0
 20888                           GLOBAL	__end_of___flge
 20889                           	__end_of___flge:
 20890  1BE8                     	signat	___flge,8312
 20891                           	global	_OLED_init
 20892                           
 20893 ;; *************** function _OLED_init *****************
 20894 ;; Defined at:
 20895 ;;		line 80 in file "oled.c"
 20896 ;; Parameters:    Size  Location     Type
 20897 ;;		None
 20898 ;; Auto vars:     Size  Location     Type
 20899 ;;		None
 20900 ;; Return value:  Size  Location     Type
 20901 ;;                  1    wreg      void 
 20902 ;; Registers used:
 20903 ;;		wreg, status,2, status,0, pclath, cstack
 20904 ;; Tracked objects:
 20905 ;;		On entry : 0/0
 20906 ;;		On exit  : 0/0
 20907 ;;		Unchanged: 0/0
 20908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20911 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20912 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20913 ;;Total ram usage:        1 bytes
 20914 ;; Hardware stack levels used:    1
 20915 ;; Hardware stack levels required when called:    7
 20916 ;; This function calls:
 20917 ;;		_OLED_command
 20918 ;;		_OLED_write4bits
 20919 ;; This function is called by:
 20920 ;;		_main
 20921 ;; This function uses a non-reentrant model
 20922 ;;
 20923                           psect	text52,local,class=CODE,delta=2,merge=1,group=0
 20924                           	file	"oled.c"
 20925                           	line	80
 20926                           global __ptext52
 20927                           __ptext52:	;psect for function _OLED_init
 20928  1A1A                     psect	text52
 20929                           	file	"oled.c"
 20930                           	line	80
 20931                           	global	__size_of_OLED_init
 20932                           	__size_of_OLED_init	equ	__end_of_OLED_init-_OLED_init
 20933  008B                     	
 20934                           _OLED_init:	
 20935  1A1A                     ;incstack = 0
 20936                           	opt	stack 8
 20937                           ; Regs used in _OLED_init: [wreg+status,2+status,0+pclath+cstack]
 20938                           	line	82
 20939                           	
 20940                           l4835:	
 20941  1A1A                     ;oled.c: 82:     LATBbits.LATB4 = 0;
 20942                           	movlb 0	; select bank0
 20943  1A1A  0140               	bcf	(25),4	;volatile
 20944  1A1B  1219               	line	83
 20945                           ;oled.c: 83:     LATBbits.LATB2 = 0;
 20946                           	bcf	(25),2	;volatile
 20947  1A1C  1119               	line	84
 20948                           ;oled.c: 84:     LATBbits.LATB3 = 0;
 20949                           	bcf	(25),3	;volatile
 20950  1A1D  1199               	line	86
 20951                           	
 20952                           l4837:	
 20953  1A1E                     ;oled.c: 86:     _delay((unsigned long)((50)*(4000000/4000.0)));
 20954                           	opt asmopt_push
 20955                           opt asmopt_off
 20956                           movlw	65
 20957  1A1E  3041               	movlb 0	; select bank0
 20958  1A1F  0140               movwf	((??_OLED_init+0)+0),f
 20959  1A20  00A7               	movlw	238
 20960  1A21  30EE               u7227:
 20961  1A22                     decfsz	wreg
 20962  1A22  0B89               	goto	u7227
 20963  1A23  2A22               	decfsz	((??_OLED_init+0)+0),f
 20964  1A24  0BA7               	goto	u7227
 20965  1A25  2A22               	nop
 20966  1A26  0000               opt asmopt_pop
 20967                           
 20968                           	line	90
 20969                           	
 20970                           l4839:	
 20971  1A27                     ;oled.c: 90:     LATBbits.LATB1 = 0;
 20972                           	movlb 0	; select bank0
 20973  1A27  0140               	bcf	(25),1	;volatile
 20974  1A28  1099               	line	91
 20975                           	
 20976                           l4841:	
 20977  1A29                     ;oled.c: 91:     LATBbits.LATB0 = 0;
 20978                           	bcf	(25),0	;volatile
 20979  1A29  1019               	line	92
 20980                           	
 20981                           l4843:	
 20982  1A2A                     ;oled.c: 92:     LATCbits.LATC5 = 0;
 20983                           	bcf	(26),5	;volatile
 20984  1A2A  129A               	line	93
 20985                           	
 20986                           l4845:	
 20987  1A2B                     ;oled.c: 93:     LATCbits.LATC4 = 0;
 20988                           	bcf	(26),4	;volatile
 20989  1A2B  121A               	line	104
 20990                           	
 20991                           l4847:	
 20992  1A2C                     ;oled.c: 104:     OLED_write4bits(0x03);
 20993                           	movlw	low(03h)
 20994  1A2C  3003               	fcall	_OLED_write4bits
 20995  1A2D  31A4  249B  319A   	line	105
 20996                           	
 20997                           l4849:	
 20998  1A30                     ;oled.c: 105:     _delay((unsigned long)((5)*(4000000/4000.0)));
 20999                           	opt asmopt_push
 21000                           opt asmopt_off
 21001                           movlw	7
 21002  1A30  3007               	movlb 0	; select bank0
 21003  1A31  0140               movwf	((??_OLED_init+0)+0),f
 21004  1A32  00A7               	movlw	125
 21005  1A33  307D               u7237:
 21006  1A34                     decfsz	wreg
 21007  1A34  0B89               	goto	u7237
 21008  1A35  2A34               	decfsz	((??_OLED_init+0)+0),f
 21009  1A36  0BA7               	goto	u7237
 21010  1A37  2A34               opt asmopt_pop
 21011                           
 21012                           	line	106
 21013                           ;oled.c: 106:     OLED_write4bits(0x08);
 21014                           	movlw	low(08h)
 21015  1A38  3008               	fcall	_OLED_write4bits
 21016  1A39  31A4  249B  319A   	line	107
 21017                           	
 21018                           l4851:	
 21019  1A3C                     ;oled.c: 107:     _delay((unsigned long)((5)*(4000000/4000.0)));
 21020                           	opt asmopt_push
 21021                           opt asmopt_off
 21022                           movlw	7
 21023  1A3C  3007               	movlb 0	; select bank0
 21024  1A3D  0140               movwf	((??_OLED_init+0)+0),f
 21025  1A3E  00A7               	movlw	125
 21026  1A3F  307D               u7247:
 21027  1A40                     decfsz	wreg
 21028  1A40  0B89               	goto	u7247
 21029  1A41  2A40               	decfsz	((??_OLED_init+0)+0),f
 21030  1A42  0BA7               	goto	u7247
 21031  1A43  2A40               opt asmopt_pop
 21032                           
 21033                           	line	109
 21034                           	
 21035                           l4853:	
 21036  1A44                     ;oled.c: 109:     OLED_write4bits(0x02);
 21037                           	movlw	low(02h)
 21038  1A44  3002               	fcall	_OLED_write4bits
 21039  1A45  31A4  249B  319A   	line	110
 21040                           ;oled.c: 110:     _delay((unsigned long)((5)*(4000000/4000.0)));
 21041                           	opt asmopt_push
 21042                           opt asmopt_off
 21043                           movlw	7
 21044  1A48  3007               	movlb 0	; select bank0
 21045  1A49  0140               movwf	((??_OLED_init+0)+0),f
 21046  1A4A  00A7               	movlw	125
 21047  1A4B  307D               u7257:
 21048  1A4C                     decfsz	wreg
 21049  1A4C  0B89               	goto	u7257
 21050  1A4D  2A4C               	decfsz	((??_OLED_init+0)+0),f
 21051  1A4E  0BA7               	goto	u7257
 21052  1A4F  2A4C               opt asmopt_pop
 21053                           
 21054                           	line	111
 21055                           	
 21056                           l4855:	
 21057  1A50                     ;oled.c: 111:     OLED_write4bits(0x02);
 21058                           	movlw	low(02h)
 21059  1A50  3002               	fcall	_OLED_write4bits
 21060  1A51  31A4  249B  319A   	line	112
 21061                           	
 21062                           l4857:	
 21063  1A54                     ;oled.c: 112:     _delay((unsigned long)((5)*(4000000/4000.0)));
 21064                           	opt asmopt_push
 21065                           opt asmopt_off
 21066                           movlw	7
 21067  1A54  3007               	movlb 0	; select bank0
 21068  1A55  0140               movwf	((??_OLED_init+0)+0),f
 21069  1A56  00A7               	movlw	125
 21070  1A57  307D               u7267:
 21071  1A58                     decfsz	wreg
 21072  1A58  0B89               	goto	u7267
 21073  1A59  2A58               	decfsz	((??_OLED_init+0)+0),f
 21074  1A5A  0BA7               	goto	u7267
 21075  1A5B  2A58               opt asmopt_pop
 21076                           
 21077                           	line	113
 21078                           ;oled.c: 113:     OLED_write4bits(0x08);
 21079                           	movlw	low(08h)
 21080  1A5C  3008               	fcall	_OLED_write4bits
 21081  1A5D  31A4  249B  319A   	line	114
 21082                           	
 21083                           l4859:	
 21084  1A60                     ;oled.c: 114:     _delay((unsigned long)((5)*(4000000/4000.0)));
 21085                           	opt asmopt_push
 21086                           opt asmopt_off
 21087                           movlw	7
 21088  1A60  3007               	movlb 0	; select bank0
 21089  1A61  0140               movwf	((??_OLED_init+0)+0),f
 21090  1A62  00A7               	movlw	125
 21091  1A63  307D               u7277:
 21092  1A64                     decfsz	wreg
 21093  1A64  0B89               	goto	u7277
 21094  1A65  2A64               	decfsz	((??_OLED_init+0)+0),f
 21095  1A66  0BA7               	goto	u7277
 21096  1A67  2A64               opt asmopt_pop
 21097                           
 21098                           	line	116
 21099                           	
 21100                           l4861:	
 21101  1A68                     ;oled.c: 116:     OLED_command(0x08);
 21102                           	movlw	low(08h)
 21103  1A68  3008               	fcall	_OLED_command
 21104  1A69  31A1  2147  319A   	line	117
 21105                           ;oled.c: 117:     _delay((unsigned long)((5)*(4000000/4000.0)));
 21106                           	opt asmopt_push
 21107                           opt asmopt_off
 21108                           movlw	7
 21109  1A6C  3007               	movlb 0	; select bank0
 21110  1A6D  0140               movwf	((??_OLED_init+0)+0),f
 21111  1A6E  00A7               	movlw	125
 21112  1A6F  307D               u7287:
 21113  1A70                     decfsz	wreg
 21114  1A70  0B89               	goto	u7287
 21115  1A71  2A70               	decfsz	((??_OLED_init+0)+0),f
 21116  1A72  0BA7               	goto	u7287
 21117  1A73  2A70               opt asmopt_pop
 21118                           
 21119                           	line	118
 21120                           	
 21121                           l4863:	
 21122  1A74                     ;oled.c: 118:     OLED_command(0x01);
 21123                           	movlw	low(01h)
 21124  1A74  3001               	fcall	_OLED_command
 21125  1A75  31A1  2147  319A   	line	119
 21126                           	
 21127                           l4865:	
 21128  1A78                     ;oled.c: 119:     _delay((unsigned long)((5)*(4000000/4000.0)));
 21129                           	opt asmopt_push
 21130                           opt asmopt_off
 21131                           movlw	7
 21132  1A78  3007               	movlb 0	; select bank0
 21133  1A79  0140               movwf	((??_OLED_init+0)+0),f
 21134  1A7A  00A7               	movlw	125
 21135  1A7B  307D               u7297:
 21136  1A7C                     decfsz	wreg
 21137  1A7C  0B89               	goto	u7297
 21138  1A7D  2A7C               	decfsz	((??_OLED_init+0)+0),f
 21139  1A7E  0BA7               	goto	u7297
 21140  1A7F  2A7C               opt asmopt_pop
 21141                           
 21142                           	line	120
 21143                           ;oled.c: 120:     OLED_command(0x06);
 21144                           	movlw	low(06h)
 21145  1A80  3006               	fcall	_OLED_command
 21146  1A81  31A1  2147  319A   	line	121
 21147                           	
 21148                           l4867:	
 21149  1A84                     ;oled.c: 121:     _delay((unsigned long)((5)*(4000000/4000.0)));
 21150                           	opt asmopt_push
 21151                           opt asmopt_off
 21152                           movlw	7
 21153  1A84  3007               	movlb 0	; select bank0
 21154  1A85  0140               movwf	((??_OLED_init+0)+0),f
 21155  1A86  00A7               	movlw	125
 21156  1A87  307D               u7307:
 21157  1A88                     decfsz	wreg
 21158  1A88  0B89               	goto	u7307
 21159  1A89  2A88               	decfsz	((??_OLED_init+0)+0),f
 21160  1A8A  0BA7               	goto	u7307
 21161  1A8B  2A88               opt asmopt_pop
 21162                           
 21163                           	line	122
 21164                           	
 21165                           l4869:	
 21166  1A8C                     ;oled.c: 122:     OLED_command(0x02);
 21167                           	movlw	low(02h)
 21168  1A8C  3002               	fcall	_OLED_command
 21169  1A8D  31A1  2147  319A   	line	123
 21170                           ;oled.c: 123:     _delay((unsigned long)((5)*(4000000/4000.0)));
 21171                           	opt asmopt_push
 21172                           opt asmopt_off
 21173                           movlw	7
 21174  1A90  3007               	movlb 0	; select bank0
 21175  1A91  0140               movwf	((??_OLED_init+0)+0),f
 21176  1A92  00A7               	movlw	125
 21177  1A93  307D               u7317:
 21178  1A94                     decfsz	wreg
 21179  1A94  0B89               	goto	u7317
 21180  1A95  2A94               	decfsz	((??_OLED_init+0)+0),f
 21181  1A96  0BA7               	goto	u7317
 21182  1A97  2A94               opt asmopt_pop
 21183                           
 21184                           	line	124
 21185                           	
 21186                           l4871:	
 21187  1A98                     ;oled.c: 124:     OLED_command(0x0C);
 21188                           	movlw	low(0Ch)
 21189  1A98  300C               	fcall	_OLED_command
 21190  1A99  31A1  2147  319A   	line	125
 21191                           	
 21192                           l4873:	
 21193  1A9C                     ;oled.c: 125:     _delay((unsigned long)((5)*(4000000/4000.0)));
 21194                           	opt asmopt_push
 21195                           opt asmopt_off
 21196                           movlw	7
 21197  1A9C  3007               	movlb 0	; select bank0
 21198  1A9D  0140               movwf	((??_OLED_init+0)+0),f
 21199  1A9E  00A7               	movlw	125
 21200  1A9F  307D               u7327:
 21201  1AA0                     decfsz	wreg
 21202  1AA0  0B89               	goto	u7327
 21203  1AA1  2AA0               	decfsz	((??_OLED_init+0)+0),f
 21204  1AA2  0BA7               	goto	u7327
 21205  1AA3  2AA0               opt asmopt_pop
 21206                           
 21207                           	line	126
 21208                           	
 21209                           l357:	
 21210  1AA4                     	return
 21211  1AA4  0008               	opt stack 0
 21212                           GLOBAL	__end_of_OLED_init
 21213                           	__end_of_OLED_init:
 21214  1AA5                     	signat	_OLED_init,89
 21215                           	global	_OLED_command
 21216                           
 21217 ;; *************** function _OLED_command *****************
 21218 ;; Defined at:
 21219 ;;		line 68 in file "oled.c"
 21220 ;; Parameters:    Size  Location     Type
 21221 ;;  value           1    wreg     unsigned char 
 21222 ;; Auto vars:     Size  Location     Type
 21223 ;;  value           1    6[BANK0 ] unsigned char 
 21224 ;; Return value:  Size  Location     Type
 21225 ;;                  1    wreg      void 
 21226 ;; Registers used:
 21227 ;;		wreg, status,2, status,0, pclath, cstack
 21228 ;; Tracked objects:
 21229 ;;		On entry : 0/0
 21230 ;;		On exit  : 0/0
 21231 ;;		Unchanged: 0/0
 21232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21234 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21236 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21237 ;;Total ram usage:        1 bytes
 21238 ;; Hardware stack levels used:    1
 21239 ;; Hardware stack levels required when called:    6
 21240 ;; This function calls:
 21241 ;;		_OLED_send
 21242 ;;		_OLED_waitForReady
 21243 ;; This function is called by:
 21244 ;;		_main
 21245 ;;		_OLED_init
 21246 ;;		_OLED_scrollDisplayLeft
 21247 ;;		_OLED_scrollDisplayRight
 21248 ;;		_OLED_print_xy
 21249 ;;		_OLED_returnHome
 21250 ;;		_OLED_setCursor
 21251 ;; This function uses a non-reentrant model
 21252 ;;
 21253                           psect	text53,local,class=CODE,delta=2,merge=1,group=0
 21254                           	line	68
 21255                           global __ptext53
 21256                           __ptext53:	;psect for function _OLED_command
 21257  2147                     psect	text53
 21258                           	file	"oled.c"
 21259                           	line	68
 21260                           	global	__size_of_OLED_command
 21261                           	__size_of_OLED_command	equ	__end_of_OLED_command-_OLED_command
 21262  000B                     	
 21263                           _OLED_command:	
 21264  2147                     ;incstack = 0
 21265                           	opt	stack 6
 21266                           ; Regs used in _OLED_command: [wreg+status,2+status,0+pclath+cstack]
 21267                           ;OLED_command@value stored from wreg
 21268                           	movlb 0	; select bank0
 21269  2147  0140               	movwf	(OLED_command@value)
 21270  2148  00A6               	line	70
 21271                           	
 21272                           l4437:	
 21273  2149                     ;oled.c: 68: void OLED_command(uint8_t value);oled.c: 69: {;oled.c: 70:     OLED_send(va
                                 lue, 0);
 21274                           	clrf	(OLED_send@mode)
 21275  2149  01A3               	movf	(OLED_command@value),w
 21276  214A  0826               	fcall	_OLED_send
 21277  214B  31A1  21A1  31A1   	line	71
 21278                           ;oled.c: 71:     OLED_waitForReady();
 21279                           	fcall	_OLED_waitForReady
 21280  214E  31A2  2230  31A1   	line	72
 21281                           	
 21282                           l351:	
 21283  2151                     	return
 21284  2151  0008               	opt stack 0
 21285                           GLOBAL	__end_of_OLED_command
 21286                           	__end_of_OLED_command:
 21287  2152                     	signat	_OLED_command,4217
 21288                           	global	_OLED_waitForReady
 21289                           
 21290 ;; *************** function _OLED_waitForReady *****************
 21291 ;; Defined at:
 21292 ;;		line 40 in file "oled.c"
 21293 ;; Parameters:    Size  Location     Type
 21294 ;;		None
 21295 ;; Auto vars:     Size  Location     Type
 21296 ;;  busy            1    0[BANK0 ] unsigned char 
 21297 ;; Return value:  Size  Location     Type
 21298 ;;                  1    wreg      void 
 21299 ;; Registers used:
 21300 ;;		wreg, status,2, status,0, pclath, cstack
 21301 ;; Tracked objects:
 21302 ;;		On entry : 0/0
 21303 ;;		On exit  : 0/0
 21304 ;;		Unchanged: 0/0
 21305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21307 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21309 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21310 ;;Total ram usage:        1 bytes
 21311 ;; Hardware stack levels used:    1
 21312 ;; Hardware stack levels required when called:    4
 21313 ;; This function calls:
 21314 ;;		_OLED_pulseEnable
 21315 ;; This function is called by:
 21316 ;;		_OLED_command
 21317 ;;		_OLED_write
 21318 ;; This function uses a non-reentrant model
 21319 ;;
 21320                           psect	text54,local,class=CODE,delta=2,merge=1,group=0
 21321                           	line	40
 21322                           global __ptext54
 21323                           __ptext54:	;psect for function _OLED_waitForReady
 21324  2230                     psect	text54
 21325                           	file	"oled.c"
 21326                           	line	40
 21327                           	global	__size_of_OLED_waitForReady
 21328                           	__size_of_OLED_waitForReady	equ	__end_of_OLED_waitForReady-_OLED_waitForReady
 21329  0023                     	
 21330                           _OLED_waitForReady:	
 21331  2230                     ;incstack = 0
 21332                           	opt	stack 7
 21333                           ; Regs used in _OLED_waitForReady: [wreg+status,2+status,0+pclath+cstack]
 21334                           	line	43
 21335                           	
 21336                           l4011:	
 21337  2230                     ;oled.c: 43:     unsigned char busy = 1;
 21338                           	movlb 0	; select bank0
 21339  2230  0140               	clrf	(OLED_waitForReady@busy)
 21340  2231  01A0               	incf	(OLED_waitForReady@busy),f
 21341  2232  0AA0               	line	45
 21342                           ;oled.c: 45:     TRISCbits.TRISC4 = 1;
 21343                           	bsf	(20),4	;volatile
 21344  2233  1614               	line	46
 21345                           ;oled.c: 46:     LATBbits.LATB4 = 0;
 21346                           	bcf	(25),4	;volatile
 21347  2234  1219               	line	47
 21348                           ;oled.c: 47:     LATBbits.LATB3 = 1;
 21349                           	bsf	(25),3	;volatile
 21350  2235  1599               	line	49
 21351                           ;oled.c: 49:     do
 21352                           	
 21353                           l346:	
 21354  2236                     	line	51
 21355                           ;oled.c: 50:     {;oled.c: 51:         LATBbits.LATB2 = 0;
 21356                           	bcf	(25),2	;volatile
 21357  2236  1119               	line	52
 21358                           	
 21359                           l4013:	
 21360  2237                     ;oled.c: 52:         _delay((unsigned long)((10)*(4000000/4000000.0)));
 21361                           	opt asmopt_push
 21362                           opt asmopt_off
 21363                           	movlw	3
 21364  2237  3003               u7337:
 21365  2238                     decfsz	wreg
 21366  2238  0B89               	goto	u7337
 21367  2239  2A38               	nop
 21368  223A  0000               opt asmopt_pop
 21369                           
 21370                           	line	53
 21371                           	
 21372                           l4015:	
 21373  223B                     ;oled.c: 53:         LATBbits.LATB2 = 1;
 21374                           	movlb 0	; select bank0
 21375  223B  0140               	bsf	(25),2	;volatile
 21376  223C  1519               	line	55
 21377                           ;oled.c: 55:         _delay((unsigned long)((10)*(4000000/4000000.0)));
 21378                           	opt asmopt_push
 21379                           opt asmopt_off
 21380                           	movlw	3
 21381  223D  3003               u7347:
 21382  223E                     decfsz	wreg
 21383  223E  0B89               	goto	u7347
 21384  223F  2A3E               	nop
 21385  2240  0000               opt asmopt_pop
 21386                           
 21387                           	line	56
 21388                           	
 21389                           l4017:	
 21390  2241                     ;oled.c: 56:         busy = PORTCbits.RC4;
 21391                           	movlw	0
 21392  2241  3000               	movlb 0	; select bank0
 21393  2242  0140               	btfsc	(14),4	;volatile
 21394  2243  1A0E               	movlw	1
 21395  2244  3001               	movwf	(OLED_waitForReady@busy)
 21396  2245  00A0               	line	58
 21397                           	
 21398                           l4019:	
 21399  2246                     ;oled.c: 58:         LATBbits.LATB2 = 0;
 21400                           	bcf	(25),2	;volatile
 21401  2246  1119               	line	60
 21402                           	
 21403                           l4021:	
 21404  2247                     ;oled.c: 60:         OLED_pulseEnable();
 21405                           	fcall	_OLED_pulseEnable
 21406  2247  3190  2001  31A2   	line	61
 21407                           	
 21408                           l4023:	
 21409  224A                     ;oled.c: 61:     }
 21410                           	movlb 0	; select bank0
 21411  224A  0140               	movf	((OLED_waitForReady@busy)),w
 21412  224B  0820               	btfss	status,2
 21413  224C  1D03               	goto	u5461
 21414  224D  2A4F               	goto	u5460
 21415  224E  2A50               u5461:
 21416  224F                     	goto	l346
 21417  224F  2A36               u5460:
 21418  2250                     	
 21419                           l347:	
 21420  2250                     	line	64
 21421                           ;oled.c: 64:     TRISCbits.TRISC4 = 0;
 21422                           	bcf	(20),4	;volatile
 21423  2250  1214               	line	65
 21424                           ;oled.c: 65:     LATBbits.LATB3 = 0;
 21425                           	bcf	(25),3	;volatile
 21426  2251  1199               	line	66
 21427                           	
 21428                           l348:	
 21429  2252                     	return
 21430  2252  0008               	opt stack 0
 21431                           GLOBAL	__end_of_OLED_waitForReady
 21432                           	__end_of_OLED_waitForReady:
 21433  2253                     	signat	_OLED_waitForReady,89
 21434                           	global	_OLED_send
 21435                           
 21436 ;; *************** function _OLED_send *****************
 21437 ;; Defined at:
 21438 ;;		line 30 in file "oled.c"
 21439 ;; Parameters:    Size  Location     Type
 21440 ;;  value           1    wreg     unsigned char 
 21441 ;;  mode            1    3[BANK0 ] unsigned char 
 21442 ;; Auto vars:     Size  Location     Type
 21443 ;;  value           1    5[BANK0 ] unsigned char 
 21444 ;; Return value:  Size  Location     Type
 21445 ;;                  1    wreg      void 
 21446 ;; Registers used:
 21447 ;;		wreg, status,2, status,0, pclath, cstack
 21448 ;; Tracked objects:
 21449 ;;		On entry : 0/0
 21450 ;;		On exit  : 0/0
 21451 ;;		Unchanged: 0/0
 21452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21453 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21454 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21455 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21456 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21457 ;;Total ram usage:        3 bytes
 21458 ;; Hardware stack levels used:    1
 21459 ;; Hardware stack levels required when called:    5
 21460 ;; This function calls:
 21461 ;;		_OLED_write4bits
 21462 ;; This function is called by:
 21463 ;;		_OLED_command
 21464 ;;		_OLED_write
 21465 ;; This function uses a non-reentrant model
 21466 ;;
 21467                           psect	text55,local,class=CODE,delta=2,merge=1,group=0
 21468                           	line	30
 21469                           global __ptext55
 21470                           __ptext55:	;psect for function _OLED_send
 21471  21A1                     psect	text55
 21472                           	file	"oled.c"
 21473                           	line	30
 21474                           	global	__size_of_OLED_send
 21475                           	__size_of_OLED_send	equ	__end_of_OLED_send-_OLED_send
 21476  0018                     	
 21477                           _OLED_send:	
 21478  21A1                     ;incstack = 0
 21479                           	opt	stack 6
 21480                           ; Regs used in _OLED_send: [wreg+status,2+status,0+pclath+cstack]
 21481                           ;OLED_send@value stored from wreg
 21482                           	movlb 0	; select bank0
 21483  21A1  0140               	movwf	(OLED_send@value)
 21484  21A2  00A5               	line	32
 21485                           	
 21486                           l4003:	
 21487  21A3                     ;oled.c: 30: void OLED_send(uint8_t value, uint8_t mode);oled.c: 31: {;oled.c: 32:     L
                                 ATBbits.LATB4 = mode;
 21488                           	rrf	(OLED_send@mode),w
 21489  21A3  0C23               	skipc
 21490  21A4  1C03               	bcf	(25),4	;volatile
 21491  21A5  1219               	skipnc
 21492  21A6  1803               	bsf	(25),4	;volatile
 21493  21A7  1619               	line	33
 21494                           	
 21495                           l4005:	
 21496  21A8                     ;oled.c: 33:     LATBbits.LATB3 = 0;
 21497                           	bcf	(25),3	;volatile
 21498  21A8  1199               	line	35
 21499                           	
 21500                           l4007:	
 21501  21A9                     ;oled.c: 35:     OLED_write4bits(value>>4);
 21502                           	movf	(OLED_send@value),w
 21503  21A9  0825               	movwf	(??_OLED_send+0)+0
 21504  21AA  00A4               	movlw	04h
 21505  21AB  3004               u5455:
 21506  21AC                     	lsrf	(??_OLED_send+0)+0,f
 21507  21AC  36A4               	decfsz	wreg,f
 21508  21AD  0B89               	goto	u5455
 21509  21AE  29AC               	movf	0+(??_OLED_send+0)+0,w
 21510  21AF  0824               	fcall	_OLED_write4bits
 21511  21B0  31A4  249B  31A1   	line	36
 21512                           	
 21513                           l4009:	
 21514  21B3                     ;oled.c: 36:     OLED_write4bits(value);
 21515                           	movlb 0	; select bank0
 21516  21B3  0140               	movf	(OLED_send@value),w
 21517  21B4  0825               	fcall	_OLED_write4bits
 21518  21B5  31A4  249B  31A1   	line	37
 21519                           	
 21520                           l343:	
 21521  21B8                     	return
 21522  21B8  0008               	opt stack 0
 21523                           GLOBAL	__end_of_OLED_send
 21524                           	__end_of_OLED_send:
 21525  21B9                     	signat	_OLED_send,8313
 21526                           	global	_OLED_write4bits
 21527                           
 21528 ;; *************** function _OLED_write4bits *****************
 21529 ;; Defined at:
 21530 ;;		line 19 in file "oled.c"
 21531 ;; Parameters:    Size  Location     Type
 21532 ;;  value           1    wreg     unsigned char 
 21533 ;; Auto vars:     Size  Location     Type
 21534 ;;  value           1    2[BANK0 ] unsigned char 
 21535 ;; Return value:  Size  Location     Type
 21536 ;;                  1    wreg      void 
 21537 ;; Registers used:
 21538 ;;		wreg, status,2, status,0, pclath, cstack
 21539 ;; Tracked objects:
 21540 ;;		On entry : 0/0
 21541 ;;		On exit  : 0/0
 21542 ;;		Unchanged: 0/0
 21543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21545 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21546 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21547 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21548 ;;Total ram usage:        3 bytes
 21549 ;; Hardware stack levels used:    1
 21550 ;; Hardware stack levels required when called:    4
 21551 ;; This function calls:
 21552 ;;		_OLED_pulseEnable
 21553 ;; This function is called by:
 21554 ;;		_OLED_send
 21555 ;;		_OLED_init
 21556 ;; This function uses a non-reentrant model
 21557 ;;
 21558                           psect	text56,local,class=CODE,delta=2,merge=1,group=0
 21559                           	line	19
 21560                           global __ptext56
 21561                           __ptext56:	;psect for function _OLED_write4bits
 21562  249B                     psect	text56
 21563                           	file	"oled.c"
 21564                           	line	19
 21565                           	global	__size_of_OLED_write4bits
 21566                           	__size_of_OLED_write4bits	equ	__end_of_OLED_write4bits-_OLED_write4bits
 21567  0040                     	
 21568                           _OLED_write4bits:	
 21569  249B                     ;incstack = 0
 21570                           	opt	stack 6
 21571                           ; Regs used in _OLED_write4bits: [wreg+status,2+status,0+pclath+cstack]
 21572                           ;OLED_write4bits@value stored from wreg
 21573                           	movlb 0	; select bank0
 21574  249B  0140               	movwf	(OLED_write4bits@value)
 21575  249C  00A2               	line	21
 21576                           	
 21577                           l3427:	
 21578  249D                     ;oled.c: 19: void OLED_write4bits(uint8_t value);oled.c: 20: {;oled.c: 21:     LATBbits.
                                 LATB1 = (value >> 0) & 0x01;
 21579                           	movf	(OLED_write4bits@value),w
 21580  249D  0822               	andlw	01h
 21581  249E  3901               	movwf	(??_OLED_write4bits+0)+0
 21582  249F  00A0               	rlf	(??_OLED_write4bits+0)+0,f
 21583  24A0  0DA0               	movf	(25),w	;volatile
 21584  24A1  0819               	xorwf	(??_OLED_write4bits+0)+0,w
 21585  24A2  0620               	andlw	not (((1<<1)-1)<<1)
 21586  24A3  39FD               	xorwf	(??_OLED_write4bits+0)+0,w
 21587  24A4  0620               	movwf	(25)	;volatile
 21588  24A5  0099               	line	22
 21589                           ;oled.c: 22:     LATBbits.LATB0 = (value >> 1) & 0x01;
 21590                           	movf	(OLED_write4bits@value),w
 21591  24A6  0822               	movwf	(??_OLED_write4bits+0)+0
 21592  24A7  00A0               	movlw	01h
 21593  24A8  3001               u4145:
 21594  24A9                     	lsrf	(??_OLED_write4bits+0)+0,f
 21595  24A9  36A0               	decfsz	wreg,f
 21596  24AA  0B89               	goto	u4145
 21597  24AB  2CA9               	movlw	low(01h)
 21598  24AC  3001               	andwf	0+(??_OLED_write4bits+0)+0,w
 21599  24AD  0520               	movwf	(??_OLED_write4bits+1)+0
 21600  24AE  00A1               	movf	(25),w	;volatile
 21601  24AF  0819               	xorwf	0+(??_OLED_write4bits+1)+0,w
 21602  24B0  0621               	andlw	not ((1<<1)-1)
 21603  24B1  39FE               	xorwf	0+(??_OLED_write4bits+1)+0,w
 21604  24B2  0621               	movwf	(25)	;volatile
 21605  24B3  0099               	line	23
 21606                           ;oled.c: 23:     LATCbits.LATC5 = (value >> 2) & 0x01;
 21607                           	movf	(OLED_write4bits@value),w
 21608  24B4  0822               	movwf	(??_OLED_write4bits+0)+0
 21609  24B5  00A0               	movlw	02h
 21610  24B6  3002               u4155:
 21611  24B7                     	lsrf	(??_OLED_write4bits+0)+0,f
 21612  24B7  36A0               	decfsz	wreg,f
 21613  24B8  0B89               	goto	u4155
 21614  24B9  2CB7               	movf	0+(??_OLED_write4bits+0)+0,w
 21615  24BA  0820               	andlw	01h
 21616  24BB  3901               	movwf	(??_OLED_write4bits+1)+0
 21617  24BC  00A1               	swapf	(??_OLED_write4bits+1)+0,f
 21618  24BD  0EA1               	rlf	(??_OLED_write4bits+1)+0,f
 21619  24BE  0DA1               	movf	(26),w	;volatile
 21620  24BF  081A               	xorwf	(??_OLED_write4bits+1)+0,w
 21621  24C0  0621               	andlw	not (((1<<1)-1)<<5)
 21622  24C1  39DF               	xorwf	(??_OLED_write4bits+1)+0,w
 21623  24C2  0621               	movwf	(26)	;volatile
 21624  24C3  009A               	line	24
 21625                           ;oled.c: 24:     LATCbits.LATC4 = (value >> 3) & 0x01;
 21626                           	movf	(OLED_write4bits@value),w
 21627  24C4  0822               	movwf	(??_OLED_write4bits+0)+0
 21628  24C5  00A0               	movlw	03h
 21629  24C6  3003               u4165:
 21630  24C7                     	lsrf	(??_OLED_write4bits+0)+0,f
 21631  24C7  36A0               	decfsz	wreg,f
 21632  24C8  0B89               	goto	u4165
 21633  24C9  2CC7               	movf	0+(??_OLED_write4bits+0)+0,w
 21634  24CA  0820               	andlw	01h
 21635  24CB  3901               	movwf	(??_OLED_write4bits+1)+0
 21636  24CC  00A1               	swapf	(??_OLED_write4bits+1)+0,f
 21637  24CD  0EA1               	movf	(26),w	;volatile
 21638  24CE  081A               	xorwf	(??_OLED_write4bits+1)+0,w
 21639  24CF  0621               	andlw	not (((1<<1)-1)<<4)
 21640  24D0  39EF               	xorwf	(??_OLED_write4bits+1)+0,w
 21641  24D1  0621               	movwf	(26)	;volatile
 21642  24D2  009A               	line	26
 21643                           	
 21644                           l3429:	
 21645  24D3                     ;oled.c: 26:     _delay((unsigned long)((50)*(4000000/4000000.0)));
 21646                           	opt asmopt_push
 21647                           opt asmopt_off
 21648                           	movlw	16
 21649  24D3  3010               u7357:
 21650  24D4                     decfsz	wreg
 21651  24D4  0B89               	goto	u7357
 21652  24D5  2CD4               	nop2
 21653  24D6  3200               opt asmopt_pop
 21654                           
 21655                           	line	27
 21656                           	
 21657                           l3431:	
 21658  24D7                     ;oled.c: 27:     OLED_pulseEnable();
 21659                           	fcall	_OLED_pulseEnable
 21660  24D7  3190  2001  31A4   	line	28
 21661                           	
 21662                           l340:	
 21663  24DA                     	return
 21664  24DA  0008               	opt stack 0
 21665                           GLOBAL	__end_of_OLED_write4bits
 21666                           	__end_of_OLED_write4bits:
 21667  24DB                     	signat	_OLED_write4bits,4217
 21668                           	global	_OLED_pulseEnable
 21669                           
 21670 ;; *************** function _OLED_pulseEnable *****************
 21671 ;; Defined at:
 21672 ;;		line 12 in file "oled.c"
 21673 ;; Parameters:    Size  Location     Type
 21674 ;;		None
 21675 ;; Auto vars:     Size  Location     Type
 21676 ;;		None
 21677 ;; Return value:  Size  Location     Type
 21678 ;;                  1    wreg      void 
 21679 ;; Registers used:
 21680 ;;		wreg
 21681 ;; Tracked objects:
 21682 ;;		On entry : 0/0
 21683 ;;		On exit  : 0/0
 21684 ;;		Unchanged: 0/0
 21685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21690 ;;Total ram usage:        0 bytes
 21691 ;; Hardware stack levels used:    1
 21692 ;; Hardware stack levels required when called:    3
 21693 ;; This function calls:
 21694 ;;		Nothing
 21695 ;; This function is called by:
 21696 ;;		_OLED_write4bits
 21697 ;;		_OLED_waitForReady
 21698 ;; This function uses a non-reentrant model
 21699 ;;
 21700                           psect	text57,local,class=CODE,delta=2,merge=1,group=0
 21701                           	line	12
 21702                           global __ptext57
 21703                           __ptext57:	;psect for function _OLED_pulseEnable
 21704  1001                     psect	text57
 21705                           	file	"oled.c"
 21706                           	line	12
 21707                           	global	__size_of_OLED_pulseEnable
 21708                           	__size_of_OLED_pulseEnable	equ	__end_of_OLED_pulseEnable-_OLED_pulseEnable
 21709  0009                     	
 21710                           _OLED_pulseEnable:	
 21711  1001                     ;incstack = 0
 21712                           	opt	stack 7
 21713                           ; Regs used in _OLED_pulseEnable: [wreg]
 21714                           	line	14
 21715                           	
 21716                           l3191:	
 21717  1001                     ;oled.c: 14:     LATBbits.LATB2 = 1;
 21718                           	movlb 0	; select bank0
 21719  1001  0140               	bsf	(25),2	;volatile
 21720  1002  1519               	line	15
 21721                           	
 21722                           l3193:	
 21723  1003                     ;oled.c: 15:     _delay((unsigned long)((50)*(4000000/4000000.0)));
 21724                           	opt asmopt_push
 21725                           opt asmopt_off
 21726                           	movlw	16
 21727  1003  3010               u7367:
 21728  1004                     decfsz	wreg
 21729  1004  0B89               	goto	u7367
 21730  1005  2804               	nop2
 21731  1006  3200               opt asmopt_pop
 21732                           
 21733                           	line	16
 21734                           	
 21735                           l3195:	
 21736  1007                     ;oled.c: 16:     LATBbits.LATB2 = 0;
 21737                           	movlb 0	; select bank0
 21738  1007  0140               	bcf	(25),2	;volatile
 21739  1008  1119               	line	17
 21740                           	
 21741                           l337:	
 21742  1009                     	return
 21743  1009  0008               	opt stack 0
 21744                           GLOBAL	__end_of_OLED_pulseEnable
 21745                           	__end_of_OLED_pulseEnable:
 21746  100A                     	signat	_OLED_pulseEnable,89
 21747                           	global	_ISR
 21748                           
 21749 ;; *************** function _ISR *****************
 21750 ;; Defined at:
 21751 ;;		line 384 in file "main.c"
 21752 ;; Parameters:    Size  Location     Type
 21753 ;;		None
 21754 ;; Auto vars:     Size  Location     Type
 21755 ;;		None
 21756 ;; Return value:  Size  Location     Type
 21757 ;;                  1    wreg      void 
 21758 ;; Registers used:
 21759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21760 ;; Tracked objects:
 21761 ;;		On entry : 0/0
 21762 ;;		On exit  : 0/0
 21763 ;;		Unchanged: 0/0
 21764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21767 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21768 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21769 ;;Total ram usage:        1 bytes
 21770 ;; Hardware stack levels used:    1
 21771 ;; Hardware stack levels required when called:    2
 21772 ;; This function calls:
 21773 ;;		___llmod
 21774 ;;		_pushButtonISR
 21775 ;;		_rotISR
 21776 ;;		_uartReceiveISR
 21777 ;; This function is called by:
 21778 ;;		Interrupt level 1
 21779 ;; This function uses a non-reentrant model
 21780 ;;
 21781                           psect	intentry,class=CODE,delta=2
 21782                           global __pintentry
 21783                           __pintentry:
 21784  0004                     psect	intentry
 21785                           	file	"main.c"
 21786                           	line	384
 21787                           	global	__size_of_ISR
 21788                           	__size_of_ISR	equ	__end_of_ISR-_ISR
 21789  0091                     	
 21790                           _ISR:	
 21791  0004                     ;incstack = 0
 21792                           	opt	stack 4
 21793                           	bsf int$flags,0 ;set compiler interrupt flag (level 1)
 21794  0004  147E               ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21795                           psect	intentry
 21796                           	pagesel	$
 21797  0005  3180               	line	386
 21798                           	
 21799                           i1l5069:	
 21800  0006                     ;main.c: 386:  if (PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1) {
 21801                           	movlb 14	; select bank14
 21802  0006  014E               	btfss	(1814)^0700h,5	;volatile
 21803  0007  1E96               	goto	u705_21
 21804  0008  280A               	goto	u705_20
 21805  0009  280B               u705_21:
 21806  000A                     	goto	i1l284
 21807  000A  2819               u705_20:
 21808  000B                     	
 21809                           i1l5071:	
 21810  000B                     	btfss	(1804)^0700h,5	;volatile
 21811  000B  1E8C               	goto	u706_21
 21812  000C  280E               	goto	u706_20
 21813  000D  280F               u706_21:
 21814  000E                     	goto	i1l284
 21815  000E  2819               u706_20:
 21816  000F                     	line	389
 21817                           	
 21818                           i1l5073:	
 21819  000F                     ;main.c: 389:   g_10msTick++;
 21820                           	movlw	low(01h)
 21821  000F  3001               	movwf	(??_ISR+0)+0
 21822  0010  00FA               	movf	(??_ISR+0)+0,w
 21823  0011  087A               	addwf	(_g_10msTick),f	;volatile
 21824  0012  07FD               	line	390
 21825                           	
 21826                           i1l5075:	
 21827  0013                     ;main.c: 390:   TMR0 = 178;
 21828                           	movlw	low(0B2h)
 21829  0013  30B2               	movlb 11	; select bank11
 21830  0014  014B               	movwf	(1436)^0580h	;volatile
 21831  0015  009C               	line	391
 21832                           	
 21833                           i1l5077:	
 21834  0016                     ;main.c: 391:   PIR0bits.TMR0IF = 0;
 21835                           	movlb 14	; select bank14
 21836  0016  014E               	bcf	(1804)^0700h,5	;volatile
 21837  0017  128C               	line	392
 21838                           ;main.c: 392:  } else if (PIE0bits.IOCIE == 1 && PIR0bits.IOCIF == 1) {
 21839                           	goto	i1l296
 21840  0018  2893               	
 21841                           i1l284:	
 21842  0019                     	btfss	(1814)^0700h,4	;volatile
 21843  0019  1E16               	goto	u707_21
 21844  001A  281C               	goto	u707_20
 21845  001B  281D               u707_21:
 21846  001C                     	goto	i1l286
 21847  001C  2843               u707_20:
 21848  001D                     	
 21849                           i1l5079:	
 21850  001D                     	btfss	(1804)^0700h,4	;volatile
 21851  001D  1E0C               	goto	u708_21
 21852  001E  2820               	goto	u708_20
 21853  001F  2821               u708_21:
 21854  0020                     	goto	i1l286
 21855  0020  2843               u708_20:
 21856  0021                     	line	394
 21857                           	
 21858                           i1l5081:	
 21859  0021                     ;main.c: 394:   if (IOCAFbits.IOCAF7 == 1) {
 21860                           	movlb 62	; select bank62
 21861  0021  017E               	btfss	(7999)^01F00h,7	;volatile
 21862  0022  1FBF               	goto	u709_21
 21863  0023  2825               	goto	u709_20
 21864  0024  2826               u709_21:
 21865  0025                     	goto	i1l5087
 21866  0025  282C               u709_20:
 21867  0026                     	line	395
 21868                           	
 21869                           i1l5083:	
 21870  0026                     ;main.c: 395:    pushButtonISR();
 21871                           	fcall	_pushButtonISR
 21872  0026  31A3  2384  3180   	line	396
 21873                           	
 21874                           i1l5085:	
 21875  0029                     ;main.c: 396:    IOCAFbits.IOCAF7 = 0;
 21876                           	movlb 62	; select bank62
 21877  0029  017E               	bcf	(7999)^01F00h,7	;volatile
 21878  002A  13BF               	goto	i1l5087
 21879  002B  282C               	line	397
 21880                           ;main.c: 397:   }
 21881                           	
 21882                           i1l287:	
 21883  002C                     	line	398
 21884                           	
 21885                           i1l5087:	
 21886  002C                     ;main.c: 398:   if (IOCAFbits.IOCAF4 == 1) {
 21887                           	btfss	(7999)^01F00h,4	;volatile
 21888  002C  1E3F               	goto	u710_21
 21889  002D  282F               	goto	u710_20
 21890  002E  2830               u710_21:
 21891  002F                     	goto	i1l5093
 21892  002F  2836               u710_20:
 21893  0030                     	line	399
 21894                           	
 21895                           i1l5089:	
 21896  0030                     ;main.c: 399:    rotISR();
 21897                           	fcall	_rotISR
 21898  0030  3198  2000  3180   	line	400
 21899                           	
 21900                           i1l5091:	
 21901  0033                     ;main.c: 400:    IOCAFbits.IOCAF4 = 0;
 21902                           	movlb 62	; select bank62
 21903  0033  017E               	bcf	(7999)^01F00h,4	;volatile
 21904  0034  123F               	goto	i1l5093
 21905  0035  2836               	line	401
 21906                           ;main.c: 401:   }
 21907                           	
 21908                           i1l288:	
 21909  0036                     	line	402
 21910                           	
 21911                           i1l5093:	
 21912  0036                     ;main.c: 402:   if (IOCAFbits.IOCAF5 == 1) {
 21913                           	btfss	(7999)^01F00h,5	;volatile
 21914  0036  1EBF               	goto	u711_21
 21915  0037  2839               	goto	u711_20
 21916  0038  283A               u711_21:
 21917  0039                     	goto	i1l5099
 21918  0039  2840               u711_20:
 21919  003A                     	line	403
 21920                           	
 21921                           i1l5095:	
 21922  003A                     ;main.c: 403:    rotISR();
 21923                           	fcall	_rotISR
 21924  003A  3198  2000  3180   	line	404
 21925                           	
 21926                           i1l5097:	
 21927  003D                     ;main.c: 404:    IOCAFbits.IOCAF5 = 0;
 21928                           	movlb 62	; select bank62
 21929  003D  017E               	bcf	(7999)^01F00h,5	;volatile
 21930  003E  12BF               	goto	i1l5099
 21931  003F  2840               	line	405
 21932                           ;main.c: 405:   }
 21933                           	
 21934                           i1l289:	
 21935  0040                     	line	406
 21936                           	
 21937                           i1l5099:	
 21938  0040                     ;main.c: 406:   PIR0bits.IOCIF = 0;
 21939                           	movlb 14	; select bank14
 21940  0040  014E               	bcf	(1804)^0700h,4	;volatile
 21941  0041  120C               	line	407
 21942                           ;main.c: 407:  } else if (INTCONbits.PEIE == 1) {
 21943                           	goto	i1l296
 21944  0042  2893               	
 21945                           i1l286:	
 21946  0043                     	btfss	(11),6	;volatile
 21947  0043  1F0B               	goto	u712_21
 21948  0044  2846               	goto	u712_20
 21949  0045  2847               u712_21:
 21950  0046                     	goto	i1l296
 21951  0046  2893               u712_20:
 21952  0047                     	line	408
 21953                           	
 21954                           i1l5101:	
 21955  0047                     ;main.c: 408:   if (PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1) {
 21956                           	btfss	(1818)^0700h,0	;volatile
 21957  0047  1C1A               	goto	u713_21
 21958  0048  284A               	goto	u713_20
 21959  0049  284B               u713_21:
 21960  004A                     	goto	i1l292
 21961  004A  2881               u713_20:
 21962  004B                     	
 21963                           i1l5103:	
 21964  004B                     	btfss	(1808)^0700h,0	;volatile
 21965  004B  1C10               	goto	u714_21
 21966  004C  284E               	goto	u714_20
 21967  004D  284F               u714_21:
 21968  004E                     	goto	i1l292
 21969  004E  2881               u714_20:
 21970  004F                     	line	410
 21971                           	
 21972                           i1l5105:	
 21973  004F                     ;main.c: 410:    if (++g_100msTick % 10) {
 21974                           	movlw	0
 21975  004F  3000               	movwf	(___llmod@divisor+3)
 21976  0050  00F3               	movlw	0
 21977  0051  3000               	movwf	(___llmod@divisor+2)
 21978  0052  00F2               	movlw	0
 21979  0053  3000               	movwf	(___llmod@divisor+1)
 21980  0054  00F1               	movlw	0Ah
 21981  0055  300A               	movwf	(___llmod@divisor)
 21982  0056  00F0               
 21983                           	movlw	01h
 21984  0057  3001               	movlb 2	; select bank2
 21985  0058  0142               	addwf	(_g_100msTick)^0100h,f	;volatile
 21986  0059  07E2               	movlw	0
 21987  005A  3000               	addwfc	(_g_100msTick+1)^0100h,f	;volatile
 21988  005B  3DE3               	movlw	0
 21989  005C  3000               	addwfc	(_g_100msTick+2)^0100h,f	;volatile
 21990  005D  3DE4               	movlw	0
 21991  005E  3000               	addwfc	(_g_100msTick+3)^0100h,f	;volatile
 21992  005F  3DE5               	movf	((_g_100msTick+3)^0100h),w	;volatile
 21993  0060  0865               	movwf	(___llmod@dividend+3)
 21994  0061  00F7               	movf	((_g_100msTick+2)^0100h),w	;volatile
 21995  0062  0864               	movwf	(___llmod@dividend+2)
 21996  0063  00F6               	movf	((_g_100msTick+1)^0100h),w	;volatile
 21997  0064  0863               	movwf	(___llmod@dividend+1)
 21998  0065  00F5               	movf	((_g_100msTick)^0100h),w	;volatile
 21999  0066  0862               	movwf	(___llmod@dividend)
 22000  0067  00F4               
 22001                           	fcall	___llmod
 22002  0068  31A5  2527  3180   	movf	(3+(?___llmod)),w
 22003  006B  0873               	iorwf	(2+(?___llmod)),w
 22004  006C  0472               	iorwf	(1+(?___llmod)),w
 22005  006D  0471               	iorwf	(0+(?___llmod)),w
 22006  006E  0470               	skipnz
 22007  006F  1903               	goto	u715_21
 22008  0070  2872               	goto	u715_20
 22009  0071  2873               u715_21:
 22010  0072                     	goto	i1l5109
 22011  0072  2879               u715_20:
 22012  0073                     	line	412
 22013                           	
 22014                           i1l5107:	
 22015  0073                     ;main.c: 412:     g_sensorTimer++;
 22016                           	movlw	low(01h)
 22017  0073  3001               	movwf	(??_ISR+0)+0
 22018  0074  00FA               	movf	(??_ISR+0)+0,w
 22019  0075  087A               	movlb 3	; select bank3
 22020  0076  0143               	addwf	(_g_sensorTimer)^0180h,f	;volatile
 22021  0077  07EC               	goto	i1l5109
 22022  0078  2879               	line	413
 22023                           ;main.c: 413:    }
 22024                           	
 22025                           i1l293:	
 22026  0079                     	line	414
 22027                           	
 22028                           i1l5109:	
 22029  0079                     ;main.c: 414:    TMR1 = 53035;
 22030                           	movlw	0CFh
 22031  0079  30CF               	movlb 4	; select bank4
 22032  007A  0144               	movwf	(524+1)^0200h	;volatile
 22033  007B  008D               	movlw	02Bh
 22034  007C  302B               	movwf	(524)^0200h	;volatile
 22035  007D  008C               	line	415
 22036                           	
 22037                           i1l5111:	
 22038  007E                     ;main.c: 415:    PIR4bits.TMR1IF = 0;
 22039                           	movlb 14	; select bank14
 22040  007E  014E               	bcf	(1808)^0700h,0	;volatile
 22041  007F  1010               	line	417
 22042                           ;main.c: 417:   } else if (PIE3bits.RC1IE == 1 && PIR3bits.RC1IF == 1) {
 22043                           	goto	i1l296
 22044  0080  2893               	
 22045                           i1l292:	
 22046  0081                     	btfss	(1817)^0700h,5	;volatile
 22047  0081  1E99               	goto	u716_21
 22048  0082  2884               	goto	u716_20
 22049  0083  2885               u716_21:
 22050  0084                     	goto	i1l296
 22051  0084  2893               u716_20:
 22052  0085                     	
 22053                           i1l5113:	
 22054  0085                     	btfss	(1807)^0700h,5	;volatile
 22055  0085  1E8F               	goto	u717_21
 22056  0086  2888               	goto	u717_20
 22057  0087  2889               u717_21:
 22058  0088                     	goto	i1l296
 22059  0088  2893               u717_20:
 22060  0089                     	line	418
 22061                           	
 22062                           i1l5115:	
 22063  0089                     ;main.c: 418:    uartReceiveISR();
 22064                           	fcall	_uartReceiveISR
 22065  0089  31A5  25C9  3180   	line	419
 22066                           	
 22067                           i1l5117:	
 22068  008C                     ;main.c: 419:    PIR3bits.RC1IF = 0;
 22069                           	movlb 14	; select bank14
 22070  008C  014E               	bcf	(1807)^0700h,5	;volatile
 22071  008D  128F               	goto	i1l296
 22072  008E  2893               	line	420
 22073                           ;main.c: 420:   }
 22074                           	
 22075                           i1l295:	
 22076  008F                     	goto	i1l296
 22077  008F  2893               	
 22078                           i1l294:	
 22079  0090                     	goto	i1l296
 22080  0090  2893               	line	421
 22081                           ;main.c: 421:  }
 22082                           	
 22083                           i1l291:	
 22084  0091                     	goto	i1l296
 22085  0091  2893               	
 22086                           i1l290:	
 22087  0092                     	goto	i1l296
 22088  0092  2893               	
 22089                           i1l285:	
 22090  0093                     	line	422
 22091                           	
 22092                           i1l296:	
 22093  0093                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
 22094  0093  107E               	retfie
 22095  0094  0009               	opt stack 0
 22096                           GLOBAL	__end_of_ISR
 22097                           	__end_of_ISR:
 22098  0095                     	signat	_ISR,89
 22099                           	global	_uartReceiveISR
 22100                           
 22101 ;; *************** function _uartReceiveISR *****************
 22102 ;; Defined at:
 22103 ;;		line 428 in file "main.c"
 22104 ;; Parameters:    Size  Location     Type
 22105 ;;		None
 22106 ;; Auto vars:     Size  Location     Type
 22107 ;;		None
 22108 ;; Return value:  Size  Location     Type
 22109 ;;                  1    wreg      void 
 22110 ;; Registers used:
 22111 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22112 ;; Tracked objects:
 22113 ;;		On entry : 0/0
 22114 ;;		On exit  : 0/0
 22115 ;;		Unchanged: 0/0
 22116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22119 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22120 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22121 ;;Total ram usage:        1 bytes
 22122 ;; Hardware stack levels used:    1
 22123 ;; Hardware stack levels required when called:    1
 22124 ;; This function calls:
 22125 ;;		_strncpy
 22126 ;; This function is called by:
 22127 ;;		_ISR
 22128 ;; This function uses a non-reentrant model
 22129 ;;
 22130                           psect	text59,local,class=CODE,delta=2,merge=1,group=0
 22131                           	line	428
 22132                           global __ptext59
 22133                           __ptext59:	;psect for function _uartReceiveISR
 22134  25C9                     psect	text59
 22135                           	file	"main.c"
 22136                           	line	428
 22137                           	global	__size_of_uartReceiveISR
 22138                           	__size_of_uartReceiveISR	equ	__end_of_uartReceiveISR-_uartReceiveISR
 22139  0055                     	
 22140                           _uartReceiveISR:	
 22141  25C9                     ;incstack = 0
 22142                           	opt	stack 4
 22143                           ; Regs used in _uartReceiveISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22144                           	line	434
 22145                           	
 22146                           i1l4971:	
 22147  25C9                     ;main.c: 430:  static char buffer[20];;main.c: 431:  static uint8_t rxCount = 0;;main.c:
                                  432:  static uint8_t checksum = 0;;main.c: 434:  if (RC1STAbits.OERR)
 22148                           	movlb 2	; select bank2
 22149  25C9  0142               	btfss	(285)^0100h,1	;volatile
 22150  25CA  1C9D               	goto	u692_21
 22151  25CB  2DCD               	goto	u692_20
 22152  25CC  2DCE               u692_21:
 22153  25CD                     	goto	i1l4977
 22154  25CD  2DD6               u692_20:
 22155  25CE                     	line	437
 22156                           	
 22157                           i1l4973:	
 22158  25CE                     ;main.c: 435:  {;main.c: 437:   RC1STAbits.CREN = 0;
 22159                           	bcf	(285)^0100h,4	;volatile
 22160  25CE  121D               	line	438
 22161                           ;main.c: 438:   RC1STAbits.CREN = 1;
 22162                           	bsf	(285)^0100h,4	;volatile
 22163  25CF  161D               	line	439
 22164                           	
 22165                           i1l4975:	
 22166  25D0                     ;main.c: 439:   g_rxOErrCount++;
 22167                           	movlw	low(01h)
 22168  25D0  3001               	movwf	(??_uartReceiveISR+0)+0
 22169  25D1  00F6               	movf	(??_uartReceiveISR+0)+0,w
 22170  25D2  0876               	movlb 3	; select bank3
 22171  25D3  0143               	addwf	(_g_rxOErrCount)^0180h,f	;volatile
 22172  25D4  07EA               	goto	i1l4977
 22173  25D5  2DD6               	line	440
 22174                           ;main.c: 440:  }
 22175                           	
 22176                           i1l305:	
 22177  25D6                     	line	441
 22178                           	
 22179                           i1l4977:	
 22180  25D6                     ;main.c: 441:  if (RC1STAbits.FERR)
 22181                           	movlb 2	; select bank2
 22182  25D6  0142               	btfss	(285)^0100h,2	;volatile
 22183  25D7  1D1D               	goto	u693_21
 22184  25D8  2DDA               	goto	u693_20
 22185  25D9  2DDB               u693_21:
 22186  25DA                     	goto	i1l4983
 22187  25DA  2DE3               u693_20:
 22188  25DB                     	line	443
 22189                           	
 22190                           i1l4979:	
 22191  25DB                     ;main.c: 442:  {;main.c: 443:   RC1STAbits.SPEN = 0;
 22192                           	bcf	(285)^0100h,7	;volatile
 22193  25DB  139D               	line	444
 22194                           ;main.c: 444:   RC1STAbits.SPEN = 1;
 22195                           	bsf	(285)^0100h,7	;volatile
 22196  25DC  179D               	line	445
 22197                           	
 22198                           i1l4981:	
 22199  25DD                     ;main.c: 445:   g_rxFErrCount++;
 22200                           	movlw	low(01h)
 22201  25DD  3001               	movwf	(??_uartReceiveISR+0)+0
 22202  25DE  00F6               	movf	(??_uartReceiveISR+0)+0,w
 22203  25DF  0876               	movlb 3	; select bank3
 22204  25E0  0143               	addwf	(_g_rxFErrCount)^0180h,f	;volatile
 22205  25E1  07EB               	goto	i1l4983
 22206  25E2  2DE3               	line	446
 22207                           ;main.c: 446:  }
 22208                           	
 22209                           i1l306:	
 22210  25E3                     	line	448
 22211                           	
 22212                           i1l4983:	
 22213  25E3                     ;main.c: 448:  if (rxCount < sizeof(g_dataPacket)) {
 22214                           	movlw	low(0Fh)
 22215  25E3  300F               	subwf	(uartReceiveISR@rxCount),w
 22216  25E4  027B               	skipnc
 22217  25E5  1803               	goto	u694_21
 22218  25E6  2DE8               	goto	u694_20
 22219  25E7  2DE9               u694_21:
 22220  25E8                     	goto	i1l4989
 22221  25E8  2E01               u694_20:
 22222  25E9                     	line	449
 22223                           	
 22224                           i1l4985:	
 22225  25E9                     ;main.c: 449:   buffer[rxCount] = RC1REG;
 22226                           	movlb 2	; select bank2
 22227  25E9  0142               	movf	(281)^0100h,w	;volatile
 22228  25EA  0819               	movwf	(??_uartReceiveISR+0)+0
 22229  25EB  00F6               	movf	(uartReceiveISR@rxCount),w
 22230  25EC  087B               	addlw	low(uartReceiveISR@buffer|((0x2)<<8))&0ffh
 22231  25ED  3EA0               	movwf	fsr1l
 22232  25EE  0086               	movlw 2	; select bank5/6
 22233  25EF  3002               	movwf fsr1h	
 22234  25F0  0087               	
 22235                           	movf	(??_uartReceiveISR+0)+0,w
 22236  25F1  0876               	movwf	indf1
 22237  25F2  0081               	line	450
 22238                           ;main.c: 450:   checksum ^= buffer[rxCount];
 22239                           	movf	(uartReceiveISR@rxCount),w
 22240  25F3  087B               	addlw	low(uartReceiveISR@buffer|((0x2)<<8))&0ffh
 22241  25F4  3EA0               	movwf	fsr1l
 22242  25F5  0086               	movlw 2	; select bank5/6
 22243  25F6  3002               	movwf fsr1h	
 22244  25F7  0087               	
 22245                           	movf	indf1,w
 22246  25F8  0801               	movwf	(??_uartReceiveISR+0)+0
 22247  25F9  00F6               	movf	(??_uartReceiveISR+0)+0,w
 22248  25FA  0876               	xorwf	(uartReceiveISR@checksum)^0100h,f
 22249  25FB  06EC               	line	451
 22250                           	
 22251                           i1l4987:	
 22252  25FC                     ;main.c: 451:   rxCount++;
 22253                           	movlw	low(01h)
 22254  25FC  3001               	movwf	(??_uartReceiveISR+0)+0
 22255  25FD  00F6               	movf	(??_uartReceiveISR+0)+0,w
 22256  25FE  0876               	addwf	(uartReceiveISR@rxCount),f
 22257  25FF  07FB               	line	452
 22258                           ;main.c: 452:  } else {
 22259                           	goto	i1l310
 22260  2600  2E1D               	
 22261                           i1l307:	
 22262  2601                     	line	453
 22263                           	
 22264                           i1l4989:	
 22265  2601                     ;main.c: 453:   if (RC1REG == checksum) {
 22266                           	movlb 2	; select bank2
 22267  2601  0142               	movf	(281)^0100h,w	;volatile
 22268  2602  0819               	xorwf	(uartReceiveISR@checksum)^0100h,w
 22269  2603  066C               	skipz
 22270  2604  1D03               	goto	u695_21
 22271  2605  2E07               	goto	u695_20
 22272  2606  2E08               u695_21:
 22273  2607                     	goto	i1l4995
 22274  2607  2E19               u695_20:
 22275  2608                     	line	454
 22276                           	
 22277                           i1l4991:	
 22278  2608                     ;main.c: 454:    g_dataReady = 1;
 22279                           	movlw	low(01h)
 22280  2608  3001               	movwf	(??_uartReceiveISR+0)+0
 22281  2609  00F6               	movf	(??_uartReceiveISR+0)+0,w
 22282  260A  0876               	movwf	(_g_dataReady)^0100h	;volatile
 22283  260B  00EF               	line	455
 22284                           	
 22285                           i1l4993:	
 22286  260C                     ;main.c: 455:    strncpy((char *) &g_dataPacket, buffer, sizeof(g_dataPacket));
 22287                           	movlw	(low(uartReceiveISR@buffer|((0x2)<<8)))&0ffh
 22288  260C  30A0               	movwf	(??_uartReceiveISR+0)+0
 22289  260D  00F6               	movf	(??_uartReceiveISR+0)+0,w
 22290  260E  0876               	movwf	(strncpy@s)
 22291  260F  00F0               	movlw	0Fh
 22292  2610  300F               	movwf	(strncpy@n)
 22293  2611  00F1               	movlw	0
 22294  2612  3000               	movwf	((strncpy@n))+1
 22295  2613  00F2               	movlw	(low(_g_dataPacket|((0x2)<<8)))&0ffh
 22296  2614  3050               	fcall	_strncpy
 22297  2615  31A4  245D  31A5   	goto	i1l4995
 22298  2618  2E19               	line	456
 22299                           ;main.c: 456:   }
 22300                           	
 22301                           i1l309:	
 22302  2619                     	line	457
 22303                           	
 22304                           i1l4995:	
 22305  2619                     ;main.c: 457:   checksum = 0;
 22306                           	movlb 2	; select bank2
 22307  2619  0142               	clrf	(uartReceiveISR@checksum)^0100h
 22308  261A  01EC               	line	458
 22309                           	
 22310                           i1l4997:	
 22311  261B                     ;main.c: 458:   rxCount = 0;
 22312                           	clrf	(uartReceiveISR@rxCount)
 22313  261B  01FB               	goto	i1l310
 22314  261C  2E1D               	line	459
 22315                           ;main.c: 459:  }
 22316                           	
 22317                           i1l308:	
 22318  261D                     	line	460
 22319                           	
 22320                           i1l310:	
 22321  261D                     	return
 22322  261D  0008               	opt stack 0
 22323                           GLOBAL	__end_of_uartReceiveISR
 22324                           	__end_of_uartReceiveISR:
 22325  261E                     	signat	_uartReceiveISR,89
 22326                           	global	_strncpy
 22327                           
 22328 ;; *************** function _strncpy *****************
 22329 ;; Defined at:
 22330 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncpy.c"
 22331 ;; Parameters:    Size  Location     Type
 22332 ;;  d               1    wreg     PTR unsigned char 
 22333 ;;		 -> g_dataPacket(15), 
 22334 ;;  s               1    0[COMMON] PTR const unsigned char 
 22335 ;;		 -> uartReceiveISR@buffer(20), 
 22336 ;;  n               2    1[COMMON] unsigned int 
 22337 ;; Auto vars:     Size  Location     Type
 22338 ;;  d               1    4[COMMON] PTR unsigned char 
 22339 ;;		 -> g_dataPacket(15), 
 22340 ;;  cp              1    5[COMMON] PTR unsigned char 
 22341 ;;		 -> g_dataPacket(15), 
 22342 ;; Return value:  Size  Location     Type
 22343 ;;                  1    wreg      PTR unsigned char 
 22344 ;; Registers used:
 22345 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 22346 ;; Tracked objects:
 22347 ;;		On entry : 0/0
 22348 ;;		On exit  : 0/0
 22349 ;;		Unchanged: 0/0
 22350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22351 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22352 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22353 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22354 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22355 ;;Total ram usage:        6 bytes
 22356 ;; Hardware stack levels used:    1
 22357 ;; This function calls:
 22358 ;;		Nothing
 22359 ;; This function is called by:
 22360 ;;		_uartReceiveISR
 22361 ;; This function uses a non-reentrant model
 22362 ;;
 22363                           psect	text60,local,class=CODE,delta=2,merge=1,group=2
 22364                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncpy.c"
 22365                           	line	7
 22366                           global __ptext60
 22367                           __ptext60:	;psect for function _strncpy
 22368  245D                     psect	text60
 22369                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncpy.c"
 22370                           	line	7
 22371                           	global	__size_of_strncpy
 22372                           	__size_of_strncpy	equ	__end_of_strncpy-_strncpy
 22373  003E                     	
 22374                           _strncpy:	
 22375  245D                     ;incstack = 0
 22376                           	opt	stack 4
 22377                           ; Regs used in _strncpy: [wreg-fsr1h+status,2+status,0]
 22378                           ;strncpy@d stored from wreg
 22379                           	movwf	(strncpy@d)
 22380  245D  00F4               	line	11
 22381                           	
 22382                           i1l4719:	
 22383  245E                     	movf	(strncpy@d),w
 22384  245E  0874               	movwf	(??_strncpy+0)+0
 22385  245F  00F3               	movf	(??_strncpy+0)+0,w
 22386  2460  0873               	movwf	(strncpy@cp)
 22387  2461  00F5               	line	12
 22388                           	goto	i1l4727
 22389  2462  2C7B               	
 22390                           i1l1152:	
 22391  2463                     	line	13
 22392                           	
 22393                           i1l4721:	
 22394  2463                     	movlw	01h
 22395  2463  3001               	subwf	(strncpy@n),f
 22396  2464  02F1               	movlw	0
 22397  2465  3000               	subwfb	(strncpy@n+1),f
 22398  2466  3BF2               	line	14
 22399                           	
 22400                           i1l4723:	
 22401  2467                     	movf	(strncpy@cp),w
 22402  2467  0875               	movwf	fsr1l
 22403  2468  0086               	movlw 2	; select bank4/5
 22404  2469  3002               	movwf fsr1h	
 22405  246A  0087               	
 22406                           	incf	(strncpy@cp),f
 22407  246B  0AF5               	movf	(strncpy@s),w
 22408  246C  0870               	movwf	fsr0l
 22409  246D  0084               	movlw 2	; select bank4/5
 22410  246E  3002               	movwf fsr0h	
 22411  246F  0085               	
 22412                           	incf	(strncpy@s),f
 22413  2470  0AF0               	movf	indf0,w
 22414  2471  0800               	movwi	[0]fsr1
 22415  2472  3FC0               	movf	wreg
 22416  2473  0889               	btfss	status,2
 22417  2474  1D03               	goto	u658_21
 22418  2475  2C77               	goto	u658_20
 22419  2476  2C78               u658_21:
 22420  2477                     	goto	i1l4727
 22421  2477  2C7B               u658_20:
 22422  2478                     	goto	i1l4733
 22423  2478  2C8D               	line	15
 22424                           	
 22425                           i1l4725:	
 22426  2479                     	goto	i1l4733
 22427  2479  2C8D               	
 22428                           i1l1153:	
 22429  247A                     	goto	i1l4727
 22430  247A  2C7B               	line	16
 22431                           	
 22432                           i1l1151:	
 22433  247B                     	line	12
 22434                           	
 22435                           i1l4727:	
 22436  247B                     	movf	((strncpy@n)),w
 22437  247B  0871               iorwf	((strncpy@n+1)),w
 22438  247C  0472               	btfss	status,2
 22439  247D  1D03               	goto	u659_21
 22440  247E  2C80               	goto	u659_20
 22441  247F  2C81               u659_21:
 22442  2480                     	goto	i1l4721
 22443  2480  2C63               u659_20:
 22444  2481                     	goto	i1l4733
 22445  2481  2C8D               	
 22446                           i1l1154:	
 22447  2482                     	line	17
 22448                           	goto	i1l4733
 22449  2482  2C8D               	
 22450                           i1l1156:	
 22451  2483                     	line	18
 22452                           	
 22453                           i1l4729:	
 22454  2483                     	movf	(strncpy@cp),w
 22455  2483  0875               	movwf	fsr1l
 22456  2484  0086               	movlw 2	; select bank4/5
 22457  2485  3002               	movwf fsr1h	
 22458  2486  0087               	
 22459                           	clrf	indf1
 22460  2487  0181               	
 22461                           i1l4731:	
 22462  2488                     	movlw	low(01h)
 22463  2488  3001               	movwf	(??_strncpy+0)+0
 22464  2489  00F3               	movf	(??_strncpy+0)+0,w
 22465  248A  0873               	addwf	(strncpy@cp),f
 22466  248B  07F5               	goto	i1l4733
 22467  248C  2C8D               	
 22468                           i1l1155:	
 22469  248D                     	line	17
 22470                           	
 22471                           i1l4733:	
 22472  248D                     	movlw	01h
 22473  248D  3001               	subwf	(strncpy@n),f
 22474  248E  02F1               	movlw	0
 22475  248F  3000               	subwfb	(strncpy@n+1),f
 22476  2490  3BF2               		incf	(((strncpy@n))),w
 22477  2491  0A71               	skipz
 22478  2492  1D03               	goto	u660_21
 22479  2493  2C98               	incf	(((strncpy@n+1))),w
 22480  2494  0A72               	btfss	status,2
 22481  2495  1D03               	goto	u660_21
 22482  2496  2C98               	goto	u660_20
 22483  2497  2C99               u660_21:
 22484  2498                     	goto	i1l4729
 22485  2498  2C83               u660_20:
 22486  2499                     	goto	i1l1158
 22487  2499  2C9A               	
 22488                           i1l1157:	
 22489  249A                     	line	23
 22490                           ;	Return value of _strncpy is never used
 22491                           	
 22492                           i1l1158:	
 22493  249A                     	return
 22494  249A  0008               	opt stack 0
 22495                           GLOBAL	__end_of_strncpy
 22496                           	__end_of_strncpy:
 22497  249B                     	signat	_strncpy,12409
 22498                           	global	_rotISR
 22499                           
 22500 ;; *************** function _rotISR *****************
 22501 ;; Defined at:
 22502 ;;		line 462 in file "main.c"
 22503 ;; Parameters:    Size  Location     Type
 22504 ;;		None
 22505 ;; Auto vars:     Size  Location     Type
 22506 ;;  input           1    7[COMMON] unsigned char 
 22507 ;; Return value:  Size  Location     Type
 22508 ;;                  1    wreg      void 
 22509 ;; Registers used:
 22510 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 22511 ;; Tracked objects:
 22512 ;;		On entry : 0/0
 22513 ;;		On exit  : 0/0
 22514 ;;		Unchanged: 0/0
 22515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22517 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22518 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22519 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22520 ;;Total ram usage:        8 bytes
 22521 ;; Hardware stack levels used:    1
 22522 ;; This function calls:
 22523 ;;		Nothing
 22524 ;; This function is called by:
 22525 ;;		_ISR
 22526 ;; This function uses a non-reentrant model
 22527 ;;
 22528                           psect	text61,local,class=CODE,delta=2,merge=1,group=0
 22529                           	file	"main.c"
 22530                           	line	462
 22531                           global __ptext61
 22532                           __ptext61:	;psect for function _rotISR
 22533  1800                     psect	text61
 22534                           	file	"main.c"
 22535                           	line	462
 22536                           	global	__size_of_rotISR
 22537                           	__size_of_rotISR	equ	__end_of_rotISR-_rotISR
 22538  003F                     	
 22539                           _rotISR:	
 22540  1800                     ;incstack = 0
 22541                           	opt	stack 5
 22542                           ; Regs used in _rotISR: [wreg-fsr0h+status,2+status,0+pclath]
 22543                           	line	466
 22544                           	
 22545                           i1l4957:	
 22546  1800                     ;main.c: 464:  uint8_t input;;main.c: 466:  input = (PORTAbits.RA5 << 1) | PORTAbits.RA4
                                 ;
 22547                           	movlb 0	; select bank0
 22548  1800  0140               	swapf	(12),w	;volatile
 22549  1801  0E0C               	andlw	(1<<1)-1
 22550  1802  3901               	movwf	(??_rotISR+0)+0
 22551  1803  00F0               	swapf	(12),w	;volatile
 22552  1804  0E0C               	rrf	wreg,f
 22553  1805  0C89               	andlw	(1<<1)-1
 22554  1806  3901               	addwf	wreg,w
 22555  1807  0709               	iorwf	(??_rotISR+0)+0,w
 22556  1808  0470               	movwf	(??_rotISR+1)+0
 22557  1809  00F1               	movf	(??_rotISR+1)+0,w
 22558  180A  0871               	movwf	(rotISR@input)
 22559  180B  00F7               	line	469
 22560                           	
 22561                           i1l4959:	
 22562  180C                     ;main.c: 469:  g_curRotState = transition_table[g_curRotState & 0b00000111][input];
 22563                           	movf	(_g_curRotState),w	;volatile
 22564  180C  087C               	andlw	07h
 22565  180D  3907               	movwf	(??_rotISR+0)+0
 22566  180E  00F0               	clrf	(??_rotISR+0)+0+1
 22567  180F  01F1               	lslf	(??_rotISR+0)+0,f
 22568  1810  35F0               	rlf	(??_rotISR+0)+1,f
 22569  1811  0DF1               	lslf	(??_rotISR+0)+0,f
 22570  1812  35F0               	rlf	(??_rotISR+0)+1,f
 22571  1813  0DF1               	movlw	low(((_transition_table)|8000h))
 22572  1814  3000               	movwf	(??_rotISR+2)+0
 22573  1815  00F2               	movlw	high(((_transition_table)|8000h))
 22574  1816  30A8               	movwf	(??_rotISR+2)+0+1
 22575  1817  00F3               	movf	0+(??_rotISR+0)+0,w
 22576  1818  0870               	addwf	0+(??_rotISR+2)+0,w
 22577  1819  0772               	movwf	(??_rotISR+4)+0
 22578  181A  00F4               	movf	1+(??_rotISR+0)+0,w
 22579  181B  0871               	addwfc	1+(??_rotISR+2)+0,w
 22580  181C  3D73               	movwf	1+(??_rotISR+4)+0
 22581  181D  00F5               	movf	(rotISR@input),w
 22582  181E  0877               	addwf	(??_rotISR+4)+0,w
 22583  181F  0774               	movwf	fsr0l
 22584  1820  0084               	movf	(??_rotISR+4)+1,w
 22585  1821  0875               	skipnc
 22586  1822  1803               	incf	(??_rotISR+4)+1,w
 22587  1823  0A75               	movwf	fsr0h
 22588  1824  0085               
 22589                           	movf	indf0,w ;code access
 22590  1825  0800               	movwf	(??_rotISR+6)+0
 22591  1826  00F6               	movf	(??_rotISR+6)+0,w
 22592  1827  0876               	movwf	(_g_curRotState)	;volatile
 22593  1828  00FC               	line	472
 22594                           	
 22595                           i1l4961:	
 22596  1829                     ;main.c: 472:  if (g_curRotState & CW_FLAG) g_rotDir = ROT_CW;
 22597                           	btfss	(_g_curRotState),(7)&7	;volatile
 22598  1829  1FFC               	goto	u690_21
 22599  182A  282C               	goto	u690_20
 22600  182B  282D               u690_21:
 22601  182C                     	goto	i1l4965
 22602  182C  2833               u690_20:
 22603  182D                     	
 22604                           i1l4963:	
 22605  182D                     	movlw	low(01h)
 22606  182D  3001               	movwf	(??_rotISR+0)+0
 22607  182E  00F0               	movf	(??_rotISR+0)+0,w
 22608  182F  0870               	movlb 2	; select bank2
 22609  1830  0142               	movwf	(_g_rotDir)^0100h	;volatile
 22610  1831  00EE               	goto	i1l4965
 22611  1832  2833               	
 22612                           i1l313:	
 22613  1833                     	line	473
 22614                           	
 22615                           i1l4965:	
 22616  1833                     ;main.c: 473:  if (g_curRotState & CCW_FLAG) g_rotDir = ROT_CCW;
 22617                           	btfss	(_g_curRotState),(6)&7	;volatile
 22618  1833  1F7C               	goto	u691_21
 22619  1834  2836               	goto	u691_20
 22620  1835  2837               u691_21:
 22621  1836                     	goto	i1l4969
 22622  1836  283D               u691_20:
 22623  1837                     	
 22624                           i1l4967:	
 22625  1837                     	movlw	low(02h)
 22626  1837  3002               	movwf	(??_rotISR+0)+0
 22627  1838  00F0               	movf	(??_rotISR+0)+0,w
 22628  1839  0870               	movlb 2	; select bank2
 22629  183A  0142               	movwf	(_g_rotDir)^0100h	;volatile
 22630  183B  00EE               	goto	i1l4969
 22631  183C  283D               	
 22632                           i1l314:	
 22633  183D                     	line	474
 22634                           	
 22635                           i1l4969:	
 22636  183D                     ;main.c: 474:  __nop();
 22637                           	opt	asmopt_push
 22638                           	opt	asmopt_off
 22639                           	nop
 22640  183D  0000               	opt	asmopt_pop
 22641                           	line	475
 22642                           	
 22643                           i1l315:	
 22644  183E                     	return
 22645  183E  0008               	opt stack 0
 22646                           GLOBAL	__end_of_rotISR
 22647                           	__end_of_rotISR:
 22648  183F                     	signat	_rotISR,89
 22649                           	global	_pushButtonISR
 22650                           
 22651 ;; *************** function _pushButtonISR *****************
 22652 ;; Defined at:
 22653 ;;		line 477 in file "main.c"
 22654 ;; Parameters:    Size  Location     Type
 22655 ;;		None
 22656 ;; Auto vars:     Size  Location     Type
 22657 ;;		None
 22658 ;; Return value:  Size  Location     Type
 22659 ;;                  1    wreg      void 
 22660 ;; Registers used:
 22661 ;;		wreg, status,2
 22662 ;; Tracked objects:
 22663 ;;		On entry : 0/0
 22664 ;;		On exit  : 0/0
 22665 ;;		Unchanged: 0/0
 22666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22669 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22670 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22671 ;;Total ram usage:        1 bytes
 22672 ;; Hardware stack levels used:    1
 22673 ;; This function calls:
 22674 ;;		Nothing
 22675 ;; This function is called by:
 22676 ;;		_ISR
 22677 ;; This function uses a non-reentrant model
 22678 ;;
 22679                           psect	text62,local,class=CODE,delta=2,merge=1,group=0
 22680                           	line	477
 22681                           global __ptext62
 22682                           __ptext62:	;psect for function _pushButtonISR
 22683  2384                     psect	text62
 22684                           	file	"main.c"
 22685                           	line	477
 22686                           	global	__size_of_pushButtonISR
 22687                           	__size_of_pushButtonISR	equ	__end_of_pushButtonISR-_pushButtonISR
 22688  0034                     	
 22689                           _pushButtonISR:	
 22690  2384                     ;incstack = 0
 22691                           	opt	stack 5
 22692                           ; Regs used in _pushButtonISR: [wreg+status,2]
 22693                           	line	480
 22694                           	
 22695                           i1l4939:	
 22696  2384                     ;main.c: 480:  if (!PORTAbits.RA7) {
 22697                           	movlb 0	; select bank0
 22698  2384  0140               	btfsc	(12),7	;volatile
 22699  2385  1B8C               	goto	u685_21
 22700  2386  2B88               	goto	u685_20
 22701  2387  2B89               u685_21:
 22702  2388                     	goto	i1l4943
 22703  2388  2B8B               u685_20:
 22704  2389                     	line	481
 22705                           	
 22706                           i1l4941:	
 22707  2389                     ;main.c: 481:   g_10msTick = 0;
 22708                           	clrf	(_g_10msTick)	;volatile
 22709  2389  01FD               	line	482
 22710                           ;main.c: 482:  } else {
 22711                           	goto	i1l324
 22712  238A  2BB7               	
 22713                           i1l318:	
 22714  238B                     	line	483
 22715                           	
 22716                           i1l4943:	
 22717  238B                     ;main.c: 483:   if ((g_10msTick > 5) & (g_10msTick <= 50))
 22718                           	movlw	low(06h)
 22719  238B  3006               	subwf	(_g_10msTick),w	;volatile
 22720  238C  027D               	skipc
 22721  238D  1C03               	goto	u686_21
 22722  238E  2B90               	goto	u686_20
 22723  238F  2B91               u686_21:
 22724  2390                     	goto	i1l4949
 22725  2390  2B9D               u686_20:
 22726  2391                     	
 22727                           i1l4945:	
 22728  2391                     	movlw	low(033h)
 22729  2391  3033               	subwf	(_g_10msTick),w	;volatile
 22730  2392  027D               	skipnc
 22731  2393  1803               	goto	u687_21
 22732  2394  2B96               	goto	u687_20
 22733  2395  2B97               u687_21:
 22734  2396                     	goto	i1l4949
 22735  2396  2B9D               u687_20:
 22736  2397                     	line	485
 22737                           	
 22738                           i1l4947:	
 22739  2397                     ;main.c: 485:    g_pbState = PB_SHORT;
 22740                           	movlw	low(01h)
 22741  2397  3001               	movwf	(??_pushButtonISR+0)+0
 22742  2398  00F0               	movf	(??_pushButtonISR+0)+0,w
 22743  2399  0870               	movlb 2	; select bank2
 22744  239A  0142               	movwf	(_g_pbState)^0100h	;volatile
 22745  239B  00ED               	goto	i1l324
 22746  239C  2BB7               	line	486
 22747                           ;main.c: 486:   else if ((g_10msTick > 50) & (g_10msTick <= 150))
 22748                           	
 22749                           i1l320:	
 22750  239D                     	
 22751                           i1l4949:	
 22752  239D                     	movlw	low(033h)
 22753  239D  3033               	subwf	(_g_10msTick),w	;volatile
 22754  239E  027D               	skipc
 22755  239F  1C03               	goto	u688_21
 22756  23A0  2BA2               	goto	u688_20
 22757  23A1  2BA3               u688_21:
 22758  23A2                     	goto	i1l4955
 22759  23A2  2BAF               u688_20:
 22760  23A3                     	
 22761                           i1l4951:	
 22762  23A3                     	movlw	low(097h)
 22763  23A3  3097               	subwf	(_g_10msTick),w	;volatile
 22764  23A4  027D               	skipnc
 22765  23A5  1803               	goto	u689_21
 22766  23A6  2BA8               	goto	u689_20
 22767  23A7  2BA9               u689_21:
 22768  23A8                     	goto	i1l4955
 22769  23A8  2BAF               u689_20:
 22770  23A9                     	line	488
 22771                           	
 22772                           i1l4953:	
 22773  23A9                     ;main.c: 488:    g_pbState = PB_LONG;
 22774                           	movlw	low(02h)
 22775  23A9  3002               	movwf	(??_pushButtonISR+0)+0
 22776  23AA  00F0               	movf	(??_pushButtonISR+0)+0,w
 22777  23AB  0870               	movlb 2	; select bank2
 22778  23AC  0142               	movwf	(_g_pbState)^0100h	;volatile
 22779  23AD  00ED               	goto	i1l324
 22780  23AE  2BB7               	line	489
 22781                           ;main.c: 489:   else
 22782                           	
 22783                           i1l322:	
 22784  23AF                     	line	491
 22785                           	
 22786                           i1l4955:	
 22787  23AF                     ;main.c: 491:    g_pbState = PB_ABORT;
 22788                           	movlw	low(03h)
 22789  23AF  3003               	movwf	(??_pushButtonISR+0)+0
 22790  23B0  00F0               	movf	(??_pushButtonISR+0)+0,w
 22791  23B1  0870               	movlb 2	; select bank2
 22792  23B2  0142               	movwf	(_g_pbState)^0100h	;volatile
 22793  23B3  00ED               	goto	i1l324
 22794  23B4  2BB7               	
 22795                           i1l323:	
 22796  23B5                     	goto	i1l324
 22797  23B5  2BB7               	
 22798                           i1l321:	
 22799  23B6                     	goto	i1l324
 22800  23B6  2BB7               	line	492
 22801                           ;main.c: 492:  }
 22802                           	
 22803                           i1l319:	
 22804  23B7                     	line	493
 22805                           	
 22806                           i1l324:	
 22807  23B7                     	return
 22808  23B7  0008               	opt stack 0
 22809                           GLOBAL	__end_of_pushButtonISR
 22810                           	__end_of_pushButtonISR:
 22811  23B8                     	signat	_pushButtonISR,89
 22812                           	global	___llmod
 22813                           
 22814 ;; *************** function ___llmod *****************
 22815 ;; Defined at:
 22816 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\llmod.c"
 22817 ;; Parameters:    Size  Location     Type
 22818 ;;  divisor         4    0[COMMON] unsigned long 
 22819 ;;  dividend        4    4[COMMON] unsigned long 
 22820 ;; Auto vars:     Size  Location     Type
 22821 ;;  counter         1    9[COMMON] unsigned char 
 22822 ;; Return value:  Size  Location     Type
 22823 ;;                  4    0[COMMON] unsigned long 
 22824 ;; Registers used:
 22825 ;;		wreg, status,2, status,0
 22826 ;; Tracked objects:
 22827 ;;		On entry : 0/0
 22828 ;;		On exit  : 0/0
 22829 ;;		Unchanged: 0/0
 22830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22831 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22832 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22833 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22834 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22835 ;;Total ram usage:       10 bytes
 22836 ;; Hardware stack levels used:    1
 22837 ;; This function calls:
 22838 ;;		Nothing
 22839 ;; This function is called by:
 22840 ;;		_ISR
 22841 ;; This function uses a non-reentrant model
 22842 ;;
 22843                           psect	text63,local,class=CODE,delta=2,merge=1,group=1
 22844                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\llmod.c"
 22845                           	line	5
 22846                           global __ptext63
 22847                           __ptext63:	;psect for function ___llmod
 22848  2527                     psect	text63
 22849                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\llmod.c"
 22850                           	line	5
 22851                           	global	__size_of___llmod
 22852                           	__size_of___llmod	equ	__end_of___llmod-___llmod
 22853  0051                     	
 22854                           ___llmod:	
 22855  2527                     ;incstack = 0
 22856                           	opt	stack 5
 22857                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 22858                           	line	12
 22859                           	
 22860                           i1l4999:	
 22861  2527                     	movf	(___llmod@divisor+3),w
 22862  2527  0873               	iorwf	(___llmod@divisor+2),w
 22863  2528  0472               	iorwf	(___llmod@divisor+1),w
 22864  2529  0471               	iorwf	(___llmod@divisor),w
 22865  252A  0470               	skipnz
 22866  252B  1903               	goto	u696_21
 22867  252C  2D2E               	goto	u696_20
 22868  252D  2D2F               u696_21:
 22869  252E                     	goto	i1l5015
 22870  252E  2D6E               u696_20:
 22871  252F                     	line	13
 22872                           	
 22873                           i1l5001:	
 22874  252F                     	clrf	(___llmod@counter)
 22875  252F  01F9               	incf	(___llmod@counter),f
 22876  2530  0AF9               	line	14
 22877                           	goto	i1l5005
 22878  2531  2D3E               	
 22879                           i1l816:	
 22880  2532                     	line	15
 22881                           	
 22882                           i1l5003:	
 22883  2532                     	movlw	01h
 22884  2532  3001               u697_25:
 22885  2533                     	lslf	(___llmod@divisor),f
 22886  2533  35F0               	rlf	(___llmod@divisor+1),f
 22887  2534  0DF1               	rlf	(___llmod@divisor+2),f
 22888  2535  0DF2               	rlf	(___llmod@divisor+3),f
 22889  2536  0DF3               	decfsz	wreg,f
 22890  2537  0B89               	goto	u697_25
 22891  2538  2D33               	line	16
 22892                           	movlw	low(01h)
 22893  2539  3001               	movwf	(??___llmod+0)+0
 22894  253A  00F8               	movf	(??___llmod+0)+0,w
 22895  253B  0878               	addwf	(___llmod@counter),f
 22896  253C  07F9               	goto	i1l5005
 22897  253D  2D3E               	line	17
 22898                           	
 22899                           i1l815:	
 22900  253E                     	line	14
 22901                           	
 22902                           i1l5005:	
 22903  253E                     	btfss	(___llmod@divisor+3),(31)&7
 22904  253E  1FF3               	goto	u698_21
 22905  253F  2D41               	goto	u698_20
 22906  2540  2D42               u698_21:
 22907  2541                     	goto	i1l5003
 22908  2541  2D32               u698_20:
 22909  2542                     	goto	i1l5007
 22910  2542  2D44               	
 22911                           i1l817:	
 22912  2543                     	goto	i1l5007
 22913  2543  2D44               	line	18
 22914                           	
 22915                           i1l818:	
 22916  2544                     	line	19
 22917                           	
 22918                           i1l5007:	
 22919  2544                     	movf	(___llmod@divisor+3),w
 22920  2544  0873               	subwf	(___llmod@dividend+3),w
 22921  2545  0277               	skipz
 22922  2546  1D03               	goto	u699_25
 22923  2547  2D52               	movf	(___llmod@divisor+2),w
 22924  2548  0872               	subwf	(___llmod@dividend+2),w
 22925  2549  0276               	skipz
 22926  254A  1D03               	goto	u699_25
 22927  254B  2D52               	movf	(___llmod@divisor+1),w
 22928  254C  0871               	subwf	(___llmod@dividend+1),w
 22929  254D  0275               	skipz
 22930  254E  1D03               	goto	u699_25
 22931  254F  2D52               	movf	(___llmod@divisor),w
 22932  2550  0870               	subwf	(___llmod@dividend),w
 22933  2551  0274               u699_25:
 22934  2552                     	skipc
 22935  2552  1C03               	goto	u699_21
 22936  2553  2D55               	goto	u699_20
 22937  2554  2D56               u699_21:
 22938  2555                     	goto	i1l5011
 22939  2555  2D5F               u699_20:
 22940  2556                     	line	20
 22941                           	
 22942                           i1l5009:	
 22943  2556                     	movf	(___llmod@divisor),w
 22944  2556  0870               	subwf	(___llmod@dividend),f
 22945  2557  02F4               	movf	(___llmod@divisor+1),w
 22946  2558  0871               	subwfb	(___llmod@dividend+1),f
 22947  2559  3BF5               	movf	(___llmod@divisor+2),w
 22948  255A  0872               	subwfb	(___llmod@dividend+2),f
 22949  255B  3BF6               	movf	(___llmod@divisor+3),w
 22950  255C  0873               	subwfb	(___llmod@dividend+3),f
 22951  255D  3BF7               	goto	i1l5011
 22952  255E  2D5F               	
 22953                           i1l819:	
 22954  255F                     	line	21
 22955                           	
 22956                           i1l5011:	
 22957  255F                     	movlw	01h
 22958  255F  3001               u700_25:
 22959  2560                     	lsrf	(___llmod@divisor+3),f
 22960  2560  36F3               	rrf	(___llmod@divisor+2),f
 22961  2561  0CF2               	rrf	(___llmod@divisor+1),f
 22962  2562  0CF1               	rrf	(___llmod@divisor),f
 22963  2563  0CF0               	decfsz	wreg,f
 22964  2564  0B89               	goto	u700_25
 22965  2565  2D60               
 22966                           	line	22
 22967                           	
 22968                           i1l5013:	
 22969  2566                     	movlw	01h
 22970  2566  3001               	subwf	(___llmod@counter),f
 22971  2567  02F9               	btfss	status,2
 22972  2568  1D03               	goto	u701_21
 22973  2569  2D6B               	goto	u701_20
 22974  256A  2D6C               u701_21:
 22975  256B                     	goto	i1l5007
 22976  256B  2D44               u701_20:
 22977  256C                     	goto	i1l5015
 22978  256C  2D6E               	
 22979                           i1l820:	
 22980  256D                     	goto	i1l5015
 22981  256D  2D6E               	line	23
 22982                           	
 22983                           i1l814:	
 22984  256E                     	line	24
 22985                           	
 22986                           i1l5015:	
 22987  256E                     	movf	(___llmod@dividend+3),w
 22988  256E  0877               	movwf	(?___llmod+3)
 22989  256F  00F3               	movf	(___llmod@dividend+2),w
 22990  2570  0876               	movwf	(?___llmod+2)
 22991  2571  00F2               	movf	(___llmod@dividend+1),w
 22992  2572  0875               	movwf	(?___llmod+1)
 22993  2573  00F1               	movf	(___llmod@dividend),w
 22994  2574  0874               	movwf	(?___llmod)
 22995  2575  00F0               
 22996                           	goto	i1l821
 22997  2576  2D77               	
 22998                           i1l5017:	
 22999  2577                     	line	25
 23000                           	
 23001                           i1l821:	
 23002  2577                     	return
 23003  2577  0008               	opt stack 0
 23004                           GLOBAL	__end_of___llmod
 23005                           	__end_of___llmod:
 23006  2578                     	signat	___llmod,8316
 23007                           global	___latbits
 23008                           ___latbits	equ	3
 23009  0003                     	global	btemp
 23010                           	btemp set 07Eh
 23011  007E                     
 23012                           	DABS	1,126,2	;btemp
 23013                           	global	int$flags
 23014                           	int$flags	set btemp
 23015  007E                     	global	wtemp0
 23016                           	wtemp0 set btemp+0
 23017  007E                     	end


Data Sizes:
    Strings     189
    Constant    28
    Data        15
    BSS         186
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     66      80
    BANK3            80     74      80
    BANK4            80      0      78
    BANK5            80      0      20
    BANK6            80      0      80
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    strncpy@s	PTR const unsigned char  size(1) Largest target is 20
		 -> uartReceiveISR@buffer(BANK5[20]), 

    strncpy@d	PTR unsigned char  size(1) Largest target is 15
		 -> g_dataPacket(BANK4[15]), 

    strncpy@cp	PTR unsigned char  size(1) Largest target is 15
		 -> g_dataPacket(BANK4[15]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK2[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK2[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_sprintf(BANK2[2]), stoa@nuls(BANK0[7]), dbuf(BANK6[80]), showMenu@s12(BANK3[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_sprintf(BANK2[2]), stoa@nuls(BANK0[7]), dbuf(BANK6[80]), showMenu@s12(BANK3[12]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK6[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK6[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK6[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK6[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_6(CODE[42]), STR_5(CODE[17]), STR_4(CODE[13]), STR_2(CODE[15]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 61
		 -> showMenu@s12(BANK3[12]), showMenu@s(BANK3[61]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK2[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 61
		 -> showMenu@s12(BANK3[12]), showMenu@s(BANK3[61]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK6[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    S1299_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 61
		 -> showMenu@s12(BANK3[12]), showMenu@s(BANK3[61]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 61
		 -> showMenu@s12(BANK3[12]), showMenu@s(BANK3[61]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_6(CODE[42]), STR_5(CODE[17]), STR_4(CODE[13]), STR_2(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_6(CODE[42]), STR_5(CODE[17]), STR_4(CODE[13]), STR_2(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 42
		 -> STR_6(CODE[42]), STR_5(CODE[17]), STR_4(CODE[13]), STR_2(CODE[15]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 12
		 -> ?_sprintf(BANK2[2]), showMenu@s12(BANK3[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK2[2]), 

    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    stoa@s	PTR unsigned char  size(1) Largest target is 12
		 -> ?_sprintf(BANK2[2]), showMenu@s12(BANK3[12]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 12
		 -> ?_sprintf(BANK2[2]), stoa@nuls(BANK0[7]), showMenu@s12(BANK3[12]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK6[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK6[80]), 

    OLED_print_xy@s	PTR unsigned char  size(2) Largest target is 61
		 -> STR_7(CODE[49]), STR_3(CODE[49]), showMenu@s(BANK3[61]), STR_1(CODE[13]), 

    sp__strncpy	PTR unsigned char  size(1) Largest target is 15
		 -> g_dataPacket(BANK4[15]), 

    menuInput@menu	PTR unsigned char  size(1) Largest target is 1
		 -> showMenu@menu(BANK3[1]), 

    menuInput@page	PTR unsigned char  size(1) Largest target is 1
		 -> showMenu@page(BANK3[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___llmod
    _uartReceiveISR->_strncpy

Critical Paths under _main in BANK0

    _timeSince->_timeNow
    _vfpfcnvrt->_efgtoa
    _stoa->_fputc
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___fladd
    _atoi->___wmul
    _atoi->_isdigit
    _OLED_scrollDisplayRight->_OLED_command
    _OLED_scrollDisplayLeft->_OLED_command
    _OLED_returnHome->_OLED_command
    _OLED_print_xy->_OLED_command
    _OLED_print_xy->_OLED_write
    _OLED_write->_OLED_send
    _handleSensorData->___xxtofl
    _convertAnalogValues->___fldiv
    _ema->___lmul
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___fladd->___flmul
    _checkStatus->___flge
    ___flge->___flmul
    _OLED_init->_OLED_command
    _OLED_command->_OLED_send
    _OLED_send->_OLED_write4bits

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_showMenu
    _showMenu->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_showMenu

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ISR in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   51011
                                             55 BANK2     11    11      0
                       _OLED_command
                          _OLED_init
                    _OLED_returnHome
                        _checkStatus
                _convertAnalogValues
                   _handleSensorData
                         _initialize
                           _showMenu
                            _timeNow
                          _timeSince
                       _uartSendByte
 ---------------------------------------------------------------------------------
 (1) _uartSendByte                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _timeSince                                           20    16      4     285
                                              4 BANK0     20    16      4
                            _timeNow
 ---------------------------------------------------------------------------------
 (2) _timeNow                                              4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _showMenu                                            76    76      0   37576
                                             53 BANK2      2     2      0
                                              0 BANK3     74    74      0
                      _OLED_print_xy
                    _OLED_returnHome
                              _getPB
                          _menuInput
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             29    10     19   32692
                                             24 BANK2     29    10     19
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   32047
                                             16 BANK2      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           38    36      2   31707
                                             72 BANK1      8     6      2
                                              0 BANK2     16    16      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             10     6      4     410
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _stoa                                                23    21      2    2018
                                              8 BANK0     23    21      2
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              66    61      5   23524
                                             76 BANK0      4     4      0
                                             10 BANK1     62    57      5
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 BANK0      8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               8     6      2     641
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    3860
                                             16 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               6     4      2     164
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1605
                                              8 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                8     5      3    1290
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             66 BANK0     10     6      4
                                              0 BANK1     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       16    12      4     287
                                              0 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             11     7      4     381
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2789
                                             64 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     394
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     448
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     452
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1283
                                              6 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              5     3      2     207
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     290
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _menuInput                                           11     6      5    2765
                                              7 BANK0     11     6      5
                    _OLED_returnHome
             _OLED_scrollDisplayLeft
            _OLED_scrollDisplayRight
                              _getPB
                          _getRotDir
 ---------------------------------------------------------------------------------
 (3) _getRotDir                                            2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _getPB                                                2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _OLED_scrollDisplayRight                              0     0      0     352
                       _OLED_command
 ---------------------------------------------------------------------------------
 (3) _OLED_scrollDisplayLeft                               0     0      0     352
                       _OLED_command
 ---------------------------------------------------------------------------------
 (3) _OLED_returnHome                                      0     0      0     352
                       _OLED_command
 ---------------------------------------------------------------------------------
 (2) _OLED_print_xy                                        9     6      3    1577
                                              7 BANK0      9     6      3
                       _OLED_command
                         _OLED_write
 ---------------------------------------------------------------------------------
 (3) _OLED_write                                           1     1      0     352
                                              6 BANK0      1     1      0
                          _OLED_send
                  _OLED_waitForReady
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _handleSensorData                                     4     4      0     626
                                             14 BANK0      4     4      0
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _convertAnalogValues                                  6     6      0   10341
                                             66 BANK0      6     6      0
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                   _adcGetConversion
                                _ema
 ---------------------------------------------------------------------------------
 (2) _ema                                                 20    12      8    1191
                                             12 BANK0     20    12      8
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     396
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _adcGetConversion                                     4     2      2      22
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             26    18      8    3785
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             26    18      8    2185
                                             40 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             24    16      8    2440
                                             40 BANK0     24    16      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _checkStatus                                          0     0      0     942
                             ___flge
 ---------------------------------------------------------------------------------
 (6) ___flge                                              16     8      8     942
                                             40 BANK0     16     8      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _OLED_init                                            1     1      0     440
                                              7 BANK0      1     1      0
                       _OLED_command
                    _OLED_write4bits
 ---------------------------------------------------------------------------------
 (4) _OLED_command                                         1     1      0     352
                                              6 BANK0      1     1      0
                          _OLED_send
                  _OLED_waitForReady
 ---------------------------------------------------------------------------------
 (5) _OLED_waitForReady                                    1     1      0      24
                                              0 BANK0      1     1      0
                   _OLED_pulseEnable
 ---------------------------------------------------------------------------------
 (5) _OLED_send                                            3     2      1     306
                                              3 BANK0      3     2      1
                    _OLED_write4bits
 ---------------------------------------------------------------------------------
 (6) _OLED_write4bits                                      3     3      0      88
                                              0 BANK0      3     3      0
                   _OLED_pulseEnable
 ---------------------------------------------------------------------------------
 (6) _OLED_pulseEnable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 1     1      0     660
                                             10 COMMON     1     1      0
                            ___llmod
                      _pushButtonISR
                             _rotISR
                     _uartReceiveISR
 ---------------------------------------------------------------------------------
 (11) _uartReceiveISR                                      1     1      0     326
                                              6 COMMON     1     1      0
                            _strncpy
 ---------------------------------------------------------------------------------
 (12) _strncpy                                             6     3      3     326
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (11) _rotISR                                              8     8      0      23
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (11) _pushButtonISR                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) ___llmod                                            10     2      8     311
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OLED_command
     _OLED_send
       _OLED_write4bits
         _OLED_pulseEnable
     _OLED_waitForReady
       _OLED_pulseEnable
   _OLED_init
     _OLED_command
       _OLED_send
         _OLED_write4bits
           _OLED_pulseEnable
       _OLED_waitForReady
         _OLED_pulseEnable
     _OLED_write4bits
       _OLED_pulseEnable
   _OLED_returnHome
     _OLED_command
       _OLED_send
         _OLED_write4bits
           _OLED_pulseEnable
       _OLED_waitForReady
         _OLED_pulseEnable
   _checkStatus
     ___flge
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
   _convertAnalogValues
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl
     _adcGetConversion
     _ema
       ___lmul
   _handleSensorData
     ___xxtofl
   _initialize
   _showMenu
     _OLED_print_xy
       _OLED_command
         _OLED_send
           _OLED_write4bits
             _OLED_pulseEnable
         _OLED_waitForReady
           _OLED_pulseEnable
       _OLED_write
         _OLED_send
           _OLED_write4bits
             _OLED_pulseEnable
         _OLED_waitForReady
           _OLED_pulseEnable
     _OLED_returnHome
       _OLED_command
         _OLED_send
           _OLED_write4bits
             _OLED_pulseEnable
         _OLED_waitForReady
           _OLED_pulseEnable
     _getPB
     _menuInput
       _OLED_returnHome
         _OLED_command
           _OLED_send
             _OLED_write4bits
               _OLED_pulseEnable
           _OLED_waitForReady
             _OLED_pulseEnable
       _OLED_scrollDisplayLeft
         _OLED_command
           _OLED_send
             _OLED_write4bits
               _OLED_pulseEnable
           _OLED_waitForReady
             _OLED_pulseEnable
       _OLED_scrollDisplayRight
         _OLED_command
           _OLED_send
             _OLED_write4bits
               _OLED_pulseEnable
           _OLED_waitForReady
             _OLED_pulseEnable
       _getPB
       _getRotDir
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___flmul
               __Umul8_16
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _tolower
             _isupper
   _timeNow
   _timeSince
     _timeNow
   _uartSendByte

 _ISR (ROOT)
   ___llmod
   _pushButtonISR
   _rotISR
   _uartReceiveISR
     _strncpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
ABS                  0      0     200       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     42      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50     4A      50      12      100.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      4E      14       97.5%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      14      16       25.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      50      18      100.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              20      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     200      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Tue Jan 21 00:43:55 2020

                   _pushButtonISR 2384          __end_of_transition_table 281C                      ___fldiv@aexp 0061  
                    ___fldiv@bexp 0060                      ___fldiv@sign 0059                       __CFG_CP$OFF 0000  
                    ___awdiv@sign 0026               ___wmul@multiplicand 0022               __Umul8_16@word_mpld 0026  
                     __CFG_LVP$ON 0000                               l210 2308                               l202 0814  
                             l211 2308                               l220 222F                               l205 195E  
                             l214 1916                               l206 1996                               l232 2676  
                             l209 2305                               l217 2222                               l233 2679  
                             l241 138F                               l218 2222                               l234 2679  
                             l242 12CF                               l219 2227                               l251 1CF5  
                             l243 138E                               l340 24DA                               l260 1D5C  
                             l252 1CDC                               l500 059F                               l244 12F8  
                             l229 09B0                               l261 1D5F                               l253 1CF4  
                             l501 05C0                               l245 1321                               l270 24E1  
                             l254 1D2E                               l430 2785                               l422 2747  
                             l510 0720                               l246 13B5                               l190 1DDC  
                             l343 21B8                               l351 2151                               l271 24E1  
                             l255 1D2D                               l431 2795                               l503 067D  
                             l247 13B4                               l191 1E26                               l272 24E6  
                             l360 2135                               l264 2175                               l256 1D14  
                             l424 2751                               l520 0767                               l512 0730  
                             l504 067E                               l248 13B5                               l192 1DDD  
                             l337 1009                               l273 2526                               l257 1D2C  
                             l505 069C                               l441 1084                               l193 1E04  
                             l346 2236                               l602 23F7                               l354 215D  
                             l258 1D44                               l426 2753                               l506 07A9  
                             l522 077B                               l514 0735                               l450 015D  
                             l442 00D2                               l434 105C                               l194 1E12  
                             l347 2250                               l603 2404                               l363 213A  
                             l267 2169                               l259 1D5D                               l427 2768  
                             l507 06C3                               l451 0130                               l443 10F9  
                             l435 109A                               l531 1E82                               l195 1E11  
                             l187 1D8E                               l348 2252                               l604 241B  
                             l380 2442                               l428 2756                               l516 0786  
                             l508 070A                               l460 01F5                               l540 1EE8  
                             l276 218B                               l188 1E15                               l196 1E13  
                             l357 1AA4                               l605 2424                               l381 245C  
                             l429 2776                               l509 06C8                               l461 0227  
                             l453 010A                               l445 10D3                               l437 1073  
                             l541 1F12                               l533 1E7C                               l277 218B  
                             l197 1E33                               l189 1D96                               l382 245C  
                             l518 078B                               l470 02AC                               l462 01F6  
                             l542 1F01                               l534 1EB9                               l550 0C80  
                             l278 2191                               l198 1E34                               l463 024F  
                             l455 011E                               l447 10E7                               l439 107F  
                             l543 1EEF                               l535 1EA8                               l527 1E55  
                             l551 0CF6                               l279 2191                               l199 1E34  
                             l480 0300                               l472 02A5                               l464 0298  
                             l456 013C                               l448 1105                               l544 1F11  
                             l536 1E96                               l560 0D41                               l552 0CA2  
                             l385 2130                               l481 0326                               l465 0279  
                             l457 0250                               l449 07C4                               l545 1F18  
                             l537 1EB8                               l529 1E7D                               l561 0DB6  
                             l553 0C97                               l482 031A                               l474 02AB  
                             l458 01B9                               l538 1EDA                               l570 0E2B  
                             l562 0D62                               l379 2451                               l491 04FC  
                             l483 0325                               l475 02EB                               l467 028E  
                             l459 0188                               l539 1EBD                               l571 0E82  
                             l563 0D57                               l555 0CCB                               l900 0AA7  
                             l740 27CD                               l484 0411                               l476 02E4  
                             l548 0FD0                               l580 0F92                               l572 0FFF  
                             l901 0AAD                               l741 27E2                               l493 04FE  
                             l485 0339                               l477 02EB                               l469 0297  
                             l581 0FC3                               l573 0F53                               l565 0D8B  
                             l557 0CEE                               l549 0C81                               l910 0BA9  
                             l902 0AC2                               l590 2257                               l742 27EE  
                             l734 27A4                               l750 26A5                               l494 065A  
                             l486 0424                               l478 0305                               l574 0F12  
                             l558 0CF5                               l911 0B64                               l903 0B02  
                             l591 225F                               l743 27FA                               l735 27B2  
                             l751 269B                               l495 0505                               l487 0480  
                             l559 0DB7                               l567 0DAE                               l920 0BA2  
                             l912 0B63                               l904 0AD5                               l592 2270  
                             l744 27FF                               l736 27EF                               l752 26AA  
                             l760 2595                               l496 0579                               l488 04B6  
                             l576 0ED4                               l568 0DB5                               l584 07E9  
                             l921 0BA8                               l913 0B6C                               l905 0C22  
                             l593 2275                               l737 27C7                               l753 26AB  
                             l761 25B1                               l497 05D7                               l489 04B5  
                             l569 0E2C                               l585 07CF                               l770 1B74  
                             l922 0BC0                               l914 0B83                               l906 0B01  
                             l738 27BD                               l754 26BA                               l498 059E  
                             l578 0EF7                               l586 07F4                               l771 1BA0  
                             l931 0BFF                               l923 0BB7                               l915 0BA3  
                             l907 0AEB                               l739 27CC                               l755 26C6  
                             l747 2688                               l763 25C5                               l499 05B9  
                             l579 0F27                               l587 07FD                               l772 1BCC  
                             l932 0C0E                               l924 0BBF                               l916 0B84  
                             l908 0AEE                               l756 26D2                               l748 2692  
                             l780 2182                               l933 0C15                               l925 0BBE  
                             l917 0B90                               l909 0AF4                               l941 13C6  
                             l757 26D7                               l749 26C7                               l765 25C7  
                             l781 2183                               l774 1BE4                               l934 0C19  
                             l926 0BF4                               l918 0B97                               l950 1594  
                             l942 13DC                               l766 25C8                               l790 1B29  
                             l935 0C22                               l927 0BF4                               l919 0B9A  
                             l951 144B                               l943 13D9                               l791 1B18  
                             l776 1BE6                               l928 0BF3                               l960 14CE  
                             l952 14BC                               l944 13E5                               l792 1B22  
                             l784 1AC3                               l777 1BE7                               l769 1B57  
                             l929 0C0F                               l961 14DB                               l953 147A  
                             l945 13F4                               l793 1B19                               l785 1B39  
                             l890 0A0D                               l970 1574                               l962 14EC  
                             l954 149B                               l946 140A                               l938 220D  
                             l794 1B28                               l786 1B08                               l891 0A0A  
                             l971 157F                               l963 1511                               l955 1493  
                             l947 1407                               l795 1B39                               l787 1AF6  
                             l892 0A15                               l884 09C1                               l972 1583  
                             l964 1508                               l956 14B7                               l948 1412  
                             l980 15C3                               l788 1AF7                               l893 0A61  
                             l885 09D7                               l965 1510                               l957 14C3  
                             l949 1434                               l981 15D2                               l789 1B07  
                             l894 0A24                               l886 09D4                               l966 150F  
                             l958 14CD                               l990 1738                               l982 15E7  
                             l895 0A99                               l887 09E0                               l967 1540  
                             l959 14E7                               l991 1745                               l983 15E5  
                             l896 0AC2                               l888 09ED                               l968 153F  
                             l992 1756                               l984 15F0                               l897 0ABA  
                             l889 09F7                               l969 155A                               l993 177B  
                             l985 1605                               l977 15A5                               l898 0A9A  
                             l994 1772                               l978 15BA                               l899 0AA4  
                             l995 177A                               l987 15FB                               l979 15B8  
                             l996 1779                               l988 17FF                               l997 17AA  
                             l989 1751                               l998 17A9                               l999 17C1  
                             _ISR 0004                               _ema 18AA                               _pad 2736  
                    ___awmod@sign 0026                      __CFG_BORV$LO 0000                               wreg 0009  
                    ___flmul@aexp 0040                      ___flmul@bexp 0041                      ___flmul@sign 003B  
                    ___flmul@temp 0046                      ___flmul@prod 0042                     __CFG_BBEN$OFF 0000  
                            ?_ISR 0070                      __CFG_ZCD$OFF 0000                      ___fltol@exp1 002A  
                            l1000 17F2                              l1001 17DA                              l1002 17F2  
                            l1010 1C2E                              l1003 17ED                              l1011 1C22  
                            l1020 1C66                              l1012 1C35                              l1021 1C72  
                            l1013 1C49                              l1022 1C93                              l1014 1C36  
                            l1006 1C03                              l1102 26E9                              l1015 1C50  
                            l1007 1C0B                              l1031 19EB                              l1016 1C5B  
                            l1008 1C1D                              l1040 1F24                              l1032 1A19  
                            l1104 26E4                              l1017 1C51                              l1009 1C9C  
                            l1041 1F1F                              l1033 1A14                              l1105 2734  
                            l1050 1F6A                              l1106 2733                              l1114 2372  
                            l1130 22CA                              l1019 1C66                              l1051 1F6E  
                            l1043 1F4E                              l1027 19ED                              l1115 235E  
                            l1131 22C9                              l1052 1F87                              l1108 2715  
                            l1116 2383                              l1132 22E2                              l1124 2358  
                            l1061 1FF9                              l1053 1FAF                              l1045 1F62  
                            l1029 19E6                              l1109 2735                              l1117 2383  
                            l1133 22E2                              l1054 1F88                              l1070 126A  
                            l1142 1859                              l1063 1FFE                              l1047 1F46  
                            l1071 1207                              l1127 07FE                              l1143 18A9  
                            l1080 21D2                              l1064 1FFF                              l1056 1FCC  
                            l1048 1F69                              l1072 11BE                              l1136 22A5  
                            l1144 1867                              l1049 1F73                              l1073 11E7  
                            l1137 22A0                              l1145 185A                              l1058 1FE0  
                            l1074 1259                              l1138 22AF                              l1059 1FE7  
                            l1075 122F                              l1139 22BD                              l1163 23EC  
                            l1147 1890                              l1076 1259                              l1148 1891  
                            l1077 1258                              l1069 117B                              l1165 23D1  
                            l1174 2315                              l1094 21EC                              l1175 231D  
                            l1087 2291                              l1167 23DE                              l1176 232A  
                            l1088 2299                              l1168 23EC                              l1177 232F  
                            l4001 2299                              l3201 236C                              l4003 21A3  
                            l4011 2230                              l3203 2372                              l3211 22AF  
                            l4005 21A8                              l4021 2247                              l4013 2237  
                            l3301 0A7E                              l3221 09B7                              l3213 22BD  
                            l3205 229A                              l4101 01B4                              l4007 21A9  
                            l4023 224A                              l4015 223B                              l3311 0AAD  
                            l3303 0A9E                              l3231 09CB                              l3223 09BB  
                            l3207 22A0                              l3215 21D3                              l4103 01B9  
                            l4111 0250                              l4031 1034                              ?_ema 002C  
                            l4009 21B3                              l4017 2241                              l3401 0C0C  
                            l3321 0AD4                              l3313 0AB5                              l3305 0AA4  
                            l3241 09E5                              l3233 09D4                              l3225 09BF  
                            l3209 22A5                              l3217 21EC                              l4201 0574  
                            l4121 0288                              l4113 0262                              l4105 01F6  
                            l4041 106D                              l4033 1039                              l4025 100C  
                            l4019 2246                              l3411 0C21                              l3403 0C0F  
                            l3331 0AEB                              l3323 0AD5                              l3307 0AA7  
                            l3315 0ABA                              l3251 09F7                              l3243 09EB  
                            l3235 09D5                              l3227 09C1                              l3219 09B1  
                            l4211 0595                              l4203 0579                              l4131 02B2  
                            l4123 028E                              l4115 0268                              l4107 0222  
                            l4051 1090                              l4043 1073                              l4035 105C  
                            l4027 100E                              l3405 0C13                              l3333 0AEE  
                            l3325 0ADD                              l3317 0AC6                              l3341 0B02  
                            l3309 0AAB                              l3253 09FC                              l3261 0A0D  
                            l3245 09ED                              l3229 09C6                              l3237 09D7  
                            l3421 2324                              l3413 230B                              l3501 1180  
                            l3181 26E9                              l4301 077B                              l4221 05B4  
                            l4213 0599                              l4205 0580                              l4141 02F5  
                            l4133 02C1                              l4125 029D                              l4117 026E  
                            l4109 0227                              l4061 10E7                              l4053 1095  
                            l4045 107A                              l4037 105F                              l4029 1016  
                            l5021 1D63                              l3191 1001                              l3431 24D7  
                            l3407 0C15                              l3343 0B18                              l3351 0B64  
                            l3335 0AF2                              l3327 0AE1                              l3319 0ACB  
                            l3271 0A2C                              l3263 0A1B                              l3255 0A01  
                            l3247 09F1                              l3239 09E0                              l3423 232A  
                            l3415 230D                              l3511 11E7                              l3503 11A2  
                            l3183 26F5                              l3175 26D8                              l4311 079C  
                            l4303 0781                              l4215 059F                              l4207 0584  
                            l4223 05B9                              l4231 05D7                              l4151 030F  
                            l4143 02FB                              l4135 02DD                              l4127 02A5  
                            l4119 0275                              l4071 00D1                              l4063 10ED  
                            l4047 107F                              l4055 109A                              l4039 1067  
                            l5031 1D8F                              l5023 1D65                              l3193 1003  
                            l3409 0C1D                              l3361 0B8B                              l3353 0B74  
                            l3345 0B53                              l3337 0AF4                              l3329 0AE5  
                            l3281 0A40                              l3273 0A30                              l3265 0A1F  
                            l3257 0A0A                              l3249 09F5                              l3425 232F  
                            l3417 2315                              l4401 1FED                              l3601 269B  
                            l3521 126A                              l3505 11BD                              l3513 1207  
                            l3185 2715                              l3177 26DE                              l3441 2751  
                            l3433 2738                              l4305 0786                              l4313 07A9  
                            l4241 066C                              l4233 0625                              l4225 05C0  
                            l4217 05AB                              l4209 0590                              l4161 0328  
                            l4153 0317                              l4145 0300                              l4137 02E4  
                            l4129 02AC                              l4081 0124                              l4065 10F9  
                            l4057 10B5                              l4073 00D2                              l4049 1084  
                            l4321 1E4A                              l5041 1DD8                              l5033 1D92  
                            l5025 1D70                              l3195 1007                              l3427 249D  
                            l3371 0B9F                              l3363 0B8F                              l3355 0B79  
                            l3347 0B55                              l3339 0AFC                              l3291 0A54  
                            l3283 0A44                              l3275 0A34                              l3267 0A24  
                            l3259 0A0B                              l3419 2319                              l3531 225B  
                            l3523 21B9                              l4403 1FF9                              l3611 26BA  
                            l3603 26A0                              l3515 1225                              l3507 11BE  
                            l3187 2729                              l3179 26E4                              l3451 2785  
                            l3443 2756                              l3435 273D                              l4315 07C4  
                            l4307 078B                              l4251 069C                              l4243 067E  
                            l4235 0651                              l4227 05CD                              l4219 05B0  
                            l4171 0424                              l4163 0330                              l4155 031A  
                            l4147 0305                              l4139 02EF                              l4083 0130  
                            l4075 00EC                              l4091 015D                              l4067 1105  
                            l4059 10D3                              l4331 1E6D                              l4323 1E50  
                            l4411 1841                              l5051 1E0A                              l5043 1DDD  
                            l5035 1D96                              l5027 1D72                              l5019 1D60  
                            l3429 24D3                              l3381 0BB4                              l3365 0B94  
                            l3357 0B82                              l3373 0BA3                              l3349 0B5A  
                            l3293 0A58                              l3285 0A48                              l3277 0A38  
                            l3269 0A28                              l3533 2264                              l3525 21D2  
                            l4405 1FFF                              l3541 2796                              l3621 26D7  
                            l3613 26BF                              l3605 26A5                              l3701 1B29  
                            l3461 19CA                              l3517 122F                              l3509 11DD  
                            l3189 2735                              l3197 235B                              l3453 2795  
                            l3445 2762                              l3437 2747                              l4309 0797  
                            l4261 06B5                              l4253 06A3                              l4245 0685  
                            l4237 0655                              l4229 05D2                              l4181 04B6  
                            l4173 0476                              l4165 0339                              l4157 0320  
                            l4149 030B                              l4093 0166                              l4085 013C  
                            l4077 010A                              l4069 110A                              l4341 1EA2  
                            l4333 1E7D                              l4325 1E55                              l4317 1E38  
                            l4421 185E                              l4413 1849                              l4501 0E2C  
                            l5053 1E0B                              l5045 1DFF                              l5037 1DB9  
                            l5061 1E26                              l5029 1D8D                              l3391 0BD1  
                            l3383 0BBB                              l3367 0B97                              l3359 0B84  
                            l3375 0BA9                              l3295 0A5C                              l3287 0A4C  
                            l3279 0A3C                              l3711 13B6                              l3535 2269  
                            l3527 2253                              l3551 27A8                              l3543 2798  
                            l3607 26AB                              l3615 26C7                              l3631 25C5  
                            l3623 2578                              l3703 1B2E                              l3471 19F3  
                            l3463 19E1                              l3455 1997                              l3519 124E  
                            l3199 235E                              l3447 2768                              l3439 274C  
                            l4271 06CD                              l4263 06B9                              l4255 06A9  
                            l4247 068A                              l4191 0505                              l4239 065A  
                            l4183 04E9                              l4175 0480                              l4167 040C  
                            l4159 0326                              l4095 0168                              l4087 0141  
                            l4079 011E                              l4351 1ED5                              l4343 1EA8  
                            l4335 1E8F                              l4327 1E61                              l4319 1E46  
                            l4431 187F                              l4423 1862                              l4415 1855  
                            l4511 0E81                              l4503 0E32                              l5063 1E29  
                            l5055 1E0E                              l5047 1E01                              l5039 1DD4  
                            l3641 1B74                              l3393 0BEE                              l3385 0BC0  
                            l3377 0BAA                              l3369 0B9A                              l3289 0A50  
                            l3297 0A61                              l3801 14D5                              l3721 13CB  
                            l3713 13BC                              l4601 23ED                              l3537 2270  
                            l3529 2257                              l3561 27BD                              l3553 27AD  
                            l3545 279C                              l3617 26CC                              l3609 26B5  
                            l3633 25C8                              l3625 258D                              l3705 21ED  
                            l3473 1A13                              l3465 19E6                              l3457 19AF  
                            l3449 277B                              l3481 22CA                              l4281 0710  
                            l4273 06EA                              l4265 06BD                              l4257 06AD  
                            l4249 0696                              l4193 055E                              l4185 04F1  
                            l4177 04A7                              l4169 0411                              l4097 0187  
                            l4089 015C                              l4361 1F01                              l4353 1EDA  
                            l4337 1E95                              l4345 1EB9                              l4329 1E69  
                            l4433 1891                              l4417 1858                              l4425 1867  
                            l4521 0EFD                              l4505 0E44                              l4513 0E82  
                            l4441 0C38                              l5057 1E13                              l5049 1E04  
                            l3651 1BCE                              l3643 1B78                              l3635 1B3A  
                            l3395 0BF9                              l3387 0BC5                              l3379 0BAE  
                            l3299 0A62                              l3811 14EC                              l3803 14D9  
                            l3731 13E5                              l3723 13D0                              l3715 13C0  
                            l4611 241B                              l4603 23F7                              l3539 2275  
                            l4371 1F24                              l3571 27E0                              l3563 27C2  
                            l3555 27B2                              l3547 27A1                              l3619 26D2  
                            l3627 25A9                              l3707 21F0                              l3475 1A14  
                            l3467 19EC                              l3459 19C4                              l3491 23EB  
                            l3483 23B8                              l4291 0735                              l4283 0720  
                            l4275 0701                              l4267 06C3                              l4259 06B3  
                            l4195 0563                              l4187 04F7                              l4179 04AC  
                            l4099 0188                              l4355 1EEE                              l4363 1F12  
                            l4347 1EBD                              l4339 1E96                              l4435 18A9  
                            l4427 1870                              l4419 185A                              l4523 0F12  
                            l4515 0E96                              l4531 0F53                              l4507 0E4E  
                            l4451 0C66                              l4443 0C41                              l5171 1E1E  
                            l5059 1E15                              l4437 2149                              l3653 1BD0  
                            l3645 1BA0                              l3637 1B4F                              l3397 0BFF  
                            l3389 0BCD                              l3821 1511                              l3813 14ED  
                            l3805 14DB                              l3741 13F9                              l3733 13EA  
                            l3725 13D9                              l3717 13C4                              l3901 1639  
                            l4613 2424                              l4605 23FB                              l4621 18FA  
                            l4701 1D2E                              l5173 1F7F                              l4381 1F4E  
                            l4373 1F26                              l3581 27FA                              l3573 27E2  
                            l3565 27C7                              l3557 27B4                              l3549 27A4  
                            l3629 25C3                              l3661 2176                              l3709 220D  
                            l3477 1A19                              l3469 19ED                              l3493 1126  
                            l3485 23D1                              l4293 0741                              l4285 0725  
                            l4277 0705                              l4269 06C8                              l4197 056A  
                            l4189 04FC                              l4365 1F18                              l4357 1EEF  
                            l4349 1ED0                              l4429 1879                              l4533 0F66  
                            l4541 0F92                              l4525 0F27                              l4517 0ED4  
                            l4509 0E61                              l4461 0C97                              l4453 0C75  
                            l4445 0C46                              ?_pad 0030                              l3655 1BE2  
                            l3647 1BA4                              l3639 1B6B                              l3399 0C07  
                            l3823 1516                              l3831 1540                              l3815 14F1  
                            l3807 14E2                              l3751 141A                              l3743 13FE  
                            l3735 13EE                              l3727 13DA                              l3719 13C6  
                            l3911 1681                              l3903 1646                              l4631 2227  
                            l4607 2404                              l4623 1916                              l4711 1D4B  
                            l4703 1D33                              l4391 1FAA                              l4383 1F62  
                            l4375 1F30                              l4367 1F19                              l3583 27FF  
                            l3575 27E7                              l3567 27CD                              l3559 27BA  
                            l3591 2685                              l3663 217F                              l3671 1AB9  
                            l3495 1146                              l3479 22C0                              l3487 23DE  
                            l4295 0746                              l4287 072B                              l4279 070A  
                            l4199 0570                              l4359 1EFB                              l4543 0FA4  
                            l4551 0FC3                              l4535 0F6F                              l4527 0F31  
                            l4519 0EF7                              l4471 0D09                              l4463 0CA2  
                            l4455 0C79                              l4447 0C4A                              l4439 0C25  
                            l4615 0803                              l3657 1BE4                              l3649 1BCC  
                            l3841 1579                              l3833 154D                              l3825 151E  
                            l3817 1505                              l3809 14E7                              l3761 1439  
                            l3753 1426                              l3745 1407                              l3737 13F2  
                            l3729 13DC                              l3921 16BD                              l3913 168E  
                            l3905 1660                              l4633 222F                              l4625 2210  
                            l4609 240B                              l4801 24FD                              l4641 244B  
                            l4713 1D53                              l4705 1D3B                              l4393 1FAF  
                            l4385 1F6A                              l4377 1F44                              l4369 1F1F  
                            l3569 27DC                              l3577 27EF                              l3593 2688  
                            l3585 267A                              l3665 2182                              l3681 1ADF  
                            l3673 1AC2                              l3497 116B                              l3489 23E4  
                            l4297 074A                              l4289 0730                              l4561 0FFA  
                            l4553 0FCC                              l4545 0FAD                              l4537 0F7D  
                            l4529 0F52                              l4481 0D41                              l4473 0D0C  
                            l4465 0CCB                              l4457 0C7A                              l4449 0C5D  
                            l4617 0814                              l3659 1BE7                              l3843 157D  
                            l3835 1568                              l3827 1522                              l3819 150C  
                            l3771 1470                              l3763 144A                              l3755 142A  
                            l3747 1408                              l3739 13F4                              l3931 170E  
                            l3923 16C4                              l3915 1695                              l3907 166D  
                            l3851 1595                              l4627 221C                              l4619 18AA  
                            l4811 2509                              l4803 2500                              l4643 2451  
                            l4635 2427                              l4571 2166                              l4715 1D58  
                            l4707 1D40                              l4395 1FCC                              l4387 1F73  
                            l4379 1F46                              l3579 27F4                              l3595 268C  
                            l3587 267C                              l3667 2183                              l3691 1AF7  
                            l3683 1AE1                              l3675 1AC3                              l3499 117A  
                            l4299 0767                              l4563 0FFF                              l4555 0FCF  
                            l4547 0FBC                              l4539 0F91                              l4483 0D57  
                            l4475 0D16                              l4491 0DB7                              l4467 0CEE  
                            l4459 0C81                              l4651 233E                              l3845 157F  
                            l3837 156B                              l3829 153A                              l3781 1491  
                            l3773 1478                              l3765 144B                              l3757 1433  
                            l3749 140A                              l3941 1743                              l3933 1725  
                            l3925 16D8                              l3917 16A2                              l3909 167A  
                            l3861 15AA                              l3853 159B                              l4741 1C03  
                            l4629 221F                              l4901 262A                              l4821 2516  
                            l4813 250D                              l4805 2502                              l4637 2437  
                            l4565 212C                              l4573 2169                              l4581 2175  
                            l4717 1D5D                              l4709 1D44                              l4661 1CAF  
                            l4397 1FE0                              l4389 1F88                              l3597 2692  
                            l3589 2680                              l3685 1AE5                              l3693 1B08  
                            l3677 1AD6                              l3669 1AA5                              l4549 0FC2  
                            l4493 0DD8                              l4485 0D62                              l4477 0D28  
                            l4469 0CF6                              l4557 0FD0                              l4653 234F  
                            l4645 2332                              l3847 158B                              l3839 1573  
                            l3791 14B7                              l3783 1493                              l3775 147A  
                            l3767 1460                              l3759 1434                              l3951 1757  
                            l3943 1745                              l3935 172C                              l3927 16E5  
                            l3919 16A9                              l3871 15C8                              l3863 15AF  
                            l3855 159F                              l4751 1C2E                              l4743 1C13  
                            l4735 1BEA                              l4903 2651                              l4831 2522  
                            l4823 2519                              l4815 2510                              l4807 2504  
                            l4639 2442                              l4583 2131                              l4567 215E  
                            l4575 216A                              l4671 1CDB                              l4663 1CB4  
                            l4399 1FE7                              l3599 2698                              l3695 1B0E  
                            l3687 1AEC                              l3679 1AD7                              l4559 0FF0  
                            l4495 0DDD                              l4487 0D8B                              l4479 0D31  
                            l4591 07CB                              l4655 2358                              l4647 233A  
                            l4911 1278                              l4841 1A29                              l3849 1594  
                            l3777 147F                              l3785 149B                              l3793 14BC  
                            l3769 1468                              l3961 1780                              l3953 175B  
                            l3945 174C                              l3937 1738                              l3929 16F9  
                            l3881 15DC                              l3873 15CC                              l3865 15B8  
                            l3857 15A3                              l4761 1C5B                              l4753 1C36  
                            l4745 1C1C                              l4737 1BEF                              l4905 2673  
                            l4833 2524                              l4825 251B                              l4817 2512  
                            l4809 2507                              l4585 2136                              l4569 2164  
                            l4577 2170                              l4673 1CDC                              l4665 1CCA  
                            l4681 1CF5                              l4657 1C9F                              l3697 1B17  
                            l3689 1AF5                              l4497 0E01                              l4489 0DAE  
                            l4593 07CF                              l4649 233C                              l4921 12BD  
                            l4913 127C                              l4851 1A3C                              l4843 1A2A  
                            l4835 1A1A                              l3795 14C3                              l3787 14AD  
                            l3779 148D                              l3971 17B7                              l3963 1788  
                            l3955 176F                              l3939 173F                              l3947 1751  
                            l3891 15FB                              l3883 15E5                              l3875 15D0  
                            l3867 15BA                              l3859 15A5                              l4771 1C8D  
                            l4763 1C5F                              l4755 1C3A                              l4747 1C1D  
                            l4739 1BF3                              l4827 251D                              l4819 2514  
                            l4587 2154                              l4579 2172                              l4691 1D13  
                            l4683 1CFC                              l4675 1CDF                              l4667 1CD3  
                            l4659 1CA1                              l3699 1B19                              l4499 0E06  
                            l4595 07E9                              l4931 1379                              l4915 127F  
                            l4923 12CF                              l4907 126B                              l4861 1A68  
                            l4853 1A44                              l4845 1A2B                              l4837 1A1E  
                            l3797 14CB                              l3789 14AE                              l3981 17E7  
                            l3973 17C1                              l3965 178C                              l3957 1776  
                            l3949 1756                              l3893 1604                              l3885 15E7  
                            l3877 15D2                              l3869 15C3                              l4773 1C91  
                            l4765 1C6A                              l4757 1C42                              l4749 1C22  
                            l4829 2520                              l4781 24E6                              l4693 1D14  
                            l4685 1D05                              l4677 1CE8                              l4669 1CD4  
                            l4597 07F4                              l4589 07C7                              l4925 12D9  
                            l4917 1289                              l4933 138F                              l4909 1273  
                            l4871 1A98                              l4863 1A74                              l4855 1A50  
                            l4847 1A2C                              l4839 1A27                              l3799 14CE  
                            l3983 17EB                              l3975 17CF                              l3967 17A4  
                            l3959 177B                              l3895 1605                              l3887 15F0  
                            l3879 15D7                              l4775 1C93                              l4767 1C74  
                            l4759 1C51                              l4791 24F3                              l4783 24EB  
                            l4695 1D17                              l4687 1D0B                              l4679 1CED  
                            l3991 2276                              l4599 07FD                              l4935 1395  
                            l4927 12DE                              l4919 12B2                              l4873 1A9C  
                            l4865 1A78                              l4857 1A54                              l4849 1A30  
                            l3985 17ED                              l3977 17D8                              l3969 17AA  
                            l3897 1612                              l3889 15F5                              l4777 1C9C  
                            l4769 1C88                              l4793 24F6                              l4785 24EE  
                            l4697 1D20                              l4689 1D0C                              l3993 2279  
                            l4937 139F                              l4929 12F8                              l4881 1917  
                            l4867 1A84                              l4859 1A60                              l3987 17F6  
                            l3979 17DA                              l3899 161F                              l4875 0815  
                            l4795 24F7                              l4787 24F0                              l4779 24DB  
                            l4699 1D25                              l3995 2280                              l4891 1996  
                            l4883 1923                              l4869 1A8C                              l4877 22E3  
                            l3989 17FF                              l4797 24F9                              l4789 24F1  
                            l3997 228F                              l4885 1935                              l4893 2186  
                            l4879 2302                              l4799 24FB                              l3999 2291  
                            l4887 195D                              l4895 2189                              l4897 261E  
                            l4889 195E                              l4899 2625                              STR_1 2871  
                            STR_2 2899                              STR_3 284D                              STR_4 28B9  
                            STR_5 28A8                              STR_6 287E                              STR_7 281C  
                            STR_8 28C6                              STR_9 28CE                              u4000 0BB4  
                            u4001 0BB3                              u4010 0BBB                              u4011 0BBA  
                            u4100 0C21                              u4020 0BC5                              u4101 0C20  
                            u4021 0BC4                              u4030 0BD1                              u4110 2319  
                            u4031 0BD0                              u4111 2318                              u4040 0BDF  
                            u4200 277B                              u4201 277A                              u4050 0BEE  
                            u5010 14AD                              u4130 2329                              u4210 19BC  
                            u4051 0BED                              u5011 14AC                              u4131 2328  
                            u4060 0BF9                              u5100 150C                              u5020 14C2  
                            u4220 19CA                              u4300 23C9                              u4061 0BF8  
                            u4045 0BDB                              u5101 150B                              u5021 14C1  
                            u5005 1494                              u4125 231E                              u4221 19C9  
                            u4301 23C7                              u4070 0BFE                              u5110 1516  
                            u5030 14CB                              u4230 19D7                              u4310 23CA  
                            _PIE0 0716                              u4071 0BFD                              u5111 1515  
                            u5031 14CA                              u5015 14A9                              u4215 19B8  
                            u4080 0C0C                              u5120 1522                              u5200 15D0  
                            u4240 19E1                              u4400 121B                              u3600 26DE  
                            u4320 23E4                              u6000 1E50                              u4145 24A9  
                            u4081 0C0B                              u5121 1521                              u5201 15CF  
                            u4241 19E0                              u3601 26DD                              u4321 23E3  
                            u6001 1E4F                              _PIE3 0719                              u4090 0C13  
                            u5130 1530                              u5050 14D9                              u5210 15D7  
                            u4250 19F3                              u4410 1225                              u4330 115A  
                            u3610 26E3                              u4170 273D                              u6010 1E6D  
                            _PIE4 071A                              u4155 24B7                              u4091 0C12  
                            u5051 14D8                              u5211 15D6                              u4251 19F2  
                            u4235 19D3                              u4411 1224                              u3611 26E2  
                            u4171 273C                              u6011 1E6C                              u3700 09CB  
                            u5140 154D                              u5220 15DC                              u6100 1F68  
                            u4500 279C                              u4260 1A00                              u4420 1244  
                            u4340 117A                              u3620 26F5                              u4180 274C  
                            u6020 1E7B                              u4165 24C7                              u3701 09CA  
                            u5141 154C                              u5045 14CF                              u5221 15DB  
                            u6101 1F67                              u4501 279B                              u4405 1217  
                            u4341 1179                              u3621 26F4                              u4181 274B  
                            u6021 1E7A                              u3710 09EB                              u5150 1568  
                            u5070 14EB                              u5310 1743                              u5230 15F5  
                            u6110 1FC4                              u4510 27A8                              u4270 1A0B  
                            u4430 124E                              u4350 1180                              u3630 2714  
                            u4190 2776                              u6030 1E94                              u3711 09EA  
                            u5151 1567                              u5135 152C                              u5071 14EA  
                            u5311 1742                              u5231 15F4                              u6111 1FC2  
                            u4511 27A7                              u4271 1A09                              u4431 124D  
                            u4351 117F                              u4335 1156                              u3631 2713  
                            u4191 2775                              u6031 1E93                              u3800 0A9E  
                            u3720 09F5                              u5160 157D                              u5080 14F1  
                            u5400 17B7                              u5240 15FA                              u4440 21CA  
                            u6120 1FC5                              u4520 27BA                              u4600 2680  
                            u4280 1A0C                              u4360 1191                              u3640 2382  
                            u6040 1EB7                              u6200 0C38                              u3801 0A9D  
                            u3721 09F4                              u5161 157C                              u5145 1549  
                            u5081 14F0                              u5065 14DC                              u5401 17B6  
                            u5305 1739                              u5241 15F9                              u4441 21C8  
                            u4521 27B9                              u4601 267F                              u4265 19FC  
                            u4425 1240                              u4345 1176                              u3641 2381  
                            u6041 1EB6                              u6025 1E77                              u6201 0C37  
                            u3810 0AAB                              u3730 09FC                              u5090 1505  
                            u5410 17CF                              u5330 1755                              u5170 15A3  
                            u4450 21CB                              u6130 1FE6                              u4610 268C  
                            u4370 11BD                              u3650 22AE                              u4290 22E1  
                            u6050 1EE8                              u6210 0C5D                              u3811 0AAA  
                            u3731 09FB                              u5155 1564                              u5091 1504  
                            u5411 17CE                              u5331 1754                              u5171 15A2  
                            u6131 1FE5                              u4611 268B                              u4371 11BC  
                            u3635 2710                              u3651 22AD                              u4195 2772  
                            u4291 22E0                              u6051 1EE7                              u6211 0C5C  
                            u3900 0B18                              u3740 0A01                              u5420 17EB  
                            u5340 175B                              u5180 15AA                              u4460 225B  
                            u6140 1FED                              u4540 27CB                              u4620 2698  
                            u4700 25A9                              u4380 11D3                              u3660 21E4  
                            u5500 107A                              u6060 1EED                              u6300 0DB4  
                            u6220 0C79                              u7020 1DB9                              u3901 0B17  
                            u3741 0A00                              u5421 17EA                              u5405 17B3  
                            u5341 175A                              u5325 1746                              u5181 15A9  
                            u4461 225A                              u6141 1FEC                              u4541 27CA  
                            u4621 2697                              u4701 25A8                              u4365 118D  
                            u3661 21E2                              u5501 1079                              u6061 1EEC  
                            u6045 1EB3                              u6301 0DB3                              u6221 0C78  
                            u7021 1DB8                              u3910 0B5A                              u3830 0AC1  
                            u3750 0A1B                              u5350 176F                              u5270 1704  
                            u5190 15AF                              u5430 2280                              u4710 25C3  
                            u4390 11DD                              u3670 21E5                              u5510 10B5  
                            u6070 1F10                              u6150 1855                              u6310 0DDD  
                            u6230 0CC0                              u7030 1DFF                              u3911 0B59  
                            u3903 0B14                              u3831 0AC0                              u3751 0A1A  
                            u5415 17CB                              u5351 176E                              u5255 167B  
                            u5191 15AE                              u5431 227F                              u4535 27BE  
                            u4711 25C2                              u4391 11DC                              u5511 10B3  
                            u6071 1F0F                              u6055 1EE4                              u6151 1854  
                            u6311 0DDC                              u6231 0CBE                              u7031 1DFE  
                            u4720 1B4F                              u3920 0B74                              u3840 0AC6  
                            u3760 0A1F                              u3680 09BF                              u5360 1776  
                            u5280 171B                              u5440 228F                              u6080 1F30  
                            u4560 27DC                              u4640 26A9                              u4800 1AE5  
                            u5600 01F4                              u5520 10C8                              u6160 1870  
                            u6320 0E06                              u6240 0CC1                              u6400 07F3  
                            u7040 1E0A                              u4721 1B4E                              u3921 0B73  
                            u3841 0AC5                              u3825 0AAF                              u3761 0A1E  
                            u3681 09BE                              u5361 1775                              u5265 16AA  
                            u5441 228E                              u6081 1F2F                              u4561 27DB  
                            u4641 26A8                              u4801 1AE4                              u4385 11CF  
                            u5601 01F3                              u5521 10C6                              u6161 186F  
                            u6321 0E05                              u6401 07F2                              u7041 1E09  
                            u4730 1B6B                              u3930 0B79                              u3850 0ACB  
                            u3770 0A7E                              u3690 09C6                              u5370 1780  
                            u6410 23FB                              u4490 226F                              u6090 1F44  
                            u4650 26B5                              u4810 1AEC                              u5610 024E  
                            u5530 10C9                              u6170 1879                              u6330 0E32  
                            u6250 0CF4                              u4731 1B6A                              u3931 0B78  
                            u3851 0ACA                              u3771 0A7D                              u3691 09C5  
                            u5371 177F                              u5275 1700                              u6411 23FA  
                            u4491 226E                              u4475 2260                              u6091 1F43  
                            u4555 27CE                              u4651 26B4                              u4635 269C  
                            u4715 25BF                              u4811 1AEB                              u5611 024D  
                            u6075 1F0C                              u6171 1878                              u6331 0E31  
                            u6251 0CF3                              u5460 2250                              u4740 1B78  
                            u3860 0AE1                              u3780 0A88                              u4900 13D0  
                            u5380 178C                              u6500 1CDA                              u4580 27ED  
                            u5700 02FB                              u5620 026E                              u5540 10ED  
                            u6180 187F                              u6340 0E96                              u6260 0D09  
                            u5461 224F                              u4741 1B77                              u3861 0AE0  
                            u3781 0A86                              u4901 13CF                              u5381 178B  
                            u5285 1717                              u6501 1CD9                              u4485 2265  
                            u4581 27EC                              u4565 27D8                              u5701 02FA  
                            u5621 026D                              u5541 10EC                              u6181 187E  
                            u6341 0E95                              u6261 0D08                              u4750 1BA4  
                            u3950 0B8F                              u3870 0AE5                              u3790 0A89  
                            u4910 13F2                              u5390 179A                              u6510 1CF3  
                            u4590 27F4                              u4670 26C5                              u4830 1B06  
                            u5710 02FF                              u5630 0275                              u5550 00EC  
                            u5470 1034                              u6190 188F                              u6350 0EC9  
                            u6270 0D28                              u5455 21AC                              u4751 1BA3  
                            u3951 0B8E                              u3871 0AE4                              u3775 0A7A  
                            u4911 13F1                              u5295 1726                              u6511 1CF2  
                            u7207 1CE3                              u4591 27F3                              u4575 27E3  
                            u4671 26C4                              u4655 26B1                              u4831 1B05  
                            u5711 02FE                              u5631 0274                              u5551 00EB  
                            u5471 1033                              u6191 188E                              u6351 0EC7  
                            u6271 0D27                              u4760 1BE2                              u3960 0B94  
                            u3880 0AF2                              u4920 13F9                              u6440 241A  
                            u6520 1CFC                              u4680 26CC                              u4840 1B0E  
                            u5800 0563                              u5720 030B                              u5640 0288  
                            u5560 00FF                              u5480 106D                              u6360 0ECA  
                            u6280 0D80                              u4761 1BE1                              u3961 0B93  
                            u3945 0B85                              u3881 0AF1                              u4921 13F8  
                            u6441 2419                              u6425 2405                              u7217 1D1B  
                            u6521 1CFB                              u4681 26CB                              u4665 26BB  
                            u4841 1B0D                              u4825 1AF8                              u5801 0562  
                            u5721 030A                              u5641 0287                              u5561 00FD  
                            u5481 106C                              u6281 0D7E                              u3970 0B9F  
                            u4930 13FE                              u6610 1BEF                              u6450 190F  
                            u6530 1D05                              u4690 258D                              u4770 217F  
                            u5810 056A                              u5730 030F                              u5650 029D  
                            u5570 0100                              u5490 1072                              u6370 0EFD  
                            u6290 0D81                              u7307 1A88                              u7227 1A22  
                            u3971 0B9E                              u4931 13FD                              u5395 1796  
                            u6611 1BEE                              u6435 240C                              u6531 1D04  
                            u4691 258C                              u4771 217E                              u5811 0569  
                            u5731 030E                              u5651 029C                              u5491 1071  
                            u6371 0EFC                              u3980 0BA7                              u4940 141A  
                            u6700 1C65                              u6620 1BF3                              u6460 2226  
                            u6540 1D12                              u4860 1B27                              u4780 1AB9  
                            u5900 068A                              u5820 0570                              u5740 0320  
                            u5660 02B2                              u5580 0124                              u6380 0F66  
                            u7317 1A94                              u7237 1A34                              u4765 1BDE  
                            u3981 0BA6                              u4941 1419                              u6701 1C64  
                            u6621 1BF2                              u6461 2225                              u6541 1D11  
                            u4861 1B26                              u4781 1AB8                              u5901 0689  
                            u5821 056F                              u5741 031F                              u5661 02B1  
                            u5645 0284                              u5581 0123                              u6381 0F65  
                            u3990 0BAE                              u4950 1439                              u6710 1C6A  
                            u6630 1C13                              u6470 245B                              u6550 1D2B  
                            u4870 1B2E                              u4790 1AD0                              u5910 06A9  
                            u5830 0574                              u5750 0423                              u5670 02C1  
                            u5590 0186                              u6390 0FA4                              u7327 1AA0  
                            u7247 1A40                              u3991 0BAD                              u3895 0AF6  
                            u4951 1438                              u6711 1C69                              u6631 1C12  
                            u6455 190B                              u6471 245A                              u6551 1D2A  
                            u4871 1B2D                              u4855 1B1A                              u5911 06A8  
                            u5831 0573                              u5751 0422                              u5671 02C0  
                            u5591 0185                              u6391 0FA3                              u4960 147F  
                            u4880 13C4                              u6720 1C7E                              u6800 262A  
                            u6560 1D33                              u6480 1CB4                              u5920 06B9  
                            u5840 0580                              u5760 0476                              u5680 02DD  
                            u7337 2238                              u7257 1A4C                              u4961 147E  
                            u4881 13C3                              u6801 2629                              u6561 1D32  
                            u6481 1CB3                              u5921 06B8                              u5841 057F  
                            u5761 0475                              u5681 02DC                              u4890 13CB  
                            u6730 1C8D                              u6650 1C34                              u6570 1D4B  
                            u6490 1CCA                              u5930 0710                              u5850 0584  
                            u5770 04A7                              u5690 02F5                              u6810 1278  
                            u7347 223E                              u7267 1A58                              u4891 13CA  
                            u6731 1C8C                              u6651 1C33                              u6571 1D4A  
                            u6491 1CC9                              u4795 1ACC                              u5931 070F  
                            u5851 0583                              u5771 04A6                              u5755 041F  
                            u5691 02F4                              u5675 02BD                              u6811 1277  
                            u6740 1C91                              u5940 071F                              u5860 05BF  
                            u5780 04AC                              u6820 127C                              u7357 24D4  
                            u7277 1A64                              u6741 1C90                              u6725 1C7A  
                            u6645 1C27                              u5941 071E                              u5861 05BE  
                            u5781 04AB                              u5685 02D9                              u6821 127B  
                            u7197 1E2D                              u4990 1491                              u6670 1C4F  
                            u6750 24E5                              u5950 072B                              u5870 066C  
                            u5790 04F7                              u6830 12DE                              u7367 1004  
                            u7287 1A70                              u4991 1490                              u4975 1480  
                            u6671 1C4E                              u6751 24E4                              u6495 1CC6  
                            u5951 072A                              u5871 066B                              u5791 04F6  
                            u6831 12DD                              u6760 2302                              u5960 075C  
                            u5880 067C                              u6840 1395                              u7297 1A7C  
                            u6761 2301                              u4985 1487                              u6665 1C43  
                            u5961 075A                              u5945 071B                              u5881 067B  
                            u6841 1394                              u6690 1C5F                              u5970 075D  
                            u5890 0685                              u6770 1935                              u6691 1C5E  
                            u5891 0684                              u5875 0668                              u6771 1934  
                            u5980 0781                              u6780 2190                              u6685 1C54  
                            u5981 0780                              u5885 0678                              u6781 218F  
                            u6790 2625                              u5990 1E42                              u6791 2624  
                            u6775 1931                              _TMR0 059C                              _TMR1 020C  
       __size_of_OLED_pulseEnable 0009                     __CFG_FCMEN$ON 0000                     OLED_send@mode 0023  
                            _dbuf 0320                              _atoi 1F19                              _main 1D60  
                            _prec 0168                              _nout 0248                              pad@i 0034  
                            pad@p 0031                              fsr0h 0005                              fsr1h 0007  
                            indf0 0000                              fsr0l 0004                              indf1 0001  
                            fsr1l 0006                              pad@w 0036                              _stoa 1E36  
                            btemp 007E                     __CFG_BOREN$ON 0000                     ___fpclassifyf 1997  
                            start 0095                       ?_OLED_write 0070                   ___fldiv@new_exp 005A  
                  ?_pushButtonISR 0070                      _tolower$1377 002C                     __CFG_CSWEN$ON 0000  
                   __CFG_MCLRE$ON 0000                             ??_ISR 007A                             ??_ema 0034  
                           ??_pad 0033                __size_of_OLED_init 008B                __size_of_OLED_send 0018  
                   ___fltol@sign1 0029                             ?_atoi 0026                   __end_of___fladd 0C23  
                           ?_main 0070                   __end_of___fldiv 1595                   __end_of___awdiv 2800  
                 __end_of___flneg 2184                             STR_12 28CA                             STR_13 28D2  
                           STR_16 28D6                     __CFG_WDTE$OFF 0000                             STR_18 28D6  
                 __end_of___awmod 26D8                   __end_of___flmul 1800                   __end_of___flsub 220E  
                 __end_of___fltol 1B3A                             ?_stoa 0028                             _T1CLK 0211  
                 ___awdiv@divisor 0020                             _T1CON 020E                   __end_of___llmod 2578  
                           _IOCAN 1F3E                             _IOCAP 1F3D                             _IOCCN 1F54  
                           i1l310 261D                             i1l320 239D                             i1l321 23B6  
                           i1l313 1833                             i1l305 25D6                             i1l322 23AF  
                           i1l314 183D                             i1l306 25E3                             i1l323 23B5  
                           i1l315 183E                             i1l307 2601                             i1l324 23B7  
                           i1l308 261D                             i1l309 2619                             i1l318 238B  
                           i1l319 23B7                             i1l290 0092                             i1l291 0091  
                           i1l292 0081                             i1l284 0019                             i1l285 0093  
                           i1l293 0079                             i1l294 0090                             i1l286 0043  
                           i1l295 008F                             i1l287 002C                             i1l288 0036  
                           i1l296 0093                             i1l289 0040                             i1l820 256D  
                           i1l821 2577                             i1l814 256E                             i1l815 253E  
                           i1l816 2532                             i1l817 2543                             i1l818 2544  
                           i1l819 255F                   ___awdiv@counter 0025                      vfpfcnvrt@fmt 00E8  
                           _TRISA 0012                             _TRISB 0013                             _TRISC 0014  
          uartReceiveISR@checksum 016C               ___lmul@multiplicand 0024              __size_of_checkStatus 0026  
                   __CFG_WRTB$OFF 0000                     __CFG_WRTC$OFF 0000                    OLED_send@value 0025  
                           _getPB 215E                             _flags 016A                             ema@in 002C  
                           _fputc 26D8                             _fputs 2359                   __end_of_isdigit 21D3  
                           atoi@n 0033                             pad@fp 0038                             atoi@s 0026  
                           _width 0166                             _putch 07FE                   __end_of_isspace 229A  
                 __end_of_isupper 21ED                   __end_of_timeNow 0815                             stoa@i 0034  
                           stoa@l 003D                             stoa@p 003B                             stoa@s 0028  
                           stoa@w 0036                             status 0003                             wtemp0 007E  
                 __end_of_sprintf 2359                    ?___fpclassifyf 0020                   __end_of_tolower 23ED  
                 __end_of_strncmp 18AA                   __end_of_strncpy 249B                   __initialization 0097  
                    __end_of_atoi 2000                      __end_of_main 1E36                      __end_of_stoa 1F19  
                  __CFG_SAFEN$OFF 0000                        _g_10msTick 007D                            ??_atoi 0028  
                          ??_main 0157                            ??_stoa 002A                  _handleSensorData 261E  
               ?_adcGetConversion 0020                    OLED_print_xy@s 0028                ??_adcGetConversion 0022  
    __size_of_convertAnalogValues 019C               __size_of_OLED_write 000C                            ?_getPB 0070  
         _OLED_scrollDisplayRight 2136                            _ADCON1 009E                            ?_fputc 0020  
                ___llmod@dividend 0074                            ?_fputs 0028                            _ADRESH 009C  
                          _ADRESL 009B                  ___awdiv@dividend 0022                            _ANSELA 1F38  
                          ?_putch 0070                            _ANSELB 1F43                            _ANSELC 1F4E  
              __CFG_RSTOSC$HFINT1 0000                            _T0CON0 059E                            _T0CON1 059F  
                 _g_sensorVersion 0238                            _RC1REG 0119                            _RC1STA 011D  
                          i1l1151 247B                            i1l1152 2463                            i1l1153 247A  
                          i1l1154 2482                            i1l1155 248D                            i1l1156 2483  
                          i1l1157 249A                            i1l1158 249A                            _RC6PPS 1F26  
                          i1l5001 252F                            i1l5011 255F                            i1l5003 2532  
                          i1l5013 2566                            i1l5005 253E                            i1l5101 0047  
                          i1l5007 2544                            i1l5015 256E                            i1l5111 007E  
                          i1l5103 004B                            i1l5017 2577                            i1l5009 2556  
                          i1l5113 0085                            i1l5105 004F                            i1l5115 0089  
                          i1l5107 0073                            i1l5117 008C                            i1l5109 0079  
                          i1l5071 000B                            i1l5081 0021                            i1l5073 000F  
                          i1l5091 0033                            i1l5083 0026                            i1l5075 0013  
                          i1l5093 0036                            i1l5085 0029                            i1l5077 0016  
                          i1l5069 0006                            i1l5095 003A                            i1l5087 002C  
                          i1l5079 001D                            i1l4721 2463                            i1l5097 003D  
                          i1l5089 0030                    __CFG_WDTCCS$SC 0000                            i1l4731 2488  
                          i1l4723 2467                            i1l5099 0040                            i1l4725 2479  
                          i1l4733 248D                            i1l4727 247B                            i1l4719 245E  
                          i1l4729 2483                            i1l4941 2389                            i1l4951 23A3  
                          i1l4943 238B                            i1l4953 23A9                            i1l4945 2391  
                          i1l4961 1829                            i1l4955 23AF                            i1l4947 2397  
                          i1l4939 2384                            i1l4963 182D                            i1l4971 25C9  
                          i1l4949 239D                            i1l4965 1833                            i1l4957 1800  
                          i1l4981 25DD                            i1l4973 25CE                            i1l4967 1837  
                          i1l4959 180C                            i1l4991 2608                            i1l4983 25E3  
                          i1l4975 25D0                            i1l4969 183D                            i1l4993 260C  
                          i1l4985 25E9                            i1l4977 25D6                            i1l4995 2619  
                          i1l4987 25FC                            i1l4979 25DB                            i1l4997 261B  
                          i1l4989 2601                            i1l4999 2527                            _INTCON 000B  
               __end_of_OLED_init 1AA5                            u700_25 2560                            u701_20 256C  
                          u701_21 256B                            u710_20 0030                            u710_21 002F  
                          u711_20 003A                 __end_of_OLED_send 21B9                            u711_21 0039  
                          u712_20 0047                            u712_21 0046                            u713_20 004B  
                          u705_20 000B                            u713_21 004A                            u705_21 000A  
                          u714_20 004F                            u706_20 000F                            u714_21 004E  
                          u706_21 000E                            u715_20 0073                            u707_20 001D  
                          u715_21 0072                            u707_21 001C                            u660_20 2499  
                          u716_20 0085                            u708_20 0021                            u660_21 2498  
                          u716_21 0084                            u708_21 0020                            _OSCFRQ 0893  
                          u717_20 0089                            u709_20 0026                            u717_21 0088  
                          u709_21 0025                            u690_20 182D                            u658_20 2478  
                          u690_21 182C                            u658_21 2477                            u691_20 1837  
                          u659_20 2481                            u691_21 1836                            u659_21 2480  
                          u692_20 25CE                            u692_21 25CD                            u685_20 2389  
                          u693_20 25DB                            u685_21 2388                            u693_21 25DA  
                          u686_20 2391                            u694_20 25E9                            u686_21 2390  
                          u694_21 25E8                            u687_20 2397                            u695_20 2608  
                          u687_21 2396                            u695_21 2607                            u696_20 252F  
                          u688_20 23A3                            u696_21 252E                            u688_21 23A2  
                          _SPBRGL 011B                            u689_20 23A9                            u689_21 23A8  
                          u697_25 2533                            u698_20 2542                            u698_21 2541  
                          _TX1REG 011A                            u699_20 2556                            u699_21 2555  
                          u699_25 2552                            _TX1STA 011E                  __end_of___xxtofl 1C9D  
                 ??_pushButtonISR 0070                    __CFG_PWRTE$OFF 0000                      vfprintf@cfmt 0136  
                          ___flge 1B3A                            ___fleq 2578                            ___lmul 23ED  
                       ??___fladd 0050                            ___wmul 2253                         ??___fldiv 0050  
                       ??___awdiv 0024                         ??___flneg 0024                    __CFG_STVREN$ON 0000  
                       ??___awmod 0024                         ??___flmul 0036                         ??___flsub 0068  
                       ??___fltol 0024                         ??___llmod 0078                            _efgtoa 100A  
        __size_of_OLED_returnHome 0005                            _floorf 1126                            ema@tmp 003C  
                     menuInput@pb 002F                  ___awdiv@quotient 0027                   ___awmod@divisor 0020  
                          _rotISR 1800                     ?_OLED_command 0070                   ___awmod@counter 0025  
                          pad@buf 0030                            _strcpy 22BE                            _strlen 229A  
                          fputc@c 0020                            fputs@c 002C                            fputs@i 002D  
                          fputs@s 002F                         ??_isdigit 0022                      _g_dataPacket 0250  
              __size_of__Umul8_16 0027                   ___fpclassifyf@e 002A                   ___fpclassifyf@u 002C  
                 ___fpclassifyf@x 0020           adcGetConversion@channel 0023                  __end_of_showMenu 13B6  
           OLED_waitForReady@busy 0020                         ??_isspace 0022                         ??_isupper 0022  
                       ??_timeNow 0024                 OLED_command@value 0026                            stoa@cp 0039  
                          stoa@fp 0038                       _g_100msTick 0162                            putch@c 0070  
                __end_of_vfprintf 07FE                         ??_sprintf 014B                         ??_tolower 0028  
                       ??_strncmp 0024                         ??_strncpy 0073                  _OLED_pulseEnable 1001  
                      ___flge@ff1 0048                        ___flge@ff2 004C                   ??___fpclassifyf 0024  
                    ___xxtofl@arg 002A                      ___xxtofl@exp 0029                      ___xxtofl@val 0020  
                      ___fleq@ff1 0020                        ___fleq@ff2 0024           __end_of__initialization 00CD  
                      ___flneg@f1 0020                        ___fltol@f1 0020          __size_of_OLED_write4bits 0040  
                  __pcstackCOMMON 0070                      __pidataBANK4 2192                     __end_of_getPB 216A  
         convertAnalogValues@avgI 024A           convertAnalogValues@avgT 024E           convertAnalogValues@avgV 024C  
            uartReceiveISR@buffer 02A0                     __end_of_fputc 2736                     __end_of_fputs 2384  
                   __end_of_putch 07FF                    ??_OLED_command 0026                __size_of_getRotDir 000C  
       ??_OLED_scrollDisplayRight 0027                           ??_getPB 0020            __size_of_OLED_print_xy 0038  
                         ??_fputc 0023                           ??_fputs 0029                           ??_putch 0020  
                      __pbssBANK2 0162                        __pbssBANK3 01EA                        __pbssBANK4 0220  
                      __pbssBANK5 02A0                        __pbssBANK6 0320           __size_of_uartReceiveISR 0055  
              __size_of_menuInput 00C3                      ??_OLED_write 0026                 __end_of__Umul8_16 2330  
                      _efgtoa$910 00B5                        _efgtoa$920 00BB                        _efgtoa$921 00BD  
                      _efgtoa$915 00B7                        _efgtoa$909 00B3                        _efgtoa$919 00B9  
                      __pmaintext 1D60                           ?___flge 0048                           ?___fleq 0020  
                         ?___lmul 0020                           ?___wmul 0020                   __CFG_PPS1WAY$ON 0000  
                      __pintentry 0004                           ?_efgtoa 00AA                           ?_floorf 0062  
               _OLED_waitForReady 2230                    ___lmul@product 0028                           ?_rotISR 0070  
        ??_OLED_scrollDisplayLeft 0027                           ?_strcpy 0020                           ?_strlen 0020  
              __size_of_timeSince 0080                ?_OLED_waitForReady 0070                 ??_OLED_returnHome 0027  
                       ?___xxtofl 0020                           _OSCCON1 088D                __size_of_vfpfcnvrt 03DD  
              __end_of_OLED_write 215E               ??_OLED_waitForReady 0020                       rotISR@input 0077  
        __end_of_handleSensorData 267A                 __end_of_getRotDir 2176               _convertAnalogValues 0815  
                      ema@average 002E                         ?_showMenu 0070                     _OLED_print_xy 2425  
       __end_of_OLED_waitForReady 2253                   __size_of___flge 00AE                   __size_of___fleq 0051  
                         ___fladd 09B1                           ___fldiv 13B6                           ___awdiv 2796  
                         ___flneg 2176                   __size_of___lmul 0038                           ___awmod 267A  
                         ___flmul 1595                           ___flsub 21ED                           ___fltol 1AA5  
                 __size_of___wmul 0023                           ___llmod 2527                   OLED_write@value 0026  
                       ?_vfprintf 0130                   __size_of_efgtoa F7BB                     ?_uartSendByte 0070  
                 __size_of_floorf 0145                 ??_OLED_write4bits 0020                   menuInput@pbLong 002A  
                      _initialize 24DB                           _g_tempC 0244                   __size_of_rotISR 003F  
                         __ptext1 2184                           __ptext2 1917                           __ptext3 0803  
                         __ptext4 126B                           __ptext5 2330                           __ptext6 07C5  
                         __ptext7 0C23                           __ptext8 183F                           __ptext9 1E36  
                         _g_power 0228                     ??_checkStatus 0058                   __CFG_WRTAPP$OFF 0000  
                 __size_of_strcpy 0025                   __size_of_strlen 0024                      __size_of_ISR 0091  
                    __size_of_ema 006D                 __end_of_menuInput 1D60                      __size_of_pad 0060  
                    menuInput@dir 002E                           _isdigit 21B9                        ??___xxtofl 0024  
                ___awmod@dividend 0022              ?_convertAnalogValues 0070                           _isspace 2276  
                       _IOCAFbits 1F3F                   __CFG_WRTSAF$OFF 0000                           _isupper 21D3  
                         efgtoa@c 00AE                           efgtoa@d 00C7                           efgtoa@e 00E0  
                         efgtoa@f 00AA                           efgtoa@g 00DC                           efgtoa@h 00D2  
                         efgtoa@i 00DA                           efgtoa@l 00D6                           efgtoa@m 00C3  
                         efgtoa@n 00E2                           efgtoa@p 00CC                           efgtoa@t 00BF  
                         efgtoa@u 00E4                           efgtoa@w 00CF                           _timeNow 0803  
                         atoi@neg 002C                           _sprintf 2330                           _tolower 23B8  
                         clrloop0 213C                           _strncmp 183F                           _strncpy 245D  
                  main@sensorTime 0159              end_of_initialization 00CD                           floorf@e 00A4  
                         floorf@m 00A0                           floorf@u 00A6                           floorf@x 0062  
            __end_of_OLED_command 2152                           fputc@fp 0022                           init_ram 2141  
       __size_of_adcGetConversion 0022                           fputs@fp 0028                           initloop 2142  
               __end_of_timeSince 1997                         _OLED_init 1A1A                         _OLED_send 21A1  
             OLED_setCursor@F7345 026A                    ?_OLED_print_xy 0027                OLED_print_xy@F7353 0266  
               __end_of_vfpfcnvrt 1000                        efgtoa@mode 00D1                        efgtoa@sign 00C9  
                      ??_showMenu 0155                           psplit$0 27005D  
                     showMenu@s12 01DD                    ??_uartSendByte 0020                        ??_vfprintf 0133  
           __CFG_WDTCPS$WDTCPS_31 0000          __end_of_OLED_pulseEnable 100A                           strcpy@d 0026  
                         strlen@a 0024                           strcpy@s 0024                           strlen@s 0020  
                       _PORTAbits 000C                         _PORTCbits 000E   __size_of_OLED_scrollDisplayLeft 0005  
                     ___fladd@grs 005F             ??_convertAnalogValues 0062                     ___xxtofl@sign 0028  
                       _TRISCbits 0014                       ___fldiv@grs 005C                       ___fldiv@rem 0055  
             __end_of_checkStatus 2309                  __CFG_FEXTOSC$OFF 0000                    _uartReceiveISR 25C9  
                     ___flmul@grs 003C                        ?_OLED_init 0070                        ?_OLED_send 0023  
           __end_of_pushButtonISR 23B8        __size_of_OLED_waitForReady 0023                    __end_of___flge 1BE8  
                  __end_of___fleq 25C9                    __end_of___lmul 2425                       vfpfcnvrt@ap 00E9  
                     vfpfcnvrt@cp 0126                       vfpfcnvrt@ct 012B                       vfpfcnvrt@fp 012F  
                  __end_of___wmul 2276                    __end_of_efgtoa 07C5                 main@sensorTimeout 015D  
                     ?_initialize 0070                    __end_of_floorf 126B                        floorf@F514 0220  
                  __end_of_rotISR 183F                    __end_of_strcpy 22E3                    __end_of_strlen 22BE  
             start_initialization 0097             uartReceiveISR@rxCount 007B                       __end_of_ISR 0095  
                     __end_of_ema 1917                       __end_of_pad 2796          OLED_print_xy@row_offsets 002B  
          __end_of_uartReceiveISR 261E            _OLED_scrollDisplayLeft 2131             __end_of___fpclassifyf 1A1A  
                 ___llmod@divisor 0070                   ___llmod@counter 0079                   ??_OLED_print_xy 002A  
                __CFG_LPBOREN$OFF 0000                       vfprintf@fmt 0130                          ??___flge 0050  
                        ??___fleq 0028                    timeSince@since 0024                          ??___lmul 0028  
                 _OLED_returnHome 212C                          ??___wmul 0024                        menuInput@n 0030  
                   _g_curRotState 007C                          ??_efgtoa 006C                         __Umul8_16 2309  
                     __pdataBANK4 025F                          ??_floorf 0066                       _g_dataReady 016F  
                        ??_rotISR 0070                          ??_strcpy 0022                          ??_strlen 0022  
                OLED_print_xy@col 002F                         ___fladd@a 004C                         ___fladd@b 0048  
                OLED_print_xy@row 0027                       _checkStatus 22E3                         ___fldiv@a 0048  
                       ___fldiv@b 004C                       _g_dewPointC 023C                         ___flmul@a 0032  
                       ___flmul@b 002E                       __pbssCOMMON 007B                         ___flsub@a 0060  
                       ___flsub@b 0064                         ___latbits 0003                     __pcstackBANK0 0020  
                   __pcstackBANK1 00A0                     __pcstackBANK2 0120                     __pcstackBANK3 01A0  
           __size_of_OLED_command 000B            convertAnalogValues@adc 0066                 __size_of___xxtofl 00B5  
                 ?_uartReceiveISR 0070              __end_of_uartSendByte 2192                  _adcGetConversion 220E  
             __size_of_initialize 004C                         _atoi$1255 002E                         _atoi$1256 0032  
                       _atoi$1257 0030                 ?_handleSensorData 0070                   _OLED_write4bits 249B  
                     ??_OLED_init 0027                       ??_OLED_send 0024                         _g_pbState 016D  
                       _g_current 022C                ??_handleSensorData 002E                     _g_rxFErrCount 01EB  
                       _g_tempAux 0234                          ?___fladd 0048                          ?___fldiv 0048  
                        ?___awdiv 0020                          ?___flneg 0020                          ?___awmod 0020  
                        ?___flmul 002E                          ?___flsub 0060                          ?___fltol 0020  
                        ?___llmod 0070                         _getRotDir 216A                        ?__Umul8_16 0020  
               __size_of_showMenu 014B                         _g_voltage 0230          ?_OLED_scrollDisplayRight 0070  
                    _OLED_command 2147                 __size_of_vfprintf 0039                 menuInput@numPages 0027  
                        _BAUD1CON 011F          _convertAnalogValues$1541 0062                          ?_isdigit 0020  
                        ?_isspace 0020                          ?_isupper 0020                          ?_timeNow 0020  
                  __size_of_getPB 000C                         _menuInput 1C9D                        pnum$text10 0027  
                        ?_sprintf 0138                          ?_tolower 0026                    __size_of_fputc 005E  
                  __size_of_fputs 002B                          ?_strncmp 0020                          ?_strncpy 0070  
                   _g_rxOErrCount 01EA                    __size_of_putch 0001                    ___wmul@product 0024  
                        _LATAbits 0018                          _LATBbits 0019                          _LATCbits 001A  
         __end_of_OLED_returnHome 2131                         clear_ram0 213B                          _PIE0bits 0716  
                        _PIE3bits 0719                          _PIE4bits 071A                          _PIR0bits 070C  
                        _PIR3bits 070F                          _PIR4bits 0710                         _timeSince 1917  
               __CFG_BBSIZE$BB512 0000                        showMenu@pb 01E9                        ?_getRotDir 0070  
                       _vfpfcnvrt 0C23                 ?_OLED_pulseEnable 0070                        _ADCON0bits 009D  
               ___wmul@multiplier 0020                      _RX1DTPPSbits 1ECB                ??_OLED_pulseEnable 0020  
                       main@state 0161              OLED_write4bits@value 0022                      _isspace$1286 0024  
                _transition_table 2800                        ?_menuInput 0027                        vfpfcnvrt@c 012E  
                      vfpfcnvrt@f 0127                 ___lmul@multiplier 0020           __end_of_OLED_write4bits 24DB  
                   _g_sensorTimer 01EC                     uartSendByte@s 0020                        vfprintf@ap 0132  
                      vfprintf@fp 0135                        ?_timeSince 0024   __end_of_OLED_scrollDisplayRight 213B  
                     ??__Umul8_16 0022                  __size_of___fladd 0272                  __size_of___fldiv 01DF  
                __size_of___awdiv 006A                  __size_of___flneg 000E       __end_of_convertAnalogValues 09B1  
                __size_of___awmod 005E                  __size_of___flmul 026B                  __size_of___flsub 0021  
                __size_of___fltol 0095                  __size_of___llmod 0051                        ?_vfpfcnvrt 00E8  
                    ??_initialize 0020                ___fpclassifyf@F453 0224                        sprintf@fmt 0138  
                      sprintf@ret 014C                          ___xxtofl 1BE8                  __size_of_isdigit 001A  
           __size_of_uartSendByte 000E                  menuInput@pbShort 0029                          _g_relHum 0240  
                __size_of_isspace 0024                          _g_rotDir 016E                          __ptext10 100A  
                        __ptext11 23B8                          __ptext20 1997                          __ptext12 21D3  
                        __ptext21 1AA5                          __ptext13 22BE                          __ptext30 2253  
                        __ptext22 21ED                          __ptext14 2736                          __ptext31 1C9D  
                        __ptext23 2176                          __ptext15 229A                          __ptext40 261E  
                        __ptext32 216A                          __ptext24 2578                          __ptext16 2359  
                        __ptext41 0815                          __ptext33 215E                          __ptext25 267A  
                        __ptext17 26D8                          __ptext50 22E3                          __ptext42 18AA  
                        __ptext34 2136                          __ptext26 2796                          __ptext18 07FE  
                        __ptext51 1B3A                          __ptext43 23ED                          __ptext35 2131  
                        __ptext27 1F19                          __ptext19 1126                          __ptext60 245D  
                        __ptext52 1A1A                          __ptext44 220E                          __ptext36 212C  
                        __ptext28 2276                          __ptext61 1800                          __ptext53 2147  
                        __ptext45 1BE8                          __ptext37 2425                          __ptext29 21B9  
                        __ptext62 2384                          __ptext54 2230                          __ptext46 1595  
                        __ptext38 2152                          __ptext63 2527                          __ptext55 21A1  
                        __ptext47 2309                          __ptext39 24DB                          __ptext56 249B  
                        __ptext48 13B6                          __ptext57 1001                          __ptext49 09B1  
                        __ptext59 25C9                  __size_of_isupper 001A                  __size_of_timeNow 0012  
                        _g_status 01ED           ?_OLED_scrollDisplayLeft 0070                  __size_of_sprintf 0029  
                __size_of_tolower 0035                       _OSCCON3bits 088F                        strcpy@dest 0027  
                __size_of_strncmp 006B                  __size_of_strncpy 003E                  menuInput@timeout 002B  
                        ema@alpha 0030                     __size_of_atoi 00E7                     __size_of_main 00D6  
                   menuInput@page 0031                     menuInput@menu 0028                          getPB@ret 0021  
                   __size_of_stoa 00E3                  ?_OLED_returnHome 0070                __end_of_initialize 2527  
            __CFG_WDTCWS$WDTCWS_7 0000                pnum$text10_split_1 005D                        _RC1STAbits 011D  
                        efgtoa@fp 00CB                          efgtoa@ne 00C5                          efgtoa@pp 00C1  
                        efgtoa@ou 00AF                         stoa@F1143 025F                         showMenu@s 01A0  
                        _showMenu 126B                          int$flags 007E                       ??_getRotDir 0020  
                        _vfprintf 07C5                      _uartSendByte 2184          __end_of_adcGetConversion 2230  
                    ?_checkStatus 0070                  ??_uartReceiveISR 0076                        _INTCONbits 000B  
  __end_of_OLED_scrollDisplayLeft 2136                      timeSince@now 0034                    __pstringtext10 28D6  
                  __pstringtext11 0000            __size_of_pushButtonISR 0034                          isdigit@c 0020  
                     ??_menuInput 002C                  ?_OLED_write4bits 0070                          intlevel1 0000  
                       sprintf@ap 014F                          isspace@c 0020                 __CFG_CLKOUTEN$OFF 0000  
                       strcpy@src 0020                          isupper@c 0020                        _OLED_write 2152  
                       strncmp@_l 0026                         strncmp@_r 0020                         strncpy@cp 0075  
           __end_of_OLED_print_xy 245D                       ??_timeSince 0028                       efgtoa@nmode 00CE  
                     ??_vfpfcnvrt 00EA                      getRotDir@ret 0021                          stoa@nuls 002D  
                   _vfpfcnvrt$950 0124                     _vfpfcnvrt$945 0120                     _vfpfcnvrt$946 0122  
                   __pstringtext1 2800                     __pstringtext2 284D                     __pstringtext3 287E  
                   __pstringtext4 28A8                     __pstringtext5 28B9                     __pstringtext6 28C6  
                   __pstringtext7 28CA                     __pstringtext8 28CE                     __pstringtext9 28D2  
          __Umul8_16@multiplicand 0020         __size_of_handleSensorData 005C                          sprintf@f 0150  
                    showMenu@page 01EE                          tolower@c 0026                          sprintf@s 014E  
                    showMenu@menu 01EF            __size_of___fpclassifyf 0083                          strncmp@l 0029  
                        strncmp@n 0022                          strncmp@r 0027                          strncpy@d 0074  
                        strncpy@n 0071                          strncpy@s 0070                     ___fladd@signs 005C  
__size_of_OLED_scrollDisplayRight 0005                      ___fladd@aexp 005D                      ___fladd@bexp 005E  
            __Umul8_16@multiplier 0028                 __Umul8_16@product 0024  
